{"d56f2372": [[0.273995593168007, "def solve_7f37d928(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, T, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.2743476810143477, "def solve_7aa34db2(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, size)\n    O = subgrid(x2, I)\n    return O"], [0.29706172839506173, "def solve_66832f92(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x24, x27)\n    O = paint(x14, x28)\n    return O"], [0.29706172839506173, "def solve_f0c03153(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.29706172839506173, "def solve_7b94c557(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.3040587683921017, "def solve_26545380(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [0.3040587683921017, "def solve_0e1d4e9d(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [0.3346827117477524, "def solve_25b103bb(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_1d3f67c1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_5c29d6b4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_cc6b1256(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_02507b7d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_6c48d8d6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_93633735(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_645e4142(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_9b41408b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_8d319fd4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_e4f6a1d0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_79af4174(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_6c16c983(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_5d301448(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_e3c704de(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.39591901174509864, "def solve_6b6e8942(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(shoot, UNITY)\n    x3 = compose(x2, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    x6 = astuple(SIX, SIX)\n    x7 = canvas(ZERO, x6)\n    O = paint(x7, x5)\n    return O"], [0.41699831998382725, "def solve_f695995e(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.41699831998382725, "def solve_96dec7e5(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.41699831998382725, "def solve_5fba575c(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.4204508671590131, "def solve_1f82c158(I):\n    x1 = objects(I, T, F, F)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = lbind(sfilter, x3)\n    x5 = lbind(matcher, identity)\n    x6 = chain(size, x4, x5)\n    x7 = matcher(x6, ONE)\n    x8 = sfilter(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmax(x8, x9)\n    x11 = matcher(color, x10)\n    x12 = extract(x1, x11)\n    O = subgrid(x12, I)\n    return O"], [0.47145600561542583, "def solve_e0c62ccf(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.47145600561542583, "def solve_88a00128(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.4725027588082295, "def solve_6ba382f0(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.4725027588082295, "def solve_247b0302(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.4725027588082295, "def solve_556ddb48(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.4725027588082295, "def solve_187718e9(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.4725027588082295, "def solve_01e6a6b9(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.4725027588082295, "def solve_a4fad10f(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.4744327528950218, "def solve_b1cfede5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, F, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.4744327528950218, "def solve_37b0bc2f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, F, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.47691676185236953, "def solve_dc6177ee(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.49325354355789136, "def solve_900eec46(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = astuple(ONE, THREE)\n    x8 = size(x6)\n    x9 = order(x6, leftmost)\n    x10 = apply(color, x9)\n    x11 = rbind(canvas, UNITY)\n    x12 = apply(x11, x10)\n    x13 = merge(x12)\n    x14 = dmirror(x13)\n    x15 = subtract(NINE, x8)\n    x16 = astuple(ONE, x15)\n    x17 = mostcolor(I)\n    x18 = canvas(x17, x16)\n    x19 = hconcat(x14, x18)\n    x20 = hsplit(x19, THREE)\n    x21 = merge(x20)\n    x22 = crop(x21, ORIGIN, x7)\n    x23 = crop(x21, DOWN, x7)\n    x24 = crop(x21, TWO_BY_ZERO, x7)\n    x25 = vmirror(x23)\n    x26 = vconcat(x22, x25)\n    O = vconcat(x26, x24)\n    return O"], [0.49704719435154215, "def solve_5bd2a00f(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_e26d2c5d(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_bce5bbe4(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_75fe2e14(I):\n    x1 = mostcolor(I)\n    O = canvas(x1, THREE_BY_THREE)\n    return O"], [0.49704719435154215, "def solve_5ec36bb5(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5029253587227037, "def solve_6165579d(I):\n    x1 = palette(I)\n    x2 = frontiers(I)\n    x3 = sfilter(x2, vline)\n    x4 = difference(x1, x3)\n    x5 = astuple(x4, x3)\n    x6 = apply(size, x5)\n    x7 = increment(x6)\n    O = canvas(ZERO, x7)\n    return O"], [0.5056030890741036, "def solve_41420e20(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.5056030890741036, "def solve_9868614a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.5056030890741036, "def solve_736837d0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.5056030890741036, "def solve_5d3dc232(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.5056030890741036, "def solve_870358ef(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.5056030890741036, "def solve_42430b00(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.5111763060673108, "def solve_539a42de(I):\n    x1 = shape(I)\n    x2 = index(I, ORIGIN)\n    x3 = colorcount(I, ZERO)\n    x4 = decrement(x1)\n    x5 = positive(x3)\n    x6 = branch(x5, x4, x1)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = width(x7)\n    x9 = astuple(ONE, x8)\n    x10 = crop(x7, ORIGIN, x9)\n    x11 = vupscale(x10, x8)\n    x12 = dmirror(x11)\n    x13 = hconcat(x7, x11)\n    x14 = hconcat(x12, x7)\n    x15 = vconcat(x13, x14)\n    x16 = asobject(x15)\n    x17 = multiply(UNITY, TEN)\n    x18 = canvas(x2, x17)\n    O = paint(x18, x16)\n    return O"], [0.5130794983512649, "def solve_12c267fd(I):\n    x1 = mostcolor(I)\n    x2 = frontiers(I)\n    x3 = sfilter(x2, vline)\n    x4 = difference(x2, x3)\n    x5 = astuple(x4, x3)\n    x6 = apply(size, x5)\n    x7 = increment(x6)\n    O = canvas(x1, x7)\n    return O"], [0.5307798906710026, "def solve_cd5373c4(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5517057931526622, "def solve_d827ad72(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = merge(x2)\n    O = subgrid(x3, I)\n    return O"], [0.5585024261811583, "def solve_ae7b0a55(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5585024261811583, "def solve_070aff51(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5585024261811583, "def solve_7528b41c(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5585024261811583, "def solve_eaa8f01b(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5585024261811583, "def solve_070f3512(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5585024261811583, "def solve_abf671a3(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5585024261811583, "def solve_56b770bc(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5652441058672942, "def solve_9e49776d(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.5652441058672942, "def solve_dc3280e1(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.5652441058672942, "def solve_66877ab0(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.5766800033031917, "def solve_57ab93bd(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(equality, toindices, box)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = argmax(x3, x4)\n    x6 = fgpartition(I)\n    x7 = merge(x6)\n    x8 = difference(x7, x5)\n    x9 = subgrid(x5, I)\n    x10 = subgrid(x8, I)\n    x11 = height(x9)\n    x12 = subtract(x11, TWO)\n    x13 = height(x10)\n    x14 = divide(x12, x13)\n    x15 = width(x9)\n    x16 = subtract(x15, TWO)\n    x17 = width(x10)\n    x18 = divide(x16, x17)\n    x19 = hupscale(x10, x18)\n    x20 = vupscale(x19, x14)\n    x21 = asobject(x20)\n    x22 = shift(x21, UNITY)\n    O = paint(x9, x22)\n    return O"], [0.5825345389983071, "def solve_961115b4(I):\n    O = canvas(FIVE, TWO_BY_TWO)\n    return O"], [0.6016750389108988, "def solve_2b8ee24d(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.6181018953185965, "def solve_39184cba(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_8c5da067(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_6e43647a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_890c43eb(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_2df22367(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_852d4cc7(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_9e86f565(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_8d28df06(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_4eda6654(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6291436647232063, "def solve_4b257341(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_0a331e97(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_e967283b(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_f369af48(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_7a7449a1(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_f487fb6c(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_0b679412(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.6291436647232063, "def solve_0a068c72(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.6291436647232063, "def solve_891b2494(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.6291436647232063, "def solve_6b6a3bd5(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_6da73910(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_d188f008(I):\n    O = tophalf(I)\n    return O"], [0.6291436647232063, "def solve_a977791b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.6416977053214553, "def solve_e195ca94(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.6416977053214553, "def solve_4de87cb6(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.6416977053214553, "def solve_ce35297d(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.6450704353201521, "def solve_09c12e0c(I):\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = shape(x23)\n    x33 = canvas(x28, x32)\n    O = fill(x33, THREE, x31)\n    return O"], [0.6602138625163511, "def solve_1207b8fa(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6602138625163511, "def solve_0e475294(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6602138625163511, "def solve_629ce595(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6602138625163511, "def solve_64fe43b9(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6602138625163511, "def solve_1175a4b6(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6602138625163511, "def solve_8969f02f(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6605108990960981, "def solve_e450ca93(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = objects(x2, T, F, T)\n    x4 = merge(x3)\n    O = paint(x1, x4)\n    return O"], [0.6624893203432826, "def solve_d7aac698(I):\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    O = replace(x3, ONE, ZERO)\n    return O"], [0.6662146786568869, "def solve_3130e0e3(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, vline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = combine(x15, x16)\n    x18 = intersection(x15, x16)\n    x19 = difference(x17, x18)\n    O = fill(x14, THREE, x19)\n    return O"], [0.6674861298852472, "def solve_a49bfacd(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = mostcolor(I)\n    O = replace(x3, x4, ZERO)\n    return O"], [0.6703093706701909, "def solve_185fd8aa(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = equality(x1, ONE)\n    x3 = branch(x2, vsplit, hsplit)\n    x4 = x3(I, TWO)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = palette(x5)\n    x8 = palette(x6)\n    x9 = intersection(x7, x8)\n    x10 = first(x9)\n    x11 = shape(x5)\n    x12 = canvas(x10, x11)\n    x13 = ofcolor(x5, x10)\n    x14 = ofcolor(x6, x10)\n    x15 = intersection(x13, x14)\n    O = fill(x12, TWO, x15)\n    return O"], [0.6703093706701909, "def solve_7fb621e4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = ofcolor(x1, ZERO)\n    x4 = ofcolor(x2, ZERO)\n    x5 = intersection(x3, x4)\n    x6 = shape(x1)\n    x7 = canvas(ZERO, x6)\n    O = fill(x7, THREE, x5)\n    return O"], [0.697390485086972, "def solve_bd3e336c(I):\n    x1 = replace(I, SEVEN, ZERO)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [0.6978401405853463, "def solve_9984774e(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.6978401405853463, "def solve_8c34366a(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.6987437235862725, "def solve_74b5a91c(I):\n    O = trim(I)\n    return O"], [0.6987437235862725, "def solve_ce10c588(I):\n    O = trim(I)\n    return O"], [0.7209610573661548, "def solve_fa82e118(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.7209610573661548, "def solve_4e852de1(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.7248454398357552, "def solve_032ac5d0(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = lbind(colorcount, I)\n    x5 = argmin(x3, x4)\n    x6 = ofcolor(I, x1)\n    x7 = ofcolor(I, x5)\n    x8 = combine(x6, x7)\n    x9 = mapply(neighbors, x8)\n    x10 = difference(x9, x8)\n    x11 = toobject(x10, I)\n    x12 = leastcolor(x11)\n    x13 = ofcolor(I, x1)\n    x14 = first(x13)\n    x15 = initset(x14)\n    x16 = objects(I, T, F, F)\n    x17 = colorfilter(x16, x12)\n    x18 = lbind(adjacent, x8)\n    x19 = mfilter(x17, x18)\n    x20 = toindices(x19)\n    x21 = rbind(manhattan, x15)\n    x22 = chain(even, x21, initset)\n    x23 = sfilter(x20, x22)\n    x24 = fill(I, x5, x20)\n    O = fill(x24, x1, x23)\n    return O"], [0.7251105471251788, "def solve_3312c412(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = fork(subtract, first, last)\n    x4 = fork(multiply, sign, identity)\n    x5 = compose(x4, x3)\n    x6 = lbind(greater, THREE)\n    x7 = chain(x6, maximum, x5)\n    x8 = lbind(lbind, astuple)\n    x9 = rbind(chain, x8)\n    x10 = lbind(compose, x7)\n    x11 = rbind(x9, x10)\n    x12 = lbind(lbind, sfilter)\n    x13 = compose(x11, x12)\n    x14 = lbind(mapply, backdrop)\n    x15 = fork(apply, x13, identity)\n    x16 = compose(x14, x15)\n    x17 = power(x16, TWO)\n    x18 = x17(x2)\n    x19 = fill(I, FOUR, x18)\n    O = replace(x19, x1, ZERO)\n    return O"], [0.7253714992428528, "def solve_7b6228f0(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.7265166129217103, "def solve_2e865a66(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.728049799593843, "def solve_e43f175a(I):\n    O = replace(I, FOUR, ZERO)\n    return O"], [0.7289045042337138, "def solve_0f68bba5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.7299633237079567, "def solve_b8b499a4(I):\n    x1 = astuple(SIX, TWO)\n    x2 = astuple(TWO, ONE)\n    x3 = initset(x2)\n    x4 = insert(ORIGIN, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    O = fill(I, FOUR, x12)\n    return O"], [0.7320721684772659, "def solve_c02efb3c(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = ofcolor(I, ZERO)\n    x4 = astuple(x1, ONE)\n    x5 = crop(I, ORIGIN, x4)\n    x6 = hupscale(x5, x2)\n    O = fill(x6, ZERO, x3)\n    return O"], [0.7328950067132097, "def solve_f5ef6376(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.7328950067132097, "def solve_543a375e(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.7361102977736663, "def solve_a13a7d93(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = astuple(SIX, THREE)\n    x6 = astuple(FOUR, EIGHT)\n    x7 = astuple(ONE, TWO)\n    x8 = initset(x5)\n    x9 = insert(x6, x8)\n    x10 = insert(x7, x9)\n    x11 = mapply(x4, x10)\n    O = paint(I, x11)\n    return O"], [0.739396261410893, "def solve_8b58cd8a(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.739396261410893, "def solve_36e1ded9(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.739396261410893, "def solve_23b94ede(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.739396261410893, "def solve_6ad1ebb7(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, TWO, x3)\n    return O"], [0.7410390952301974, "def solve_11016dbe(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.7410390952301974, "def solve_023adeef(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.7411341780448716, "def solve_544cb80e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7411341780448716, "def solve_c80046b2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7411341780448716, "def solve_cce5466f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7411341780448716, "def solve_5440fe70(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7411341780448716, "def solve_20049e0c(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7414217191724711, "def solve_80edc6b5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7414345790655789, "def solve_a6eeb15b(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = apply(color, x3)\n    x5 = rbind(contained, x4)\n    x6 = compose(x5, color)\n    x7 = sfilter(x2, x6)\n    x8 = lbind(colorfilter, x3)\n    x9 = chain(first, x8, color)\n    x10 = fork(gravitate, identity, x9)\n    x11 = fork(shift, identity, x10)\n    x12 = mapply(x11, x7)\n    x13 = merge(x2)\n    x14 = cover(I, x13)\n    O = paint(x14, x12)\n    return O"], [0.7414654147115858, "def solve_055f497a(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_408dc8c5(I):\n    x1 = partition(I)\n    x2 = fork(recolor, color, backdrop)\n    x3 = apply(x2, x1)\n    x4 = mfilter(x3, hline)\n    x5 = mfilter(x3, vline)\n    x6 = paint(I, x4)\n    O = paint(x6, x5)\n    return O"], [0.7414654147115858, "def solve_5c37f680(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_24189f94(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_a8768dfc(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_4828dc5b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_e87e12e5(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_2cc917c3(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.7414654147115858, "def solve_e811b287(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = astuple(TWO, FOUR)\n    x4 = rbind(contained, x3)\n    x5 = compose(x4, first)\n    x6 = rbind(sfilter, x5)\n    x7 = lbind(rbind, subtract)\n    x8 = lbind(occurrences, I)\n    x9 = lbind(lbind, shift)\n    x10 = compose(x7, ulcorner)\n    x11 = chain(x10, x6, normalize)\n    x12 = chain(x8, x6, normalize)\n    x13 = fork(apply, x11, x12)\n    x14 = compose(x9, normalize)\n    x15 = fork(mapply, x14, x13)\n    x16 = astuple(cmirror, dmirror)\n    x17 = astuple(hmirror, vmirror)\n    x18 = combine(x16, x17)\n    x19 = product(x18, x18)\n    x20 = fork(compose, first, last)\n    x21 = apply(x20, x19)\n    x22 = totuple(x21)\n    x23 = combine(x18, x22)\n    x24 = rapply(x23, x2)\n    x25 = mapply(x15, x24)\n    O = paint(I, x25)\n    return O"], [0.7414654147115858, "def solve_dbd3d9f2(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_b32e4eb3(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_f76a37c9(I):\n    x1 = palette(I)\n    x2 = remove(FIVE, x1)\n    x3 = first(x2)\n    x4 = ofcolor(I, x3)\n    x5 = fill(I, ZERO, x4)\n    x6 = ofcolor(I, FIVE)\n    O = fill(x5, x3, x6)\n    return O"], [0.7414654147115858, "def solve_6458773b(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = subgrid(x2, I)\n    return O"], [0.7414654147115858, "def solve_12247c29(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_3a5fa930(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_75c2d520(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7414654147115858, "def solve_6beed481(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = fill(I, x8, x32)\n    return O"], [0.7414654147115858, "def solve_aefecaed(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7414654147115858, "def solve_72ab5ce8(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, TWO)\n    x3 = mfilter(x1, x2)\n    x4 = matcher(size, THREE)\n    x5 = mfilter(x1, x4)\n    x6 = matcher(size, FOUR)\n    x7 = mfilter(x1, x6)\n    x8 = fill(I, THREE, x3)\n    x9 = fill(x8, TWO, x5)\n    O = fill(x9, ONE, x7)\n    return O"], [0.7414654147115858, "def solve_f6e580bc(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_551325c9(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = fork(equality, identity, size)\n    x5 = mfilter(x3, x4)\n    O = fill(I, FOUR, x5)\n    return O"], [0.7414702872025712, "def solve_aebc9b9a(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = astuple(x1, ONE)\n    x8 = astuple(x2, ONE)\n    x9 = decrement(x1)\n    x10 = decrement(x2)\n    x11 = toivec(x10)\n    x12 = tojvec(x9)\n    x13 = crop(I, x11, x8)\n    x14 = crop(I, x12, x7)\n    x15 = asobject(x14)\n    x16 = asobject(x13)\n    x17 = vperiod(x15)\n    x18 = hperiod(x16)\n    x19 = astuple(x17, x18)\n    x20 = lbind(multiply, x19)\n    x21 = neighbors(ORIGIN)\n    x22 = mapply(neighbors, x21)\n    x23 = apply(x20, x22)\n    x24 = lbind(shift, x6)\n    x25 = mapply(x24, x23)\n    O = paint(I, x25)\n    return O"], [0.7418642138333315, "def solve_c583e66c(I):\n    O = switch(I, EIGHT, TWO)\n    return O"], [0.7419294883893283, "def solve_85141ce4(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_c81221e6(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_94207012(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_fa794840(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_a44b4e05(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7420260064287781, "def solve_0f779890(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.7424392989833423, "def solve_5ee950a8(I):\n    x1 = objects(I, T, F, T)\n    x2 = ofcolor(I, THREE)\n    x3 = sizefilter(x1, ONE)\n    x4 = rbind(vmatching, x2)\n    x5 = rbind(hmatching, x2)\n    x6 = fork(either, x4, x5)\n    x7 = sfilter(x3, x6)\n    x8 = rbind(gravitate, x2)\n    x9 = fork(add, center, x8)\n    x10 = fork(connect, center, x9)\n    x11 = fork(recolor, color, x10)\n    x12 = mapply(x11, x7)\n    O = paint(I, x12)\n    return O"], [0.7424486197279571, "def solve_98beb5f3(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = chain(size, dedupe, first)\n    x9 = matcher(x8, ONE)\n    x10 = compose(first, cmirror)\n    x11 = chain(size, dedupe, x10)\n    x12 = matcher(x11, ONE)\n    x13 = fork(both, x9, x12)\n    x14 = rbind(rapply, I)\n    x15 = compose(initset, first)\n    x16 = chain(first, x14, x15)\n    x17 = compose(x13, x16)\n    x18 = extract(x7, x17)\n    x19 = first(x18)\n    x20 = last(x18)\n    x21 = x19(I)\n    x22 = width(x21)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = index(x21, x24)\n    x26 = asobject(x21)\n    x27 = matcher(first, x25)\n    x28 = compose(flip, x27)\n    x29 = sfilter(x26, x28)\n    x30 = hperiod(x29)\n    x31 = width(x21)\n    x32 = increment(x31)\n    x33 = interval(ZERO, x32, x30)\n    x34 = apply(tojvec, x33)\n    x35 = lbind(shift, x29)\n    x36 = mapply(x35, x34)\n    x37 = paint(x21, x36)\n    O = x20(x37)\n    return O"], [0.7426154889655164, "def solve_f95a5994(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, EIGHT, x4)\n    return O"], [0.7426154889655164, "def solve_65aeaea9(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply( neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, EIGHT, x4)\n    return O"], [0.7426909638249383, "def solve_20703c94(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7426909638249383, "def solve_75882916(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7426909638249383, "def solve_de631d8a(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7426909638249383, "def solve_0200d9ec(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7431405677298083, "def solve_61c9642c(I):\n    x1 = vmirror(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = toindices(x3)\n    x5 = sizefilter(x2, ONE)\n    x6 = apply(initset, x4)\n    x7 = lbind(argmin, x6)\n    x8 = lbind(rbind, manhattan)\n    x9 = compose(x7, x8)\n    x10 = fork(recolor, color, x9)\n    x11 = mapply(x10, x5)\n    x12 = merge(x5)\n    x13 = cover(I, x12)\n    O = paint(x13, x11)\n    return O"], [0.7432816113934484, "def solve_3287d2ac(I):\n    x1 = ofcolor(I, EIGHT)\n    x2 = delta(x1)\n    O = fill(I, THREE, x2)\n    return O"], [0.7432940405535233, "def solve_dc24b772(I):\n    x1 = ofcolor(I, ONE)\n    x2 = crop(I, ORIGIN, THREE_BY_THREE)\n    x3 = asobject(x2)\n    x4 = lbind(shift, x3)\n    x5 = compose(x4, decrement)\n    x6 = mapply(x5, x1)\n    O = paint(I, x6)\n    return O"], [0.743417242412885, "def solve_af05c8b7(I):\n    x1 = fork(multiply, height, width)\n    x2 = partition(I)\n    x3 = argmax(x2, x1)\n    x4 = remove(x3, x2)\n    x5 = argmax(x4, x1)\n    x6 = other(x4, x5)\n    x7 = palette(I)\n    x8 = lrcorner(x5)\n    x9 = add(x8, UNITY)\n    x10 = llcorner(x5)\n    x11 = add(x10, DOWN_LEFT)\n    x12 = urcorner(x5)\n    x13 = add(x12, UP_RIGHT)\n    x14 = ulcorner(x5)\n    x15 = add(x14, NEG_UNITY)\n    x16 = shoot(x9, UNITY)\n    x17 = shoot(x11, DOWN_LEFT)\n    x18 = shoot(x13, UP_RIGHT)\n    x19 = shoot(x15, NEG_UNITY)\n    x20 = combine(x16, x17)\n    x21 = combine(x18, x19)\n    x22 = combine(x20, x21)\n    x23 = color(x6)\n    O = fill(I, x23, x22)\n    return O"], [0.7440821897450863, "def solve_8793aff7(I):\n    x1 = asindices(I)\n    x2 = objects(I, T, F, T)\n    x3 = fork(multiply, sign, identity)\n    x4 = lbind(apply, x3)\n    x5 = chain(even, maximum, x4)\n    x6 = lbind(sfilter, x1)\n    x7 = fork(add, first, last)\n    x8 = rbind(remove, x2)\n    x9 = compose(center, last)\n    x10 = fork(subtract, first, x9)\n    x11 = compose(x5, x10)\n    x12 = lbind(rbind, equality)\n    x13 = lbind(argmin, x2)\n    x14 = chain(x7, x4, x10)\n    x15 = lbind(lbind, astuple)\n    x16 = lbind(rbind, astuple)\n    x17 = lbind(compose, x11)\n    x18 = lbind(compose, x14)\n    x19 = compose(x18, x15)\n    x20 = compose(x18, x16)\n    x21 = compose(x13, x19)\n    x22 = rbind(compose, x21)\n    x23 = lbind(lbind, valmin)\n    x24 = rbind(compose, x19)\n    x25 = chain(x24, x23, x8)\n    x26 = lbind(fork, greater)\n    x27 = fork(x26, x25, x20)\n    x28 = chain(x6, x17, x16)\n    x29 = chain(x6, x22, x12)\n    x30 = fork(intersection, x28, x29)\n    x31 = compose(x6, x27)\n    x32 = fork(intersection, x30, x31)\n    x33 = fork(recolor, color, x32)\n    x34 = mapply(x33, x2)\n    O = paint(I, x34)\n    return O"], [0.7443045776955346, "def solve_d4d2d11a(I):\n    x1 = ofcolor(I, ONE)\n    x2 = ofcolor(I, TWO)\n    x3 = mapply(neighbors, x1)\n    x4 = mapply(neighbors, x2)\n    x5 = fill(I, SEVEN, x3)\n    O = fill(x5, FOUR, x4)\n    return O"], [0.744309578111282, "def solve_02b96647(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.744309578111282, "def solve_dea4fe77(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.7453281977266278, "def solve_427db87f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = height(x2)\n    x4 = halve(x3)\n    x5 = width(x2)\n    x6 = halve(x5)\n    x7 = ulcorner(x2)\n    x8 = lrcorner(x2)\n    x9 = shape(I)\n    x10 = maximum(x9)\n    x11 = multiply(THREE, TEN)\n    x12 = interval(ZERO, x11, ONE)\n    x13 = rbind(multiply, x4)\n    x14 = apply(x13, x12)\n    x15 = rbind(multiply, x6)\n    x16 = apply(x15, x12)\n    x17 = pair(x14, x16)\n    x18 = rbind(add, x7)\n    x19 = apply(invert, x17)\n    x20 = apply(x18, x19)\n    x21 = rbind(add, x8)\n    x22 = apply(x21, x17)\n    x23 = pair(x20, x22)\n    x24 = mapply(box, x23)\n    O = fill(I, x1, x24)\n    return O"], [0.7454776898542618, "def solve_a36ededf(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.7461098366866447, "def solve_d99dc4eb(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = rbind(multiply, THREE)\n    x6 = rbind(divide, THREE)\n    x7 = compose(x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = toindices(x4)\n    x10 = compose(x8, last)\n    x11 = sfilter(x9, x10)\n    O = fill(I, SIX, x11)\n    return O"], [0.7462669862994846, "def solve_c00e3492(I):\n    O = dmirror(I)\n    return O"], [0.7462669862994846, "def solve_84df7074(I):\n    O = dmirror(I)\n    return O"], [0.7462669862994846, "def solve_d59526cf(I):\n    O = dmirror(I)\n    return O"], [0.7463344993179589, "def solve_a581fe24(I):\n    x1 = shape(I)\n    x2 = canvas(ZERO, x1)\n    x3 = hconcat(I, x2)\n    x4 = objects(x3, F, F, T)\n    x5 = argmin(x4, size)\n    x6 = ulcorner(x5)\n    x7 = llcorner(x5)\n    x8 = shoot(x6, NEG_UNITY)\n    x9 = shoot(x6, UNITY)\n    x10 = shoot(x7, DOWN_LEFT)\n    x11 = shoot(x7, UP_RIGHT)\n    x12 = combine(x8, x9)\n    x13 = combine(x10, x11)\n    x14 = combine(x12, x13)\n    x15 = underfill(I, THREE, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = colorfilter(x16, 18656)\n    x18 = rbind(bordering, I)\n    x19 = mfilter(x17, x18)\n    O = cover(x15, x19)\n    return O"], [0.7464740545096182, "def solve_4a956a12(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_99657942(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_f315413b(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_983a0b3f(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_29547386(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_95ad7653(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_45b6463a(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_49e873ea(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_7d7edbe6(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_f9ad95a9(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7465554128518229, "def solve_87528bbb(I):\n    x1 = palette(I)\n    x2 = intersection(x1, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = astuple(ONE, x4)\n    x6 = size(x5)\n    x7 = decrement(x6)\n    x8 = tojvec(x7)\n    x9 = shoot(x8, UNITY)\n    O = fill(I, x4, x9)\n    return O"], [0.7470375666629149, "def solve_a89ab96a(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, ONE, x6)\n    return O"], [0.7476233794761621, "def solve_dab511d6(I):\n    O = rot180(I)\n    return O"], [0.7476233794761621, "def solve_ce10cc7d(I):\n    O = rot180(I)\n    return O"], [0.7480983828045926, "def solve_8f0cbf2f(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, last)\n    x5 = fork(recolor, first, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [0.7480983828045926, "def solve_f3c70214(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, last)\n    x5 = fork(recolor, first, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [0.7481170341881848, "def solve_ba340321(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7481170341881848, "def solve_04739150(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7481170341881848, "def solve_01a1007f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x22 = invert(x11)\n    x23 = shift(x9, x22)\n    x24 = lbind(shift, x23)\n    x25 = mapply(x24, x8)\n    O = paint(I, x25)\n    return O"], [0.7481170341881848, "def solve_c2e0b3c6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7481170341881848, "def solve_d48b6367(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7481170341881848, "def solve_1dceb5ce(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7481170341881848, "def solve_53819502(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7481170341881848, "def solve_b07e2ab3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7482565735643151, "def solve_43335764(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_ef01b039(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_1ab6b3bd(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_f713e082(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_6bfe2952(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_6b8a7e73(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_f62371d1(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_6aa06a09(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_86f6fc77(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7484974551407092, "def solve_aa4ae39f(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.7484974551407092, "def solve_ccc58bde(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.7485427567125599, "def solve_6c50b4fd(I):\n    O = vmirror(I)\n    return O"], [0.7487022635082722, "def solve_819cd5fa(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.7487022635082722, "def solve_ee932955(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.7491103860227947, "def solve_485a70ea(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot270(I)\n    return O"], [0.749321253046244, "def solve_c5ec41c9(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.749321253046244, "def solve_eb89440f(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.7498499462550435, "def solve_1d9baa90(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.7498499462550435, "def solve_3ecc723d(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.7498847791973963, "def solve_839eb872(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.7498847791973963, "def solve_eb1677f4(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.7498847791973963, "def solve_a8b57165(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.7499734228790494, "def solve_c48c4ae2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, SEVEN, x2)\n    return O"], [0.7516087933992682, "def solve_a7886267(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.7516087933992682, "def solve_a79af328(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.7516087933992682, "def solve_a8ee5901(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.7518753424364076, "def solve_16b0fcd3(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7518753424364076, "def solve_40925569(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7528192761788682, "def solve_6c25945c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = delta(x2)\n    O = fill(I, FOUR, x3)\n    return O"], [0.7529753249444425, "def solve_e9db1696(I):\n    O = replace(I, EIGHT, ONE)\n    return O"], [0.7588892456530311, "def solve_22e3fdc7(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = apply(toindices, x6)\n    x8 = rbind(shoot, RIGHT)\n    x9 = compose(x8, center)\n    x10 = fork(recolor, color, x9)\n    x11 = mapply(x10, x6)\n    x12 = paint(I, x11)\n    x13 = width(I)\n    x14 = interval(ZERO, x13, ONE)\n    x15 = apply(double, x14)\n    x16 = apply(increment, x15)\n    x17 = apply(tojvec, x16)\n    x18 = prapply(shift, x7, x17)\n    x19 = merge(x18)\n    O = fill(x12, FIVE, x19)\n    return O"], [0.7589610573661547, "def solve_bd4d6cdd(I):\n    x1 = compose(positive, size)\n    x2 = rbind(sfilter, hline)\n    x3 = chain(x1, x2, frontiers)\n    x4 = chain(size, dedupe, first)\n    x5 = chain(size, dedupe, last)\n    x6 = fork(greater, x4, x5)\n    x7 = fork(both, x3, x6)\n    x8 = astuple(identity, rot90)\n    x9 = astuple(rot180, rot270)\n    x10 = combine(x8, x9)\n    x11 = astuple(identity, rot270)\n    x12 = astuple(rot180, rot90)\n    x13 = combine(x11, x12)\n    x14 = pair(x10, x13)\n    x15 = rbind(rapply, I)\n    x16 = compose(initset, first)\n    x17 = chain(first, x15, x16)\n    x18 = compose(x7, x17)\n    x19 = extract(x14, x18)\n    x20 = first(x19)\n    x21 = last(x19)\n    x22 = x20(I)\n    x23 = first(x22)\n    x24 = repeat(x23, ONE)\n    x25 = dmirror(x24)\n    x26 = width(x22)\n    x27 = hupscale(x25, x26)\n    x28 = asobject(x27)\n    x29 = height(x22)\n    x30 = height(x28)\n    x31 = interval(ZERO, x29, x30)\n    x32 = lbind(shift, x28)\n    x33 = apply(toivec, x31)\n    x34 = mapply(x32, x33)\n    x35 = shift(x34, TWO_BY_ZERO)\n    x36 = paint(x22, x35)\n    O = x21(x36)\n    return O"], [0.7598499462550435, "def solve_77312294(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.765232341637439, "def solve_ef4d04c0(I):\n    x1 = fork(multiply, height, width)\n    x2 = lbind(ofcolor, I)\n    x3 = palette(I)\n    x4 = compose(x1, x2)\n    x5 = argmax(x3, x4)\n    x6 = leastcolor(I)\n    x7 = palette(I)\n    x8 = remove(x5, x7)\n    x9 = other(x8, x6)\n    x10 = replace(I, x6, x5)\n    O = replace(x10, x9, x6)\n    return O"], [0.770283578319142, "def solve_344dccf6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.770283578319142, "def solve_768e4d1b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.770283578319142, "def solve_548062c3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.770283578319142, "def solve_277585dd(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.770283578319142, "def solve_170f9c6c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.770283578319142, "def solve_337318ba(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7790633012367362, "def solve_92216082(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7829819910175547, "def solve_5703d54b(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.7829819910175547, "def solve_e4684d06(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.7829819910175547, "def solve_f342d34d(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.7871062946758173, "def solve_3b476d40(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, vmirror, hmirror)\n    x9 = x8(x6)\n    x10 = branch(x7, leftmost, uppermost)\n    x11 = branch(x7, tojvec, toivec)\n    x12 = x10(x5)\n    x13 = x10(x6)\n    x14 = greater(x12, x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = x11(x16)\n    x18 = shape(x6)\n    x19 = multiply(x17, x18)\n    x20 = shift(x9, x19)\n    x21 = fill(I, THREE, x3)\n    O = paint(x21, x20)\n    return O"], [0.7871062946758173, "def solve_2d6e03b3(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, vmirror, hmirror)\n    x9 = x8(x6)\n    x10 = branch(x7, leftmost, uppermost)\n    x11 = branch(x7, tojvec, toivec)\n    x12 = x10(x5)\n    x13 = x10(x6)\n    x14 = greater(x12, x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = x11(x16)\n    x18 = shape(x6)\n    x19 = multiply(x17, x18)\n    x20 = shift(x9, x19)\n    x21 = fill(I, THREE, x3)\n    O = paint(x21, x20)\n    return O"], [0.7871062946758173, "def solve_c20390de(I):\n    O = replace(I, ZERO, TWO)\n    return O"], [0.7871062946758173, "def solve_3d4cd62c(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, vmirror, hmirror)\n    x9 = x8(x6)\n    x10 = branch(x7, leftmost, uppermost)\n    x11 = branch(x7, tojvec, toivec)\n    x12 = x10(x5)\n    x13 =x10(x6)\n    x14 = greater(x12, x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = x11(x16)\n    x18 = shape(x6)\n    x19 = multiply(x17, x18)\n    x20 = shift(x9, x19)\n    x21 = fill(I, THREE, x3)\n    O = paint(x21, x20)\n    return O"], [1.0, "def solve_c69d1fc7(I):\n    x1 = ofcolor(I, TWO)\n    x2 = vline(x1)\n    x3 = branch(x2, dmirror, identity)\n    x4 = x3(I)\n    x5 = fgpartition(x4)\n    x6 = matcher(color, TWO)\n    x7 = compose(flip, x6)\n    x8 = extract(x5, x7)\n    x9 = ofcolor(x4, TWO)\n    x10 = leftmost(x9)\n    x11 = leftmost(x8)\n    x12 = greater(x10, x11)\n    x13 = manhattan(x8, x9)\n    x14 = decrement(x13)\n    x15 = branch(x12, identity, invert)\n    x16 = branch(x12, decrement, increment)\n    x17 = branch(x12, leftmost, rightmost)\n    x18 = x15(x14)\n    x19 = tojvec(x18)\n    x20 = shift(x8, x19)\n    x21 = x17(x20)\n    x22 = x16(x21)\n    x23 = tojvec(x22)\n    x24 = vfrontier(x23)\n    x25 = cover(x4, x8)\n    x26 = paint(x25, x20)\n    x27 = fill(x26, EIGHT, x24)\n    O = x3(x27)\n    return O"], [1.0, "def solve_b8ed7fd3(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = x2(I, TWO)\n    x4 = argmin(x3, numcolors)\n    x5 = argmax(x3, numcolors)\n    x6 = width(x5)\n    x7 = rbind(repeat, x6)\n    x8 = chain(dmirror, merge, x7)\n    x9 = upscale(x4, x6)\n    x10 = x8(x4)\n    x11 = x8(x10)\n    x12 = ofcolor(x11, ZERO)\n    O = fill(x9, ZERO, x12)\n    return O"], [1.0, "def solve_742af85d(I):\n    x1 = index(I, ORIGIN)\n    x2 = recolor(d511, x1)\n    x3 = apply(double, x2)\n    x4 = frontiers(x3)\n    x5 = merge(x4)\n    x6 = NEG_UNITY(x5)\n    x7 = shift(x5, x6)\n    x8 = recolor(x1, x7)\n    x9 = lbind(shift, x8)\n    x10 = mapply(x9, x3)\n    O = paint(I, x10)\n    return O"], [1.0, "def solve_addd792a(I):\n    x1 =alde4(I)\n    x2 = interval(ZERO, NINE, ONE)\n    x3 = apply(double, x2)\n    x4 = apply(width, x3)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x5, x6)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x5)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x2)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [1.0, "def solve_840e2fdb(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = compose(double, halve)\n    x5 = fork(equality, identity, x4)\n    x6 = compose(x5, last)\n    x7 = sfilter(x3, x6)\n    x8 = fork(recolor, first, x7)\n    x9 = mapply(x8, x4)\n    O = paint(I, x9)\n    return O"], [1.0, "def solve_6be248c7(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(4, x5)\n    return O"], [1.0, "def solve_7b041589(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = toindices(x14)\n    x26 = lbind(shift, x24)\n    x27 = rbind(multiply, x30)\n    x28 = chain(x27, x26, last)\n    x29 = mapply(x28, x29)\n    O = fill(x14, x13, x29)\n    return O"], [1.0, "def solve_46aed437(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_1fb938eb(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_b6e0ab4c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_11e4c715(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_89476efe(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_73051aeb(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = height(x2)\n    x4 = halve(x3)\n    x5 = width(x2)\n    x6 = halve(x5)\n    x7 = tojvec(x4)\n    x8 = tojvec(x6)\n    x9 = connect(x7, x8)\n    x10 = fill(I, x1, x9)\n    x11 = objects(x10, F, F, T)\n    x12 = argmax(x11, numcolors)\n    x13 = normalize(x12)\n    x14 = remove(x12, x11)\n    x15 = toindices(x14)\n    x16 = lbind(intersection, x15)\n    x17 = chain(halve, x16, toindices)\n    x18 = fork(recolor, color, x17)\n    x19 = mapply(x18, x14)\n    O = paint(x10, x19)\n    return O"], [1.0, "def solve_01ad0218(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = rbind(shoot, x24)\n    x26 = mapply(x25, x23)\n    x27 = fill(x6, x3, x26)\n    x28 = x27(x1)\n    O = fill(x27, x10, x28)\n    return O"], [1.0, "def solve_6f69b5f7(I):\n    x1 = shoot(ORIGIN, UNITY)\n    x2 = rbind(shoot, DOWN)\n    x3 = compose(x2, last)\n    x4 = fork(recolor, first, x3)\n    x5 = mapply(x4, x1)\n    O = paint(I, x5)\n    return O"], [1.0, "def solve_a614e52c(I):\n    x1 = argmin(x1, numcolors)\n    x2 = apply(first, x1)\n    x3 = dmirror(x2)\n    x4 = papply(pair, x2, x3)\n    x5 = lbind(shift, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [1.0, "def solve_80cbfc70(I):\n    x1 = objects(I, T, F, T)\n    x2 = asindices(I)\n    x3 = outbox(x2)\n    x4 = lbind(adjacent, x3)\n    x5 = compose(x4, initset)\n    x6 = rbind(extract, x5)\n    x7 = compose(x6, toindices)\n    x8 = rbind(compose, initset)\n    x9 = lbind(rbind, manhattan)\n    x10 = chain(x8, x9, initset)\n    x11 = lbind(lbind, greater)\n    x12 = chain(x11, halve, size)\n    x13 = compose(x10, x7)\n    x14 = fork(compose, x12, x13)\n    x15 = fork(sfilter, toindices, x14)\n    x16 = mapply(x15, x1)\n    O = fill(I, EIGHT, x16)\n    return O"], [1.0, "def solve_13dc3b85(I):\n    x1 = ofcolor(I, THREE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [1.0, "def solve_606019f6(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_3d4f9a38(I):\n    x1 = portrait(I)\n    x2 = branch(x1, partition, vsplit)\n    x3 = equality(x2, TWO)\n    x4 = branch(x3, hmirror, vmirror)\n    x5 = x4(I)\n    x6 = asobject(x5)\n    x7 = lbind(shift, x6)\n    x8 = height(x5)\n    x9 = chain(x7, halve, width)\n    x10 = x9(x2)\n    x11 = height(x5)\n    x12 = increment(x11)\n    x13 = interval(NEG_ONE, x12, ONE)\n    x14 = rbind(multiply, x5)\n    x15 = apply(x14, x13)\n    x16 = mapply(x12, x15)\n    x17 = paint(x5, x16)\n    x18 = repeat(x17, ONE)\n    O = x4(x18)\n    return O"], [1.0, "def solve_2e6a2d9f(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_9a21c7a4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_06f00ee0(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_1aa149f2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_1a0ecf96(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [1.0, "def solve_464525d6(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_6b553fe5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_00ddc610(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = hsplit(I, x2)\n    x4 = shape(x3)\n    x5 = maximum(x4)\n    x6 = branch(x5, ORIGIN, canvas)\n    x7 = connect(x5, x6)\n    x8 = height(x7)\n    x9 = width(x7)\n    x10 = matcher(identity, ZERO)\n    x11 = subtract(x10, x8)\n    x12 = matcher(last, x8)\n    x13 = subtract(x12, x9)\n    x14 = width(x3)\n    x15 = interval(ZERO, x14, ONE)\n    x16 = combine(x3, x13)\n    x17 = fill(x6, THREE, x16)\n    x18 = astuple(x11, x15)\n    x19 = canvas(ZERO, x18)\n    x20 = asobject(x19)\n    x21 = occurrences(x17, x20)\n    x22 = lbind(shift, x20)\n    x23 = mapply(x22, x21)\n    O = fill(x17, THREE, x23)\n    return O"], [1.0, "def solve_f5b13097(I):\n    x1 = fgpartition(I)\n    x2 = mapply(toindices, x1)\n    x3 = mapply(vfrontier, x2)\n    x4 = underfill(I, EIGHT, x3)\n    x5 = hconcat(x4, x4)\n    O = vconcat(x5, x5)\n    return O"], [1.0, "def solve_9b626daa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_377edd58(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, TWO)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 =ulcorner(x11)\n    x13 = subgrid(x11, I)\n    x14 = increment(x13)\n    x15 = asobject(x14)\n    x16 = matcher(first, x3)\n    x17 = compose(flip, x16)\n    x18 = sfilter(x15, x17)\n    x19 = hperiod(x18)\n    x20 = vperiod(x18)\n    x21 = fgpartition(x7)\n    x22 = merge(x21)\n    x23 = paint(x7, x22)\n    x24 = solve(shift, x17)\n    x25 = shift(x24, x18)\n    x26 = fork(combine, hfrontier, vfrontier)\n    x27 = mapply(x26, x23)\n    O = paint(x25, x27)\n    return O"], [1.0, "def solve_945fafb7(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, F)\n    x3 = Fgpartition(I)\n    x4 = compose(last, first)\n    x5 = power(last, TWO)\n    x6 = fork(connect, x4, x5)\n    x7 = fork(recolor, color, x6)\n    x8 = mapply(x7, x3)\n    O = paint(I, x8)\n    return O"], [1.0, "def solve_8c1f40ba(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_d7ea8b99(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, THREE)\n    x7 = canvas(x4, x6)\n    x8 = asobject(x3)\n    x9 = shift(x8, UNITY)\n    O = paint(x7, x9)\n    return O"], [1.0, "def solve_b8be1fa7(I):\n    x1 = replace(I, FOUR, ZERO)\n    x2 = branch(x1, dmirror, identity)\n    x3 = x2(I)\n    x4 = partition(x3)\n    x5 = matcher(color, ZERO)\n    x6 = compose(flip, x5)\n    x7 = extract(x4, x6)\n    x8 = initset(ORIGIN)\n    x9 = height(x7)\n    x10 = insert(ZERO, x8)\n    x11 = insert(x9, x10)\n    x12 = insert(x11, x12)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = dmirror(x4)\n    x16 = width(x7)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = pair(x17, x14)\n    x19 = mapply(neighbors, x18)\n    O = fill(x3, ONE, x19)\n    return O"], [1.0, "def solve_70cad8dc(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = merge(x1)\n    x5 = fill(I, NEG_ONE, x4)\n    x6 = shape(I)\n    x7 = canvas(NEG_ONE, x6)\n    x8 = hconcat(x5, x7)\n    x9 = objects(x8, F, F, T)\n    x10 = rbind(other, x3)\n    x11 = compose(x10, palette)\n    x12 = fork(astuple, x11, ulcorner)\n    x13 = apply(x12, x9)\n    x14 = merge(x9)\n    x15 = fill(I, x3, x14)\n    x16 = paint(x15, x13)\n    O = compress(x16)\n    return O"], [1.0, "def solve_e069d028(I):\n    x1 = switch(I, FIVE, EIGHT)\n    x2 = switch(x1, EIGHT, NEG_ONE)\n    x3 = switch(x2, EIGHT, NEG_ONE)\n    x4 = switch(x3, EIGHT, UNITY)\n    x5 = switch(x4, EIGHT, NEG_ONE)\n    x6 = combine(x1, x5)\n    O = fill(x4, THREE, x6)\n    return O"], [1.0, "def solve_cb6ead5e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = shape(I)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(I, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmin(x11, numcolors)\n    x13 = normalize(x12)\n    x14 = toindices(x13)\n    x15 = increment(x4)\n    x16 = increment(x15)\n    x17 = increment(x5)\n    x18 = increment(x17)\n    x19 = astuple(x16, x18)\n    x20 = lbind(shift, x14)\n    x21 = rbind(multiply, x19)\n    x22 = chain(x20, x21, last)\n    x23 = fork(recolor, first, x22)\n    x24 = normalize(x12)\n    x25 = mapply(x23, x24)\n    O = paint(x9, x25)\n    return O"], [1.0, "def solve_36fe7672(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_ae6e3c5c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_eee391e5(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_a3cbe197(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_04eef8bd(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_98f9d52f(I):\n    x1 = astuple(vsplit, hsplit)\n    x2 = rbind(rbind, TWO)\n    x3 = rbind(rapply, I)\n    x4 = initset(x2)\n    x5 = lbind(rapply, x4)\n    x6 = chain(first, x3, x5)\n    x7 = lbind(apply, numcolors)\n    x8 = compose(x7, x6)\n    x9 = matcher(x8, TWO_BY_TWO)\n    x10 = extract(x1, x9)\n    x11 = x10(I, TWO)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = palette(x12)\n    x15 = palette(x13)\n    x16 = intersection(x14, x15)\n    x17 = first(x16)\n    x18 = shape(x12)\n    x19 = canvas(x17, x18)\n    x20 = ofcolor(x12, x17)\n    x21 = ofcolor(x13, x17)\n    x22 = intersection(x20, x21)\n    O = fill(x19, TWO, x22)\n    return O"], [1.0, "def solve_985967fe(I):\n    x1 = rot270(I)\n    x2 = rot90(I)\n    x3 = rot270(x1)\n    x4 = astuple(x2, x3)\n    x5 = astuple(FOUR, EIGHT)\n    x6 = apply(decrement, x5)\n    x7 = apply(asobject, x4)\n    x8 = mpapply(shift, x7, x6)\n    O = paint(x1, x8)\n    return O"], [1.0, "def solve_865188b4(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = color(x13)\n    x15 = ofcolor(x7, x14)\n    x16 = ofcolor(x8, x14)\n    x17 = intersection(x15, x16)\n    x18 = canvas(x14, x9)\n    x19 = fill(x18, THREE, x17)\n    O = fill(x19, TWO, x15)\n    return O"], [1.0, "def solve_a75b263d(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = power(outbox, TWO)\n    x4 = mapply(x3, x2)\n    O = fill(I, FOUR, x4)\n    return O"], [1.0, "def solve_e0fb90ed(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_601cb44e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_23a6f291(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_f4030b03(I):\n    x1 = fgpartition(I)\n    x2 = compose(dneighbors, center)\n    x3 = fork(difference, backdrop, x2)\n    x4 = fork(equality, toindices, x3)\n    x5 = matcher(size, FIVE)\n    x6 = fork(both, x4, x5)\n    x7 = extract(x1, x6)\n    x8 = color(x7)\n    x9 = merge(x1)\n    x10 = compose(hmirror, vmirror)\n    x11 = initset(x10)\n    x12 = insert(vmirror, x11)\n    x13 = insert(hmirror, x12)\n    x14 = rapply(x13, x9)\n    x15 = ulcorner(x7)\n    x16 = lbind(subtract, x15)\n    x17 = matcher(first, x8)\n    x18 = rbind(sfilter, x17)\n    x19 = chain(x16, ulcorner, x18)\n    x20 = fork(shift, identity, x19)\n    x21 = mapply(x20, x14)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_f4744c08(I):\n    x1 = rbind(b775, I)\n    x2 = compose( shape, asobject)\n    x3 = objects(I, T, F, F)\n    x4 = argmax(x3, size)\n    x5 = canvas(FIVE, x2)\n    O = paint(x5, x4)\n    return O"], [1.0, "def solve_c336cac7(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_19717294(I):\n    x1 = lbind(toobject, I)\n    x2 = lbind(shift, I)\n    x3 = compose(x2, T)\n    x4 = chain(x1, x3, decrement)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x1)\n    O = paint(I, x6)\n    return O"], [1.0, "def solve_acdcb61a(I):\n    x1 = ofcolor(I, TWO)\n    x2 = dalowermost(x1)\n    x3 = equality(x2, ZERO)\n    x4 = branch(x3, x1, x2)\n    x5 = fork(combine, vfrontier, hfrontier)\n    x6 = x5(x4)\n    x7 = underfill(I, EIGHT, x6)\n    x8 = fill(x7, TWO, x5)\n    O = fill(x8, ONE, x7)\n    return O"], [1.0, "def solve_1f3ea06e(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_3a63e057(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [1.0, "def solve_fe4e4b3f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_f393e6e9(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_d2520127(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_d5b19de7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = difference(x2, x1)\n    x4 = fill(I, TWO, x3)\n    x5 = objects(x4, T, F, T)\n    x6 = color(x2)\n    x7 = palette(x5)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, x4)\n    x10 = argmax(x8, x9)\n    x11 = remove(x10, x8)\n    x12 = lbind(ofcolor, I)\n    x13 = mapply(x12, x11)\n    x14 = subgrid(x13, x4)\n    x15 = objects(x14, T, F, T)\n    x16 = colorfilter(x15, x6)\n    x17 = ofcolor(x14, x10)\n    x18 = subgrid(x17, x14)\n    x19 = mapply(dneighbors, x16)\n    x20 = mapply(ineighbors, x16)\n    x21 = fill(x14, toindices, x19)\n    x82 = fill(x21, x10, x20)\n    x83 = ofcolor(x18, x6)\n    x84 = fill(x82, x10, x83)\n    x85 = ofcolor(x84, x11)\n    x86 = mapply(ineighbors, x21)\n    x87 = mapply(ineighbors, x22)\n    x88 = fill(x85, x11, x68)\n    O = fill(x88, x10, x67)\n    return O"], [1.0, "def solve_3f139ab6(I):\n    x1 = partition(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmin(x1, size)\n    x4 = rbind(adjacent, x3)\n    x5 = remove(x3, x1)\n    x6 = extract(x5, x4)\n    x7 = color(x6)\n    x8 = rbind(contained, x7)\n    x9 = compose(x8, color)\n    x10 = sfilter(x2, x9)\n    x11 = size(x10)\n    x12 = increment(x11)\n    x13 = interval(ZERO, x12, THREE)\n    x14 = apply(tojvec, x13)\n    x15 = fork(shift, identity, mostcolor)\n    x16 = mapply(x15, x14)\n    x17 = interval(adjacent,770, ONE)\n    x18 = pair(x17, x16)\n    x19 = compose(invert, first)\n    x20 = order(x18, x19)\n    x21 = apply(last, x20)\n    x22 = mpapply(recolor, x21, x13)\n    O = paint(I, x22)\n    return O"], [1.0, "def solve_9882237f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_c1951c89(I):\n    O = fill(I, EIGHT, x2)\n    return O"], [1.0, "def solve_8cc80e52(I):\n    x1 = partition(I)\n    x2 = compose(maximum, shape)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(colorcount, I)\n    x8 = argmin(x6, x7)\n    x9 = mostcolor(I)\n    x10 = shape(I)\n    x11 = increment(x10)\n    x12 = increment(x11)\n    x13 = canvas(x9, x12)\n    x14 = asobject(I)\n    x15 = shift(x14, UNITY)\n    x16 = paint(x13, x15)\n    x17 = repeat(identity, ONE)\n    x18 = astuple(cmirror, dmirror)\n    x19 = astuple(hmirror, vmirror)\n    x20 = combine(x18, x19)\n    x21 = combine(x17, x20)\n    x22 = fork(compose, first, last)\n    x23 = product(x21, x21)\n    x24 = apply(x22, x23)\n    x25 = ofcolor(x16, x4)\n    x26 = intersection(x15, x25)\n    x27 = canvas(x9, x10)\n    O = fill(x27, x4, x27)\n    return O"], [1.0, "def solve_e39398e2(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = matcher(color, x4)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x2, x6)\n    x8 = difference(x2, x7)\n    x9 = fill(I, TWO, x8)\n    x10 = lbind(recolor, rbind)\n    x11 = compose(x10, initset)\n    x12 = chain(x11, mostcolor, x11)\n    x13 = recolor(x4, x7)\n    x14 = objects(x9, T, T, T)\n    x15 = sfilter(x14, x13)\n    x16 = difference(x14, x15)\n    x17 = toindices(x15)\n    x18 = fork(combine, hfrontier, vfrontier)\n    x19 = mapply(x18, x16)\n    x20 = paint(x9, x19)\n    O = x11(x20)\n    return O"], [1.0, "def solve_914888a5(I):\n    x1 = colorcount(I, ZERO)\n    x2 = subtract(NINE, x1)\n    O = upscale(I, x2)\n    return O"], [1.0, "def solve_4c75b029(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = shape(x3)\n    x5 = halve(x4)\n    x6 = hupscale(x3, x5)\n    x7 =(I, x6)\n    x8 = lefthalf(x7)\n    O = tophalf(x8)\n    return O"], [1.0, "def solve_1b4c2c49(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = fgpartition(x1)\n    x3 = compose(increment, first)\n    x4 = fork(greater, last, x3)\n    x5 = size(x2)\n    x6 = interval(ZERO, x5, ONE)\n    x7 = rbind(contained, x6)\n    x8 = compose(x7, first)\n    x9 = interval(ZERO, x5, ONE)\n    x10 = pair(x4, x9)\n    x11 = sfilter(x10, x8)\n    x12 = mapply(first, x11)\n    O = fill(x1, FOUR, x12)\n    return O"], [1.0, "def solve_f8ad0d51(I):\n    x1 = trim(I)\n    x2 = decrement(x1)\n    O = upscale(x3, x2)\n    return O"], [1.0, "def solve_a4eacf40(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = toobject(x2, I)\n    return O"], [1.0, "def solve_2e7e7fd3(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = extract(x2, x4)\n    x6 = width(I)\n    x7 = subtract(x6, TWO)\n    x8 = multiply(x7, THREE)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = interval(ZERO, x8, ONE)\n    x11 = lbind(multiply, x5)\n    x12 = apply(x11, x9)\n    x13 = lbind(shift, x5)\n    x14 = mapply(x13, x12)\n    x15 = astuple(x6, x14)\n    x16 = canvas(ZERO, x15)\n    x17 = asobject(I)\n    x18 = shift(x17, x16)\n    x19 = height(I)\n    x20 = lbind(shift, x16)\n    x21 = mapply(x20, x18)\n    x22 = paint(x16, x21)\n    x23 = partition(x22)\n    x24 = lbind(shift, x13)\n    x25 = mapply(x24, x23)\n    x26 = paint(x22, x25)\n    x27 =Documentmirror(x24)\n    x28 = astuple(x6, x14)\n    x29 = shift(x27, x28)\n    O = paint(x29, x29)\n    return O"], [1.0, "def solve_0495eae9(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fork(recolor, color, x11)\n    return O"], [1.0, "def solve_abc3ee14(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x77)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [1.0, "def solve_c6b36782(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [1.0, "def solve_baac5602(I):\n    x1 = remove(I, x2)\n    x2 = lbind(contained, ONE)\n    x3 = chain(flip, x2, shape)\n    x4 = sfilter(x1, x3)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = fork(multiply, height, width)\n    x8 = argmin(x6, x7)\n    O = x6(x8)\n    return O"], [1.0, "def solve_696f2028(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_beb9c07a(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = matcher(x12, ZERO)\n    x17 = extract(x7, x16)\n    x18 = height(x17)\n    x19 = rbind(ofcolor, EIGHT)\n    x20 = compose(positive, size)\n    x21 = rbind(sfilter, x20)\n    x22 = chain(x17, x21, dmirror)\n    x23 = multiply(x12, UNITY)\n    x24 = power(x22, x23)\n    x25 = x24(I)\n    x26 = objects(x25, T, F, T)\n    x27 = colorfilter(x26, ZERO)\n    x28 = rbind(canvas, T88)\n    x29 = apply(x28, x27)\n    x30 = merge(x29)\n    x31 = rbind( OFcolor, EIGHT)\n    x32 = chain(x31, x30, x3)\n    x33 = rbind(ofcolor, EIGHT)\n    x34 = fork(recolor, x33, x32)\n    x35 = mapply(x34, x21)\n    x36 = paint(x25, x35)\n    O = x10(x36)\n    return O"], [1.0, "def solve_f3da74d8(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_3af34b1c(I):\n    x1 = astuple(identity, identity)\n    x2 = astuple(rot90, rot270)\n    x3 = astuple(x1, x2)\n    x4 = astuple(rot180, rot180)\n    x5 = astuple(rot270, rot90)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = leastcolor(I)\n    x9 = repeat(x8, ONE)\n    x10 = rbind(rapply, I)\n    x11 = chain(x10, initset, first)\n    x12 = compose(first, x11)\n    x13 = chain(dedupe, first, x12)\n    x14 = matcher(x13, x9)\n    x15 = extract(x7, x14)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = x16(I)\n    x19 = ofcolor(x18, x8)\n    x20 = height(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = lbind(astuple, x20)\n    x23 = apply(x22, x21)\n    x24 = rbind(shoot, DOWN)\n    x25 = mapply(x24, x23)\n    x26 = fill(x18, FOUR, x25)\n    x27 = astuple(x20, x20)\n    x28 = canvas(ZERO, x27)\n    x29 = asindices(x28)\n    x30 = shift(x29, x27)\n    x31 = shape(I)\n    x32 = maximum(x31)\n    x33 = lbind(shift, x30)\n    x34 = interval(ZERO, x32, x20)\n    x35 = pair(x34, x34)\n    x36 = mapply(x33, x35)\n    x37 = fill(x26, TWO, x36)\n    O = x17(x37)\n    return O"], [1.0, "def solve_45970bc8(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_d4935307(I):\n    x1 = rbind(bordering, I)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x2, x2)\n    x4 = fork(equality, toindices, box)\n    x5 = sfilter(x3, x4)\n    x6 = mfilter(x5, x2)\n    O = fill(I, T, x6)\n    return O"], [1.0, "def solve_1a84fb2d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_31c504b7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_64572e1e(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = add(TWO, x2)\n    x4 = canvas(x1, x3)\n    x5 = apply(first, x4)\n    x6 = asindices(x5)\n    x7 = shift(x6, UNITY)\n    x8 = shape(x7)\n    x9 = halve(x8)\n    x10 = increment(x9)\n    x11 = interval(ZERO, x10, ONE)\n    x12 = lbind(shift, x7)\n    x13 = rbind(multiply, x4)\n    x14 = apply(x13, x11)\n    x15 = mapply(x12, x14)\n    O = paint(x4, x15)\n    return O"], [1.0, "def solve_b6ca3d6c(I):\n    x1 = index(I, ORIGIN)\n    x2 = box(I)\n    O = fill(I, x1, x2)\n    return O"], [1.0, "def solve_aebe6f9c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_bfc33641(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = leastcolor(x1)\n    x4 = leastcolor(x2)\n    x5 = ofcolor(I, x3)\n    x6 = center(x5)\n    x7 = ofcolor(I, x4)\n    x8 = center(x7)\n    x9 = height(I)\n    x10 = width(I)\n    x11 = hfrontier(x6)\n    x12 = fill(I, x3, x11)\n    x13 = hfrontier(x8)\n    x14 = fill(x12, x4, x13)\n    x15 = decrement(x10)\n    x16 = decrement(x9)\n    x17 = halve(x9)\n    x18 = tojvec(x15)\n    x19 = connect(ORIGIN, x18)\n    x20 = fill(x14, x3, x19)\n    x21 = toivec(x16)\n    x22 = astuple(x16, x15)\n    x23 = connect(x21, x22)\n    x24 = fill(x20, x4, x23)\n    x25 = decrement(x17)\n    x26 = toivec(x25)\n    x27 = connect(ORIGIN, x26)\n    x28 = fill(x24, x3, x27)\n    x29 = tojvec(x15)\n    x30 = decrement(x17)\n    x31 = astuple(x30, x15)\n    x32 = connect(x29, x31)\n    x33 = fill(x28, x3, x32)\n    x34 = equality(x17, x12)\n    x41 = branch(x34, x22, x24)\n    O = canvas(x31, x41)\n    return O"], [1.0, "def solve_9ecddb3b(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = shape(I)\n    x3 = multiply(x2, x2)\n    x4 = canvas(ZERO, x3)\n    x5 = rbind(multiply, x2)\n    x6 = apply(x5, x1)\n    x7 = asobject(I)\n    x8 = lbind(shift, x7)\n    x9 = mapply(x8, x6)\n    O = paint(x4, x9)\n    return O"], [1.0, "def solve_6d23468b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_dc3a0aba(I):\n    x1 = astuple(SIX, THREE)\n    x2 = dmirror(I)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    x14 = apply(x4, x13)\n    x15 = ofcolor(I, ZERO)\n    x16 = asindices(I)\n    x17 = shoot(ORIGIN, x16)\n    x18 = intersection(x15, x17)\n    x19 = fill(I, ZERO, x18)\n    O = replace(x19, FIVE, ZERO)\n    return O"], [1.0, "def solve_8fa45371(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_2591893f(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_c8a2b041(I):\n    x1 = subgrid(I, I)\n    O = upscale(x1, THREE)\n    return O"], [1.0, "def solve_2e9f12c9(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = matcher(size, TWO)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = other(x8, x1)\n    x10 = replace(I, x6, x1)\n    x11 = ofcolor(I, x6)\n    x12 = repeat(x9, ONE)\n    x13 = rbind(equality, x12)\n    x14 = first(I)\n    x15 = dedupe(x14)\n    x16 = x13(x15)\n    x17 = last(x15)\n    x18 = dedupe(x17)\n    x19 = x13(x18)\n    x20 = dmirror(I)\n    x21 = first(x20)\n    x22 = dedupe(x21)\n    x23 = x13(x22)\n    x24 = dmirror(I)\n    x25 = last(x24)\n    x26 = dedupe(x25)\n    x27 = x13(x26)\n    x28 = apply(last, x11)\n    x29 = apply(first, x11)\n    x30 = either(x16, x19)\n    x31 = branch(x30, x28, x29)\n    x32 = branch(x30, lbind, rbind)\n    x33 = lbind(x32, astuple)\n    x34 = branch(x30, height, width)\n    x35 = x34(I)\n    x36 = decrement(x35)\n    x37 = either(x16, x23)\n    x38 = branch(x37, ZERO, x36)\n    x39 = x33(x38)\n    x40 = apply(x39, x31)\n    O = fill(x10, x6, x40)\n    return O"], [1.0, "def solve_78faa7f4(I):\n    x1 =feca360(I)\n    x2 = asobject(I)\n    x3 = matcher(first, ZERO)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = lbind(shift, x5)\n    x7 = mapply(x6, x2)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_47be22b3(I):\n    x1 = switch(I, TWO, NEG_ONE)\n    x2 = switch(x1, THREE, FOUR)\n    x3 = switch(x2, EIGHT, NINE)\n    x4 = switch(x3, ONE, FOUR)\n    x5 = astuple(TEN, TEN)\n    x6 = canvas(ZERO, x5)\n    x7 = asindices(x6)\n    x8 = paint(x6, x7)\n    x9 = matcher(first, THREE)\n    x10 = rbind(sfilter, x9)\n    x11 = rbind(compose, initset)\n    x12 = lbind(rbind, manhattan)\n    x13 = chain(x11, x12, initset)\n    x14 = chain(x10, x13,7776)\n    x15 = apply(x14, x5)\n    x16 = fork(connect, ulcorner, lrcorner)\n    x17 = fork(connect, llcorner, urcorner)\n    x18 = fork(combine, x16, x17)\n    x19 = mapply(x18, x15)\n    O = fill(x8, EIGHT, x19)\n    return O"], [1.0, "def solve_0c1b95c0(I):\n    x1 = fgpartition(I)\n    x2 = compose(dneighbors, center)\n    x3 = fork(difference, backdrop, x2)\n    x4 = fork(equality, toindices, x3)\n    x5 = matcher(size, FIVE)\n    x6 = fork(both, x4, x5)\n    x7 = extract(x1, x6)\n    x8 = color(x7)\n    x9 = merge(x1)\n    x10 = compose(hmirror, vmirror)\n    x11 = initset(x10)\n    x12 = insert(vmirror, x11)\n    x13 = insert(hmirror, x12)\n    x14 = rapply(x13, x9)\n    x15 = ulcorner(x7)\n    x16 = lbind(subtract, x15)\n    x17 = matcher(first, x8)\n    x18 = rbind(sfilter, x17)\n    x19 = chain(x16, ulcorner, x18)\n    x20 = fork(shift, identity, x19)\n    x21 = mapply(x20, x14)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_a860361d(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_8ca81ad9(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_1aef2380(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = height(x2)\n    x4 = halve(x3)\n    x5 = width(x2)\n    x6 = halve(x5)\n    x7 = ulcorner(x2)\n    x8 = lrcorner(x2)\n    x9 = shape(I)\n    x10 = maximum(x9)\n    x11 = multiply(THREE, TEN)\n    x12 = interval(ONE, x11, ONE)\n    x13 = rbind(multiply, x4)\n    x14 = apply(x13, x12)\n    x15 = rbind(multiply, x6)\n    x16 = apply(x15, x12)\n    x17 = pair(x14, x16)\n    x18 = rbind(add, x7)\n    x19 = apply(invert, x17)\n    x20 = apply(x18, x19)\n    x21 = rbind(add, x8)\n    x22 = apply(x21, x17)\n    x23 = pair(x20, x22)\n    x24 = papply(box, x23)\n    O = fill(I, x1, x24)\n    return O"], [1.0, "def solve_5db94dc5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = extract(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = last(x12)\n    x21 = lbind(subtract, x20)\n    x22 = increment(x19)\n    x23 = rbind(subtract, x22)\n    x24 = chain(x21, x23, decrement)\n    x25 = lbind(shift, x1)\n    x26 = mapply(x25, x18)\n    O = fill(I, x3, x26)\n    return O"], [1.0, "def solve_2256a6d2(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_fb6a737b(I):\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = mfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = mfilter(x4, x2)\n    x6 = shape(I)\n    x7 = add(TWO, x6)\n    x8 = canvas(ZERO, x7)\n    x9 = asobject(I)\n    x10 = shift(x9, UNITY)\n    x11 = paint(x8, x10)\n    x12 = objects(x11, T, F, T)\n    x13 = apply(color, x12)\n    x14 = rbind(contained, x13)\n    x15 = compose(minimum, x14)\n    x16 = sfilter(x1, x15)\n    x17 = paint(x11, x16)\n    x18 = objects(x11, T, F, T)\n    x19 = merge(x18)\n    x20 = cover(x17, x19)\n    x21 = paint(x20, x16)\n    O = compress(x21)\n    return O"], [1.0, "def solve_4b143fdc(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_8bb47b66(I):\n    x1 = fgpartition(I)\n    x2 = argmax(x1, size)\n    x3 = height(x2)\n    x4 = width(x2)\n    x5 = neighbors(ORIGIN)\n    x6 = toindices(x2)\n    x7 = lbind(shift, x6)\n    x8 = height(I)\n    x9 = divide(x8, x3)\n    x10 = width(I)\n    x11 = divide(x10, x4)\n    x12 = astuple(x9, x11)\n    x13 = maximum(x12)\n    x14 = increment(x13)\n    x15 = interval(ONE, x14, ONE)\n    x16 = astuple(x3, x4)\n    x17 = lbind(multiply, x16)\n    x18 = compose(crement, x17)\n    x19 = lbind(mapply, x7)\n    x20 = rbind(apply, x15)\n    x21 = lbind(rbind, multiply)\n    x22 = compose(x21, x18)\n    x23 = chain(x19, x20, x22)\n    x24 = rbind(toobject, I)\n    x25 = compose(x7, x18)\n    x26 = chain(palette, x24, x25)\n    x27 = mostcolor(I)\n    x28 = rbind(equality, x27)\n    x29 = rbind(argmin, x28)\n    x30 = compose(x29, x26)\n    x31 = fork(recolor, x30, x23)\n    x32 = mapply(x31, x5)\n    O = paint(I, x32)\n    return O"], [1.0, "def solve_a0f497d4(I):\n    x1 = ofcolor(I, SIX)\n    x2 = recolor(ONE, x1)\n    x3 = power(decrement, TWO)\n    x4 = x3(x2)\n    x5 = on108(x4, THREE)\n    x6 = matcher(size, dedupe)\n    x7 = x6(x5)\n    x8 = rbind(subgrid, I)\n    x9 = apply(x8, x5)\n    x10 = dedupe(x9)\n    x11 = lbind(fork, shift)\n    x12 = lbind(x11, x12)\n    x13 = lbind(rbind, rapply)\n    x14 = compose(x12, x13)\n    x15 = lbind(compose, x5)\n    x16 = x15(x14)\n    x17 = mapply(x16, x10)\n    O = underfill(I, EIGHT, x17)\n    return O"], [1.0, "def solve_8d9e4de7(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_407adb1d(I):\n    x1 = lbind(recolor, EIGHT)\n    x2 = compose(x1, delta)\n    x3 = fork(paint, identity, x2)\n    x4 = apply(x3, I)\n    x5 = astuple(SIX, dmirror)\n    x6 = astuple(UNITY, papply)\n    x7 = initset(x6)\n    x8 = equality(x5, x7)\n    x9 = branch(x8, identity, x4)\n    x10 = x9(I)\n    x11 = objects(x10, T, F, T)\n    x12 = colorfilter(x11, EIGHT)\n    x13 = difference(x11, x12)\n    x14 =argmax(x13, size)\n    x15 = color(x14)\n    x16 = subgrid(x14, x10)\n    x17 = trim(x16)\n    x18 = lefthalf(x17)\n    x19 = vmirror(x18)\n    x20 = astuple(x15, x19)\n    x21 = double(x20)\n    x22 = interval(ZERO, x21, ONE)\n    x23 = apply(tojvec, x22)\n    x24 = lbind(shift, x18)\n    x25 = mapply(x24, x23)\n    x26 = fill(x10, EIGHT, x25)\n    x27 = fill(x26, FOUR, x24)\n    O = x9(x27)\n    return O"], [1.0, "def solve_d14f24ae(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_fdd67056(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_db548893(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = fork(recolor, color, backdrop)\n    x5 = apply(x4, x1)\n    x6 = mfilter(x5, hline)\n    x7 = mfilter(x5, vline)\n    x8 = size(x6)\n    x9 = size(x7)\n    x10 = greater(x8, x9)\n    x11 = branch(x10, vsplit, hsplit)\n    x12 = x11(I, TWO)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = palette(x13)\n    x16 = merge(x15)\n    x17 = palette(x14)\n    x18 = intersection(x16, x17)\n    x19 = difference(x16, x18)\n    x20 = first(x19)\n    x21 = shape(x13)\n    x22 = canvas(x20, x21)\n    x23 = ofcolor(x13, x10)\n    x24 = ofcolor(x14, x10)\n    x25 = intersection(x23, x24)\n    O = fill(x22, TWO, x25)\n    return O"], [1.0, "def solve_3d56e398(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_5b6751ac(I):\n    x1 = objects(I, T, F, T)\n    x2 = height(x1)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, le, tophalf)\n    x5 = branch(x3, righthalf, x4)\n    x6 = width(x5)\n    x7 = equality(x6, ONE)\n    x8 = branch(x7, ulcorner, last)\n    x9 = x8(x5)\n    x10 = x8(x10)\n    x11 = gravitate(x9, x11)\n    x12 = shape(x11)\n    x13 = multiply(x12, x4)\n    x14 = canvas(ZERO, x13)\n    x15 = ofcolor(x14, ZERO)\n    x16 = rbind(multiply, x14)\n    x17 = apply(x16, x15)\n    x18 = lbind(shift, x15)\n    x19 = mapply(x18, x17)\n    O = fill(x14, ZERO, x19)\n    return O"], [1.0, "def solve_8ef6330b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = fork(combine, vfrontier, hfrontier)\n    x16 = x15(x14)\n    x17 = mapply(x16, x13)\n    x18 =eepply(x17, x16)\n    x19 = hmirror(x18)\n    x20 = x16(x19)\n    x21 = replace(x20, x3, x5)\n    x22 = x15(x21)\n    O = compress(x22)\n    return O"], [1.0, "def solve_a9288d1a(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, least)\n    x9 = compose(flip, x8)\n    x10 = extract(x7, x9)\n    x11 = remove(x10, x7)\n    x12 = merge(x11)\n    x13 = mostcolor(x12)\n    x14 = partition(x12)\n    x15 = ofcolor(x12, x13)\n    x16 = subgrid(x15, x12)\n    x17 = difference(x16, x15)\n    x18 = hmirror(x17)\n    x19 = replace(x18, x13, x12)\n    x20 = subgrid(x15, x19)\n    x21 = asobject(x20)\n    x22 = occurrences(x19, x21)\n    x23 = size(x22)\n    x24 = positive(x23)\n    x25 = branch(x24,hmirror, vmirror)\n    x26 = x25(x20)\n    x27 = ofcolor(x26, x13)\n    x28 = subgrid(x27, x20)\n    x29 = ofcolor(x28, x13)\n    x30 = ulcorner(x27)\n    x31 = invert(x30)\n    x32 = lrcorner(x27)\n    x33 = increment(x31)\n    x34 = shift(x29, x33)\n    x35 = fork(connect, last, last)\n    x36 = mapply(x35, x22)\n    O = fill(x14, x13, x36)\n    return O"], [1.0, "def solve_4c46e58c(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_461fe4c6(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_c6820454(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_01a1ea2e(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_c638c946(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = apply(normalize, x2)\n    x4 = astuple(NINE, NINE)\n    x5 = canvas(FIVE, x4)\n    x6 = asindices(x5)\n    x7 = box(x6)\n    x8 = center(x6)\n    x9 = lbind(contained, ZERO)\n    x10 = rbind(subtract, x8)\n    x11 = compose(x9, x10)\n    x12 = chain(outbox, outbox, initset)\n    x13 = corners(x6)\n    x14 = mapply(x12, x13)\n    x15 = difference(x7, x14)\n    x16 = inbox(x7)\n    x17 = sfilter(x16, x11)\n    x18 = combine(x15, x17)\n    x19 = fill(x5, ONE, x18)\n    x20 = objects(x19, T, F, T)\n    x21 = apply(toindices, x20)\n    x22 = lbind(matcher, normalize)\n    x23 = lbind(extract, x21)\n    x24 = chain(ulcorner, x23, x22)\n    x25 = chain(invert, ulcorner, x24)\n    x26 = fork(shift, identity, x25)\n    x27 = mapply(x26, x3)\n    O = paint(x5, x27)\n    return O"], [1.0, "def solve_3072af49(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, x5)\n    x8 = rbind(x7, x6)\n    x9 = compose(x8, x7)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [1.0, "def solve_70fb6a99(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dneighbors)\n    x9 = fork(shift, x8, x6)\n    x10 = fork(combine, x9, x3)\n    x11 = mapply(x10, x1)\n    O = paint(I, x11)\n    return O"], [1.1, "def solve_36c306d0(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_19abcbdd(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = palette(I)\n    x7 = compose(x4, x5)\n    x8 = argmin(x6, x7)\n    x9 = colorcount(I, x8)\n    x10 = positive(x9)\n    x11 = branch(x10, dmirror, identity)\n    x12 = x11(I)\n    x13 = x8(x12)\n    x14 = ofcolor(x13, x8)\n    x15 = subgrid(x14, x13)\n    x16 = adaptation(x15, x13)\n    x17 = mostcolor(x16)\n    x18 = ofcolor(x x x17)\n    x19 = hmirror(x18)\n    x20 = asobject(x19)\n    x21 = matcher(first, x17)\n    x22 = compose(flip, x21)\n    x23 = sfilter(x20, x22)\n    x24 = partition(x12)\n    x25 = sizefilter(x24, ONE)\n    x26 = apply(merge, x25)\n    x27 = argmin(x26, last)\n    x28 = rbind(subgrid, x13)\n    x29 = apply(x28, x27)\n    x30 = rbind(colorcount, x17)\n    x31 = argmin(x29, x30)\n    x32 = rightmost(x31)\n    x33 = rightmost(x28)\n    x34 = width(x33)\n    x35 =rightmost(x28)\n    x36 = leftmost(x34)\n    x37 = subtract(x32, x35)\n    x38 = decrement(x37)\n    x39 = leftmost(x33)\n    x40 = rightmost(x33)\n    x41 = subtract(x39, x40)\n    x42 = astuple(x37, x"], [1.1, "def solve_a03a27cd(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = astuple(x34, x37)\n    x39 = add(x38, UNITY)\n    x40 = initset(x39)\n    x41 = backdrop(x40)\n    "], [1.1, "def solve_3e57783e(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = subtract(x11, TWO)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract("], [1.1, "def solve_204764b3(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = compose(x4, size)\n    x6 = sfilter(x1, x5)\n    x7 = fork(pair, x4, identity)\n    x8 = chain(x1, x7, dmirror)\n    x9 = maximum(x6)\n    x10 = identity(I)\n    x11 = branch(x10,130, x9)\n    x12 = x11(I)\n    x13 = x11(x12)\n    x14 = argmin(x13, x7)\n    x15 = argmax(x13, x7)\n    x16 = width(x12)\n    x17 = decrement(x16)\n    x18 = tojvec(x17)\n    x19 = height(x12)\n    x20 = decrement(x19)\n    x21 = interval(x17, x20, ONE)\n    x22 = lbind(apply, last)\n    x23 = compose(x22, first)\n    x24 = rbind(sfilter, x23)\n    x25 = chain(positive, size, x24)\n    x26 = sfilter(x21, x25)\n    x27 = maximum(x26)\n    x28 = increment(x27)\n    x29 = interval(ZERO, x28, ONE)\n    x30 = lbind( pair, x22)\n    x31 = lbind(pair, x25)\n    x32 = compose(x30, x31)\n    x33 = apply(x32, x29)\n    x34 = lbind(sfilter, x33)\n    x35 = lbind(matcher, first)\n    x36 = compose(x34, x35)\n    x37 = chain(size, x33, x36)\n    x38 = apply(x37, x29)\n    x39 = lbind(colorcount, x12)\n    x40 = valmax(x38, x39)\n    x41 = mat"], [1.1, "def solve_f1ba0082(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_f4119771(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = combine(x25, x26)\n    x28 = intersection(x27, x23)\n    x29 = first(x28)\n    x30 = ofcolor(x23, x29)\n    x31 = ofcolor(x24, x29)\n    x32 = intersection(x30, x31)\n    x33 = first(x32)\n    x34 = matcher(first, x29)\n    x35 = compose(flip, x34)\n    x36 = sfilter(x33, x35)\n    x37 = difference(x21, x36)\n    x38 = objects(x24, T, F, T)\n    x39 = colorfilter(x38, x29)"], [1.1, "def solve_f66653b4(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = compose(flip, x33)\n    x35 = sfilter(x32, x34)\n    x36 = difference(x32, x35)\n    x37 = fill(x23, x8, x31)\n    x38 = fill(x37, x42, x36)\n    x39 = fork(connect, identity, ul"], [1.1, "def solve_aae888ec(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = ONE00000000\n    001044404900\n    31000404413\n    \"\"\"\n    x2 = trim(I)\n    x3 = decrement(x2)\n    x4 = tojvec(x3)\n    x5 = connect(ORIGIN, x4)\n    x6 = height(I)\n    x7 = equality(x6, ZERO)\n    x8 = branch(x7, x5, x6)\n    x9 = width(I)\n    x10 = decrement(x9)\n    x11 = tojvec(x10)\n    x12 = connect(x11, x9)\n    x13 = height(I)\n    x14 = decrement(x13)\n    x15 = toivec(x14)\n    x16 = connect(x15, x12)\n    x17 = width(I)\n    x18 = decrement(x17)\n    x19 = tojvec(x18)\n    x20 = connect(x19, x12)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = toivec(x22)\n    x24 = connect(x23, x18)\n    x25 = width(I)\n    x26 = decrement(x25)\n    x27 = tojvec(x26)\n    x28 = shape(I)\n    x29 = decrement(x28)\n    x30 = connect(x27, x29)\n    x31 = height(I)\n    x32 = decrement(x31)\n    x33 = toivec(x32)\n    x34 = shape(I)\n    x35 = decrement(x34)\n    x36 = connect(x33, x35)\n    x37 = fill(I, THREE, x10)\n    x38 = fill(x37, astuple, x20)\n    x39 = fill(x38, x6, x30)\n    x40 = fill(x39, TWO, x36)\n    x41 = size(x1)\n    x42 = positive(x41)\n    x43 = branch(x42, x3, x4"], [1.1, "def solve_3af703c4(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_50fc64e8(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = leastcolor(x1)\n    x4 = leastcolor(x2)\n    x5 = ofcolor(I, x3)\n    x6 = center(x5)\n    x7 = ofcolor(I, x4)\n    x8 = center(x7)\n    x9 = height(I)\n    x10 = width(I)\n    x11 = hfrontier(x6)\n    x12 = fill(I, x3, x11)\n    x13 = hfrontier(x8)\n    x14 = fill(x12, x4, x13)\n    x15 = decrement(x10)\n    x16 = decrement(x9)\n    x17 = halve(x9)\n    x18 = tojvec(x15)\n    x19 = connect(ORIGIN, x18)\n    x20 = fill(x14, x3, x19)\n    x21 = toivec(x16)\n    x22 = astuple(x16, x15)\n    x23 = connect(x21, x22)\n    x24 = fill(x20, x4, x23)\n    x25 = decrement(x17)\n    x26 = toivec(x25)\n    x27 = connect(ORIGIN, x26)\n    x28 = fill(x24, x3, x27)\n    x29 = tojvec(x15)\n    x30 = decrement(x17)\n    x31 = astuple(x30, x15)\n    x32 = connect(x29, x31)\n    x33 = fill(x28, x3, x32)\n    x34 = toivec(x17)\n    x35 = toivec(x16)\n    x36 = connect(x34, x35)\n    x37 = fill(x33, x4, x36)\n    x38 = astuple(x17, x15)\n    x39 = astuple(x16, x15)\n    x40 = connect(x38, x39)\n    O = fill(x37,"], [1.1, "def solve_9efd596f(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_e5c79d0b(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = width(x4)\n    x6 = toivec(x5)\n    x7 = index(x4, x6)\n    x8 = shape(x4)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x4, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, rot90)\n    x16 = lbind(power, rot270)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x13)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x19)\n    x24 = uppermost(x12)\n    x25 = lbind(add, x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = lbind(multiply, x27)\n    x29 = chain(toivec, x25, x28)\n    x30 = fork(shift, x23, x29)\n    x31 = compose(asobject, x22)\n    x32 = uppermost(x12)\n    x33 = lbind(subtract, x32)\n    x34 = height(x12)\n    x35 = increment(x34)\n    x36 = lbind(multiply, x35)\n    x37 = chain(toivec, x33, x36)\n    x38 = fork(shift, x31, x37)\n    x39 = fork(combine"], [1.1, "def solve_1bcbf7f3(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = fork(recolor, x40, identity)\n    x42 = mapply"], [1.1, "def solve_fcbd5e79(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = rot270(I)\n    x2 = rot90(I)\n    x3 = rot270(x2)\n    x4 = rbind(order, identity)\n    x5 = apply(x4, x1)\n    x6 = apply(x4, x2)\n    x7 = compose(positive, size)\n    x8 = lbind(interval, ZERO)\n    x9 = rbind(x8, ONE)\n    x10 = compose(x7, x9)\n    x11 = apply(x10, x5)\n    x12 = lbind(matcher, SEVEN)\n    x13 = compose(x12, x4)\n    x14 = lbind(matcher, EIGHT)\n    x15 = compose(x14, x4)\n    x16 = fork(sfilter, identity, x13)\n    x17 = fork(sfilter, identity, x15)\n    x18 = compose(x16, x17)\n    x19 = rbind(shoot, UNITY)\n    x20 = rbind(shoot, NEG_UNITY)\n    x21 = fork(combine, x19, x20)\n    x22 = compose(x21, x18)\n    x23 = rbind(shoot, DOWN_LEFT)\n    x24 = rbind( visitmatching, ONE)\n    x25 = chain(x23, x24, x2)\n    x26 = compose(x25, x18)\n    x27 = fork(sfilter, identity, x26)\n    x28 = compose(x27, x15)\n    x29 = fork(difference, x28, x12)\n    x30 = compose(x28, x29)\n    x31 = fork(shift, x30, x17)\n    x32 = compose(decrement, numcolors)\n    x33 = fork(add, x32, x31)\n    x34 = fork(\n    intersection, x33, x39a)\n    x35 = chain(size, x34, xdmirror)\n    x36 = matcher(x35, ZERO)\n    x37 = lbind(apply, vmirror)\n    "], [1.1, "def solve_56507e47(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mostcolor(I)\n    x3 = shape(I)\n    x4 = canvas(x2, x3)\n    x5 = hconcat(I, x4)\n    x6 = objects(x5, F, F, T)\n    x7 = argmin(x6, size)\n    x8 = argmax(x6, size)\n    x9 = remove(x7, x6)\n    x10 = presents(x7, x9)\n    x11 = leftmost(x7)\n    x12 = leftmost(x8)\n    x13 = greater(x11, x12)\n    x14 = uppermost(x7)\n    x15 = uppermost(x8)\n    x16 = greater(x14, x15)\n    x17 = uppermost(x7)\n    x18 = equality(x13, x17)\n    x19 = branch(x18, x12, x13)\n    x20 = branch(x18, x8, x19)\n    x21 = branch(x18, x7, x20)\n    x22 = x21(I)\n    x23 = 17827(x22)\n    x24 = shape(x22)\n    x25 = canvas(x2, x24)\n    x26 = normalize(x22)\n    x27 = shift(x26, x24)\n    x28 = paint(x25, x27)\n    x29 = rbind(toobject, x28)\n    x30 = chain(x29, palette, x28)\n    x31 = matcher(x30, x8)\n    x32 = extract(x29, x31)\n    x33 = x32(x72)\n    x34 = interval(ZERO, NINE, ONE)\n    x35 = pair(x34, x34)\n    x36 = lbind(colorcount\n    3889033338\n    x369443289\n    3853034303\n    8833 m8388\n    \"\"\"\n    x1 = objects(x38, F, F, T)\n    x2 = rbind(colorcount, x8)\n    x3"], [1.1, "def solve_6e7ba30b(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = crop(I, ORIGIN, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = matcher(first, ZERO)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = shape(x5)\n    x7 = multiply(x6, x6)\n    x8 = add(x7, DOWN)\n    x9 = canvas(ZERO, x8)\n    x10 = multiply(x5, x6)\n    x11 = add(x10, x6)\n    x12 = lbind(multiply, x6)\n    x13 = chain(x12, double, partition)\n    x14 = lbind(add, x4)\n    x15 = compose(invert, x14)\n    x16 = lbind(multiply, x11)\n    x17 = compose(invert, x16)\n    x18 = fork(add, x15, x17)\n    x19 = fork(equality, toindices, x18)\n    x20 = sfilter(x15, x19)\n    x21 = lbind(multiply, x6)\n    x22 = compose(invert, x21)\n    x23 = fork(add, x20, x22)\n    x24 =28222244mult13)\n    x25 = decrement(x24)\n    x26 = lbind(multiply, x11)\n    x27 = compose(invert, x26)\n    x28 = fork(add, x23, x27)\n    x29 = rbind(contained, x47)\n    x30 = compose(x29, first)\n    x31 = rbind(added, x35)\n    x32 = compose(x31, first)\n    x33 = fork(add, x32, x30)\n    x34 = chain(ineighbors, x23, x33)\n    x35 = fork(astuple, x34, x32)\n    x36 = canvas(ZERO, x6)\n    x37 = paint(x36, x35)\n    x38 = fork(connect,"], [1.1, "def solve_1124c176(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dae)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)\n"], [1.1, "def solve_715f57e2(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(flip, x6)\n    x9 = fork(both, x3, x8)\n    x10 = sfilter(x1, x9)\n    x11 = compose(size, first)\n    x12 = decrement(x11)\n    x13 =8853alf(x10)\n    x14 = toindices(x13)\n    x15 = rbind(repeat, x12)\n    x16 = compose(x15, first)\n    x17 = lbind(contained, ONE)\n    x18 = chain(x17, x16, x first)\n    x19 = compose(x18, x10)\n    x20 = compose(x15, x19)\n    x21 = fork(contained, x20, x17)\n    x22 = compose(x21, x10)\n    x23 = fork(add, x28, astuple)\n    x24 = fork(add, x23, x22)\n    x25 = Tuple(x14, x24)\n    x26 = astuple(vmatching, x25)\n    x27 = fork(either, x24, x26)\n    x28 = compose(flip, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(invert, x29, x17)\n    x31 = decrement(x26)\n    x32 = astuple(x31, x30)\n    x33 = shift(x19, x32)\n    x34 = paint(I, x33)\n    x35 = toindices(x33)\n    x36 = rbind(manhattan, x35)\n    x37 = compose(x36, initset)\n    x38 = argmax(x35, x37)\n    x39 = first(x"], [1.1, "def solve_45e4654b(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = fork(vsplit, identity, height)\n    x5 = chain(asobject, first, x4)\n    x6 = mostcolor(I)\n    x7 = lbind(chain, numcolors)\n    x8 = lbind(x7, x5)\n    x9 = lbind(chain, color)\n    x10 = lbind(x9, x5)\n    x11 = rbind(rapply, I)\n    x12 = compose(initset, x8)\n    x13 = chain(first, x11, x12)\n    x14 = rbind(rapply, I)\n    x15 = compose(initset, x10)\n    x16 = chain(first, x14, x15)\n    x17 = matcher(x13, ONE)\n    x18 = matcher(x16, x6)\n    x19 = compose(flip, x18)\n    x20 = fork(sfilter, identity, x19)\n    x21 = compose(asobject, x20)\n    x22 = apply(x21, x3)\n    x23 = dmirror(x22)\n    x24 = hmirror(x23)\n    x25 = vmirror(x24)\n    x26 = width(x22)\n    x27 = hupscale(x25, x26)\n    x28 = toobject(x27, x23)\n    x29 = matcher(x28, ZERO)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x25, x30)\n    x32 = hmirror(x31)\n    x33 = vmirror(x32)\n    x34 = sfilter(x33, x30)\n    x35 = vmirror(x34)\n    x36 = hmirror(x35)\n    x37 = cellwise(x22, x33, x36)\n    x38 = product(x37, x37)\n"], [1.1, "def solve_02a2e256(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_1e512a9c(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = size(x3)\n    x5 = positive(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = frontiers(I)\n    x9 = x6(I)\n    x10 = size(x8)\n    x11 = size(x9)\n    x12 = greater(x10, x11)\n    x13 = branch(x12, identity, vmirror)\n    x14 = x13(I)\n    x15 = ofcolor(x14, NEG_ONE)\n    x16 = subgrid(x15, x14)\n    x17 = LEastuple(x16, x15)\n    x18 = hsplit(x17, x181)\n    x19 = lbind(ofcolor, x14)\n    x20 = compose(x19, last)\n    x21 = fork(sfilter, last, x20)\n    x22 = chain(x15, x21, first)\n    x23 = rbind(contained, x15)\n    x24 = compose(x23, last)\n    x25 = sfilter(x16, x24)\n    x26 =bordering(x25)\n    x27 = mostcolor(x26)\n    x28 = matcher(first, x27)\n    x29 = compose(flip, x28)\n    x30 = rbind(sfilter, x29)\n    x31 = lbind(recolor, x27)\n    x32 = compose(x31, x30)\n    x33 = chain(x19, x32, x29)\n    x34 = ofcolor(x14, x27)\n    x35 = compose(x34, x33)\n    x36 = ofcolor(x14, x27)\n    x37 = fork(combine, x35, x36)\n    x38 = apply(x37, x34)\n    x39 = fork(recolor, x33, x38)\n    x40 = mapply(x39,"], [1.1, "def solve_a3eb87ac(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = interval(ONE, x1, ONE)\n    x3 = connect(ORIGIN, DOWN)\n    x4 = connect(ORIGIN, ZERO_BY_TWO)\n    x5 = combine(x3, x4)\n    x6 = astuple(NEG_TWO, TWO)\n    x7 = lbind(multiply, x6)\n    x8 = toivec(NEG_TWO)\n    x9 = apply(x7, x2)\n    x10 = rbind(subtract, TWO_BY_ZERO)\n    x11 = fork(shift, identity, x10)\n    x12 = repeat(x11, TWO)\n    x13 = lbind(repeat, x12)\n    x14 = compose(x13, width)\n    x15 = rbind(paint, x14)\n    x16 = lbind(recolor, ZERO)\n    x17 = compose(x16, x15)\n    x18 = fork(paint, x17, x15)\n    x19 = compose(x13, first)\n    x20 = rbind(argmax, x19)\n    x21 = compose(x20, x18)\n    x22 = apply(x21, x3)\n    x23 = fork(common, x21, x22)\n    x24 = remove(x15, x23)\n    x25 = totuple(x24)\n    x26 = first(x25)\n    x27 = last(x25)\n    x28 = color(x26)\n    x29 = mostcolor(I)\n    x30 = shape(x26)\n    x31 = canvas(x29, x30)\n    x32 = fill(x31, x27, x26)\n    x33 = asobject(x12)\n    x34 = ofcolor(x33, x29)\n    x35 = difference(x34, x34)\n    x36 = shape(x28)\n    x37 = lbind(shift, x33)\n    x38 = shift(x34, x36)\n    x39 = lbind(paint, x33)\n    "], [1.1, "def solve_596d6b46(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_d7b7de6a(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = index(x3, DOWN)\n    x5 = portrait(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(x3)\n    x8 = lefthalf(x7)\n    x9 = righthalf(x7)\n    x10 = palette(x8)\n    x11 = palette(x9)\n    x12 = compose(flip, x5)\n    x13 = extract(x10, x12)\n    x14 = extract(x11, x13)\n    x15 = other(x10, x14)\n    x16 = ofcolor(x8, x15)\n    x17 = last(x16)\n    x18 = replace(x8, x14, x17)\n    x19 = leftmost(x16)\n    x20 = lbind(downscale, x19)\n    x21 = compose(x20, toindices)\n    x22 = x21(x18)\n    x23 = rbind(upscale, x22)\n    x24 = chain(x23, halve, width)\n    x25 = rbind(branch, x34)\n    x26 = rbind(x25, x24)\n    x27 = chain(size, dedupe, x26)\n    x28 = rbind(branch, x49)\n    x29 = rbind(x28, x27)\n    x30 = chain(x29, x26, x23)\n    x31 = fork(combine, x27, x30)\n    x32 = fork(add, x24, x31)\n    x33 = fork(insert, x32, palette)\n    x34 = compose(backdrop, x33)\n    x35 = mapply(x34, x18)\n    x36 = double(x19)\n    x37 = rbind(greater, x36)\n    x38 = compose(x37, first)\n    x39 = chain(invert, x35, x38)"], [1.1, "def solve_8c48ed19(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, corners)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, x2)\n    x5 = fgpartition(I)\n    x6 = merge(x5)\n    x7 = backdrop(x4)\n    x8 = toobject(x7, I)\n    x9 = difference(x6, x8)\n    x10 = toobject(x9, I)\n    x11 = color(x4)\n    x12 = color(x10)\n    x13 = ofcolor(I, x11)\n    x14 = ulcorner(x4)\n    x15 = ulcorner(x10)\n    x16 = subtract(x14, x15)\n    x17 = leftmost(x16)\n    x18 = rightmost(x16)\n    x19 = subtract(x17, x18)\n    x20 = lowermost(x16)\n    x21 = leftmost(x16)\n    x22 = subtract(x20, x21)\n    x23 = astuple(x22, x19)\n    x24 = ulcorner(x7)\n    x25 = ulcorner(x7)\n    x26 = subtract(x24, x25)\n    x27 = astuple(x26, x19)\n    x28 = invert(x27)\n    x29 = double(x28)\n    x30 = astuple(x22, x19)\n    x31 = cover(I, x30)\n    x32 = downscale(x31, x29)\n    x33 = ofcolor(x32, x11)\n    x34 = ulcorner(x3)\n    x35 = increment(x34)\n    x36 = rbind(subtract, x35)\n    x37 = chain(x36, size, first)\n    x38 = interval(e26, x37, ONE)\n    x39 = sfilter(x38, x37)\n    x40 = apply(normalize, x39)\n    x41 = rbind(colorcount, x11)\n    x42"], [1.1, "def solve_329f378a(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x2, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, x4)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x6, x2)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_efa33aa6(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_93912620(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_de576dac(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmin(x2, size)\n    x4 = color(x3)\n    x5 = leftmost(x3)\n    x6 =85(I)\n    x7 = color(x3)\n    x8 = leftmost(x3)\n    x9 =greater(x8, x5)\n    x10 = greater(x5, x9)\n    x11 = branch(x10, x7, x9)\n    x12 = x11(I)\n    x13 = color(x12)\n    x14 = subgrid(x12, I)\n    x15 = leftmost(x12)\n    x16 = rightmost(x12)\n    x17 = subtract(x15, x16)\n    x18 = add(x15, x17)\n    x19 = urcorner(x12)\n    x20 = shoot(x19, UNITY)\n    x21 = add(x29, x20)\n    x22 = llcorner(x12)\n    x23 = shoot(x22, DOWN_LEFT)\n    x24 =44877(x14)\n    x25 = combine(x23, x24)\n    x26 = combine(x21, x25)\n    x27 = downscale(x12, x19)\n    x28 = astuple(x31, x26)\n    x29 = canvas(x11, x28)\n    x30 = interval(ZERO, x12, ONE)\n    x31 = invert(x15)\n    x32 = shift(x30, x31)\n    x33 = asobject(x32)\n    x34 = matcher(first, x11)\n    x35 = compose(flip, x34)\n    x36 = sfilter(x33, x35)\n    x37 = lbind(shift, x27)\n    x38 = height(x12)\n    x39 = astuple(x37, x38)\n    x40 = x37(x39)\n    x41 = width(x12)\n    x42 = astuple(x44,"], [1.1, "def solve_d2c1c10b(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = chain(size, dedupe, first)\n    x9 = matcher(x8, ONE)\n    x10 = compose(first, cmirror)\n    x11 = chain(size, dedupe, x10)\n    x12 = matcher(x11, ONE)\n    x13 = fork(both, x9, x12)\n    x14 = rbind(rapply, I)\n    x15 = compose(initset, first)\n    x16 = chain(first, x14, x15)\n    x17 = compose(x13, x16)\n    x18 = extract(x7, x17)\n    x19 = first(x18)\n    x20 = last(x18)\n    x21 = x19(I)\n    x22 = width(x21)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = index(x21, x24)\n    x26 = asobject(x21)\n    x27 = matcher(first, x25)\n    x28 = compose(flip, x27)\n    x29 = sfilter(x26, x28)\n    x30 = hperiod(x29)\n    x31 = width(x21)\n    x32 = increment(x31)\n    x33 = interval(ZERO, x32, x30)\n    x34 = apply(tojvec, x33)\n    x35 = lbind(shift, x29)\n    x36 = mapply(x35, x34)\n    x37 = index(x21, x won)\n    x38 = lbind(shift, x26)\n    x39 = mapply(x38, x37)\n    x40 = combine(x36, x39)"], [1.1, "def solve_e5a6c3f3(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_552d11db(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_0d0e45b6(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_8478e970(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_cfeca1f0(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, FIVE)\n    x4 = astuple(FOUR, FOUR)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = asindices(x5)\n    x7 = rbind(toobject, I)\n    x8 = lbind(shift, x6)\n    x9 = compose(x7, x8)\n    x10 = multiply(x3, FIVE)\n    x11 = interval(ZERO, x10, FIVE)\n    x12 = apply(tojvec, x11)\n    x13 = apply(x9, x12)\n    x14 = matcher(numcolors, ONE)\n    x15 = fork(equality, identity, hmirror)\n    x16 = compose(flip, x15)\n    x17 = lbind(index, I)\n    x18 = compose(x17, ulcorner)\n    x19 = lbind(add, DOWN)\n    x20 = chain(x17, x19, ulcorner)\n    x21 = fork(equality, x18, x20)\n    x22 = compose(flip, x21)\n    x23 = fork(either, x14, x16)\n    x24 = fork(either, x23, x22)\n    x25 = compose(flip, x24)\n    x26 = lbind(multiply, TWO)\n    x27 = compose(x26, x14)\n    x28 = lbind(multiply, FOUR)\n    x29 = compose(x28, x16)\n    x30 = fork(add, x27, x29)\n    x31 = lbind(multiply, THREE)\n    x32 = compose(x31, x22)\n    x33 = lbind(multiply, EIGHT)\n    x34 = compose(x33, x25)\n    x35 = fork(add, x32, x34)\n    x36 = fork(add, x30, x35)\n    x37 = apply(x36, x13)\n    x38 = rbind(repeat,"], [1.1, "def solve_136c7692(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x1, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18,"], [1.1, "def solve_e581fd5d(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = insert(x8, x11)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = subgrid(x13, I)\n    x16 = width(x15)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = output(x17, x14)\n    x19 = height(x15)\n    x20 = interval(ZERO, x19, ONE)\n    x21 = pair(x18, x20)\n    x22 = sfilter(x21, x18)\n    x23 = first(x22)\n    x24 = height(x15)\n    x25 = interval(ZERO, x24, ONE)\n    x26 = pair(x23, x25)\n    x27 = urcorner(x28)\n    x28 = matcher(first, x3)\n    x29 = rbind(sfilter, x28)\n    x30 = compose(first, last)\n    x31 = chain(flip, x29, x30)\n    x32 = asobject(x27)\n    x33 = matcher(first, x3)\n    x34 = sfilter(x32, x33)\n    x35 = increment(x34)\n    x36 = width(x15)\n    x37 = interval(ZERO, x36, x35)\n    x38 = multiply(x37, x29)\n    x39 = lbind(apply, double)\n    x40 = lbind(shift, x33)\n    x41 = pair(x38, x40)\n    x42 ="], [1.1, "def solve_c8789a13(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = interval(TWO, FIVE, ONE)\n    x4 = rbind(shift, RIGHT)\n    x5 = rbind(shift, LEFT)\n    x6 = rbind(shift, UP)\n    x7 = rbind(shift, DOWN)\n    x8 = lbind(fork, intersection)\n    x9 = lbind(x8, identity)\n    x10 = lbind(rbind, shift)\n    x11 = compose(x9, x10)\n    x12 = compose(x11, tojvec)\n    x13 = chain(x11, tojvec, invert)\n    x14 = compose(x11, toivec)\n    x15 = chain(x11, toivec, invert)\n    x16 = lbind(compose, initset)\n    x17 = lbind(rbind, rapply)\n    x18 = lbind(chain, first)\n    x19 = lbind(compose, x5)\n    x20 = x16(x12)\n    x21 = rbind(compose, x20)\n    x22 = lbind(rbind, mapply)\n    x23 = chain(x21, x22, x17)\n    x24 = lbind(compose, x4)\n    x25 = x16(x13)\n    x26 = rbind(compose, x25)\n    x27 = x23(x10)\n    x28 = x27(x14)\n    x29 = x27(x divide)\n    x30 = branch(x26, x27, x28)\n    x31 = objects(I, T, T, T)\n    x32 = apply(x30, x31)\n    x33 = rbind(interval, ONE)\n    x34 = lbind(NEG_ONE)\n    x35 = chain(x33, x34, x30)\n    x36 = apply(x35, x32)\n    x37 = lbind(recolor, x1)\n    x38 = apply(x37, x36)\n    x39 = p"], [1.1, "def solve_648dd7c9(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = insert(x14, x24)\n    x26 = width(x9)\n    x27 = halve(x26)\n    x28 = tojvec(x27)\n    x29 = height(x9)\n    x30 = decrement(x29)\n    x31 = insert(x30, x30)\n    x32 = width(x9)\n    x33 = halve(x32)\n    x34 = tojvec(x33)\n    x35 = height(x9)\n    x36 = decrement(x35)\n    x37 = insert(x34, x36)\n    x38 = height(x10)\n    x39 = height(x28)\n    x40 = divide(x38, x39)\n    x41 = width(x10)\n    x42 = halve(x31)\n    x43 = tojvec(x42)\n    x44 = height(x10)\n    "], [1.1, "def solve_e00c3330(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = astuple(dmirror, cmirror)\n    x2 = astuple(hmirror, identity)\n    x3 = combine(x1, x2)\n    x4 = fork(vsplit, identity, height)\n    x5 = chain(asobject, first, x4)\n    x6 = mostcolor(I)\n    x7 = lbind(chain, numcolors)\n    x8 = lbind(x7, x5)\n    x9 = lbind(chain, color)\n    x10 = lbind(x9, x5)\n    x11 = rbind(rapply, I)\n    x12 = compose(initset, x8)\n    x13 = chain(first, x11, x12)\n    x14 = rbind(rapply, I)\n    x15 = compose(initset, x10)\n    x16 = chain(first, x14, x15)\n    x17 = matcher(x13, ONE)\n    x18 = matcher(x16, x6)\n    x19 = compose(flip, x18)\n    x20 = fork(both, x17, x19)\n    x21 = argmax(x3, x20)\n    x22 = x21(I)\n    x23 = x5(x22)\n    x24 = color(x23)\n    x25 = palette(x22)\n    x26 = remove(x24, x25)\n    x27 = other(x26, x6)\n    x28 = objects(x22, T, T, T)\n    x29 = colorfilter(x28, x27)\n    x30 = ofcolor(x22, x24)\n    x31 = ofcolor(x22, x6)\n    x32 = mapply(neighbors, x31)\n    x33 = mapply(neighbors, x32)\n    x34 = lowermost(x30)\n    x35 = dneighbors(ORIGIN)\n    x36 = remove(DOWN, x35)\n    x37 = rbind(mapply, x36)\n    x38 = lbind(chain, x37)\n    x"], [1.1, "def solve_84551f44(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_f950905b(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, corners)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = fgpartition(I)\n    x6 = merge(x5)\n    x7 = backdrop(x4)\n    x8 = toobject(x7, I)\n    x9 = difference(x6, x8)\n    x10 = mostcolor(I)\n    x11 = inbox(x4)\n    x12 = backdrop(x11)\n    x13 = toobject(x12, I)\n    x14 = matcher(first, x10)\n    x15 = compose(flip, x14)\n    x16 = sfilter(x13, x15)\n    x17 = subgrid(x9, I)\n    x18 = palette(x16)\n    x19 = order(x18, identity)\n    x20 = lbind(colorcount, x16)\n    x21 = apply(x20, x19)\n    x22 = lbind(colorcount, x9)\n    x23 = apply(x22, x19)\n    x24 = pair(x21, x23)\n    x25 = fork(divide, first, last)\n    x26 = apply(x25, x24)\n    x27 = mostcommon(x26)\n    x28 = lbind(colorcount, x16)\n    x29 = lbind(colorcount, x9)\n    x30 = fork(divide, x28, x29)\n    x31 = matcher(x30, x27)\n    x32 = palette(x9)\n    x33 = sfilter(x32, x31)\n    x34 = rbind(contained, x33)\n    x35 = compose(x34, first)\n    x36 = sfilter(x16, x35)\n    x37 = sfilter(x9, x35)\n    x38 = height(x36)\n    x39 = height(x37)\n    x40 = divide(x38, x39)\n    x41 = width(x36)\n    x42"], [1.1, "def solve_7222b097(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_cc568ded(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = width(x4)\n    x6 = toivec(x5)\n    x7 = index(x4, x6)\n    x8 = shape(x4)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x4, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, rot90)\n    x16 = lbind(power, rot270)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x13)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x19)\n    x24 = uppermost(x12)\n    x25 = lbind(add, x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = lbind(multiply, x27)\n    x29 = chain(toivec, x25, x28)\n    x30 = fork(shift, x23, x29)\n    x31 = compose(asobject, x22)\n    x32 = uppermost(x12)\n    x33 = lbind(subtract, x32)\n    x34 = height(x12)\n    x35 = increment(x34)\n    x36 = lbind(multiply, x35)\n    x37 = chain(toivec, x33, x36)\n    x38 = fork(shift, x31, x37)\n    x39 = fork(combine"], [1.1, "def solve_472e902c(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(argout, x18)\n    x20 = apply(x17, x19)\n    x21 = combine(x16, x20)\n    x22 = fill(I, THREE, x21)\n    x23 = asindices(x22)\n    x24 = shift(x23, x2)\n    x25 = fork(combine, hfrontier, vfrontier)\n    x26 = x25(x24)\n    x27 = tojvec(x2)\n    x28 = interval(ZERO, x27, ONE)\n    x29 = paint(x22, x28)\n    x30 = initset(x2)\n    x31 = insert(x62, x30)\n    x32 = insert(x26, x31)\n    x33 = size(x32)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = apply(tojvec, x34)\n    x36 = apply(numcolors, x35)\n    x37 = matcher(equality, ZERO)\n    x38 = lbind(be94 mostcolor(I)\n    "], [1.1, "def solve_ee614b31(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = ONE(I)\n    x2 =999(connect, sender3de236\n    x3 = apply(initset, x1)\n    x4 = rbind(shoot, UNITY)\n    x5 = mapply(x4, x3)\n    x6 = fill(x1, EIGHT, x5)\n    x7 = index(I, x4)\n    x8 = equality(x7, ZERO)\n    x9 = branch(x8, vsplit, hsplit)\n    x10 = shape(I)\n    x11 = maximum(x10)\n    x12 = index(I, x11)\n    x13 =559999(I, x6)\n    x14 = add(x13, x11)\n    x15 = initset(x14)\n    x16 = lbind(96, x11)\n    x17 = rbind(apply, x16)\n    x18 = compose(x17, x9)\n    x19 = lbind(compose, flip)\n    x20 = lbind(matcher, first)\n    x21 = compose(x19, x20)\n    x22 = lbind(rbind, sfilter)\n    x23 = lbind(compose, x25)\n    x24 = chain(x22, x23, x21)\n    x25 = lbind( fork, greater)\n    x26 = compose(x25, x14)\n    x27 = compose(x25, x16)\n    x28 = fork(add, x26, x27)\n    x29 = fork(add, x25, x28)\n    x30 = fork(connect, x29, x21)\n    x31 = fork(contained, x30, x22)\n    x32 = fork(contained, x31, x26)\n    x33 = fork(either, x30, x32)\n    x34 = matcher(x33, ZERO)\n    x35 = extract(x32, x34)\n    x35 = first(x35)\n    x36 = last(x35)\n    x37 = palette(I)\n    x38 =either(x37, x40)\n    x39 ="], [1.1, "def solve_57de1c1d(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(tophalf, x3)\n    x5 = mapply(tojvec, x4)\n    x6 = palette(I)\n    x7 = objects(x6, T, F, F)\n    x8 = colorfilter(x7, ZERO)\n    x9 = sfilter(x8, square)\n    x10 = compose(even, height)\n    x11 = sfilter(x9, x10)\n    x12 = difference(x9, x11)\n    x13 = merge(x12)\n    x14 = lbind(colorcount, x13)\n    x15 = argmin(x11, x14)\n    x16 = objects(x6, T, F, F)\n    x17 = colorfilter(x16, x15)\n    x18 = compose(maximum, shape)\n    x19 = lbind(apply, x18)\n    x20 = lbind(colorfilter, x17)\n    x21 = chain(maximum, x19, palette)\n    x22 = matcher(x21, x15)\n    x23 = sfilter(x17, x22)\n    x24 = rbind(shoot, UNITY)\n    x25 = mapply(x24, x23)\n    x26 = underfill(x17, x15, x25)\n    x27 = objects(x26, T, F, F)\n    x28 = colorfilter(x27, x15)\n    x29 = rbind(bordering, I)\n    x30 = mfilter(x28, x29)\n    x31 = combine(x28, x30)\n    x32 = mapply(toindices, x31)\n    x33 = difference(x32, x31)\n    x34 = toobject(x33, I)\n    x35 = apply(x38, x34)\n    x36 = rbind(313484b58, x35)\n    x37 = chain(palette, x36,198)\n    x38 = rbind(contained,"], [1.1, "def solve_51d83ee1(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = compose(x4, size)\n    x6 = compose(x1, x5)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x200, x7, dmirror)\n    x9 = objects(I, T, F, F)\n    x10 = rbind(colorcount, ZERO)\n    x11 = valmax(x10, x6)\n    x12 = matcher(x6, x11)\n    x13 = sfilter(x19, x12)\n    x14 = compose(maximum, shape)\n    x15 = argmin(x13, x14)\n    x16 = apply(first, x13)\n    x17 = rbind(adjacent, x15)\n    x18 = apply(x17, x16)\n    x19 = sfilter(x16, x18)\n    x20 = rbind(adjacent, x15)\n    x21 = remove(x8, x19)\n    x22 = extract(x21, x12)\n    x23 = first(x22)\n    x24 = apply( last, x22)\n    x25 = height(x23)\n    x26 = decrement(x25)\n    x27 = apply(last, x22)\n    x28 = vupscale(x23, x27)\n    x29 = asobject(x28)\n    x30 = hperiod(x29)\n    x31 = index(I, x30)\n    x32 = objects(x29, T, F, F)\n    x33 = rbind(multiply, LEFT)\n    x34 = apply(x33, x32)\n    x35 = rbind(add, RIGHT)\n    x36 = apply(x35, x34)\n    x37 = pair(x26, x36)\n    x38 = sfilter(x37, x28)\n    x39 = apply(last, x38)\n    x40 = asobject"], [1.1, "def solve_79f42bbf(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    x3 = add(TWO, x2)\n    x4 = canvas(x1, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = paint(x4, x6)\n    x8 = double(SIX)\n    x9 = astuple(ONE, x8)\n    x10 = connect(UNITY, x9)\n    x11 = outbox(x10)\n    x12 = backdrop(x11)\n    x13 = recolor(x1, x12)\n    x14 = recolor(THREE, x10)\n    x15 = lbind(shift, x14)\n    x16 = lbind(mapply, x15)\n    x17 = rbind(occurrences, x13)\n    x18 = compose(x16, x17)\n    x19 = fork(paint, identity, x18)\n    x20 = x19(x7)\n    x21 = ofcolor(x20, THREE)\n    x22 = dmirror(x7)\n    x23 = x19(x22)\n    x24 = dmirror(x23)\n    x25 = ofcolor(x24, THREE)\n    x26 = combine(x21, x25)\n    x27 = fill(x7, THREE, x26)\n    x28 = astuple(TWO, ONE)\n    x29 = dneighbors(UNITY)\n    x30 = remove(x28, x29)\n    x31 = recolor(x1, x30)\n    x32 = initset(UNITY)\n    x33 = recolor(THREE, x32)\n    x34 = combine(x31, x33)\n    x35 = recolor(x1, x34)\n    x36 = astuple(ONE, THREE)\n    x37 = initset(x36)\n    x38 = insert(ZERO_BY_TWO, x37)\n    x39 = insert(RIGHT, x38)\n    x40 = insert(DOWN, x39)\n    x41 ="], [1.1, "def solve_3436f7c9(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, identity, dmirror)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = apply(first, x22)\n    x24 = lbind(sfilter, x21)\n    x25 = compose(first, last)\n    x26 = lbind(matcher, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x27, x23)\n    x29 = lbind(shift, x15)\n    x30 = chain(x29, toivec, uppermost)\n    x31 = matcher(first, x18)\n    x32 = rbind(sfilter, x31)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(toindices, x32, x30)\n    x36 = chain(x33, x34, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = compose(color, x37)\n    x39 = compose(x32, x30)\n    x40 = fork(recolor, x38, x39)\n    x41 = fork(other, palette,"], [1.1, "def solve_88da6077(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 =8872501578\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = tojvec(x5)\n    x7 = intersection(x3, x6)\n    x8 = height(I)\n    x9 = height(x2)\n    x10 = greater(x8, x9)\n    x11 = leftmost(x7)\n    x12 = interval(x11, x12, ONE)\n    x13 = palette(I)\n    x14 = lbind(power, TWO)\n    x15 = rbind(rapply, x13)\n    x16 = compose(initset, x15)\n    x17 = chain(first, x14, x16)\n    x18 = multiply(TEN, THREE)\n    x19 = interval(ZERO, x18, ONE)\n    x20 = pair(x19, x15)\n    x21 = apply(x17, x20)\n    x22 = astuple(x6, x6)\n    x23 = repeat(x22, ONE)\n    x24 = lbind(pair, x21)\n    x25 = compose(initset, x24)\n    x26 = chain(first, x24, x25)\n    x27 = apply(x26, x21)\n    x28 = astuple(x6, x6)\n    x29 = repeat(x28, ONE)\n    x30 = combine(x23, x29)\n    x31 = apply(x20, x30)\n    x32 = combine(x3, x31)\n    x33 = apply(x22, x32)\n    x34 = lbind(colorcount, I)\n    x35 = apply(x34, x33)\n    x36 = lbind(colorcount, I)\n    x37 = apply(x36, x35)\n    x38 = lbind(colorcount, I)\n    x39 = apply(x38, x37)\n    x40 = lbind(colorcount, I)\n    x41 = apply(x40, x"], [1.1, "def solve_129ef3f2(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, ONE)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)"], [1.1, "def solve_a2c70c87(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = leastcolor(I)\n    x9 = rbind(ofcolor, x8)\n    x10 = rbind(rapply, I)\n    x11 = chain(first, x10, initset)\n    x12 = chain(hline, x9, x11)\n    x13 = rbind(ofcolor, x8)\n    x14 = rbind(rapply, I)\n    x15 = chain(first, x14, initset)\n    x16 = chain(leftmost, x13, x15)\n    x17 = matcher(x16, ZERO)\n    x18 = fork(both, x12, x17)\n    x19 = compose(x18, first)\n    x20 = extract(x7, x19)\n    x21 = first(x20)\n    x22 = last(x20)\n    x23 = x21(I)\n    x24 = ofcolor(x23, x8)\n    x25 = argmax(x24, last)\n    x26 = add(x25, UP_RIGHT)\n    x27 = shoot(x26, UP_RIGHT)\n    x28 = add(x25, DOWN_LEFT)\n    x29 = shoot(x28, DOWN_LEFT)\n    x30 = rbind(shoot, LEFT)\n    x31 = mapply(x30, x27)\n    x32 = rbind(shoot, LEFT)\n    x33 = mapply(x32, x29)\n    x34 = width(x23)\n    x35 = invert(x34)\n    x36 = tojvec(x35)\n    x37 = shift(x31, x36)\n    x38 = combine(x31, x37)\n    x39 ="], [1.1, "def solve_a4f9b018(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_35177eb6(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_75f92ff9(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(asobject, x21)\n    x23 = x22(x2)\n    x24 = x22(I)\n    x25 = x22(x4)\n    x26 = x22(x6)\n    x27 = objects(x18, T, F, T)\n    x28 = colorfilter(x27, x16)\n    x29 = paint(x18, x28)\n    x30 = subgrid(x2, x29)\n    x31 = index(x30, DOWN)\n    x32 = replace(x30, x16, x119)\n    x33 = replace(x32, x26, x5)\n    x34 = combine(x31, x33)\n    x35 = merge(x34)\n    x36 = astuple(FOUR, FOUR)\n    x37 = canvas(x31, x36)\n    x38 = paint(x37, x35)\n    x39 = rot90(x38)\n    x40 = paint(x39, x35)\n    x41 = rot90(x40)\n    x42 = shape(x31)\n    x43 ="], [1.1, "def solve_ef2e91c2(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = order(x1, x2)\n    x4 = apply(x3, x1)\n    x5 = size(x4)\n    x6 = decrement(x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = remove(x2, x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = leftmost(x12)\n    x14 = ofcolor(I, x11)\n    x15 = either(x14, x13)\n    x16 = leftmost(x12)\n    x17 = vmirror(I)\n    x18 = hmirror(I)\n    x19 = lbind(add, x8)\n    x20 = chain(x19, ulcorner, llcorner)\n    x21 = compose(x21, urcorner)\n    x22 = chain(x1, ulcorner, llcorner)\n    x23 = fork(add, x22, x17)\n    x24 = fork(add, x23, x18)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = mostcolor(I)\n    x28 = toindices(x25)\n    x29 = matcher(first, x27)\n    x30 = toindices(x25)\n    x31 = sfilter(x30, x29)\n    x32 = argmax(x31, x24)\n    x33 = difference(x25, x32)\n    x34 = toobject(x33, I)\n    x35 = matcher(first, x10)\n    x36 = compose(flip, x35)\n    x37 = sfilter(x34, x36)\n    x38 = lbind(shift, x27)\n    x39 = compose(x38, ulcorner)\n    x40 = fork(combine, x37, x39)\n    x41 ="], [1.1, "def solve_107d340b(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(canvas, NEG_ONE)\n    x2 = lbind(apply, shape)\n    x3 = chain(size, x1, x2)\n    x4 = lbind(repeat, ZERO)\n    x5 = compose(x4, x3)\n    x6 = fork(paint, x5, x4)\n    x7 = compose(cmirror, x6)\n    x8 = astuple(dmirror, cmirror)\n    x9 = astuple(hmirror, vmirror)\n    x10 = combine(x8, x9)\n    x11 = lbind(compose, x5)\n    x12 = x11(x10)\n    x13 = lbind(ofcolor, I)\n    x14 = compose(x12, x13)\n    x15 = decrement(xsize)\n    x16 = toivec(x15)\n    x17 = connect(ORIGIN, x16)\n    x18 = insert(UNITY, x17)\n    x19 = branch(x18, vsplit, hsplit)\n    x20 = x19(I, TWO)\n    x21 = first(x20)\n    x22 = last(x20)\n    x23 = width(x21)\n    x24 = decrement(x23)\n    x25 = tojvec(x24)\n    x26 = connect(ORIGIN, x25)\n    x27 = height(x21)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = connect(ORIGIN, x29)\n    x31 = width(x21)\n    x32 = decrement(x31)\n    x33 = tojvec(x32)\n    x34 = connect(ORIGIN, x33)\n    x35 = height(x21)\n    x36 = decrement(x35)\n    x37 = toivec(x36)\n    x38 = connect(ORIGIN, x37)\n    x39 = width(x21)\n    x40 = decrement(x39)\n    x41 = tojvec(x40"], [1.1, "def solve_110ea174(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = upscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = size(x22)\n    x24 = positive(x23)\n    x25 = branch(x24, hmirror, vmirror)\n    x26 = x25(x14)\n    x27 = ofcolor(x26, x3)\n    x28 = asindices(x14)\n    x29 = ofcolor(x26, x3)\n    x30 = difference(x29, x28)\n    x31 = rbind(contained, x30)\n    x32 = compose(flip, x31)\n    x33 = sfilter(x27, x32)\n    x34 = fork(equality, identity, dmirror)\n    x35 = sfilter(x33, x34)\n    x36 = flip(x35)\n    x37 = multiply(x31, THREE)\n    x38 = dmirror(x37)\n    x39 = lbind(ofcolor, x18)\n    x40 = compose(flip, x39)\n    x41 = rbind(sfilter, x40)\n    x42 = compose("], [1.1, "def solve_882ab4b4(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = leastcolor(I)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = argmin(x12, numcolors)\n    x14 = rbind(contained, x13)\n    x15 = normalize(x13)\n    x16 = objects(x44, x14, x15)\n    x17 = colorfilter(x16, x3)\n    x18 =indices(x9)\n    x19 = ofcolor(x11, x3)\n    x20 = difference(x18, x19)\n    x21 = rbind(multiply, LEFT)\n    x22 = rbind(divide, LEFT)\n    x23 = rbind(multiply, x20)\n    x24 = rbind(divide, x20)\n    x25 = rbind(multiply, x22)\n    x26 = lbind(970gpartition, x21)\n    x27 = fork(009, x24, x25)\n    x28 = compose(x27, x6)\n    x29 = fork(either, x28, x29)\n    x30 = rbind(002, extract)\n    x31 = extract(x15, x29)\n    x32 = rbind(002, x31)\n    x33 = fork(649, x29, x32)\n    x34 = rbind(oward combine, x27)\n    x35 = compose(x34, x28)\n    x36 = fork(add, x35, x31)\n    x37 = fork(connect, x33, x36)\n    x38 = shape(x13)\n    x39 = multiply(x38, x38)\n"], [1.1, "def solve_c7269f41(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, last)\n    x3 = compose(x1, x2)\n    x4 = lbind(ofcolor, I)\n    x5 = fork(size, x4, x3)\n    x6 = compose(x5, palette)\n    x7 = fork(vline, x6,757)\n    x8 = fork(astuple, x3, x4)\n    x9 = fork(add, x8, x7)\n    x10 = asindices(I)\n    x11 = apply(x9, x10)\n    x12 =725092511, x11)\n    x13 = argmax(x12, identity)\n    x14 = apply(last, x15)\n    x15 = size(x14)\n    x16 = increment(x15)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = product(x17, x17)\n    x19 = power(first, FIVE)\n    x20 = astuple(recolor, x19)\n    x21 = astuple(center, ORIGIN)\n    x22 = astuple(x21, x208)\n    x23 = combine(x20, x22)\n    x24 = rbind(toobject, I)\n    x25 = compose(last, last)\n    x26 = rbind(ofcolor, x25)\n    x27 = mapply(x26, x23)\n    x28 = mostcolor(I)\n    x29 = combine(x27, x28)\n    x30 = recolor(x29, x27)\n    x31 = initset(x15)\n    x32 = insert(x16, x31)\n    x33 = insert(x32, x31)\n    x34 = toobject(x33, I)\n    x35 = lbind(recolor, x54)\n    x36 = compose(x35, x24)\n    x37 = fork(shift, x36, ulcorner)\n    x38 = mapply(x37, x34)\n    x39 = paint(I, x38)\n    x40 = rot"], [1.1, "def solve_77f716d5(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, vmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_39f9c12f(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(SIX)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_9cfa08a0(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_819f366d(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = argmax(x1, size)\n    x3 = remove(x2, x1)\n    x4 = merge(x3)\n    x5 = size(x4)\n    x6 = positive(x5)\n    x7 = branch(x6, height, width)\n    x8 = x7(I)\n    x9 = color(x2)\n    x10 = ofcolor(I, x9)\n    x11 = ofcolor(I, x2)\n    x12 = position(x10, x11)\n    x13 = first(x12)\n    x14 = last(x21)\n    x15 = subgrid(x13, I)\n    x16 = width(x15)\n    x17 = divide(x16, THREE)\n    x18 = tojvec(x17)\n    x19 = height(x15)\n    x20 = divide(x19, THREE)\n    x21 = increment(x20)\n    x22 = interval(ZERO, x21, ONE)\n    x23 = asobject(x15)\n    x24 = matcher(first, x9)\n    x25 = compose(flip, x24)\n    x26 = sfilter(x23, x25)\n    x27 = lbind(shift, x22)\n    x28 = height(x12)\n    x29 = divide(x28, FOUR)\n    x30 = increment(x29)\n    x31 = width(x12)\n    x32 = divide(x31, FOUR)\n    x33 = increment(x32)\n    x34 = invert(x30)\n    x35 = interval(ZERO, x34, ONE)\n    x36 = astuple(x32, x31)\n    x37 = lbind(shift, x22)\n    x38 = lbind(multiply, x36)\n    x39 = compose(x37, x38)\n    x40 = lbind(mapply, x29)\n    x41 = lbind(shift, x26)\n    x42 = compose(x40, x41)\n    x43 = fork(comb"], [1.1, "def solve_1dbb4996(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_7e01343f(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = ofcolor(I, THREE)\n    x2 = crop(I, ORIGIN, THREE_BY_THREE)\n    x3 = asobject(x2)\n    x4 = matcher(first, THREE)\n    x5 = compose(flip, x4)\n    x6 = sfilter(x3, x5)\n    x7 = fork(multiply, height, width)\n    x8 = size(x6)\n    x9 = divide(x8, THREE)\n    x10 = multiply(x9, THREE)\n    x11 = add(x10, TWO)\n    x12 = multiply(x11, ONE)\n    x13 = argmin(x6, x12)\n    x14 = neighbors(x13)\n    x15 = mapply(neighbors, x14)\n    x16 = astuple(x11, x13)\n    x17 = rbind(multiply, x16)\n    x18 = astuple(x15, x17)\n    x19 = underfill(I, THREE, x18)\n    x20 = objects(x19, T, F, F)\n    x21 = colorfilter(x20, TWO)\n    x22 = rbind(adjacent, x13)\n    x23 = sfilter(x21, x22)\n    x24 = rbind(toobject, x19)\n    x25 = compose(x4, delta)\n    x26 = chain(x24, x25, mostcolor)\n    x27 = rbind(canvas, UNITY)\n    x28 = apply(x27, x23)\n    x29 = merge(x28)\n    x30 = palette(x29)\n    x31 = matcher(first, THREE)\n    x32 = compose(flip, x31)\n    x33 = sfilter(x30, x32)\n    x34 = rbind(conpose, x528)\n    x35 = lbind(rbind, contained)\n    x36 = chain(x34, x35, x22)\n    x37 = lbind(colorcount, x14)\n    x38 = compose(x37, x36)\n    x39 = sfilter("], [1.1, "def solve_846da2ef(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(difference, toindices, box)\n    x3 = compose(size, x2)\n    x4 = matcher(x3, ZERO)\n    x5 = rbind(add, FOUR)\n    x6 = chain(x5, double, width)\n    x7 = fork(equality, size, x6)\n    x8 = chain(x5, double, height)\n    x9 = fork(equality, size, x8)\n    x10 = fork(either, x7, x9)\n    x11 = fork(both, x4, x10)\n    x12 = extract(x1, x11)\n    x13 = toindices(x12)\n    x14 = center(x12)\n    x15 = vfrontier(x14)\n    x16 = intersection(x13, x15)\n    x17 = size(x16)\n    x18 = positive(x17)\n    x19 = branch(x18, dmirror, identity)\n    x20 = x19(I)\n    x21 = color(x12)\n    x22 = palette(I)\n    x23 = remove(x21, x22)\n    x24 = lbind(colorcount, I)\n    x25 = argmin(x23, x24)\n    x26 = other(x23, x25)\n    x27 = ofcolor(x20, x25)\n    x28 = ofcolor(x20, x21)\n    x29 = leftmost(x28)\n    x30 = lbind(greater, x29)\n    x31 = compose(x30, last)\n    x32 = sfilter(x27, x31)\n    x33 = difference(x27, x32)\n    x34 = vmirror(x32)\n    x35 = leftmost(x28)\n    x36 = leftmost(x32)\n    x37 = subtract(x35, x36)\n    x38 = add(TWO, x37)\n    x39 = tojvec(x38)\n    x40 = shift(x34, x39)\n    x41 = vmirror("], [1.1, "def solve_d18da226(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = apply(86260, x6)\n    x8 =pply(connect, x7, x7)\n    x9 = mfilter(x8, vline)\n    x10 = sfilter(x8, x4)\n    x11 = difference(x8, x10)\n    x12 = mapply(88, x11)\n    x13 = shape(I)\n    x14 = add(TWO, x13)\n    x15 = canvas(x1, x14)\n    x16 = asobject(I)\n    x17 = shift(x16, UNITY)\n    x18 = paint(x15, x17)\n    x19 = double(SIX)\n    x20 = astuple(ONE, x19)\n    x21 = invert(x20)\n    x22 = asindices(x21)\n    x23 = recolor(x1, x22)\n    x24 = shift(x23, x21)\n    x25 = paint(x18, x24)\n    x26 = double(SIX)\n    x27 = astuple(ONE, x26)\n    x28 = invert(x27)\n    x29 = invert(x28)\n    x30 = astuple(ZERO, x29)\n    x31 = invert(x30)\n    x32 = astuple(x31, x21)\n    x33 = shoot(UNITY, x32)\n    x34 = shoot(x33, x24)\n    x35 = combine(x33, x34)\n    x36 = intersection(x33, x34)\n    x37 = shoot(x36, x31)\n    x38 = recolor(x1, x37)\n    x39 = paint(x20, x38)\n    x40 = double(x39)\n    x41 = invert(x40)\n    x"], [1.1, "def solve_38d285b0(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = size(x5)\n    x7 = positive(x6)\n    x8 = astuple(color, x5)\n    x9 = astuple(center, x3)\n    x10 = lbind(ofcolor, I)\n    x11 = branch(x7, x9, x10)\n    x12 = x11(x1)\n    x13 = x11(I)\n    x14 = height(x13)\n    x15 = divide(x14, x12)\n    x16 = subtract(x15, x12)\n    x17 = width(x13)\n    x18 = divide(x17, x12)\n    x19 = astuple(x16, x18)\n    x20 = invert(x19)\n    x21 = ulcorner(x7)\n    x22 = invert(x21)\n    x23 = urcorner(x7)\n    x24 = ulcorner(x7)\n    x25 = astuple(x23, x24)\n    x26 = shift(x5, x25)\n    x27 = subgrid(x26, x13)\n    x28 = astuple(x21, x22)\n    x29 = ulcorner(x7)\n    x30 = ulcorner(x7)\n    x31 = subtract(x30, x29)\n    x32 = shift(x5, x31)\n    x33 = ofcolor(x27, x50)\n    x34 = recolor(x50, x33)\n    x35 = ofcolor(x41, x50)\n    x36 = recolor(x451, x35)\n    x37 = combine(x34, x36)\n    x38 = height(x37)\n    x39 = decrement(x38)\n    x40 = toivec(x39)\n    x41 = invert(x40)\n    x42 = shift(x"], [1.1, "def solve_5f252d22(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_a09e04cd(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = apply(first, x22)\n    x24 = lbind(sfilter, x21)\n    x25 = compose(first, last)\n    x26 = lbind(matcher, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x27, x23)\n    x29 = lbind(shift, x15)\n    x30 = chain(x29, toivec, uppermost)\n    x31 = matcher(first, x18)\n    x32 = rbind(sfilter, x31)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(toindices, x32, x30)\n    x36 = chain(x33, x34, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = compose(color, x37)\n    x39 = compose(x32, x30)\n    x40 = fork(recolor, x38, x39)\n    x41 = fork(other, palette,"], [1.1, "def solve_e321daa0(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = asindices(I)\n    x5 = apply(first, x4)\n    x6 = difference(x5, x3)\n    x7 = ofcolor(I, x1)\n    x8 = rbind(interval, ONE)\n    x9 = lbind(rbind, contained)\n    x10 = lbind(sfilter, x6)\n    x11 = rbind(matcher, ZERO)\n    x12 = chain(size, x10, x9)\n    x13 = lbind(sfilter, x7)\n    x14 = lbind(compose, x12)\n    x15 = chain(x13, x11, x14)\n    x16 = lbind(fork, x8)\n    x17 = compose(increment, minimum)\n    x18 = lbind(lbind, astuple)\n    x19 = lbind(chain, x17)\n    x20 = rbind(x19, first)\n    x21 = chain(x20, x18, first)\n    x22 = lbind(chain, maximum)\n    x23 = rbind(x22, first)\n    x24 = chain(x23, x18, first)\n    x25 = fork(x16, x21, x24)\n    x26 = compose(x15, x25)\n    x27 = apply(toivec, x3)\n    x28 = apply(x26, x27)\n    x29 = argmax(x28, width)\n    x30 = remove(x29, x28)\n    x31 = ulcorner(x29)\n    x32 = invert(x31)\n    x33 = shift(x29, x32)\n    x34 = asindices(I)\n    x35 = center(x34)\n    x36 = invert(x35)\n    x37 = shift(x34, x36)\n    x38 = width(I)\n    x39 = double(x38)\n    x40 = tojvec(x39)\n    x"], [1.1, "def solve_036c9bd8(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x20, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = compose(x86, last)\n    x38 = argmin(x35, x37)\n    x39 = first(x38)\n    x40"], [1.1, "def solve_86692c69(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = lbind(remove, x1)\n    x3 = chain(positive, size, x2)\n    x4 = compose(x3, palette)\n    x5 = multiply(FIVE, UNITY)\n    x6 = canvas(ZERO, x5)\n    x7 = asindices(x6)\n    x8 = fork(add, first, last)\n    x9 = chain(flip, even, x8)\n    x10 = sfilter(x7, x9)\n    x11 = initset(x1)\n    x12 = box(x7)\n    x13 = inbox(x7)\n    x14 = center(x7)\n    x15 = initset(x14)\n    x16 = lbind(toobject, x12)\n    x17 = compose(x4, x16)\n    x18 = lbind(toobject, x13)\n    x19 = compose(x4, x18)\n    x20 = lbind(toobject, x15)\n    x21 = compose(x4, x20)\n    x22 = fork(both, x19, x21)\n    x23 = fork(both, x17, x22)\n    x24 = compose(x23, trim)\n    x25 = compose(box,477)\n    x26 = lbind(toobject, x25)\n    x27 = compose(x26, asindices)\n    x28 = fork(difference, x27, box)\n    x29 = lbind(fork, recolor)\n    x30 = lbind(x29, identity)\n    x31 = lbind(compose, x12)\n    x32 = lbind(compose, x28)\n    x33 = compose(x31, x2)\n    x34 = fork(x31, x32, x33)\n    x35 = lbind(chain, size)\n    x36 = lbind(x35, connect)\n    x37 = lbind(x37, x22)\n    x38 = lbind(compose, x24)\n    x39 = compose(x38, x34)\n    x40 ="], [1.1, "def solve_dacc8ab1(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_8787993e(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = astuple(SIX, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, THREE)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = astuple(x23, x27)\n    x29 = rbind(ofcolor, x18)\n    x30 = compose(x29, last)\n    x31 = ofcolor(I, x21)\n    x32 = intersection(x31, x30)\n    x33 = mapply(x30, x32)\n    x34 = fill(I, TWO, x33)\n    x35 = astuple(x24, x30)\n    x36 = lbind(apply, last)\n    x37 = power(x36, FOUR)\n    x38 = x37(x34)\n    x39 ="], [1.1, "def solve_062a2e8e(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = double(TEN)\n    x2 = interval(ZERO, x1, ONE)\n    x3 = connect(ORIGIN, DOWN)\n    x4 = connect(ORIGIN, ZERO_BY_TWO)\n    x5 = combine(x3, x4)\n    x6 = astuple(NEG_TWO, TWO)\n    x7 = lbind(multiply, x6)\n    x8 = toivec(NEG_TWO)\n    x9 = apply(x7, x2)\n    x10 = rbind(subtract, TWO_BY_ZERO)\n    x11 = fork(ofcolor, identity, leastcolor)\n    x12 = chain(x10, center, x11)\n    x13 = rbind(mapply, x9)\n    x14 = lbind(lbind, shift)\n    x15 = lbind(shift, x5)\n    x16 = compose(x15, x12)\n    x17 = chain(x13, x14, x16)\n    x18 = lbind(recolor, FIVE)\n    x19 = compose(x18, x17)\n    x20 = fork(paint, identity, x19)\n    x21 = compose(rot180, x20)\n    x22 = fork(ofcolor, x21, leastcolor)\n    x23 = compose(center, x22)\n    x24 = fork(subtract, x23, x12)\n    x25 = fork(shift, x17, x24)\n    x26 = lbind(recolor, FIVE)\n    x27 = rbind(shift, x8)\n    x28 = chain(x26, x27, x25)\n    x29 = fork(paint, x21, x28)\n    x30 = compose(rot180, x29)\n    x31 = rbind(ofcolor, FIVE)\n    x32 = compose(x31, x30)\n    x33 = leastcolor(I)\n    x34 = ofcolor(I, x33)\n    x35 = mostcolor(I)\n    x36 = shape(I)\n    x37 = canvas(x35, x"], [1.1, "def solve_ad47e53a(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_011e9459(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = add(x37, ulcorner)\n    x39 = invert(x38)\n    x40 = shift(x31"], [1.1, "def solve_25a4bc90(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_8b54f2e0(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 =ulcorner(x24)\n    x26 = urcorner(x24)\n    x27 = shoot(x25, UNITY)\n    x28 = shoot(x26, DOWN_LEFT)\n    x29 = combine(x27, x28)\n    x30 = fill(x24, x3, x29)\n    x31 = intersection(x30, x22)\n    x32 = fill(x30, TWO, x31)\n    x33 =787(x32)\n    x34 =88 first(x33)\n    x35 = rightmost(x34)\n    x36 = lbind(shift, x34)\n    x37 = objects(x32, T, F, T)\n    x38 = colorfilter(x37, x39)\n    x39 = apply"], [1.1, "def solve_37d6790b(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, ZERO, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x21, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32, x31)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = sfilter(x rbind, x34)\n    x36 = astuple(x21, x20)\n    x37 = lbind(multiply, x36)\n    x38 = apply(x37, x35)\n    x39 = lbind(shift, x28)\n    x40 = mapply(x39, x38)"], [1.1, "def solve_aed84e40(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x1, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x6, x4)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ONE)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18, x"], [1.1, "def solve_ffee73d7(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(contained, EIGHT)\n    x2 = chain(flip, x1, palette)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(apply, x4)\n    x6 = chain(x3, x5, frontiers)\n    x7 = astuple(x6, ONE)\n    x8 = sfilter(x3, x7)\n    x9 = fork(color, first, last)\n    x10 = product(x8, x9)\n    x11 = color(x1)\n    x12 =294(I)\n    x13 = rbind(toobject, I)\n    x14 = compose(x13, first)\n    x15 = last(x14)\n    x16 = ofcolor(x15, x11)\n    x17 = ulcorner(x16)\n    x18 = subgrid(x16, x15)\n    x19 = rot90(x18)\n    x20 = matcher(last, x19)\n    x21 = subtract(x17, x20)\n    x22 = rot180(x17)\n    x23 = matcher(last, x22)\n    x24 = subtract(x17, x23)\n    x25 = replace(x19, x51, x12)\n    x26 = combine(x21, x24)\n    x27 = branch(x88, x26, x25)\n    x28 = rbind(colorcount, x11)\n    x29 = rbind(toobject, x14)\n    x30 = matcher(x28, x552)\n    x31 = compose(flip, x30)\n    x32 = extract(x29, x31)\n    x33 = first(x32)\n    x34 = last(x32)\n    x35 = x33(x94)\n    x36 = x33(x14)\n    x37 = ulcorner(x16)\n    x38 = add(x37, x36)\n    x39 = subgrid(x13, x19)\n    x40 = rbind(count, x38)"], [1.1, "def solve_dd24cb04(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x20, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = compose(x36, first)\n    x38 = argmin(x35, x37)\n    x39 = first(x38)\n    x40"], [1.1, "def solve_5e58d5ab(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(colorcount, x31)\n    x34 = compose(x33, first)\n    x35 = matcher(x34, ZERO)\n    x36 = rbind(ofcolor, x31)\n    x37 = chain(flip, x35, x36)\n    x38 = fork(recolor, x37, x31)\n    x39 = mapply(x38,"], [1.1, "def solve_6d8b78f0(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = height(I)\n    x9 = astuple(x8, ONE)\n    x10 = canvas(THREE, x9)\n    x11 = hconcat(x10, I)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = identity(DOWN)\n    x17 = connect(ORIGIN, x15)\n    x18 = fill(x11, THREE, x17)\n    x19 = identity(x13)\n    x20 = identity(x12)\n    x21 = identity(x12)\n    x22 = identity(F)\n    x23 = identity(ZERO)\n    x24 = compose(first, first)\n    x25 = chain(first, last, x24)\n    x26 = compose(first, first)\n    x27 = chain(last, last, x26)\n    x28 = chain(first, first, first)\n    x29 = chain(first, last, last)\n    x30 = chain(first, first, last)\n    x31 = chain(last, first, last)\n    x32 = compose(decrement, x25)\n    x33 = compose(decrement, x27)\n    x34 = fork(astuple, x32, x33)\n    x35 = compose(decrement, x27)\n    x36 = fork(subtract, x25, x35)\n    x37 = fork(subtract, x28, x36)\n    x38 = fork(astuple, x34, x37)\n    x39 = lbind(extract, x7)\n    x40 = lbind(matcher, first)\n    x41 = chain"], [1.1, "def solve_68ead827(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = partition(I)\n    x2 = product(x1, x1)\n    x3 = fork(equality, first, last)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = fork(adjacent, first, last)\n    x7 = compose(flip, x6)\n    x8 = extract(x5, x7)\n    x9 = totuple(x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = combine(x10, x11)\n    x13 = leftmost(x12)\n    x14 = increment(x13)\n    x15 = rightmost(x12)\n    x16 = decrement(x15)\n    x17 = apply(uppermost, x9)\n    x18 = maximum(x17)\n    x19 = increment(x18)\n    x20 = apply(lowermost, x9)\n    x21 = minimum(x20)\n    x22 = decrement(x21)\n    x23 = apply(leftmost, x9)\n    x24 = maximum(x23)\n    x25 = increment(x24)\n    x26 = apply(rightmost, x9)\n    x27 = minimum(x26)\n    x28 = decrement(x27)\n    x29 = uppermost(x12)\n    x30 = increment(x29)\n    x31 = lowermost(x12)\n    x32 = decrement(x31)\n    x33 = hmatching(x10, x11)\n    x34 = branch(x33, x14, x25)\n    x35 = branch(x33, x16, x28)\n    x36 = branch(x33, x22, x32)\n    x37 = branch(x33, x19, x30)\n    x38 = astuple(x36, x35)\n    x39 = astuple(x37, x34)\n    x40 = initset(x39)\n    x41 = insert(x38, x40)\n    x42 = backdrop(x41)\n    x43 = merge"], [1.1, "def solve_d3dc2f97(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = equality(x5, ZERO)\n    x7 = branch(x6, identity, vmirror)\n    x8 = x7(x4)\n    x9 = ofcolor(x8, EIGHT)\n    x10 = uppermost(x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, identity, hmirror)\n    x13 = x12(x8)\n    x14 = ofcolor(x13, EIGHT)\n    x15 = ofcolor(x13, TWO)\n    x16 = rbind(shoot, DOWN)\n    x17 = mapply(x16, x14)\n    x18 = height(x13)\n    x19 = apply(first, x15)\n    x20 = insert(ZERO, x19)\n    x21 = insert(x18, x19)\n    x22 = apply(decrement, x21)\n    x23 = order(x20, identity)\n    x24 = order(x22, identity)\n    x25 = size(x15)\n    x26 = increment(x25)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = apply(tojvec, x27)\n    x29 = pair(x23, x24)\n    x30 = lbind(sfilter, x17)\n    x31 = compose(first, last)\n    x32 = chain(decrement, first, first)\n    x33 = fork(greater, x31, x32)\n    x34 = chain(increment, last, first)\n    x35 = fork(greater, x34, x31)\n    x36 = fork(both, x33, x35)\n    x37 = lbind(lbind, astuple)\n    x38 = lbind(compose, x36)\n    x39 = chain(x30, x38, x37)\n    x40"], [1.1, "def solve_37dad45e(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_cf8952e1(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = apply(first, x22)\n    x24 = lbind(sfilter, x21)\n    x25 = compose(first, last)\n    x26 = lbind(matcher, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x27, x23)\n    x29 = lbind(shift, x15)\n    x30 = chain(x29, toivec, uppermost)\n    x31 = matcher(first, x18)\n    x32 = rbind(sfilter, x31)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(toindices, x32, x30)\n    x36 = chain(x33, x34, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = compose(color, x37)\n    x39 = compose(x32, x30)\n    x40 = fork(recolor, x38, x39)\n    x41 = fork(other, palette, x38)\n"], [1.1, "def solve_b0d8f7d8(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = astuple(SIX, ONE)\n    x2 = crop(I, ORIGIN, x1)\n    x3 = tophalf(x2)\n    x4 = upscale(x3, FOUR)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = hconcat(x2, x5)\n    x7 = upscale(x6, FOUR)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = crop(x6, x9, x7)\n    x11 =458(x10)\n    x12 = vmirror(x11)\n    x13 = objects(x12, F, F, T)\n    x14 = argmin(x13, numcolors)\n    x15 = x14(x14)\n    x16 = subgrid(x15, x6)\n    x17 = palette(x16)\n    x18 = remove(ZERO, x17)\n    x19 = other(x18,1991)\n    x20 = rbind(colorcount, x19)\n    x21 = argmin(x12, x20)\n    x22 = hmirror(x21)\n    x23 = objects(x22, T, F, T)\n    x24 = colorfilter(x23, x19)\n    x25 = argmin(x24, DOWN)\n    x26 = ulcorner(x25)\n    x27 = llcorner(x25)\n    x28 = add(x27, x6)\n    x29 = add(x28, x20)\n    x30 = shift(x22, x29)\n    x31 = rbind(10, x30)\n    x32 =jlpply(x31, x26)\n    x33 = apply(x16, x32)\n    x34 = normalize(x33)\n    x35 = x14(x34)\n    x36 = matcher(first, x39)\n    x37 = rbind(sfilter, x36)\n    x38 = lbind(mirror, x37)\n    x39 = chain(size, x35, x"], [1.1, "def solve_8b6972ad(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_37303c83(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_f21f0b18(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_a7dd8c9e(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 =73colors(I)\n    x2 = neighbors(ORIGIN)\n    x3 = mapply(neighbors, x2)\n    x4 = insert(ORIGIN, x3)\n    x5 = rbind(shoot, ORIGIN)\n    x6 = mapply(x5, x4)\n    x7 = underfill(I, ONE, x6)\n    x8 = rbind(shoot, DOWN)\n    x9 = mapply(x8, x4)\n    x10 = astuple(cmirror,459)\n    x11 = astuple(hmirror, vmirror)\n    x12 = combine(x10, x11)\n    x13 = rbind(shoot, UP_RIGHT)\n    x14 = mapply(x13, x4)\n    x15 = combine(x13, x14)\n    x16 = fork(combine, identity, x15)\n    x17 = mapply(x16, x12)\n    O = paint(x7, x17)\n    return O"], [1.1, "def solve_befaf6f7(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = compose(flip, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = matcher(color, x5)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x1, x7)\n    x9 = merge(x8)\n    x10 = fill(I, TWO, x9)\n    x11 = mapply(toindices, x8)\n    x12 = fill(x10, NEG_ONE, x11)\n    x13 = lbind(shift, x8)\n    x14 = mapply(x13, x12)\n    x15 = fill(x12, sIX, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = colorfilter(x16, x5)\n    x18 = rbind(adjacent, x4)\n    x19 = sfilter(x17, x18)\n    x20 = difference(x17, x19)\n    x21 =9(ORIGIN, center)\n    x22 = colorfilter(x105, TWO)\n    x23 =449(x22, x21)\n    x24 = rbind(shoot, DOWN)\n    x25 = mapply(x24, x23)\n    x26 = fill(x15, SIX, x25)\n    x27 = objects(x26, T, F, T)\n    x28 = apply(urcorner, x27)\n    x29 = mapply(x28, x26)\n    x30 = shoot(x26, UP_RIGHT)\n    x31 = shoot(x26, NEG_UNITY)\n    x32 = combine(x30, x31)\n    x33 = mapply(x25, x29)\n    x34 = fill(x26, SIX, x33)\n    O = fill(x34, ONE, x32)\n    return O"], [1.1, "def solve_eb347341(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = fork(combine, dneighbors, box)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, T, F, T)\n    x9 = colorfilter(x8, x4)\n    x10 = rbind(bordering, I)\n    x11 =min(x9, x10)\n    x12 =747(x11)\n    x13 = rbind(hordering, I)\n    x14 = vmirror(x11)\n    x15 = hconcat(x13, x14)\n    x16 =aint(x15, x12)\n    O = vconcat(x16, x8)\n    return O"], [1.1, "def solve_b12746ad(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =479(I)\n    x3 = compose(first, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = other(x8, x1)\n    x10 = replace(I, x6, x1)\n    x11 = objects(x10, T, F, F)\n    x12 = colorfilter(x11, x6)\n    x13 = rbind(bordering, x10)\n    x14 = compose(flip, x13)\n    x15 = mfilter(x12, x14)\n    x16 = difference(x12, x15)\n    x17 = apply(ulcorner, x16)\n    x18 = rbind(shift, RIGHT)\n    x19 = mapply(x18, x17)\n    x20 = vmirror(x19)\n    x21 = objects(x20, T, F, T)\n    x22 = apply(toindices, x21)\n    x23 = apply(urcorner, x22)\n    x24 = mapply(x23, x22)\n    x25 = mapply(toindices, x24)\n    x26 = apply(llcorner, x25)\n    x27 = mapply(toindices, x26)\n    x28 = mapply(add, x15, x27)\n    x29 = mapply(tojvec, x28)\n    x30 = mapply(x29, x25)\n    x31 = fill(x20, x6, x30)\n    x32 = fill(x31, x9, x27)\n    O = replace(x32, x6, x1)\n    return O"], [1.1, "def solve_ef0bce29(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = lbind(colorcount, I)\n    x5 = compose(x4, size)\n    x6 = matcher(x5, TWO)\n    x7 =2069457b6(I)\n    x8 = mfilter(x3, x6)\n    x9 = objects(I, T, F, F)\n    x10 = TEN(x9)\n    x11 = rbind(adjacent, x10)\n    x12 = mfilter(x8, x11)\n    O = fill(I, FOUR, x12)\n    return O"], [1.1, "def solve_7f8678ae(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 =8888(I, T, F)\n    x2 =8888(I, FOUR)\n    x3 = compose(first, x2)\n    x4 = rbind(compose, x3)\n    x5 = lbind(rbind, contained)\n    x6 = chain(x4, x5, last)\n    x7 =05d8ef2013(x6)\n    x8 =77(x7)\n    x9 =77(x6)\n    x10 = fork(sfilter, identity, x8)\n    x11 = fork(sfilter, identity, x9)\n    x12 = compose(size, x10)\n    x13 = compose(size, x11)\n    x14 = greater(x12, ONE)\n    x15 = branch(x14, x13, x7)\n    x16 = x15(x6)\n    x17 = ofcolor(I, x16)\n    x18 = inbox(x17)\n    ORIGIN, x18)\n    x19 = portrait(x17)\n    x20 = branch(x19, x7, x7)\n    x21 = branch(x19, vline, hline)\n    x22 = x20(x21)\n    x23 = fill(I, ZERO, x22)\n    x24 = ofcolor(I, x16)\n    x25 = difference(x24, x26)\n    O = fill(x23, ZERO, x25)\n    return O"], [1.1, "def solve_5902ac14(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 =000170000000\n    \"\"\"\n    x2 = box(I)\n    O = fill(I, ZERO, x2)\n    return O"], [1.1, "def solve_96559171(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 =sit6594224 contained(I, ONE)\n    x2 = delta(x1)\n    x3 =66toindices(x2)\n    x4 = box(x3)\n    x5 = difference(x4, x3)\n    x6 = inbox(x5)\n    x7 = backdrop(x6)\n    x8 = lbind(position, x7)\n    x9 = compose(288, x8)\n    x10 = fork(greater, identity, x9)\n    x11 = sfilter(x5, x10)\n    x12 = difference(x5, x11)\n    x13 = lbind(greater, ONE)\n    x14 = compose(x13, x12)\n    x15 = power(x14, FOUR)\n    x16 = fork(both, x3, x15)\n    x17 = fork(both, x6, x16)\n    x18 = fgpartition(I)\n    x19 = merge(x18)\n    x20 = difference(x19, x18)\n    x21 = mostcolor(I)\n    x22 = compose(remove, center)\n    x23 = compose(center, x22)\n    x24 = fork(shoot, x23, x22)\n    x25 = fork(recolor, color, x24)\n    x26 = mapply(x25, x20)\n    O = paint(I, x26)\n    return O"], [1.1, "def solve_90188eab(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices ofx14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.1, "def solve_a8e15b94(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    a87203756\n    \"\"\"\n    x1 = recolor(ONE, x3)\n    x2 = colorfilter(x1, TWO)\n    x3 = hsplit(I, x2)\n    x4 = apply(tojvec, x3)\n    x5 = mapply(x7, x4)\n    O = fill(I, EIGHT, x5)\n    return O"], [1.1, "def solve_d8440fb5(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = palette(I)\n    x2 =393(I)\n    x3 = remove(ZERO, x1)\n    x4 = lbind(ofcolor, I)\n    x5 = lbind(prapply, connect)\n    x6 = fork(x5, x4, x4)\n    x7 = compose(merge, x6)\n    x8 = fork(recolor, identity, x7)\n    x9 = mapply(x8, x3)\n    O = paint(I, x9)\n    return O"], [1.1, "def solve_e5b868d5(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = index(x3, ORIGIN)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = intersection(x6, x4)\n    x8 = lrcorner(x7)\n    x9 = shoot(x8, DOWN_LEFT)\n    x10 = intersection(x9, x4)\n    x11 = combine(x7, x10)\n    x12 = asobject(x11)\n    x13 =04015(x12)\n    x14 =\n    1821114120\n    0145451991\n    1410141000\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = objects(x3, T, F, T)\n    x3 = colorfilter(x2, x1)\n    x4 = difference(x2, x3)\n    x5 = merge(x3)\n    x6 = rbind(subgrid, x3)\n    x7 = chain(palette, x6, shape)\n    x8 = lbind(fork, replace)\n    x9 = lbind(x8, identity)\n    x10 = lbind(x9, x7)\n    x11 = rbind(x10, x1)\n    x12 = lbind(ofcolor, x13)\n    x13 = fork(mapply, x12, x11)\n    x14 = mapply(x13, x4)\n    x15 =42159(x14)\n    x16 = replace(x3, x1, x5)\n    O = fill(x16, x1, x16)\n    return O"], [1.1, "def solve_248d610c(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = chain(flip, x1, shape)\n    x3 = hmirror(I)\n    x4 = fgpartition(x3)\n    x5 = merge(x4)\n    x6 = chain(normalize, toindices, box)\n    x7 = difference(x5, x6)\n    x8 = compose(size, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = fork(add, leftmost, uppermost)\n    x11 = argmin(x7, x10)\n    x12 = palette(x3)\n    x13 = remove(x11, x12)\n    x14 = lbind(colorcount, I)\n    x15 = argmin(x13, x14)\n    x16 = lbind(colorcount, x3)\n    x17 = normalize(x11)\n    x18 = matcher(x16, x17)\n    x19 = argmin(x9, x18)\n    x20 = palette(x3)\n    x21 = colorfilter(x20, x19)\n    x22 = rbind(74ddupe, x21)\n    x23 = argmin(x12, x22)\n    x24 = ofcolor(x23, x19)\n    x25 =contained(x19, x24)\n    x26 = ofcolor(x3, x16)\n    x27 = intersection(x26, x25)\n    x28 = outbox(x27)\n    x29 = subgrid(x28, x3)\n    x30 = ofcolor(x29, x16)\n    x31 = ofcolor(x29, x19)\n    x32 = intersection(x31, x30)\n    x33 = replace(x29, x16, x59)\n    x34 = extract(x32, x33)\n    x35 = subgrid(x34, x3)\n    O = trim(x35)\n    return O"], [1.1, "def solve_7ce8e736(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 =157786e21(I):\n    x2 =449989product1\n    x3 =4447(I)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = combine(x8, x5)\n    x10 = lefthalf(x9)\n    O = tophalf(x10)\n    return O"], [1.1, "def solve_e427d8b5(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = rbind(order, identity)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = chain(positive, size, x5)\n    x7 = rbind(repeat, x1)\n    x8 = compose(x7, x6)\n    O =344(x2)\n    return O"], [1.1, "def solve_0d395f90(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 =6360(x24)\n    x26 = ulcorner(x24)\n    x27 = index(x14, x26)\n    x28 = equality(x27, x22)\n    x29 = shift(x15, x28)\n    x30 = urcorner(x28)\n    x31 = other(x10, x13)\n    x32 = shoot(x26, x31)\n    x33 = combine(x29, x32)\n    x34 = rbind(shoot, x30)\n    x35 = mapply(x34, x33)\n    x36 = double(TEN)\n    x37 = tojvec(x36)\n    x38 =47(x35)\n    x39 = insert(x37, x38)\n    O = lrcorner(x39)\n    return O"], [1.1, "def solve_78b20688(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = cover(I, x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(x3, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x77, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = rbind(matcher, ZERO)\n    x14 = compose(x12, x13)\n    x15 = rbind(gravitate, x2)\n    x16 = compose(x15, x14)\n    x17 = fork(add, x16, ulcorner)\n    x18 = fork(connect, x17, x14)\n    x19 = fork(67a423677\n    x20 = fork(sfilter, x18, x19)\n    x21 = fork(recolor, x14, x20)\n    x22 = mapply(x21, x11)\n    O = paint(x7, x22)\n    return O"], [1.1, "def solve_3adb1ed0(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 =portcat(I, I)\n    x2 = box(x1)\n    x3 = fill(x1, ZERO, x2)\n    x4 = subgrid(x1, x3)\n    x5 = fork(combine, vfrontier, hfrontier)\n    x6 = width(x4)\n    x7 = rbind(greater, x6)\n    x8 = chain(x7, tojvec, lrcorner)\n    x9 = height(x4)\n    x10 = decrement(x9)\n    x11 = matcher(x8, x10)\n    x12 = extract(x7, x11)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = toobject(x14, I)\n    x16 = add(UNITY, x15)\n    x17 = shape(x13)\n    x18 = canvas(ZERO, x17)\n    x19 = asindices(x18)\n    x20 = shift(x19, x17)\n    x21 = paint(x18, x20)\n    x22 = objects(x21, F, F, T)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = paint(x21, x23)\n    x25 = normalize(x12)\n    x26 = lbind(shift, x25)\n    x27 =9799383200(x26)\n    x28 = paint(x24, x27)\n    x29 = paint(x28, x25)\n    x30 = rot90(x29)\n    x31 = downscale(x30, x16)\n    x32 = rot90(x31)\n    x33 = paint(x32, x25)\n    O = rot270(x33)\n    return O"], [1.1, "def solve_743cf0a9(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palettecae(I)\n    x5 = remove(x3, x4)\n    x6 = hsplit(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = compress(x7)\n    x10 = palette(x9)\n    x11 =467(x9)\n    x12 =11(x8)\n    x13 = rbind(hconcat, x5)\n    x14 = compose(x13, vmirror)\n    x15 = x14(x10)\n    x16 = ofcolor(x15, x31)\n    x17 = mapply(neighbors, x16)\n    x18 = difference(x17, x16)\n    O = fill(x15, ONE, x18)\n    return O"], [1.1, "def solve_2d480f1a(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = mapply(O = fill(I, x11, x32)\n    return O"], [1.1, "def solve_782109c2(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, h)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = width(I)\n    x16 = decrement(x15)\n    x17 = tojvec(x16)\n    x18 = connect(ORIGIN, x17)\n    x19 = height(I)\n    x20 = decrement(x19)\n    x21 = toivec(x20)\n    x22 = connect(ORIGIN, x21)\n    x23 = shape(I)\n    x24 = canvas(ZERO, x23)\n    x25 = lbind(tojvec, x24)\n    x26 = lbind(shift, x12)\n    x27 = compose(x25, x26)\n    x28 = apply(x27, x18)\n    x29 = lbind(ofcolor, I)\n    x30 = lbind(mapply, x29)\n    x31 = ofcolor(I, x3)\n    x32 =(x30, x31)\n    x33 = fill(x23, x3, x32)\n    x34 = astuple(x23, x28)\n    x35 = shift(x12, x34)\n    x36 = increment(x38)\n    x37 =\n    x31, x36)\n    x38 = apply(x25, x37)\n    O = fill(x33, x3, x38)\n    return O"], [1.1, "def solve_3f684412(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 =0044d8556(I)\n    x5 = objects(I, T, F, T)\n    x6 = height(I)\n    x7 = halve(x6)\n    x8 = add(x7, TWO)\n    x9 = width(I)\n    x10 = rbind(multiply, x9)\n    x11 = apply(x10, x5)\n    x12 = mapply(outbox, x11)\n    x13 = fill(I, x3, x12)\n    x14 = mapply(vfrontier, x15)\n    O = fill(x13, x3, x14)\n    return O"], [1.1, "def solve_1012c076(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, identity, dmirror)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = matcher(identity, x9)\n    x18 = rbind(sfilter, x17)\n    x19 = compose(size, x18)\n    x20 = argmin(x16, x19)\n    x21 = asobject(x20)\n    x22 = matcher(first, x9)\n    x23 = compose(flip, x22)\n    x24 = sfilter(x21, x23)\n    x25 = size(x24)\n    x26 = width(x6)\n    x27 = multiply(x25, x26)\n    x28 = multiply(x25, x27)\n    x29 = rbind(multiply, x28)\n    x30 = chain(most, x29, last)\n    x31 = compose(29ecdecrement, first)\n    x32 = fork(greater, first, last)\n    x33 = compose(x32, x31)\n    x34 = fork(add, first, x33)\n    x35 = compose(x34, last)\n    x36 = ofcolor(x16, x9)\n    x37 = mapply(x35, x36)\n    x38 = paint(x6, x37)\n    O = x5(x38)\n    return O"], [1.1, "def solve_662468bc(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = trim(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(x2)\n    x4 = vmirror(x3)\n    x5 = bottomhalf(x2)\n    x6 = lefthalf(x5)\n    x7 = bottomhalf(x2)\n    x8 = vmirror(x7)\n    x9 = palette(I)\n    x10 = combine(x9, x6)\n    x11 = intersection(x9, x8)\n    x12 = difference(x10, x11)\n    x13 = order(x12, uppermost)\n    x14 = colorcount(I, x6)\n    x15 =\n    x16 =\n    x17 =\n    x16)\n    x18 = x13(x14)\n    x19 = x16(x18)\n    x20 = subtract(x19, x17)\n    x21 = decrement(x20)\n    x22 = canvas(x9, x3)\n    x23 = tojvec(x21)\n    x24 = crop(x22, x23, x20)\n    O = fill(x24, ZERO, x22)\n    return O"], [1.1, "def solve_7f1bcbab(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = toindices(x1)\n    x3 =227(x2)\n    x4 = mapply(dneighbors, x1)\n    x5 = mapply(ineighbors, x1)\n    x6 = toobject(x4, I)\n    x7 =27(x6)\n    x8 = mostcolor(x7)\n    x9 = palette(I)\n    x10 = remove(x8, x9)\n    x11 = other(x10, x9)\n    x12 =16114840442338500\n    x13 = rbind(colorcount, x8)\n    x14 = argmax(x11, x13)\n    x15 = ofcolor(I, x11)\n    x16 = subgrid(x15, I)\n    x17 = apply(mostcommon, x15)\n    x18 = normalize(x16)\n    x19 = lbind(shift, x18)\n    x20 = mapply(x19, x17)\n    x21 = ofcolor(x20, x11)\n    x22 = subgrid(x21, x20)\n    x23 = apply(mostcommon, x15)\n    x24 = normalize(x22)\n    x25 = matcher(first, x8)\n    x26 = sfilter(x24, x25)\n    x27 = shift(x26, x20)\n    O = fill(x22, x11, x27)\n    return O"], [1.1, "def solve_53115b75(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = totuple(x6)\n    x9 = order(x8, identity)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = remove(x10, x9)\n    x13 = compose(last, last)\n    x14 = compose(hmirror, first)\n    x15 = rightmost(x4)\n    x16 = rightmost(x11)\n    x17 = greater(x15, x16)\n    x18 = branch(x17, x13, x14)\n    x19 = crop(x10, ORIGIN, x18)\n    x20 = decrement(x17)\n    x21 =364(x20, TWO_BY_ZERO)\n    O = branch(x17, width, height)\n    return O"], [1.1, "def solve_fe7d6417(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = palette(I)\n    x2 =446(ONE, THREE)\n    x3 = rbind(subgrid, I)\n    x4 =44compose(x3, x2)\n    x5 = rbind(colorcount, ZERO)\n    x6 = matcher(x5, THREE)\n    x7 = compose(x6, x4)\n    x8 = cmirror(I)\n    x9 = papply(pair, x8, x6)\n    x10 =2417apply(remove, x9)\n    x11 = objects(x14, x10, x3)\n    x12 = argmax(x11, x7)\n    x13 = subgrid(x12, x14)\n    x14 = increment(x13)\n    x15 = branch(x11, ZERO, x14)\n    x16 = asindices(x15)\n    x17 = lbind(shift, x16)\n    x18 = double(x17)\n    x19 = interval(ZERO, x18, ONE)\n    x20 = lbind(multiply, x17)\n    x21 = apply(x20, x19)\n    x22 = lbind(mapply, x12)\n    x23 = lbind(lbind, shift)\n    x24 = lbind(occurrences, x14)\n    x25 = compose(x24, x23)\n    x26 = lbind(lbind, shift)\n    x27 = compose(x26, x25)\n    x28 = lbind(rbind, occurrences)\n    x29 = compose(x28, last)\n    x30 = fork(matcher, last, x27)\n    x31 = fork(sfilter, hline, x30)\n    x32 = mapply(x31, x21)\n    O = paint(x14, x32)\n    return O"], [1.1, "def solve_e3d50554(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = shape(I)\n    x20 = canvas(x10, x19)\n    x21 = lbind(divide, x19)\n    x22 = apply(x21, x18)\n    x23 = sfilter(x1, x22)\n    x24 = lbind(colorcount, x20)\n    x25 = argmin(x23, x24)\n    x26 = objects(x6, T, F, T)\n    x27 = colorfilter(x26, x25)\n    x28 = apply(ulcorner, x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x26)\n    x31 = paint(x20, x30)\n    x32 = merge(x31)\n    x33 =99(x32)\n    x34 = replace(x31, x25, x33)\n    O = cover(x39, x34)\n    return O"], [1.1, "def solve_32d41890(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = switch(I, THREE, FOUR)\n    x2 =46(equality, NINE, ZERO)\n    x3 = branch(x2, dmirror, identity)\n    x4 = x3(x1)\n    x5 = objects(x4, T, F, T)\n    x6 = argmin(x5, leftmost)\n    x7 = argmax(x5, leftmost)\n    x8 = color(x6)\n    x9 = color(x7)\n    x10 = leftmost(x6)\n    x11 = leftmost(x7)\n    x12 = height(x6)\n    x13 = width(x6)\n    x14 = astuple(x12, x13)\n    x15 = mostcolor(I)\n    x16 =most(x6)\n    x17 = uppermost(x6)\n    x18 = color(x16)\n    x19 = color(x17)\n    x20 = rightmost(x6)\n    x21 = leftmost(x7)\n    x22 = astuple(x20, x21)\n    x23 = remove(x16, x22)\n    x24 =80126(I):\n    x25 = dmirror(x24)\n    x26 = lbind(shift, x25)\n    x27 = compose(x26, tojvec)\n    x28 = Tapply(x27, x23)\n    x29 = double(x38)\n    x30 = lbind(multiply, x29)\n    x31 = apply(x30, x28)\n    x32 = mapply(x27, x31)\n    x33 = paint(x4, x32)\n    x34 = merge(x5)\n    x35 = cover(x33, x34)\n    x36 = leftmost(x35)\n    x37 = equality(x36, ZERO)\n    O = paint(x33, x37)\n    return O"], [1.1, "def solve_a3197471(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = replace(I, NINE, ZERO)\n    x3 = lbind26apply(d89b23026\n    rbind( spot36, x2)\n    x4 = chain(positive, size, x3)\n    x5 = lbind(apply, x4)\n    x6 = chain(x71, x5, dmirror)\n    x7 = x6(x2)\n    x8 = fork(recolor, color, x7)\n    x9 = mapply(x8, x5)\n    O = paint(x2, x9)\n    return O"], [1.1, "def solve_3748b4a9(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 =393(x2)\n    x5 = fork(multiply, height, width)\n    x6 = lbind(shift, x2)\n    x7 =666x543(x2)\n    x8 =93(x7, x6)\n    x9 =22(x8, x4)\n    x10 = mapply(x6, x3)\n    x11 = paint(I, x10)\n    O = subgrid(x2, x11)\n    return O"]], "1e97544e": [[0.033904932127066766, "def solve_a89ab96a(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, ONE, x6)\n    return O"], [0.03516084518623489, "def solve_c20390de(I):\n    O = replace(I, ZERO, TWO)\n    return O"], [0.05090373268510345, "def solve_43335764(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_ef01b039(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_1ab6b3bd(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_f713e082(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_6bfe2952(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_6b8a7e73(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_f62371d1(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_6aa06a09(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_86f6fc77(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.052301372264443736, "def solve_0f779890(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.05745638404752545, "def solve_032ac5d0(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = lbind(colorcount, I)\n    x5 = argmin(x3, x4)\n    x6 = ofcolor(I, x1)\n    x7 = ofcolor(I, x5)\n    x8 = combine(x6, x7)\n    x9 = mapply(neighbors, x8)\n    x10 = difference(x9, x8)\n    x11 = toobject(x10, I)\n    x12 = leastcolor(x11)\n    x13 = ofcolor(I, x1)\n    x14 = first(x13)\n    x15 = initset(x14)\n    x16 = objects(I, T, F, F)\n    x17 = colorfilter(x16, x12)\n    x18 = lbind(adjacent, x8)\n    x19 = mfilter(x17, x18)\n    x20 = toindices(x19)\n    x21 = rbind(manhattan, x15)\n    x22 = chain(even, x21, initset)\n    x23 = sfilter(x20, x22)\n    x24 = fill(I, x5, x20)\n    O = fill(x24, x1, x23)\n    return O"], [0.06555616266185658, "def solve_055f497a(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_408dc8c5(I):\n    x1 = partition(I)\n    x2 = fork(recolor, color, backdrop)\n    x3 = apply(x2, x1)\n    x4 = mfilter(x3, hline)\n    x5 = mfilter(x3, vline)\n    x6 = paint(I, x4)\n    O = paint(x6, x5)\n    return O"], [0.06555616266185658, "def solve_af05c8b7(I):\n    x1 = fork(multiply, height, width)\n    x2 = partition(I)\n    x3 = argmax(x2, x1)\n    x4 = remove(x3, x2)\n    x5 = argmax(x4, x1)\n    x6 = other(x4, x5)\n    x7 = palette(I)\n    x8 = lrcorner(x5)\n    x9 = add(x8, UNITY)\n    x10 = llcorner(x5)\n    x11 = add(x10, DOWN_LEFT)\n    x12 = urcorner(x5)\n    x13 = add(x12, UP_RIGHT)\n    x14 = ulcorner(x5)\n    x15 = add(x14, NEG_UNITY)\n    x16 = shoot(x9, UNITY)\n    x17 = shoot(x11, DOWN_LEFT)\n    x18 = shoot(x13, UP_RIGHT)\n    x19 = shoot(x15, NEG_UNITY)\n    x20 = combine(x16, x17)\n    x21 = combine(x18, x19)\n    x22 = combine(x20, x21)\n    x23 = color(x6)\n    O = fill(I, x23, x22)\n    return O"], [0.06555616266185658, "def solve_5c37f680(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_24189f94(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_a8768dfc(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_4828dc5b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_e87e12e5(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_6c25945c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = delta(x2)\n    O = fill(I, FOUR, x3)\n    return O"], [0.06555616266185658, "def solve_2cc917c3(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.06555616266185658, "def solve_e811b287(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = astuple(TWO, FOUR)\n    x4 = rbind(contained, x3)\n    x5 = compose(x4, first)\n    x6 = rbind(sfilter, x5)\n    x7 = lbind(rbind, subtract)\n    x8 = lbind(occurrences, I)\n    x9 = lbind(lbind, shift)\n    x10 = compose(x7, ulcorner)\n    x11 = chain(x10, x6, normalize)\n    x12 = chain(x8, x6, normalize)\n    x13 = fork(apply, x11, x12)\n    x14 = compose(x9, normalize)\n    x15 = fork(mapply, x14, x13)\n    x16 = astuple(cmirror, dmirror)\n    x17 = astuple(hmirror, vmirror)\n    x18 = combine(x16, x17)\n    x19 = product(x18, x18)\n    x20 = fork(compose, first, last)\n    x21 = apply(x20, x19)\n    x22 = totuple(x21)\n    x23 = combine(x18, x22)\n    x24 = rapply(x23, x2)\n    x25 = mapply(x15, x24)\n    O = paint(I, x25)\n    return O"], [0.06555616266185658, "def solve_dbd3d9f2(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_b32e4eb3(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_11016dbe(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.06555616266185658, "def solve_6458773b(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = subgrid(x2, I)\n    return O"], [0.06555616266185658, "def solve_12247c29(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_3a5fa930(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_f6e580bc(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_023adeef(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.06555616266185658, "def solve_551325c9(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = fork(equality, identity, size)\n    x5 = mfilter(x3, x4)\n    O = fill(I, FOUR, x5)\n    return O"], [0.0673725296935786, "def solve_61c9642c(I):\n    x1 = vmirror(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = toindices(x3)\n    x5 = sizefilter(x2, ONE)\n    x6 = apply(initset, x4)\n    x7 = lbind(argmin, x6)\n    x8 = lbind(rbind, manhattan)\n    x9 = compose(x7, x8)\n    x10 = fork(recolor, color, x9)\n    x11 = mapply(x10, x5)\n    x12 = merge(x5)\n    x13 = cover(I, x12)\n    O = paint(x13, x11)\n    return O"], [0.06834668128402709, "def solve_a6eeb15b(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = apply(color, x3)\n    x5 = rbind(contained, x4)\n    x6 = compose(x5, color)\n    x7 = sfilter(x2, x6)\n    x8 = lbind(colorfilter, x3)\n    x9 = chain(first, x8, color)\n    x10 = fork(gravitate, identity, x9)\n    x11 = fork(shift, identity, x10)\n    x12 = mapply(x11, x7)\n    x13 = merge(x2)\n    x14 = cover(I, x13)\n    O = paint(x14, x12)\n    return O"], [0.06927348904207718, "def solve_6beed481(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = fill(I, x8, x32)\n    return O"], [0.06951964727982395, "def solve_5ee950a8(I):\n    x1 = objects(I, T, F, T)\n    x2 = ofcolor(I, THREE)\n    x3 = sizefilter(x1, ONE)\n    x4 = rbind(vmatching, x2)\n    x5 = rbind(hmatching, x2)\n    x6 = fork(either, x4, x5)\n    x7 = sfilter(x3, x6)\n    x8 = rbind(gravitate, x2)\n    x9 = fork(add, center, x8)\n    x10 = fork(connect, center, x9)\n    x11 = fork(recolor, color, x10)\n    x12 = mapply(x11, x7)\n    O = paint(I, x12)\n    return O"], [0.06978351117183043, "def solve_a581fe24(I):\n    x1 = shape(I)\n    x2 = canvas(ZERO, x1)\n    x3 = hconcat(I, x2)\n    x4 = objects(x3, F, F, T)\n    x5 = argmin(x4, size)\n    x6 = ulcorner(x5)\n    x7 = llcorner(x5)\n    x8 = shoot(x6, NEG_UNITY)\n    x9 = shoot(x6, UNITY)\n    x10 = shoot(x7, DOWN_LEFT)\n    x11 = shoot(x7, UP_RIGHT)\n    x12 = combine(x8, x9)\n    x13 = combine(x10, x11)\n    x14 = combine(x12, x13)\n    x15 = underfill(I, THREE, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = colorfilter(x16, 18656)\n    x18 = rbind(bordering, I)\n    x19 = mfilter(x17, x18)\n    O = cover(x15, x19)\n    return O"], [0.06998856066085409, "def solve_b8b499a4(I):\n    x1 = astuple(SIX, TWO)\n    x2 = astuple(TWO, ONE)\n    x3 = initset(x2)\n    x4 = insert(ORIGIN, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    O = fill(I, FOUR, x12)\n    return O"], [0.0702135574591548, "def solve_75c2d520(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.0702135574591548, "def solve_aefecaed(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.0709170432415734, "def solve_c5ec41c9(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.0709170432415734, "def solve_eb89440f(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.07215121867613122, "def solve_72ab5ce8(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, TWO)\n    x3 = mfilter(x1, x2)\n    x4 = matcher(size, THREE)\n    x5 = mfilter(x1, x4)\n    x6 = matcher(size, FOUR)\n    x7 = mfilter(x1, x6)\n    x8 = fill(I, THREE, x3)\n    x9 = fill(x8, TWO, x5)\n    O = fill(x9, ONE, x7)\n    return O"], [0.07506739170511992, "def solve_87528bbb(I):\n    x1 = palette(I)\n    x2 = intersection(x1, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = astuple(ONE, x4)\n    x6 = size(x5)\n    x7 = decrement(x6)\n    x8 = tojvec(x7)\n    x9 = shoot(x8, UNITY)\n    O = fill(I, x4, x9)\n    return O"], [0.07641808482315048, "def solve_39184cba(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_8c5da067(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_6e43647a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_890c43eb(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_2df22367(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_852d4cc7(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_9e86f565(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_8d28df06(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_4eda6654(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.08283557492092357, "def solve_1d9baa90(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.08283557492092357, "def solve_3ecc723d(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.08478898654677902, "def solve_e9db1696(I):\n    O = replace(I, EIGHT, ONE)\n    return O"], [0.08598473307451636, "def solve_3b476d40(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, vmirror, hmirror)\n    x9 = x8(x6)\n    x10 = branch(x7, leftmost, uppermost)\n    x11 = branch(x7, tojvec, toivec)\n    x12 = x10(x5)\n    x13 = x10(x6)\n    x14 = greater(x12, x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = x11(x16)\n    x18 = shape(x6)\n    x19 = multiply(x17, x18)\n    x20 = shift(x9, x19)\n    x21 = fill(I, THREE, x3)\n    O = paint(x21, x20)\n    return O"], [0.08598473307451636, "def solve_2d6e03b3(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, vmirror, hmirror)\n    x9 = x8(x6)\n    x10 = branch(x7, leftmost, uppermost)\n    x11 = branch(x7, tojvec, toivec)\n    x12 = x10(x5)\n    x13 = x10(x6)\n    x14 = greater(x12, x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = x11(x16)\n    x18 = shape(x6)\n    x19 = multiply(x17, x18)\n    x20 = shift(x9, x19)\n    x21 = fill(I, THREE, x3)\n    O = paint(x21, x20)\n    return O"], [0.08598473307451636, "def solve_3d4cd62c(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, vmirror, hmirror)\n    x9 = x8(x6)\n    x10 = branch(x7, leftmost, uppermost)\n    x11 = branch(x7, tojvec, toivec)\n    x12 = x10(x5)\n    x13 =x10(x6)\n    x14 = greater(x12, x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = x11(x16)\n    x18 = shape(x6)\n    x19 = multiply(x17, x18)\n    x20 = shift(x9, x19)\n    x21 = fill(I, THREE, x3)\n    O = paint(x21, x20)\n    return O"], [0.08623565881277677, "def solve_c48c4ae2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, SEVEN, x2)\n    return O"], [0.0868238750835419, "def solve_85141ce4(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_c81221e6(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_94207012(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_fa794840(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_a44b4e05(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08755545985583944, "def solve_80edc6b5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.09418009846618015, "def solve_3312c412(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = fork(subtract, first, last)\n    x4 = fork(multiply, sign, identity)\n    x5 = compose(x4, x3)\n    x6 = lbind(greater, THREE)\n    x7 = chain(x6, maximum, x5)\n    x8 = lbind(lbind, astuple)\n    x9 = rbind(chain, x8)\n    x10 = lbind(compose, x7)\n    x11 = rbind(x9, x10)\n    x12 = lbind(lbind, sfilter)\n    x13 = compose(x11, x12)\n    x14 = lbind(mapply, backdrop)\n    x15 = fork(apply, x13, identity)\n    x16 = compose(x14, x15)\n    x17 = power(x16, TWO)\n    x18 = x17(x2)\n    x19 = fill(I, FOUR, x18)\n    O = replace(x19, x1, ZERO)\n    return O"], [0.09720967561895832, "def solve_36e1ded9(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.09972248586286768, "def solve_427db87f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = height(x2)\n    x4 = halve(x3)\n    x5 = width(x2)\n    x6 = halve(x5)\n    x7 = ulcorner(x2)\n    x8 = lrcorner(x2)\n    x9 = shape(I)\n    x10 = maximum(x9)\n    x11 = multiply(THREE, TEN)\n    x12 = interval(ZERO, x11, ONE)\n    x13 = rbind(multiply, x4)\n    x14 = apply(x13, x12)\n    x15 = rbind(multiply, x6)\n    x16 = apply(x15, x12)\n    x17 = pair(x14, x16)\n    x18 = rbind(add, x7)\n    x19 = apply(invert, x17)\n    x20 = apply(x18, x19)\n    x21 = rbind(add, x8)\n    x22 = apply(x21, x17)\n    x23 = pair(x20, x22)\n    x24 = mapply(box, x23)\n    O = fill(I, x1, x24)\n    return O"], [0.10434388482560263, "def solve_0f68bba5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.10783825386579952, "def solve_3287d2ac(I):\n    x1 = ofcolor(I, EIGHT)\n    x2 = delta(x1)\n    O = fill(I, THREE, x2)\n    return O"], [0.10849910269253649, "def solve_ef4d04c0(I):\n    x1 = fork(multiply, height, width)\n    x2 = lbind(ofcolor, I)\n    x3 = palette(I)\n    x4 = compose(x1, x2)\n    x5 = argmax(x3, x4)\n    x6 = leastcolor(I)\n    x7 = palette(I)\n    x8 = remove(x5, x7)\n    x9 = other(x8, x6)\n    x10 = replace(I, x6, x5)\n    O = replace(x10, x9, x6)\n    return O"], [0.11410495726315961, "def solve_f5ef6376(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.11410495726315961, "def solve_543a375e(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.11873730483078786, "def solve_544cb80e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.11873730483078786, "def solve_c80046b2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.11873730483078786, "def solve_cce5466f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.11873730483078786, "def solve_5440fe70(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.1217171472815362, "def solve_f76a37c9(I):\n    x1 = palette(I)\n    x2 = remove(FIVE, x1)\n    x3 = first(x2)\n    x4 = ofcolor(I, x3)\n    x5 = fill(I, ZERO, x4)\n    x6 = ofcolor(I, FIVE)\n    O = fill(x5, x3, x6)\n    return O"], [0.1239852807263826, "def solve_16b0fcd3(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.1239852807263826, "def solve_40925569(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.12484931582933405, "def solve_e43f175a(I):\n    O = replace(I, FOUR, ZERO)\n    return O"], [0.12706715242232244, "def solve_8f0cbf2f(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, last)\n    x5 = fork(recolor, first, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [0.12706715242232244, "def solve_f3c70214(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, last)\n    x5 = fork(recolor, first, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [0.12761570956639848, "def solve_c69d1fc7(I):\n    x1 = ofcolor(I, TWO)\n    x2 = vline(x1)\n    x3 = branch(x2, dmirror, identity)\n    x4 = x3(I)\n    x5 = fgpartition(x4)\n    x6 = matcher(color, TWO)\n    x7 = compose(flip, x6)\n    x8 = extract(x5, x7)\n    x9 = ofcolor(x4, TWO)\n    x10 = leftmost(x9)\n    x11 = leftmost(x8)\n    x12 = greater(x10, x11)\n    x13 = manhattan(x8, x9)\n    x14 = decrement(x13)\n    x15 = branch(x12, identity, invert)\n    x16 = branch(x12, decrement, increment)\n    x17 = branch(x12, leftmost, rightmost)\n    x18 = x15(x14)\n    x19 = tojvec(x18)\n    x20 = shift(x8, x19)\n    x21 = x17(x20)\n    x22 = x16(x21)\n    x23 = tojvec(x22)\n    x24 = vfrontier(x23)\n    x25 = cover(x4, x8)\n    x26 = paint(x25, x20)\n    x27 = fill(x26, EIGHT, x24)\n    O = x3(x27)\n    return O"], [0.128059110522633, "def solve_f95a5994(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, EIGHT, x4)\n    return O"], [0.128059110522633, "def solve_65aeaea9(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply( neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, EIGHT, x4)\n    return O"], [0.13134103434345124, "def solve_8b58cd8a(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.13134103434345124, "def solve_23b94ede(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.1316993167720556, "def solve_839eb872(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.1316993167720556, "def solve_eb1677f4(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.1316993167720556, "def solve_a8b57165(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.13256015955962436, "def solve_d99dc4eb(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = rbind(multiply, THREE)\n    x6 = rbind(divide, THREE)\n    x7 = compose(x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = toindices(x4)\n    x10 = compose(x8, last)\n    x11 = sfilter(x9, x10)\n    O = fill(I, SIX, x11)\n    return O"], [0.1342127710558975, "def solve_d7aac698(I):\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    O = replace(x3, ONE, ZERO)\n    return O"], [0.13508938916939192, "def solve_a49bfacd(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = mostcolor(I)\n    O = replace(x3, x4, ZERO)\n    return O"], [0.14085477486846634, "def solve_6ad1ebb7(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, TWO, x3)\n    return O"], [0.14343122109904335, "def solve_a36ededf(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.14368355297075183, "def solve_c583e66c(I):\n    O = switch(I, EIGHT, TWO)\n    return O"], [0.14616952830534066, "def solve_20049e0c(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.15924388832696912, "def solve_ba340321(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.15924388832696912, "def solve_04739150(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.15924388832696912, "def solve_01a1007f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x22 = invert(x11)\n    x23 = shift(x9, x22)\n    x24 = lbind(shift, x23)\n    x25 = mapply(x24, x8)\n    O = paint(I, x25)\n    return O"], [0.15924388832696912, "def solve_c2e0b3c6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.15924388832696912, "def solve_d48b6367(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.15924388832696912, "def solve_1dceb5ce(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.15924388832696912, "def solve_53819502(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.15924388832696912, "def solve_b07e2ab3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.16903724504454612, "def solve_20703c94(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.16903724504454612, "def solve_75882916(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.16903724504454612, "def solve_de631d8a(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.16903724504454612, "def solve_0200d9ec(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.1692390063666264, "def solve_dc24b772(I):\n    x1 = ofcolor(I, ONE)\n    x2 = crop(I, ORIGIN, THREE_BY_THREE)\n    x3 = asobject(x2)\n    x4 = lbind(shift, x3)\n    x5 = compose(x4, decrement)\n    x6 = mapply(x5, x1)\n    O = paint(I, x6)\n    return O"], [0.1735897707595905, "def solve_aebc9b9a(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = astuple(x1, ONE)\n    x8 = astuple(x2, ONE)\n    x9 = decrement(x1)\n    x10 = decrement(x2)\n    x11 = toivec(x10)\n    x12 = tojvec(x9)\n    x13 = crop(I, x11, x8)\n    x14 = crop(I, x12, x7)\n    x15 = asobject(x14)\n    x16 = asobject(x13)\n    x17 = vperiod(x15)\n    x18 = hperiod(x16)\n    x19 = astuple(x17, x18)\n    x20 = lbind(multiply, x19)\n    x21 = neighbors(ORIGIN)\n    x22 = mapply(neighbors, x21)\n    x23 = apply(x20, x22)\n    x24 = lbind(shift, x6)\n    x25 = mapply(x24, x23)\n    O = paint(I, x25)\n    return O"], [0.1773065582183363, "def solve_f695995e(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.1773065582183363, "def solve_96dec7e5(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.1773065582183363, "def solve_5fba575c(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.18335650834767755, "def solve_77312294(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.19082520987900767, "def solve_aa4ae39f(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.19082520987900767, "def solve_ccc58bde(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.19621052380083578, "def solve_bd3e336c(I):\n    x1 = replace(I, SEVEN, ZERO)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [0.20306126840468763, "def solve_c00e3492(I):\n    O = dmirror(I)\n    return O"], [0.20306126840468763, "def solve_84df7074(I):\n    O = dmirror(I)\n    return O"], [0.20306126840468763, "def solve_d59526cf(I):\n    O = dmirror(I)\n    return O"], [0.2095323090756712, "def solve_6c50b4fd(I):\n    O = vmirror(I)\n    return O"], [0.20955539093771366, "def solve_485a70ea(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot270(I)\n    return O"], [0.21391916164730382, "def solve_02b96647(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.21391916164730382, "def solve_dea4fe77(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.21904040042169512, "def solve_dab511d6(I):\n    O = rot180(I)\n    return O"], [0.21904040042169512, "def solve_ce10cc7d(I):\n    O = rot180(I)\n    return O"], [0.21924101368423873, "def solve_a13a7d93(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = astuple(SIX, THREE)\n    x6 = astuple(FOUR, EIGHT)\n    x7 = astuple(ONE, TWO)\n    x8 = initset(x5)\n    x9 = insert(x6, x8)\n    x10 = insert(x7, x9)\n    x11 = mapply(x4, x10)\n    O = paint(I, x11)\n    return O"], [0.22840986411980327, "def solve_5703d54b(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.22840986411980327, "def solve_e4684d06(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.22840986411980327, "def solve_f342d34d(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.24450415545604645, "def solve_d4d2d11a(I):\n    x1 = ofcolor(I, ONE)\n    x2 = ofcolor(I, TWO)\n    x3 = mapply(neighbors, x1)\n    x4 = mapply(neighbors, x2)\n    x5 = fill(I, SEVEN, x3)\n    O = fill(x5, FOUR, x4)\n    return O"], [0.2537260279414613, "def solve_4b257341(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_0a331e97(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_e967283b(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_f369af48(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_7a7449a1(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_f487fb6c(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_6b6a3bd5(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_6da73910(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_d188f008(I):\n    O = tophalf(I)\n    return O"], [0.25570919672274256, "def solve_0b679412(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.25570919672274256, "def solve_0a068c72(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.25570919672274256, "def solve_891b2494(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.25570919672274256, "def solve_a977791b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.2616281866281866, "def solve_74b5a91c(I):\n    O = trim(I)\n    return O"], [0.2616281866281866, "def solve_ce10c588(I):\n    O = trim(I)\n    return O"], [0.2704028721250951, "def solve_9984774e(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.2704028721250951, "def solve_8c34366a(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.2737085951518015, "def solve_7aa34db2(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, size)\n    O = subgrid(x2, I)\n    return O"], [0.29118241282602314, "def solve_92216082(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.2949368095103424, "def solve_bd4d6cdd(I):\n    x1 = compose(positive, size)\n    x2 = rbind(sfilter, hline)\n    x3 = chain(x1, x2, frontiers)\n    x4 = chain(size, dedupe, first)\n    x5 = chain(size, dedupe, last)\n    x6 = fork(greater, x4, x5)\n    x7 = fork(both, x3, x6)\n    x8 = astuple(identity, rot90)\n    x9 = astuple(rot180, rot270)\n    x10 = combine(x8, x9)\n    x11 = astuple(identity, rot270)\n    x12 = astuple(rot180, rot90)\n    x13 = combine(x11, x12)\n    x14 = pair(x10, x13)\n    x15 = rbind(rapply, I)\n    x16 = compose(initset, first)\n    x17 = chain(first, x15, x16)\n    x18 = compose(x7, x17)\n    x19 = extract(x14, x18)\n    x20 = first(x19)\n    x21 = last(x19)\n    x22 = x20(I)\n    x23 = first(x22)\n    x24 = repeat(x23, ONE)\n    x25 = dmirror(x24)\n    x26 = width(x22)\n    x27 = hupscale(x25, x26)\n    x28 = asobject(x27)\n    x29 = height(x22)\n    x30 = height(x28)\n    x31 = interval(ZERO, x29, x30)\n    x32 = lbind(shift, x28)\n    x33 = apply(toivec, x31)\n    x34 = mapply(x32, x33)\n    x35 = shift(x34, TWO_BY_ZERO)\n    x36 = paint(x22, x35)\n    O = x21(x36)\n    return O"], [0.29493888612223423, "def solve_2e865a66(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.29664969986532563, "def solve_22e3fdc7(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = apply(toindices, x6)\n    x8 = rbind(shoot, RIGHT)\n    x9 = compose(x8, center)\n    x10 = fork(recolor, color, x9)\n    x11 = mapply(x10, x6)\n    x12 = paint(I, x11)\n    x13 = width(I)\n    x14 = interval(ZERO, x13, ONE)\n    x15 = apply(double, x14)\n    x16 = apply(increment, x15)\n    x17 = apply(tojvec, x16)\n    x18 = prapply(shift, x7, x17)\n    x19 = merge(x18)\n    O = fill(x12, FIVE, x19)\n    return O"], [0.3063136421137608, "def solve_819cd5fa(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.3063136421137608, "def solve_ee932955(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.3082441023536176, "def solve_a7886267(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.3082441023536176, "def solve_a79af328(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.3082441023536176, "def solve_a8ee5901(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.31011174594270147, "def solve_344dccf6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.31011174594270147, "def solve_768e4d1b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.31011174594270147, "def solve_548062c3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.31011174594270147, "def solve_170f9c6c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.31011174594270147, "def solve_337318ba(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.3104501482052144, "def solve_4a956a12(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_99657942(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_f315413b(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_983a0b3f(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_29547386(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_95ad7653(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_45b6463a(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_49e873ea(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_7d7edbe6(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_f9ad95a9(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3204614475119984, "def solve_1a0ecf96(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [0.3204614475119984, "def solve_3a63e057(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [0.3204614475119984, "def solve_c6b36782(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [0.320952197319818, "def solve_2b8ee24d(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.3314449532924934, "def solve_e195ca94(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.3314449532924934, "def solve_4de87cb6(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.3314449532924934, "def solve_e450ca93(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = objects(x2, T, F, T)\n    x4 = merge(x3)\n    O = paint(x1, x4)\n    return O"], [0.3314449532924934, "def solve_ce35297d(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.33324150002846714, "def solve_c02efb3c(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = ofcolor(I, ZERO)\n    x4 = astuple(x1, ONE)\n    x5 = crop(I, ORIGIN, x4)\n    x6 = hupscale(x5, x2)\n    O = fill(x6, ZERO, x3)\n    return O"], [0.35285797856791773, "def solve_fa82e118(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.35285797856791773, "def solve_4e852de1(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.36297669173695035, "def solve_d827ad72(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = merge(x2)\n    O = subgrid(x3, I)\n    return O"], [0.4062968519814561, "def solve_26545380(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [0.4062968519814561, "def solve_0e1d4e9d(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [0.40995162868139406, "def solve_7528b41c(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.40995162868139406, "def solve_eaa8f01b(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.40995162868139406, "def solve_070f3512(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.4170310435194296, "def solve_ae7b0a55(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.4170310435194296, "def solve_070aff51(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.4170310435194296, "def solve_abf671a3(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.4170310435194296, "def solve_56b770bc(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.4231949243417133, "def solve_e0c62ccf(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.4231949243417133, "def solve_88a00128(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.4307449991951107, "def solve_539a42de(I):\n    x1 = shape(I)\n    x2 = index(I, ORIGIN)\n    x3 = colorcount(I, ZERO)\n    x4 = decrement(x1)\n    x5 = positive(x3)\n    x6 = branch(x5, x4, x1)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = width(x7)\n    x9 = astuple(ONE, x8)\n    x10 = crop(x7, ORIGIN, x9)\n    x11 = vupscale(x10, x8)\n    x12 = dmirror(x11)\n    x13 = hconcat(x7, x11)\n    x14 = hconcat(x12, x7)\n    x15 = vconcat(x13, x14)\n    x16 = asobject(x15)\n    x17 = multiply(UNITY, TEN)\n    x18 = canvas(x2, x17)\n    O = paint(x18, x16)\n    return O"], [0.4756501568541684, "def solve_09c12e0c(I):\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = shape(x23)\n    x33 = canvas(x28, x32)\n    O = fill(x33, THREE, x31)\n    return O"], [0.48123001957418393, "def solve_3130e0e3(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, vline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = combine(x15, x16)\n    x18 = intersection(x15, x16)\n    x19 = difference(x17, x18)\n    O = fill(x14, THREE, x19)\n    return O"], [0.5033734845047396, "def solve_6ba382f0(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.5033734845047396, "def solve_247b0302(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.5033734845047396, "def solve_556ddb48(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.5033734845047396, "def solve_187718e9(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.5033734845047396, "def solve_01e6a6b9(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.5033734845047396, "def solve_a4fad10f(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.5371132714255592, "def solve_dc6177ee(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.5455548516524127, "def solve_f0c03153(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.5455548516524127, "def solve_7b94c557(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.5586554186554187, "def solve_185fd8aa(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = equality(x1, ONE)\n    x3 = branch(x2, vsplit, hsplit)\n    x4 = x3(I, TWO)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = palette(x5)\n    x8 = palette(x6)\n    x9 = intersection(x7, x8)\n    x10 = first(x9)\n    x11 = shape(x5)\n    x12 = canvas(x10, x11)\n    x13 = ofcolor(x5, x10)\n    x14 = ofcolor(x6, x10)\n    x15 = intersection(x13, x14)\n    O = fill(x12, TWO, x15)\n    return O"], [0.5586554186554187, "def solve_1207b8fa(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.5586554186554187, "def solve_0e475294(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.5586554186554187, "def solve_7fb621e4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = ofcolor(x1, ZERO)\n    x4 = ofcolor(x2, ZERO)\n    x5 = intersection(x3, x4)\n    x6 = shape(x1)\n    x7 = canvas(ZERO, x6)\n    O = fill(x7, THREE, x5)\n    return O"], [0.5586554186554187, "def solve_629ce595(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.5586554186554187, "def solve_64fe43b9(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.5586554186554187, "def solve_1175a4b6(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.5586554186554187, "def solve_8969f02f(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.5801077246461932, "def solve_cd5373c4(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.656779053865826, "def solve_6b6e8942(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(shoot, UNITY)\n    x3 = compose(x2, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    x6 = astuple(SIX, SIX)\n    x7 = canvas(ZERO, x6)\n    O = paint(x7, x5)\n    return O"], [0.6767316017316017, "def solve_5bd2a00f(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_e26d2c5d(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_bce5bbe4(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_5ec36bb5(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6793066105327229, "def solve_900eec46(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = astuple(ONE, THREE)\n    x8 = size(x6)\n    x9 = order(x6, leftmost)\n    x10 = apply(color, x9)\n    x11 = rbind(canvas, UNITY)\n    x12 = apply(x11, x10)\n    x13 = merge(x12)\n    x14 = dmirror(x13)\n    x15 = subtract(NINE, x8)\n    x16 = astuple(ONE, x15)\n    x17 = mostcolor(I)\n    x18 = canvas(x17, x16)\n    x19 = hconcat(x14, x18)\n    x20 = hsplit(x19, THREE)\n    x21 = merge(x20)\n    x22 = crop(x21, ORIGIN, x7)\n    x23 = crop(x21, DOWN, x7)\n    x24 = crop(x21, TWO_BY_ZERO, x7)\n    x25 = vmirror(x23)\n    x26 = vconcat(x22, x25)\n    O = vconcat(x26, x24)\n    return O"], [0.6912337662337663, "def solve_7b6228f0(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.7331699823272858, "def solve_75fe2e14(I):\n    x1 = mostcolor(I)\n    O = canvas(x1, THREE_BY_THREE)\n    return O"], [0.7349775533108867, "def solve_57ab93bd(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(equality, toindices, box)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = argmax(x3, x4)\n    x6 = fgpartition(I)\n    x7 = merge(x6)\n    x8 = difference(x7, x5)\n    x9 = subgrid(x5, I)\n    x10 = subgrid(x8, I)\n    x11 = height(x9)\n    x12 = subtract(x11, TWO)\n    x13 = height(x10)\n    x14 = divide(x12, x13)\n    x15 = width(x9)\n    x16 = subtract(x15, TWO)\n    x17 = width(x10)\n    x18 = divide(x16, x17)\n    x19 = hupscale(x10, x18)\n    x20 = vupscale(x19, x14)\n    x21 = asobject(x20)\n    x22 = shift(x21, UNITY)\n    O = paint(x9, x22)\n    return O"], [0.7525993012835118, "def solve_961115b4(I):\n    O = canvas(FIVE, TWO_BY_TWO)\n    return O"], [0.7554473304473305, "def solve_9a21c7a4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [0.7615634784502708, "def solve_12c267fd(I):\n    x1 = mostcolor(I)\n    x2 = frontiers(I)\n    x3 = sfilter(x2, vline)\n    x4 = difference(x2, x3)\n    x5 = astuple(x4, x3)\n    x6 = apply(size, x5)\n    x7 = increment(x6)\n    O = canvas(x1, x7)\n    return O"], [0.7635281385281386, "def solve_41420e20(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.7635281385281386, "def solve_9868614a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.7635281385281386, "def solve_736837d0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.7635281385281386, "def solve_5d3dc232(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.7635281385281386, "def solve_870358ef(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.7635281385281386, "def solve_42430b00(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.7818181818181819, "def solve_13dc3b85(I):\n    x1 = ofcolor(I, THREE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [0.8704545454545455, "def solve_b1cfede5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, F, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.8704545454545455, "def solve_37b0bc2f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, F, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.8704545454545455, "def solve_7f37d928(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, T, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.9181818181818183, "def solve_6165579d(I):\n    x1 = palette(I)\n    x2 = frontiers(I)\n    x3 = sfilter(x2, vline)\n    x4 = difference(x1, x3)\n    x5 = astuple(x4, x3)\n    x6 = apply(size, x5)\n    x7 = increment(x6)\n    O = canvas(ZERO, x7)\n    return O"], [1.0, "def solve_25b103bb(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_b8ed7fd3(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = x2(I, TWO)\n    x4 = argmin(x3, numcolors)\n    x5 = argmax(x3, numcolors)\n    x6 = width(x5)\n    x7 = rbind(repeat, x6)\n    x8 = chain(dmirror, merge, x7)\n    x9 = upscale(x4, x6)\n    x10 = x8(x4)\n    x11 = x8(x10)\n    x12 = ofcolor(x11, ZERO)\n    O = fill(x9, ZERO, x12)\n    return O"], [1.0, "def solve_742af85d(I):\n    x1 = index(I, ORIGIN)\n    x2 = recolor(d511, x1)\n    x3 = apply(double, x2)\n    x4 = frontiers(x3)\n    x5 = merge(x4)\n    x6 = NEG_UNITY(x5)\n    x7 = shift(x5, x6)\n    x8 = recolor(x1, x7)\n    x9 = lbind(shift, x8)\n    x10 = mapply(x9, x3)\n    O = paint(I, x10)\n    return O"], [1.0, "def solve_addd792a(I):\n    x1 =alde4(I)\n    x2 = interval(ZERO, NINE, ONE)\n    x3 = apply(double, x2)\n    x4 = apply(width, x3)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x5, x6)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x5)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x2)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [1.0, "def solve_1d3f67c1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_5c29d6b4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_840e2fdb(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = compose(double, halve)\n    x5 = fork(equality, identity, x4)\n    x6 = compose(x5, last)\n    x7 = sfilter(x3, x6)\n    x8 = fork(recolor, first, x7)\n    x9 = mapply(x8, x4)\n    O = paint(I, x9)\n    return O"], [1.0, "def solve_6be248c7(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(4, x5)\n    return O"], [1.0, "def solve_cc6b1256(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_7b041589(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = toindices(x14)\n    x26 = lbind(shift, x24)\n    x27 = rbind(multiply, x30)\n    x28 = chain(x27, x26, last)\n    x29 = mapply(x28, x29)\n    O = fill(x14, x13, x29)\n    return O"], [1.0, "def solve_46aed437(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_1fb938eb(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_1f82c158(I):\n    x1 = objects(I, T, F, F)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = lbind(sfilter, x3)\n    x5 = lbind(matcher, identity)\n    x6 = chain(size, x4, x5)\n    x7 = matcher(x6, ONE)\n    x8 = sfilter(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmax(x8, x9)\n    x11 = matcher(color, x10)\n    x12 = extract(x1, x11)\n    O = subgrid(x12, I)\n    return O"], [1.0, "def solve_02507b7d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_b6e0ab4c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_11e4c715(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_6c48d8d6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_89476efe(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_73051aeb(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = height(x2)\n    x4 = halve(x3)\n    x5 = width(x2)\n    x6 = halve(x5)\n    x7 = tojvec(x4)\n    x8 = tojvec(x6)\n    x9 = connect(x7, x8)\n    x10 = fill(I, x1, x9)\n    x11 = objects(x10, F, F, T)\n    x12 = argmax(x11, numcolors)\n    x13 = normalize(x12)\n    x14 = remove(x12, x11)\n    x15 = toindices(x14)\n    x16 = lbind(intersection, x15)\n    x17 = chain(halve, x16, toindices)\n    x18 = fork(recolor, color, x17)\n    x19 = mapply(x18, x14)\n    O = paint(x10, x19)\n    return O"], [1.0, "def solve_93633735(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_01ad0218(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = rbind(shoot, x24)\n    x26 = mapply(x25, x23)\n    x27 = fill(x6, x3, x26)\n    x28 = x27(x1)\n    O = fill(x27, x10, x28)\n    return O"], [1.0, "def solve_6f69b5f7(I):\n    x1 = shoot(ORIGIN, UNITY)\n    x2 = rbind(shoot, DOWN)\n    x3 = compose(x2, last)\n    x4 = fork(recolor, first, x3)\n    x5 = mapply(x4, x1)\n    O = paint(I, x5)\n    return O"], [1.0, "def solve_a614e52c(I):\n    x1 = argmin(x1, numcolors)\n    x2 = apply(first, x1)\n    x3 = dmirror(x2)\n    x4 = papply(pair, x2, x3)\n    x5 = lbind(shift, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [1.0, "def solve_9e49776d(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [1.0, "def solve_80cbfc70(I):\n    x1 = objects(I, T, F, T)\n    x2 = asindices(I)\n    x3 = outbox(x2)\n    x4 = lbind(adjacent, x3)\n    x5 = compose(x4, initset)\n    x6 = rbind(extract, x5)\n    x7 = compose(x6, toindices)\n    x8 = rbind(compose, initset)\n    x9 = lbind(rbind, manhattan)\n    x10 = chain(x8, x9, initset)\n    x11 = lbind(lbind, greater)\n    x12 = chain(x11, halve, size)\n    x13 = compose(x10, x7)\n    x14 = fork(compose, x12, x13)\n    x15 = fork(sfilter, toindices, x14)\n    x16 = mapply(x15, x1)\n    O = fill(I, EIGHT, x16)\n    return O"], [1.0, "def solve_606019f6(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_66832f92(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x24, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_3d4f9a38(I):\n    x1 = portrait(I)\n    x2 = branch(x1, partition, vsplit)\n    x3 = equality(x2, TWO)\n    x4 = branch(x3, hmirror, vmirror)\n    x5 = x4(I)\n    x6 = asobject(x5)\n    x7 = lbind(shift, x6)\n    x8 = height(x5)\n    x9 = chain(x7, halve, width)\n    x10 = x9(x2)\n    x11 = height(x5)\n    x12 = increment(x11)\n    x13 = interval(NEG_ONE, x12, ONE)\n    x14 = rbind(multiply, x5)\n    x15 = apply(x14, x13)\n    x16 = mapply(x12, x15)\n    x17 = paint(x5, x16)\n    x18 = repeat(x17, ONE)\n    O = x4(x18)\n    return O"], [1.0, "def solve_2e6a2d9f(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_dc3280e1(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [1.0, "def solve_06f00ee0(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_1aa149f2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_464525d6(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_6b553fe5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_00ddc610(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = hsplit(I, x2)\n    x4 = shape(x3)\n    x5 = maximum(x4)\n    x6 = branch(x5, ORIGIN, canvas)\n    x7 = connect(x5, x6)\n    x8 = height(x7)\n    x9 = width(x7)\n    x10 = matcher(identity, ZERO)\n    x11 = subtract(x10, x8)\n    x12 = matcher(last, x8)\n    x13 = subtract(x12, x9)\n    x14 = width(x3)\n    x15 = interval(ZERO, x14, ONE)\n    x16 = combine(x3, x13)\n    x17 = fill(x6, THREE, x16)\n    x18 = astuple(x11, x15)\n    x19 = canvas(ZERO, x18)\n    x20 = asobject(x19)\n    x21 = occurrences(x17, x20)\n    x22 = lbind(shift, x20)\n    x23 = mapply(x22, x21)\n    O = fill(x17, THREE, x23)\n    return O"], [1.0, "def solve_f5b13097(I):\n    x1 = fgpartition(I)\n    x2 = mapply(toindices, x1)\n    x3 = mapply(vfrontier, x2)\n    x4 = underfill(I, EIGHT, x3)\n    x5 = hconcat(x4, x4)\n    O = vconcat(x5, x5)\n    return O"], [1.0, "def solve_645e4142(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_9b626daa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_377edd58(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, TWO)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 =ulcorner(x11)\n    x13 = subgrid(x11, I)\n    x14 = increment(x13)\n    x15 = asobject(x14)\n    x16 = matcher(first, x3)\n    x17 = compose(flip, x16)\n    x18 = sfilter(x15, x17)\n    x19 = hperiod(x18)\n    x20 = vperiod(x18)\n    x21 = fgpartition(x7)\n    x22 = merge(x21)\n    x23 = paint(x7, x22)\n    x24 = solve(shift, x17)\n    x25 = shift(x24, x18)\n    x26 = fork(combine, hfrontier, vfrontier)\n    x27 = mapply(x26, x23)\n    O = paint(x25, x27)\n    return O"], [1.0, "def solve_945fafb7(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, F)\n    x3 = Fgpartition(I)\n    x4 = compose(last, first)\n    x5 = power(last, TWO)\n    x6 = fork(connect, x4, x5)\n    x7 = fork(recolor, color, x6)\n    x8 = mapply(x7, x3)\n    O = paint(I, x8)\n    return O"], [1.0, "def solve_8c1f40ba(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_d7ea8b99(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, THREE)\n    x7 = canvas(x4, x6)\n    x8 = asobject(x3)\n    x9 = shift(x8, UNITY)\n    O = paint(x7, x9)\n    return O"], [1.0, "def solve_b8be1fa7(I):\n    x1 = replace(I, FOUR, ZERO)\n    x2 = branch(x1, dmirror, identity)\n    x3 = x2(I)\n    x4 = partition(x3)\n    x5 = matcher(color, ZERO)\n    x6 = compose(flip, x5)\n    x7 = extract(x4, x6)\n    x8 = initset(ORIGIN)\n    x9 = height(x7)\n    x10 = insert(ZERO, x8)\n    x11 = insert(x9, x10)\n    x12 = insert(x11, x12)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = dmirror(x4)\n    x16 = width(x7)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = pair(x17, x14)\n    x19 = mapply(neighbors, x18)\n    O = fill(x3, ONE, x19)\n    return O"], [1.0, "def solve_70cad8dc(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = merge(x1)\n    x5 = fill(I, NEG_ONE, x4)\n    x6 = shape(I)\n    x7 = canvas(NEG_ONE, x6)\n    x8 = hconcat(x5, x7)\n    x9 = objects(x8, F, F, T)\n    x10 = rbind(other, x3)\n    x11 = compose(x10, palette)\n    x12 = fork(astuple, x11, ulcorner)\n    x13 = apply(x12, x9)\n    x14 = merge(x9)\n    x15 = fill(I, x3, x14)\n    x16 = paint(x15, x13)\n    O = compress(x16)\n    return O"], [1.0, "def solve_e069d028(I):\n    x1 = switch(I, FIVE, EIGHT)\n    x2 = switch(x1, EIGHT, NEG_ONE)\n    x3 = switch(x2, EIGHT, NEG_ONE)\n    x4 = switch(x3, EIGHT, UNITY)\n    x5 = switch(x4, EIGHT, NEG_ONE)\n    x6 = combine(x1, x5)\n    O = fill(x4, THREE, x6)\n    return O"], [1.0, "def solve_cb6ead5e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = shape(I)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(I, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmin(x11, numcolors)\n    x13 = normalize(x12)\n    x14 = toindices(x13)\n    x15 = increment(x4)\n    x16 = increment(x15)\n    x17 = increment(x5)\n    x18 = increment(x17)\n    x19 = astuple(x16, x18)\n    x20 = lbind(shift, x14)\n    x21 = rbind(multiply, x19)\n    x22 = chain(x20, x21, last)\n    x23 = fork(recolor, first, x22)\n    x24 = normalize(x12)\n    x25 = mapply(x23, x24)\n    O = paint(x9, x25)\n    return O"], [1.0, "def solve_9b41408b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_36fe7672(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_ae6e3c5c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_eee391e5(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_a3cbe197(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_04eef8bd(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_98f9d52f(I):\n    x1 = astuple(vsplit, hsplit)\n    x2 = rbind(rbind, TWO)\n    x3 = rbind(rapply, I)\n    x4 = initset(x2)\n    x5 = lbind(rapply, x4)\n    x6 = chain(first, x3, x5)\n    x7 = lbind(apply, numcolors)\n    x8 = compose(x7, x6)\n    x9 = matcher(x8, TWO_BY_TWO)\n    x10 = extract(x1, x9)\n    x11 = x10(I, TWO)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = palette(x12)\n    x15 = palette(x13)\n    x16 = intersection(x14, x15)\n    x17 = first(x16)\n    x18 = shape(x12)\n    x19 = canvas(x17, x18)\n    x20 = ofcolor(x12, x17)\n    x21 = ofcolor(x13, x17)\n    x22 = intersection(x20, x21)\n    O = fill(x19, TWO, x22)\n    return O"], [1.0, "def solve_985967fe(I):\n    x1 = rot270(I)\n    x2 = rot90(I)\n    x3 = rot270(x1)\n    x4 = astuple(x2, x3)\n    x5 = astuple(FOUR, EIGHT)\n    x6 = apply(decrement, x5)\n    x7 = apply(asobject, x4)\n    x8 = mpapply(shift, x7, x6)\n    O = paint(x1, x8)\n    return O"], [1.0, "def solve_865188b4(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = color(x13)\n    x15 = ofcolor(x7, x14)\n    x16 = ofcolor(x8, x14)\n    x17 = intersection(x15, x16)\n    x18 = canvas(x14, x9)\n    x19 = fill(x18, THREE, x17)\n    O = fill(x19, TWO, x15)\n    return O"], [1.0, "def solve_a75b263d(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = power(outbox, TWO)\n    x4 = mapply(x3, x2)\n    O = fill(I, FOUR, x4)\n    return O"], [1.0, "def solve_e0fb90ed(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_601cb44e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_8d319fd4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_23a6f291(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_f4030b03(I):\n    x1 = fgpartition(I)\n    x2 = compose(dneighbors, center)\n    x3 = fork(difference, backdrop, x2)\n    x4 = fork(equality, toindices, x3)\n    x5 = matcher(size, FIVE)\n    x6 = fork(both, x4, x5)\n    x7 = extract(x1, x6)\n    x8 = color(x7)\n    x9 = merge(x1)\n    x10 = compose(hmirror, vmirror)\n    x11 = initset(x10)\n    x12 = insert(vmirror, x11)\n    x13 = insert(hmirror, x12)\n    x14 = rapply(x13, x9)\n    x15 = ulcorner(x7)\n    x16 = lbind(subtract, x15)\n    x17 = matcher(first, x8)\n    x18 = rbind(sfilter, x17)\n    x19 = chain(x16, ulcorner, x18)\n    x20 = fork(shift, identity, x19)\n    x21 = mapply(x20, x14)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_f4744c08(I):\n    x1 = rbind(b775, I)\n    x2 = compose( shape, asobject)\n    x3 = objects(I, T, F, F)\n    x4 = argmax(x3, size)\n    x5 = canvas(FIVE, x2)\n    O = paint(x5, x4)\n    return O"], [1.0, "def solve_c336cac7(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_19717294(I):\n    x1 = lbind(toobject, I)\n    x2 = lbind(shift, I)\n    x3 = compose(x2, T)\n    x4 = chain(x1, x3, decrement)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x1)\n    O = paint(I, x6)\n    return O"], [1.0, "def solve_acdcb61a(I):\n    x1 = ofcolor(I, TWO)\n    x2 = dalowermost(x1)\n    x3 = equality(x2, ZERO)\n    x4 = branch(x3, x1, x2)\n    x5 = fork(combine, vfrontier, hfrontier)\n    x6 = x5(x4)\n    x7 = underfill(I, EIGHT, x6)\n    x8 = fill(x7, TWO, x5)\n    O = fill(x8, ONE, x7)\n    return O"], [1.0, "def solve_1f3ea06e(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_fe4e4b3f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_f393e6e9(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_8793aff7(I):\n    x1 = asindices(I)\n    x2 = objects(I, T, F, T)\n    x3 = fork(multiply, sign, identity)\n    x4 = lbind(apply, x3)\n    x5 = chain(even, maximum, x4)\n    x6 = lbind(sfilter, x1)\n    x7 = fork(add, first, last)\n    x8 = rbind(remove, x2)\n    x9 = compose(center, last)\n    x10 = fork(subtract, first, x9)\n    x11 = compose(x5, x10)\n    x12 = lbind(rbind, equality)\n    x13 = lbind(argmin, x2)\n    x14 = chain(x7, x4, x10)\n    x15 = lbind(lbind, astuple)\n    x16 = lbind(rbind, astuple)\n    x17 = lbind(compose, x11)\n    x18 = lbind(compose, x14)\n    x19 = compose(x18, x15)\n    x20 = compose(x18, x16)\n    x21 = compose(x13, x19)\n    x22 = rbind(compose, x21)\n    x23 = lbind(lbind, valmin)\n    x24 = rbind(compose, x19)\n    x25 = chain(x24, x23, x8)\n    x26 = lbind(fork, greater)\n    x27 = fork(x26, x25, x20)\n    x28 = chain(x6, x17, x16)\n    x29 = chain(x6, x22, x12)\n    x30 = fork(intersection, x28, x29)\n    x31 = compose(x6, x27)\n    x32 = fork(intersection, x30, x31)\n    x33 = fork(recolor, color, x32)\n    x34 = mapply(x33, x2)\n    O = paint(I, x34)\n    return O"], [1.0, "def solve_d2520127(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_d5b19de7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = difference(x2, x1)\n    x4 = fill(I, TWO, x3)\n    x5 = objects(x4, T, F, T)\n    x6 = color(x2)\n    x7 = palette(x5)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, x4)\n    x10 = argmax(x8, x9)\n    x11 = remove(x10, x8)\n    x12 = lbind(ofcolor, I)\n    x13 = mapply(x12, x11)\n    x14 = subgrid(x13, x4)\n    x15 = objects(x14, T, F, T)\n    x16 = colorfilter(x15, x6)\n    x17 = ofcolor(x14, x10)\n    x18 = subgrid(x17, x14)\n    x19 = mapply(dneighbors, x16)\n    x20 = mapply(ineighbors, x16)\n    x21 = fill(x14, toindices, x19)\n    x82 = fill(x21, x10, x20)\n    x83 = ofcolor(x18, x6)\n    x84 = fill(x82, x10, x83)\n    x85 = ofcolor(x84, x11)\n    x86 = mapply(ineighbors, x21)\n    x87 = mapply(ineighbors, x22)\n    x88 = fill(x85, x11, x68)\n    O = fill(x88, x10, x67)\n    return O"], [1.0, "def solve_3f139ab6(I):\n    x1 = partition(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmin(x1, size)\n    x4 = rbind(adjacent, x3)\n    x5 = remove(x3, x1)\n    x6 = extract(x5, x4)\n    x7 = color(x6)\n    x8 = rbind(contained, x7)\n    x9 = compose(x8, color)\n    x10 = sfilter(x2, x9)\n    x11 = size(x10)\n    x12 = increment(x11)\n    x13 = interval(ZERO, x12, THREE)\n    x14 = apply(tojvec, x13)\n    x15 = fork(shift, identity, mostcolor)\n    x16 = mapply(x15, x14)\n    x17 = interval(adjacent,770, ONE)\n    x18 = pair(x17, x16)\n    x19 = compose(invert, first)\n    x20 = order(x18, x19)\n    x21 = apply(last, x20)\n    x22 = mpapply(recolor, x21, x13)\n    O = paint(I, x22)\n    return O"], [1.0, "def solve_9882237f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_c1951c89(I):\n    O = fill(I, EIGHT, x2)\n    return O"], [1.0, "def solve_8cc80e52(I):\n    x1 = partition(I)\n    x2 = compose(maximum, shape)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(colorcount, I)\n    x8 = argmin(x6, x7)\n    x9 = mostcolor(I)\n    x10 = shape(I)\n    x11 = increment(x10)\n    x12 = increment(x11)\n    x13 = canvas(x9, x12)\n    x14 = asobject(I)\n    x15 = shift(x14, UNITY)\n    x16 = paint(x13, x15)\n    x17 = repeat(identity, ONE)\n    x18 = astuple(cmirror, dmirror)\n    x19 = astuple(hmirror, vmirror)\n    x20 = combine(x18, x19)\n    x21 = combine(x17, x20)\n    x22 = fork(compose, first, last)\n    x23 = product(x21, x21)\n    x24 = apply(x22, x23)\n    x25 = ofcolor(x16, x4)\n    x26 = intersection(x15, x25)\n    x27 = canvas(x9, x10)\n    O = fill(x27, x4, x27)\n    return O"], [1.0, "def solve_e39398e2(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = matcher(color, x4)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x2, x6)\n    x8 = difference(x2, x7)\n    x9 = fill(I, TWO, x8)\n    x10 = lbind(recolor, rbind)\n    x11 = compose(x10, initset)\n    x12 = chain(x11, mostcolor, x11)\n    x13 = recolor(x4, x7)\n    x14 = objects(x9, T, T, T)\n    x15 = sfilter(x14, x13)\n    x16 = difference(x14, x15)\n    x17 = toindices(x15)\n    x18 = fork(combine, hfrontier, vfrontier)\n    x19 = mapply(x18, x16)\n    x20 = paint(x9, x19)\n    O = x11(x20)\n    return O"], [1.0, "def solve_914888a5(I):\n    x1 = colorcount(I, ZERO)\n    x2 = subtract(NINE, x1)\n    O = upscale(I, x2)\n    return O"], [1.0, "def solve_4c75b029(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = shape(x3)\n    x5 = halve(x4)\n    x6 = hupscale(x3, x5)\n    x7 =(I, x6)\n    x8 = lefthalf(x7)\n    O = tophalf(x8)\n    return O"], [1.0, "def solve_1b4c2c49(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = fgpartition(x1)\n    x3 = compose(increment, first)\n    x4 = fork(greater, last, x3)\n    x5 = size(x2)\n    x6 = interval(ZERO, x5, ONE)\n    x7 = rbind(contained, x6)\n    x8 = compose(x7, first)\n    x9 = interval(ZERO, x5, ONE)\n    x10 = pair(x4, x9)\n    x11 = sfilter(x10, x8)\n    x12 = mapply(first, x11)\n    O = fill(x1, FOUR, x12)\n    return O"], [1.0, "def solve_f8ad0d51(I):\n    x1 = trim(I)\n    x2 = decrement(x1)\n    O = upscale(x3, x2)\n    return O"], [1.0, "def solve_a4eacf40(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = toobject(x2, I)\n    return O"], [1.0, "def solve_2e7e7fd3(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = extract(x2, x4)\n    x6 = width(I)\n    x7 = subtract(x6, TWO)\n    x8 = multiply(x7, THREE)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = interval(ZERO, x8, ONE)\n    x11 = lbind(multiply, x5)\n    x12 = apply(x11, x9)\n    x13 = lbind(shift, x5)\n    x14 = mapply(x13, x12)\n    x15 = astuple(x6, x14)\n    x16 = canvas(ZERO, x15)\n    x17 = asobject(I)\n    x18 = shift(x17, x16)\n    x19 = height(I)\n    x20 = lbind(shift, x16)\n    x21 = mapply(x20, x18)\n    x22 = paint(x16, x21)\n    x23 = partition(x22)\n    x24 = lbind(shift, x13)\n    x25 = mapply(x24, x23)\n    x26 = paint(x22, x25)\n    x27 =Documentmirror(x24)\n    x28 = astuple(x6, x14)\n    x29 = shift(x27, x28)\n    O = paint(x29, x29)\n    return O"], [1.0, "def solve_0495eae9(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fork(recolor, color, x11)\n    return O"], [1.0, "def solve_abc3ee14(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x77)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [1.0, "def solve_baac5602(I):\n    x1 = remove(I, x2)\n    x2 = lbind(contained, ONE)\n    x3 = chain(flip, x2, shape)\n    x4 = sfilter(x1, x3)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = fork(multiply, height, width)\n    x8 = argmin(x6, x7)\n    O = x6(x8)\n    return O"], [1.0, "def solve_696f2028(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_beb9c07a(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = matcher(x12, ZERO)\n    x17 = extract(x7, x16)\n    x18 = height(x17)\n    x19 = rbind(ofcolor, EIGHT)\n    x20 = compose(positive, size)\n    x21 = rbind(sfilter, x20)\n    x22 = chain(x17, x21, dmirror)\n    x23 = multiply(x12, UNITY)\n    x24 = power(x22, x23)\n    x25 = x24(I)\n    x26 = objects(x25, T, F, T)\n    x27 = colorfilter(x26, ZERO)\n    x28 = rbind(canvas, T88)\n    x29 = apply(x28, x27)\n    x30 = merge(x29)\n    x31 = rbind( OFcolor, EIGHT)\n    x32 = chain(x31, x30, x3)\n    x33 = rbind(ofcolor, EIGHT)\n    x34 = fork(recolor, x33, x32)\n    x35 = mapply(x34, x21)\n    x36 = paint(x25, x35)\n    O = x10(x36)\n    return O"], [1.0, "def solve_e4f6a1d0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_f3da74d8(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_3af34b1c(I):\n    x1 = astuple(identity, identity)\n    x2 = astuple(rot90, rot270)\n    x3 = astuple(x1, x2)\n    x4 = astuple(rot180, rot180)\n    x5 = astuple(rot270, rot90)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = leastcolor(I)\n    x9 = repeat(x8, ONE)\n    x10 = rbind(rapply, I)\n    x11 = chain(x10, initset, first)\n    x12 = compose(first, x11)\n    x13 = chain(dedupe, first, x12)\n    x14 = matcher(x13, x9)\n    x15 = extract(x7, x14)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = x16(I)\n    x19 = ofcolor(x18, x8)\n    x20 = height(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = lbind(astuple, x20)\n    x23 = apply(x22, x21)\n    x24 = rbind(shoot, DOWN)\n    x25 = mapply(x24, x23)\n    x26 = fill(x18, FOUR, x25)\n    x27 = astuple(x20, x20)\n    x28 = canvas(ZERO, x27)\n    x29 = asindices(x28)\n    x30 = shift(x29, x27)\n    x31 = shape(I)\n    x32 = maximum(x31)\n    x33 = lbind(shift, x30)\n    x34 = interval(ZERO, x32, x20)\n    x35 = pair(x34, x34)\n    x36 = mapply(x33, x35)\n    x37 = fill(x26, TWO, x36)\n    O = x17(x37)\n    return O"], [1.0, "def solve_79af4174(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_45970bc8(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_6c16c983(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_d4935307(I):\n    x1 = rbind(bordering, I)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x2, x2)\n    x4 = fork(equality, toindices, box)\n    x5 = sfilter(x3, x4)\n    x6 = mfilter(x5, x2)\n    O = fill(I, T, x6)\n    return O"], [1.0, "def solve_1a84fb2d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_31c504b7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_64572e1e(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = add(TWO, x2)\n    x4 = canvas(x1, x3)\n    x5 = apply(first, x4)\n    x6 = asindices(x5)\n    x7 = shift(x6, UNITY)\n    x8 = shape(x7)\n    x9 = halve(x8)\n    x10 = increment(x9)\n    x11 = interval(ZERO, x10, ONE)\n    x12 = lbind(shift, x7)\n    x13 = rbind(multiply, x4)\n    x14 = apply(x13, x11)\n    x15 = mapply(x12, x14)\n    O = paint(x4, x15)\n    return O"], [1.0, "def solve_b6ca3d6c(I):\n    x1 = index(I, ORIGIN)\n    x2 = box(I)\n    O = fill(I, x1, x2)\n    return O"], [1.0, "def solve_aebe6f9c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_277585dd(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [1.0, "def solve_bfc33641(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = leastcolor(x1)\n    x4 = leastcolor(x2)\n    x5 = ofcolor(I, x3)\n    x6 = center(x5)\n    x7 = ofcolor(I, x4)\n    x8 = center(x7)\n    x9 = height(I)\n    x10 = width(I)\n    x11 = hfrontier(x6)\n    x12 = fill(I, x3, x11)\n    x13 = hfrontier(x8)\n    x14 = fill(x12, x4, x13)\n    x15 = decrement(x10)\n    x16 = decrement(x9)\n    x17 = halve(x9)\n    x18 = tojvec(x15)\n    x19 = connect(ORIGIN, x18)\n    x20 = fill(x14, x3, x19)\n    x21 = toivec(x16)\n    x22 = astuple(x16, x15)\n    x23 = connect(x21, x22)\n    x24 = fill(x20, x4, x23)\n    x25 = decrement(x17)\n    x26 = toivec(x25)\n    x27 = connect(ORIGIN, x26)\n    x28 = fill(x24, x3, x27)\n    x29 = tojvec(x15)\n    x30 = decrement(x17)\n    x31 = astuple(x30, x15)\n    x32 = connect(x29, x31)\n    x33 = fill(x28, x3, x32)\n    x34 = equality(x17, x12)\n    x41 = branch(x34, x22, x24)\n    O = canvas(x31, x41)\n    return O"], [1.0, "def solve_9ecddb3b(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = shape(I)\n    x3 = multiply(x2, x2)\n    x4 = canvas(ZERO, x3)\n    x5 = rbind(multiply, x2)\n    x6 = apply(x5, x1)\n    x7 = asobject(I)\n    x8 = lbind(shift, x7)\n    x9 = mapply(x8, x6)\n    O = paint(x4, x9)\n    return O"], [1.0, "def solve_6d23468b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_dc3a0aba(I):\n    x1 = astuple(SIX, THREE)\n    x2 = dmirror(I)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    x14 = apply(x4, x13)\n    x15 = ofcolor(I, ZERO)\n    x16 = asindices(I)\n    x17 = shoot(ORIGIN, x16)\n    x18 = intersection(x15, x17)\n    x19 = fill(I, ZERO, x18)\n    O = replace(x19, FIVE, ZERO)\n    return O"], [1.0, "def solve_8fa45371(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_2591893f(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_c8a2b041(I):\n    x1 = subgrid(I, I)\n    O = upscale(x1, THREE)\n    return O"], [1.0, "def solve_2e9f12c9(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = matcher(size, TWO)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = other(x8, x1)\n    x10 = replace(I, x6, x1)\n    x11 = ofcolor(I, x6)\n    x12 = repeat(x9, ONE)\n    x13 = rbind(equality, x12)\n    x14 = first(I)\n    x15 = dedupe(x14)\n    x16 = x13(x15)\n    x17 = last(x15)\n    x18 = dedupe(x17)\n    x19 = x13(x18)\n    x20 = dmirror(I)\n    x21 = first(x20)\n    x22 = dedupe(x21)\n    x23 = x13(x22)\n    x24 = dmirror(I)\n    x25 = last(x24)\n    x26 = dedupe(x25)\n    x27 = x13(x26)\n    x28 = apply(last, x11)\n    x29 = apply(first, x11)\n    x30 = either(x16, x19)\n    x31 = branch(x30, x28, x29)\n    x32 = branch(x30, lbind, rbind)\n    x33 = lbind(x32, astuple)\n    x34 = branch(x30, height, width)\n    x35 = x34(I)\n    x36 = decrement(x35)\n    x37 = either(x16, x23)\n    x38 = branch(x37, ZERO, x36)\n    x39 = x33(x38)\n    x40 = apply(x39, x31)\n    O = fill(x10, x6, x40)\n    return O"], [1.0, "def solve_78faa7f4(I):\n    x1 =feca360(I)\n    x2 = asobject(I)\n    x3 = matcher(first, ZERO)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = lbind(shift, x5)\n    x7 = mapply(x6, x2)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_47be22b3(I):\n    x1 = switch(I, TWO, NEG_ONE)\n    x2 = switch(x1, THREE, FOUR)\n    x3 = switch(x2, EIGHT, NINE)\n    x4 = switch(x3, ONE, FOUR)\n    x5 = astuple(TEN, TEN)\n    x6 = canvas(ZERO, x5)\n    x7 = asindices(x6)\n    x8 = paint(x6, x7)\n    x9 = matcher(first, THREE)\n    x10 = rbind(sfilter, x9)\n    x11 = rbind(compose, initset)\n    x12 = lbind(rbind, manhattan)\n    x13 = chain(x11, x12, initset)\n    x14 = chain(x10, x13,7776)\n    x15 = apply(x14, x5)\n    x16 = fork(connect, ulcorner, lrcorner)\n    x17 = fork(connect, llcorner, urcorner)\n    x18 = fork(combine, x16, x17)\n    x19 = mapply(x18, x15)\n    O = fill(x8, EIGHT, x19)\n    return O"], [1.0, "def solve_0c1b95c0(I):\n    x1 = fgpartition(I)\n    x2 = compose(dneighbors, center)\n    x3 = fork(difference, backdrop, x2)\n    x4 = fork(equality, toindices, x3)\n    x5 = matcher(size, FIVE)\n    x6 = fork(both, x4, x5)\n    x7 = extract(x1, x6)\n    x8 = color(x7)\n    x9 = merge(x1)\n    x10 = compose(hmirror, vmirror)\n    x11 = initset(x10)\n    x12 = insert(vmirror, x11)\n    x13 = insert(hmirror, x12)\n    x14 = rapply(x13, x9)\n    x15 = ulcorner(x7)\n    x16 = lbind(subtract, x15)\n    x17 = matcher(first, x8)\n    x18 = rbind(sfilter, x17)\n    x19 = chain(x16, ulcorner, x18)\n    x20 = fork(shift, identity, x19)\n    x21 = mapply(x20, x14)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_a860361d(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_8ca81ad9(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_5d301448(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_1aef2380(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = height(x2)\n    x4 = halve(x3)\n    x5 = width(x2)\n    x6 = halve(x5)\n    x7 = ulcorner(x2)\n    x8 = lrcorner(x2)\n    x9 = shape(I)\n    x10 = maximum(x9)\n    x11 = multiply(THREE, TEN)\n    x12 = interval(ONE, x11, ONE)\n    x13 = rbind(multiply, x4)\n    x14 = apply(x13, x12)\n    x15 = rbind(multiply, x6)\n    x16 = apply(x15, x12)\n    x17 = pair(x14, x16)\n    x18 = rbind(add, x7)\n    x19 = apply(invert, x17)\n    x20 = apply(x18, x19)\n    x21 = rbind(add, x8)\n    x22 = apply(x21, x17)\n    x23 = pair(x20, x22)\n    x24 = papply(box, x23)\n    O = fill(I, x1, x24)\n    return O"], [1.0, "def solve_5db94dc5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = extract(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = last(x12)\n    x21 = lbind(subtract, x20)\n    x22 = increment(x19)\n    x23 = rbind(subtract, x22)\n    x24 = chain(x21, x23, decrement)\n    x25 = lbind(shift, x1)\n    x26 = mapply(x25, x18)\n    O = fill(I, x3, x26)\n    return O"], [1.0, "def solve_2256a6d2(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_fb6a737b(I):\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = mfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = mfilter(x4, x2)\n    x6 = shape(I)\n    x7 = add(TWO, x6)\n    x8 = canvas(ZERO, x7)\n    x9 = asobject(I)\n    x10 = shift(x9, UNITY)\n    x11 = paint(x8, x10)\n    x12 = objects(x11, T, F, T)\n    x13 = apply(color, x12)\n    x14 = rbind(contained, x13)\n    x15 = compose(minimum, x14)\n    x16 = sfilter(x1, x15)\n    x17 = paint(x11, x16)\n    x18 = objects(x11, T, F, T)\n    x19 = merge(x18)\n    x20 = cover(x17, x19)\n    x21 = paint(x20, x16)\n    O = compress(x21)\n    return O"], [1.0, "def solve_4b143fdc(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_8bb47b66(I):\n    x1 = fgpartition(I)\n    x2 = argmax(x1, size)\n    x3 = height(x2)\n    x4 = width(x2)\n    x5 = neighbors(ORIGIN)\n    x6 = toindices(x2)\n    x7 = lbind(shift, x6)\n    x8 = height(I)\n    x9 = divide(x8, x3)\n    x10 = width(I)\n    x11 = divide(x10, x4)\n    x12 = astuple(x9, x11)\n    x13 = maximum(x12)\n    x14 = increment(x13)\n    x15 = interval(ONE, x14, ONE)\n    x16 = astuple(x3, x4)\n    x17 = lbind(multiply, x16)\n    x18 = compose(crement, x17)\n    x19 = lbind(mapply, x7)\n    x20 = rbind(apply, x15)\n    x21 = lbind(rbind, multiply)\n    x22 = compose(x21, x18)\n    x23 = chain(x19, x20, x22)\n    x24 = rbind(toobject, I)\n    x25 = compose(x7, x18)\n    x26 = chain(palette, x24, x25)\n    x27 = mostcolor(I)\n    x28 = rbind(equality, x27)\n    x29 = rbind(argmin, x28)\n    x30 = compose(x29, x26)\n    x31 = fork(recolor, x30, x23)\n    x32 = mapply(x31, x5)\n    O = paint(I, x32)\n    return O"], [1.0, "def solve_a0f497d4(I):\n    x1 = ofcolor(I, SIX)\n    x2 = recolor(ONE, x1)\n    x3 = power(decrement, TWO)\n    x4 = x3(x2)\n    x5 = on108(x4, THREE)\n    x6 = matcher(size, dedupe)\n    x7 = x6(x5)\n    x8 = rbind(subgrid, I)\n    x9 = apply(x8, x5)\n    x10 = dedupe(x9)\n    x11 = lbind(fork, shift)\n    x12 = lbind(x11, x12)\n    x13 = lbind(rbind, rapply)\n    x14 = compose(x12, x13)\n    x15 = lbind(compose, x5)\n    x16 = x15(x14)\n    x17 = mapply(x16, x10)\n    O = underfill(I, EIGHT, x17)\n    return O"], [1.0, "def solve_8d9e4de7(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_407adb1d(I):\n    x1 = lbind(recolor, EIGHT)\n    x2 = compose(x1, delta)\n    x3 = fork(paint, identity, x2)\n    x4 = apply(x3, I)\n    x5 = astuple(SIX, dmirror)\n    x6 = astuple(UNITY, papply)\n    x7 = initset(x6)\n    x8 = equality(x5, x7)\n    x9 = branch(x8, identity, x4)\n    x10 = x9(I)\n    x11 = objects(x10, T, F, T)\n    x12 = colorfilter(x11, EIGHT)\n    x13 = difference(x11, x12)\n    x14 =argmax(x13, size)\n    x15 = color(x14)\n    x16 = subgrid(x14, x10)\n    x17 = trim(x16)\n    x18 = lefthalf(x17)\n    x19 = vmirror(x18)\n    x20 = astuple(x15, x19)\n    x21 = double(x20)\n    x22 = interval(ZERO, x21, ONE)\n    x23 = apply(tojvec, x22)\n    x24 = lbind(shift, x18)\n    x25 = mapply(x24, x23)\n    x26 = fill(x10, EIGHT, x25)\n    x27 = fill(x26, FOUR, x24)\n    O = x9(x27)\n    return O"], [1.0, "def solve_d14f24ae(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_fdd67056(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_db548893(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = fork(recolor, color, backdrop)\n    x5 = apply(x4, x1)\n    x6 = mfilter(x5, hline)\n    x7 = mfilter(x5, vline)\n    x8 = size(x6)\n    x9 = size(x7)\n    x10 = greater(x8, x9)\n    x11 = branch(x10, vsplit, hsplit)\n    x12 = x11(I, TWO)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = palette(x13)\n    x16 = merge(x15)\n    x17 = palette(x14)\n    x18 = intersection(x16, x17)\n    x19 = difference(x16, x18)\n    x20 = first(x19)\n    x21 = shape(x13)\n    x22 = canvas(x20, x21)\n    x23 = ofcolor(x13, x10)\n    x24 = ofcolor(x14, x10)\n    x25 = intersection(x23, x24)\n    O = fill(x22, TWO, x25)\n    return O"], [1.0, "def solve_3d56e398(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_5b6751ac(I):\n    x1 = objects(I, T, F, T)\n    x2 = height(x1)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, le, tophalf)\n    x5 = branch(x3, righthalf, x4)\n    x6 = width(x5)\n    x7 = equality(x6, ONE)\n    x8 = branch(x7, ulcorner, last)\n    x9 = x8(x5)\n    x10 = x8(x10)\n    x11 = gravitate(x9, x11)\n    x12 = shape(x11)\n    x13 = multiply(x12, x4)\n    x14 = canvas(ZERO, x13)\n    x15 = ofcolor(x14, ZERO)\n    x16 = rbind(multiply, x14)\n    x17 = apply(x16, x15)\n    x18 = lbind(shift, x15)\n    x19 = mapply(x18, x17)\n    O = fill(x14, ZERO, x19)\n    return O"], [1.0, "def solve_8ef6330b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = fork(combine, vfrontier, hfrontier)\n    x16 = x15(x14)\n    x17 = mapply(x16, x13)\n    x18 =eepply(x17, x16)\n    x19 = hmirror(x18)\n    x20 = x16(x19)\n    x21 = replace(x20, x3, x5)\n    x22 = x15(x21)\n    O = compress(x22)\n    return O"], [1.0, "def solve_66877ab0(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [1.0, "def solve_e3c704de(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_a9288d1a(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, least)\n    x9 = compose(flip, x8)\n    x10 = extract(x7, x9)\n    x11 = remove(x10, x7)\n    x12 = merge(x11)\n    x13 = mostcolor(x12)\n    x14 = partition(x12)\n    x15 = ofcolor(x12, x13)\n    x16 = subgrid(x15, x12)\n    x17 = difference(x16, x15)\n    x18 = hmirror(x17)\n    x19 = replace(x18, x13, x12)\n    x20 = subgrid(x15, x19)\n    x21 = asobject(x20)\n    x22 = occurrences(x19, x21)\n    x23 = size(x22)\n    x24 = positive(x23)\n    x25 = branch(x24,hmirror, vmirror)\n    x26 = x25(x20)\n    x27 = ofcolor(x26, x13)\n    x28 = subgrid(x27, x20)\n    x29 = ofcolor(x28, x13)\n    x30 = ulcorner(x27)\n    x31 = invert(x30)\n    x32 = lrcorner(x27)\n    x33 = increment(x31)\n    x34 = shift(x29, x33)\n    x35 = fork(connect, last, last)\n    x36 = mapply(x35, x22)\n    O = fill(x14, x13, x36)\n    return O"], [1.0, "def solve_4c46e58c(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_461fe4c6(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_c6820454(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_01a1ea2e(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_98beb5f3(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = chain(size, dedupe, first)\n    x9 = matcher(x8, ONE)\n    x10 = compose(first, cmirror)\n    x11 = chain(size, dedupe, x10)\n    x12 = matcher(x11, ONE)\n    x13 = fork(both, x9, x12)\n    x14 = rbind(rapply, I)\n    x15 = compose(initset, first)\n    x16 = chain(first, x14, x15)\n    x17 = compose(x13, x16)\n    x18 = extract(x7, x17)\n    x19 = first(x18)\n    x20 = last(x18)\n    x21 = x19(I)\n    x22 = width(x21)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = index(x21, x24)\n    x26 = asobject(x21)\n    x27 = matcher(first, x25)\n    x28 = compose(flip, x27)\n    x29 = sfilter(x26, x28)\n    x30 = hperiod(x29)\n    x31 = width(x21)\n    x32 = increment(x31)\n    x33 = interval(ZERO, x32, x30)\n    x34 = apply(tojvec, x33)\n    x35 = lbind(shift, x29)\n    x36 = mapply(x35, x34)\n    x37 = paint(x21, x36)\n    O = x20(x37)\n    return O"], [1.0, "def solve_c638c946(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = apply(normalize, x2)\n    x4 = astuple(NINE, NINE)\n    x5 = canvas(FIVE, x4)\n    x6 = asindices(x5)\n    x7 = box(x6)\n    x8 = center(x6)\n    x9 = lbind(contained, ZERO)\n    x10 = rbind(subtract, x8)\n    x11 = compose(x9, x10)\n    x12 = chain(outbox, outbox, initset)\n    x13 = corners(x6)\n    x14 = mapply(x12, x13)\n    x15 = difference(x7, x14)\n    x16 = inbox(x7)\n    x17 = sfilter(x16, x11)\n    x18 = combine(x15, x17)\n    x19 = fill(x5, ONE, x18)\n    x20 = objects(x19, T, F, T)\n    x21 = apply(toindices, x20)\n    x22 = lbind(matcher, normalize)\n    x23 = lbind(extract, x21)\n    x24 = chain(ulcorner, x23, x22)\n    x25 = chain(invert, ulcorner, x24)\n    x26 = fork(shift, identity, x25)\n    x27 = mapply(x26, x3)\n    O = paint(x5, x27)\n    return O"], [1.0, "def solve_3072af49(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, x5)\n    x8 = rbind(x7, x6)\n    x9 = compose(x8, x7)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [1.0, "def solve_70fb6a99(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dneighbors)\n    x9 = fork(shift, x8, x6)\n    x10 = fork(combine, x9, x3)\n    x11 = mapply(x10, x1)\n    O = paint(I, x11)\n    return O"], [1.1, "def solve_36c306d0(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_19abcbdd(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = palette(I)\n    x7 = compose(x4, x5)\n    x8 = argmin(x6, x7)\n    x9 = colorcount(I, x8)\n    x10 = positive(x9)\n    x11 = branch(x10, dmirror, identity)\n    x12 = x11(I)\n    x13 = x8(x12)\n    x14 = ofcolor(x13, x8)\n    x15 = subgrid(x14, x13)\n    x16 = adaptation(x15, x13)\n    x17 = mostcolor(x16)\n    x18 = ofcolor(x x x17)\n    x19 = hmirror(x18)\n    x20 = asobject(x19)\n    x21 = matcher(first, x17)\n    x22 = compose(flip, x21)\n    x23 = sfilter(x20, x22)\n    x24 = partition(x12)\n    x25 = sizefilter(x24, ONE)\n    x26 = apply(merge, x25)\n    x27 = argmin(x26, last)\n    x28 = rbind(subgrid, x13)\n    x29 = apply(x28, x27)\n    x30 = rbind(colorcount, x17)\n    x31 = argmin(x29, x30)\n    x32 = rightmost(x31)\n    x33 = rightmost(x28)\n    x34 = width(x33)\n    x35 =rightmost(x28)\n    x36 = leftmost(x34)\n    x37 = subtract(x32, x35)\n    x38 = decrement(x37)\n    x39 = leftmost(x33)\n    x40 = rightmost(x33)\n    x41 = subtract(x39, x40)\n    x42 = astuple(x37, x"], [1.1, "def solve_a03a27cd(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = astuple(x34, x37)\n    x39 = add(x38, UNITY)\n    x40 = initset(x39)\n    x41 = backdrop(x40)\n    "], [1.1, "def solve_3e57783e(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = subtract(x11, TWO)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract("], [1.1, "def solve_204764b3(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = compose(x4, size)\n    x6 = sfilter(x1, x5)\n    x7 = fork(pair, x4, identity)\n    x8 = chain(x1, x7, dmirror)\n    x9 = maximum(x6)\n    x10 = identity(I)\n    x11 = branch(x10,130, x9)\n    x12 = x11(I)\n    x13 = x11(x12)\n    x14 = argmin(x13, x7)\n    x15 = argmax(x13, x7)\n    x16 = width(x12)\n    x17 = decrement(x16)\n    x18 = tojvec(x17)\n    x19 = height(x12)\n    x20 = decrement(x19)\n    x21 = interval(x17, x20, ONE)\n    x22 = lbind(apply, last)\n    x23 = compose(x22, first)\n    x24 = rbind(sfilter, x23)\n    x25 = chain(positive, size, x24)\n    x26 = sfilter(x21, x25)\n    x27 = maximum(x26)\n    x28 = increment(x27)\n    x29 = interval(ZERO, x28, ONE)\n    x30 = lbind( pair, x22)\n    x31 = lbind(pair, x25)\n    x32 = compose(x30, x31)\n    x33 = apply(x32, x29)\n    x34 = lbind(sfilter, x33)\n    x35 = lbind(matcher, first)\n    x36 = compose(x34, x35)\n    x37 = chain(size, x33, x36)\n    x38 = apply(x37, x29)\n    x39 = lbind(colorcount, x12)\n    x40 = valmax(x38, x39)\n    x41 = mat"], [1.1, "def solve_f1ba0082(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_f4119771(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = combine(x25, x26)\n    x28 = intersection(x27, x23)\n    x29 = first(x28)\n    x30 = ofcolor(x23, x29)\n    x31 = ofcolor(x24, x29)\n    x32 = intersection(x30, x31)\n    x33 = first(x32)\n    x34 = matcher(first, x29)\n    x35 = compose(flip, x34)\n    x36 = sfilter(x33, x35)\n    x37 = difference(x21, x36)\n    x38 = objects(x24, T, F, T)\n    x39 = colorfilter(x38, x29)"], [1.1, "def solve_f66653b4(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = compose(flip, x33)\n    x35 = sfilter(x32, x34)\n    x36 = difference(x32, x35)\n    x37 = fill(x23, x8, x31)\n    x38 = fill(x37, x42, x36)\n    x39 = fork(connect, identity, ul"], [1.1, "def solve_aae888ec(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = ONE00000000\n    001044404900\n    31000404413\n    \"\"\"\n    x2 = trim(I)\n    x3 = decrement(x2)\n    x4 = tojvec(x3)\n    x5 = connect(ORIGIN, x4)\n    x6 = height(I)\n    x7 = equality(x6, ZERO)\n    x8 = branch(x7, x5, x6)\n    x9 = width(I)\n    x10 = decrement(x9)\n    x11 = tojvec(x10)\n    x12 = connect(x11, x9)\n    x13 = height(I)\n    x14 = decrement(x13)\n    x15 = toivec(x14)\n    x16 = connect(x15, x12)\n    x17 = width(I)\n    x18 = decrement(x17)\n    x19 = tojvec(x18)\n    x20 = connect(x19, x12)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = toivec(x22)\n    x24 = connect(x23, x18)\n    x25 = width(I)\n    x26 = decrement(x25)\n    x27 = tojvec(x26)\n    x28 = shape(I)\n    x29 = decrement(x28)\n    x30 = connect(x27, x29)\n    x31 = height(I)\n    x32 = decrement(x31)\n    x33 = toivec(x32)\n    x34 = shape(I)\n    x35 = decrement(x34)\n    x36 = connect(x33, x35)\n    x37 = fill(I, THREE, x10)\n    x38 = fill(x37, astuple, x20)\n    x39 = fill(x38, x6, x30)\n    x40 = fill(x39, TWO, x36)\n    x41 = size(x1)\n    x42 = positive(x41)\n    x43 = branch(x42, x3, x4"], [1.1, "def solve_3af703c4(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_50fc64e8(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = leastcolor(x1)\n    x4 = leastcolor(x2)\n    x5 = ofcolor(I, x3)\n    x6 = center(x5)\n    x7 = ofcolor(I, x4)\n    x8 = center(x7)\n    x9 = height(I)\n    x10 = width(I)\n    x11 = hfrontier(x6)\n    x12 = fill(I, x3, x11)\n    x13 = hfrontier(x8)\n    x14 = fill(x12, x4, x13)\n    x15 = decrement(x10)\n    x16 = decrement(x9)\n    x17 = halve(x9)\n    x18 = tojvec(x15)\n    x19 = connect(ORIGIN, x18)\n    x20 = fill(x14, x3, x19)\n    x21 = toivec(x16)\n    x22 = astuple(x16, x15)\n    x23 = connect(x21, x22)\n    x24 = fill(x20, x4, x23)\n    x25 = decrement(x17)\n    x26 = toivec(x25)\n    x27 = connect(ORIGIN, x26)\n    x28 = fill(x24, x3, x27)\n    x29 = tojvec(x15)\n    x30 = decrement(x17)\n    x31 = astuple(x30, x15)\n    x32 = connect(x29, x31)\n    x33 = fill(x28, x3, x32)\n    x34 = toivec(x17)\n    x35 = toivec(x16)\n    x36 = connect(x34, x35)\n    x37 = fill(x33, x4, x36)\n    x38 = astuple(x17, x15)\n    x39 = astuple(x16, x15)\n    x40 = connect(x38, x39)\n    O = fill(x37,"], [1.1, "def solve_9efd596f(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_e5c79d0b(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = width(x4)\n    x6 = toivec(x5)\n    x7 = index(x4, x6)\n    x8 = shape(x4)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x4, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, rot90)\n    x16 = lbind(power, rot270)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x13)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x19)\n    x24 = uppermost(x12)\n    x25 = lbind(add, x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = lbind(multiply, x27)\n    x29 = chain(toivec, x25, x28)\n    x30 = fork(shift, x23, x29)\n    x31 = compose(asobject, x22)\n    x32 = uppermost(x12)\n    x33 = lbind(subtract, x32)\n    x34 = height(x12)\n    x35 = increment(x34)\n    x36 = lbind(multiply, x35)\n    x37 = chain(toivec, x33, x36)\n    x38 = fork(shift, x31, x37)\n    x39 = fork(combine"], [1.1, "def solve_1bcbf7f3(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = fork(recolor, x40, identity)\n    x42 = mapply"], [1.1, "def solve_fcbd5e79(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = rot270(I)\n    x2 = rot90(I)\n    x3 = rot270(x2)\n    x4 = rbind(order, identity)\n    x5 = apply(x4, x1)\n    x6 = apply(x4, x2)\n    x7 = compose(positive, size)\n    x8 = lbind(interval, ZERO)\n    x9 = rbind(x8, ONE)\n    x10 = compose(x7, x9)\n    x11 = apply(x10, x5)\n    x12 = lbind(matcher, SEVEN)\n    x13 = compose(x12, x4)\n    x14 = lbind(matcher, EIGHT)\n    x15 = compose(x14, x4)\n    x16 = fork(sfilter, identity, x13)\n    x17 = fork(sfilter, identity, x15)\n    x18 = compose(x16, x17)\n    x19 = rbind(shoot, UNITY)\n    x20 = rbind(shoot, NEG_UNITY)\n    x21 = fork(combine, x19, x20)\n    x22 = compose(x21, x18)\n    x23 = rbind(shoot, DOWN_LEFT)\n    x24 = rbind( visitmatching, ONE)\n    x25 = chain(x23, x24, x2)\n    x26 = compose(x25, x18)\n    x27 = fork(sfilter, identity, x26)\n    x28 = compose(x27, x15)\n    x29 = fork(difference, x28, x12)\n    x30 = compose(x28, x29)\n    x31 = fork(shift, x30, x17)\n    x32 = compose(decrement, numcolors)\n    x33 = fork(add, x32, x31)\n    x34 = fork(\n    intersection, x33, x39a)\n    x35 = chain(size, x34, xdmirror)\n    x36 = matcher(x35, ZERO)\n    x37 = lbind(apply, vmirror)\n    "], [1.1, "def solve_56507e47(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mostcolor(I)\n    x3 = shape(I)\n    x4 = canvas(x2, x3)\n    x5 = hconcat(I, x4)\n    x6 = objects(x5, F, F, T)\n    x7 = argmin(x6, size)\n    x8 = argmax(x6, size)\n    x9 = remove(x7, x6)\n    x10 = presents(x7, x9)\n    x11 = leftmost(x7)\n    x12 = leftmost(x8)\n    x13 = greater(x11, x12)\n    x14 = uppermost(x7)\n    x15 = uppermost(x8)\n    x16 = greater(x14, x15)\n    x17 = uppermost(x7)\n    x18 = equality(x13, x17)\n    x19 = branch(x18, x12, x13)\n    x20 = branch(x18, x8, x19)\n    x21 = branch(x18, x7, x20)\n    x22 = x21(I)\n    x23 = 17827(x22)\n    x24 = shape(x22)\n    x25 = canvas(x2, x24)\n    x26 = normalize(x22)\n    x27 = shift(x26, x24)\n    x28 = paint(x25, x27)\n    x29 = rbind(toobject, x28)\n    x30 = chain(x29, palette, x28)\n    x31 = matcher(x30, x8)\n    x32 = extract(x29, x31)\n    x33 = x32(x72)\n    x34 = interval(ZERO, NINE, ONE)\n    x35 = pair(x34, x34)\n    x36 = lbind(colorcount\n    3889033338\n    x369443289\n    3853034303\n    8833 m8388\n    \"\"\"\n    x1 = objects(x38, F, F, T)\n    x2 = rbind(colorcount, x8)\n    x3"], [1.1, "def solve_6e7ba30b(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = crop(I, ORIGIN, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = matcher(first, ZERO)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = shape(x5)\n    x7 = multiply(x6, x6)\n    x8 = add(x7, DOWN)\n    x9 = canvas(ZERO, x8)\n    x10 = multiply(x5, x6)\n    x11 = add(x10, x6)\n    x12 = lbind(multiply, x6)\n    x13 = chain(x12, double, partition)\n    x14 = lbind(add, x4)\n    x15 = compose(invert, x14)\n    x16 = lbind(multiply, x11)\n    x17 = compose(invert, x16)\n    x18 = fork(add, x15, x17)\n    x19 = fork(equality, toindices, x18)\n    x20 = sfilter(x15, x19)\n    x21 = lbind(multiply, x6)\n    x22 = compose(invert, x21)\n    x23 = fork(add, x20, x22)\n    x24 =28222244mult13)\n    x25 = decrement(x24)\n    x26 = lbind(multiply, x11)\n    x27 = compose(invert, x26)\n    x28 = fork(add, x23, x27)\n    x29 = rbind(contained, x47)\n    x30 = compose(x29, first)\n    x31 = rbind(added, x35)\n    x32 = compose(x31, first)\n    x33 = fork(add, x32, x30)\n    x34 = chain(ineighbors, x23, x33)\n    x35 = fork(astuple, x34, x32)\n    x36 = canvas(ZERO, x6)\n    x37 = paint(x36, x35)\n    x38 = fork(connect,"], [1.1, "def solve_1124c176(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dae)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)\n"], [1.1, "def solve_715f57e2(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(flip, x6)\n    x9 = fork(both, x3, x8)\n    x10 = sfilter(x1, x9)\n    x11 = compose(size, first)\n    x12 = decrement(x11)\n    x13 =8853alf(x10)\n    x14 = toindices(x13)\n    x15 = rbind(repeat, x12)\n    x16 = compose(x15, first)\n    x17 = lbind(contained, ONE)\n    x18 = chain(x17, x16, x first)\n    x19 = compose(x18, x10)\n    x20 = compose(x15, x19)\n    x21 = fork(contained, x20, x17)\n    x22 = compose(x21, x10)\n    x23 = fork(add, x28, astuple)\n    x24 = fork(add, x23, x22)\n    x25 = Tuple(x14, x24)\n    x26 = astuple(vmatching, x25)\n    x27 = fork(either, x24, x26)\n    x28 = compose(flip, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(invert, x29, x17)\n    x31 = decrement(x26)\n    x32 = astuple(x31, x30)\n    x33 = shift(x19, x32)\n    x34 = paint(I, x33)\n    x35 = toindices(x33)\n    x36 = rbind(manhattan, x35)\n    x37 = compose(x36, initset)\n    x38 = argmax(x35, x37)\n    x39 = first(x"], [1.1, "def solve_45e4654b(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = fork(vsplit, identity, height)\n    x5 = chain(asobject, first, x4)\n    x6 = mostcolor(I)\n    x7 = lbind(chain, numcolors)\n    x8 = lbind(x7, x5)\n    x9 = lbind(chain, color)\n    x10 = lbind(x9, x5)\n    x11 = rbind(rapply, I)\n    x12 = compose(initset, x8)\n    x13 = chain(first, x11, x12)\n    x14 = rbind(rapply, I)\n    x15 = compose(initset, x10)\n    x16 = chain(first, x14, x15)\n    x17 = matcher(x13, ONE)\n    x18 = matcher(x16, x6)\n    x19 = compose(flip, x18)\n    x20 = fork(sfilter, identity, x19)\n    x21 = compose(asobject, x20)\n    x22 = apply(x21, x3)\n    x23 = dmirror(x22)\n    x24 = hmirror(x23)\n    x25 = vmirror(x24)\n    x26 = width(x22)\n    x27 = hupscale(x25, x26)\n    x28 = toobject(x27, x23)\n    x29 = matcher(x28, ZERO)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x25, x30)\n    x32 = hmirror(x31)\n    x33 = vmirror(x32)\n    x34 = sfilter(x33, x30)\n    x35 = vmirror(x34)\n    x36 = hmirror(x35)\n    x37 = cellwise(x22, x33, x36)\n    x38 = product(x37, x37)\n"], [1.1, "def solve_02a2e256(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_1e512a9c(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = size(x3)\n    x5 = positive(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = frontiers(I)\n    x9 = x6(I)\n    x10 = size(x8)\n    x11 = size(x9)\n    x12 = greater(x10, x11)\n    x13 = branch(x12, identity, vmirror)\n    x14 = x13(I)\n    x15 = ofcolor(x14, NEG_ONE)\n    x16 = subgrid(x15, x14)\n    x17 = LEastuple(x16, x15)\n    x18 = hsplit(x17, x181)\n    x19 = lbind(ofcolor, x14)\n    x20 = compose(x19, last)\n    x21 = fork(sfilter, last, x20)\n    x22 = chain(x15, x21, first)\n    x23 = rbind(contained, x15)\n    x24 = compose(x23, last)\n    x25 = sfilter(x16, x24)\n    x26 =bordering(x25)\n    x27 = mostcolor(x26)\n    x28 = matcher(first, x27)\n    x29 = compose(flip, x28)\n    x30 = rbind(sfilter, x29)\n    x31 = lbind(recolor, x27)\n    x32 = compose(x31, x30)\n    x33 = chain(x19, x32, x29)\n    x34 = ofcolor(x14, x27)\n    x35 = compose(x34, x33)\n    x36 = ofcolor(x14, x27)\n    x37 = fork(combine, x35, x36)\n    x38 = apply(x37, x34)\n    x39 = fork(recolor, x33, x38)\n    x40 = mapply(x39,"], [1.1, "def solve_a3eb87ac(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = interval(ONE, x1, ONE)\n    x3 = connect(ORIGIN, DOWN)\n    x4 = connect(ORIGIN, ZERO_BY_TWO)\n    x5 = combine(x3, x4)\n    x6 = astuple(NEG_TWO, TWO)\n    x7 = lbind(multiply, x6)\n    x8 = toivec(NEG_TWO)\n    x9 = apply(x7, x2)\n    x10 = rbind(subtract, TWO_BY_ZERO)\n    x11 = fork(shift, identity, x10)\n    x12 = repeat(x11, TWO)\n    x13 = lbind(repeat, x12)\n    x14 = compose(x13, width)\n    x15 = rbind(paint, x14)\n    x16 = lbind(recolor, ZERO)\n    x17 = compose(x16, x15)\n    x18 = fork(paint, x17, x15)\n    x19 = compose(x13, first)\n    x20 = rbind(argmax, x19)\n    x21 = compose(x20, x18)\n    x22 = apply(x21, x3)\n    x23 = fork(common, x21, x22)\n    x24 = remove(x15, x23)\n    x25 = totuple(x24)\n    x26 = first(x25)\n    x27 = last(x25)\n    x28 = color(x26)\n    x29 = mostcolor(I)\n    x30 = shape(x26)\n    x31 = canvas(x29, x30)\n    x32 = fill(x31, x27, x26)\n    x33 = asobject(x12)\n    x34 = ofcolor(x33, x29)\n    x35 = difference(x34, x34)\n    x36 = shape(x28)\n    x37 = lbind(shift, x33)\n    x38 = shift(x34, x36)\n    x39 = lbind(paint, x33)\n    "], [1.1, "def solve_596d6b46(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_d7b7de6a(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = index(x3, DOWN)\n    x5 = portrait(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(x3)\n    x8 = lefthalf(x7)\n    x9 = righthalf(x7)\n    x10 = palette(x8)\n    x11 = palette(x9)\n    x12 = compose(flip, x5)\n    x13 = extract(x10, x12)\n    x14 = extract(x11, x13)\n    x15 = other(x10, x14)\n    x16 = ofcolor(x8, x15)\n    x17 = last(x16)\n    x18 = replace(x8, x14, x17)\n    x19 = leftmost(x16)\n    x20 = lbind(downscale, x19)\n    x21 = compose(x20, toindices)\n    x22 = x21(x18)\n    x23 = rbind(upscale, x22)\n    x24 = chain(x23, halve, width)\n    x25 = rbind(branch, x34)\n    x26 = rbind(x25, x24)\n    x27 = chain(size, dedupe, x26)\n    x28 = rbind(branch, x49)\n    x29 = rbind(x28, x27)\n    x30 = chain(x29, x26, x23)\n    x31 = fork(combine, x27, x30)\n    x32 = fork(add, x24, x31)\n    x33 = fork(insert, x32, palette)\n    x34 = compose(backdrop, x33)\n    x35 = mapply(x34, x18)\n    x36 = double(x19)\n    x37 = rbind(greater, x36)\n    x38 = compose(x37, first)\n    x39 = chain(invert, x35, x38)"], [1.1, "def solve_8c48ed19(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, corners)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, x2)\n    x5 = fgpartition(I)\n    x6 = merge(x5)\n    x7 = backdrop(x4)\n    x8 = toobject(x7, I)\n    x9 = difference(x6, x8)\n    x10 = toobject(x9, I)\n    x11 = color(x4)\n    x12 = color(x10)\n    x13 = ofcolor(I, x11)\n    x14 = ulcorner(x4)\n    x15 = ulcorner(x10)\n    x16 = subtract(x14, x15)\n    x17 = leftmost(x16)\n    x18 = rightmost(x16)\n    x19 = subtract(x17, x18)\n    x20 = lowermost(x16)\n    x21 = leftmost(x16)\n    x22 = subtract(x20, x21)\n    x23 = astuple(x22, x19)\n    x24 = ulcorner(x7)\n    x25 = ulcorner(x7)\n    x26 = subtract(x24, x25)\n    x27 = astuple(x26, x19)\n    x28 = invert(x27)\n    x29 = double(x28)\n    x30 = astuple(x22, x19)\n    x31 = cover(I, x30)\n    x32 = downscale(x31, x29)\n    x33 = ofcolor(x32, x11)\n    x34 = ulcorner(x3)\n    x35 = increment(x34)\n    x36 = rbind(subtract, x35)\n    x37 = chain(x36, size, first)\n    x38 = interval(e26, x37, ONE)\n    x39 = sfilter(x38, x37)\n    x40 = apply(normalize, x39)\n    x41 = rbind(colorcount, x11)\n    x42"], [1.1, "def solve_329f378a(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x2, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, x4)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x6, x2)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_efa33aa6(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_93912620(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_de576dac(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmin(x2, size)\n    x4 = color(x3)\n    x5 = leftmost(x3)\n    x6 =85(I)\n    x7 = color(x3)\n    x8 = leftmost(x3)\n    x9 =greater(x8, x5)\n    x10 = greater(x5, x9)\n    x11 = branch(x10, x7, x9)\n    x12 = x11(I)\n    x13 = color(x12)\n    x14 = subgrid(x12, I)\n    x15 = leftmost(x12)\n    x16 = rightmost(x12)\n    x17 = subtract(x15, x16)\n    x18 = add(x15, x17)\n    x19 = urcorner(x12)\n    x20 = shoot(x19, UNITY)\n    x21 = add(x29, x20)\n    x22 = llcorner(x12)\n    x23 = shoot(x22, DOWN_LEFT)\n    x24 =44877(x14)\n    x25 = combine(x23, x24)\n    x26 = combine(x21, x25)\n    x27 = downscale(x12, x19)\n    x28 = astuple(x31, x26)\n    x29 = canvas(x11, x28)\n    x30 = interval(ZERO, x12, ONE)\n    x31 = invert(x15)\n    x32 = shift(x30, x31)\n    x33 = asobject(x32)\n    x34 = matcher(first, x11)\n    x35 = compose(flip, x34)\n    x36 = sfilter(x33, x35)\n    x37 = lbind(shift, x27)\n    x38 = height(x12)\n    x39 = astuple(x37, x38)\n    x40 = x37(x39)\n    x41 = width(x12)\n    x42 = astuple(x44,"], [1.1, "def solve_d2c1c10b(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = chain(size, dedupe, first)\n    x9 = matcher(x8, ONE)\n    x10 = compose(first, cmirror)\n    x11 = chain(size, dedupe, x10)\n    x12 = matcher(x11, ONE)\n    x13 = fork(both, x9, x12)\n    x14 = rbind(rapply, I)\n    x15 = compose(initset, first)\n    x16 = chain(first, x14, x15)\n    x17 = compose(x13, x16)\n    x18 = extract(x7, x17)\n    x19 = first(x18)\n    x20 = last(x18)\n    x21 = x19(I)\n    x22 = width(x21)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = index(x21, x24)\n    x26 = asobject(x21)\n    x27 = matcher(first, x25)\n    x28 = compose(flip, x27)\n    x29 = sfilter(x26, x28)\n    x30 = hperiod(x29)\n    x31 = width(x21)\n    x32 = increment(x31)\n    x33 = interval(ZERO, x32, x30)\n    x34 = apply(tojvec, x33)\n    x35 = lbind(shift, x29)\n    x36 = mapply(x35, x34)\n    x37 = index(x21, x won)\n    x38 = lbind(shift, x26)\n    x39 = mapply(x38, x37)\n    x40 = combine(x36, x39)"], [1.1, "def solve_e5a6c3f3(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_552d11db(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_0d0e45b6(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_8478e970(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_cfeca1f0(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, FIVE)\n    x4 = astuple(FOUR, FOUR)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = asindices(x5)\n    x7 = rbind(toobject, I)\n    x8 = lbind(shift, x6)\n    x9 = compose(x7, x8)\n    x10 = multiply(x3, FIVE)\n    x11 = interval(ZERO, x10, FIVE)\n    x12 = apply(tojvec, x11)\n    x13 = apply(x9, x12)\n    x14 = matcher(numcolors, ONE)\n    x15 = fork(equality, identity, hmirror)\n    x16 = compose(flip, x15)\n    x17 = lbind(index, I)\n    x18 = compose(x17, ulcorner)\n    x19 = lbind(add, DOWN)\n    x20 = chain(x17, x19, ulcorner)\n    x21 = fork(equality, x18, x20)\n    x22 = compose(flip, x21)\n    x23 = fork(either, x14, x16)\n    x24 = fork(either, x23, x22)\n    x25 = compose(flip, x24)\n    x26 = lbind(multiply, TWO)\n    x27 = compose(x26, x14)\n    x28 = lbind(multiply, FOUR)\n    x29 = compose(x28, x16)\n    x30 = fork(add, x27, x29)\n    x31 = lbind(multiply, THREE)\n    x32 = compose(x31, x22)\n    x33 = lbind(multiply, EIGHT)\n    x34 = compose(x33, x25)\n    x35 = fork(add, x32, x34)\n    x36 = fork(add, x30, x35)\n    x37 = apply(x36, x13)\n    x38 = rbind(repeat,"], [1.1, "def solve_136c7692(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x1, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18,"], [1.1, "def solve_e581fd5d(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = insert(x8, x11)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = subgrid(x13, I)\n    x16 = width(x15)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = output(x17, x14)\n    x19 = height(x15)\n    x20 = interval(ZERO, x19, ONE)\n    x21 = pair(x18, x20)\n    x22 = sfilter(x21, x18)\n    x23 = first(x22)\n    x24 = height(x15)\n    x25 = interval(ZERO, x24, ONE)\n    x26 = pair(x23, x25)\n    x27 = urcorner(x28)\n    x28 = matcher(first, x3)\n    x29 = rbind(sfilter, x28)\n    x30 = compose(first, last)\n    x31 = chain(flip, x29, x30)\n    x32 = asobject(x27)\n    x33 = matcher(first, x3)\n    x34 = sfilter(x32, x33)\n    x35 = increment(x34)\n    x36 = width(x15)\n    x37 = interval(ZERO, x36, x35)\n    x38 = multiply(x37, x29)\n    x39 = lbind(apply, double)\n    x40 = lbind(shift, x33)\n    x41 = pair(x38, x40)\n    x42 ="], [1.1, "def solve_c8789a13(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = interval(TWO, FIVE, ONE)\n    x4 = rbind(shift, RIGHT)\n    x5 = rbind(shift, LEFT)\n    x6 = rbind(shift, UP)\n    x7 = rbind(shift, DOWN)\n    x8 = lbind(fork, intersection)\n    x9 = lbind(x8, identity)\n    x10 = lbind(rbind, shift)\n    x11 = compose(x9, x10)\n    x12 = compose(x11, tojvec)\n    x13 = chain(x11, tojvec, invert)\n    x14 = compose(x11, toivec)\n    x15 = chain(x11, toivec, invert)\n    x16 = lbind(compose, initset)\n    x17 = lbind(rbind, rapply)\n    x18 = lbind(chain, first)\n    x19 = lbind(compose, x5)\n    x20 = x16(x12)\n    x21 = rbind(compose, x20)\n    x22 = lbind(rbind, mapply)\n    x23 = chain(x21, x22, x17)\n    x24 = lbind(compose, x4)\n    x25 = x16(x13)\n    x26 = rbind(compose, x25)\n    x27 = x23(x10)\n    x28 = x27(x14)\n    x29 = x27(x divide)\n    x30 = branch(x26, x27, x28)\n    x31 = objects(I, T, T, T)\n    x32 = apply(x30, x31)\n    x33 = rbind(interval, ONE)\n    x34 = lbind(NEG_ONE)\n    x35 = chain(x33, x34, x30)\n    x36 = apply(x35, x32)\n    x37 = lbind(recolor, x1)\n    x38 = apply(x37, x36)\n    x39 = p"], [1.1, "def solve_648dd7c9(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = insert(x14, x24)\n    x26 = width(x9)\n    x27 = halve(x26)\n    x28 = tojvec(x27)\n    x29 = height(x9)\n    x30 = decrement(x29)\n    x31 = insert(x30, x30)\n    x32 = width(x9)\n    x33 = halve(x32)\n    x34 = tojvec(x33)\n    x35 = height(x9)\n    x36 = decrement(x35)\n    x37 = insert(x34, x36)\n    x38 = height(x10)\n    x39 = height(x28)\n    x40 = divide(x38, x39)\n    x41 = width(x10)\n    x42 = halve(x31)\n    x43 = tojvec(x42)\n    x44 = height(x10)\n    "], [1.1, "def solve_e00c3330(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = astuple(dmirror, cmirror)\n    x2 = astuple(hmirror, identity)\n    x3 = combine(x1, x2)\n    x4 = fork(vsplit, identity, height)\n    x5 = chain(asobject, first, x4)\n    x6 = mostcolor(I)\n    x7 = lbind(chain, numcolors)\n    x8 = lbind(x7, x5)\n    x9 = lbind(chain, color)\n    x10 = lbind(x9, x5)\n    x11 = rbind(rapply, I)\n    x12 = compose(initset, x8)\n    x13 = chain(first, x11, x12)\n    x14 = rbind(rapply, I)\n    x15 = compose(initset, x10)\n    x16 = chain(first, x14, x15)\n    x17 = matcher(x13, ONE)\n    x18 = matcher(x16, x6)\n    x19 = compose(flip, x18)\n    x20 = fork(both, x17, x19)\n    x21 = argmax(x3, x20)\n    x22 = x21(I)\n    x23 = x5(x22)\n    x24 = color(x23)\n    x25 = palette(x22)\n    x26 = remove(x24, x25)\n    x27 = other(x26, x6)\n    x28 = objects(x22, T, T, T)\n    x29 = colorfilter(x28, x27)\n    x30 = ofcolor(x22, x24)\n    x31 = ofcolor(x22, x6)\n    x32 = mapply(neighbors, x31)\n    x33 = mapply(neighbors, x32)\n    x34 = lowermost(x30)\n    x35 = dneighbors(ORIGIN)\n    x36 = remove(DOWN, x35)\n    x37 = rbind(mapply, x36)\n    x38 = lbind(chain, x37)\n    x"], [1.1, "def solve_84551f44(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_f950905b(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, corners)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = fgpartition(I)\n    x6 = merge(x5)\n    x7 = backdrop(x4)\n    x8 = toobject(x7, I)\n    x9 = difference(x6, x8)\n    x10 = mostcolor(I)\n    x11 = inbox(x4)\n    x12 = backdrop(x11)\n    x13 = toobject(x12, I)\n    x14 = matcher(first, x10)\n    x15 = compose(flip, x14)\n    x16 = sfilter(x13, x15)\n    x17 = subgrid(x9, I)\n    x18 = palette(x16)\n    x19 = order(x18, identity)\n    x20 = lbind(colorcount, x16)\n    x21 = apply(x20, x19)\n    x22 = lbind(colorcount, x9)\n    x23 = apply(x22, x19)\n    x24 = pair(x21, x23)\n    x25 = fork(divide, first, last)\n    x26 = apply(x25, x24)\n    x27 = mostcommon(x26)\n    x28 = lbind(colorcount, x16)\n    x29 = lbind(colorcount, x9)\n    x30 = fork(divide, x28, x29)\n    x31 = matcher(x30, x27)\n    x32 = palette(x9)\n    x33 = sfilter(x32, x31)\n    x34 = rbind(contained, x33)\n    x35 = compose(x34, first)\n    x36 = sfilter(x16, x35)\n    x37 = sfilter(x9, x35)\n    x38 = height(x36)\n    x39 = height(x37)\n    x40 = divide(x38, x39)\n    x41 = width(x36)\n    x42"], [1.1, "def solve_7222b097(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_cc568ded(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = width(x4)\n    x6 = toivec(x5)\n    x7 = index(x4, x6)\n    x8 = shape(x4)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x4, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, rot90)\n    x16 = lbind(power, rot270)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x13)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x19)\n    x24 = uppermost(x12)\n    x25 = lbind(add, x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = lbind(multiply, x27)\n    x29 = chain(toivec, x25, x28)\n    x30 = fork(shift, x23, x29)\n    x31 = compose(asobject, x22)\n    x32 = uppermost(x12)\n    x33 = lbind(subtract, x32)\n    x34 = height(x12)\n    x35 = increment(x34)\n    x36 = lbind(multiply, x35)\n    x37 = chain(toivec, x33, x36)\n    x38 = fork(shift, x31, x37)\n    x39 = fork(combine"], [1.1, "def solve_472e902c(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(argout, x18)\n    x20 = apply(x17, x19)\n    x21 = combine(x16, x20)\n    x22 = fill(I, THREE, x21)\n    x23 = asindices(x22)\n    x24 = shift(x23, x2)\n    x25 = fork(combine, hfrontier, vfrontier)\n    x26 = x25(x24)\n    x27 = tojvec(x2)\n    x28 = interval(ZERO, x27, ONE)\n    x29 = paint(x22, x28)\n    x30 = initset(x2)\n    x31 = insert(x62, x30)\n    x32 = insert(x26, x31)\n    x33 = size(x32)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = apply(tojvec, x34)\n    x36 = apply(numcolors, x35)\n    x37 = matcher(equality, ZERO)\n    x38 = lbind(be94 mostcolor(I)\n    "], [1.1, "def solve_ee614b31(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = ONE(I)\n    x2 =999(connect, sender3de236\n    x3 = apply(initset, x1)\n    x4 = rbind(shoot, UNITY)\n    x5 = mapply(x4, x3)\n    x6 = fill(x1, EIGHT, x5)\n    x7 = index(I, x4)\n    x8 = equality(x7, ZERO)\n    x9 = branch(x8, vsplit, hsplit)\n    x10 = shape(I)\n    x11 = maximum(x10)\n    x12 = index(I, x11)\n    x13 =559999(I, x6)\n    x14 = add(x13, x11)\n    x15 = initset(x14)\n    x16 = lbind(96, x11)\n    x17 = rbind(apply, x16)\n    x18 = compose(x17, x9)\n    x19 = lbind(compose, flip)\n    x20 = lbind(matcher, first)\n    x21 = compose(x19, x20)\n    x22 = lbind(rbind, sfilter)\n    x23 = lbind(compose, x25)\n    x24 = chain(x22, x23, x21)\n    x25 = lbind( fork, greater)\n    x26 = compose(x25, x14)\n    x27 = compose(x25, x16)\n    x28 = fork(add, x26, x27)\n    x29 = fork(add, x25, x28)\n    x30 = fork(connect, x29, x21)\n    x31 = fork(contained, x30, x22)\n    x32 = fork(contained, x31, x26)\n    x33 = fork(either, x30, x32)\n    x34 = matcher(x33, ZERO)\n    x35 = extract(x32, x34)\n    x35 = first(x35)\n    x36 = last(x35)\n    x37 = palette(I)\n    x38 =either(x37, x40)\n    x39 ="], [1.1, "def solve_57de1c1d(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(tophalf, x3)\n    x5 = mapply(tojvec, x4)\n    x6 = palette(I)\n    x7 = objects(x6, T, F, F)\n    x8 = colorfilter(x7, ZERO)\n    x9 = sfilter(x8, square)\n    x10 = compose(even, height)\n    x11 = sfilter(x9, x10)\n    x12 = difference(x9, x11)\n    x13 = merge(x12)\n    x14 = lbind(colorcount, x13)\n    x15 = argmin(x11, x14)\n    x16 = objects(x6, T, F, F)\n    x17 = colorfilter(x16, x15)\n    x18 = compose(maximum, shape)\n    x19 = lbind(apply, x18)\n    x20 = lbind(colorfilter, x17)\n    x21 = chain(maximum, x19, palette)\n    x22 = matcher(x21, x15)\n    x23 = sfilter(x17, x22)\n    x24 = rbind(shoot, UNITY)\n    x25 = mapply(x24, x23)\n    x26 = underfill(x17, x15, x25)\n    x27 = objects(x26, T, F, F)\n    x28 = colorfilter(x27, x15)\n    x29 = rbind(bordering, I)\n    x30 = mfilter(x28, x29)\n    x31 = combine(x28, x30)\n    x32 = mapply(toindices, x31)\n    x33 = difference(x32, x31)\n    x34 = toobject(x33, I)\n    x35 = apply(x38, x34)\n    x36 = rbind(313484b58, x35)\n    x37 = chain(palette, x36,198)\n    x38 = rbind(contained,"], [1.1, "def solve_51d83ee1(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = compose(x4, size)\n    x6 = compose(x1, x5)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x200, x7, dmirror)\n    x9 = objects(I, T, F, F)\n    x10 = rbind(colorcount, ZERO)\n    x11 = valmax(x10, x6)\n    x12 = matcher(x6, x11)\n    x13 = sfilter(x19, x12)\n    x14 = compose(maximum, shape)\n    x15 = argmin(x13, x14)\n    x16 = apply(first, x13)\n    x17 = rbind(adjacent, x15)\n    x18 = apply(x17, x16)\n    x19 = sfilter(x16, x18)\n    x20 = rbind(adjacent, x15)\n    x21 = remove(x8, x19)\n    x22 = extract(x21, x12)\n    x23 = first(x22)\n    x24 = apply( last, x22)\n    x25 = height(x23)\n    x26 = decrement(x25)\n    x27 = apply(last, x22)\n    x28 = vupscale(x23, x27)\n    x29 = asobject(x28)\n    x30 = hperiod(x29)\n    x31 = index(I, x30)\n    x32 = objects(x29, T, F, F)\n    x33 = rbind(multiply, LEFT)\n    x34 = apply(x33, x32)\n    x35 = rbind(add, RIGHT)\n    x36 = apply(x35, x34)\n    x37 = pair(x26, x36)\n    x38 = sfilter(x37, x28)\n    x39 = apply(last, x38)\n    x40 = asobject"], [1.1, "def solve_79f42bbf(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    x3 = add(TWO, x2)\n    x4 = canvas(x1, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = paint(x4, x6)\n    x8 = double(SIX)\n    x9 = astuple(ONE, x8)\n    x10 = connect(UNITY, x9)\n    x11 = outbox(x10)\n    x12 = backdrop(x11)\n    x13 = recolor(x1, x12)\n    x14 = recolor(THREE, x10)\n    x15 = lbind(shift, x14)\n    x16 = lbind(mapply, x15)\n    x17 = rbind(occurrences, x13)\n    x18 = compose(x16, x17)\n    x19 = fork(paint, identity, x18)\n    x20 = x19(x7)\n    x21 = ofcolor(x20, THREE)\n    x22 = dmirror(x7)\n    x23 = x19(x22)\n    x24 = dmirror(x23)\n    x25 = ofcolor(x24, THREE)\n    x26 = combine(x21, x25)\n    x27 = fill(x7, THREE, x26)\n    x28 = astuple(TWO, ONE)\n    x29 = dneighbors(UNITY)\n    x30 = remove(x28, x29)\n    x31 = recolor(x1, x30)\n    x32 = initset(UNITY)\n    x33 = recolor(THREE, x32)\n    x34 = combine(x31, x33)\n    x35 = recolor(x1, x34)\n    x36 = astuple(ONE, THREE)\n    x37 = initset(x36)\n    x38 = insert(ZERO_BY_TWO, x37)\n    x39 = insert(RIGHT, x38)\n    x40 = insert(DOWN, x39)\n    x41 ="], [1.1, "def solve_3436f7c9(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, identity, dmirror)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = apply(first, x22)\n    x24 = lbind(sfilter, x21)\n    x25 = compose(first, last)\n    x26 = lbind(matcher, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x27, x23)\n    x29 = lbind(shift, x15)\n    x30 = chain(x29, toivec, uppermost)\n    x31 = matcher(first, x18)\n    x32 = rbind(sfilter, x31)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(toindices, x32, x30)\n    x36 = chain(x33, x34, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = compose(color, x37)\n    x39 = compose(x32, x30)\n    x40 = fork(recolor, x38, x39)\n    x41 = fork(other, palette,"], [1.1, "def solve_88da6077(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 =8872501578\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = tojvec(x5)\n    x7 = intersection(x3, x6)\n    x8 = height(I)\n    x9 = height(x2)\n    x10 = greater(x8, x9)\n    x11 = leftmost(x7)\n    x12 = interval(x11, x12, ONE)\n    x13 = palette(I)\n    x14 = lbind(power, TWO)\n    x15 = rbind(rapply, x13)\n    x16 = compose(initset, x15)\n    x17 = chain(first, x14, x16)\n    x18 = multiply(TEN, THREE)\n    x19 = interval(ZERO, x18, ONE)\n    x20 = pair(x19, x15)\n    x21 = apply(x17, x20)\n    x22 = astuple(x6, x6)\n    x23 = repeat(x22, ONE)\n    x24 = lbind(pair, x21)\n    x25 = compose(initset, x24)\n    x26 = chain(first, x24, x25)\n    x27 = apply(x26, x21)\n    x28 = astuple(x6, x6)\n    x29 = repeat(x28, ONE)\n    x30 = combine(x23, x29)\n    x31 = apply(x20, x30)\n    x32 = combine(x3, x31)\n    x33 = apply(x22, x32)\n    x34 = lbind(colorcount, I)\n    x35 = apply(x34, x33)\n    x36 = lbind(colorcount, I)\n    x37 = apply(x36, x35)\n    x38 = lbind(colorcount, I)\n    x39 = apply(x38, x37)\n    x40 = lbind(colorcount, I)\n    x41 = apply(x40, x"], [1.1, "def solve_129ef3f2(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, ONE)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)"], [1.1, "def solve_a2c70c87(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = leastcolor(I)\n    x9 = rbind(ofcolor, x8)\n    x10 = rbind(rapply, I)\n    x11 = chain(first, x10, initset)\n    x12 = chain(hline, x9, x11)\n    x13 = rbind(ofcolor, x8)\n    x14 = rbind(rapply, I)\n    x15 = chain(first, x14, initset)\n    x16 = chain(leftmost, x13, x15)\n    x17 = matcher(x16, ZERO)\n    x18 = fork(both, x12, x17)\n    x19 = compose(x18, first)\n    x20 = extract(x7, x19)\n    x21 = first(x20)\n    x22 = last(x20)\n    x23 = x21(I)\n    x24 = ofcolor(x23, x8)\n    x25 = argmax(x24, last)\n    x26 = add(x25, UP_RIGHT)\n    x27 = shoot(x26, UP_RIGHT)\n    x28 = add(x25, DOWN_LEFT)\n    x29 = shoot(x28, DOWN_LEFT)\n    x30 = rbind(shoot, LEFT)\n    x31 = mapply(x30, x27)\n    x32 = rbind(shoot, LEFT)\n    x33 = mapply(x32, x29)\n    x34 = width(x23)\n    x35 = invert(x34)\n    x36 = tojvec(x35)\n    x37 = shift(x31, x36)\n    x38 = combine(x31, x37)\n    x39 ="], [1.1, "def solve_a4f9b018(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_35177eb6(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_75f92ff9(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(asobject, x21)\n    x23 = x22(x2)\n    x24 = x22(I)\n    x25 = x22(x4)\n    x26 = x22(x6)\n    x27 = objects(x18, T, F, T)\n    x28 = colorfilter(x27, x16)\n    x29 = paint(x18, x28)\n    x30 = subgrid(x2, x29)\n    x31 = index(x30, DOWN)\n    x32 = replace(x30, x16, x119)\n    x33 = replace(x32, x26, x5)\n    x34 = combine(x31, x33)\n    x35 = merge(x34)\n    x36 = astuple(FOUR, FOUR)\n    x37 = canvas(x31, x36)\n    x38 = paint(x37, x35)\n    x39 = rot90(x38)\n    x40 = paint(x39, x35)\n    x41 = rot90(x40)\n    x42 = shape(x31)\n    x43 ="], [1.1, "def solve_ef2e91c2(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = order(x1, x2)\n    x4 = apply(x3, x1)\n    x5 = size(x4)\n    x6 = decrement(x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = remove(x2, x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = leftmost(x12)\n    x14 = ofcolor(I, x11)\n    x15 = either(x14, x13)\n    x16 = leftmost(x12)\n    x17 = vmirror(I)\n    x18 = hmirror(I)\n    x19 = lbind(add, x8)\n    x20 = chain(x19, ulcorner, llcorner)\n    x21 = compose(x21, urcorner)\n    x22 = chain(x1, ulcorner, llcorner)\n    x23 = fork(add, x22, x17)\n    x24 = fork(add, x23, x18)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = mostcolor(I)\n    x28 = toindices(x25)\n    x29 = matcher(first, x27)\n    x30 = toindices(x25)\n    x31 = sfilter(x30, x29)\n    x32 = argmax(x31, x24)\n    x33 = difference(x25, x32)\n    x34 = toobject(x33, I)\n    x35 = matcher(first, x10)\n    x36 = compose(flip, x35)\n    x37 = sfilter(x34, x36)\n    x38 = lbind(shift, x27)\n    x39 = compose(x38, ulcorner)\n    x40 = fork(combine, x37, x39)\n    x41 ="], [1.1, "def solve_107d340b(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(canvas, NEG_ONE)\n    x2 = lbind(apply, shape)\n    x3 = chain(size, x1, x2)\n    x4 = lbind(repeat, ZERO)\n    x5 = compose(x4, x3)\n    x6 = fork(paint, x5, x4)\n    x7 = compose(cmirror, x6)\n    x8 = astuple(dmirror, cmirror)\n    x9 = astuple(hmirror, vmirror)\n    x10 = combine(x8, x9)\n    x11 = lbind(compose, x5)\n    x12 = x11(x10)\n    x13 = lbind(ofcolor, I)\n    x14 = compose(x12, x13)\n    x15 = decrement(xsize)\n    x16 = toivec(x15)\n    x17 = connect(ORIGIN, x16)\n    x18 = insert(UNITY, x17)\n    x19 = branch(x18, vsplit, hsplit)\n    x20 = x19(I, TWO)\n    x21 = first(x20)\n    x22 = last(x20)\n    x23 = width(x21)\n    x24 = decrement(x23)\n    x25 = tojvec(x24)\n    x26 = connect(ORIGIN, x25)\n    x27 = height(x21)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = connect(ORIGIN, x29)\n    x31 = width(x21)\n    x32 = decrement(x31)\n    x33 = tojvec(x32)\n    x34 = connect(ORIGIN, x33)\n    x35 = height(x21)\n    x36 = decrement(x35)\n    x37 = toivec(x36)\n    x38 = connect(ORIGIN, x37)\n    x39 = width(x21)\n    x40 = decrement(x39)\n    x41 = tojvec(x40"], [1.1, "def solve_110ea174(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = upscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = size(x22)\n    x24 = positive(x23)\n    x25 = branch(x24, hmirror, vmirror)\n    x26 = x25(x14)\n    x27 = ofcolor(x26, x3)\n    x28 = asindices(x14)\n    x29 = ofcolor(x26, x3)\n    x30 = difference(x29, x28)\n    x31 = rbind(contained, x30)\n    x32 = compose(flip, x31)\n    x33 = sfilter(x27, x32)\n    x34 = fork(equality, identity, dmirror)\n    x35 = sfilter(x33, x34)\n    x36 = flip(x35)\n    x37 = multiply(x31, THREE)\n    x38 = dmirror(x37)\n    x39 = lbind(ofcolor, x18)\n    x40 = compose(flip, x39)\n    x41 = rbind(sfilter, x40)\n    x42 = compose("], [1.1, "def solve_882ab4b4(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = leastcolor(I)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = argmin(x12, numcolors)\n    x14 = rbind(contained, x13)\n    x15 = normalize(x13)\n    x16 = objects(x44, x14, x15)\n    x17 = colorfilter(x16, x3)\n    x18 =indices(x9)\n    x19 = ofcolor(x11, x3)\n    x20 = difference(x18, x19)\n    x21 = rbind(multiply, LEFT)\n    x22 = rbind(divide, LEFT)\n    x23 = rbind(multiply, x20)\n    x24 = rbind(divide, x20)\n    x25 = rbind(multiply, x22)\n    x26 = lbind(970gpartition, x21)\n    x27 = fork(009, x24, x25)\n    x28 = compose(x27, x6)\n    x29 = fork(either, x28, x29)\n    x30 = rbind(002, extract)\n    x31 = extract(x15, x29)\n    x32 = rbind(002, x31)\n    x33 = fork(649, x29, x32)\n    x34 = rbind(oward combine, x27)\n    x35 = compose(x34, x28)\n    x36 = fork(add, x35, x31)\n    x37 = fork(connect, x33, x36)\n    x38 = shape(x13)\n    x39 = multiply(x38, x38)\n"], [1.1, "def solve_c7269f41(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, last)\n    x3 = compose(x1, x2)\n    x4 = lbind(ofcolor, I)\n    x5 = fork(size, x4, x3)\n    x6 = compose(x5, palette)\n    x7 = fork(vline, x6,757)\n    x8 = fork(astuple, x3, x4)\n    x9 = fork(add, x8, x7)\n    x10 = asindices(I)\n    x11 = apply(x9, x10)\n    x12 =725092511, x11)\n    x13 = argmax(x12, identity)\n    x14 = apply(last, x15)\n    x15 = size(x14)\n    x16 = increment(x15)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = product(x17, x17)\n    x19 = power(first, FIVE)\n    x20 = astuple(recolor, x19)\n    x21 = astuple(center, ORIGIN)\n    x22 = astuple(x21, x208)\n    x23 = combine(x20, x22)\n    x24 = rbind(toobject, I)\n    x25 = compose(last, last)\n    x26 = rbind(ofcolor, x25)\n    x27 = mapply(x26, x23)\n    x28 = mostcolor(I)\n    x29 = combine(x27, x28)\n    x30 = recolor(x29, x27)\n    x31 = initset(x15)\n    x32 = insert(x16, x31)\n    x33 = insert(x32, x31)\n    x34 = toobject(x33, I)\n    x35 = lbind(recolor, x54)\n    x36 = compose(x35, x24)\n    x37 = fork(shift, x36, ulcorner)\n    x38 = mapply(x37, x34)\n    x39 = paint(I, x38)\n    x40 = rot"], [1.1, "def solve_77f716d5(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, vmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_39f9c12f(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(SIX)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_9cfa08a0(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_819f366d(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = argmax(x1, size)\n    x3 = remove(x2, x1)\n    x4 = merge(x3)\n    x5 = size(x4)\n    x6 = positive(x5)\n    x7 = branch(x6, height, width)\n    x8 = x7(I)\n    x9 = color(x2)\n    x10 = ofcolor(I, x9)\n    x11 = ofcolor(I, x2)\n    x12 = position(x10, x11)\n    x13 = first(x12)\n    x14 = last(x21)\n    x15 = subgrid(x13, I)\n    x16 = width(x15)\n    x17 = divide(x16, THREE)\n    x18 = tojvec(x17)\n    x19 = height(x15)\n    x20 = divide(x19, THREE)\n    x21 = increment(x20)\n    x22 = interval(ZERO, x21, ONE)\n    x23 = asobject(x15)\n    x24 = matcher(first, x9)\n    x25 = compose(flip, x24)\n    x26 = sfilter(x23, x25)\n    x27 = lbind(shift, x22)\n    x28 = height(x12)\n    x29 = divide(x28, FOUR)\n    x30 = increment(x29)\n    x31 = width(x12)\n    x32 = divide(x31, FOUR)\n    x33 = increment(x32)\n    x34 = invert(x30)\n    x35 = interval(ZERO, x34, ONE)\n    x36 = astuple(x32, x31)\n    x37 = lbind(shift, x22)\n    x38 = lbind(multiply, x36)\n    x39 = compose(x37, x38)\n    x40 = lbind(mapply, x29)\n    x41 = lbind(shift, x26)\n    x42 = compose(x40, x41)\n    x43 = fork(comb"], [1.1, "def solve_1dbb4996(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_7e01343f(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = ofcolor(I, THREE)\n    x2 = crop(I, ORIGIN, THREE_BY_THREE)\n    x3 = asobject(x2)\n    x4 = matcher(first, THREE)\n    x5 = compose(flip, x4)\n    x6 = sfilter(x3, x5)\n    x7 = fork(multiply, height, width)\n    x8 = size(x6)\n    x9 = divide(x8, THREE)\n    x10 = multiply(x9, THREE)\n    x11 = add(x10, TWO)\n    x12 = multiply(x11, ONE)\n    x13 = argmin(x6, x12)\n    x14 = neighbors(x13)\n    x15 = mapply(neighbors, x14)\n    x16 = astuple(x11, x13)\n    x17 = rbind(multiply, x16)\n    x18 = astuple(x15, x17)\n    x19 = underfill(I, THREE, x18)\n    x20 = objects(x19, T, F, F)\n    x21 = colorfilter(x20, TWO)\n    x22 = rbind(adjacent, x13)\n    x23 = sfilter(x21, x22)\n    x24 = rbind(toobject, x19)\n    x25 = compose(x4, delta)\n    x26 = chain(x24, x25, mostcolor)\n    x27 = rbind(canvas, UNITY)\n    x28 = apply(x27, x23)\n    x29 = merge(x28)\n    x30 = palette(x29)\n    x31 = matcher(first, THREE)\n    x32 = compose(flip, x31)\n    x33 = sfilter(x30, x32)\n    x34 = rbind(conpose, x528)\n    x35 = lbind(rbind, contained)\n    x36 = chain(x34, x35, x22)\n    x37 = lbind(colorcount, x14)\n    x38 = compose(x37, x36)\n    x39 = sfilter("], [1.1, "def solve_846da2ef(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(difference, toindices, box)\n    x3 = compose(size, x2)\n    x4 = matcher(x3, ZERO)\n    x5 = rbind(add, FOUR)\n    x6 = chain(x5, double, width)\n    x7 = fork(equality, size, x6)\n    x8 = chain(x5, double, height)\n    x9 = fork(equality, size, x8)\n    x10 = fork(either, x7, x9)\n    x11 = fork(both, x4, x10)\n    x12 = extract(x1, x11)\n    x13 = toindices(x12)\n    x14 = center(x12)\n    x15 = vfrontier(x14)\n    x16 = intersection(x13, x15)\n    x17 = size(x16)\n    x18 = positive(x17)\n    x19 = branch(x18, dmirror, identity)\n    x20 = x19(I)\n    x21 = color(x12)\n    x22 = palette(I)\n    x23 = remove(x21, x22)\n    x24 = lbind(colorcount, I)\n    x25 = argmin(x23, x24)\n    x26 = other(x23, x25)\n    x27 = ofcolor(x20, x25)\n    x28 = ofcolor(x20, x21)\n    x29 = leftmost(x28)\n    x30 = lbind(greater, x29)\n    x31 = compose(x30, last)\n    x32 = sfilter(x27, x31)\n    x33 = difference(x27, x32)\n    x34 = vmirror(x32)\n    x35 = leftmost(x28)\n    x36 = leftmost(x32)\n    x37 = subtract(x35, x36)\n    x38 = add(TWO, x37)\n    x39 = tojvec(x38)\n    x40 = shift(x34, x39)\n    x41 = vmirror("], [1.1, "def solve_d18da226(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = apply(86260, x6)\n    x8 =pply(connect, x7, x7)\n    x9 = mfilter(x8, vline)\n    x10 = sfilter(x8, x4)\n    x11 = difference(x8, x10)\n    x12 = mapply(88, x11)\n    x13 = shape(I)\n    x14 = add(TWO, x13)\n    x15 = canvas(x1, x14)\n    x16 = asobject(I)\n    x17 = shift(x16, UNITY)\n    x18 = paint(x15, x17)\n    x19 = double(SIX)\n    x20 = astuple(ONE, x19)\n    x21 = invert(x20)\n    x22 = asindices(x21)\n    x23 = recolor(x1, x22)\n    x24 = shift(x23, x21)\n    x25 = paint(x18, x24)\n    x26 = double(SIX)\n    x27 = astuple(ONE, x26)\n    x28 = invert(x27)\n    x29 = invert(x28)\n    x30 = astuple(ZERO, x29)\n    x31 = invert(x30)\n    x32 = astuple(x31, x21)\n    x33 = shoot(UNITY, x32)\n    x34 = shoot(x33, x24)\n    x35 = combine(x33, x34)\n    x36 = intersection(x33, x34)\n    x37 = shoot(x36, x31)\n    x38 = recolor(x1, x37)\n    x39 = paint(x20, x38)\n    x40 = double(x39)\n    x41 = invert(x40)\n    x"], [1.1, "def solve_38d285b0(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = size(x5)\n    x7 = positive(x6)\n    x8 = astuple(color, x5)\n    x9 = astuple(center, x3)\n    x10 = lbind(ofcolor, I)\n    x11 = branch(x7, x9, x10)\n    x12 = x11(x1)\n    x13 = x11(I)\n    x14 = height(x13)\n    x15 = divide(x14, x12)\n    x16 = subtract(x15, x12)\n    x17 = width(x13)\n    x18 = divide(x17, x12)\n    x19 = astuple(x16, x18)\n    x20 = invert(x19)\n    x21 = ulcorner(x7)\n    x22 = invert(x21)\n    x23 = urcorner(x7)\n    x24 = ulcorner(x7)\n    x25 = astuple(x23, x24)\n    x26 = shift(x5, x25)\n    x27 = subgrid(x26, x13)\n    x28 = astuple(x21, x22)\n    x29 = ulcorner(x7)\n    x30 = ulcorner(x7)\n    x31 = subtract(x30, x29)\n    x32 = shift(x5, x31)\n    x33 = ofcolor(x27, x50)\n    x34 = recolor(x50, x33)\n    x35 = ofcolor(x41, x50)\n    x36 = recolor(x451, x35)\n    x37 = combine(x34, x36)\n    x38 = height(x37)\n    x39 = decrement(x38)\n    x40 = toivec(x39)\n    x41 = invert(x40)\n    x42 = shift(x"], [1.1, "def solve_5f252d22(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_a09e04cd(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = apply(first, x22)\n    x24 = lbind(sfilter, x21)\n    x25 = compose(first, last)\n    x26 = lbind(matcher, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x27, x23)\n    x29 = lbind(shift, x15)\n    x30 = chain(x29, toivec, uppermost)\n    x31 = matcher(first, x18)\n    x32 = rbind(sfilter, x31)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(toindices, x32, x30)\n    x36 = chain(x33, x34, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = compose(color, x37)\n    x39 = compose(x32, x30)\n    x40 = fork(recolor, x38, x39)\n    x41 = fork(other, palette,"], [1.1, "def solve_e321daa0(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = asindices(I)\n    x5 = apply(first, x4)\n    x6 = difference(x5, x3)\n    x7 = ofcolor(I, x1)\n    x8 = rbind(interval, ONE)\n    x9 = lbind(rbind, contained)\n    x10 = lbind(sfilter, x6)\n    x11 = rbind(matcher, ZERO)\n    x12 = chain(size, x10, x9)\n    x13 = lbind(sfilter, x7)\n    x14 = lbind(compose, x12)\n    x15 = chain(x13, x11, x14)\n    x16 = lbind(fork, x8)\n    x17 = compose(increment, minimum)\n    x18 = lbind(lbind, astuple)\n    x19 = lbind(chain, x17)\n    x20 = rbind(x19, first)\n    x21 = chain(x20, x18, first)\n    x22 = lbind(chain, maximum)\n    x23 = rbind(x22, first)\n    x24 = chain(x23, x18, first)\n    x25 = fork(x16, x21, x24)\n    x26 = compose(x15, x25)\n    x27 = apply(toivec, x3)\n    x28 = apply(x26, x27)\n    x29 = argmax(x28, width)\n    x30 = remove(x29, x28)\n    x31 = ulcorner(x29)\n    x32 = invert(x31)\n    x33 = shift(x29, x32)\n    x34 = asindices(I)\n    x35 = center(x34)\n    x36 = invert(x35)\n    x37 = shift(x34, x36)\n    x38 = width(I)\n    x39 = double(x38)\n    x40 = tojvec(x39)\n    x"], [1.1, "def solve_036c9bd8(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x20, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = compose(x86, last)\n    x38 = argmin(x35, x37)\n    x39 = first(x38)\n    x40"], [1.1, "def solve_86692c69(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = lbind(remove, x1)\n    x3 = chain(positive, size, x2)\n    x4 = compose(x3, palette)\n    x5 = multiply(FIVE, UNITY)\n    x6 = canvas(ZERO, x5)\n    x7 = asindices(x6)\n    x8 = fork(add, first, last)\n    x9 = chain(flip, even, x8)\n    x10 = sfilter(x7, x9)\n    x11 = initset(x1)\n    x12 = box(x7)\n    x13 = inbox(x7)\n    x14 = center(x7)\n    x15 = initset(x14)\n    x16 = lbind(toobject, x12)\n    x17 = compose(x4, x16)\n    x18 = lbind(toobject, x13)\n    x19 = compose(x4, x18)\n    x20 = lbind(toobject, x15)\n    x21 = compose(x4, x20)\n    x22 = fork(both, x19, x21)\n    x23 = fork(both, x17, x22)\n    x24 = compose(x23, trim)\n    x25 = compose(box,477)\n    x26 = lbind(toobject, x25)\n    x27 = compose(x26, asindices)\n    x28 = fork(difference, x27, box)\n    x29 = lbind(fork, recolor)\n    x30 = lbind(x29, identity)\n    x31 = lbind(compose, x12)\n    x32 = lbind(compose, x28)\n    x33 = compose(x31, x2)\n    x34 = fork(x31, x32, x33)\n    x35 = lbind(chain, size)\n    x36 = lbind(x35, connect)\n    x37 = lbind(x37, x22)\n    x38 = lbind(compose, x24)\n    x39 = compose(x38, x34)\n    x40 ="], [1.1, "def solve_dacc8ab1(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_8787993e(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = astuple(SIX, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, THREE)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = astuple(x23, x27)\n    x29 = rbind(ofcolor, x18)\n    x30 = compose(x29, last)\n    x31 = ofcolor(I, x21)\n    x32 = intersection(x31, x30)\n    x33 = mapply(x30, x32)\n    x34 = fill(I, TWO, x33)\n    x35 = astuple(x24, x30)\n    x36 = lbind(apply, last)\n    x37 = power(x36, FOUR)\n    x38 = x37(x34)\n    x39 ="], [1.1, "def solve_062a2e8e(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = double(TEN)\n    x2 = interval(ZERO, x1, ONE)\n    x3 = connect(ORIGIN, DOWN)\n    x4 = connect(ORIGIN, ZERO_BY_TWO)\n    x5 = combine(x3, x4)\n    x6 = astuple(NEG_TWO, TWO)\n    x7 = lbind(multiply, x6)\n    x8 = toivec(NEG_TWO)\n    x9 = apply(x7, x2)\n    x10 = rbind(subtract, TWO_BY_ZERO)\n    x11 = fork(ofcolor, identity, leastcolor)\n    x12 = chain(x10, center, x11)\n    x13 = rbind(mapply, x9)\n    x14 = lbind(lbind, shift)\n    x15 = lbind(shift, x5)\n    x16 = compose(x15, x12)\n    x17 = chain(x13, x14, x16)\n    x18 = lbind(recolor, FIVE)\n    x19 = compose(x18, x17)\n    x20 = fork(paint, identity, x19)\n    x21 = compose(rot180, x20)\n    x22 = fork(ofcolor, x21, leastcolor)\n    x23 = compose(center, x22)\n    x24 = fork(subtract, x23, x12)\n    x25 = fork(shift, x17, x24)\n    x26 = lbind(recolor, FIVE)\n    x27 = rbind(shift, x8)\n    x28 = chain(x26, x27, x25)\n    x29 = fork(paint, x21, x28)\n    x30 = compose(rot180, x29)\n    x31 = rbind(ofcolor, FIVE)\n    x32 = compose(x31, x30)\n    x33 = leastcolor(I)\n    x34 = ofcolor(I, x33)\n    x35 = mostcolor(I)\n    x36 = shape(I)\n    x37 = canvas(x35, x"], [1.1, "def solve_ad47e53a(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_011e9459(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = add(x37, ulcorner)\n    x39 = invert(x38)\n    x40 = shift(x31"], [1.1, "def solve_25a4bc90(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_8b54f2e0(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 =ulcorner(x24)\n    x26 = urcorner(x24)\n    x27 = shoot(x25, UNITY)\n    x28 = shoot(x26, DOWN_LEFT)\n    x29 = combine(x27, x28)\n    x30 = fill(x24, x3, x29)\n    x31 = intersection(x30, x22)\n    x32 = fill(x30, TWO, x31)\n    x33 =787(x32)\n    x34 =88 first(x33)\n    x35 = rightmost(x34)\n    x36 = lbind(shift, x34)\n    x37 = objects(x32, T, F, T)\n    x38 = colorfilter(x37, x39)\n    x39 = apply"], [1.1, "def solve_37d6790b(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, ZERO, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x21, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32, x31)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = sfilter(x rbind, x34)\n    x36 = astuple(x21, x20)\n    x37 = lbind(multiply, x36)\n    x38 = apply(x37, x35)\n    x39 = lbind(shift, x28)\n    x40 = mapply(x39, x38)"], [1.1, "def solve_aed84e40(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x1, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x6, x4)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ONE)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18, x"], [1.1, "def solve_ffee73d7(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(contained, EIGHT)\n    x2 = chain(flip, x1, palette)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(apply, x4)\n    x6 = chain(x3, x5, frontiers)\n    x7 = astuple(x6, ONE)\n    x8 = sfilter(x3, x7)\n    x9 = fork(color, first, last)\n    x10 = product(x8, x9)\n    x11 = color(x1)\n    x12 =294(I)\n    x13 = rbind(toobject, I)\n    x14 = compose(x13, first)\n    x15 = last(x14)\n    x16 = ofcolor(x15, x11)\n    x17 = ulcorner(x16)\n    x18 = subgrid(x16, x15)\n    x19 = rot90(x18)\n    x20 = matcher(last, x19)\n    x21 = subtract(x17, x20)\n    x22 = rot180(x17)\n    x23 = matcher(last, x22)\n    x24 = subtract(x17, x23)\n    x25 = replace(x19, x51, x12)\n    x26 = combine(x21, x24)\n    x27 = branch(x88, x26, x25)\n    x28 = rbind(colorcount, x11)\n    x29 = rbind(toobject, x14)\n    x30 = matcher(x28, x552)\n    x31 = compose(flip, x30)\n    x32 = extract(x29, x31)\n    x33 = first(x32)\n    x34 = last(x32)\n    x35 = x33(x94)\n    x36 = x33(x14)\n    x37 = ulcorner(x16)\n    x38 = add(x37, x36)\n    x39 = subgrid(x13, x19)\n    x40 = rbind(count, x38)"], [1.1, "def solve_dd24cb04(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x20, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = compose(x36, first)\n    x38 = argmin(x35, x37)\n    x39 = first(x38)\n    x40"], [1.1, "def solve_5e58d5ab(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(colorcount, x31)\n    x34 = compose(x33, first)\n    x35 = matcher(x34, ZERO)\n    x36 = rbind(ofcolor, x31)\n    x37 = chain(flip, x35, x36)\n    x38 = fork(recolor, x37, x31)\n    x39 = mapply(x38,"], [1.1, "def solve_6d8b78f0(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = height(I)\n    x9 = astuple(x8, ONE)\n    x10 = canvas(THREE, x9)\n    x11 = hconcat(x10, I)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = identity(DOWN)\n    x17 = connect(ORIGIN, x15)\n    x18 = fill(x11, THREE, x17)\n    x19 = identity(x13)\n    x20 = identity(x12)\n    x21 = identity(x12)\n    x22 = identity(F)\n    x23 = identity(ZERO)\n    x24 = compose(first, first)\n    x25 = chain(first, last, x24)\n    x26 = compose(first, first)\n    x27 = chain(last, last, x26)\n    x28 = chain(first, first, first)\n    x29 = chain(first, last, last)\n    x30 = chain(first, first, last)\n    x31 = chain(last, first, last)\n    x32 = compose(decrement, x25)\n    x33 = compose(decrement, x27)\n    x34 = fork(astuple, x32, x33)\n    x35 = compose(decrement, x27)\n    x36 = fork(subtract, x25, x35)\n    x37 = fork(subtract, x28, x36)\n    x38 = fork(astuple, x34, x37)\n    x39 = lbind(extract, x7)\n    x40 = lbind(matcher, first)\n    x41 = chain"], [1.1, "def solve_68ead827(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = partition(I)\n    x2 = product(x1, x1)\n    x3 = fork(equality, first, last)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = fork(adjacent, first, last)\n    x7 = compose(flip, x6)\n    x8 = extract(x5, x7)\n    x9 = totuple(x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = combine(x10, x11)\n    x13 = leftmost(x12)\n    x14 = increment(x13)\n    x15 = rightmost(x12)\n    x16 = decrement(x15)\n    x17 = apply(uppermost, x9)\n    x18 = maximum(x17)\n    x19 = increment(x18)\n    x20 = apply(lowermost, x9)\n    x21 = minimum(x20)\n    x22 = decrement(x21)\n    x23 = apply(leftmost, x9)\n    x24 = maximum(x23)\n    x25 = increment(x24)\n    x26 = apply(rightmost, x9)\n    x27 = minimum(x26)\n    x28 = decrement(x27)\n    x29 = uppermost(x12)\n    x30 = increment(x29)\n    x31 = lowermost(x12)\n    x32 = decrement(x31)\n    x33 = hmatching(x10, x11)\n    x34 = branch(x33, x14, x25)\n    x35 = branch(x33, x16, x28)\n    x36 = branch(x33, x22, x32)\n    x37 = branch(x33, x19, x30)\n    x38 = astuple(x36, x35)\n    x39 = astuple(x37, x34)\n    x40 = initset(x39)\n    x41 = insert(x38, x40)\n    x42 = backdrop(x41)\n    x43 = merge"], [1.1, "def solve_d3dc2f97(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = equality(x5, ZERO)\n    x7 = branch(x6, identity, vmirror)\n    x8 = x7(x4)\n    x9 = ofcolor(x8, EIGHT)\n    x10 = uppermost(x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, identity, hmirror)\n    x13 = x12(x8)\n    x14 = ofcolor(x13, EIGHT)\n    x15 = ofcolor(x13, TWO)\n    x16 = rbind(shoot, DOWN)\n    x17 = mapply(x16, x14)\n    x18 = height(x13)\n    x19 = apply(first, x15)\n    x20 = insert(ZERO, x19)\n    x21 = insert(x18, x19)\n    x22 = apply(decrement, x21)\n    x23 = order(x20, identity)\n    x24 = order(x22, identity)\n    x25 = size(x15)\n    x26 = increment(x25)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = apply(tojvec, x27)\n    x29 = pair(x23, x24)\n    x30 = lbind(sfilter, x17)\n    x31 = compose(first, last)\n    x32 = chain(decrement, first, first)\n    x33 = fork(greater, x31, x32)\n    x34 = chain(increment, last, first)\n    x35 = fork(greater, x34, x31)\n    x36 = fork(both, x33, x35)\n    x37 = lbind(lbind, astuple)\n    x38 = lbind(compose, x36)\n    x39 = chain(x30, x38, x37)\n    x40"], [1.1, "def solve_37dad45e(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_cf8952e1(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = apply(first, x22)\n    x24 = lbind(sfilter, x21)\n    x25 = compose(first, last)\n    x26 = lbind(matcher, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x27, x23)\n    x29 = lbind(shift, x15)\n    x30 = chain(x29, toivec, uppermost)\n    x31 = matcher(first, x18)\n    x32 = rbind(sfilter, x31)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(toindices, x32, x30)\n    x36 = chain(x33, x34, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = compose(color, x37)\n    x39 = compose(x32, x30)\n    x40 = fork(recolor, x38, x39)\n    x41 = fork(other, palette, x38)\n"], [1.1, "def solve_b0d8f7d8(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = astuple(SIX, ONE)\n    x2 = crop(I, ORIGIN, x1)\n    x3 = tophalf(x2)\n    x4 = upscale(x3, FOUR)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = hconcat(x2, x5)\n    x7 = upscale(x6, FOUR)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = crop(x6, x9, x7)\n    x11 =458(x10)\n    x12 = vmirror(x11)\n    x13 = objects(x12, F, F, T)\n    x14 = argmin(x13, numcolors)\n    x15 = x14(x14)\n    x16 = subgrid(x15, x6)\n    x17 = palette(x16)\n    x18 = remove(ZERO, x17)\n    x19 = other(x18,1991)\n    x20 = rbind(colorcount, x19)\n    x21 = argmin(x12, x20)\n    x22 = hmirror(x21)\n    x23 = objects(x22, T, F, T)\n    x24 = colorfilter(x23, x19)\n    x25 = argmin(x24, DOWN)\n    x26 = ulcorner(x25)\n    x27 = llcorner(x25)\n    x28 = add(x27, x6)\n    x29 = add(x28, x20)\n    x30 = shift(x22, x29)\n    x31 = rbind(10, x30)\n    x32 =jlpply(x31, x26)\n    x33 = apply(x16, x32)\n    x34 = normalize(x33)\n    x35 = x14(x34)\n    x36 = matcher(first, x39)\n    x37 = rbind(sfilter, x36)\n    x38 = lbind(mirror, x37)\n    x39 = chain(size, x35, x"], [1.1, "def solve_8b6972ad(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_37303c83(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_f21f0b18(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_a7dd8c9e(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 =73colors(I)\n    x2 = neighbors(ORIGIN)\n    x3 = mapply(neighbors, x2)\n    x4 = insert(ORIGIN, x3)\n    x5 = rbind(shoot, ORIGIN)\n    x6 = mapply(x5, x4)\n    x7 = underfill(I, ONE, x6)\n    x8 = rbind(shoot, DOWN)\n    x9 = mapply(x8, x4)\n    x10 = astuple(cmirror,459)\n    x11 = astuple(hmirror, vmirror)\n    x12 = combine(x10, x11)\n    x13 = rbind(shoot, UP_RIGHT)\n    x14 = mapply(x13, x4)\n    x15 = combine(x13, x14)\n    x16 = fork(combine, identity, x15)\n    x17 = mapply(x16, x12)\n    O = paint(x7, x17)\n    return O"], [1.1, "def solve_befaf6f7(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = compose(flip, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = matcher(color, x5)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x1, x7)\n    x9 = merge(x8)\n    x10 = fill(I, TWO, x9)\n    x11 = mapply(toindices, x8)\n    x12 = fill(x10, NEG_ONE, x11)\n    x13 = lbind(shift, x8)\n    x14 = mapply(x13, x12)\n    x15 = fill(x12, sIX, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = colorfilter(x16, x5)\n    x18 = rbind(adjacent, x4)\n    x19 = sfilter(x17, x18)\n    x20 = difference(x17, x19)\n    x21 =9(ORIGIN, center)\n    x22 = colorfilter(x105, TWO)\n    x23 =449(x22, x21)\n    x24 = rbind(shoot, DOWN)\n    x25 = mapply(x24, x23)\n    x26 = fill(x15, SIX, x25)\n    x27 = objects(x26, T, F, T)\n    x28 = apply(urcorner, x27)\n    x29 = mapply(x28, x26)\n    x30 = shoot(x26, UP_RIGHT)\n    x31 = shoot(x26, NEG_UNITY)\n    x32 = combine(x30, x31)\n    x33 = mapply(x25, x29)\n    x34 = fill(x26, SIX, x33)\n    O = fill(x34, ONE, x32)\n    return O"], [1.1, "def solve_eb347341(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = fork(combine, dneighbors, box)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, T, F, T)\n    x9 = colorfilter(x8, x4)\n    x10 = rbind(bordering, I)\n    x11 =min(x9, x10)\n    x12 =747(x11)\n    x13 = rbind(hordering, I)\n    x14 = vmirror(x11)\n    x15 = hconcat(x13, x14)\n    x16 =aint(x15, x12)\n    O = vconcat(x16, x8)\n    return O"], [1.1, "def solve_b12746ad(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =479(I)\n    x3 = compose(first, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = other(x8, x1)\n    x10 = replace(I, x6, x1)\n    x11 = objects(x10, T, F, F)\n    x12 = colorfilter(x11, x6)\n    x13 = rbind(bordering, x10)\n    x14 = compose(flip, x13)\n    x15 = mfilter(x12, x14)\n    x16 = difference(x12, x15)\n    x17 = apply(ulcorner, x16)\n    x18 = rbind(shift, RIGHT)\n    x19 = mapply(x18, x17)\n    x20 = vmirror(x19)\n    x21 = objects(x20, T, F, T)\n    x22 = apply(toindices, x21)\n    x23 = apply(urcorner, x22)\n    x24 = mapply(x23, x22)\n    x25 = mapply(toindices, x24)\n    x26 = apply(llcorner, x25)\n    x27 = mapply(toindices, x26)\n    x28 = mapply(add, x15, x27)\n    x29 = mapply(tojvec, x28)\n    x30 = mapply(x29, x25)\n    x31 = fill(x20, x6, x30)\n    x32 = fill(x31, x9, x27)\n    O = replace(x32, x6, x1)\n    return O"], [1.1, "def solve_ef0bce29(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = lbind(colorcount, I)\n    x5 = compose(x4, size)\n    x6 = matcher(x5, TWO)\n    x7 =2069457b6(I)\n    x8 = mfilter(x3, x6)\n    x9 = objects(I, T, F, F)\n    x10 = TEN(x9)\n    x11 = rbind(adjacent, x10)\n    x12 = mfilter(x8, x11)\n    O = fill(I, FOUR, x12)\n    return O"], [1.1, "def solve_7f8678ae(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 =8888(I, T, F)\n    x2 =8888(I, FOUR)\n    x3 = compose(first, x2)\n    x4 = rbind(compose, x3)\n    x5 = lbind(rbind, contained)\n    x6 = chain(x4, x5, last)\n    x7 =05d8ef2013(x6)\n    x8 =77(x7)\n    x9 =77(x6)\n    x10 = fork(sfilter, identity, x8)\n    x11 = fork(sfilter, identity, x9)\n    x12 = compose(size, x10)\n    x13 = compose(size, x11)\n    x14 = greater(x12, ONE)\n    x15 = branch(x14, x13, x7)\n    x16 = x15(x6)\n    x17 = ofcolor(I, x16)\n    x18 = inbox(x17)\n    ORIGIN, x18)\n    x19 = portrait(x17)\n    x20 = branch(x19, x7, x7)\n    x21 = branch(x19, vline, hline)\n    x22 = x20(x21)\n    x23 = fill(I, ZERO, x22)\n    x24 = ofcolor(I, x16)\n    x25 = difference(x24, x26)\n    O = fill(x23, ZERO, x25)\n    return O"], [1.1, "def solve_5902ac14(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 =000170000000\n    \"\"\"\n    x2 = box(I)\n    O = fill(I, ZERO, x2)\n    return O"], [1.1, "def solve_96559171(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 =sit6594224 contained(I, ONE)\n    x2 = delta(x1)\n    x3 =66toindices(x2)\n    x4 = box(x3)\n    x5 = difference(x4, x3)\n    x6 = inbox(x5)\n    x7 = backdrop(x6)\n    x8 = lbind(position, x7)\n    x9 = compose(288, x8)\n    x10 = fork(greater, identity, x9)\n    x11 = sfilter(x5, x10)\n    x12 = difference(x5, x11)\n    x13 = lbind(greater, ONE)\n    x14 = compose(x13, x12)\n    x15 = power(x14, FOUR)\n    x16 = fork(both, x3, x15)\n    x17 = fork(both, x6, x16)\n    x18 = fgpartition(I)\n    x19 = merge(x18)\n    x20 = difference(x19, x18)\n    x21 = mostcolor(I)\n    x22 = compose(remove, center)\n    x23 = compose(center, x22)\n    x24 = fork(shoot, x23, x22)\n    x25 = fork(recolor, color, x24)\n    x26 = mapply(x25, x20)\n    O = paint(I, x26)\n    return O"], [1.1, "def solve_90188eab(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices ofx14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.1, "def solve_a8e15b94(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    a87203756\n    \"\"\"\n    x1 = recolor(ONE, x3)\n    x2 = colorfilter(x1, TWO)\n    x3 = hsplit(I, x2)\n    x4 = apply(tojvec, x3)\n    x5 = mapply(x7, x4)\n    O = fill(I, EIGHT, x5)\n    return O"], [1.1, "def solve_d8440fb5(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = palette(I)\n    x2 =393(I)\n    x3 = remove(ZERO, x1)\n    x4 = lbind(ofcolor, I)\n    x5 = lbind(prapply, connect)\n    x6 = fork(x5, x4, x4)\n    x7 = compose(merge, x6)\n    x8 = fork(recolor, identity, x7)\n    x9 = mapply(x8, x3)\n    O = paint(I, x9)\n    return O"], [1.1, "def solve_e5b868d5(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = index(x3, ORIGIN)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = intersection(x6, x4)\n    x8 = lrcorner(x7)\n    x9 = shoot(x8, DOWN_LEFT)\n    x10 = intersection(x9, x4)\n    x11 = combine(x7, x10)\n    x12 = asobject(x11)\n    x13 =04015(x12)\n    x14 =\n    1821114120\n    0145451991\n    1410141000\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = objects(x3, T, F, T)\n    x3 = colorfilter(x2, x1)\n    x4 = difference(x2, x3)\n    x5 = merge(x3)\n    x6 = rbind(subgrid, x3)\n    x7 = chain(palette, x6, shape)\n    x8 = lbind(fork, replace)\n    x9 = lbind(x8, identity)\n    x10 = lbind(x9, x7)\n    x11 = rbind(x10, x1)\n    x12 = lbind(ofcolor, x13)\n    x13 = fork(mapply, x12, x11)\n    x14 = mapply(x13, x4)\n    x15 =42159(x14)\n    x16 = replace(x3, x1, x5)\n    O = fill(x16, x1, x16)\n    return O"], [1.1, "def solve_248d610c(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = chain(flip, x1, shape)\n    x3 = hmirror(I)\n    x4 = fgpartition(x3)\n    x5 = merge(x4)\n    x6 = chain(normalize, toindices, box)\n    x7 = difference(x5, x6)\n    x8 = compose(size, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = fork(add, leftmost, uppermost)\n    x11 = argmin(x7, x10)\n    x12 = palette(x3)\n    x13 = remove(x11, x12)\n    x14 = lbind(colorcount, I)\n    x15 = argmin(x13, x14)\n    x16 = lbind(colorcount, x3)\n    x17 = normalize(x11)\n    x18 = matcher(x16, x17)\n    x19 = argmin(x9, x18)\n    x20 = palette(x3)\n    x21 = colorfilter(x20, x19)\n    x22 = rbind(74ddupe, x21)\n    x23 = argmin(x12, x22)\n    x24 = ofcolor(x23, x19)\n    x25 =contained(x19, x24)\n    x26 = ofcolor(x3, x16)\n    x27 = intersection(x26, x25)\n    x28 = outbox(x27)\n    x29 = subgrid(x28, x3)\n    x30 = ofcolor(x29, x16)\n    x31 = ofcolor(x29, x19)\n    x32 = intersection(x31, x30)\n    x33 = replace(x29, x16, x59)\n    x34 = extract(x32, x33)\n    x35 = subgrid(x34, x3)\n    O = trim(x35)\n    return O"], [1.1, "def solve_7ce8e736(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 =157786e21(I):\n    x2 =449989product1\n    x3 =4447(I)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = combine(x8, x5)\n    x10 = lefthalf(x9)\n    O = tophalf(x10)\n    return O"], [1.1, "def solve_e427d8b5(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = rbind(order, identity)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = chain(positive, size, x5)\n    x7 = rbind(repeat, x1)\n    x8 = compose(x7, x6)\n    O =344(x2)\n    return O"], [1.1, "def solve_0d395f90(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 =6360(x24)\n    x26 = ulcorner(x24)\n    x27 = index(x14, x26)\n    x28 = equality(x27, x22)\n    x29 = shift(x15, x28)\n    x30 = urcorner(x28)\n    x31 = other(x10, x13)\n    x32 = shoot(x26, x31)\n    x33 = combine(x29, x32)\n    x34 = rbind(shoot, x30)\n    x35 = mapply(x34, x33)\n    x36 = double(TEN)\n    x37 = tojvec(x36)\n    x38 =47(x35)\n    x39 = insert(x37, x38)\n    O = lrcorner(x39)\n    return O"], [1.1, "def solve_78b20688(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = cover(I, x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(x3, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x77, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = rbind(matcher, ZERO)\n    x14 = compose(x12, x13)\n    x15 = rbind(gravitate, x2)\n    x16 = compose(x15, x14)\n    x17 = fork(add, x16, ulcorner)\n    x18 = fork(connect, x17, x14)\n    x19 = fork(67a423677\n    x20 = fork(sfilter, x18, x19)\n    x21 = fork(recolor, x14, x20)\n    x22 = mapply(x21, x11)\n    O = paint(x7, x22)\n    return O"], [1.1, "def solve_3adb1ed0(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 =portcat(I, I)\n    x2 = box(x1)\n    x3 = fill(x1, ZERO, x2)\n    x4 = subgrid(x1, x3)\n    x5 = fork(combine, vfrontier, hfrontier)\n    x6 = width(x4)\n    x7 = rbind(greater, x6)\n    x8 = chain(x7, tojvec, lrcorner)\n    x9 = height(x4)\n    x10 = decrement(x9)\n    x11 = matcher(x8, x10)\n    x12 = extract(x7, x11)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = toobject(x14, I)\n    x16 = add(UNITY, x15)\n    x17 = shape(x13)\n    x18 = canvas(ZERO, x17)\n    x19 = asindices(x18)\n    x20 = shift(x19, x17)\n    x21 = paint(x18, x20)\n    x22 = objects(x21, F, F, T)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = paint(x21, x23)\n    x25 = normalize(x12)\n    x26 = lbind(shift, x25)\n    x27 =9799383200(x26)\n    x28 = paint(x24, x27)\n    x29 = paint(x28, x25)\n    x30 = rot90(x29)\n    x31 = downscale(x30, x16)\n    x32 = rot90(x31)\n    x33 = paint(x32, x25)\n    O = rot270(x33)\n    return O"], [1.1, "def solve_743cf0a9(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palettecae(I)\n    x5 = remove(x3, x4)\n    x6 = hsplit(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = compress(x7)\n    x10 = palette(x9)\n    x11 =467(x9)\n    x12 =11(x8)\n    x13 = rbind(hconcat, x5)\n    x14 = compose(x13, vmirror)\n    x15 = x14(x10)\n    x16 = ofcolor(x15, x31)\n    x17 = mapply(neighbors, x16)\n    x18 = difference(x17, x16)\n    O = fill(x15, ONE, x18)\n    return O"], [1.1, "def solve_2d480f1a(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = mapply(O = fill(I, x11, x32)\n    return O"], [1.1, "def solve_782109c2(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, h)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = width(I)\n    x16 = decrement(x15)\n    x17 = tojvec(x16)\n    x18 = connect(ORIGIN, x17)\n    x19 = height(I)\n    x20 = decrement(x19)\n    x21 = toivec(x20)\n    x22 = connect(ORIGIN, x21)\n    x23 = shape(I)\n    x24 = canvas(ZERO, x23)\n    x25 = lbind(tojvec, x24)\n    x26 = lbind(shift, x12)\n    x27 = compose(x25, x26)\n    x28 = apply(x27, x18)\n    x29 = lbind(ofcolor, I)\n    x30 = lbind(mapply, x29)\n    x31 = ofcolor(I, x3)\n    x32 =(x30, x31)\n    x33 = fill(x23, x3, x32)\n    x34 = astuple(x23, x28)\n    x35 = shift(x12, x34)\n    x36 = increment(x38)\n    x37 =\n    x31, x36)\n    x38 = apply(x25, x37)\n    O = fill(x33, x3, x38)\n    return O"], [1.1, "def solve_3f684412(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 =0044d8556(I)\n    x5 = objects(I, T, F, T)\n    x6 = height(I)\n    x7 = halve(x6)\n    x8 = add(x7, TWO)\n    x9 = width(I)\n    x10 = rbind(multiply, x9)\n    x11 = apply(x10, x5)\n    x12 = mapply(outbox, x11)\n    x13 = fill(I, x3, x12)\n    x14 = mapply(vfrontier, x15)\n    O = fill(x13, x3, x14)\n    return O"], [1.1, "def solve_1012c076(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, identity, dmirror)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = matcher(identity, x9)\n    x18 = rbind(sfilter, x17)\n    x19 = compose(size, x18)\n    x20 = argmin(x16, x19)\n    x21 = asobject(x20)\n    x22 = matcher(first, x9)\n    x23 = compose(flip, x22)\n    x24 = sfilter(x21, x23)\n    x25 = size(x24)\n    x26 = width(x6)\n    x27 = multiply(x25, x26)\n    x28 = multiply(x25, x27)\n    x29 = rbind(multiply, x28)\n    x30 = chain(most, x29, last)\n    x31 = compose(29ecdecrement, first)\n    x32 = fork(greater, first, last)\n    x33 = compose(x32, x31)\n    x34 = fork(add, first, x33)\n    x35 = compose(x34, last)\n    x36 = ofcolor(x16, x9)\n    x37 = mapply(x35, x36)\n    x38 = paint(x6, x37)\n    O = x5(x38)\n    return O"], [1.1, "def solve_662468bc(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = trim(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(x2)\n    x4 = vmirror(x3)\n    x5 = bottomhalf(x2)\n    x6 = lefthalf(x5)\n    x7 = bottomhalf(x2)\n    x8 = vmirror(x7)\n    x9 = palette(I)\n    x10 = combine(x9, x6)\n    x11 = intersection(x9, x8)\n    x12 = difference(x10, x11)\n    x13 = order(x12, uppermost)\n    x14 = colorcount(I, x6)\n    x15 =\n    x16 =\n    x17 =\n    x16)\n    x18 = x13(x14)\n    x19 = x16(x18)\n    x20 = subtract(x19, x17)\n    x21 = decrement(x20)\n    x22 = canvas(x9, x3)\n    x23 = tojvec(x21)\n    x24 = crop(x22, x23, x20)\n    O = fill(x24, ZERO, x22)\n    return O"], [1.1, "def solve_7f1bcbab(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = toindices(x1)\n    x3 =227(x2)\n    x4 = mapply(dneighbors, x1)\n    x5 = mapply(ineighbors, x1)\n    x6 = toobject(x4, I)\n    x7 =27(x6)\n    x8 = mostcolor(x7)\n    x9 = palette(I)\n    x10 = remove(x8, x9)\n    x11 = other(x10, x9)\n    x12 =16114840442338500\n    x13 = rbind(colorcount, x8)\n    x14 = argmax(x11, x13)\n    x15 = ofcolor(I, x11)\n    x16 = subgrid(x15, I)\n    x17 = apply(mostcommon, x15)\n    x18 = normalize(x16)\n    x19 = lbind(shift, x18)\n    x20 = mapply(x19, x17)\n    x21 = ofcolor(x20, x11)\n    x22 = subgrid(x21, x20)\n    x23 = apply(mostcommon, x15)\n    x24 = normalize(x22)\n    x25 = matcher(first, x8)\n    x26 = sfilter(x24, x25)\n    x27 = shift(x26, x20)\n    O = fill(x22, x11, x27)\n    return O"], [1.1, "def solve_53115b75(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = totuple(x6)\n    x9 = order(x8, identity)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = remove(x10, x9)\n    x13 = compose(last, last)\n    x14 = compose(hmirror, first)\n    x15 = rightmost(x4)\n    x16 = rightmost(x11)\n    x17 = greater(x15, x16)\n    x18 = branch(x17, x13, x14)\n    x19 = crop(x10, ORIGIN, x18)\n    x20 = decrement(x17)\n    x21 =364(x20, TWO_BY_ZERO)\n    O = branch(x17, width, height)\n    return O"], [1.1, "def solve_fe7d6417(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = palette(I)\n    x2 =446(ONE, THREE)\n    x3 = rbind(subgrid, I)\n    x4 =44compose(x3, x2)\n    x5 = rbind(colorcount, ZERO)\n    x6 = matcher(x5, THREE)\n    x7 = compose(x6, x4)\n    x8 = cmirror(I)\n    x9 = papply(pair, x8, x6)\n    x10 =2417apply(remove, x9)\n    x11 = objects(x14, x10, x3)\n    x12 = argmax(x11, x7)\n    x13 = subgrid(x12, x14)\n    x14 = increment(x13)\n    x15 = branch(x11, ZERO, x14)\n    x16 = asindices(x15)\n    x17 = lbind(shift, x16)\n    x18 = double(x17)\n    x19 = interval(ZERO, x18, ONE)\n    x20 = lbind(multiply, x17)\n    x21 = apply(x20, x19)\n    x22 = lbind(mapply, x12)\n    x23 = lbind(lbind, shift)\n    x24 = lbind(occurrences, x14)\n    x25 = compose(x24, x23)\n    x26 = lbind(lbind, shift)\n    x27 = compose(x26, x25)\n    x28 = lbind(rbind, occurrences)\n    x29 = compose(x28, last)\n    x30 = fork(matcher, last, x27)\n    x31 = fork(sfilter, hline, x30)\n    x32 = mapply(x31, x21)\n    O = paint(x14, x32)\n    return O"], [1.1, "def solve_e3d50554(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = shape(I)\n    x20 = canvas(x10, x19)\n    x21 = lbind(divide, x19)\n    x22 = apply(x21, x18)\n    x23 = sfilter(x1, x22)\n    x24 = lbind(colorcount, x20)\n    x25 = argmin(x23, x24)\n    x26 = objects(x6, T, F, T)\n    x27 = colorfilter(x26, x25)\n    x28 = apply(ulcorner, x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x26)\n    x31 = paint(x20, x30)\n    x32 = merge(x31)\n    x33 =99(x32)\n    x34 = replace(x31, x25, x33)\n    O = cover(x39, x34)\n    return O"], [1.1, "def solve_32d41890(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = switch(I, THREE, FOUR)\n    x2 =46(equality, NINE, ZERO)\n    x3 = branch(x2, dmirror, identity)\n    x4 = x3(x1)\n    x5 = objects(x4, T, F, T)\n    x6 = argmin(x5, leftmost)\n    x7 = argmax(x5, leftmost)\n    x8 = color(x6)\n    x9 = color(x7)\n    x10 = leftmost(x6)\n    x11 = leftmost(x7)\n    x12 = height(x6)\n    x13 = width(x6)\n    x14 = astuple(x12, x13)\n    x15 = mostcolor(I)\n    x16 =most(x6)\n    x17 = uppermost(x6)\n    x18 = color(x16)\n    x19 = color(x17)\n    x20 = rightmost(x6)\n    x21 = leftmost(x7)\n    x22 = astuple(x20, x21)\n    x23 = remove(x16, x22)\n    x24 =80126(I):\n    x25 = dmirror(x24)\n    x26 = lbind(shift, x25)\n    x27 = compose(x26, tojvec)\n    x28 = Tapply(x27, x23)\n    x29 = double(x38)\n    x30 = lbind(multiply, x29)\n    x31 = apply(x30, x28)\n    x32 = mapply(x27, x31)\n    x33 = paint(x4, x32)\n    x34 = merge(x5)\n    x35 = cover(x33, x34)\n    x36 = leftmost(x35)\n    x37 = equality(x36, ZERO)\n    O = paint(x33, x37)\n    return O"], [1.1, "def solve_a3197471(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = replace(I, NINE, ZERO)\n    x3 = lbind26apply(d89b23026\n    rbind( spot36, x2)\n    x4 = chain(positive, size, x3)\n    x5 = lbind(apply, x4)\n    x6 = chain(x71, x5, dmirror)\n    x7 = x6(x2)\n    x8 = fork(recolor, color, x7)\n    x9 = mapply(x8, x5)\n    O = paint(x2, x9)\n    return O"], [1.1, "def solve_3748b4a9(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 =393(x2)\n    x5 = fork(multiply, height, width)\n    x6 = lbind(shift, x2)\n    x7 =666x543(x2)\n    x8 =93(x7, x6)\n    x9 =22(x8, x4)\n    x10 = mapply(x6, x3)\n    x11 = paint(I, x10)\n    O = subgrid(x2, x11)\n    return O"]], "3490cc26": [[0.08173484697705038, "def solve_055f497a(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_408dc8c5(I):\n    x1 = partition(I)\n    x2 = fork(recolor, color, backdrop)\n    x3 = apply(x2, x1)\n    x4 = mfilter(x3, hline)\n    x5 = mfilter(x3, vline)\n    x6 = paint(I, x4)\n    O = paint(x6, x5)\n    return O"], [0.08173484697705038, "def solve_8b58cd8a(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.08173484697705038, "def solve_5c37f680(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_1f82c158(I):\n    x1 = objects(I, T, F, F)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = lbind(sfilter, x3)\n    x5 = lbind(matcher, identity)\n    x6 = chain(size, x4, x5)\n    x7 = matcher(x6, ONE)\n    x8 = sfilter(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmax(x8, x9)\n    x11 = matcher(color, x10)\n    x12 = extract(x1, x11)\n    O = subgrid(x12, I)\n    return O"], [0.08173484697705038, "def solve_24189f94(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_a8768dfc(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_a6eeb15b(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = apply(color, x3)\n    x5 = rbind(contained, x4)\n    x6 = compose(x5, color)\n    x7 = sfilter(x2, x6)\n    x8 = lbind(colorfilter, x3)\n    x9 = chain(first, x8, color)\n    x10 = fork(gravitate, identity, x9)\n    x11 = fork(shift, identity, x10)\n    x12 = mapply(x11, x7)\n    x13 = merge(x2)\n    x14 = cover(I, x13)\n    O = paint(x14, x12)\n    return O"], [0.08173484697705038, "def solve_4828dc5b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_e87e12e5(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_e43f175a(I):\n    O = replace(I, FOUR, ZERO)\n    return O"], [0.08173484697705038, "def solve_2cc917c3(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.08173484697705038, "def solve_839eb872(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.08173484697705038, "def solve_dbd3d9f2(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_b32e4eb3(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_f76a37c9(I):\n    x1 = palette(I)\n    x2 = remove(FIVE, x1)\n    x3 = first(x2)\n    x4 = ofcolor(I, x3)\n    x5 = fill(I, ZERO, x4)\n    x6 = ofcolor(I, FIVE)\n    O = fill(x5, x3, x6)\n    return O"], [0.08173484697705038, "def solve_5ee950a8(I):\n    x1 = objects(I, T, F, T)\n    x2 = ofcolor(I, THREE)\n    x3 = sizefilter(x1, ONE)\n    x4 = rbind(vmatching, x2)\n    x5 = rbind(hmatching, x2)\n    x6 = fork(either, x4, x5)\n    x7 = sfilter(x3, x6)\n    x8 = rbind(gravitate, x2)\n    x9 = fork(add, center, x8)\n    x10 = fork(connect, center, x9)\n    x11 = fork(recolor, color, x10)\n    x12 = mapply(x11, x7)\n    O = paint(I, x12)\n    return O"], [0.08173484697705038, "def solve_6458773b(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = subgrid(x2, I)\n    return O"], [0.08173484697705038, "def solve_eb1677f4(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.08173484697705038, "def solve_12247c29(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_dc24b772(I):\n    x1 = ofcolor(I, ONE)\n    x2 = crop(I, ORIGIN, THREE_BY_THREE)\n    x3 = asobject(x2)\n    x4 = lbind(shift, x3)\n    x5 = compose(x4, decrement)\n    x6 = mapply(x5, x1)\n    O = paint(I, x6)\n    return O"], [0.08173484697705038, "def solve_36e1ded9(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.08173484697705038, "def solve_23b94ede(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.08173484697705038, "def solve_3a5fa930(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_75c2d520(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.08173484697705038, "def solve_a8b57165(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.08173484697705038, "def solve_0f779890(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.08173484697705038, "def solve_aefecaed(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.08173484697705038, "def solve_6ad1ebb7(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, TWO, x3)\n    return O"], [0.08173484697705038, "def solve_f6e580bc(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_61c9642c(I):\n    x1 = vmirror(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = toindices(x3)\n    x5 = sizefilter(x2, ONE)\n    x6 = apply(initset, x4)\n    x7 = lbind(argmin, x6)\n    x8 = lbind(rbind, manhattan)\n    x9 = compose(x7, x8)\n    x10 = fork(recolor, color, x9)\n    x11 = mapply(x10, x5)\n    x12 = merge(x5)\n    x13 = cover(I, x12)\n    O = paint(x13, x11)\n    return O"], [0.08173484697705038, "def solve_551325c9(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = fork(equality, identity, size)\n    x5 = mfilter(x3, x4)\n    O = fill(I, FOUR, x5)\n    return O"], [0.08302033872571075, "def solve_87528bbb(I):\n    x1 = palette(I)\n    x2 = intersection(x1, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = astuple(ONE, x4)\n    x6 = size(x5)\n    x7 = decrement(x6)\n    x8 = tojvec(x7)\n    x9 = shoot(x8, UNITY)\n    O = fill(I, x4, x9)\n    return O"], [0.08318632736744225, "def solve_85141ce4(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_c81221e6(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_94207012(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_fa794840(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_a44b4e05(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.09977289344345569, "def solve_c583e66c(I):\n    O = switch(I, EIGHT, TWO)\n    return O"], [0.1179007840135784, "def solve_d99dc4eb(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = rbind(multiply, THREE)\n    x6 = rbind(divide, THREE)\n    x7 = compose(x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = toindices(x4)\n    x10 = compose(x8, last)\n    x11 = sfilter(x9, x10)\n    O = fill(I, SIX, x11)\n    return O"], [0.12284772253271087, "def solve_98beb5f3(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = chain(size, dedupe, first)\n    x9 = matcher(x8, ONE)\n    x10 = compose(first, cmirror)\n    x11 = chain(size, dedupe, x10)\n    x12 = matcher(x11, ONE)\n    x13 = fork(both, x9, x12)\n    x14 = rbind(rapply, I)\n    x15 = compose(initset, first)\n    x16 = chain(first, x14, x15)\n    x17 = compose(x13, x16)\n    x18 = extract(x7, x17)\n    x19 = first(x18)\n    x20 = last(x18)\n    x21 = x19(I)\n    x22 = width(x21)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = index(x21, x24)\n    x26 = asobject(x21)\n    x27 = matcher(first, x25)\n    x28 = compose(flip, x27)\n    x29 = sfilter(x26, x28)\n    x30 = hperiod(x29)\n    x31 = width(x21)\n    x32 = increment(x31)\n    x33 = interval(ZERO, x32, x30)\n    x34 = apply(tojvec, x33)\n    x35 = lbind(shift, x29)\n    x36 = mapply(x35, x34)\n    x37 = paint(x21, x36)\n    O = x20(x37)\n    return O"], [0.12814991617905258, "def solve_a860361d(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [0.13468134728045977, "def solve_ba340321(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13468134728045977, "def solve_04739150(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13468134728045977, "def solve_01a1007f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x22 = invert(x11)\n    x23 = shift(x9, x22)\n    x24 = lbind(shift, x23)\n    x25 = mapply(x24, x8)\n    O = paint(I, x25)\n    return O"], [0.13468134728045977, "def solve_c2e0b3c6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13468134728045977, "def solve_80edc6b5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_d48b6367(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13468134728045977, "def solve_544cb80e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_c80046b2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_cce5466f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_1dceb5ce(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13468134728045977, "def solve_53819502(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13468134728045977, "def solve_5440fe70(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_20049e0c(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_b07e2ab3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13604469536847255, "def solve_af05c8b7(I):\n    x1 = fork(multiply, height, width)\n    x2 = partition(I)\n    x3 = argmax(x2, x1)\n    x4 = remove(x3, x2)\n    x5 = argmax(x4, x1)\n    x6 = other(x4, x5)\n    x7 = palette(I)\n    x8 = lrcorner(x5)\n    x9 = add(x8, UNITY)\n    x10 = llcorner(x5)\n    x11 = add(x10, DOWN_LEFT)\n    x12 = urcorner(x5)\n    x13 = add(x12, UP_RIGHT)\n    x14 = ulcorner(x5)\n    x15 = add(x14, NEG_UNITY)\n    x16 = shoot(x9, UNITY)\n    x17 = shoot(x11, DOWN_LEFT)\n    x18 = shoot(x13, UP_RIGHT)\n    x19 = shoot(x15, NEG_UNITY)\n    x20 = combine(x16, x17)\n    x21 = combine(x18, x19)\n    x22 = combine(x20, x21)\n    x23 = color(x6)\n    O = fill(I, x23, x22)\n    return O"], [0.13811265931525568, "def solve_aa4ae39f(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.13811265931525568, "def solve_ccc58bde(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.14098233381512817, "def solve_f95a5994(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, EIGHT, x4)\n    return O"], [0.14098233381512817, "def solve_65aeaea9(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply( neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, EIGHT, x4)\n    return O"], [0.14633502634498852, "def solve_11016dbe(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.14633502634498852, "def solve_023adeef(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.147039853263387, "def solve_032ac5d0(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = lbind(colorcount, I)\n    x5 = argmin(x3, x4)\n    x6 = ofcolor(I, x1)\n    x7 = ofcolor(I, x5)\n    x8 = combine(x6, x7)\n    x9 = mapply(neighbors, x8)\n    x10 = difference(x9, x8)\n    x11 = toobject(x10, I)\n    x12 = leastcolor(x11)\n    x13 = ofcolor(I, x1)\n    x14 = first(x13)\n    x15 = initset(x14)\n    x16 = objects(I, T, F, F)\n    x17 = colorfilter(x16, x12)\n    x18 = lbind(adjacent, x8)\n    x19 = mfilter(x17, x18)\n    x20 = toindices(x19)\n    x21 = rbind(manhattan, x15)\n    x22 = chain(even, x21, initset)\n    x23 = sfilter(x20, x22)\n    x24 = fill(I, x5, x20)\n    O = fill(x24, x1, x23)\n    return O"], [0.147039853263387, "def solve_6beed481(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = fill(I, x8, x32)\n    return O"], [0.1497728934434557, "def solve_ef4d04c0(I):\n    x1 = fork(multiply, height, width)\n    x2 = lbind(ofcolor, I)\n    x3 = palette(I)\n    x4 = compose(x1, x2)\n    x5 = argmax(x3, x4)\n    x6 = leastcolor(I)\n    x7 = palette(I)\n    x8 = remove(x5, x7)\n    x9 = other(x8, x6)\n    x10 = replace(I, x6, x5)\n    O = replace(x10, x9, x6)\n    return O"], [0.15468134728045974, "def solve_3312c412(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = fork(subtract, first, last)\n    x4 = fork(multiply, sign, identity)\n    x5 = compose(x4, x3)\n    x6 = lbind(greater, THREE)\n    x7 = chain(x6, maximum, x5)\n    x8 = lbind(lbind, astuple)\n    x9 = rbind(chain, x8)\n    x10 = lbind(compose, x7)\n    x11 = rbind(x9, x10)\n    x12 = lbind(lbind, sfilter)\n    x13 = compose(x11, x12)\n    x14 = lbind(mapply, backdrop)\n    x15 = fork(apply, x13, identity)\n    x16 = compose(x14, x15)\n    x17 = power(x16, TWO)\n    x18 = x17(x2)\n    x19 = fill(I, FOUR, x18)\n    O = replace(x19, x1, ZERO)\n    return O"], [0.16202905277913643, "def solve_b8b499a4(I):\n    x1 = astuple(SIX, TWO)\n    x2 = astuple(TWO, ONE)\n    x3 = initset(x2)\n    x4 = insert(ORIGIN, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    O = fill(I, FOUR, x12)\n    return O"], [0.167039853263387, "def solve_e9db1696(I):\n    O = replace(I, EIGHT, ONE)\n    return O"], [0.168463732206312, "def solve_02b96647(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.168463732206312, "def solve_dea4fe77(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.1697728934434557, "def solve_344dccf6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.1697728934434557, "def solve_768e4d1b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.1697728934434557, "def solve_548062c3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.1697728934434557, "def solve_277585dd(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.1697728934434557, "def solve_170f9c6c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.1697728934434557, "def solve_337318ba(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.17098233381512817, "def solve_f5ef6376(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.17098233381512817, "def solve_543a375e(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.19326297813860446, "def solve_a36ededf(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.19986952115995066, "def solve_819cd5fa(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.19986952115995066, "def solve_ee932955(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.20252763457609518, "def solve_20703c94(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.20252763457609518, "def solve_75882916(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.20252763457609518, "def solve_de631d8a(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.20252763457609518, "def solve_0200d9ec(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.20428216502822003, "def solve_aebc9b9a(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = astuple(x1, ONE)\n    x8 = astuple(x2, ONE)\n    x9 = decrement(x1)\n    x10 = decrement(x2)\n    x11 = toivec(x10)\n    x12 = tojvec(x9)\n    x13 = crop(I, x11, x8)\n    x14 = crop(I, x12, x7)\n    x15 = asobject(x14)\n    x16 = asobject(x13)\n    x17 = vperiod(x15)\n    x18 = hperiod(x16)\n    x19 = astuple(x17, x18)\n    x20 = lbind(multiply, x19)\n    x21 = neighbors(ORIGIN)\n    x22 = mapply(neighbors, x21)\n    x23 = apply(x20, x22)\n    x24 = lbind(shift, x6)\n    x25 = mapply(x24, x23)\n    O = paint(I, x25)\n    return O"], [0.20977289344345568, "def solve_4a956a12(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_99657942(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_f315413b(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_983a0b3f(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_29547386(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_95ad7653(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_45b6463a(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_49e873ea(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_7d7edbe6(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_f9ad95a9(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_72ab5ce8(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, TWO)\n    x3 = mfilter(x1, x2)\n    x4 = matcher(size, THREE)\n    x5 = mfilter(x1, x4)\n    x6 = matcher(size, FOUR)\n    x7 = mfilter(x1, x6)\n    x8 = fill(I, THREE, x3)\n    x9 = fill(x8, TWO, x5)\n    O = fill(x9, ONE, x7)\n    return O"], [0.21379418071318668, "def solve_d4d2d11a(I):\n    x1 = ofcolor(I, ONE)\n    x2 = ofcolor(I, TWO)\n    x3 = mapply(neighbors, x1)\n    x4 = mapply(neighbors, x2)\n    x5 = fill(I, SEVEN, x3)\n    O = fill(x5, FOUR, x4)\n    return O"], [0.2164395601101224, "def solve_5703d54b(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.2164395601101224, "def solve_e4684d06(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.2164395601101224, "def solve_f342d34d(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.22208695827893984, "def solve_a7886267(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.22208695827893984, "def solve_a79af328(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.22208695827893984, "def solve_a8ee5901(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.22609745695181693, "def solve_a581fe24(I):\n    x1 = shape(I)\n    x2 = canvas(ZERO, x1)\n    x3 = hconcat(I, x2)\n    x4 = objects(x3, F, F, T)\n    x5 = argmin(x4, size)\n    x6 = ulcorner(x5)\n    x7 = llcorner(x5)\n    x8 = shoot(x6, NEG_UNITY)\n    x9 = shoot(x6, UNITY)\n    x10 = shoot(x7, DOWN_LEFT)\n    x11 = shoot(x7, UP_RIGHT)\n    x12 = combine(x8, x9)\n    x13 = combine(x10, x11)\n    x14 = combine(x12, x13)\n    x15 = underfill(I, THREE, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = colorfilter(x16, 18656)\n    x18 = rbind(bordering, I)\n    x19 = mfilter(x17, x18)\n    O = cover(x15, x19)\n    return O"], [0.22746637157822558, "def solve_6c50b4fd(I):\n    O = vmirror(I)\n    return O"], [0.2473346261417366, "def solve_7b6228f0(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.253858380731812, "def solve_8f0cbf2f(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, last)\n    x5 = fork(recolor, first, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [0.253858380731812, "def solve_f3c70214(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, last)\n    x5 = fork(recolor, first, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [0.25543417203130403, "def solve_1d9baa90(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.25543417203130403, "def solve_3ecc723d(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.266137548114851, "def solve_c69d1fc7(I):\n    x1 = ofcolor(I, TWO)\n    x2 = vline(x1)\n    x3 = branch(x2, dmirror, identity)\n    x4 = x3(I)\n    x5 = fgpartition(x4)\n    x6 = matcher(color, TWO)\n    x7 = compose(flip, x6)\n    x8 = extract(x5, x7)\n    x9 = ofcolor(x4, TWO)\n    x10 = leftmost(x9)\n    x11 = leftmost(x8)\n    x12 = greater(x10, x11)\n    x13 = manhattan(x8, x9)\n    x14 = decrement(x13)\n    x15 = branch(x12, identity, invert)\n    x16 = branch(x12, decrement, increment)\n    x17 = branch(x12, leftmost, rightmost)\n    x18 = x15(x14)\n    x19 = tojvec(x18)\n    x20 = shift(x8, x19)\n    x21 = x17(x20)\n    x22 = x16(x21)\n    x23 = tojvec(x22)\n    x24 = vfrontier(x23)\n    x25 = cover(x4, x8)\n    x26 = paint(x25, x20)\n    x27 = fill(x26, EIGHT, x24)\n    O = x3(x27)\n    return O"], [0.2730213103674518, "def solve_dab511d6(I):\n    O = rot180(I)\n    return O"], [0.2730213103674518, "def solve_ce10cc7d(I):\n    O = rot180(I)\n    return O"], [0.2735505434325868, "def solve_2e865a66(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.2781097602204145, "def solve_0b679412(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.2781097602204145, "def solve_0a068c72(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.2781097602204145, "def solve_891b2494(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.2781097602204145, "def solve_a977791b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.28257229929506134, "def solve_16b0fcd3(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.28257229929506134, "def solve_40925569(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.28271352439090625, "def solve_92216082(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.28869394780495594, "def solve_6c25945c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = delta(x2)\n    O = fill(I, FOUR, x3)\n    return O"], [0.2912996173225872, "def solve_4b257341(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_0a331e97(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_e967283b(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_f369af48(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_7a7449a1(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_f487fb6c(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_6b6a3bd5(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_6da73910(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_d188f008(I):\n    O = tophalf(I)\n    return O"], [0.29175210347734337, "def solve_74b5a91c(I):\n    O = trim(I)\n    return O"], [0.29175210347734337, "def solve_ce10c588(I):\n    O = trim(I)\n    return O"], [0.29211676764739275, "def solve_22e3fdc7(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = apply(toindices, x6)\n    x8 = rbind(shoot, RIGHT)\n    x9 = compose(x8, center)\n    x10 = fork(recolor, color, x9)\n    x11 = mapply(x10, x6)\n    x12 = paint(I, x11)\n    x13 = width(I)\n    x14 = interval(ZERO, x13, ONE)\n    x15 = apply(double, x14)\n    x16 = apply(increment, x15)\n    x17 = apply(tojvec, x16)\n    x18 = prapply(shift, x7, x17)\n    x19 = merge(x18)\n    O = fill(x12, FIVE, x19)\n    return O"], [0.2957105825141008, "def solve_bd3e336c(I):\n    x1 = replace(I, SEVEN, ZERO)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [0.29660861186373566, "def solve_c5ec41c9(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.29660861186373566, "def solve_eb89440f(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.3074019960118805, "def solve_0f68bba5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.326168988805897, "def solve_e195ca94(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.326168988805897, "def solve_4de87cb6(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.326168988805897, "def solve_ce35297d(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.3315011728051802, "def solve_9984774e(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.3315011728051802, "def solve_8c34366a(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.3366487388707967, "def solve_3287d2ac(I):\n    x1 = ofcolor(I, EIGHT)\n    x2 = delta(x1)\n    O = fill(I, THREE, x2)\n    return O"], [0.34510675848655514, "def solve_2b8ee24d(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.34824203760771505, "def solve_e450ca93(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = objects(x2, T, F, T)\n    x4 = merge(x3)\n    O = paint(x1, x4)\n    return O"], [0.3635599247732947, "def solve_c48c4ae2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, SEVEN, x2)\n    return O"], [0.36791347770439387, "def solve_c00e3492(I):\n    O = dmirror(I)\n    return O"], [0.36791347770439387, "def solve_84df7074(I):\n    O = dmirror(I)\n    return O"], [0.36791347770439387, "def solve_d59526cf(I):\n    O = dmirror(I)\n    return O"], [0.3702111384573228, "def solve_a13a7d93(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = astuple(SIX, THREE)\n    x6 = astuple(FOUR, EIGHT)\n    x7 = astuple(ONE, TWO)\n    x8 = initset(x5)\n    x9 = insert(x6, x8)\n    x10 = insert(x7, x9)\n    x11 = mapply(x4, x10)\n    O = paint(I, x11)\n    return O"], [0.3807233128441688, "def solve_485a70ea(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot270(I)\n    return O"], [0.3997728934434557, "def solve_c02efb3c(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = ofcolor(I, ZERO)\n    x4 = astuple(x1, ONE)\n    x5 = crop(I, ORIGIN, x4)\n    x6 = hupscale(x5, x2)\n    O = fill(x6, ZERO, x3)\n    return O"], [0.3997728934434557, "def solve_fa82e118(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.3997728934434557, "def solve_77312294(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.3997728934434557, "def solve_4e852de1(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.44421029663584294, "def solve_43335764(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_ef01b039(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_1ab6b3bd(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_f713e082(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_6bfe2952(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_6b8a7e73(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_f62371d1(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_6aa06a09(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_86f6fc77(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44434496433667936, "def solve_a89ab96a(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, ONE, x6)\n    return O"], [0.46350104901880707, "def solve_539a42de(I):\n    x1 = shape(I)\n    x2 = index(I, ORIGIN)\n    x3 = colorcount(I, ZERO)\n    x4 = decrement(x1)\n    x5 = positive(x3)\n    x6 = branch(x5, x4, x1)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = width(x7)\n    x9 = astuple(ONE, x8)\n    x10 = crop(x7, ORIGIN, x9)\n    x11 = vupscale(x10, x8)\n    x12 = dmirror(x11)\n    x13 = hconcat(x7, x11)\n    x14 = hconcat(x12, x7)\n    x15 = vconcat(x13, x14)\n    x16 = asobject(x15)\n    x17 = multiply(UNITY, TEN)\n    x18 = canvas(x2, x17)\n    O = paint(x18, x16)\n    return O"], [0.4653084736970792, "def solve_c20390de(I):\n    O = replace(I, ZERO, TWO)\n    return O"], [0.469992675486797, "def solve_3130e0e3(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, vline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = combine(x15, x16)\n    x18 = intersection(x15, x16)\n    x19 = difference(x17, x18)\n    O = fill(x14, THREE, x19)\n    return O"], [0.47457298944158244, "def solve_09c12e0c(I):\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = shape(x23)\n    x33 = canvas(x28, x32)\n    O = fill(x33, THREE, x31)\n    return O"], [0.477399406494354, "def solve_a49bfacd(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = mostcolor(I)\n    O = replace(x3, x4, ZERO)\n    return O"], [0.477399406494354, "def solve_d7aac698(I):\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    O = replace(x3, ONE, ZERO)\n    return O"], [0.4853084736970792, "def solve_3b476d40(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, vmirror, hmirror)\n    x9 = x8(x6)\n    x10 = branch(x7, leftmost, uppermost)\n    x11 = branch(x7, tojvec, toivec)\n    x12 = x10(x5)\n    x13 = x10(x6)\n    x14 = greater(x12, x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = x11(x16)\n    x18 = shape(x6)\n    x19 = multiply(x17, x18)\n    x20 = shift(x9, x19)\n    x21 = fill(I, THREE, x3)\n    O = paint(x21, x20)\n    return O"], [0.4853084736970792, "def solve_2d6e03b3(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, vmirror, hmirror)\n    x9 = x8(x6)\n    x10 = branch(x7, leftmost, uppermost)\n    x11 = branch(x7, tojvec, toivec)\n    x12 = x10(x5)\n    x13 = x10(x6)\n    x14 = greater(x12, x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = x11(x16)\n    x18 = shape(x6)\n    x19 = multiply(x17, x18)\n    x20 = shift(x9, x19)\n    x21 = fill(I, THREE, x3)\n    O = paint(x21, x20)\n    return O"], [0.4853084736970792, "def solve_3d4cd62c(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, vmirror, hmirror)\n    x9 = x8(x6)\n    x10 = branch(x7, leftmost, uppermost)\n    x11 = branch(x7, tojvec, toivec)\n    x12 = x10(x5)\n    x13 =x10(x6)\n    x14 = greater(x12, x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = x11(x16)\n    x18 = shape(x6)\n    x19 = multiply(x17, x18)\n    x20 = shift(x9, x19)\n    x21 = fill(I, THREE, x3)\n    O = paint(x21, x20)\n    return O"], [0.5202879261104161, "def solve_427db87f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = height(x2)\n    x4 = halve(x3)\n    x5 = width(x2)\n    x6 = halve(x5)\n    x7 = ulcorner(x2)\n    x8 = lrcorner(x2)\n    x9 = shape(I)\n    x10 = maximum(x9)\n    x11 = multiply(THREE, TEN)\n    x12 = interval(ZERO, x11, ONE)\n    x13 = rbind(multiply, x4)\n    x14 = apply(x13, x12)\n    x15 = rbind(multiply, x6)\n    x16 = apply(x15, x12)\n    x17 = pair(x14, x16)\n    x18 = rbind(add, x7)\n    x19 = apply(invert, x17)\n    x20 = apply(x18, x19)\n    x21 = rbind(add, x8)\n    x22 = apply(x21, x17)\n    x23 = pair(x20, x22)\n    x24 = mapply(box, x23)\n    O = fill(I, x1, x24)\n    return O"], [0.5235791174015115, "def solve_ae7b0a55(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5235791174015115, "def solve_070aff51(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5235791174015115, "def solve_7528b41c(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5235791174015115, "def solve_eaa8f01b(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5235791174015115, "def solve_070f3512(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5235791174015115, "def solve_abf671a3(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5235791174015115, "def solve_56b770bc(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5542587288414367, "def solve_cd5373c4(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5641693586048402, "def solve_e0c62ccf(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.5641693586048402, "def solve_88a00128(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.5806814241086746, "def solve_185fd8aa(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = equality(x1, ONE)\n    x3 = branch(x2, vsplit, hsplit)\n    x4 = x3(I, TWO)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = palette(x5)\n    x8 = palette(x6)\n    x9 = intersection(x7, x8)\n    x10 = first(x9)\n    x11 = shape(x5)\n    x12 = canvas(x10, x11)\n    x13 = ofcolor(x5, x10)\n    x14 = ofcolor(x6, x10)\n    x15 = intersection(x13, x14)\n    O = fill(x12, TWO, x15)\n    return O"], [0.6014849716551933, "def solve_12c267fd(I):\n    x1 = mostcolor(I)\n    x2 = frontiers(I)\n    x3 = sfilter(x2, vline)\n    x4 = difference(x2, x3)\n    x5 = astuple(x4, x3)\n    x6 = apply(size, x5)\n    x7 = increment(x6)\n    O = canvas(x1, x7)\n    return O"], [0.6406814241086747, "def solve_7fb621e4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = ofcolor(x1, ZERO)\n    x4 = ofcolor(x2, ZERO)\n    x5 = intersection(x3, x4)\n    x6 = shape(x1)\n    x7 = canvas(ZERO, x6)\n    O = fill(x7, THREE, x5)\n    return O"], [0.641276367065674, "def solve_41420e20(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.641276367065674, "def solve_9868614a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.641276367065674, "def solve_736837d0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.641276367065674, "def solve_5d3dc232(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.641276367065674, "def solve_870358ef(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.641276367065674, "def solve_42430b00(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.6460408141864922, "def solve_1207b8fa(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6460408141864922, "def solve_0e475294(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6460408141864922, "def solve_629ce595(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6460408141864922, "def solve_64fe43b9(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6460408141864922, "def solve_1175a4b6(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6460408141864922, "def solve_8969f02f(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6947586846156356, "def solve_6ba382f0(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.6947586846156356, "def solve_247b0302(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.6947586846156356, "def solve_556ddb48(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.6947586846156356, "def solve_187718e9(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.6947586846156356, "def solve_01e6a6b9(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.6947586846156356, "def solve_a4fad10f(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.6968040052377024, "def solve_dc6177ee(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.7670343166286868, "def solve_6165579d(I):\n    x1 = palette(I)\n    x2 = frontiers(I)\n    x3 = sfilter(x2, vline)\n    x4 = difference(x1, x3)\n    x5 = astuple(x4, x3)\n    x6 = apply(size, x5)\n    x7 = increment(x6)\n    O = canvas(ZERO, x7)\n    return O"], [0.7780474307942749, "def solve_6b6e8942(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(shoot, UNITY)\n    x3 = compose(x2, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    x6 = astuple(SIX, SIX)\n    x7 = canvas(ZERO, x6)\n    O = paint(x7, x5)\n    return O"], [0.7915392052312495, "def solve_39184cba(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_8c5da067(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_6e43647a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_890c43eb(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_2df22367(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_852d4cc7(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_9e86f565(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_8d28df06(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_4eda6654(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.8642031835623443, "def solve_900eec46(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = astuple(ONE, THREE)\n    x8 = size(x6)\n    x9 = order(x6, leftmost)\n    x10 = apply(color, x9)\n    x11 = rbind(canvas, UNITY)\n    x12 = apply(x11, x10)\n    x13 = merge(x12)\n    x14 = dmirror(x13)\n    x15 = subtract(NINE, x8)\n    x16 = astuple(ONE, x15)\n    x17 = mostcolor(I)\n    x18 = canvas(x17, x16)\n    x19 = hconcat(x14, x18)\n    x20 = hsplit(x19, THREE)\n    x21 = merge(x20)\n    x22 = crop(x21, ORIGIN, x7)\n    x23 = crop(x21, DOWN, x7)\n    x24 = crop(x21, TWO_BY_ZERO, x7)\n    x25 = vmirror(x23)\n    x26 = vconcat(x22, x25)\n    O = vconcat(x26, x24)\n    return O"], [0.9081403808721191, "def solve_5bd2a00f(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_e26d2c5d(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_bce5bbe4(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_75fe2e14(I):\n    x1 = mostcolor(I)\n    O = canvas(x1, THREE_BY_THREE)\n    return O"], [0.9081403808721191, "def solve_5ec36bb5(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9182807290875006, "def solve_25b103bb(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_1d3f67c1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_5c29d6b4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_cc6b1256(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_02507b7d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_6c48d8d6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_93633735(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_66832f92(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x24, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_645e4142(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_9b41408b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_8d319fd4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_b1cfede5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, F, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.9182807290875006, "def solve_7aa34db2(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, size)\n    O = subgrid(x2, I)\n    return O"], [0.9182807290875006, "def solve_37b0bc2f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, F, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.9182807290875006, "def solve_f0c03153(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.9182807290875006, "def solve_e4f6a1d0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_79af4174(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_6c16c983(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_7f37d928(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, T, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.9182807290875006, "def solve_7b94c557(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.9182807290875006, "def solve_5d301448(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_e3c704de(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_57ab93bd(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(equality, toindices, box)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = argmax(x3, x4)\n    x6 = fgpartition(I)\n    x7 = merge(x6)\n    x8 = difference(x7, x5)\n    x9 = subgrid(x5, I)\n    x10 = subgrid(x8, I)\n    x11 = height(x9)\n    x12 = subtract(x11, TWO)\n    x13 = height(x10)\n    x14 = divide(x12, x13)\n    x15 = width(x9)\n    x16 = subtract(x15, TWO)\n    x17 = width(x10)\n    x18 = divide(x16, x17)\n    x19 = hupscale(x10, x18)\n    x20 = vupscale(x19, x14)\n    x21 = asobject(x20)\n    x22 = shift(x21, UNITY)\n    O = paint(x9, x22)\n    return O"], [0.9183491285403049, "def solve_f695995e(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.9183491285403049, "def solve_96dec7e5(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.9183491285403049, "def solve_5fba575c(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.95, "def solve_9e49776d(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.95, "def solve_dc3280e1(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.95, "def solve_66877ab0(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.9683491285403051, "def solve_961115b4(I):\n    O = canvas(FIVE, TWO_BY_TWO)\n    return O"], [1.0, "def solve_b8ed7fd3(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = x2(I, TWO)\n    x4 = argmin(x3, numcolors)\n    x5 = argmax(x3, numcolors)\n    x6 = width(x5)\n    x7 = rbind(repeat, x6)\n    x8 = chain(dmirror, merge, x7)\n    x9 = upscale(x4, x6)\n    x10 = x8(x4)\n    x11 = x8(x10)\n    x12 = ofcolor(x11, ZERO)\n    O = fill(x9, ZERO, x12)\n    return O"], [1.0, "def solve_742af85d(I):\n    x1 = index(I, ORIGIN)\n    x2 = recolor(d511, x1)\n    x3 = apply(double, x2)\n    x4 = frontiers(x3)\n    x5 = merge(x4)\n    x6 = NEG_UNITY(x5)\n    x7 = shift(x5, x6)\n    x8 = recolor(x1, x7)\n    x9 = lbind(shift, x8)\n    x10 = mapply(x9, x3)\n    O = paint(I, x10)\n    return O"], [1.0, "def solve_addd792a(I):\n    x1 =alde4(I)\n    x2 = interval(ZERO, NINE, ONE)\n    x3 = apply(double, x2)\n    x4 = apply(width, x3)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x5, x6)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x5)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x2)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [1.0, "def solve_840e2fdb(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = compose(double, halve)\n    x5 = fork(equality, identity, x4)\n    x6 = compose(x5, last)\n    x7 = sfilter(x3, x6)\n    x8 = fork(recolor, first, x7)\n    x9 = mapply(x8, x4)\n    O = paint(I, x9)\n    return O"], [1.0, "def solve_6be248c7(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(4, x5)\n    return O"], [1.0, "def solve_7b041589(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = toindices(x14)\n    x26 = lbind(shift, x24)\n    x27 = rbind(multiply, x30)\n    x28 = chain(x27, x26, last)\n    x29 = mapply(x28, x29)\n    O = fill(x14, x13, x29)\n    return O"], [1.0, "def solve_46aed437(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_1fb938eb(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_b6e0ab4c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_11e4c715(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_89476efe(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_73051aeb(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = height(x2)\n    x4 = halve(x3)\n    x5 = width(x2)\n    x6 = halve(x5)\n    x7 = tojvec(x4)\n    x8 = tojvec(x6)\n    x9 = connect(x7, x8)\n    x10 = fill(I, x1, x9)\n    x11 = objects(x10, F, F, T)\n    x12 = argmax(x11, numcolors)\n    x13 = normalize(x12)\n    x14 = remove(x12, x11)\n    x15 = toindices(x14)\n    x16 = lbind(intersection, x15)\n    x17 = chain(halve, x16, toindices)\n    x18 = fork(recolor, color, x17)\n    x19 = mapply(x18, x14)\n    O = paint(x10, x19)\n    return O"], [1.0, "def solve_01ad0218(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = rbind(shoot, x24)\n    x26 = mapply(x25, x23)\n    x27 = fill(x6, x3, x26)\n    x28 = x27(x1)\n    O = fill(x27, x10, x28)\n    return O"], [1.0, "def solve_6f69b5f7(I):\n    x1 = shoot(ORIGIN, UNITY)\n    x2 = rbind(shoot, DOWN)\n    x3 = compose(x2, last)\n    x4 = fork(recolor, first, x3)\n    x5 = mapply(x4, x1)\n    O = paint(I, x5)\n    return O"], [1.0, "def solve_a614e52c(I):\n    x1 = argmin(x1, numcolors)\n    x2 = apply(first, x1)\n    x3 = dmirror(x2)\n    x4 = papply(pair, x2, x3)\n    x5 = lbind(shift, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [1.0, "def solve_80cbfc70(I):\n    x1 = objects(I, T, F, T)\n    x2 = asindices(I)\n    x3 = outbox(x2)\n    x4 = lbind(adjacent, x3)\n    x5 = compose(x4, initset)\n    x6 = rbind(extract, x5)\n    x7 = compose(x6, toindices)\n    x8 = rbind(compose, initset)\n    x9 = lbind(rbind, manhattan)\n    x10 = chain(x8, x9, initset)\n    x11 = lbind(lbind, greater)\n    x12 = chain(x11, halve, size)\n    x13 = compose(x10, x7)\n    x14 = fork(compose, x12, x13)\n    x15 = fork(sfilter, toindices, x14)\n    x16 = mapply(x15, x1)\n    O = fill(I, EIGHT, x16)\n    return O"], [1.0, "def solve_13dc3b85(I):\n    x1 = ofcolor(I, THREE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [1.0, "def solve_606019f6(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_3d4f9a38(I):\n    x1 = portrait(I)\n    x2 = branch(x1, partition, vsplit)\n    x3 = equality(x2, TWO)\n    x4 = branch(x3, hmirror, vmirror)\n    x5 = x4(I)\n    x6 = asobject(x5)\n    x7 = lbind(shift, x6)\n    x8 = height(x5)\n    x9 = chain(x7, halve, width)\n    x10 = x9(x2)\n    x11 = height(x5)\n    x12 = increment(x11)\n    x13 = interval(NEG_ONE, x12, ONE)\n    x14 = rbind(multiply, x5)\n    x15 = apply(x14, x13)\n    x16 = mapply(x12, x15)\n    x17 = paint(x5, x16)\n    x18 = repeat(x17, ONE)\n    O = x4(x18)\n    return O"], [1.0, "def solve_2e6a2d9f(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_9a21c7a4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_06f00ee0(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_1aa149f2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_1a0ecf96(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [1.0, "def solve_464525d6(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_6b553fe5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_00ddc610(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = hsplit(I, x2)\n    x4 = shape(x3)\n    x5 = maximum(x4)\n    x6 = branch(x5, ORIGIN, canvas)\n    x7 = connect(x5, x6)\n    x8 = height(x7)\n    x9 = width(x7)\n    x10 = matcher(identity, ZERO)\n    x11 = subtract(x10, x8)\n    x12 = matcher(last, x8)\n    x13 = subtract(x12, x9)\n    x14 = width(x3)\n    x15 = interval(ZERO, x14, ONE)\n    x16 = combine(x3, x13)\n    x17 = fill(x6, THREE, x16)\n    x18 = astuple(x11, x15)\n    x19 = canvas(ZERO, x18)\n    x20 = asobject(x19)\n    x21 = occurrences(x17, x20)\n    x22 = lbind(shift, x20)\n    x23 = mapply(x22, x21)\n    O = fill(x17, THREE, x23)\n    return O"], [1.0, "def solve_f5b13097(I):\n    x1 = fgpartition(I)\n    x2 = mapply(toindices, x1)\n    x3 = mapply(vfrontier, x2)\n    x4 = underfill(I, EIGHT, x3)\n    x5 = hconcat(x4, x4)\n    O = vconcat(x5, x5)\n    return O"], [1.0, "def solve_9b626daa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_377edd58(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, TWO)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 =ulcorner(x11)\n    x13 = subgrid(x11, I)\n    x14 = increment(x13)\n    x15 = asobject(x14)\n    x16 = matcher(first, x3)\n    x17 = compose(flip, x16)\n    x18 = sfilter(x15, x17)\n    x19 = hperiod(x18)\n    x20 = vperiod(x18)\n    x21 = fgpartition(x7)\n    x22 = merge(x21)\n    x23 = paint(x7, x22)\n    x24 = solve(shift, x17)\n    x25 = shift(x24, x18)\n    x26 = fork(combine, hfrontier, vfrontier)\n    x27 = mapply(x26, x23)\n    O = paint(x25, x27)\n    return O"], [1.0, "def solve_945fafb7(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, F)\n    x3 = Fgpartition(I)\n    x4 = compose(last, first)\n    x5 = power(last, TWO)\n    x6 = fork(connect, x4, x5)\n    x7 = fork(recolor, color, x6)\n    x8 = mapply(x7, x3)\n    O = paint(I, x8)\n    return O"], [1.0, "def solve_8c1f40ba(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_d7ea8b99(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, THREE)\n    x7 = canvas(x4, x6)\n    x8 = asobject(x3)\n    x9 = shift(x8, UNITY)\n    O = paint(x7, x9)\n    return O"], [1.0, "def solve_b8be1fa7(I):\n    x1 = replace(I, FOUR, ZERO)\n    x2 = branch(x1, dmirror, identity)\n    x3 = x2(I)\n    x4 = partition(x3)\n    x5 = matcher(color, ZERO)\n    x6 = compose(flip, x5)\n    x7 = extract(x4, x6)\n    x8 = initset(ORIGIN)\n    x9 = height(x7)\n    x10 = insert(ZERO, x8)\n    x11 = insert(x9, x10)\n    x12 = insert(x11, x12)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = dmirror(x4)\n    x16 = width(x7)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = pair(x17, x14)\n    x19 = mapply(neighbors, x18)\n    O = fill(x3, ONE, x19)\n    return O"], [1.0, "def solve_70cad8dc(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = merge(x1)\n    x5 = fill(I, NEG_ONE, x4)\n    x6 = shape(I)\n    x7 = canvas(NEG_ONE, x6)\n    x8 = hconcat(x5, x7)\n    x9 = objects(x8, F, F, T)\n    x10 = rbind(other, x3)\n    x11 = compose(x10, palette)\n    x12 = fork(astuple, x11, ulcorner)\n    x13 = apply(x12, x9)\n    x14 = merge(x9)\n    x15 = fill(I, x3, x14)\n    x16 = paint(x15, x13)\n    O = compress(x16)\n    return O"], [1.0, "def solve_e069d028(I):\n    x1 = switch(I, FIVE, EIGHT)\n    x2 = switch(x1, EIGHT, NEG_ONE)\n    x3 = switch(x2, EIGHT, NEG_ONE)\n    x4 = switch(x3, EIGHT, UNITY)\n    x5 = switch(x4, EIGHT, NEG_ONE)\n    x6 = combine(x1, x5)\n    O = fill(x4, THREE, x6)\n    return O"], [1.0, "def solve_cb6ead5e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = shape(I)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(I, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmin(x11, numcolors)\n    x13 = normalize(x12)\n    x14 = toindices(x13)\n    x15 = increment(x4)\n    x16 = increment(x15)\n    x17 = increment(x5)\n    x18 = increment(x17)\n    x19 = astuple(x16, x18)\n    x20 = lbind(shift, x14)\n    x21 = rbind(multiply, x19)\n    x22 = chain(x20, x21, last)\n    x23 = fork(recolor, first, x22)\n    x24 = normalize(x12)\n    x25 = mapply(x23, x24)\n    O = paint(x9, x25)\n    return O"], [1.0, "def solve_36fe7672(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_ae6e3c5c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_eee391e5(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_a3cbe197(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_04eef8bd(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_98f9d52f(I):\n    x1 = astuple(vsplit, hsplit)\n    x2 = rbind(rbind, TWO)\n    x3 = rbind(rapply, I)\n    x4 = initset(x2)\n    x5 = lbind(rapply, x4)\n    x6 = chain(first, x3, x5)\n    x7 = lbind(apply, numcolors)\n    x8 = compose(x7, x6)\n    x9 = matcher(x8, TWO_BY_TWO)\n    x10 = extract(x1, x9)\n    x11 = x10(I, TWO)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = palette(x12)\n    x15 = palette(x13)\n    x16 = intersection(x14, x15)\n    x17 = first(x16)\n    x18 = shape(x12)\n    x19 = canvas(x17, x18)\n    x20 = ofcolor(x12, x17)\n    x21 = ofcolor(x13, x17)\n    x22 = intersection(x20, x21)\n    O = fill(x19, TWO, x22)\n    return O"], [1.0, "def solve_985967fe(I):\n    x1 = rot270(I)\n    x2 = rot90(I)\n    x3 = rot270(x1)\n    x4 = astuple(x2, x3)\n    x5 = astuple(FOUR, EIGHT)\n    x6 = apply(decrement, x5)\n    x7 = apply(asobject, x4)\n    x8 = mpapply(shift, x7, x6)\n    O = paint(x1, x8)\n    return O"], [1.0, "def solve_865188b4(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = color(x13)\n    x15 = ofcolor(x7, x14)\n    x16 = ofcolor(x8, x14)\n    x17 = intersection(x15, x16)\n    x18 = canvas(x14, x9)\n    x19 = fill(x18, THREE, x17)\n    O = fill(x19, TWO, x15)\n    return O"], [1.0, "def solve_a75b263d(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = power(outbox, TWO)\n    x4 = mapply(x3, x2)\n    O = fill(I, FOUR, x4)\n    return O"], [1.0, "def solve_e0fb90ed(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_e811b287(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = astuple(TWO, FOUR)\n    x4 = rbind(contained, x3)\n    x5 = compose(x4, first)\n    x6 = rbind(sfilter, x5)\n    x7 = lbind(rbind, subtract)\n    x8 = lbind(occurrences, I)\n    x9 = lbind(lbind, shift)\n    x10 = compose(x7, ulcorner)\n    x11 = chain(x10, x6, normalize)\n    x12 = chain(x8, x6, normalize)\n    x13 = fork(apply, x11, x12)\n    x14 = compose(x9, normalize)\n    x15 = fork(mapply, x14, x13)\n    x16 = astuple(cmirror, dmirror)\n    x17 = astuple(hmirror, vmirror)\n    x18 = combine(x16, x17)\n    x19 = product(x18, x18)\n    x20 = fork(compose, first, last)\n    x21 = apply(x20, x19)\n    x22 = totuple(x21)\n    x23 = combine(x18, x22)\n    x24 = rapply(x23, x2)\n    x25 = mapply(x15, x24)\n    O = paint(I, x25)\n    return O"], [1.0, "def solve_601cb44e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_23a6f291(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_f4030b03(I):\n    x1 = fgpartition(I)\n    x2 = compose(dneighbors, center)\n    x3 = fork(difference, backdrop, x2)\n    x4 = fork(equality, toindices, x3)\n    x5 = matcher(size, FIVE)\n    x6 = fork(both, x4, x5)\n    x7 = extract(x1, x6)\n    x8 = color(x7)\n    x9 = merge(x1)\n    x10 = compose(hmirror, vmirror)\n    x11 = initset(x10)\n    x12 = insert(vmirror, x11)\n    x13 = insert(hmirror, x12)\n    x14 = rapply(x13, x9)\n    x15 = ulcorner(x7)\n    x16 = lbind(subtract, x15)\n    x17 = matcher(first, x8)\n    x18 = rbind(sfilter, x17)\n    x19 = chain(x16, ulcorner, x18)\n    x20 = fork(shift, identity, x19)\n    x21 = mapply(x20, x14)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_f4744c08(I):\n    x1 = rbind(b775, I)\n    x2 = compose( shape, asobject)\n    x3 = objects(I, T, F, F)\n    x4 = argmax(x3, size)\n    x5 = canvas(FIVE, x2)\n    O = paint(x5, x4)\n    return O"], [1.0, "def solve_c336cac7(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_d827ad72(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = merge(x2)\n    O = subgrid(x3, I)\n    return O"], [1.0, "def solve_19717294(I):\n    x1 = lbind(toobject, I)\n    x2 = lbind(shift, I)\n    x3 = compose(x2, T)\n    x4 = chain(x1, x3, decrement)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x1)\n    O = paint(I, x6)\n    return O"], [1.0, "def solve_acdcb61a(I):\n    x1 = ofcolor(I, TWO)\n    x2 = dalowermost(x1)\n    x3 = equality(x2, ZERO)\n    x4 = branch(x3, x1, x2)\n    x5 = fork(combine, vfrontier, hfrontier)\n    x6 = x5(x4)\n    x7 = underfill(I, EIGHT, x6)\n    x8 = fill(x7, TWO, x5)\n    O = fill(x8, ONE, x7)\n    return O"], [1.0, "def solve_1f3ea06e(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_3a63e057(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [1.0, "def solve_fe4e4b3f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_f393e6e9(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_8793aff7(I):\n    x1 = asindices(I)\n    x2 = objects(I, T, F, T)\n    x3 = fork(multiply, sign, identity)\n    x4 = lbind(apply, x3)\n    x5 = chain(even, maximum, x4)\n    x6 = lbind(sfilter, x1)\n    x7 = fork(add, first, last)\n    x8 = rbind(remove, x2)\n    x9 = compose(center, last)\n    x10 = fork(subtract, first, x9)\n    x11 = compose(x5, x10)\n    x12 = lbind(rbind, equality)\n    x13 = lbind(argmin, x2)\n    x14 = chain(x7, x4, x10)\n    x15 = lbind(lbind, astuple)\n    x16 = lbind(rbind, astuple)\n    x17 = lbind(compose, x11)\n    x18 = lbind(compose, x14)\n    x19 = compose(x18, x15)\n    x20 = compose(x18, x16)\n    x21 = compose(x13, x19)\n    x22 = rbind(compose, x21)\n    x23 = lbind(lbind, valmin)\n    x24 = rbind(compose, x19)\n    x25 = chain(x24, x23, x8)\n    x26 = lbind(fork, greater)\n    x27 = fork(x26, x25, x20)\n    x28 = chain(x6, x17, x16)\n    x29 = chain(x6, x22, x12)\n    x30 = fork(intersection, x28, x29)\n    x31 = compose(x6, x27)\n    x32 = fork(intersection, x30, x31)\n    x33 = fork(recolor, color, x32)\n    x34 = mapply(x33, x2)\n    O = paint(I, x34)\n    return O"], [1.0, "def solve_d2520127(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_d5b19de7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = difference(x2, x1)\n    x4 = fill(I, TWO, x3)\n    x5 = objects(x4, T, F, T)\n    x6 = color(x2)\n    x7 = palette(x5)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, x4)\n    x10 = argmax(x8, x9)\n    x11 = remove(x10, x8)\n    x12 = lbind(ofcolor, I)\n    x13 = mapply(x12, x11)\n    x14 = subgrid(x13, x4)\n    x15 = objects(x14, T, F, T)\n    x16 = colorfilter(x15, x6)\n    x17 = ofcolor(x14, x10)\n    x18 = subgrid(x17, x14)\n    x19 = mapply(dneighbors, x16)\n    x20 = mapply(ineighbors, x16)\n    x21 = fill(x14, toindices, x19)\n    x82 = fill(x21, x10, x20)\n    x83 = ofcolor(x18, x6)\n    x84 = fill(x82, x10, x83)\n    x85 = ofcolor(x84, x11)\n    x86 = mapply(ineighbors, x21)\n    x87 = mapply(ineighbors, x22)\n    x88 = fill(x85, x11, x68)\n    O = fill(x88, x10, x67)\n    return O"], [1.0, "def solve_3f139ab6(I):\n    x1 = partition(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmin(x1, size)\n    x4 = rbind(adjacent, x3)\n    x5 = remove(x3, x1)\n    x6 = extract(x5, x4)\n    x7 = color(x6)\n    x8 = rbind(contained, x7)\n    x9 = compose(x8, color)\n    x10 = sfilter(x2, x9)\n    x11 = size(x10)\n    x12 = increment(x11)\n    x13 = interval(ZERO, x12, THREE)\n    x14 = apply(tojvec, x13)\n    x15 = fork(shift, identity, mostcolor)\n    x16 = mapply(x15, x14)\n    x17 = interval(adjacent,770, ONE)\n    x18 = pair(x17, x16)\n    x19 = compose(invert, first)\n    x20 = order(x18, x19)\n    x21 = apply(last, x20)\n    x22 = mpapply(recolor, x21, x13)\n    O = paint(I, x22)\n    return O"], [1.0, "def solve_9882237f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_c1951c89(I):\n    O = fill(I, EIGHT, x2)\n    return O"], [1.0, "def solve_8cc80e52(I):\n    x1 = partition(I)\n    x2 = compose(maximum, shape)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(colorcount, I)\n    x8 = argmin(x6, x7)\n    x9 = mostcolor(I)\n    x10 = shape(I)\n    x11 = increment(x10)\n    x12 = increment(x11)\n    x13 = canvas(x9, x12)\n    x14 = asobject(I)\n    x15 = shift(x14, UNITY)\n    x16 = paint(x13, x15)\n    x17 = repeat(identity, ONE)\n    x18 = astuple(cmirror, dmirror)\n    x19 = astuple(hmirror, vmirror)\n    x20 = combine(x18, x19)\n    x21 = combine(x17, x20)\n    x22 = fork(compose, first, last)\n    x23 = product(x21, x21)\n    x24 = apply(x22, x23)\n    x25 = ofcolor(x16, x4)\n    x26 = intersection(x15, x25)\n    x27 = canvas(x9, x10)\n    O = fill(x27, x4, x27)\n    return O"], [1.0, "def solve_e39398e2(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = matcher(color, x4)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x2, x6)\n    x8 = difference(x2, x7)\n    x9 = fill(I, TWO, x8)\n    x10 = lbind(recolor, rbind)\n    x11 = compose(x10, initset)\n    x12 = chain(x11, mostcolor, x11)\n    x13 = recolor(x4, x7)\n    x14 = objects(x9, T, T, T)\n    x15 = sfilter(x14, x13)\n    x16 = difference(x14, x15)\n    x17 = toindices(x15)\n    x18 = fork(combine, hfrontier, vfrontier)\n    x19 = mapply(x18, x16)\n    x20 = paint(x9, x19)\n    O = x11(x20)\n    return O"], [1.0, "def solve_914888a5(I):\n    x1 = colorcount(I, ZERO)\n    x2 = subtract(NINE, x1)\n    O = upscale(I, x2)\n    return O"], [1.0, "def solve_4c75b029(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = shape(x3)\n    x5 = halve(x4)\n    x6 = hupscale(x3, x5)\n    x7 =(I, x6)\n    x8 = lefthalf(x7)\n    O = tophalf(x8)\n    return O"], [1.0, "def solve_1b4c2c49(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = fgpartition(x1)\n    x3 = compose(increment, first)\n    x4 = fork(greater, last, x3)\n    x5 = size(x2)\n    x6 = interval(ZERO, x5, ONE)\n    x7 = rbind(contained, x6)\n    x8 = compose(x7, first)\n    x9 = interval(ZERO, x5, ONE)\n    x10 = pair(x4, x9)\n    x11 = sfilter(x10, x8)\n    x12 = mapply(first, x11)\n    O = fill(x1, FOUR, x12)\n    return O"], [1.0, "def solve_f8ad0d51(I):\n    x1 = trim(I)\n    x2 = decrement(x1)\n    O = upscale(x3, x2)\n    return O"], [1.0, "def solve_a4eacf40(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = toobject(x2, I)\n    return O"], [1.0, "def solve_26545380(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [1.0, "def solve_2e7e7fd3(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = extract(x2, x4)\n    x6 = width(I)\n    x7 = subtract(x6, TWO)\n    x8 = multiply(x7, THREE)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = interval(ZERO, x8, ONE)\n    x11 = lbind(multiply, x5)\n    x12 = apply(x11, x9)\n    x13 = lbind(shift, x5)\n    x14 = mapply(x13, x12)\n    x15 = astuple(x6, x14)\n    x16 = canvas(ZERO, x15)\n    x17 = asobject(I)\n    x18 = shift(x17, x16)\n    x19 = height(I)\n    x20 = lbind(shift, x16)\n    x21 = mapply(x20, x18)\n    x22 = paint(x16, x21)\n    x23 = partition(x22)\n    x24 = lbind(shift, x13)\n    x25 = mapply(x24, x23)\n    x26 = paint(x22, x25)\n    x27 =Documentmirror(x24)\n    x28 = astuple(x6, x14)\n    x29 = shift(x27, x28)\n    O = paint(x29, x29)\n    return O"], [1.0, "def solve_0495eae9(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fork(recolor, color, x11)\n    return O"], [1.0, "def solve_abc3ee14(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x77)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [1.0, "def solve_c6b36782(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [1.0, "def solve_baac5602(I):\n    x1 = remove(I, x2)\n    x2 = lbind(contained, ONE)\n    x3 = chain(flip, x2, shape)\n    x4 = sfilter(x1, x3)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = fork(multiply, height, width)\n    x8 = argmin(x6, x7)\n    O = x6(x8)\n    return O"], [1.0, "def solve_696f2028(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_beb9c07a(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = matcher(x12, ZERO)\n    x17 = extract(x7, x16)\n    x18 = height(x17)\n    x19 = rbind(ofcolor, EIGHT)\n    x20 = compose(positive, size)\n    x21 = rbind(sfilter, x20)\n    x22 = chain(x17, x21, dmirror)\n    x23 = multiply(x12, UNITY)\n    x24 = power(x22, x23)\n    x25 = x24(I)\n    x26 = objects(x25, T, F, T)\n    x27 = colorfilter(x26, ZERO)\n    x28 = rbind(canvas, T88)\n    x29 = apply(x28, x27)\n    x30 = merge(x29)\n    x31 = rbind( OFcolor, EIGHT)\n    x32 = chain(x31, x30, x3)\n    x33 = rbind(ofcolor, EIGHT)\n    x34 = fork(recolor, x33, x32)\n    x35 = mapply(x34, x21)\n    x36 = paint(x25, x35)\n    O = x10(x36)\n    return O"], [1.0, "def solve_f3da74d8(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_3af34b1c(I):\n    x1 = astuple(identity, identity)\n    x2 = astuple(rot90, rot270)\n    x3 = astuple(x1, x2)\n    x4 = astuple(rot180, rot180)\n    x5 = astuple(rot270, rot90)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = leastcolor(I)\n    x9 = repeat(x8, ONE)\n    x10 = rbind(rapply, I)\n    x11 = chain(x10, initset, first)\n    x12 = compose(first, x11)\n    x13 = chain(dedupe, first, x12)\n    x14 = matcher(x13, x9)\n    x15 = extract(x7, x14)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = x16(I)\n    x19 = ofcolor(x18, x8)\n    x20 = height(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = lbind(astuple, x20)\n    x23 = apply(x22, x21)\n    x24 = rbind(shoot, DOWN)\n    x25 = mapply(x24, x23)\n    x26 = fill(x18, FOUR, x25)\n    x27 = astuple(x20, x20)\n    x28 = canvas(ZERO, x27)\n    x29 = asindices(x28)\n    x30 = shift(x29, x27)\n    x31 = shape(I)\n    x32 = maximum(x31)\n    x33 = lbind(shift, x30)\n    x34 = interval(ZERO, x32, x20)\n    x35 = pair(x34, x34)\n    x36 = mapply(x33, x35)\n    x37 = fill(x26, TWO, x36)\n    O = x17(x37)\n    return O"], [1.0, "def solve_45970bc8(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_d4935307(I):\n    x1 = rbind(bordering, I)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x2, x2)\n    x4 = fork(equality, toindices, box)\n    x5 = sfilter(x3, x4)\n    x6 = mfilter(x5, x2)\n    O = fill(I, T, x6)\n    return O"], [1.0, "def solve_1a84fb2d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_31c504b7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_64572e1e(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = add(TWO, x2)\n    x4 = canvas(x1, x3)\n    x5 = apply(first, x4)\n    x6 = asindices(x5)\n    x7 = shift(x6, UNITY)\n    x8 = shape(x7)\n    x9 = halve(x8)\n    x10 = increment(x9)\n    x11 = interval(ZERO, x10, ONE)\n    x12 = lbind(shift, x7)\n    x13 = rbind(multiply, x4)\n    x14 = apply(x13, x11)\n    x15 = mapply(x12, x14)\n    O = paint(x4, x15)\n    return O"], [1.0, "def solve_b6ca3d6c(I):\n    x1 = index(I, ORIGIN)\n    x2 = box(I)\n    O = fill(I, x1, x2)\n    return O"], [1.0, "def solve_aebe6f9c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_0e1d4e9d(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [1.0, "def solve_bfc33641(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = leastcolor(x1)\n    x4 = leastcolor(x2)\n    x5 = ofcolor(I, x3)\n    x6 = center(x5)\n    x7 = ofcolor(I, x4)\n    x8 = center(x7)\n    x9 = height(I)\n    x10 = width(I)\n    x11 = hfrontier(x6)\n    x12 = fill(I, x3, x11)\n    x13 = hfrontier(x8)\n    x14 = fill(x12, x4, x13)\n    x15 = decrement(x10)\n    x16 = decrement(x9)\n    x17 = halve(x9)\n    x18 = tojvec(x15)\n    x19 = connect(ORIGIN, x18)\n    x20 = fill(x14, x3, x19)\n    x21 = toivec(x16)\n    x22 = astuple(x16, x15)\n    x23 = connect(x21, x22)\n    x24 = fill(x20, x4, x23)\n    x25 = decrement(x17)\n    x26 = toivec(x25)\n    x27 = connect(ORIGIN, x26)\n    x28 = fill(x24, x3, x27)\n    x29 = tojvec(x15)\n    x30 = decrement(x17)\n    x31 = astuple(x30, x15)\n    x32 = connect(x29, x31)\n    x33 = fill(x28, x3, x32)\n    x34 = equality(x17, x12)\n    x41 = branch(x34, x22, x24)\n    O = canvas(x31, x41)\n    return O"], [1.0, "def solve_9ecddb3b(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = shape(I)\n    x3 = multiply(x2, x2)\n    x4 = canvas(ZERO, x3)\n    x5 = rbind(multiply, x2)\n    x6 = apply(x5, x1)\n    x7 = asobject(I)\n    x8 = lbind(shift, x7)\n    x9 = mapply(x8, x6)\n    O = paint(x4, x9)\n    return O"], [1.0, "def solve_bd4d6cdd(I):\n    x1 = compose(positive, size)\n    x2 = rbind(sfilter, hline)\n    x3 = chain(x1, x2, frontiers)\n    x4 = chain(size, dedupe, first)\n    x5 = chain(size, dedupe, last)\n    x6 = fork(greater, x4, x5)\n    x7 = fork(both, x3, x6)\n    x8 = astuple(identity, rot90)\n    x9 = astuple(rot180, rot270)\n    x10 = combine(x8, x9)\n    x11 = astuple(identity, rot270)\n    x12 = astuple(rot180, rot90)\n    x13 = combine(x11, x12)\n    x14 = pair(x10, x13)\n    x15 = rbind(rapply, I)\n    x16 = compose(initset, first)\n    x17 = chain(first, x15, x16)\n    x18 = compose(x7, x17)\n    x19 = extract(x14, x18)\n    x20 = first(x19)\n    x21 = last(x19)\n    x22 = x20(I)\n    x23 = first(x22)\n    x24 = repeat(x23, ONE)\n    x25 = dmirror(x24)\n    x26 = width(x22)\n    x27 = hupscale(x25, x26)\n    x28 = asobject(x27)\n    x29 = height(x22)\n    x30 = height(x28)\n    x31 = interval(ZERO, x29, x30)\n    x32 = lbind(shift, x28)\n    x33 = apply(toivec, x31)\n    x34 = mapply(x32, x33)\n    x35 = shift(x34, TWO_BY_ZERO)\n    x36 = paint(x22, x35)\n    O = x21(x36)\n    return O"], [1.0, "def solve_6d23468b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_dc3a0aba(I):\n    x1 = astuple(SIX, THREE)\n    x2 = dmirror(I)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    x14 = apply(x4, x13)\n    x15 = ofcolor(I, ZERO)\n    x16 = asindices(I)\n    x17 = shoot(ORIGIN, x16)\n    x18 = intersection(x15, x17)\n    x19 = fill(I, ZERO, x18)\n    O = replace(x19, FIVE, ZERO)\n    return O"], [1.0, "def solve_8fa45371(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_2591893f(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_c8a2b041(I):\n    x1 = subgrid(I, I)\n    O = upscale(x1, THREE)\n    return O"], [1.0, "def solve_2e9f12c9(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = matcher(size, TWO)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = other(x8, x1)\n    x10 = replace(I, x6, x1)\n    x11 = ofcolor(I, x6)\n    x12 = repeat(x9, ONE)\n    x13 = rbind(equality, x12)\n    x14 = first(I)\n    x15 = dedupe(x14)\n    x16 = x13(x15)\n    x17 = last(x15)\n    x18 = dedupe(x17)\n    x19 = x13(x18)\n    x20 = dmirror(I)\n    x21 = first(x20)\n    x22 = dedupe(x21)\n    x23 = x13(x22)\n    x24 = dmirror(I)\n    x25 = last(x24)\n    x26 = dedupe(x25)\n    x27 = x13(x26)\n    x28 = apply(last, x11)\n    x29 = apply(first, x11)\n    x30 = either(x16, x19)\n    x31 = branch(x30, x28, x29)\n    x32 = branch(x30, lbind, rbind)\n    x33 = lbind(x32, astuple)\n    x34 = branch(x30, height, width)\n    x35 = x34(I)\n    x36 = decrement(x35)\n    x37 = either(x16, x23)\n    x38 = branch(x37, ZERO, x36)\n    x39 = x33(x38)\n    x40 = apply(x39, x31)\n    O = fill(x10, x6, x40)\n    return O"], [1.0, "def solve_78faa7f4(I):\n    x1 =feca360(I)\n    x2 = asobject(I)\n    x3 = matcher(first, ZERO)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = lbind(shift, x5)\n    x7 = mapply(x6, x2)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_47be22b3(I):\n    x1 = switch(I, TWO, NEG_ONE)\n    x2 = switch(x1, THREE, FOUR)\n    x3 = switch(x2, EIGHT, NINE)\n    x4 = switch(x3, ONE, FOUR)\n    x5 = astuple(TEN, TEN)\n    x6 = canvas(ZERO, x5)\n    x7 = asindices(x6)\n    x8 = paint(x6, x7)\n    x9 = matcher(first, THREE)\n    x10 = rbind(sfilter, x9)\n    x11 = rbind(compose, initset)\n    x12 = lbind(rbind, manhattan)\n    x13 = chain(x11, x12, initset)\n    x14 = chain(x10, x13,7776)\n    x15 = apply(x14, x5)\n    x16 = fork(connect, ulcorner, lrcorner)\n    x17 = fork(connect, llcorner, urcorner)\n    x18 = fork(combine, x16, x17)\n    x19 = mapply(x18, x15)\n    O = fill(x8, EIGHT, x19)\n    return O"], [1.0, "def solve_0c1b95c0(I):\n    x1 = fgpartition(I)\n    x2 = compose(dneighbors, center)\n    x3 = fork(difference, backdrop, x2)\n    x4 = fork(equality, toindices, x3)\n    x5 = matcher(size, FIVE)\n    x6 = fork(both, x4, x5)\n    x7 = extract(x1, x6)\n    x8 = color(x7)\n    x9 = merge(x1)\n    x10 = compose(hmirror, vmirror)\n    x11 = initset(x10)\n    x12 = insert(vmirror, x11)\n    x13 = insert(hmirror, x12)\n    x14 = rapply(x13, x9)\n    x15 = ulcorner(x7)\n    x16 = lbind(subtract, x15)\n    x17 = matcher(first, x8)\n    x18 = rbind(sfilter, x17)\n    x19 = chain(x16, ulcorner, x18)\n    x20 = fork(shift, identity, x19)\n    x21 = mapply(x20, x14)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_8ca81ad9(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_1aef2380(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = height(x2)\n    x4 = halve(x3)\n    x5 = width(x2)\n    x6 = halve(x5)\n    x7 = ulcorner(x2)\n    x8 = lrcorner(x2)\n    x9 = shape(I)\n    x10 = maximum(x9)\n    x11 = multiply(THREE, TEN)\n    x12 = interval(ONE, x11, ONE)\n    x13 = rbind(multiply, x4)\n    x14 = apply(x13, x12)\n    x15 = rbind(multiply, x6)\n    x16 = apply(x15, x12)\n    x17 = pair(x14, x16)\n    x18 = rbind(add, x7)\n    x19 = apply(invert, x17)\n    x20 = apply(x18, x19)\n    x21 = rbind(add, x8)\n    x22 = apply(x21, x17)\n    x23 = pair(x20, x22)\n    x24 = papply(box, x23)\n    O = fill(I, x1, x24)\n    return O"], [1.0, "def solve_5db94dc5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = extract(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = last(x12)\n    x21 = lbind(subtract, x20)\n    x22 = increment(x19)\n    x23 = rbind(subtract, x22)\n    x24 = chain(x21, x23, decrement)\n    x25 = lbind(shift, x1)\n    x26 = mapply(x25, x18)\n    O = fill(I, x3, x26)\n    return O"], [1.0, "def solve_2256a6d2(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_fb6a737b(I):\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = mfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = mfilter(x4, x2)\n    x6 = shape(I)\n    x7 = add(TWO, x6)\n    x8 = canvas(ZERO, x7)\n    x9 = asobject(I)\n    x10 = shift(x9, UNITY)\n    x11 = paint(x8, x10)\n    x12 = objects(x11, T, F, T)\n    x13 = apply(color, x12)\n    x14 = rbind(contained, x13)\n    x15 = compose(minimum, x14)\n    x16 = sfilter(x1, x15)\n    x17 = paint(x11, x16)\n    x18 = objects(x11, T, F, T)\n    x19 = merge(x18)\n    x20 = cover(x17, x19)\n    x21 = paint(x20, x16)\n    O = compress(x21)\n    return O"], [1.0, "def solve_4b143fdc(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_8bb47b66(I):\n    x1 = fgpartition(I)\n    x2 = argmax(x1, size)\n    x3 = height(x2)\n    x4 = width(x2)\n    x5 = neighbors(ORIGIN)\n    x6 = toindices(x2)\n    x7 = lbind(shift, x6)\n    x8 = height(I)\n    x9 = divide(x8, x3)\n    x10 = width(I)\n    x11 = divide(x10, x4)\n    x12 = astuple(x9, x11)\n    x13 = maximum(x12)\n    x14 = increment(x13)\n    x15 = interval(ONE, x14, ONE)\n    x16 = astuple(x3, x4)\n    x17 = lbind(multiply, x16)\n    x18 = compose(crement, x17)\n    x19 = lbind(mapply, x7)\n    x20 = rbind(apply, x15)\n    x21 = lbind(rbind, multiply)\n    x22 = compose(x21, x18)\n    x23 = chain(x19, x20, x22)\n    x24 = rbind(toobject, I)\n    x25 = compose(x7, x18)\n    x26 = chain(palette, x24, x25)\n    x27 = mostcolor(I)\n    x28 = rbind(equality, x27)\n    x29 = rbind(argmin, x28)\n    x30 = compose(x29, x26)\n    x31 = fork(recolor, x30, x23)\n    x32 = mapply(x31, x5)\n    O = paint(I, x32)\n    return O"], [1.0, "def solve_a0f497d4(I):\n    x1 = ofcolor(I, SIX)\n    x2 = recolor(ONE, x1)\n    x3 = power(decrement, TWO)\n    x4 = x3(x2)\n    x5 = on108(x4, THREE)\n    x6 = matcher(size, dedupe)\n    x7 = x6(x5)\n    x8 = rbind(subgrid, I)\n    x9 = apply(x8, x5)\n    x10 = dedupe(x9)\n    x11 = lbind(fork, shift)\n    x12 = lbind(x11, x12)\n    x13 = lbind(rbind, rapply)\n    x14 = compose(x12, x13)\n    x15 = lbind(compose, x5)\n    x16 = x15(x14)\n    x17 = mapply(x16, x10)\n    O = underfill(I, EIGHT, x17)\n    return O"], [1.0, "def solve_8d9e4de7(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_407adb1d(I):\n    x1 = lbind(recolor, EIGHT)\n    x2 = compose(x1, delta)\n    x3 = fork(paint, identity, x2)\n    x4 = apply(x3, I)\n    x5 = astuple(SIX, dmirror)\n    x6 = astuple(UNITY, papply)\n    x7 = initset(x6)\n    x8 = equality(x5, x7)\n    x9 = branch(x8, identity, x4)\n    x10 = x9(I)\n    x11 = objects(x10, T, F, T)\n    x12 = colorfilter(x11, EIGHT)\n    x13 = difference(x11, x12)\n    x14 =argmax(x13, size)\n    x15 = color(x14)\n    x16 = subgrid(x14, x10)\n    x17 = trim(x16)\n    x18 = lefthalf(x17)\n    x19 = vmirror(x18)\n    x20 = astuple(x15, x19)\n    x21 = double(x20)\n    x22 = interval(ZERO, x21, ONE)\n    x23 = apply(tojvec, x22)\n    x24 = lbind(shift, x18)\n    x25 = mapply(x24, x23)\n    x26 = fill(x10, EIGHT, x25)\n    x27 = fill(x26, FOUR, x24)\n    O = x9(x27)\n    return O"], [1.0, "def solve_d14f24ae(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_fdd67056(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_db548893(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = fork(recolor, color, backdrop)\n    x5 = apply(x4, x1)\n    x6 = mfilter(x5, hline)\n    x7 = mfilter(x5, vline)\n    x8 = size(x6)\n    x9 = size(x7)\n    x10 = greater(x8, x9)\n    x11 = branch(x10, vsplit, hsplit)\n    x12 = x11(I, TWO)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = palette(x13)\n    x16 = merge(x15)\n    x17 = palette(x14)\n    x18 = intersection(x16, x17)\n    x19 = difference(x16, x18)\n    x20 = first(x19)\n    x21 = shape(x13)\n    x22 = canvas(x20, x21)\n    x23 = ofcolor(x13, x10)\n    x24 = ofcolor(x14, x10)\n    x25 = intersection(x23, x24)\n    O = fill(x22, TWO, x25)\n    return O"], [1.0, "def solve_3d56e398(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_5b6751ac(I):\n    x1 = objects(I, T, F, T)\n    x2 = height(x1)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, le, tophalf)\n    x5 = branch(x3, righthalf, x4)\n    x6 = width(x5)\n    x7 = equality(x6, ONE)\n    x8 = branch(x7, ulcorner, last)\n    x9 = x8(x5)\n    x10 = x8(x10)\n    x11 = gravitate(x9, x11)\n    x12 = shape(x11)\n    x13 = multiply(x12, x4)\n    x14 = canvas(ZERO, x13)\n    x15 = ofcolor(x14, ZERO)\n    x16 = rbind(multiply, x14)\n    x17 = apply(x16, x15)\n    x18 = lbind(shift, x15)\n    x19 = mapply(x18, x17)\n    O = fill(x14, ZERO, x19)\n    return O"], [1.0, "def solve_8ef6330b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = fork(combine, vfrontier, hfrontier)\n    x16 = x15(x14)\n    x17 = mapply(x16, x13)\n    x18 =eepply(x17, x16)\n    x19 = hmirror(x18)\n    x20 = x16(x19)\n    x21 = replace(x20, x3, x5)\n    x22 = x15(x21)\n    O = compress(x22)\n    return O"], [1.0, "def solve_a9288d1a(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, least)\n    x9 = compose(flip, x8)\n    x10 = extract(x7, x9)\n    x11 = remove(x10, x7)\n    x12 = merge(x11)\n    x13 = mostcolor(x12)\n    x14 = partition(x12)\n    x15 = ofcolor(x12, x13)\n    x16 = subgrid(x15, x12)\n    x17 = difference(x16, x15)\n    x18 = hmirror(x17)\n    x19 = replace(x18, x13, x12)\n    x20 = subgrid(x15, x19)\n    x21 = asobject(x20)\n    x22 = occurrences(x19, x21)\n    x23 = size(x22)\n    x24 = positive(x23)\n    x25 = branch(x24,hmirror, vmirror)\n    x26 = x25(x20)\n    x27 = ofcolor(x26, x13)\n    x28 = subgrid(x27, x20)\n    x29 = ofcolor(x28, x13)\n    x30 = ulcorner(x27)\n    x31 = invert(x30)\n    x32 = lrcorner(x27)\n    x33 = increment(x31)\n    x34 = shift(x29, x33)\n    x35 = fork(connect, last, last)\n    x36 = mapply(x35, x22)\n    O = fill(x14, x13, x36)\n    return O"], [1.0, "def solve_4c46e58c(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_461fe4c6(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_c6820454(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_01a1ea2e(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_c638c946(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = apply(normalize, x2)\n    x4 = astuple(NINE, NINE)\n    x5 = canvas(FIVE, x4)\n    x6 = asindices(x5)\n    x7 = box(x6)\n    x8 = center(x6)\n    x9 = lbind(contained, ZERO)\n    x10 = rbind(subtract, x8)\n    x11 = compose(x9, x10)\n    x12 = chain(outbox, outbox, initset)\n    x13 = corners(x6)\n    x14 = mapply(x12, x13)\n    x15 = difference(x7, x14)\n    x16 = inbox(x7)\n    x17 = sfilter(x16, x11)\n    x18 = combine(x15, x17)\n    x19 = fill(x5, ONE, x18)\n    x20 = objects(x19, T, F, T)\n    x21 = apply(toindices, x20)\n    x22 = lbind(matcher, normalize)\n    x23 = lbind(extract, x21)\n    x24 = chain(ulcorner, x23, x22)\n    x25 = chain(invert, ulcorner, x24)\n    x26 = fork(shift, identity, x25)\n    x27 = mapply(x26, x3)\n    O = paint(x5, x27)\n    return O"], [1.0, "def solve_3072af49(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, x5)\n    x8 = rbind(x7, x6)\n    x9 = compose(x8, x7)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [1.0, "def solve_70fb6a99(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dneighbors)\n    x9 = fork(shift, x8, x6)\n    x10 = fork(combine, x9, x3)\n    x11 = mapply(x10, x1)\n    O = paint(I, x11)\n    return O"], [1.1, "def solve_36c306d0(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_19abcbdd(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = palette(I)\n    x7 = compose(x4, x5)\n    x8 = argmin(x6, x7)\n    x9 = colorcount(I, x8)\n    x10 = positive(x9)\n    x11 = branch(x10, dmirror, identity)\n    x12 = x11(I)\n    x13 = x8(x12)\n    x14 = ofcolor(x13, x8)\n    x15 = subgrid(x14, x13)\n    x16 = adaptation(x15, x13)\n    x17 = mostcolor(x16)\n    x18 = ofcolor(x x x17)\n    x19 = hmirror(x18)\n    x20 = asobject(x19)\n    x21 = matcher(first, x17)\n    x22 = compose(flip, x21)\n    x23 = sfilter(x20, x22)\n    x24 = partition(x12)\n    x25 = sizefilter(x24, ONE)\n    x26 = apply(merge, x25)\n    x27 = argmin(x26, last)\n    x28 = rbind(subgrid, x13)\n    x29 = apply(x28, x27)\n    x30 = rbind(colorcount, x17)\n    x31 = argmin(x29, x30)\n    x32 = rightmost(x31)\n    x33 = rightmost(x28)\n    x34 = width(x33)\n    x35 =rightmost(x28)\n    x36 = leftmost(x34)\n    x37 = subtract(x32, x35)\n    x38 = decrement(x37)\n    x39 = leftmost(x33)\n    x40 = rightmost(x33)\n    x41 = subtract(x39, x40)\n    x42 = astuple(x37, x"], [1.1, "def solve_a03a27cd(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = astuple(x34, x37)\n    x39 = add(x38, UNITY)\n    x40 = initset(x39)\n    x41 = backdrop(x40)\n    "], [1.1, "def solve_3e57783e(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = subtract(x11, TWO)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract("], [1.1, "def solve_204764b3(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = compose(x4, size)\n    x6 = sfilter(x1, x5)\n    x7 = fork(pair, x4, identity)\n    x8 = chain(x1, x7, dmirror)\n    x9 = maximum(x6)\n    x10 = identity(I)\n    x11 = branch(x10,130, x9)\n    x12 = x11(I)\n    x13 = x11(x12)\n    x14 = argmin(x13, x7)\n    x15 = argmax(x13, x7)\n    x16 = width(x12)\n    x17 = decrement(x16)\n    x18 = tojvec(x17)\n    x19 = height(x12)\n    x20 = decrement(x19)\n    x21 = interval(x17, x20, ONE)\n    x22 = lbind(apply, last)\n    x23 = compose(x22, first)\n    x24 = rbind(sfilter, x23)\n    x25 = chain(positive, size, x24)\n    x26 = sfilter(x21, x25)\n    x27 = maximum(x26)\n    x28 = increment(x27)\n    x29 = interval(ZERO, x28, ONE)\n    x30 = lbind( pair, x22)\n    x31 = lbind(pair, x25)\n    x32 = compose(x30, x31)\n    x33 = apply(x32, x29)\n    x34 = lbind(sfilter, x33)\n    x35 = lbind(matcher, first)\n    x36 = compose(x34, x35)\n    x37 = chain(size, x33, x36)\n    x38 = apply(x37, x29)\n    x39 = lbind(colorcount, x12)\n    x40 = valmax(x38, x39)\n    x41 = mat"], [1.1, "def solve_f1ba0082(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_f4119771(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = combine(x25, x26)\n    x28 = intersection(x27, x23)\n    x29 = first(x28)\n    x30 = ofcolor(x23, x29)\n    x31 = ofcolor(x24, x29)\n    x32 = intersection(x30, x31)\n    x33 = first(x32)\n    x34 = matcher(first, x29)\n    x35 = compose(flip, x34)\n    x36 = sfilter(x33, x35)\n    x37 = difference(x21, x36)\n    x38 = objects(x24, T, F, T)\n    x39 = colorfilter(x38, x29)"], [1.1, "def solve_f66653b4(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = compose(flip, x33)\n    x35 = sfilter(x32, x34)\n    x36 = difference(x32, x35)\n    x37 = fill(x23, x8, x31)\n    x38 = fill(x37, x42, x36)\n    x39 = fork(connect, identity, ul"], [1.1, "def solve_aae888ec(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = ONE00000000\n    001044404900\n    31000404413\n    \"\"\"\n    x2 = trim(I)\n    x3 = decrement(x2)\n    x4 = tojvec(x3)\n    x5 = connect(ORIGIN, x4)\n    x6 = height(I)\n    x7 = equality(x6, ZERO)\n    x8 = branch(x7, x5, x6)\n    x9 = width(I)\n    x10 = decrement(x9)\n    x11 = tojvec(x10)\n    x12 = connect(x11, x9)\n    x13 = height(I)\n    x14 = decrement(x13)\n    x15 = toivec(x14)\n    x16 = connect(x15, x12)\n    x17 = width(I)\n    x18 = decrement(x17)\n    x19 = tojvec(x18)\n    x20 = connect(x19, x12)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = toivec(x22)\n    x24 = connect(x23, x18)\n    x25 = width(I)\n    x26 = decrement(x25)\n    x27 = tojvec(x26)\n    x28 = shape(I)\n    x29 = decrement(x28)\n    x30 = connect(x27, x29)\n    x31 = height(I)\n    x32 = decrement(x31)\n    x33 = toivec(x32)\n    x34 = shape(I)\n    x35 = decrement(x34)\n    x36 = connect(x33, x35)\n    x37 = fill(I, THREE, x10)\n    x38 = fill(x37, astuple, x20)\n    x39 = fill(x38, x6, x30)\n    x40 = fill(x39, TWO, x36)\n    x41 = size(x1)\n    x42 = positive(x41)\n    x43 = branch(x42, x3, x4"], [1.1, "def solve_3af703c4(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_50fc64e8(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = leastcolor(x1)\n    x4 = leastcolor(x2)\n    x5 = ofcolor(I, x3)\n    x6 = center(x5)\n    x7 = ofcolor(I, x4)\n    x8 = center(x7)\n    x9 = height(I)\n    x10 = width(I)\n    x11 = hfrontier(x6)\n    x12 = fill(I, x3, x11)\n    x13 = hfrontier(x8)\n    x14 = fill(x12, x4, x13)\n    x15 = decrement(x10)\n    x16 = decrement(x9)\n    x17 = halve(x9)\n    x18 = tojvec(x15)\n    x19 = connect(ORIGIN, x18)\n    x20 = fill(x14, x3, x19)\n    x21 = toivec(x16)\n    x22 = astuple(x16, x15)\n    x23 = connect(x21, x22)\n    x24 = fill(x20, x4, x23)\n    x25 = decrement(x17)\n    x26 = toivec(x25)\n    x27 = connect(ORIGIN, x26)\n    x28 = fill(x24, x3, x27)\n    x29 = tojvec(x15)\n    x30 = decrement(x17)\n    x31 = astuple(x30, x15)\n    x32 = connect(x29, x31)\n    x33 = fill(x28, x3, x32)\n    x34 = toivec(x17)\n    x35 = toivec(x16)\n    x36 = connect(x34, x35)\n    x37 = fill(x33, x4, x36)\n    x38 = astuple(x17, x15)\n    x39 = astuple(x16, x15)\n    x40 = connect(x38, x39)\n    O = fill(x37,"], [1.1, "def solve_9efd596f(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_e5c79d0b(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = width(x4)\n    x6 = toivec(x5)\n    x7 = index(x4, x6)\n    x8 = shape(x4)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x4, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, rot90)\n    x16 = lbind(power, rot270)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x13)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x19)\n    x24 = uppermost(x12)\n    x25 = lbind(add, x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = lbind(multiply, x27)\n    x29 = chain(toivec, x25, x28)\n    x30 = fork(shift, x23, x29)\n    x31 = compose(asobject, x22)\n    x32 = uppermost(x12)\n    x33 = lbind(subtract, x32)\n    x34 = height(x12)\n    x35 = increment(x34)\n    x36 = lbind(multiply, x35)\n    x37 = chain(toivec, x33, x36)\n    x38 = fork(shift, x31, x37)\n    x39 = fork(combine"], [1.1, "def solve_1bcbf7f3(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = fork(recolor, x40, identity)\n    x42 = mapply"], [1.1, "def solve_fcbd5e79(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = rot270(I)\n    x2 = rot90(I)\n    x3 = rot270(x2)\n    x4 = rbind(order, identity)\n    x5 = apply(x4, x1)\n    x6 = apply(x4, x2)\n    x7 = compose(positive, size)\n    x8 = lbind(interval, ZERO)\n    x9 = rbind(x8, ONE)\n    x10 = compose(x7, x9)\n    x11 = apply(x10, x5)\n    x12 = lbind(matcher, SEVEN)\n    x13 = compose(x12, x4)\n    x14 = lbind(matcher, EIGHT)\n    x15 = compose(x14, x4)\n    x16 = fork(sfilter, identity, x13)\n    x17 = fork(sfilter, identity, x15)\n    x18 = compose(x16, x17)\n    x19 = rbind(shoot, UNITY)\n    x20 = rbind(shoot, NEG_UNITY)\n    x21 = fork(combine, x19, x20)\n    x22 = compose(x21, x18)\n    x23 = rbind(shoot, DOWN_LEFT)\n    x24 = rbind( visitmatching, ONE)\n    x25 = chain(x23, x24, x2)\n    x26 = compose(x25, x18)\n    x27 = fork(sfilter, identity, x26)\n    x28 = compose(x27, x15)\n    x29 = fork(difference, x28, x12)\n    x30 = compose(x28, x29)\n    x31 = fork(shift, x30, x17)\n    x32 = compose(decrement, numcolors)\n    x33 = fork(add, x32, x31)\n    x34 = fork(\n    intersection, x33, x39a)\n    x35 = chain(size, x34, xdmirror)\n    x36 = matcher(x35, ZERO)\n    x37 = lbind(apply, vmirror)\n    "], [1.1, "def solve_56507e47(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mostcolor(I)\n    x3 = shape(I)\n    x4 = canvas(x2, x3)\n    x5 = hconcat(I, x4)\n    x6 = objects(x5, F, F, T)\n    x7 = argmin(x6, size)\n    x8 = argmax(x6, size)\n    x9 = remove(x7, x6)\n    x10 = presents(x7, x9)\n    x11 = leftmost(x7)\n    x12 = leftmost(x8)\n    x13 = greater(x11, x12)\n    x14 = uppermost(x7)\n    x15 = uppermost(x8)\n    x16 = greater(x14, x15)\n    x17 = uppermost(x7)\n    x18 = equality(x13, x17)\n    x19 = branch(x18, x12, x13)\n    x20 = branch(x18, x8, x19)\n    x21 = branch(x18, x7, x20)\n    x22 = x21(I)\n    x23 = 17827(x22)\n    x24 = shape(x22)\n    x25 = canvas(x2, x24)\n    x26 = normalize(x22)\n    x27 = shift(x26, x24)\n    x28 = paint(x25, x27)\n    x29 = rbind(toobject, x28)\n    x30 = chain(x29, palette, x28)\n    x31 = matcher(x30, x8)\n    x32 = extract(x29, x31)\n    x33 = x32(x72)\n    x34 = interval(ZERO, NINE, ONE)\n    x35 = pair(x34, x34)\n    x36 = lbind(colorcount\n    3889033338\n    x369443289\n    3853034303\n    8833 m8388\n    \"\"\"\n    x1 = objects(x38, F, F, T)\n    x2 = rbind(colorcount, x8)\n    x3"], [1.1, "def solve_6e7ba30b(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = crop(I, ORIGIN, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = matcher(first, ZERO)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = shape(x5)\n    x7 = multiply(x6, x6)\n    x8 = add(x7, DOWN)\n    x9 = canvas(ZERO, x8)\n    x10 = multiply(x5, x6)\n    x11 = add(x10, x6)\n    x12 = lbind(multiply, x6)\n    x13 = chain(x12, double, partition)\n    x14 = lbind(add, x4)\n    x15 = compose(invert, x14)\n    x16 = lbind(multiply, x11)\n    x17 = compose(invert, x16)\n    x18 = fork(add, x15, x17)\n    x19 = fork(equality, toindices, x18)\n    x20 = sfilter(x15, x19)\n    x21 = lbind(multiply, x6)\n    x22 = compose(invert, x21)\n    x23 = fork(add, x20, x22)\n    x24 =28222244mult13)\n    x25 = decrement(x24)\n    x26 = lbind(multiply, x11)\n    x27 = compose(invert, x26)\n    x28 = fork(add, x23, x27)\n    x29 = rbind(contained, x47)\n    x30 = compose(x29, first)\n    x31 = rbind(added, x35)\n    x32 = compose(x31, first)\n    x33 = fork(add, x32, x30)\n    x34 = chain(ineighbors, x23, x33)\n    x35 = fork(astuple, x34, x32)\n    x36 = canvas(ZERO, x6)\n    x37 = paint(x36, x35)\n    x38 = fork(connect,"], [1.1, "def solve_1124c176(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dae)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)\n"], [1.1, "def solve_715f57e2(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(flip, x6)\n    x9 = fork(both, x3, x8)\n    x10 = sfilter(x1, x9)\n    x11 = compose(size, first)\n    x12 = decrement(x11)\n    x13 =8853alf(x10)\n    x14 = toindices(x13)\n    x15 = rbind(repeat, x12)\n    x16 = compose(x15, first)\n    x17 = lbind(contained, ONE)\n    x18 = chain(x17, x16, x first)\n    x19 = compose(x18, x10)\n    x20 = compose(x15, x19)\n    x21 = fork(contained, x20, x17)\n    x22 = compose(x21, x10)\n    x23 = fork(add, x28, astuple)\n    x24 = fork(add, x23, x22)\n    x25 = Tuple(x14, x24)\n    x26 = astuple(vmatching, x25)\n    x27 = fork(either, x24, x26)\n    x28 = compose(flip, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(invert, x29, x17)\n    x31 = decrement(x26)\n    x32 = astuple(x31, x30)\n    x33 = shift(x19, x32)\n    x34 = paint(I, x33)\n    x35 = toindices(x33)\n    x36 = rbind(manhattan, x35)\n    x37 = compose(x36, initset)\n    x38 = argmax(x35, x37)\n    x39 = first(x"], [1.1, "def solve_45e4654b(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = fork(vsplit, identity, height)\n    x5 = chain(asobject, first, x4)\n    x6 = mostcolor(I)\n    x7 = lbind(chain, numcolors)\n    x8 = lbind(x7, x5)\n    x9 = lbind(chain, color)\n    x10 = lbind(x9, x5)\n    x11 = rbind(rapply, I)\n    x12 = compose(initset, x8)\n    x13 = chain(first, x11, x12)\n    x14 = rbind(rapply, I)\n    x15 = compose(initset, x10)\n    x16 = chain(first, x14, x15)\n    x17 = matcher(x13, ONE)\n    x18 = matcher(x16, x6)\n    x19 = compose(flip, x18)\n    x20 = fork(sfilter, identity, x19)\n    x21 = compose(asobject, x20)\n    x22 = apply(x21, x3)\n    x23 = dmirror(x22)\n    x24 = hmirror(x23)\n    x25 = vmirror(x24)\n    x26 = width(x22)\n    x27 = hupscale(x25, x26)\n    x28 = toobject(x27, x23)\n    x29 = matcher(x28, ZERO)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x25, x30)\n    x32 = hmirror(x31)\n    x33 = vmirror(x32)\n    x34 = sfilter(x33, x30)\n    x35 = vmirror(x34)\n    x36 = hmirror(x35)\n    x37 = cellwise(x22, x33, x36)\n    x38 = product(x37, x37)\n"], [1.1, "def solve_02a2e256(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_1e512a9c(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = size(x3)\n    x5 = positive(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = frontiers(I)\n    x9 = x6(I)\n    x10 = size(x8)\n    x11 = size(x9)\n    x12 = greater(x10, x11)\n    x13 = branch(x12, identity, vmirror)\n    x14 = x13(I)\n    x15 = ofcolor(x14, NEG_ONE)\n    x16 = subgrid(x15, x14)\n    x17 = LEastuple(x16, x15)\n    x18 = hsplit(x17, x181)\n    x19 = lbind(ofcolor, x14)\n    x20 = compose(x19, last)\n    x21 = fork(sfilter, last, x20)\n    x22 = chain(x15, x21, first)\n    x23 = rbind(contained, x15)\n    x24 = compose(x23, last)\n    x25 = sfilter(x16, x24)\n    x26 =bordering(x25)\n    x27 = mostcolor(x26)\n    x28 = matcher(first, x27)\n    x29 = compose(flip, x28)\n    x30 = rbind(sfilter, x29)\n    x31 = lbind(recolor, x27)\n    x32 = compose(x31, x30)\n    x33 = chain(x19, x32, x29)\n    x34 = ofcolor(x14, x27)\n    x35 = compose(x34, x33)\n    x36 = ofcolor(x14, x27)\n    x37 = fork(combine, x35, x36)\n    x38 = apply(x37, x34)\n    x39 = fork(recolor, x33, x38)\n    x40 = mapply(x39,"], [1.1, "def solve_a3eb87ac(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = interval(ONE, x1, ONE)\n    x3 = connect(ORIGIN, DOWN)\n    x4 = connect(ORIGIN, ZERO_BY_TWO)\n    x5 = combine(x3, x4)\n    x6 = astuple(NEG_TWO, TWO)\n    x7 = lbind(multiply, x6)\n    x8 = toivec(NEG_TWO)\n    x9 = apply(x7, x2)\n    x10 = rbind(subtract, TWO_BY_ZERO)\n    x11 = fork(shift, identity, x10)\n    x12 = repeat(x11, TWO)\n    x13 = lbind(repeat, x12)\n    x14 = compose(x13, width)\n    x15 = rbind(paint, x14)\n    x16 = lbind(recolor, ZERO)\n    x17 = compose(x16, x15)\n    x18 = fork(paint, x17, x15)\n    x19 = compose(x13, first)\n    x20 = rbind(argmax, x19)\n    x21 = compose(x20, x18)\n    x22 = apply(x21, x3)\n    x23 = fork(common, x21, x22)\n    x24 = remove(x15, x23)\n    x25 = totuple(x24)\n    x26 = first(x25)\n    x27 = last(x25)\n    x28 = color(x26)\n    x29 = mostcolor(I)\n    x30 = shape(x26)\n    x31 = canvas(x29, x30)\n    x32 = fill(x31, x27, x26)\n    x33 = asobject(x12)\n    x34 = ofcolor(x33, x29)\n    x35 = difference(x34, x34)\n    x36 = shape(x28)\n    x37 = lbind(shift, x33)\n    x38 = shift(x34, x36)\n    x39 = lbind(paint, x33)\n    "], [1.1, "def solve_596d6b46(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_d7b7de6a(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = index(x3, DOWN)\n    x5 = portrait(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(x3)\n    x8 = lefthalf(x7)\n    x9 = righthalf(x7)\n    x10 = palette(x8)\n    x11 = palette(x9)\n    x12 = compose(flip, x5)\n    x13 = extract(x10, x12)\n    x14 = extract(x11, x13)\n    x15 = other(x10, x14)\n    x16 = ofcolor(x8, x15)\n    x17 = last(x16)\n    x18 = replace(x8, x14, x17)\n    x19 = leftmost(x16)\n    x20 = lbind(downscale, x19)\n    x21 = compose(x20, toindices)\n    x22 = x21(x18)\n    x23 = rbind(upscale, x22)\n    x24 = chain(x23, halve, width)\n    x25 = rbind(branch, x34)\n    x26 = rbind(x25, x24)\n    x27 = chain(size, dedupe, x26)\n    x28 = rbind(branch, x49)\n    x29 = rbind(x28, x27)\n    x30 = chain(x29, x26, x23)\n    x31 = fork(combine, x27, x30)\n    x32 = fork(add, x24, x31)\n    x33 = fork(insert, x32, palette)\n    x34 = compose(backdrop, x33)\n    x35 = mapply(x34, x18)\n    x36 = double(x19)\n    x37 = rbind(greater, x36)\n    x38 = compose(x37, first)\n    x39 = chain(invert, x35, x38)"], [1.1, "def solve_8c48ed19(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, corners)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, x2)\n    x5 = fgpartition(I)\n    x6 = merge(x5)\n    x7 = backdrop(x4)\n    x8 = toobject(x7, I)\n    x9 = difference(x6, x8)\n    x10 = toobject(x9, I)\n    x11 = color(x4)\n    x12 = color(x10)\n    x13 = ofcolor(I, x11)\n    x14 = ulcorner(x4)\n    x15 = ulcorner(x10)\n    x16 = subtract(x14, x15)\n    x17 = leftmost(x16)\n    x18 = rightmost(x16)\n    x19 = subtract(x17, x18)\n    x20 = lowermost(x16)\n    x21 = leftmost(x16)\n    x22 = subtract(x20, x21)\n    x23 = astuple(x22, x19)\n    x24 = ulcorner(x7)\n    x25 = ulcorner(x7)\n    x26 = subtract(x24, x25)\n    x27 = astuple(x26, x19)\n    x28 = invert(x27)\n    x29 = double(x28)\n    x30 = astuple(x22, x19)\n    x31 = cover(I, x30)\n    x32 = downscale(x31, x29)\n    x33 = ofcolor(x32, x11)\n    x34 = ulcorner(x3)\n    x35 = increment(x34)\n    x36 = rbind(subtract, x35)\n    x37 = chain(x36, size, first)\n    x38 = interval(e26, x37, ONE)\n    x39 = sfilter(x38, x37)\n    x40 = apply(normalize, x39)\n    x41 = rbind(colorcount, x11)\n    x42"], [1.1, "def solve_329f378a(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x2, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, x4)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x6, x2)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_efa33aa6(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_93912620(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_de576dac(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmin(x2, size)\n    x4 = color(x3)\n    x5 = leftmost(x3)\n    x6 =85(I)\n    x7 = color(x3)\n    x8 = leftmost(x3)\n    x9 =greater(x8, x5)\n    x10 = greater(x5, x9)\n    x11 = branch(x10, x7, x9)\n    x12 = x11(I)\n    x13 = color(x12)\n    x14 = subgrid(x12, I)\n    x15 = leftmost(x12)\n    x16 = rightmost(x12)\n    x17 = subtract(x15, x16)\n    x18 = add(x15, x17)\n    x19 = urcorner(x12)\n    x20 = shoot(x19, UNITY)\n    x21 = add(x29, x20)\n    x22 = llcorner(x12)\n    x23 = shoot(x22, DOWN_LEFT)\n    x24 =44877(x14)\n    x25 = combine(x23, x24)\n    x26 = combine(x21, x25)\n    x27 = downscale(x12, x19)\n    x28 = astuple(x31, x26)\n    x29 = canvas(x11, x28)\n    x30 = interval(ZERO, x12, ONE)\n    x31 = invert(x15)\n    x32 = shift(x30, x31)\n    x33 = asobject(x32)\n    x34 = matcher(first, x11)\n    x35 = compose(flip, x34)\n    x36 = sfilter(x33, x35)\n    x37 = lbind(shift, x27)\n    x38 = height(x12)\n    x39 = astuple(x37, x38)\n    x40 = x37(x39)\n    x41 = width(x12)\n    x42 = astuple(x44,"], [1.1, "def solve_d2c1c10b(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = chain(size, dedupe, first)\n    x9 = matcher(x8, ONE)\n    x10 = compose(first, cmirror)\n    x11 = chain(size, dedupe, x10)\n    x12 = matcher(x11, ONE)\n    x13 = fork(both, x9, x12)\n    x14 = rbind(rapply, I)\n    x15 = compose(initset, first)\n    x16 = chain(first, x14, x15)\n    x17 = compose(x13, x16)\n    x18 = extract(x7, x17)\n    x19 = first(x18)\n    x20 = last(x18)\n    x21 = x19(I)\n    x22 = width(x21)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = index(x21, x24)\n    x26 = asobject(x21)\n    x27 = matcher(first, x25)\n    x28 = compose(flip, x27)\n    x29 = sfilter(x26, x28)\n    x30 = hperiod(x29)\n    x31 = width(x21)\n    x32 = increment(x31)\n    x33 = interval(ZERO, x32, x30)\n    x34 = apply(tojvec, x33)\n    x35 = lbind(shift, x29)\n    x36 = mapply(x35, x34)\n    x37 = index(x21, x won)\n    x38 = lbind(shift, x26)\n    x39 = mapply(x38, x37)\n    x40 = combine(x36, x39)"], [1.1, "def solve_e5a6c3f3(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_552d11db(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_0d0e45b6(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_8478e970(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_cfeca1f0(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, FIVE)\n    x4 = astuple(FOUR, FOUR)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = asindices(x5)\n    x7 = rbind(toobject, I)\n    x8 = lbind(shift, x6)\n    x9 = compose(x7, x8)\n    x10 = multiply(x3, FIVE)\n    x11 = interval(ZERO, x10, FIVE)\n    x12 = apply(tojvec, x11)\n    x13 = apply(x9, x12)\n    x14 = matcher(numcolors, ONE)\n    x15 = fork(equality, identity, hmirror)\n    x16 = compose(flip, x15)\n    x17 = lbind(index, I)\n    x18 = compose(x17, ulcorner)\n    x19 = lbind(add, DOWN)\n    x20 = chain(x17, x19, ulcorner)\n    x21 = fork(equality, x18, x20)\n    x22 = compose(flip, x21)\n    x23 = fork(either, x14, x16)\n    x24 = fork(either, x23, x22)\n    x25 = compose(flip, x24)\n    x26 = lbind(multiply, TWO)\n    x27 = compose(x26, x14)\n    x28 = lbind(multiply, FOUR)\n    x29 = compose(x28, x16)\n    x30 = fork(add, x27, x29)\n    x31 = lbind(multiply, THREE)\n    x32 = compose(x31, x22)\n    x33 = lbind(multiply, EIGHT)\n    x34 = compose(x33, x25)\n    x35 = fork(add, x32, x34)\n    x36 = fork(add, x30, x35)\n    x37 = apply(x36, x13)\n    x38 = rbind(repeat,"], [1.1, "def solve_136c7692(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x1, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18,"], [1.1, "def solve_e581fd5d(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = insert(x8, x11)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = subgrid(x13, I)\n    x16 = width(x15)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = output(x17, x14)\n    x19 = height(x15)\n    x20 = interval(ZERO, x19, ONE)\n    x21 = pair(x18, x20)\n    x22 = sfilter(x21, x18)\n    x23 = first(x22)\n    x24 = height(x15)\n    x25 = interval(ZERO, x24, ONE)\n    x26 = pair(x23, x25)\n    x27 = urcorner(x28)\n    x28 = matcher(first, x3)\n    x29 = rbind(sfilter, x28)\n    x30 = compose(first, last)\n    x31 = chain(flip, x29, x30)\n    x32 = asobject(x27)\n    x33 = matcher(first, x3)\n    x34 = sfilter(x32, x33)\n    x35 = increment(x34)\n    x36 = width(x15)\n    x37 = interval(ZERO, x36, x35)\n    x38 = multiply(x37, x29)\n    x39 = lbind(apply, double)\n    x40 = lbind(shift, x33)\n    x41 = pair(x38, x40)\n    x42 ="], [1.1, "def solve_c8789a13(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = interval(TWO, FIVE, ONE)\n    x4 = rbind(shift, RIGHT)\n    x5 = rbind(shift, LEFT)\n    x6 = rbind(shift, UP)\n    x7 = rbind(shift, DOWN)\n    x8 = lbind(fork, intersection)\n    x9 = lbind(x8, identity)\n    x10 = lbind(rbind, shift)\n    x11 = compose(x9, x10)\n    x12 = compose(x11, tojvec)\n    x13 = chain(x11, tojvec, invert)\n    x14 = compose(x11, toivec)\n    x15 = chain(x11, toivec, invert)\n    x16 = lbind(compose, initset)\n    x17 = lbind(rbind, rapply)\n    x18 = lbind(chain, first)\n    x19 = lbind(compose, x5)\n    x20 = x16(x12)\n    x21 = rbind(compose, x20)\n    x22 = lbind(rbind, mapply)\n    x23 = chain(x21, x22, x17)\n    x24 = lbind(compose, x4)\n    x25 = x16(x13)\n    x26 = rbind(compose, x25)\n    x27 = x23(x10)\n    x28 = x27(x14)\n    x29 = x27(x divide)\n    x30 = branch(x26, x27, x28)\n    x31 = objects(I, T, T, T)\n    x32 = apply(x30, x31)\n    x33 = rbind(interval, ONE)\n    x34 = lbind(NEG_ONE)\n    x35 = chain(x33, x34, x30)\n    x36 = apply(x35, x32)\n    x37 = lbind(recolor, x1)\n    x38 = apply(x37, x36)\n    x39 = p"], [1.1, "def solve_648dd7c9(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = insert(x14, x24)\n    x26 = width(x9)\n    x27 = halve(x26)\n    x28 = tojvec(x27)\n    x29 = height(x9)\n    x30 = decrement(x29)\n    x31 = insert(x30, x30)\n    x32 = width(x9)\n    x33 = halve(x32)\n    x34 = tojvec(x33)\n    x35 = height(x9)\n    x36 = decrement(x35)\n    x37 = insert(x34, x36)\n    x38 = height(x10)\n    x39 = height(x28)\n    x40 = divide(x38, x39)\n    x41 = width(x10)\n    x42 = halve(x31)\n    x43 = tojvec(x42)\n    x44 = height(x10)\n    "], [1.1, "def solve_e00c3330(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = astuple(dmirror, cmirror)\n    x2 = astuple(hmirror, identity)\n    x3 = combine(x1, x2)\n    x4 = fork(vsplit, identity, height)\n    x5 = chain(asobject, first, x4)\n    x6 = mostcolor(I)\n    x7 = lbind(chain, numcolors)\n    x8 = lbind(x7, x5)\n    x9 = lbind(chain, color)\n    x10 = lbind(x9, x5)\n    x11 = rbind(rapply, I)\n    x12 = compose(initset, x8)\n    x13 = chain(first, x11, x12)\n    x14 = rbind(rapply, I)\n    x15 = compose(initset, x10)\n    x16 = chain(first, x14, x15)\n    x17 = matcher(x13, ONE)\n    x18 = matcher(x16, x6)\n    x19 = compose(flip, x18)\n    x20 = fork(both, x17, x19)\n    x21 = argmax(x3, x20)\n    x22 = x21(I)\n    x23 = x5(x22)\n    x24 = color(x23)\n    x25 = palette(x22)\n    x26 = remove(x24, x25)\n    x27 = other(x26, x6)\n    x28 = objects(x22, T, T, T)\n    x29 = colorfilter(x28, x27)\n    x30 = ofcolor(x22, x24)\n    x31 = ofcolor(x22, x6)\n    x32 = mapply(neighbors, x31)\n    x33 = mapply(neighbors, x32)\n    x34 = lowermost(x30)\n    x35 = dneighbors(ORIGIN)\n    x36 = remove(DOWN, x35)\n    x37 = rbind(mapply, x36)\n    x38 = lbind(chain, x37)\n    x"], [1.1, "def solve_84551f44(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_f950905b(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, corners)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = fgpartition(I)\n    x6 = merge(x5)\n    x7 = backdrop(x4)\n    x8 = toobject(x7, I)\n    x9 = difference(x6, x8)\n    x10 = mostcolor(I)\n    x11 = inbox(x4)\n    x12 = backdrop(x11)\n    x13 = toobject(x12, I)\n    x14 = matcher(first, x10)\n    x15 = compose(flip, x14)\n    x16 = sfilter(x13, x15)\n    x17 = subgrid(x9, I)\n    x18 = palette(x16)\n    x19 = order(x18, identity)\n    x20 = lbind(colorcount, x16)\n    x21 = apply(x20, x19)\n    x22 = lbind(colorcount, x9)\n    x23 = apply(x22, x19)\n    x24 = pair(x21, x23)\n    x25 = fork(divide, first, last)\n    x26 = apply(x25, x24)\n    x27 = mostcommon(x26)\n    x28 = lbind(colorcount, x16)\n    x29 = lbind(colorcount, x9)\n    x30 = fork(divide, x28, x29)\n    x31 = matcher(x30, x27)\n    x32 = palette(x9)\n    x33 = sfilter(x32, x31)\n    x34 = rbind(contained, x33)\n    x35 = compose(x34, first)\n    x36 = sfilter(x16, x35)\n    x37 = sfilter(x9, x35)\n    x38 = height(x36)\n    x39 = height(x37)\n    x40 = divide(x38, x39)\n    x41 = width(x36)\n    x42"], [1.1, "def solve_7222b097(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_cc568ded(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = width(x4)\n    x6 = toivec(x5)\n    x7 = index(x4, x6)\n    x8 = shape(x4)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x4, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, rot90)\n    x16 = lbind(power, rot270)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x13)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x19)\n    x24 = uppermost(x12)\n    x25 = lbind(add, x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = lbind(multiply, x27)\n    x29 = chain(toivec, x25, x28)\n    x30 = fork(shift, x23, x29)\n    x31 = compose(asobject, x22)\n    x32 = uppermost(x12)\n    x33 = lbind(subtract, x32)\n    x34 = height(x12)\n    x35 = increment(x34)\n    x36 = lbind(multiply, x35)\n    x37 = chain(toivec, x33, x36)\n    x38 = fork(shift, x31, x37)\n    x39 = fork(combine"], [1.1, "def solve_472e902c(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(argout, x18)\n    x20 = apply(x17, x19)\n    x21 = combine(x16, x20)\n    x22 = fill(I, THREE, x21)\n    x23 = asindices(x22)\n    x24 = shift(x23, x2)\n    x25 = fork(combine, hfrontier, vfrontier)\n    x26 = x25(x24)\n    x27 = tojvec(x2)\n    x28 = interval(ZERO, x27, ONE)\n    x29 = paint(x22, x28)\n    x30 = initset(x2)\n    x31 = insert(x62, x30)\n    x32 = insert(x26, x31)\n    x33 = size(x32)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = apply(tojvec, x34)\n    x36 = apply(numcolors, x35)\n    x37 = matcher(equality, ZERO)\n    x38 = lbind(be94 mostcolor(I)\n    "], [1.1, "def solve_ee614b31(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = ONE(I)\n    x2 =999(connect, sender3de236\n    x3 = apply(initset, x1)\n    x4 = rbind(shoot, UNITY)\n    x5 = mapply(x4, x3)\n    x6 = fill(x1, EIGHT, x5)\n    x7 = index(I, x4)\n    x8 = equality(x7, ZERO)\n    x9 = branch(x8, vsplit, hsplit)\n    x10 = shape(I)\n    x11 = maximum(x10)\n    x12 = index(I, x11)\n    x13 =559999(I, x6)\n    x14 = add(x13, x11)\n    x15 = initset(x14)\n    x16 = lbind(96, x11)\n    x17 = rbind(apply, x16)\n    x18 = compose(x17, x9)\n    x19 = lbind(compose, flip)\n    x20 = lbind(matcher, first)\n    x21 = compose(x19, x20)\n    x22 = lbind(rbind, sfilter)\n    x23 = lbind(compose, x25)\n    x24 = chain(x22, x23, x21)\n    x25 = lbind( fork, greater)\n    x26 = compose(x25, x14)\n    x27 = compose(x25, x16)\n    x28 = fork(add, x26, x27)\n    x29 = fork(add, x25, x28)\n    x30 = fork(connect, x29, x21)\n    x31 = fork(contained, x30, x22)\n    x32 = fork(contained, x31, x26)\n    x33 = fork(either, x30, x32)\n    x34 = matcher(x33, ZERO)\n    x35 = extract(x32, x34)\n    x35 = first(x35)\n    x36 = last(x35)\n    x37 = palette(I)\n    x38 =either(x37, x40)\n    x39 ="], [1.1, "def solve_57de1c1d(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(tophalf, x3)\n    x5 = mapply(tojvec, x4)\n    x6 = palette(I)\n    x7 = objects(x6, T, F, F)\n    x8 = colorfilter(x7, ZERO)\n    x9 = sfilter(x8, square)\n    x10 = compose(even, height)\n    x11 = sfilter(x9, x10)\n    x12 = difference(x9, x11)\n    x13 = merge(x12)\n    x14 = lbind(colorcount, x13)\n    x15 = argmin(x11, x14)\n    x16 = objects(x6, T, F, F)\n    x17 = colorfilter(x16, x15)\n    x18 = compose(maximum, shape)\n    x19 = lbind(apply, x18)\n    x20 = lbind(colorfilter, x17)\n    x21 = chain(maximum, x19, palette)\n    x22 = matcher(x21, x15)\n    x23 = sfilter(x17, x22)\n    x24 = rbind(shoot, UNITY)\n    x25 = mapply(x24, x23)\n    x26 = underfill(x17, x15, x25)\n    x27 = objects(x26, T, F, F)\n    x28 = colorfilter(x27, x15)\n    x29 = rbind(bordering, I)\n    x30 = mfilter(x28, x29)\n    x31 = combine(x28, x30)\n    x32 = mapply(toindices, x31)\n    x33 = difference(x32, x31)\n    x34 = toobject(x33, I)\n    x35 = apply(x38, x34)\n    x36 = rbind(313484b58, x35)\n    x37 = chain(palette, x36,198)\n    x38 = rbind(contained,"], [1.1, "def solve_51d83ee1(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = compose(x4, size)\n    x6 = compose(x1, x5)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x200, x7, dmirror)\n    x9 = objects(I, T, F, F)\n    x10 = rbind(colorcount, ZERO)\n    x11 = valmax(x10, x6)\n    x12 = matcher(x6, x11)\n    x13 = sfilter(x19, x12)\n    x14 = compose(maximum, shape)\n    x15 = argmin(x13, x14)\n    x16 = apply(first, x13)\n    x17 = rbind(adjacent, x15)\n    x18 = apply(x17, x16)\n    x19 = sfilter(x16, x18)\n    x20 = rbind(adjacent, x15)\n    x21 = remove(x8, x19)\n    x22 = extract(x21, x12)\n    x23 = first(x22)\n    x24 = apply( last, x22)\n    x25 = height(x23)\n    x26 = decrement(x25)\n    x27 = apply(last, x22)\n    x28 = vupscale(x23, x27)\n    x29 = asobject(x28)\n    x30 = hperiod(x29)\n    x31 = index(I, x30)\n    x32 = objects(x29, T, F, F)\n    x33 = rbind(multiply, LEFT)\n    x34 = apply(x33, x32)\n    x35 = rbind(add, RIGHT)\n    x36 = apply(x35, x34)\n    x37 = pair(x26, x36)\n    x38 = sfilter(x37, x28)\n    x39 = apply(last, x38)\n    x40 = asobject"], [1.1, "def solve_79f42bbf(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    x3 = add(TWO, x2)\n    x4 = canvas(x1, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = paint(x4, x6)\n    x8 = double(SIX)\n    x9 = astuple(ONE, x8)\n    x10 = connect(UNITY, x9)\n    x11 = outbox(x10)\n    x12 = backdrop(x11)\n    x13 = recolor(x1, x12)\n    x14 = recolor(THREE, x10)\n    x15 = lbind(shift, x14)\n    x16 = lbind(mapply, x15)\n    x17 = rbind(occurrences, x13)\n    x18 = compose(x16, x17)\n    x19 = fork(paint, identity, x18)\n    x20 = x19(x7)\n    x21 = ofcolor(x20, THREE)\n    x22 = dmirror(x7)\n    x23 = x19(x22)\n    x24 = dmirror(x23)\n    x25 = ofcolor(x24, THREE)\n    x26 = combine(x21, x25)\n    x27 = fill(x7, THREE, x26)\n    x28 = astuple(TWO, ONE)\n    x29 = dneighbors(UNITY)\n    x30 = remove(x28, x29)\n    x31 = recolor(x1, x30)\n    x32 = initset(UNITY)\n    x33 = recolor(THREE, x32)\n    x34 = combine(x31, x33)\n    x35 = recolor(x1, x34)\n    x36 = astuple(ONE, THREE)\n    x37 = initset(x36)\n    x38 = insert(ZERO_BY_TWO, x37)\n    x39 = insert(RIGHT, x38)\n    x40 = insert(DOWN, x39)\n    x41 ="], [1.1, "def solve_3436f7c9(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, identity, dmirror)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = apply(first, x22)\n    x24 = lbind(sfilter, x21)\n    x25 = compose(first, last)\n    x26 = lbind(matcher, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x27, x23)\n    x29 = lbind(shift, x15)\n    x30 = chain(x29, toivec, uppermost)\n    x31 = matcher(first, x18)\n    x32 = rbind(sfilter, x31)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(toindices, x32, x30)\n    x36 = chain(x33, x34, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = compose(color, x37)\n    x39 = compose(x32, x30)\n    x40 = fork(recolor, x38, x39)\n    x41 = fork(other, palette,"], [1.1, "def solve_88da6077(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 =8872501578\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = tojvec(x5)\n    x7 = intersection(x3, x6)\n    x8 = height(I)\n    x9 = height(x2)\n    x10 = greater(x8, x9)\n    x11 = leftmost(x7)\n    x12 = interval(x11, x12, ONE)\n    x13 = palette(I)\n    x14 = lbind(power, TWO)\n    x15 = rbind(rapply, x13)\n    x16 = compose(initset, x15)\n    x17 = chain(first, x14, x16)\n    x18 = multiply(TEN, THREE)\n    x19 = interval(ZERO, x18, ONE)\n    x20 = pair(x19, x15)\n    x21 = apply(x17, x20)\n    x22 = astuple(x6, x6)\n    x23 = repeat(x22, ONE)\n    x24 = lbind(pair, x21)\n    x25 = compose(initset, x24)\n    x26 = chain(first, x24, x25)\n    x27 = apply(x26, x21)\n    x28 = astuple(x6, x6)\n    x29 = repeat(x28, ONE)\n    x30 = combine(x23, x29)\n    x31 = apply(x20, x30)\n    x32 = combine(x3, x31)\n    x33 = apply(x22, x32)\n    x34 = lbind(colorcount, I)\n    x35 = apply(x34, x33)\n    x36 = lbind(colorcount, I)\n    x37 = apply(x36, x35)\n    x38 = lbind(colorcount, I)\n    x39 = apply(x38, x37)\n    x40 = lbind(colorcount, I)\n    x41 = apply(x40, x"], [1.1, "def solve_129ef3f2(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, ONE)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)"], [1.1, "def solve_a2c70c87(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = leastcolor(I)\n    x9 = rbind(ofcolor, x8)\n    x10 = rbind(rapply, I)\n    x11 = chain(first, x10, initset)\n    x12 = chain(hline, x9, x11)\n    x13 = rbind(ofcolor, x8)\n    x14 = rbind(rapply, I)\n    x15 = chain(first, x14, initset)\n    x16 = chain(leftmost, x13, x15)\n    x17 = matcher(x16, ZERO)\n    x18 = fork(both, x12, x17)\n    x19 = compose(x18, first)\n    x20 = extract(x7, x19)\n    x21 = first(x20)\n    x22 = last(x20)\n    x23 = x21(I)\n    x24 = ofcolor(x23, x8)\n    x25 = argmax(x24, last)\n    x26 = add(x25, UP_RIGHT)\n    x27 = shoot(x26, UP_RIGHT)\n    x28 = add(x25, DOWN_LEFT)\n    x29 = shoot(x28, DOWN_LEFT)\n    x30 = rbind(shoot, LEFT)\n    x31 = mapply(x30, x27)\n    x32 = rbind(shoot, LEFT)\n    x33 = mapply(x32, x29)\n    x34 = width(x23)\n    x35 = invert(x34)\n    x36 = tojvec(x35)\n    x37 = shift(x31, x36)\n    x38 = combine(x31, x37)\n    x39 ="], [1.1, "def solve_a4f9b018(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_35177eb6(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_75f92ff9(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(asobject, x21)\n    x23 = x22(x2)\n    x24 = x22(I)\n    x25 = x22(x4)\n    x26 = x22(x6)\n    x27 = objects(x18, T, F, T)\n    x28 = colorfilter(x27, x16)\n    x29 = paint(x18, x28)\n    x30 = subgrid(x2, x29)\n    x31 = index(x30, DOWN)\n    x32 = replace(x30, x16, x119)\n    x33 = replace(x32, x26, x5)\n    x34 = combine(x31, x33)\n    x35 = merge(x34)\n    x36 = astuple(FOUR, FOUR)\n    x37 = canvas(x31, x36)\n    x38 = paint(x37, x35)\n    x39 = rot90(x38)\n    x40 = paint(x39, x35)\n    x41 = rot90(x40)\n    x42 = shape(x31)\n    x43 ="], [1.1, "def solve_ef2e91c2(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = order(x1, x2)\n    x4 = apply(x3, x1)\n    x5 = size(x4)\n    x6 = decrement(x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = remove(x2, x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = leftmost(x12)\n    x14 = ofcolor(I, x11)\n    x15 = either(x14, x13)\n    x16 = leftmost(x12)\n    x17 = vmirror(I)\n    x18 = hmirror(I)\n    x19 = lbind(add, x8)\n    x20 = chain(x19, ulcorner, llcorner)\n    x21 = compose(x21, urcorner)\n    x22 = chain(x1, ulcorner, llcorner)\n    x23 = fork(add, x22, x17)\n    x24 = fork(add, x23, x18)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = mostcolor(I)\n    x28 = toindices(x25)\n    x29 = matcher(first, x27)\n    x30 = toindices(x25)\n    x31 = sfilter(x30, x29)\n    x32 = argmax(x31, x24)\n    x33 = difference(x25, x32)\n    x34 = toobject(x33, I)\n    x35 = matcher(first, x10)\n    x36 = compose(flip, x35)\n    x37 = sfilter(x34, x36)\n    x38 = lbind(shift, x27)\n    x39 = compose(x38, ulcorner)\n    x40 = fork(combine, x37, x39)\n    x41 ="], [1.1, "def solve_107d340b(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(canvas, NEG_ONE)\n    x2 = lbind(apply, shape)\n    x3 = chain(size, x1, x2)\n    x4 = lbind(repeat, ZERO)\n    x5 = compose(x4, x3)\n    x6 = fork(paint, x5, x4)\n    x7 = compose(cmirror, x6)\n    x8 = astuple(dmirror, cmirror)\n    x9 = astuple(hmirror, vmirror)\n    x10 = combine(x8, x9)\n    x11 = lbind(compose, x5)\n    x12 = x11(x10)\n    x13 = lbind(ofcolor, I)\n    x14 = compose(x12, x13)\n    x15 = decrement(xsize)\n    x16 = toivec(x15)\n    x17 = connect(ORIGIN, x16)\n    x18 = insert(UNITY, x17)\n    x19 = branch(x18, vsplit, hsplit)\n    x20 = x19(I, TWO)\n    x21 = first(x20)\n    x22 = last(x20)\n    x23 = width(x21)\n    x24 = decrement(x23)\n    x25 = tojvec(x24)\n    x26 = connect(ORIGIN, x25)\n    x27 = height(x21)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = connect(ORIGIN, x29)\n    x31 = width(x21)\n    x32 = decrement(x31)\n    x33 = tojvec(x32)\n    x34 = connect(ORIGIN, x33)\n    x35 = height(x21)\n    x36 = decrement(x35)\n    x37 = toivec(x36)\n    x38 = connect(ORIGIN, x37)\n    x39 = width(x21)\n    x40 = decrement(x39)\n    x41 = tojvec(x40"], [1.1, "def solve_110ea174(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = upscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = size(x22)\n    x24 = positive(x23)\n    x25 = branch(x24, hmirror, vmirror)\n    x26 = x25(x14)\n    x27 = ofcolor(x26, x3)\n    x28 = asindices(x14)\n    x29 = ofcolor(x26, x3)\n    x30 = difference(x29, x28)\n    x31 = rbind(contained, x30)\n    x32 = compose(flip, x31)\n    x33 = sfilter(x27, x32)\n    x34 = fork(equality, identity, dmirror)\n    x35 = sfilter(x33, x34)\n    x36 = flip(x35)\n    x37 = multiply(x31, THREE)\n    x38 = dmirror(x37)\n    x39 = lbind(ofcolor, x18)\n    x40 = compose(flip, x39)\n    x41 = rbind(sfilter, x40)\n    x42 = compose("], [1.1, "def solve_882ab4b4(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = leastcolor(I)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = argmin(x12, numcolors)\n    x14 = rbind(contained, x13)\n    x15 = normalize(x13)\n    x16 = objects(x44, x14, x15)\n    x17 = colorfilter(x16, x3)\n    x18 =indices(x9)\n    x19 = ofcolor(x11, x3)\n    x20 = difference(x18, x19)\n    x21 = rbind(multiply, LEFT)\n    x22 = rbind(divide, LEFT)\n    x23 = rbind(multiply, x20)\n    x24 = rbind(divide, x20)\n    x25 = rbind(multiply, x22)\n    x26 = lbind(970gpartition, x21)\n    x27 = fork(009, x24, x25)\n    x28 = compose(x27, x6)\n    x29 = fork(either, x28, x29)\n    x30 = rbind(002, extract)\n    x31 = extract(x15, x29)\n    x32 = rbind(002, x31)\n    x33 = fork(649, x29, x32)\n    x34 = rbind(oward combine, x27)\n    x35 = compose(x34, x28)\n    x36 = fork(add, x35, x31)\n    x37 = fork(connect, x33, x36)\n    x38 = shape(x13)\n    x39 = multiply(x38, x38)\n"], [1.1, "def solve_c7269f41(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, last)\n    x3 = compose(x1, x2)\n    x4 = lbind(ofcolor, I)\n    x5 = fork(size, x4, x3)\n    x6 = compose(x5, palette)\n    x7 = fork(vline, x6,757)\n    x8 = fork(astuple, x3, x4)\n    x9 = fork(add, x8, x7)\n    x10 = asindices(I)\n    x11 = apply(x9, x10)\n    x12 =725092511, x11)\n    x13 = argmax(x12, identity)\n    x14 = apply(last, x15)\n    x15 = size(x14)\n    x16 = increment(x15)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = product(x17, x17)\n    x19 = power(first, FIVE)\n    x20 = astuple(recolor, x19)\n    x21 = astuple(center, ORIGIN)\n    x22 = astuple(x21, x208)\n    x23 = combine(x20, x22)\n    x24 = rbind(toobject, I)\n    x25 = compose(last, last)\n    x26 = rbind(ofcolor, x25)\n    x27 = mapply(x26, x23)\n    x28 = mostcolor(I)\n    x29 = combine(x27, x28)\n    x30 = recolor(x29, x27)\n    x31 = initset(x15)\n    x32 = insert(x16, x31)\n    x33 = insert(x32, x31)\n    x34 = toobject(x33, I)\n    x35 = lbind(recolor, x54)\n    x36 = compose(x35, x24)\n    x37 = fork(shift, x36, ulcorner)\n    x38 = mapply(x37, x34)\n    x39 = paint(I, x38)\n    x40 = rot"], [1.1, "def solve_77f716d5(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, vmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_39f9c12f(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(SIX)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_9cfa08a0(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_819f366d(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = argmax(x1, size)\n    x3 = remove(x2, x1)\n    x4 = merge(x3)\n    x5 = size(x4)\n    x6 = positive(x5)\n    x7 = branch(x6, height, width)\n    x8 = x7(I)\n    x9 = color(x2)\n    x10 = ofcolor(I, x9)\n    x11 = ofcolor(I, x2)\n    x12 = position(x10, x11)\n    x13 = first(x12)\n    x14 = last(x21)\n    x15 = subgrid(x13, I)\n    x16 = width(x15)\n    x17 = divide(x16, THREE)\n    x18 = tojvec(x17)\n    x19 = height(x15)\n    x20 = divide(x19, THREE)\n    x21 = increment(x20)\n    x22 = interval(ZERO, x21, ONE)\n    x23 = asobject(x15)\n    x24 = matcher(first, x9)\n    x25 = compose(flip, x24)\n    x26 = sfilter(x23, x25)\n    x27 = lbind(shift, x22)\n    x28 = height(x12)\n    x29 = divide(x28, FOUR)\n    x30 = increment(x29)\n    x31 = width(x12)\n    x32 = divide(x31, FOUR)\n    x33 = increment(x32)\n    x34 = invert(x30)\n    x35 = interval(ZERO, x34, ONE)\n    x36 = astuple(x32, x31)\n    x37 = lbind(shift, x22)\n    x38 = lbind(multiply, x36)\n    x39 = compose(x37, x38)\n    x40 = lbind(mapply, x29)\n    x41 = lbind(shift, x26)\n    x42 = compose(x40, x41)\n    x43 = fork(comb"], [1.1, "def solve_1dbb4996(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_7e01343f(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = ofcolor(I, THREE)\n    x2 = crop(I, ORIGIN, THREE_BY_THREE)\n    x3 = asobject(x2)\n    x4 = matcher(first, THREE)\n    x5 = compose(flip, x4)\n    x6 = sfilter(x3, x5)\n    x7 = fork(multiply, height, width)\n    x8 = size(x6)\n    x9 = divide(x8, THREE)\n    x10 = multiply(x9, THREE)\n    x11 = add(x10, TWO)\n    x12 = multiply(x11, ONE)\n    x13 = argmin(x6, x12)\n    x14 = neighbors(x13)\n    x15 = mapply(neighbors, x14)\n    x16 = astuple(x11, x13)\n    x17 = rbind(multiply, x16)\n    x18 = astuple(x15, x17)\n    x19 = underfill(I, THREE, x18)\n    x20 = objects(x19, T, F, F)\n    x21 = colorfilter(x20, TWO)\n    x22 = rbind(adjacent, x13)\n    x23 = sfilter(x21, x22)\n    x24 = rbind(toobject, x19)\n    x25 = compose(x4, delta)\n    x26 = chain(x24, x25, mostcolor)\n    x27 = rbind(canvas, UNITY)\n    x28 = apply(x27, x23)\n    x29 = merge(x28)\n    x30 = palette(x29)\n    x31 = matcher(first, THREE)\n    x32 = compose(flip, x31)\n    x33 = sfilter(x30, x32)\n    x34 = rbind(conpose, x528)\n    x35 = lbind(rbind, contained)\n    x36 = chain(x34, x35, x22)\n    x37 = lbind(colorcount, x14)\n    x38 = compose(x37, x36)\n    x39 = sfilter("], [1.1, "def solve_846da2ef(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(difference, toindices, box)\n    x3 = compose(size, x2)\n    x4 = matcher(x3, ZERO)\n    x5 = rbind(add, FOUR)\n    x6 = chain(x5, double, width)\n    x7 = fork(equality, size, x6)\n    x8 = chain(x5, double, height)\n    x9 = fork(equality, size, x8)\n    x10 = fork(either, x7, x9)\n    x11 = fork(both, x4, x10)\n    x12 = extract(x1, x11)\n    x13 = toindices(x12)\n    x14 = center(x12)\n    x15 = vfrontier(x14)\n    x16 = intersection(x13, x15)\n    x17 = size(x16)\n    x18 = positive(x17)\n    x19 = branch(x18, dmirror, identity)\n    x20 = x19(I)\n    x21 = color(x12)\n    x22 = palette(I)\n    x23 = remove(x21, x22)\n    x24 = lbind(colorcount, I)\n    x25 = argmin(x23, x24)\n    x26 = other(x23, x25)\n    x27 = ofcolor(x20, x25)\n    x28 = ofcolor(x20, x21)\n    x29 = leftmost(x28)\n    x30 = lbind(greater, x29)\n    x31 = compose(x30, last)\n    x32 = sfilter(x27, x31)\n    x33 = difference(x27, x32)\n    x34 = vmirror(x32)\n    x35 = leftmost(x28)\n    x36 = leftmost(x32)\n    x37 = subtract(x35, x36)\n    x38 = add(TWO, x37)\n    x39 = tojvec(x38)\n    x40 = shift(x34, x39)\n    x41 = vmirror("], [1.1, "def solve_d18da226(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = apply(86260, x6)\n    x8 =pply(connect, x7, x7)\n    x9 = mfilter(x8, vline)\n    x10 = sfilter(x8, x4)\n    x11 = difference(x8, x10)\n    x12 = mapply(88, x11)\n    x13 = shape(I)\n    x14 = add(TWO, x13)\n    x15 = canvas(x1, x14)\n    x16 = asobject(I)\n    x17 = shift(x16, UNITY)\n    x18 = paint(x15, x17)\n    x19 = double(SIX)\n    x20 = astuple(ONE, x19)\n    x21 = invert(x20)\n    x22 = asindices(x21)\n    x23 = recolor(x1, x22)\n    x24 = shift(x23, x21)\n    x25 = paint(x18, x24)\n    x26 = double(SIX)\n    x27 = astuple(ONE, x26)\n    x28 = invert(x27)\n    x29 = invert(x28)\n    x30 = astuple(ZERO, x29)\n    x31 = invert(x30)\n    x32 = astuple(x31, x21)\n    x33 = shoot(UNITY, x32)\n    x34 = shoot(x33, x24)\n    x35 = combine(x33, x34)\n    x36 = intersection(x33, x34)\n    x37 = shoot(x36, x31)\n    x38 = recolor(x1, x37)\n    x39 = paint(x20, x38)\n    x40 = double(x39)\n    x41 = invert(x40)\n    x"], [1.1, "def solve_38d285b0(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = size(x5)\n    x7 = positive(x6)\n    x8 = astuple(color, x5)\n    x9 = astuple(center, x3)\n    x10 = lbind(ofcolor, I)\n    x11 = branch(x7, x9, x10)\n    x12 = x11(x1)\n    x13 = x11(I)\n    x14 = height(x13)\n    x15 = divide(x14, x12)\n    x16 = subtract(x15, x12)\n    x17 = width(x13)\n    x18 = divide(x17, x12)\n    x19 = astuple(x16, x18)\n    x20 = invert(x19)\n    x21 = ulcorner(x7)\n    x22 = invert(x21)\n    x23 = urcorner(x7)\n    x24 = ulcorner(x7)\n    x25 = astuple(x23, x24)\n    x26 = shift(x5, x25)\n    x27 = subgrid(x26, x13)\n    x28 = astuple(x21, x22)\n    x29 = ulcorner(x7)\n    x30 = ulcorner(x7)\n    x31 = subtract(x30, x29)\n    x32 = shift(x5, x31)\n    x33 = ofcolor(x27, x50)\n    x34 = recolor(x50, x33)\n    x35 = ofcolor(x41, x50)\n    x36 = recolor(x451, x35)\n    x37 = combine(x34, x36)\n    x38 = height(x37)\n    x39 = decrement(x38)\n    x40 = toivec(x39)\n    x41 = invert(x40)\n    x42 = shift(x"], [1.1, "def solve_5f252d22(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_a09e04cd(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = apply(first, x22)\n    x24 = lbind(sfilter, x21)\n    x25 = compose(first, last)\n    x26 = lbind(matcher, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x27, x23)\n    x29 = lbind(shift, x15)\n    x30 = chain(x29, toivec, uppermost)\n    x31 = matcher(first, x18)\n    x32 = rbind(sfilter, x31)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(toindices, x32, x30)\n    x36 = chain(x33, x34, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = compose(color, x37)\n    x39 = compose(x32, x30)\n    x40 = fork(recolor, x38, x39)\n    x41 = fork(other, palette,"], [1.1, "def solve_e321daa0(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = asindices(I)\n    x5 = apply(first, x4)\n    x6 = difference(x5, x3)\n    x7 = ofcolor(I, x1)\n    x8 = rbind(interval, ONE)\n    x9 = lbind(rbind, contained)\n    x10 = lbind(sfilter, x6)\n    x11 = rbind(matcher, ZERO)\n    x12 = chain(size, x10, x9)\n    x13 = lbind(sfilter, x7)\n    x14 = lbind(compose, x12)\n    x15 = chain(x13, x11, x14)\n    x16 = lbind(fork, x8)\n    x17 = compose(increment, minimum)\n    x18 = lbind(lbind, astuple)\n    x19 = lbind(chain, x17)\n    x20 = rbind(x19, first)\n    x21 = chain(x20, x18, first)\n    x22 = lbind(chain, maximum)\n    x23 = rbind(x22, first)\n    x24 = chain(x23, x18, first)\n    x25 = fork(x16, x21, x24)\n    x26 = compose(x15, x25)\n    x27 = apply(toivec, x3)\n    x28 = apply(x26, x27)\n    x29 = argmax(x28, width)\n    x30 = remove(x29, x28)\n    x31 = ulcorner(x29)\n    x32 = invert(x31)\n    x33 = shift(x29, x32)\n    x34 = asindices(I)\n    x35 = center(x34)\n    x36 = invert(x35)\n    x37 = shift(x34, x36)\n    x38 = width(I)\n    x39 = double(x38)\n    x40 = tojvec(x39)\n    x"], [1.1, "def solve_036c9bd8(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x20, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = compose(x86, last)\n    x38 = argmin(x35, x37)\n    x39 = first(x38)\n    x40"], [1.1, "def solve_86692c69(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = lbind(remove, x1)\n    x3 = chain(positive, size, x2)\n    x4 = compose(x3, palette)\n    x5 = multiply(FIVE, UNITY)\n    x6 = canvas(ZERO, x5)\n    x7 = asindices(x6)\n    x8 = fork(add, first, last)\n    x9 = chain(flip, even, x8)\n    x10 = sfilter(x7, x9)\n    x11 = initset(x1)\n    x12 = box(x7)\n    x13 = inbox(x7)\n    x14 = center(x7)\n    x15 = initset(x14)\n    x16 = lbind(toobject, x12)\n    x17 = compose(x4, x16)\n    x18 = lbind(toobject, x13)\n    x19 = compose(x4, x18)\n    x20 = lbind(toobject, x15)\n    x21 = compose(x4, x20)\n    x22 = fork(both, x19, x21)\n    x23 = fork(both, x17, x22)\n    x24 = compose(x23, trim)\n    x25 = compose(box,477)\n    x26 = lbind(toobject, x25)\n    x27 = compose(x26, asindices)\n    x28 = fork(difference, x27, box)\n    x29 = lbind(fork, recolor)\n    x30 = lbind(x29, identity)\n    x31 = lbind(compose, x12)\n    x32 = lbind(compose, x28)\n    x33 = compose(x31, x2)\n    x34 = fork(x31, x32, x33)\n    x35 = lbind(chain, size)\n    x36 = lbind(x35, connect)\n    x37 = lbind(x37, x22)\n    x38 = lbind(compose, x24)\n    x39 = compose(x38, x34)\n    x40 ="], [1.1, "def solve_dacc8ab1(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_8787993e(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = astuple(SIX, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, THREE)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = astuple(x23, x27)\n    x29 = rbind(ofcolor, x18)\n    x30 = compose(x29, last)\n    x31 = ofcolor(I, x21)\n    x32 = intersection(x31, x30)\n    x33 = mapply(x30, x32)\n    x34 = fill(I, TWO, x33)\n    x35 = astuple(x24, x30)\n    x36 = lbind(apply, last)\n    x37 = power(x36, FOUR)\n    x38 = x37(x34)\n    x39 ="], [1.1, "def solve_062a2e8e(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = double(TEN)\n    x2 = interval(ZERO, x1, ONE)\n    x3 = connect(ORIGIN, DOWN)\n    x4 = connect(ORIGIN, ZERO_BY_TWO)\n    x5 = combine(x3, x4)\n    x6 = astuple(NEG_TWO, TWO)\n    x7 = lbind(multiply, x6)\n    x8 = toivec(NEG_TWO)\n    x9 = apply(x7, x2)\n    x10 = rbind(subtract, TWO_BY_ZERO)\n    x11 = fork(ofcolor, identity, leastcolor)\n    x12 = chain(x10, center, x11)\n    x13 = rbind(mapply, x9)\n    x14 = lbind(lbind, shift)\n    x15 = lbind(shift, x5)\n    x16 = compose(x15, x12)\n    x17 = chain(x13, x14, x16)\n    x18 = lbind(recolor, FIVE)\n    x19 = compose(x18, x17)\n    x20 = fork(paint, identity, x19)\n    x21 = compose(rot180, x20)\n    x22 = fork(ofcolor, x21, leastcolor)\n    x23 = compose(center, x22)\n    x24 = fork(subtract, x23, x12)\n    x25 = fork(shift, x17, x24)\n    x26 = lbind(recolor, FIVE)\n    x27 = rbind(shift, x8)\n    x28 = chain(x26, x27, x25)\n    x29 = fork(paint, x21, x28)\n    x30 = compose(rot180, x29)\n    x31 = rbind(ofcolor, FIVE)\n    x32 = compose(x31, x30)\n    x33 = leastcolor(I)\n    x34 = ofcolor(I, x33)\n    x35 = mostcolor(I)\n    x36 = shape(I)\n    x37 = canvas(x35, x"], [1.1, "def solve_ad47e53a(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_011e9459(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = add(x37, ulcorner)\n    x39 = invert(x38)\n    x40 = shift(x31"], [1.1, "def solve_25a4bc90(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_8b54f2e0(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 =ulcorner(x24)\n    x26 = urcorner(x24)\n    x27 = shoot(x25, UNITY)\n    x28 = shoot(x26, DOWN_LEFT)\n    x29 = combine(x27, x28)\n    x30 = fill(x24, x3, x29)\n    x31 = intersection(x30, x22)\n    x32 = fill(x30, TWO, x31)\n    x33 =787(x32)\n    x34 =88 first(x33)\n    x35 = rightmost(x34)\n    x36 = lbind(shift, x34)\n    x37 = objects(x32, T, F, T)\n    x38 = colorfilter(x37, x39)\n    x39 = apply"], [1.1, "def solve_37d6790b(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, ZERO, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x21, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32, x31)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = sfilter(x rbind, x34)\n    x36 = astuple(x21, x20)\n    x37 = lbind(multiply, x36)\n    x38 = apply(x37, x35)\n    x39 = lbind(shift, x28)\n    x40 = mapply(x39, x38)"], [1.1, "def solve_aed84e40(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x1, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x6, x4)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ONE)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18, x"], [1.1, "def solve_ffee73d7(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(contained, EIGHT)\n    x2 = chain(flip, x1, palette)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(apply, x4)\n    x6 = chain(x3, x5, frontiers)\n    x7 = astuple(x6, ONE)\n    x8 = sfilter(x3, x7)\n    x9 = fork(color, first, last)\n    x10 = product(x8, x9)\n    x11 = color(x1)\n    x12 =294(I)\n    x13 = rbind(toobject, I)\n    x14 = compose(x13, first)\n    x15 = last(x14)\n    x16 = ofcolor(x15, x11)\n    x17 = ulcorner(x16)\n    x18 = subgrid(x16, x15)\n    x19 = rot90(x18)\n    x20 = matcher(last, x19)\n    x21 = subtract(x17, x20)\n    x22 = rot180(x17)\n    x23 = matcher(last, x22)\n    x24 = subtract(x17, x23)\n    x25 = replace(x19, x51, x12)\n    x26 = combine(x21, x24)\n    x27 = branch(x88, x26, x25)\n    x28 = rbind(colorcount, x11)\n    x29 = rbind(toobject, x14)\n    x30 = matcher(x28, x552)\n    x31 = compose(flip, x30)\n    x32 = extract(x29, x31)\n    x33 = first(x32)\n    x34 = last(x32)\n    x35 = x33(x94)\n    x36 = x33(x14)\n    x37 = ulcorner(x16)\n    x38 = add(x37, x36)\n    x39 = subgrid(x13, x19)\n    x40 = rbind(count, x38)"], [1.1, "def solve_dd24cb04(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x20, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = compose(x36, first)\n    x38 = argmin(x35, x37)\n    x39 = first(x38)\n    x40"], [1.1, "def solve_5e58d5ab(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(colorcount, x31)\n    x34 = compose(x33, first)\n    x35 = matcher(x34, ZERO)\n    x36 = rbind(ofcolor, x31)\n    x37 = chain(flip, x35, x36)\n    x38 = fork(recolor, x37, x31)\n    x39 = mapply(x38,"], [1.1, "def solve_6d8b78f0(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = height(I)\n    x9 = astuple(x8, ONE)\n    x10 = canvas(THREE, x9)\n    x11 = hconcat(x10, I)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = identity(DOWN)\n    x17 = connect(ORIGIN, x15)\n    x18 = fill(x11, THREE, x17)\n    x19 = identity(x13)\n    x20 = identity(x12)\n    x21 = identity(x12)\n    x22 = identity(F)\n    x23 = identity(ZERO)\n    x24 = compose(first, first)\n    x25 = chain(first, last, x24)\n    x26 = compose(first, first)\n    x27 = chain(last, last, x26)\n    x28 = chain(first, first, first)\n    x29 = chain(first, last, last)\n    x30 = chain(first, first, last)\n    x31 = chain(last, first, last)\n    x32 = compose(decrement, x25)\n    x33 = compose(decrement, x27)\n    x34 = fork(astuple, x32, x33)\n    x35 = compose(decrement, x27)\n    x36 = fork(subtract, x25, x35)\n    x37 = fork(subtract, x28, x36)\n    x38 = fork(astuple, x34, x37)\n    x39 = lbind(extract, x7)\n    x40 = lbind(matcher, first)\n    x41 = chain"], [1.1, "def solve_68ead827(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = partition(I)\n    x2 = product(x1, x1)\n    x3 = fork(equality, first, last)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = fork(adjacent, first, last)\n    x7 = compose(flip, x6)\n    x8 = extract(x5, x7)\n    x9 = totuple(x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = combine(x10, x11)\n    x13 = leftmost(x12)\n    x14 = increment(x13)\n    x15 = rightmost(x12)\n    x16 = decrement(x15)\n    x17 = apply(uppermost, x9)\n    x18 = maximum(x17)\n    x19 = increment(x18)\n    x20 = apply(lowermost, x9)\n    x21 = minimum(x20)\n    x22 = decrement(x21)\n    x23 = apply(leftmost, x9)\n    x24 = maximum(x23)\n    x25 = increment(x24)\n    x26 = apply(rightmost, x9)\n    x27 = minimum(x26)\n    x28 = decrement(x27)\n    x29 = uppermost(x12)\n    x30 = increment(x29)\n    x31 = lowermost(x12)\n    x32 = decrement(x31)\n    x33 = hmatching(x10, x11)\n    x34 = branch(x33, x14, x25)\n    x35 = branch(x33, x16, x28)\n    x36 = branch(x33, x22, x32)\n    x37 = branch(x33, x19, x30)\n    x38 = astuple(x36, x35)\n    x39 = astuple(x37, x34)\n    x40 = initset(x39)\n    x41 = insert(x38, x40)\n    x42 = backdrop(x41)\n    x43 = merge"], [1.1, "def solve_d3dc2f97(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = equality(x5, ZERO)\n    x7 = branch(x6, identity, vmirror)\n    x8 = x7(x4)\n    x9 = ofcolor(x8, EIGHT)\n    x10 = uppermost(x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, identity, hmirror)\n    x13 = x12(x8)\n    x14 = ofcolor(x13, EIGHT)\n    x15 = ofcolor(x13, TWO)\n    x16 = rbind(shoot, DOWN)\n    x17 = mapply(x16, x14)\n    x18 = height(x13)\n    x19 = apply(first, x15)\n    x20 = insert(ZERO, x19)\n    x21 = insert(x18, x19)\n    x22 = apply(decrement, x21)\n    x23 = order(x20, identity)\n    x24 = order(x22, identity)\n    x25 = size(x15)\n    x26 = increment(x25)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = apply(tojvec, x27)\n    x29 = pair(x23, x24)\n    x30 = lbind(sfilter, x17)\n    x31 = compose(first, last)\n    x32 = chain(decrement, first, first)\n    x33 = fork(greater, x31, x32)\n    x34 = chain(increment, last, first)\n    x35 = fork(greater, x34, x31)\n    x36 = fork(both, x33, x35)\n    x37 = lbind(lbind, astuple)\n    x38 = lbind(compose, x36)\n    x39 = chain(x30, x38, x37)\n    x40"], [1.1, "def solve_37dad45e(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_cf8952e1(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = apply(first, x22)\n    x24 = lbind(sfilter, x21)\n    x25 = compose(first, last)\n    x26 = lbind(matcher, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x27, x23)\n    x29 = lbind(shift, x15)\n    x30 = chain(x29, toivec, uppermost)\n    x31 = matcher(first, x18)\n    x32 = rbind(sfilter, x31)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(toindices, x32, x30)\n    x36 = chain(x33, x34, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = compose(color, x37)\n    x39 = compose(x32, x30)\n    x40 = fork(recolor, x38, x39)\n    x41 = fork(other, palette, x38)\n"], [1.1, "def solve_b0d8f7d8(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = astuple(SIX, ONE)\n    x2 = crop(I, ORIGIN, x1)\n    x3 = tophalf(x2)\n    x4 = upscale(x3, FOUR)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = hconcat(x2, x5)\n    x7 = upscale(x6, FOUR)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = crop(x6, x9, x7)\n    x11 =458(x10)\n    x12 = vmirror(x11)\n    x13 = objects(x12, F, F, T)\n    x14 = argmin(x13, numcolors)\n    x15 = x14(x14)\n    x16 = subgrid(x15, x6)\n    x17 = palette(x16)\n    x18 = remove(ZERO, x17)\n    x19 = other(x18,1991)\n    x20 = rbind(colorcount, x19)\n    x21 = argmin(x12, x20)\n    x22 = hmirror(x21)\n    x23 = objects(x22, T, F, T)\n    x24 = colorfilter(x23, x19)\n    x25 = argmin(x24, DOWN)\n    x26 = ulcorner(x25)\n    x27 = llcorner(x25)\n    x28 = add(x27, x6)\n    x29 = add(x28, x20)\n    x30 = shift(x22, x29)\n    x31 = rbind(10, x30)\n    x32 =jlpply(x31, x26)\n    x33 = apply(x16, x32)\n    x34 = normalize(x33)\n    x35 = x14(x34)\n    x36 = matcher(first, x39)\n    x37 = rbind(sfilter, x36)\n    x38 = lbind(mirror, x37)\n    x39 = chain(size, x35, x"], [1.1, "def solve_8b6972ad(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_37303c83(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_f21f0b18(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_a7dd8c9e(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 =73colors(I)\n    x2 = neighbors(ORIGIN)\n    x3 = mapply(neighbors, x2)\n    x4 = insert(ORIGIN, x3)\n    x5 = rbind(shoot, ORIGIN)\n    x6 = mapply(x5, x4)\n    x7 = underfill(I, ONE, x6)\n    x8 = rbind(shoot, DOWN)\n    x9 = mapply(x8, x4)\n    x10 = astuple(cmirror,459)\n    x11 = astuple(hmirror, vmirror)\n    x12 = combine(x10, x11)\n    x13 = rbind(shoot, UP_RIGHT)\n    x14 = mapply(x13, x4)\n    x15 = combine(x13, x14)\n    x16 = fork(combine, identity, x15)\n    x17 = mapply(x16, x12)\n    O = paint(x7, x17)\n    return O"], [1.1, "def solve_befaf6f7(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = compose(flip, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = matcher(color, x5)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x1, x7)\n    x9 = merge(x8)\n    x10 = fill(I, TWO, x9)\n    x11 = mapply(toindices, x8)\n    x12 = fill(x10, NEG_ONE, x11)\n    x13 = lbind(shift, x8)\n    x14 = mapply(x13, x12)\n    x15 = fill(x12, sIX, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = colorfilter(x16, x5)\n    x18 = rbind(adjacent, x4)\n    x19 = sfilter(x17, x18)\n    x20 = difference(x17, x19)\n    x21 =9(ORIGIN, center)\n    x22 = colorfilter(x105, TWO)\n    x23 =449(x22, x21)\n    x24 = rbind(shoot, DOWN)\n    x25 = mapply(x24, x23)\n    x26 = fill(x15, SIX, x25)\n    x27 = objects(x26, T, F, T)\n    x28 = apply(urcorner, x27)\n    x29 = mapply(x28, x26)\n    x30 = shoot(x26, UP_RIGHT)\n    x31 = shoot(x26, NEG_UNITY)\n    x32 = combine(x30, x31)\n    x33 = mapply(x25, x29)\n    x34 = fill(x26, SIX, x33)\n    O = fill(x34, ONE, x32)\n    return O"], [1.1, "def solve_eb347341(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = fork(combine, dneighbors, box)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, T, F, T)\n    x9 = colorfilter(x8, x4)\n    x10 = rbind(bordering, I)\n    x11 =min(x9, x10)\n    x12 =747(x11)\n    x13 = rbind(hordering, I)\n    x14 = vmirror(x11)\n    x15 = hconcat(x13, x14)\n    x16 =aint(x15, x12)\n    O = vconcat(x16, x8)\n    return O"], [1.1, "def solve_b12746ad(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =479(I)\n    x3 = compose(first, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = other(x8, x1)\n    x10 = replace(I, x6, x1)\n    x11 = objects(x10, T, F, F)\n    x12 = colorfilter(x11, x6)\n    x13 = rbind(bordering, x10)\n    x14 = compose(flip, x13)\n    x15 = mfilter(x12, x14)\n    x16 = difference(x12, x15)\n    x17 = apply(ulcorner, x16)\n    x18 = rbind(shift, RIGHT)\n    x19 = mapply(x18, x17)\n    x20 = vmirror(x19)\n    x21 = objects(x20, T, F, T)\n    x22 = apply(toindices, x21)\n    x23 = apply(urcorner, x22)\n    x24 = mapply(x23, x22)\n    x25 = mapply(toindices, x24)\n    x26 = apply(llcorner, x25)\n    x27 = mapply(toindices, x26)\n    x28 = mapply(add, x15, x27)\n    x29 = mapply(tojvec, x28)\n    x30 = mapply(x29, x25)\n    x31 = fill(x20, x6, x30)\n    x32 = fill(x31, x9, x27)\n    O = replace(x32, x6, x1)\n    return O"], [1.1, "def solve_ef0bce29(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = lbind(colorcount, I)\n    x5 = compose(x4, size)\n    x6 = matcher(x5, TWO)\n    x7 =2069457b6(I)\n    x8 = mfilter(x3, x6)\n    x9 = objects(I, T, F, F)\n    x10 = TEN(x9)\n    x11 = rbind(adjacent, x10)\n    x12 = mfilter(x8, x11)\n    O = fill(I, FOUR, x12)\n    return O"], [1.1, "def solve_7f8678ae(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 =8888(I, T, F)\n    x2 =8888(I, FOUR)\n    x3 = compose(first, x2)\n    x4 = rbind(compose, x3)\n    x5 = lbind(rbind, contained)\n    x6 = chain(x4, x5, last)\n    x7 =05d8ef2013(x6)\n    x8 =77(x7)\n    x9 =77(x6)\n    x10 = fork(sfilter, identity, x8)\n    x11 = fork(sfilter, identity, x9)\n    x12 = compose(size, x10)\n    x13 = compose(size, x11)\n    x14 = greater(x12, ONE)\n    x15 = branch(x14, x13, x7)\n    x16 = x15(x6)\n    x17 = ofcolor(I, x16)\n    x18 = inbox(x17)\n    ORIGIN, x18)\n    x19 = portrait(x17)\n    x20 = branch(x19, x7, x7)\n    x21 = branch(x19, vline, hline)\n    x22 = x20(x21)\n    x23 = fill(I, ZERO, x22)\n    x24 = ofcolor(I, x16)\n    x25 = difference(x24, x26)\n    O = fill(x23, ZERO, x25)\n    return O"], [1.1, "def solve_5902ac14(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 =000170000000\n    \"\"\"\n    x2 = box(I)\n    O = fill(I, ZERO, x2)\n    return O"], [1.1, "def solve_96559171(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 =sit6594224 contained(I, ONE)\n    x2 = delta(x1)\n    x3 =66toindices(x2)\n    x4 = box(x3)\n    x5 = difference(x4, x3)\n    x6 = inbox(x5)\n    x7 = backdrop(x6)\n    x8 = lbind(position, x7)\n    x9 = compose(288, x8)\n    x10 = fork(greater, identity, x9)\n    x11 = sfilter(x5, x10)\n    x12 = difference(x5, x11)\n    x13 = lbind(greater, ONE)\n    x14 = compose(x13, x12)\n    x15 = power(x14, FOUR)\n    x16 = fork(both, x3, x15)\n    x17 = fork(both, x6, x16)\n    x18 = fgpartition(I)\n    x19 = merge(x18)\n    x20 = difference(x19, x18)\n    x21 = mostcolor(I)\n    x22 = compose(remove, center)\n    x23 = compose(center, x22)\n    x24 = fork(shoot, x23, x22)\n    x25 = fork(recolor, color, x24)\n    x26 = mapply(x25, x20)\n    O = paint(I, x26)\n    return O"], [1.1, "def solve_90188eab(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices ofx14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.1, "def solve_a8e15b94(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    a87203756\n    \"\"\"\n    x1 = recolor(ONE, x3)\n    x2 = colorfilter(x1, TWO)\n    x3 = hsplit(I, x2)\n    x4 = apply(tojvec, x3)\n    x5 = mapply(x7, x4)\n    O = fill(I, EIGHT, x5)\n    return O"], [1.1, "def solve_d8440fb5(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = palette(I)\n    x2 =393(I)\n    x3 = remove(ZERO, x1)\n    x4 = lbind(ofcolor, I)\n    x5 = lbind(prapply, connect)\n    x6 = fork(x5, x4, x4)\n    x7 = compose(merge, x6)\n    x8 = fork(recolor, identity, x7)\n    x9 = mapply(x8, x3)\n    O = paint(I, x9)\n    return O"], [1.1, "def solve_e5b868d5(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = index(x3, ORIGIN)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = intersection(x6, x4)\n    x8 = lrcorner(x7)\n    x9 = shoot(x8, DOWN_LEFT)\n    x10 = intersection(x9, x4)\n    x11 = combine(x7, x10)\n    x12 = asobject(x11)\n    x13 =04015(x12)\n    x14 =\n    1821114120\n    0145451991\n    1410141000\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = objects(x3, T, F, T)\n    x3 = colorfilter(x2, x1)\n    x4 = difference(x2, x3)\n    x5 = merge(x3)\n    x6 = rbind(subgrid, x3)\n    x7 = chain(palette, x6, shape)\n    x8 = lbind(fork, replace)\n    x9 = lbind(x8, identity)\n    x10 = lbind(x9, x7)\n    x11 = rbind(x10, x1)\n    x12 = lbind(ofcolor, x13)\n    x13 = fork(mapply, x12, x11)\n    x14 = mapply(x13, x4)\n    x15 =42159(x14)\n    x16 = replace(x3, x1, x5)\n    O = fill(x16, x1, x16)\n    return O"], [1.1, "def solve_248d610c(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = chain(flip, x1, shape)\n    x3 = hmirror(I)\n    x4 = fgpartition(x3)\n    x5 = merge(x4)\n    x6 = chain(normalize, toindices, box)\n    x7 = difference(x5, x6)\n    x8 = compose(size, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = fork(add, leftmost, uppermost)\n    x11 = argmin(x7, x10)\n    x12 = palette(x3)\n    x13 = remove(x11, x12)\n    x14 = lbind(colorcount, I)\n    x15 = argmin(x13, x14)\n    x16 = lbind(colorcount, x3)\n    x17 = normalize(x11)\n    x18 = matcher(x16, x17)\n    x19 = argmin(x9, x18)\n    x20 = palette(x3)\n    x21 = colorfilter(x20, x19)\n    x22 = rbind(74ddupe, x21)\n    x23 = argmin(x12, x22)\n    x24 = ofcolor(x23, x19)\n    x25 =contained(x19, x24)\n    x26 = ofcolor(x3, x16)\n    x27 = intersection(x26, x25)\n    x28 = outbox(x27)\n    x29 = subgrid(x28, x3)\n    x30 = ofcolor(x29, x16)\n    x31 = ofcolor(x29, x19)\n    x32 = intersection(x31, x30)\n    x33 = replace(x29, x16, x59)\n    x34 = extract(x32, x33)\n    x35 = subgrid(x34, x3)\n    O = trim(x35)\n    return O"], [1.1, "def solve_7ce8e736(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 =157786e21(I):\n    x2 =449989product1\n    x3 =4447(I)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = combine(x8, x5)\n    x10 = lefthalf(x9)\n    O = tophalf(x10)\n    return O"], [1.1, "def solve_e427d8b5(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = rbind(order, identity)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = chain(positive, size, x5)\n    x7 = rbind(repeat, x1)\n    x8 = compose(x7, x6)\n    O =344(x2)\n    return O"], [1.1, "def solve_0d395f90(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 =6360(x24)\n    x26 = ulcorner(x24)\n    x27 = index(x14, x26)\n    x28 = equality(x27, x22)\n    x29 = shift(x15, x28)\n    x30 = urcorner(x28)\n    x31 = other(x10, x13)\n    x32 = shoot(x26, x31)\n    x33 = combine(x29, x32)\n    x34 = rbind(shoot, x30)\n    x35 = mapply(x34, x33)\n    x36 = double(TEN)\n    x37 = tojvec(x36)\n    x38 =47(x35)\n    x39 = insert(x37, x38)\n    O = lrcorner(x39)\n    return O"], [1.1, "def solve_78b20688(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = cover(I, x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(x3, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x77, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = rbind(matcher, ZERO)\n    x14 = compose(x12, x13)\n    x15 = rbind(gravitate, x2)\n    x16 = compose(x15, x14)\n    x17 = fork(add, x16, ulcorner)\n    x18 = fork(connect, x17, x14)\n    x19 = fork(67a423677\n    x20 = fork(sfilter, x18, x19)\n    x21 = fork(recolor, x14, x20)\n    x22 = mapply(x21, x11)\n    O = paint(x7, x22)\n    return O"], [1.1, "def solve_3adb1ed0(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 =portcat(I, I)\n    x2 = box(x1)\n    x3 = fill(x1, ZERO, x2)\n    x4 = subgrid(x1, x3)\n    x5 = fork(combine, vfrontier, hfrontier)\n    x6 = width(x4)\n    x7 = rbind(greater, x6)\n    x8 = chain(x7, tojvec, lrcorner)\n    x9 = height(x4)\n    x10 = decrement(x9)\n    x11 = matcher(x8, x10)\n    x12 = extract(x7, x11)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = toobject(x14, I)\n    x16 = add(UNITY, x15)\n    x17 = shape(x13)\n    x18 = canvas(ZERO, x17)\n    x19 = asindices(x18)\n    x20 = shift(x19, x17)\n    x21 = paint(x18, x20)\n    x22 = objects(x21, F, F, T)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = paint(x21, x23)\n    x25 = normalize(x12)\n    x26 = lbind(shift, x25)\n    x27 =9799383200(x26)\n    x28 = paint(x24, x27)\n    x29 = paint(x28, x25)\n    x30 = rot90(x29)\n    x31 = downscale(x30, x16)\n    x32 = rot90(x31)\n    x33 = paint(x32, x25)\n    O = rot270(x33)\n    return O"], [1.1, "def solve_743cf0a9(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palettecae(I)\n    x5 = remove(x3, x4)\n    x6 = hsplit(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = compress(x7)\n    x10 = palette(x9)\n    x11 =467(x9)\n    x12 =11(x8)\n    x13 = rbind(hconcat, x5)\n    x14 = compose(x13, vmirror)\n    x15 = x14(x10)\n    x16 = ofcolor(x15, x31)\n    x17 = mapply(neighbors, x16)\n    x18 = difference(x17, x16)\n    O = fill(x15, ONE, x18)\n    return O"], [1.1, "def solve_2d480f1a(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = mapply(O = fill(I, x11, x32)\n    return O"], [1.1, "def solve_782109c2(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, h)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = width(I)\n    x16 = decrement(x15)\n    x17 = tojvec(x16)\n    x18 = connect(ORIGIN, x17)\n    x19 = height(I)\n    x20 = decrement(x19)\n    x21 = toivec(x20)\n    x22 = connect(ORIGIN, x21)\n    x23 = shape(I)\n    x24 = canvas(ZERO, x23)\n    x25 = lbind(tojvec, x24)\n    x26 = lbind(shift, x12)\n    x27 = compose(x25, x26)\n    x28 = apply(x27, x18)\n    x29 = lbind(ofcolor, I)\n    x30 = lbind(mapply, x29)\n    x31 = ofcolor(I, x3)\n    x32 =(x30, x31)\n    x33 = fill(x23, x3, x32)\n    x34 = astuple(x23, x28)\n    x35 = shift(x12, x34)\n    x36 = increment(x38)\n    x37 =\n    x31, x36)\n    x38 = apply(x25, x37)\n    O = fill(x33, x3, x38)\n    return O"], [1.1, "def solve_3f684412(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 =0044d8556(I)\n    x5 = objects(I, T, F, T)\n    x6 = height(I)\n    x7 = halve(x6)\n    x8 = add(x7, TWO)\n    x9 = width(I)\n    x10 = rbind(multiply, x9)\n    x11 = apply(x10, x5)\n    x12 = mapply(outbox, x11)\n    x13 = fill(I, x3, x12)\n    x14 = mapply(vfrontier, x15)\n    O = fill(x13, x3, x14)\n    return O"], [1.1, "def solve_1012c076(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, identity, dmirror)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = matcher(identity, x9)\n    x18 = rbind(sfilter, x17)\n    x19 = compose(size, x18)\n    x20 = argmin(x16, x19)\n    x21 = asobject(x20)\n    x22 = matcher(first, x9)\n    x23 = compose(flip, x22)\n    x24 = sfilter(x21, x23)\n    x25 = size(x24)\n    x26 = width(x6)\n    x27 = multiply(x25, x26)\n    x28 = multiply(x25, x27)\n    x29 = rbind(multiply, x28)\n    x30 = chain(most, x29, last)\n    x31 = compose(29ecdecrement, first)\n    x32 = fork(greater, first, last)\n    x33 = compose(x32, x31)\n    x34 = fork(add, first, x33)\n    x35 = compose(x34, last)\n    x36 = ofcolor(x16, x9)\n    x37 = mapply(x35, x36)\n    x38 = paint(x6, x37)\n    O = x5(x38)\n    return O"], [1.1, "def solve_662468bc(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = trim(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(x2)\n    x4 = vmirror(x3)\n    x5 = bottomhalf(x2)\n    x6 = lefthalf(x5)\n    x7 = bottomhalf(x2)\n    x8 = vmirror(x7)\n    x9 = palette(I)\n    x10 = combine(x9, x6)\n    x11 = intersection(x9, x8)\n    x12 = difference(x10, x11)\n    x13 = order(x12, uppermost)\n    x14 = colorcount(I, x6)\n    x15 =\n    x16 =\n    x17 =\n    x16)\n    x18 = x13(x14)\n    x19 = x16(x18)\n    x20 = subtract(x19, x17)\n    x21 = decrement(x20)\n    x22 = canvas(x9, x3)\n    x23 = tojvec(x21)\n    x24 = crop(x22, x23, x20)\n    O = fill(x24, ZERO, x22)\n    return O"], [1.1, "def solve_7f1bcbab(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = toindices(x1)\n    x3 =227(x2)\n    x4 = mapply(dneighbors, x1)\n    x5 = mapply(ineighbors, x1)\n    x6 = toobject(x4, I)\n    x7 =27(x6)\n    x8 = mostcolor(x7)\n    x9 = palette(I)\n    x10 = remove(x8, x9)\n    x11 = other(x10, x9)\n    x12 =16114840442338500\n    x13 = rbind(colorcount, x8)\n    x14 = argmax(x11, x13)\n    x15 = ofcolor(I, x11)\n    x16 = subgrid(x15, I)\n    x17 = apply(mostcommon, x15)\n    x18 = normalize(x16)\n    x19 = lbind(shift, x18)\n    x20 = mapply(x19, x17)\n    x21 = ofcolor(x20, x11)\n    x22 = subgrid(x21, x20)\n    x23 = apply(mostcommon, x15)\n    x24 = normalize(x22)\n    x25 = matcher(first, x8)\n    x26 = sfilter(x24, x25)\n    x27 = shift(x26, x20)\n    O = fill(x22, x11, x27)\n    return O"], [1.1, "def solve_53115b75(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = totuple(x6)\n    x9 = order(x8, identity)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = remove(x10, x9)\n    x13 = compose(last, last)\n    x14 = compose(hmirror, first)\n    x15 = rightmost(x4)\n    x16 = rightmost(x11)\n    x17 = greater(x15, x16)\n    x18 = branch(x17, x13, x14)\n    x19 = crop(x10, ORIGIN, x18)\n    x20 = decrement(x17)\n    x21 =364(x20, TWO_BY_ZERO)\n    O = branch(x17, width, height)\n    return O"], [1.1, "def solve_fe7d6417(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = palette(I)\n    x2 =446(ONE, THREE)\n    x3 = rbind(subgrid, I)\n    x4 =44compose(x3, x2)\n    x5 = rbind(colorcount, ZERO)\n    x6 = matcher(x5, THREE)\n    x7 = compose(x6, x4)\n    x8 = cmirror(I)\n    x9 = papply(pair, x8, x6)\n    x10 =2417apply(remove, x9)\n    x11 = objects(x14, x10, x3)\n    x12 = argmax(x11, x7)\n    x13 = subgrid(x12, x14)\n    x14 = increment(x13)\n    x15 = branch(x11, ZERO, x14)\n    x16 = asindices(x15)\n    x17 = lbind(shift, x16)\n    x18 = double(x17)\n    x19 = interval(ZERO, x18, ONE)\n    x20 = lbind(multiply, x17)\n    x21 = apply(x20, x19)\n    x22 = lbind(mapply, x12)\n    x23 = lbind(lbind, shift)\n    x24 = lbind(occurrences, x14)\n    x25 = compose(x24, x23)\n    x26 = lbind(lbind, shift)\n    x27 = compose(x26, x25)\n    x28 = lbind(rbind, occurrences)\n    x29 = compose(x28, last)\n    x30 = fork(matcher, last, x27)\n    x31 = fork(sfilter, hline, x30)\n    x32 = mapply(x31, x21)\n    O = paint(x14, x32)\n    return O"], [1.1, "def solve_e3d50554(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = shape(I)\n    x20 = canvas(x10, x19)\n    x21 = lbind(divide, x19)\n    x22 = apply(x21, x18)\n    x23 = sfilter(x1, x22)\n    x24 = lbind(colorcount, x20)\n    x25 = argmin(x23, x24)\n    x26 = objects(x6, T, F, T)\n    x27 = colorfilter(x26, x25)\n    x28 = apply(ulcorner, x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x26)\n    x31 = paint(x20, x30)\n    x32 = merge(x31)\n    x33 =99(x32)\n    x34 = replace(x31, x25, x33)\n    O = cover(x39, x34)\n    return O"], [1.1, "def solve_32d41890(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = switch(I, THREE, FOUR)\n    x2 =46(equality, NINE, ZERO)\n    x3 = branch(x2, dmirror, identity)\n    x4 = x3(x1)\n    x5 = objects(x4, T, F, T)\n    x6 = argmin(x5, leftmost)\n    x7 = argmax(x5, leftmost)\n    x8 = color(x6)\n    x9 = color(x7)\n    x10 = leftmost(x6)\n    x11 = leftmost(x7)\n    x12 = height(x6)\n    x13 = width(x6)\n    x14 = astuple(x12, x13)\n    x15 = mostcolor(I)\n    x16 =most(x6)\n    x17 = uppermost(x6)\n    x18 = color(x16)\n    x19 = color(x17)\n    x20 = rightmost(x6)\n    x21 = leftmost(x7)\n    x22 = astuple(x20, x21)\n    x23 = remove(x16, x22)\n    x24 =80126(I):\n    x25 = dmirror(x24)\n    x26 = lbind(shift, x25)\n    x27 = compose(x26, tojvec)\n    x28 = Tapply(x27, x23)\n    x29 = double(x38)\n    x30 = lbind(multiply, x29)\n    x31 = apply(x30, x28)\n    x32 = mapply(x27, x31)\n    x33 = paint(x4, x32)\n    x34 = merge(x5)\n    x35 = cover(x33, x34)\n    x36 = leftmost(x35)\n    x37 = equality(x36, ZERO)\n    O = paint(x33, x37)\n    return O"], [1.1, "def solve_a3197471(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = replace(I, NINE, ZERO)\n    x3 = lbind26apply(d89b23026\n    rbind( spot36, x2)\n    x4 = chain(positive, size, x3)\n    x5 = lbind(apply, x4)\n    x6 = chain(x71, x5, dmirror)\n    x7 = x6(x2)\n    x8 = fork(recolor, color, x7)\n    x9 = mapply(x8, x5)\n    O = paint(x2, x9)\n    return O"], [1.1, "def solve_3748b4a9(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 =393(x2)\n    x5 = fork(multiply, height, width)\n    x6 = lbind(shift, x2)\n    x7 =666x543(x2)\n    x8 =93(x7, x6)\n    x9 =22(x8, x4)\n    x10 = mapply(x6, x3)\n    x11 = paint(I, x10)\n    O = subgrid(x2, x11)\n    return O"]], "bf699163": [[0.1607843137254902, "def solve_b1cfede5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, F, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.1607843137254902, "def solve_37b0bc2f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, F, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.1607843137254902, "def solve_7f37d928(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, T, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.28823529411764703, "def solve_75fe2e14(I):\n    x1 = mostcolor(I)\n    O = canvas(x1, THREE_BY_THREE)\n    return O"], [0.29814814814814816, "def solve_961115b4(I):\n    O = canvas(FIVE, TWO_BY_TWO)\n    return O"], [0.30490196078431375, "def solve_5bd2a00f(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_e26d2c5d(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_bce5bbe4(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_5ec36bb5(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.32027505446623095, "def solve_12c267fd(I):\n    x1 = mostcolor(I)\n    x2 = frontiers(I)\n    x3 = sfilter(x2, vline)\n    x4 = difference(x2, x3)\n    x5 = astuple(x4, x3)\n    x6 = apply(size, x5)\n    x7 = increment(x6)\n    O = canvas(x1, x7)\n    return O"], [0.3215686274509804, "def solve_1f82c158(I):\n    x1 = objects(I, T, F, F)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = lbind(sfilter, x3)\n    x5 = lbind(matcher, identity)\n    x6 = chain(size, x4, x5)\n    x7 = matcher(x6, ONE)\n    x8 = sfilter(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmax(x8, x9)\n    x11 = matcher(color, x10)\n    x12 = extract(x1, x11)\n    O = subgrid(x12, I)\n    return O"], [0.3215686274509804, "def solve_f695995e(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.3215686274509804, "def solve_96dec7e5(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.3215686274509804, "def solve_f0c03153(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.3215686274509804, "def solve_7b94c557(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.3215686274509804, "def solve_5fba575c(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.3215686274509804, "def solve_57ab93bd(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(equality, toindices, box)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = argmax(x3, x4)\n    x6 = fgpartition(I)\n    x7 = merge(x6)\n    x8 = difference(x7, x5)\n    x9 = subgrid(x5, I)\n    x10 = subgrid(x8, I)\n    x11 = height(x9)\n    x12 = subtract(x11, TWO)\n    x13 = height(x10)\n    x14 = divide(x12, x13)\n    x15 = width(x9)\n    x16 = subtract(x15, TWO)\n    x17 = width(x10)\n    x18 = divide(x16, x17)\n    x19 = hupscale(x10, x18)\n    x20 = vupscale(x19, x14)\n    x21 = asobject(x20)\n    x22 = shift(x21, UNITY)\n    O = paint(x9, x22)\n    return O"], [0.36851851851851847, "def solve_9e49776d(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.36851851851851847, "def solve_dc3280e1(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.36851851851851847, "def solve_66877ab0(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.37411764705882355, "def solve_900eec46(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = astuple(ONE, THREE)\n    x8 = size(x6)\n    x9 = order(x6, leftmost)\n    x10 = apply(color, x9)\n    x11 = rbind(canvas, UNITY)\n    x12 = apply(x11, x10)\n    x13 = merge(x12)\n    x14 = dmirror(x13)\n    x15 = subtract(NINE, x8)\n    x16 = astuple(ONE, x15)\n    x17 = mostcolor(I)\n    x18 = canvas(x17, x16)\n    x19 = hconcat(x14, x18)\n    x20 = hsplit(x19, THREE)\n    x21 = merge(x20)\n    x22 = crop(x21, ORIGIN, x7)\n    x23 = crop(x21, DOWN, x7)\n    x24 = crop(x21, TWO_BY_ZERO, x7)\n    x25 = vmirror(x23)\n    x26 = vconcat(x22, x25)\n    O = vconcat(x26, x24)\n    return O"], [0.3931917211328976, "def solve_41420e20(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.3931917211328976, "def solve_9868614a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.3931917211328976, "def solve_736837d0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.3931917211328976, "def solve_5d3dc232(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.3931917211328976, "def solve_870358ef(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.3931917211328976, "def solve_42430b00(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.3966712532966403, "def solve_66832f92(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x24, x27)\n    O = paint(x14, x28)\n    return O"], [0.3966712532966403, "def solve_7aa34db2(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, size)\n    O = subgrid(x2, I)\n    return O"], [0.3985185185185185, "def solve_70cad8dc(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = merge(x1)\n    x5 = fill(I, NEG_ONE, x4)\n    x6 = shape(I)\n    x7 = canvas(NEG_ONE, x6)\n    x8 = hconcat(x5, x7)\n    x9 = objects(x8, F, F, T)\n    x10 = rbind(other, x3)\n    x11 = compose(x10, palette)\n    x12 = fork(astuple, x11, ulcorner)\n    x13 = apply(x12, x9)\n    x14 = merge(x9)\n    x15 = fill(I, x3, x14)\n    x16 = paint(x15, x13)\n    O = compress(x16)\n    return O"], [0.40763616557734206, "def solve_25b103bb(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_1d3f67c1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_5c29d6b4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_cc6b1256(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_02507b7d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_6c48d8d6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_93633735(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_645e4142(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_9b41408b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_8d319fd4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_e4f6a1d0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_79af4174(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_6c16c983(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_5d301448(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_e3c704de(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.4148148148148148, "def solve_13dc3b85(I):\n    x1 = ofcolor(I, THREE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [0.44856386999244136, "def solve_d827ad72(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = merge(x2)\n    O = subgrid(x3, I)\n    return O"], [0.5232709913889689, "def solve_cd5373c4(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5361111111111111, "def solve_dc6177ee(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.5900055192264699, "def solve_ae7b0a55(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5900055192264699, "def solve_070aff51(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5900055192264699, "def solve_abf671a3(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5900055192264699, "def solve_56b770bc(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5902430555555556, "def solve_7528b41c(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5902430555555556, "def solve_eaa8f01b(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5902430555555556, "def solve_070f3512(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5916319444444444, "def solve_e0c62ccf(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.5916319444444444, "def solve_88a00128(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.5936739417989418, "def solve_26545380(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [0.5936739417989418, "def solve_0e1d4e9d(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [0.6194444444444445, "def solve_6b6e8942(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(shoot, UNITY)\n    x3 = compose(x2, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    x6 = astuple(SIX, SIX)\n    x7 = canvas(ZERO, x6)\n    O = paint(x7, x5)\n    return O"], [0.6247777777777778, "def solve_539a42de(I):\n    x1 = shape(I)\n    x2 = index(I, ORIGIN)\n    x3 = colorcount(I, ZERO)\n    x4 = decrement(x1)\n    x5 = positive(x3)\n    x6 = branch(x5, x4, x1)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = width(x7)\n    x9 = astuple(ONE, x8)\n    x10 = crop(x7, ORIGIN, x9)\n    x11 = vupscale(x10, x8)\n    x12 = dmirror(x11)\n    x13 = hconcat(x7, x11)\n    x14 = hconcat(x12, x7)\n    x15 = vconcat(x13, x14)\n    x16 = asobject(x15)\n    x17 = multiply(UNITY, TEN)\n    x18 = canvas(x2, x17)\n    O = paint(x18, x16)\n    return O"], [0.631901366607249, "def solve_2b8ee24d(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.6407407407407408, "def solve_6165579d(I):\n    x1 = palette(I)\n    x2 = frontiers(I)\n    x3 = sfilter(x2, vline)\n    x4 = difference(x1, x3)\n    x5 = astuple(x4, x3)\n    x6 = apply(size, x5)\n    x7 = increment(x6)\n    O = canvas(ZERO, x7)\n    return O"], [0.6600575299564271, "def solve_1207b8fa(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6600575299564271, "def solve_0e475294(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6600575299564271, "def solve_629ce595(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6600575299564271, "def solve_64fe43b9(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6600575299564271, "def solve_1175a4b6(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6600575299564271, "def solve_8969f02f(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6648936711436711, "def solve_427db87f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = height(x2)\n    x4 = halve(x3)\n    x5 = width(x2)\n    x6 = halve(x5)\n    x7 = ulcorner(x2)\n    x8 = lrcorner(x2)\n    x9 = shape(I)\n    x10 = maximum(x9)\n    x11 = multiply(THREE, TEN)\n    x12 = interval(ZERO, x11, ONE)\n    x13 = rbind(multiply, x4)\n    x14 = apply(x13, x12)\n    x15 = rbind(multiply, x6)\n    x16 = apply(x15, x12)\n    x17 = pair(x14, x16)\n    x18 = rbind(add, x7)\n    x19 = apply(invert, x17)\n    x20 = apply(x18, x19)\n    x21 = rbind(add, x8)\n    x22 = apply(x21, x17)\n    x23 = pair(x20, x22)\n    x24 = mapply(box, x23)\n    O = fill(I, x1, x24)\n    return O"], [0.6668625356125356, "def solve_6c25945c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = delta(x2)\n    O = fill(I, FOUR, x3)\n    return O"], [0.6672060197871419, "def solve_0b679412(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.6672060197871419, "def solve_0a068c72(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.6672060197871419, "def solve_891b2494(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.6672060197871419, "def solve_a977791b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.6696587388610415, "def solve_e195ca94(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.6696587388610415, "def solve_4de87cb6(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.6696587388610415, "def solve_ce35297d(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.674180469289165, "def solve_e450ca93(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = objects(x2, T, F, T)\n    x4 = merge(x3)\n    O = paint(x1, x4)\n    return O"], [0.6837830785199206, "def solve_39184cba(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_8c5da067(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_6e43647a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_890c43eb(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_2df22367(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_852d4cc7(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_9e86f565(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_8d28df06(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_4eda6654(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6901349293372321, "def solve_4b257341(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_0a331e97(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_e967283b(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_f369af48(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_7a7449a1(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_f487fb6c(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_6b6a3bd5(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_6da73910(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_d188f008(I):\n    O = tophalf(I)\n    return O"], [0.6934682626705653, "def solve_09c12e0c(I):\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = shape(x23)\n    x33 = canvas(x28, x32)\n    O = fill(x33, THREE, x31)\n    return O"], [0.6979166666666667, "def solve_185fd8aa(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = equality(x1, ONE)\n    x3 = branch(x2, vsplit, hsplit)\n    x4 = x3(I, TWO)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = palette(x5)\n    x8 = palette(x6)\n    x9 = intersection(x7, x8)\n    x10 = first(x9)\n    x11 = shape(x5)\n    x12 = canvas(x10, x11)\n    x13 = ofcolor(x5, x10)\n    x14 = ofcolor(x6, x10)\n    x15 = intersection(x13, x14)\n    O = fill(x12, TWO, x15)\n    return O"], [0.6986111111111111, "def solve_3130e0e3(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, vline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = combine(x15, x16)\n    x18 = intersection(x15, x16)\n    x19 = difference(x17, x18)\n    O = fill(x14, THREE, x19)\n    return O"], [0.700481793212685, "def solve_4a956a12(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_99657942(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_f315413b(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_983a0b3f(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_c02efb3c(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = ofcolor(I, ZERO)\n    x4 = astuple(x1, ONE)\n    x5 = crop(I, ORIGIN, x4)\n    x6 = hupscale(x5, x2)\n    O = fill(x6, ZERO, x3)\n    return O"], [0.700481793212685, "def solve_29547386(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_95ad7653(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_fa82e118(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.700481793212685, "def solve_45b6463a(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_49e873ea(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_4e852de1(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.700481793212685, "def solve_7d7edbe6(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_f9ad95a9(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7121404907528761, "def solve_74b5a91c(I):\n    O = trim(I)\n    return O"], [0.7121404907528761, "def solve_ce10c588(I):\n    O = trim(I)\n    return O"], [0.7208389360698277, "def solve_a13a7d93(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = astuple(SIX, THREE)\n    x6 = astuple(FOUR, EIGHT)\n    x7 = astuple(ONE, TWO)\n    x8 = initset(x5)\n    x9 = insert(x6, x8)\n    x10 = insert(x7, x9)\n    x11 = mapply(x4, x10)\n    O = paint(I, x11)\n    return O"], [0.7275112822906941, "def solve_7b6228f0(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.7334554235250249, "def solve_e9db1696(I):\n    O = replace(I, EIGHT, ONE)\n    return O"], [0.7338151265460182, "def solve_a7886267(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.7338151265460182, "def solve_2e865a66(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.7338151265460182, "def solve_a79af328(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.7338151265460182, "def solve_a8ee5901(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.7341722694031612, "def solve_032ac5d0(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = lbind(colorcount, I)\n    x5 = argmin(x3, x4)\n    x6 = ofcolor(I, x1)\n    x7 = ofcolor(I, x5)\n    x8 = combine(x6, x7)\n    x9 = mapply(neighbors, x8)\n    x10 = difference(x9, x8)\n    x11 = toobject(x10, I)\n    x12 = leastcolor(x11)\n    x13 = ofcolor(I, x1)\n    x14 = first(x13)\n    x15 = initset(x14)\n    x16 = objects(I, T, F, F)\n    x17 = colorfilter(x16, x12)\n    x18 = lbind(adjacent, x8)\n    x19 = mfilter(x17, x18)\n    x20 = toindices(x19)\n    x21 = rbind(manhattan, x15)\n    x22 = chain(even, x21, initset)\n    x23 = sfilter(x20, x22)\n    x24 = fill(I, x5, x20)\n    O = fill(x24, x1, x23)\n    return O"], [0.7341722694031612, "def solve_ef4d04c0(I):\n    x1 = fork(multiply, height, width)\n    x2 = lbind(ofcolor, I)\n    x3 = palette(I)\n    x4 = compose(x1, x2)\n    x5 = argmax(x3, x4)\n    x6 = leastcolor(I)\n    x7 = palette(I)\n    x8 = remove(x5, x7)\n    x9 = other(x8, x6)\n    x10 = replace(I, x6, x5)\n    O = replace(x10, x9, x6)\n    return O"], [0.7347001544787553, "def solve_bd3e336c(I):\n    x1 = replace(I, SEVEN, ZERO)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [0.7389341741650659, "def solve_839eb872(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.7389341741650659, "def solve_22e3fdc7(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = apply(toindices, x6)\n    x8 = rbind(shoot, RIGHT)\n    x9 = compose(x8, center)\n    x10 = fork(recolor, color, x9)\n    x11 = mapply(x10, x6)\n    x12 = paint(I, x11)\n    x13 = width(I)\n    x14 = interval(ZERO, x13, ONE)\n    x15 = apply(double, x14)\n    x16 = apply(increment, x15)\n    x17 = apply(tojvec, x16)\n    x18 = prapply(shift, x7, x17)\n    x19 = merge(x18)\n    O = fill(x12, FIVE, x19)\n    return O"], [0.7389341741650659, "def solve_eb1677f4(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.7389341741650659, "def solve_a8b57165(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.7400296972330871, "def solve_a49bfacd(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = mostcolor(I)\n    O = replace(x3, x4, ZERO)\n    return O"], [0.741832732082732, "def solve_5703d54b(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.741832732082732, "def solve_e4684d06(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.741832732082732, "def solve_f342d34d(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.7419220209403746, "def solve_d7aac698(I):\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    O = replace(x3, ONE, ZERO)\n    return O"], [0.7421484598793515, "def solve_77312294(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.7433389360698277, "def solve_dab511d6(I):\n    O = rot180(I)\n    return O"], [0.7433389360698277, "def solve_1d9baa90(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.7433389360698277, "def solve_3ecc723d(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.7433389360698277, "def solve_485a70ea(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot270(I)\n    return O"], [0.7433389360698277, "def solve_ce10cc7d(I):\n    O = rot180(I)\n    return O"], [0.7433389360698277, "def solve_6c50b4fd(I):\n    O = vmirror(I)\n    return O"], [0.7436960789269706, "def solve_c69d1fc7(I):\n    x1 = ofcolor(I, TWO)\n    x2 = vline(x1)\n    x3 = branch(x2, dmirror, identity)\n    x4 = x3(I)\n    x5 = fgpartition(x4)\n    x6 = matcher(color, TWO)\n    x7 = compose(flip, x6)\n    x8 = extract(x5, x7)\n    x9 = ofcolor(x4, TWO)\n    x10 = leftmost(x9)\n    x11 = leftmost(x8)\n    x12 = greater(x10, x11)\n    x13 = manhattan(x8, x9)\n    x14 = decrement(x13)\n    x15 = branch(x12, identity, invert)\n    x16 = branch(x12, decrement, increment)\n    x17 = branch(x12, leftmost, rightmost)\n    x18 = x15(x14)\n    x19 = tojvec(x18)\n    x20 = shift(x8, x19)\n    x21 = x17(x20)\n    x22 = x16(x21)\n    x23 = tojvec(x22)\n    x24 = vfrontier(x23)\n    x25 = cover(x4, x8)\n    x26 = paint(x25, x20)\n    x27 = fill(x26, EIGHT, x24)\n    O = x3(x27)\n    return O"], [0.7436960789269706, "def solve_055f497a(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_408dc8c5(I):\n    x1 = partition(I)\n    x2 = fork(recolor, color, backdrop)\n    x3 = apply(x2, x1)\n    x4 = mfilter(x3, hline)\n    x5 = mfilter(x3, vline)\n    x6 = paint(I, x4)\n    O = paint(x6, x5)\n    return O"], [0.7436960789269706, "def solve_c583e66c(I):\n    O = switch(I, EIGHT, TWO)\n    return O"], [0.7436960789269706, "def solve_8f0cbf2f(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, last)\n    x5 = fork(recolor, first, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [0.7436960789269706, "def solve_43335764(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_c00e3492(I):\n    O = dmirror(I)\n    return O"], [0.7436960789269706, "def solve_8b58cd8a(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.7436960789269706, "def solve_af05c8b7(I):\n    x1 = fork(multiply, height, width)\n    x2 = partition(I)\n    x3 = argmax(x2, x1)\n    x4 = remove(x3, x2)\n    x5 = argmax(x4, x1)\n    x6 = other(x4, x5)\n    x7 = palette(I)\n    x8 = lrcorner(x5)\n    x9 = add(x8, UNITY)\n    x10 = llcorner(x5)\n    x11 = add(x10, DOWN_LEFT)\n    x12 = urcorner(x5)\n    x13 = add(x12, UP_RIGHT)\n    x14 = ulcorner(x5)\n    x15 = add(x14, NEG_UNITY)\n    x16 = shoot(x9, UNITY)\n    x17 = shoot(x11, DOWN_LEFT)\n    x18 = shoot(x13, UP_RIGHT)\n    x19 = shoot(x15, NEG_UNITY)\n    x20 = combine(x16, x17)\n    x21 = combine(x18, x19)\n    x22 = combine(x20, x21)\n    x23 = color(x6)\n    O = fill(I, x23, x22)\n    return O"], [0.7436960789269706, "def solve_16b0fcd3(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7436960789269706, "def solve_ef01b039(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_5c37f680(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_24189f94(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_84df7074(I):\n    O = dmirror(I)\n    return O"], [0.7436960789269706, "def solve_a8768dfc(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_1ab6b3bd(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_f713e082(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_a6eeb15b(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = apply(color, x3)\n    x5 = rbind(contained, x4)\n    x6 = compose(x5, color)\n    x7 = sfilter(x2, x6)\n    x8 = lbind(colorfilter, x3)\n    x9 = chain(first, x8, color)\n    x10 = fork(gravitate, identity, x9)\n    x11 = fork(shift, identity, x10)\n    x12 = mapply(x11, x7)\n    x13 = merge(x2)\n    x14 = cover(I, x13)\n    O = paint(x14, x12)\n    return O"], [0.7436960789269706, "def solve_4828dc5b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_85141ce4(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_e87e12e5(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_02b96647(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.7436960789269706, "def solve_dea4fe77(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.7436960789269706, "def solve_20703c94(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7436960789269706, "def solve_2cc917c3(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.7436960789269706, "def solve_d59526cf(I):\n    O = dmirror(I)\n    return O"], [0.7436960789269706, "def solve_3287d2ac(I):\n    x1 = ofcolor(I, EIGHT)\n    x2 = delta(x1)\n    O = fill(I, THREE, x2)\n    return O"], [0.7436960789269706, "def solve_87528bbb(I):\n    x1 = palette(I)\n    x2 = intersection(x1, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = astuple(ONE, x4)\n    x6 = size(x5)\n    x7 = decrement(x6)\n    x8 = tojvec(x7)\n    x9 = shoot(x8, UNITY)\n    O = fill(I, x4, x9)\n    return O"], [0.7436960789269706, "def solve_d2520127(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [0.7436960789269706, "def solve_dbd3d9f2(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_40925569(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7436960789269706, "def solve_75882916(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7436960789269706, "def solve_6bfe2952(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_c81221e6(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_b32e4eb3(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_c48c4ae2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, SEVEN, x2)\n    return O"], [0.7436960789269706, "def solve_94207012(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_5ee950a8(I):\n    x1 = objects(I, T, F, T)\n    x2 = ofcolor(I, THREE)\n    x3 = sizefilter(x1, ONE)\n    x4 = rbind(vmatching, x2)\n    x5 = rbind(hmatching, x2)\n    x6 = fork(either, x4, x5)\n    x7 = sfilter(x3, x6)\n    x8 = rbind(gravitate, x2)\n    x9 = fork(add, center, x8)\n    x10 = fork(connect, center, x9)\n    x11 = fork(recolor, color, x10)\n    x12 = mapply(x11, x7)\n    O = paint(I, x12)\n    return O"], [0.7436960789269706, "def solve_c20390de(I):\n    O = replace(I, ZERO, TWO)\n    return O"], [0.7436960789269706, "def solve_6b8a7e73(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_f3c70214(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, last)\n    x5 = fork(recolor, first, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [0.7436960789269706, "def solve_11016dbe(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.7436960789269706, "def solve_f62371d1(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_6458773b(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = subgrid(x2, I)\n    return O"], [0.7436960789269706, "def solve_6aa06a09(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_12247c29(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_36e1ded9(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.7436960789269706, "def solve_23b94ede(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.7436960789269706, "def solve_2591893f(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [0.7436960789269706, "def solve_3a5fa930(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_de631d8a(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7436960789269706, "def solve_75c2d520(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7436960789269706, "def solve_6beed481(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = fill(I, x8, x32)\n    return O"], [0.7436960789269706, "def solve_86f6fc77(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_fa794840(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_a89ab96a(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, ONE, x6)\n    return O"], [0.7436960789269706, "def solve_0f779890(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_aefecaed(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7436960789269706, "def solve_6ad1ebb7(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, TWO, x3)\n    return O"], [0.7436960789269706, "def solve_72ab5ce8(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, TWO)\n    x3 = mfilter(x1, x2)\n    x4 = matcher(size, THREE)\n    x5 = mfilter(x1, x4)\n    x6 = matcher(size, FOUR)\n    x7 = mfilter(x1, x6)\n    x8 = fill(I, THREE, x3)\n    x9 = fill(x8, TWO, x5)\n    O = fill(x9, ONE, x7)\n    return O"], [0.7436960789269706, "def solve_f6e580bc(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_023adeef(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.7436960789269706, "def solve_a44b4e05(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_98beb5f3(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = chain(size, dedupe, first)\n    x9 = matcher(x8, ONE)\n    x10 = compose(first, cmirror)\n    x11 = chain(size, dedupe, x10)\n    x12 = matcher(x11, ONE)\n    x13 = fork(both, x9, x12)\n    x14 = rbind(rapply, I)\n    x15 = compose(initset, first)\n    x16 = chain(first, x14, x15)\n    x17 = compose(x13, x16)\n    x18 = extract(x7, x17)\n    x19 = first(x18)\n    x20 = last(x18)\n    x21 = x19(I)\n    x22 = width(x21)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = index(x21, x24)\n    x26 = asobject(x21)\n    x27 = matcher(first, x25)\n    x28 = compose(flip, x27)\n    x29 = sfilter(x26, x28)\n    x30 = hperiod(x29)\n    x31 = width(x21)\n    x32 = increment(x31)\n    x33 = interval(ZERO, x32, x30)\n    x34 = apply(tojvec, x33)\n    x35 = lbind(shift, x29)\n    x36 = mapply(x35, x34)\n    x37 = paint(x21, x36)\n    O = x20(x37)\n    return O"], [0.7436960789269706, "def solve_0200d9ec(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7436960789269706, "def solve_61c9642c(I):\n    x1 = vmirror(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = toindices(x3)\n    x5 = sizefilter(x2, ONE)\n    x6 = apply(initset, x4)\n    x7 = lbind(argmin, x6)\n    x8 = lbind(rbind, manhattan)\n    x9 = compose(x7, x8)\n    x10 = fork(recolor, color, x9)\n    x11 = mapply(x10, x5)\n    x12 = merge(x5)\n    x13 = cover(I, x12)\n    O = paint(x13, x11)\n    return O"], [0.7436960789269706, "def solve_551325c9(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = fork(equality, identity, size)\n    x5 = mfilter(x3, x4)\n    O = fill(I, FOUR, x5)\n    return O"], [0.7440145502645503, "def solve_aebc9b9a(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = astuple(x1, ONE)\n    x8 = astuple(x2, ONE)\n    x9 = decrement(x1)\n    x10 = decrement(x2)\n    x11 = toivec(x10)\n    x12 = tojvec(x9)\n    x13 = crop(I, x11, x8)\n    x14 = crop(I, x12, x7)\n    x15 = asobject(x14)\n    x16 = asobject(x13)\n    x17 = vperiod(x15)\n    x18 = hperiod(x16)\n    x19 = astuple(x17, x18)\n    x20 = lbind(multiply, x19)\n    x21 = neighbors(ORIGIN)\n    x22 = mapply(neighbors, x21)\n    x23 = apply(x20, x22)\n    x24 = lbind(shift, x6)\n    x25 = mapply(x24, x23)\n    O = paint(I, x25)\n    return O"], [0.7440145502645503, "def solve_8793aff7(I):\n    x1 = asindices(I)\n    x2 = objects(I, T, F, T)\n    x3 = fork(multiply, sign, identity)\n    x4 = lbind(apply, x3)\n    x5 = chain(even, maximum, x4)\n    x6 = lbind(sfilter, x1)\n    x7 = fork(add, first, last)\n    x8 = rbind(remove, x2)\n    x9 = compose(center, last)\n    x10 = fork(subtract, first, x9)\n    x11 = compose(x5, x10)\n    x12 = lbind(rbind, equality)\n    x13 = lbind(argmin, x2)\n    x14 = chain(x7, x4, x10)\n    x15 = lbind(lbind, astuple)\n    x16 = lbind(rbind, astuple)\n    x17 = lbind(compose, x11)\n    x18 = lbind(compose, x14)\n    x19 = compose(x18, x15)\n    x20 = compose(x18, x16)\n    x21 = compose(x13, x19)\n    x22 = rbind(compose, x21)\n    x23 = lbind(lbind, valmin)\n    x24 = rbind(compose, x19)\n    x25 = chain(x24, x23, x8)\n    x26 = lbind(fork, greater)\n    x27 = fork(x26, x25, x20)\n    x28 = chain(x6, x17, x16)\n    x29 = chain(x6, x22, x12)\n    x30 = fork(intersection, x28, x29)\n    x31 = compose(x6, x27)\n    x32 = fork(intersection, x30, x31)\n    x33 = fork(recolor, color, x32)\n    x34 = mapply(x33, x2)\n    O = paint(I, x34)\n    return O"], [0.7440145502645503, "def solve_f95a5994(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, EIGHT, x4)\n    return O"], [0.7440145502645503, "def solve_f5ef6376(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.7440145502645503, "def solve_a581fe24(I):\n    x1 = shape(I)\n    x2 = canvas(ZERO, x1)\n    x3 = hconcat(I, x2)\n    x4 = objects(x3, F, F, T)\n    x5 = argmin(x4, size)\n    x6 = ulcorner(x5)\n    x7 = llcorner(x5)\n    x8 = shoot(x6, NEG_UNITY)\n    x9 = shoot(x6, UNITY)\n    x10 = shoot(x7, DOWN_LEFT)\n    x11 = shoot(x7, UP_RIGHT)\n    x12 = combine(x8, x9)\n    x13 = combine(x10, x11)\n    x14 = combine(x12, x13)\n    x15 = underfill(I, THREE, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = colorfilter(x16, 18656)\n    x18 = rbind(bordering, I)\n    x19 = mfilter(x17, x18)\n    O = cover(x15, x19)\n    return O"], [0.7440145502645503, "def solve_543a375e(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.7440145502645503, "def solve_65aeaea9(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply( neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, EIGHT, x4)\n    return O"], [0.7444444444444445, "def solve_7fb621e4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = ofcolor(x1, ZERO)\n    x4 = ofcolor(x2, ZERO)\n    x5 = intersection(x3, x4)\n    x6 = shape(x1)\n    x7 = canvas(ZERO, x6)\n    O = fill(x7, THREE, x5)\n    return O"], [0.7459101546601546, "def solve_aa4ae39f(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.7459101546601546, "def solve_ccc58bde(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.7462998052025382, "def solve_b8b499a4(I):\n    x1 = astuple(SIX, TWO)\n    x2 = astuple(TWO, ONE)\n    x3 = initset(x2)\n    x4 = insert(ORIGIN, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    O = fill(I, FOUR, x12)\n    return O"], [0.7468716931216931, "def solve_d4d2d11a(I):\n    x1 = ofcolor(I, ONE)\n    x2 = ofcolor(I, TWO)\n    x3 = mapply(neighbors, x1)\n    x4 = mapply(neighbors, x2)\n    x5 = fill(I, SEVEN, x3)\n    O = fill(x5, FOUR, x4)\n    return O"], [0.7472675074983992, "def solve_ba340321(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7472675074983992, "def solve_04739150(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7472675074983992, "def solve_01a1007f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x22 = invert(x11)\n    x23 = shift(x9, x22)\n    x24 = lbind(shift, x23)\n    x25 = mapply(x24, x8)\n    O = paint(I, x25)\n    return O"], [0.7472675074983992, "def solve_c2e0b3c6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7472675074983992, "def solve_80edc6b5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7472675074983992, "def solve_d48b6367(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7472675074983992, "def solve_d99dc4eb(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = rbind(multiply, THREE)\n    x6 = rbind(divide, THREE)\n    x7 = compose(x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = toindices(x4)\n    x10 = compose(x8, last)\n    x11 = sfilter(x9, x10)\n    O = fill(I, SIX, x11)\n    return O"], [0.7472675074983992, "def solve_1dceb5ce(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7472675074983992, "def solve_53819502(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7472675074983992, "def solve_b07e2ab3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7480334878120887, "def solve_9984774e(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.7480334878120887, "def solve_8c34366a(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.7504817932126848, "def solve_bd4d6cdd(I):\n    x1 = compose(positive, size)\n    x2 = rbind(sfilter, hline)\n    x3 = chain(x1, x2, frontiers)\n    x4 = chain(size, dedupe, first)\n    x5 = chain(size, dedupe, last)\n    x6 = fork(greater, x4, x5)\n    x7 = fork(both, x3, x6)\n    x8 = astuple(identity, rot90)\n    x9 = astuple(rot180, rot270)\n    x10 = combine(x8, x9)\n    x11 = astuple(identity, rot270)\n    x12 = astuple(rot180, rot90)\n    x13 = combine(x11, x12)\n    x14 = pair(x10, x13)\n    x15 = rbind(rapply, I)\n    x16 = compose(initset, first)\n    x17 = chain(first, x15, x16)\n    x18 = compose(x7, x17)\n    x19 = extract(x14, x18)\n    x20 = first(x19)\n    x21 = last(x19)\n    x22 = x20(I)\n    x23 = first(x22)\n    x24 = repeat(x23, ONE)\n    x25 = dmirror(x24)\n    x26 = width(x22)\n    x27 = hupscale(x25, x26)\n    x28 = asobject(x27)\n    x29 = height(x22)\n    x30 = height(x28)\n    x31 = interval(ZERO, x29, x30)\n    x32 = lbind(shift, x28)\n    x33 = apply(toivec, x31)\n    x34 = mapply(x32, x33)\n    x35 = shift(x34, TWO_BY_ZERO)\n    x36 = paint(x22, x35)\n    O = x21(x36)\n    return O"], [0.7532198884507801, "def solve_c5ec41c9(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.7532198884507801, "def solve_0f68bba5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.7532198884507801, "def solve_eb89440f(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.7543625356125356, "def solve_3312c412(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = fork(subtract, first, last)\n    x4 = fork(multiply, sign, identity)\n    x5 = compose(x4, x3)\n    x6 = lbind(greater, THREE)\n    x7 = chain(x6, maximum, x5)\n    x8 = lbind(lbind, astuple)\n    x9 = rbind(chain, x8)\n    x10 = lbind(compose, x7)\n    x11 = rbind(x9, x10)\n    x12 = lbind(lbind, sfilter)\n    x13 = compose(x11, x12)\n    x14 = lbind(mapply, backdrop)\n    x15 = fork(apply, x13, identity)\n    x16 = compose(x14, x15)\n    x17 = power(x16, TWO)\n    x18 = x17(x2)\n    x19 = fill(I, FOUR, x18)\n    O = replace(x19, x1, ZERO)\n    return O"], [0.7579817932126849, "def solve_dc24b772(I):\n    x1 = ofcolor(I, ONE)\n    x2 = crop(I, ORIGIN, THREE_BY_THREE)\n    x3 = asobject(x2)\n    x4 = lbind(shift, x3)\n    x5 = compose(x4, decrement)\n    x6 = mapply(x5, x1)\n    O = paint(I, x6)\n    return O"], [0.7583002645502646, "def solve_a36ededf(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.7596885497407995, "def solve_e43f175a(I):\n    O = replace(I, FOUR, ZERO)\n    return O"], [0.7615532217841134, "def solve_544cb80e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7615532217841134, "def solve_c80046b2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7615532217841134, "def solve_cce5466f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7615532217841134, "def solve_5440fe70(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7615532217841134, "def solve_20049e0c(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.767824074074074, "def solve_819cd5fa(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.767824074074074, "def solve_ee932955(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.7725859788359788, "def solve_3b476d40(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, vmirror, hmirror)\n    x9 = x8(x6)\n    x10 = branch(x7, leftmost, uppermost)\n    x11 = branch(x7, tojvec, toivec)\n    x12 = x10(x5)\n    x13 = x10(x6)\n    x14 = greater(x12, x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = x11(x16)\n    x18 = shape(x6)\n    x19 = multiply(x17, x18)\n    x20 = shift(x9, x19)\n    x21 = fill(I, THREE, x3)\n    O = paint(x21, x20)\n    return O"], [0.7725859788359788, "def solve_2d6e03b3(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, vmirror, hmirror)\n    x9 = x8(x6)\n    x10 = branch(x7, leftmost, uppermost)\n    x11 = branch(x7, tojvec, toivec)\n    x12 = x10(x5)\n    x13 = x10(x6)\n    x14 = greater(x12, x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = x11(x16)\n    x18 = shape(x6)\n    x19 = multiply(x17, x18)\n    x20 = shift(x9, x19)\n    x21 = fill(I, THREE, x3)\n    O = paint(x21, x20)\n    return O"], [0.7725859788359788, "def solve_3d4cd62c(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, vmirror, hmirror)\n    x9 = x8(x6)\n    x10 = branch(x7, leftmost, uppermost)\n    x11 = branch(x7, tojvec, toivec)\n    x12 = x10(x5)\n    x13 =x10(x6)\n    x14 = greater(x12, x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = x11(x16)\n    x18 = shape(x6)\n    x19 = multiply(x17, x18)\n    x20 = shift(x9, x19)\n    x21 = fill(I, THREE, x3)\n    O = paint(x21, x20)\n    return O"], [0.7744675050279077, "def solve_f76a37c9(I):\n    x1 = palette(I)\n    x2 = remove(FIVE, x1)\n    x3 = first(x2)\n    x4 = ofcolor(I, x3)\n    x5 = fill(I, ZERO, x4)\n    x6 = ofcolor(I, FIVE)\n    O = fill(x5, x3, x6)\n    return O"], [0.7758389360698277, "def solve_344dccf6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7758389360698277, "def solve_768e4d1b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7758389360698277, "def solve_548062c3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7758389360698277, "def solve_277585dd(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7758389360698277, "def solve_170f9c6c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7758389360698277, "def solve_337318ba(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7819990673127664, "def solve_92216082(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [1.0, "def solve_6ba382f0(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [1.0, "def solve_b8ed7fd3(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = x2(I, TWO)\n    x4 = argmin(x3, numcolors)\n    x5 = argmax(x3, numcolors)\n    x6 = width(x5)\n    x7 = rbind(repeat, x6)\n    x8 = chain(dmirror, merge, x7)\n    x9 = upscale(x4, x6)\n    x10 = x8(x4)\n    x11 = x8(x10)\n    x12 = ofcolor(x11, ZERO)\n    O = fill(x9, ZERO, x12)\n    return O"], [1.0, "def solve_742af85d(I):\n    x1 = index(I, ORIGIN)\n    x2 = recolor(d511, x1)\n    x3 = apply(double, x2)\n    x4 = frontiers(x3)\n    x5 = merge(x4)\n    x6 = NEG_UNITY(x5)\n    x7 = shift(x5, x6)\n    x8 = recolor(x1, x7)\n    x9 = lbind(shift, x8)\n    x10 = mapply(x9, x3)\n    O = paint(I, x10)\n    return O"], [1.0, "def solve_addd792a(I):\n    x1 =alde4(I)\n    x2 = interval(ZERO, NINE, ONE)\n    x3 = apply(double, x2)\n    x4 = apply(width, x3)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x5, x6)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x5)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x2)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [1.0, "def solve_840e2fdb(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = compose(double, halve)\n    x5 = fork(equality, identity, x4)\n    x6 = compose(x5, last)\n    x7 = sfilter(x3, x6)\n    x8 = fork(recolor, first, x7)\n    x9 = mapply(x8, x4)\n    O = paint(I, x9)\n    return O"], [1.0, "def solve_6be248c7(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(4, x5)\n    return O"], [1.0, "def solve_7b041589(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = toindices(x14)\n    x26 = lbind(shift, x24)\n    x27 = rbind(multiply, x30)\n    x28 = chain(x27, x26, last)\n    x29 = mapply(x28, x29)\n    O = fill(x14, x13, x29)\n    return O"], [1.0, "def solve_46aed437(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_1fb938eb(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_b6e0ab4c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_11e4c715(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_89476efe(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_73051aeb(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = height(x2)\n    x4 = halve(x3)\n    x5 = width(x2)\n    x6 = halve(x5)\n    x7 = tojvec(x4)\n    x8 = tojvec(x6)\n    x9 = connect(x7, x8)\n    x10 = fill(I, x1, x9)\n    x11 = objects(x10, F, F, T)\n    x12 = argmax(x11, numcolors)\n    x13 = normalize(x12)\n    x14 = remove(x12, x11)\n    x15 = toindices(x14)\n    x16 = lbind(intersection, x15)\n    x17 = chain(halve, x16, toindices)\n    x18 = fork(recolor, color, x17)\n    x19 = mapply(x18, x14)\n    O = paint(x10, x19)\n    return O"], [1.0, "def solve_01ad0218(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = rbind(shoot, x24)\n    x26 = mapply(x25, x23)\n    x27 = fill(x6, x3, x26)\n    x28 = x27(x1)\n    O = fill(x27, x10, x28)\n    return O"], [1.0, "def solve_247b0302(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [1.0, "def solve_6f69b5f7(I):\n    x1 = shoot(ORIGIN, UNITY)\n    x2 = rbind(shoot, DOWN)\n    x3 = compose(x2, last)\n    x4 = fork(recolor, first, x3)\n    x5 = mapply(x4, x1)\n    O = paint(I, x5)\n    return O"], [1.0, "def solve_a614e52c(I):\n    x1 = argmin(x1, numcolors)\n    x2 = apply(first, x1)\n    x3 = dmirror(x2)\n    x4 = papply(pair, x2, x3)\n    x5 = lbind(shift, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [1.0, "def solve_80cbfc70(I):\n    x1 = objects(I, T, F, T)\n    x2 = asindices(I)\n    x3 = outbox(x2)\n    x4 = lbind(adjacent, x3)\n    x5 = compose(x4, initset)\n    x6 = rbind(extract, x5)\n    x7 = compose(x6, toindices)\n    x8 = rbind(compose, initset)\n    x9 = lbind(rbind, manhattan)\n    x10 = chain(x8, x9, initset)\n    x11 = lbind(lbind, greater)\n    x12 = chain(x11, halve, size)\n    x13 = compose(x10, x7)\n    x14 = fork(compose, x12, x13)\n    x15 = fork(sfilter, toindices, x14)\n    x16 = mapply(x15, x1)\n    O = fill(I, EIGHT, x16)\n    return O"], [1.0, "def solve_606019f6(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_3d4f9a38(I):\n    x1 = portrait(I)\n    x2 = branch(x1, partition, vsplit)\n    x3 = equality(x2, TWO)\n    x4 = branch(x3, hmirror, vmirror)\n    x5 = x4(I)\n    x6 = asobject(x5)\n    x7 = lbind(shift, x6)\n    x8 = height(x5)\n    x9 = chain(x7, halve, width)\n    x10 = x9(x2)\n    x11 = height(x5)\n    x12 = increment(x11)\n    x13 = interval(NEG_ONE, x12, ONE)\n    x14 = rbind(multiply, x5)\n    x15 = apply(x14, x13)\n    x16 = mapply(x12, x15)\n    x17 = paint(x5, x16)\n    x18 = repeat(x17, ONE)\n    O = x4(x18)\n    return O"], [1.0, "def solve_2e6a2d9f(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_9a21c7a4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_06f00ee0(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_1aa149f2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_1a0ecf96(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [1.0, "def solve_464525d6(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_6b553fe5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_00ddc610(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = hsplit(I, x2)\n    x4 = shape(x3)\n    x5 = maximum(x4)\n    x6 = branch(x5, ORIGIN, canvas)\n    x7 = connect(x5, x6)\n    x8 = height(x7)\n    x9 = width(x7)\n    x10 = matcher(identity, ZERO)\n    x11 = subtract(x10, x8)\n    x12 = matcher(last, x8)\n    x13 = subtract(x12, x9)\n    x14 = width(x3)\n    x15 = interval(ZERO, x14, ONE)\n    x16 = combine(x3, x13)\n    x17 = fill(x6, THREE, x16)\n    x18 = astuple(x11, x15)\n    x19 = canvas(ZERO, x18)\n    x20 = asobject(x19)\n    x21 = occurrences(x17, x20)\n    x22 = lbind(shift, x20)\n    x23 = mapply(x22, x21)\n    O = fill(x17, THREE, x23)\n    return O"], [1.0, "def solve_f5b13097(I):\n    x1 = fgpartition(I)\n    x2 = mapply(toindices, x1)\n    x3 = mapply(vfrontier, x2)\n    x4 = underfill(I, EIGHT, x3)\n    x5 = hconcat(x4, x4)\n    O = vconcat(x5, x5)\n    return O"], [1.0, "def solve_9b626daa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_377edd58(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, TWO)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 =ulcorner(x11)\n    x13 = subgrid(x11, I)\n    x14 = increment(x13)\n    x15 = asobject(x14)\n    x16 = matcher(first, x3)\n    x17 = compose(flip, x16)\n    x18 = sfilter(x15, x17)\n    x19 = hperiod(x18)\n    x20 = vperiod(x18)\n    x21 = fgpartition(x7)\n    x22 = merge(x21)\n    x23 = paint(x7, x22)\n    x24 = solve(shift, x17)\n    x25 = shift(x24, x18)\n    x26 = fork(combine, hfrontier, vfrontier)\n    x27 = mapply(x26, x23)\n    O = paint(x25, x27)\n    return O"], [1.0, "def solve_945fafb7(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, F)\n    x3 = Fgpartition(I)\n    x4 = compose(last, first)\n    x5 = power(last, TWO)\n    x6 = fork(connect, x4, x5)\n    x7 = fork(recolor, color, x6)\n    x8 = mapply(x7, x3)\n    O = paint(I, x8)\n    return O"], [1.0, "def solve_8c1f40ba(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_d7ea8b99(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, THREE)\n    x7 = canvas(x4, x6)\n    x8 = asobject(x3)\n    x9 = shift(x8, UNITY)\n    O = paint(x7, x9)\n    return O"], [1.0, "def solve_b8be1fa7(I):\n    x1 = replace(I, FOUR, ZERO)\n    x2 = branch(x1, dmirror, identity)\n    x3 = x2(I)\n    x4 = partition(x3)\n    x5 = matcher(color, ZERO)\n    x6 = compose(flip, x5)\n    x7 = extract(x4, x6)\n    x8 = initset(ORIGIN)\n    x9 = height(x7)\n    x10 = insert(ZERO, x8)\n    x11 = insert(x9, x10)\n    x12 = insert(x11, x12)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = dmirror(x4)\n    x16 = width(x7)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = pair(x17, x14)\n    x19 = mapply(neighbors, x18)\n    O = fill(x3, ONE, x19)\n    return O"], [1.0, "def solve_e069d028(I):\n    x1 = switch(I, FIVE, EIGHT)\n    x2 = switch(x1, EIGHT, NEG_ONE)\n    x3 = switch(x2, EIGHT, NEG_ONE)\n    x4 = switch(x3, EIGHT, UNITY)\n    x5 = switch(x4, EIGHT, NEG_ONE)\n    x6 = combine(x1, x5)\n    O = fill(x4, THREE, x6)\n    return O"], [1.0, "def solve_cb6ead5e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = shape(I)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(I, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmin(x11, numcolors)\n    x13 = normalize(x12)\n    x14 = toindices(x13)\n    x15 = increment(x4)\n    x16 = increment(x15)\n    x17 = increment(x5)\n    x18 = increment(x17)\n    x19 = astuple(x16, x18)\n    x20 = lbind(shift, x14)\n    x21 = rbind(multiply, x19)\n    x22 = chain(x20, x21, last)\n    x23 = fork(recolor, first, x22)\n    x24 = normalize(x12)\n    x25 = mapply(x23, x24)\n    O = paint(x9, x25)\n    return O"], [1.0, "def solve_556ddb48(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [1.0, "def solve_36fe7672(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_ae6e3c5c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_eee391e5(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_a3cbe197(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_04eef8bd(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_98f9d52f(I):\n    x1 = astuple(vsplit, hsplit)\n    x2 = rbind(rbind, TWO)\n    x3 = rbind(rapply, I)\n    x4 = initset(x2)\n    x5 = lbind(rapply, x4)\n    x6 = chain(first, x3, x5)\n    x7 = lbind(apply, numcolors)\n    x8 = compose(x7, x6)\n    x9 = matcher(x8, TWO_BY_TWO)\n    x10 = extract(x1, x9)\n    x11 = x10(I, TWO)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = palette(x12)\n    x15 = palette(x13)\n    x16 = intersection(x14, x15)\n    x17 = first(x16)\n    x18 = shape(x12)\n    x19 = canvas(x17, x18)\n    x20 = ofcolor(x12, x17)\n    x21 = ofcolor(x13, x17)\n    x22 = intersection(x20, x21)\n    O = fill(x19, TWO, x22)\n    return O"], [1.0, "def solve_985967fe(I):\n    x1 = rot270(I)\n    x2 = rot90(I)\n    x3 = rot270(x1)\n    x4 = astuple(x2, x3)\n    x5 = astuple(FOUR, EIGHT)\n    x6 = apply(decrement, x5)\n    x7 = apply(asobject, x4)\n    x8 = mpapply(shift, x7, x6)\n    O = paint(x1, x8)\n    return O"], [1.0, "def solve_865188b4(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = color(x13)\n    x15 = ofcolor(x7, x14)\n    x16 = ofcolor(x8, x14)\n    x17 = intersection(x15, x16)\n    x18 = canvas(x14, x9)\n    x19 = fill(x18, THREE, x17)\n    O = fill(x19, TWO, x15)\n    return O"], [1.0, "def solve_a75b263d(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = power(outbox, TWO)\n    x4 = mapply(x3, x2)\n    O = fill(I, FOUR, x4)\n    return O"], [1.0, "def solve_e0fb90ed(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_e811b287(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = astuple(TWO, FOUR)\n    x4 = rbind(contained, x3)\n    x5 = compose(x4, first)\n    x6 = rbind(sfilter, x5)\n    x7 = lbind(rbind, subtract)\n    x8 = lbind(occurrences, I)\n    x9 = lbind(lbind, shift)\n    x10 = compose(x7, ulcorner)\n    x11 = chain(x10, x6, normalize)\n    x12 = chain(x8, x6, normalize)\n    x13 = fork(apply, x11, x12)\n    x14 = compose(x9, normalize)\n    x15 = fork(mapply, x14, x13)\n    x16 = astuple(cmirror, dmirror)\n    x17 = astuple(hmirror, vmirror)\n    x18 = combine(x16, x17)\n    x19 = product(x18, x18)\n    x20 = fork(compose, first, last)\n    x21 = apply(x20, x19)\n    x22 = totuple(x21)\n    x23 = combine(x18, x22)\n    x24 = rapply(x23, x2)\n    x25 = mapply(x15, x24)\n    O = paint(I, x25)\n    return O"], [1.0, "def solve_601cb44e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_23a6f291(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_f4030b03(I):\n    x1 = fgpartition(I)\n    x2 = compose(dneighbors, center)\n    x3 = fork(difference, backdrop, x2)\n    x4 = fork(equality, toindices, x3)\n    x5 = matcher(size, FIVE)\n    x6 = fork(both, x4, x5)\n    x7 = extract(x1, x6)\n    x8 = color(x7)\n    x9 = merge(x1)\n    x10 = compose(hmirror, vmirror)\n    x11 = initset(x10)\n    x12 = insert(vmirror, x11)\n    x13 = insert(hmirror, x12)\n    x14 = rapply(x13, x9)\n    x15 = ulcorner(x7)\n    x16 = lbind(subtract, x15)\n    x17 = matcher(first, x8)\n    x18 = rbind(sfilter, x17)\n    x19 = chain(x16, ulcorner, x18)\n    x20 = fork(shift, identity, x19)\n    x21 = mapply(x20, x14)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_f4744c08(I):\n    x1 = rbind(b775, I)\n    x2 = compose( shape, asobject)\n    x3 = objects(I, T, F, F)\n    x4 = argmax(x3, size)\n    x5 = canvas(FIVE, x2)\n    O = paint(x5, x4)\n    return O"], [1.0, "def solve_c336cac7(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_19717294(I):\n    x1 = lbind(toobject, I)\n    x2 = lbind(shift, I)\n    x3 = compose(x2, T)\n    x4 = chain(x1, x3, decrement)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x1)\n    O = paint(I, x6)\n    return O"], [1.0, "def solve_acdcb61a(I):\n    x1 = ofcolor(I, TWO)\n    x2 = dalowermost(x1)\n    x3 = equality(x2, ZERO)\n    x4 = branch(x3, x1, x2)\n    x5 = fork(combine, vfrontier, hfrontier)\n    x6 = x5(x4)\n    x7 = underfill(I, EIGHT, x6)\n    x8 = fill(x7, TWO, x5)\n    O = fill(x8, ONE, x7)\n    return O"], [1.0, "def solve_1f3ea06e(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_3a63e057(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [1.0, "def solve_fe4e4b3f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_f393e6e9(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_d5b19de7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = difference(x2, x1)\n    x4 = fill(I, TWO, x3)\n    x5 = objects(x4, T, F, T)\n    x6 = color(x2)\n    x7 = palette(x5)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, x4)\n    x10 = argmax(x8, x9)\n    x11 = remove(x10, x8)\n    x12 = lbind(ofcolor, I)\n    x13 = mapply(x12, x11)\n    x14 = subgrid(x13, x4)\n    x15 = objects(x14, T, F, T)\n    x16 = colorfilter(x15, x6)\n    x17 = ofcolor(x14, x10)\n    x18 = subgrid(x17, x14)\n    x19 = mapply(dneighbors, x16)\n    x20 = mapply(ineighbors, x16)\n    x21 = fill(x14, toindices, x19)\n    x82 = fill(x21, x10, x20)\n    x83 = ofcolor(x18, x6)\n    x84 = fill(x82, x10, x83)\n    x85 = ofcolor(x84, x11)\n    x86 = mapply(ineighbors, x21)\n    x87 = mapply(ineighbors, x22)\n    x88 = fill(x85, x11, x68)\n    O = fill(x88, x10, x67)\n    return O"], [1.0, "def solve_3f139ab6(I):\n    x1 = partition(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmin(x1, size)\n    x4 = rbind(adjacent, x3)\n    x5 = remove(x3, x1)\n    x6 = extract(x5, x4)\n    x7 = color(x6)\n    x8 = rbind(contained, x7)\n    x9 = compose(x8, color)\n    x10 = sfilter(x2, x9)\n    x11 = size(x10)\n    x12 = increment(x11)\n    x13 = interval(ZERO, x12, THREE)\n    x14 = apply(tojvec, x13)\n    x15 = fork(shift, identity, mostcolor)\n    x16 = mapply(x15, x14)\n    x17 = interval(adjacent,770, ONE)\n    x18 = pair(x17, x16)\n    x19 = compose(invert, first)\n    x20 = order(x18, x19)\n    x21 = apply(last, x20)\n    x22 = mpapply(recolor, x21, x13)\n    O = paint(I, x22)\n    return O"], [1.0, "def solve_187718e9(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [1.0, "def solve_9882237f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_c1951c89(I):\n    O = fill(I, EIGHT, x2)\n    return O"], [1.0, "def solve_8cc80e52(I):\n    x1 = partition(I)\n    x2 = compose(maximum, shape)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(colorcount, I)\n    x8 = argmin(x6, x7)\n    x9 = mostcolor(I)\n    x10 = shape(I)\n    x11 = increment(x10)\n    x12 = increment(x11)\n    x13 = canvas(x9, x12)\n    x14 = asobject(I)\n    x15 = shift(x14, UNITY)\n    x16 = paint(x13, x15)\n    x17 = repeat(identity, ONE)\n    x18 = astuple(cmirror, dmirror)\n    x19 = astuple(hmirror, vmirror)\n    x20 = combine(x18, x19)\n    x21 = combine(x17, x20)\n    x22 = fork(compose, first, last)\n    x23 = product(x21, x21)\n    x24 = apply(x22, x23)\n    x25 = ofcolor(x16, x4)\n    x26 = intersection(x15, x25)\n    x27 = canvas(x9, x10)\n    O = fill(x27, x4, x27)\n    return O"], [1.0, "def solve_e39398e2(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = matcher(color, x4)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x2, x6)\n    x8 = difference(x2, x7)\n    x9 = fill(I, TWO, x8)\n    x10 = lbind(recolor, rbind)\n    x11 = compose(x10, initset)\n    x12 = chain(x11, mostcolor, x11)\n    x13 = recolor(x4, x7)\n    x14 = objects(x9, T, T, T)\n    x15 = sfilter(x14, x13)\n    x16 = difference(x14, x15)\n    x17 = toindices(x15)\n    x18 = fork(combine, hfrontier, vfrontier)\n    x19 = mapply(x18, x16)\n    x20 = paint(x9, x19)\n    O = x11(x20)\n    return O"], [1.0, "def solve_914888a5(I):\n    x1 = colorcount(I, ZERO)\n    x2 = subtract(NINE, x1)\n    O = upscale(I, x2)\n    return O"], [1.0, "def solve_4c75b029(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = shape(x3)\n    x5 = halve(x4)\n    x6 = hupscale(x3, x5)\n    x7 =(I, x6)\n    x8 = lefthalf(x7)\n    O = tophalf(x8)\n    return O"], [1.0, "def solve_1b4c2c49(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = fgpartition(x1)\n    x3 = compose(increment, first)\n    x4 = fork(greater, last, x3)\n    x5 = size(x2)\n    x6 = interval(ZERO, x5, ONE)\n    x7 = rbind(contained, x6)\n    x8 = compose(x7, first)\n    x9 = interval(ZERO, x5, ONE)\n    x10 = pair(x4, x9)\n    x11 = sfilter(x10, x8)\n    x12 = mapply(first, x11)\n    O = fill(x1, FOUR, x12)\n    return O"], [1.0, "def solve_f8ad0d51(I):\n    x1 = trim(I)\n    x2 = decrement(x1)\n    O = upscale(x3, x2)\n    return O"], [1.0, "def solve_a4eacf40(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = toobject(x2, I)\n    return O"], [1.0, "def solve_2e7e7fd3(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = extract(x2, x4)\n    x6 = width(I)\n    x7 = subtract(x6, TWO)\n    x8 = multiply(x7, THREE)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = interval(ZERO, x8, ONE)\n    x11 = lbind(multiply, x5)\n    x12 = apply(x11, x9)\n    x13 = lbind(shift, x5)\n    x14 = mapply(x13, x12)\n    x15 = astuple(x6, x14)\n    x16 = canvas(ZERO, x15)\n    x17 = asobject(I)\n    x18 = shift(x17, x16)\n    x19 = height(I)\n    x20 = lbind(shift, x16)\n    x21 = mapply(x20, x18)\n    x22 = paint(x16, x21)\n    x23 = partition(x22)\n    x24 = lbind(shift, x13)\n    x25 = mapply(x24, x23)\n    x26 = paint(x22, x25)\n    x27 =Documentmirror(x24)\n    x28 = astuple(x6, x14)\n    x29 = shift(x27, x28)\n    O = paint(x29, x29)\n    return O"], [1.0, "def solve_0495eae9(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fork(recolor, color, x11)\n    return O"], [1.0, "def solve_abc3ee14(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x77)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [1.0, "def solve_c6b36782(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [1.0, "def solve_baac5602(I):\n    x1 = remove(I, x2)\n    x2 = lbind(contained, ONE)\n    x3 = chain(flip, x2, shape)\n    x4 = sfilter(x1, x3)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = fork(multiply, height, width)\n    x8 = argmin(x6, x7)\n    O = x6(x8)\n    return O"], [1.0, "def solve_696f2028(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_beb9c07a(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = matcher(x12, ZERO)\n    x17 = extract(x7, x16)\n    x18 = height(x17)\n    x19 = rbind(ofcolor, EIGHT)\n    x20 = compose(positive, size)\n    x21 = rbind(sfilter, x20)\n    x22 = chain(x17, x21, dmirror)\n    x23 = multiply(x12, UNITY)\n    x24 = power(x22, x23)\n    x25 = x24(I)\n    x26 = objects(x25, T, F, T)\n    x27 = colorfilter(x26, ZERO)\n    x28 = rbind(canvas, T88)\n    x29 = apply(x28, x27)\n    x30 = merge(x29)\n    x31 = rbind( OFcolor, EIGHT)\n    x32 = chain(x31, x30, x3)\n    x33 = rbind(ofcolor, EIGHT)\n    x34 = fork(recolor, x33, x32)\n    x35 = mapply(x34, x21)\n    x36 = paint(x25, x35)\n    O = x10(x36)\n    return O"], [1.0, "def solve_f3da74d8(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_3af34b1c(I):\n    x1 = astuple(identity, identity)\n    x2 = astuple(rot90, rot270)\n    x3 = astuple(x1, x2)\n    x4 = astuple(rot180, rot180)\n    x5 = astuple(rot270, rot90)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = leastcolor(I)\n    x9 = repeat(x8, ONE)\n    x10 = rbind(rapply, I)\n    x11 = chain(x10, initset, first)\n    x12 = compose(first, x11)\n    x13 = chain(dedupe, first, x12)\n    x14 = matcher(x13, x9)\n    x15 = extract(x7, x14)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = x16(I)\n    x19 = ofcolor(x18, x8)\n    x20 = height(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = lbind(astuple, x20)\n    x23 = apply(x22, x21)\n    x24 = rbind(shoot, DOWN)\n    x25 = mapply(x24, x23)\n    x26 = fill(x18, FOUR, x25)\n    x27 = astuple(x20, x20)\n    x28 = canvas(ZERO, x27)\n    x29 = asindices(x28)\n    x30 = shift(x29, x27)\n    x31 = shape(I)\n    x32 = maximum(x31)\n    x33 = lbind(shift, x30)\n    x34 = interval(ZERO, x32, x20)\n    x35 = pair(x34, x34)\n    x36 = mapply(x33, x35)\n    x37 = fill(x26, TWO, x36)\n    O = x17(x37)\n    return O"], [1.0, "def solve_45970bc8(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_d4935307(I):\n    x1 = rbind(bordering, I)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x2, x2)\n    x4 = fork(equality, toindices, box)\n    x5 = sfilter(x3, x4)\n    x6 = mfilter(x5, x2)\n    O = fill(I, T, x6)\n    return O"], [1.0, "def solve_1a84fb2d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_31c504b7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_64572e1e(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = add(TWO, x2)\n    x4 = canvas(x1, x3)\n    x5 = apply(first, x4)\n    x6 = asindices(x5)\n    x7 = shift(x6, UNITY)\n    x8 = shape(x7)\n    x9 = halve(x8)\n    x10 = increment(x9)\n    x11 = interval(ZERO, x10, ONE)\n    x12 = lbind(shift, x7)\n    x13 = rbind(multiply, x4)\n    x14 = apply(x13, x11)\n    x15 = mapply(x12, x14)\n    O = paint(x4, x15)\n    return O"], [1.0, "def solve_b6ca3d6c(I):\n    x1 = index(I, ORIGIN)\n    x2 = box(I)\n    O = fill(I, x1, x2)\n    return O"], [1.0, "def solve_aebe6f9c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_bfc33641(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = leastcolor(x1)\n    x4 = leastcolor(x2)\n    x5 = ofcolor(I, x3)\n    x6 = center(x5)\n    x7 = ofcolor(I, x4)\n    x8 = center(x7)\n    x9 = height(I)\n    x10 = width(I)\n    x11 = hfrontier(x6)\n    x12 = fill(I, x3, x11)\n    x13 = hfrontier(x8)\n    x14 = fill(x12, x4, x13)\n    x15 = decrement(x10)\n    x16 = decrement(x9)\n    x17 = halve(x9)\n    x18 = tojvec(x15)\n    x19 = connect(ORIGIN, x18)\n    x20 = fill(x14, x3, x19)\n    x21 = toivec(x16)\n    x22 = astuple(x16, x15)\n    x23 = connect(x21, x22)\n    x24 = fill(x20, x4, x23)\n    x25 = decrement(x17)\n    x26 = toivec(x25)\n    x27 = connect(ORIGIN, x26)\n    x28 = fill(x24, x3, x27)\n    x29 = tojvec(x15)\n    x30 = decrement(x17)\n    x31 = astuple(x30, x15)\n    x32 = connect(x29, x31)\n    x33 = fill(x28, x3, x32)\n    x34 = equality(x17, x12)\n    x41 = branch(x34, x22, x24)\n    O = canvas(x31, x41)\n    return O"], [1.0, "def solve_01e6a6b9(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [1.0, "def solve_9ecddb3b(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = shape(I)\n    x3 = multiply(x2, x2)\n    x4 = canvas(ZERO, x3)\n    x5 = rbind(multiply, x2)\n    x6 = apply(x5, x1)\n    x7 = asobject(I)\n    x8 = lbind(shift, x7)\n    x9 = mapply(x8, x6)\n    O = paint(x4, x9)\n    return O"], [1.0, "def solve_6d23468b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_dc3a0aba(I):\n    x1 = astuple(SIX, THREE)\n    x2 = dmirror(I)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    x14 = apply(x4, x13)\n    x15 = ofcolor(I, ZERO)\n    x16 = asindices(I)\n    x17 = shoot(ORIGIN, x16)\n    x18 = intersection(x15, x17)\n    x19 = fill(I, ZERO, x18)\n    O = replace(x19, FIVE, ZERO)\n    return O"], [1.0, "def solve_8fa45371(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_c8a2b041(I):\n    x1 = subgrid(I, I)\n    O = upscale(x1, THREE)\n    return O"], [1.0, "def solve_2e9f12c9(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = matcher(size, TWO)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = other(x8, x1)\n    x10 = replace(I, x6, x1)\n    x11 = ofcolor(I, x6)\n    x12 = repeat(x9, ONE)\n    x13 = rbind(equality, x12)\n    x14 = first(I)\n    x15 = dedupe(x14)\n    x16 = x13(x15)\n    x17 = last(x15)\n    x18 = dedupe(x17)\n    x19 = x13(x18)\n    x20 = dmirror(I)\n    x21 = first(x20)\n    x22 = dedupe(x21)\n    x23 = x13(x22)\n    x24 = dmirror(I)\n    x25 = last(x24)\n    x26 = dedupe(x25)\n    x27 = x13(x26)\n    x28 = apply(last, x11)\n    x29 = apply(first, x11)\n    x30 = either(x16, x19)\n    x31 = branch(x30, x28, x29)\n    x32 = branch(x30, lbind, rbind)\n    x33 = lbind(x32, astuple)\n    x34 = branch(x30, height, width)\n    x35 = x34(I)\n    x36 = decrement(x35)\n    x37 = either(x16, x23)\n    x38 = branch(x37, ZERO, x36)\n    x39 = x33(x38)\n    x40 = apply(x39, x31)\n    O = fill(x10, x6, x40)\n    return O"], [1.0, "def solve_78faa7f4(I):\n    x1 =feca360(I)\n    x2 = asobject(I)\n    x3 = matcher(first, ZERO)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = lbind(shift, x5)\n    x7 = mapply(x6, x2)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_47be22b3(I):\n    x1 = switch(I, TWO, NEG_ONE)\n    x2 = switch(x1, THREE, FOUR)\n    x3 = switch(x2, EIGHT, NINE)\n    x4 = switch(x3, ONE, FOUR)\n    x5 = astuple(TEN, TEN)\n    x6 = canvas(ZERO, x5)\n    x7 = asindices(x6)\n    x8 = paint(x6, x7)\n    x9 = matcher(first, THREE)\n    x10 = rbind(sfilter, x9)\n    x11 = rbind(compose, initset)\n    x12 = lbind(rbind, manhattan)\n    x13 = chain(x11, x12, initset)\n    x14 = chain(x10, x13,7776)\n    x15 = apply(x14, x5)\n    x16 = fork(connect, ulcorner, lrcorner)\n    x17 = fork(connect, llcorner, urcorner)\n    x18 = fork(combine, x16, x17)\n    x19 = mapply(x18, x15)\n    O = fill(x8, EIGHT, x19)\n    return O"], [1.0, "def solve_0c1b95c0(I):\n    x1 = fgpartition(I)\n    x2 = compose(dneighbors, center)\n    x3 = fork(difference, backdrop, x2)\n    x4 = fork(equality, toindices, x3)\n    x5 = matcher(size, FIVE)\n    x6 = fork(both, x4, x5)\n    x7 = extract(x1, x6)\n    x8 = color(x7)\n    x9 = merge(x1)\n    x10 = compose(hmirror, vmirror)\n    x11 = initset(x10)\n    x12 = insert(vmirror, x11)\n    x13 = insert(hmirror, x12)\n    x14 = rapply(x13, x9)\n    x15 = ulcorner(x7)\n    x16 = lbind(subtract, x15)\n    x17 = matcher(first, x8)\n    x18 = rbind(sfilter, x17)\n    x19 = chain(x16, ulcorner, x18)\n    x20 = fork(shift, identity, x19)\n    x21 = mapply(x20, x14)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_a860361d(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_8ca81ad9(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_a4fad10f(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [1.0, "def solve_1aef2380(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = height(x2)\n    x4 = halve(x3)\n    x5 = width(x2)\n    x6 = halve(x5)\n    x7 = ulcorner(x2)\n    x8 = lrcorner(x2)\n    x9 = shape(I)\n    x10 = maximum(x9)\n    x11 = multiply(THREE, TEN)\n    x12 = interval(ONE, x11, ONE)\n    x13 = rbind(multiply, x4)\n    x14 = apply(x13, x12)\n    x15 = rbind(multiply, x6)\n    x16 = apply(x15, x12)\n    x17 = pair(x14, x16)\n    x18 = rbind(add, x7)\n    x19 = apply(invert, x17)\n    x20 = apply(x18, x19)\n    x21 = rbind(add, x8)\n    x22 = apply(x21, x17)\n    x23 = pair(x20, x22)\n    x24 = papply(box, x23)\n    O = fill(I, x1, x24)\n    return O"], [1.0, "def solve_5db94dc5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = extract(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = last(x12)\n    x21 = lbind(subtract, x20)\n    x22 = increment(x19)\n    x23 = rbind(subtract, x22)\n    x24 = chain(x21, x23, decrement)\n    x25 = lbind(shift, x1)\n    x26 = mapply(x25, x18)\n    O = fill(I, x3, x26)\n    return O"], [1.0, "def solve_2256a6d2(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_fb6a737b(I):\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = mfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = mfilter(x4, x2)\n    x6 = shape(I)\n    x7 = add(TWO, x6)\n    x8 = canvas(ZERO, x7)\n    x9 = asobject(I)\n    x10 = shift(x9, UNITY)\n    x11 = paint(x8, x10)\n    x12 = objects(x11, T, F, T)\n    x13 = apply(color, x12)\n    x14 = rbind(contained, x13)\n    x15 = compose(minimum, x14)\n    x16 = sfilter(x1, x15)\n    x17 = paint(x11, x16)\n    x18 = objects(x11, T, F, T)\n    x19 = merge(x18)\n    x20 = cover(x17, x19)\n    x21 = paint(x20, x16)\n    O = compress(x21)\n    return O"], [1.0, "def solve_4b143fdc(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_8bb47b66(I):\n    x1 = fgpartition(I)\n    x2 = argmax(x1, size)\n    x3 = height(x2)\n    x4 = width(x2)\n    x5 = neighbors(ORIGIN)\n    x6 = toindices(x2)\n    x7 = lbind(shift, x6)\n    x8 = height(I)\n    x9 = divide(x8, x3)\n    x10 = width(I)\n    x11 = divide(x10, x4)\n    x12 = astuple(x9, x11)\n    x13 = maximum(x12)\n    x14 = increment(x13)\n    x15 = interval(ONE, x14, ONE)\n    x16 = astuple(x3, x4)\n    x17 = lbind(multiply, x16)\n    x18 = compose(crement, x17)\n    x19 = lbind(mapply, x7)\n    x20 = rbind(apply, x15)\n    x21 = lbind(rbind, multiply)\n    x22 = compose(x21, x18)\n    x23 = chain(x19, x20, x22)\n    x24 = rbind(toobject, I)\n    x25 = compose(x7, x18)\n    x26 = chain(palette, x24, x25)\n    x27 = mostcolor(I)\n    x28 = rbind(equality, x27)\n    x29 = rbind(argmin, x28)\n    x30 = compose(x29, x26)\n    x31 = fork(recolor, x30, x23)\n    x32 = mapply(x31, x5)\n    O = paint(I, x32)\n    return O"], [1.0, "def solve_a0f497d4(I):\n    x1 = ofcolor(I, SIX)\n    x2 = recolor(ONE, x1)\n    x3 = power(decrement, TWO)\n    x4 = x3(x2)\n    x5 = on108(x4, THREE)\n    x6 = matcher(size, dedupe)\n    x7 = x6(x5)\n    x8 = rbind(subgrid, I)\n    x9 = apply(x8, x5)\n    x10 = dedupe(x9)\n    x11 = lbind(fork, shift)\n    x12 = lbind(x11, x12)\n    x13 = lbind(rbind, rapply)\n    x14 = compose(x12, x13)\n    x15 = lbind(compose, x5)\n    x16 = x15(x14)\n    x17 = mapply(x16, x10)\n    O = underfill(I, EIGHT, x17)\n    return O"], [1.0, "def solve_8d9e4de7(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_407adb1d(I):\n    x1 = lbind(recolor, EIGHT)\n    x2 = compose(x1, delta)\n    x3 = fork(paint, identity, x2)\n    x4 = apply(x3, I)\n    x5 = astuple(SIX, dmirror)\n    x6 = astuple(UNITY, papply)\n    x7 = initset(x6)\n    x8 = equality(x5, x7)\n    x9 = branch(x8, identity, x4)\n    x10 = x9(I)\n    x11 = objects(x10, T, F, T)\n    x12 = colorfilter(x11, EIGHT)\n    x13 = difference(x11, x12)\n    x14 =argmax(x13, size)\n    x15 = color(x14)\n    x16 = subgrid(x14, x10)\n    x17 = trim(x16)\n    x18 = lefthalf(x17)\n    x19 = vmirror(x18)\n    x20 = astuple(x15, x19)\n    x21 = double(x20)\n    x22 = interval(ZERO, x21, ONE)\n    x23 = apply(tojvec, x22)\n    x24 = lbind(shift, x18)\n    x25 = mapply(x24, x23)\n    x26 = fill(x10, EIGHT, x25)\n    x27 = fill(x26, FOUR, x24)\n    O = x9(x27)\n    return O"], [1.0, "def solve_d14f24ae(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_fdd67056(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_db548893(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = fork(recolor, color, backdrop)\n    x5 = apply(x4, x1)\n    x6 = mfilter(x5, hline)\n    x7 = mfilter(x5, vline)\n    x8 = size(x6)\n    x9 = size(x7)\n    x10 = greater(x8, x9)\n    x11 = branch(x10, vsplit, hsplit)\n    x12 = x11(I, TWO)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = palette(x13)\n    x16 = merge(x15)\n    x17 = palette(x14)\n    x18 = intersection(x16, x17)\n    x19 = difference(x16, x18)\n    x20 = first(x19)\n    x21 = shape(x13)\n    x22 = canvas(x20, x21)\n    x23 = ofcolor(x13, x10)\n    x24 = ofcolor(x14, x10)\n    x25 = intersection(x23, x24)\n    O = fill(x22, TWO, x25)\n    return O"], [1.0, "def solve_3d56e398(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_5b6751ac(I):\n    x1 = objects(I, T, F, T)\n    x2 = height(x1)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, le, tophalf)\n    x5 = branch(x3, righthalf, x4)\n    x6 = width(x5)\n    x7 = equality(x6, ONE)\n    x8 = branch(x7, ulcorner, last)\n    x9 = x8(x5)\n    x10 = x8(x10)\n    x11 = gravitate(x9, x11)\n    x12 = shape(x11)\n    x13 = multiply(x12, x4)\n    x14 = canvas(ZERO, x13)\n    x15 = ofcolor(x14, ZERO)\n    x16 = rbind(multiply, x14)\n    x17 = apply(x16, x15)\n    x18 = lbind(shift, x15)\n    x19 = mapply(x18, x17)\n    O = fill(x14, ZERO, x19)\n    return O"], [1.0, "def solve_8ef6330b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = fork(combine, vfrontier, hfrontier)\n    x16 = x15(x14)\n    x17 = mapply(x16, x13)\n    x18 =eepply(x17, x16)\n    x19 = hmirror(x18)\n    x20 = x16(x19)\n    x21 = replace(x20, x3, x5)\n    x22 = x15(x21)\n    O = compress(x22)\n    return O"], [1.0, "def solve_a9288d1a(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, least)\n    x9 = compose(flip, x8)\n    x10 = extract(x7, x9)\n    x11 = remove(x10, x7)\n    x12 = merge(x11)\n    x13 = mostcolor(x12)\n    x14 = partition(x12)\n    x15 = ofcolor(x12, x13)\n    x16 = subgrid(x15, x12)\n    x17 = difference(x16, x15)\n    x18 = hmirror(x17)\n    x19 = replace(x18, x13, x12)\n    x20 = subgrid(x15, x19)\n    x21 = asobject(x20)\n    x22 = occurrences(x19, x21)\n    x23 = size(x22)\n    x24 = positive(x23)\n    x25 = branch(x24,hmirror, vmirror)\n    x26 = x25(x20)\n    x27 = ofcolor(x26, x13)\n    x28 = subgrid(x27, x20)\n    x29 = ofcolor(x28, x13)\n    x30 = ulcorner(x27)\n    x31 = invert(x30)\n    x32 = lrcorner(x27)\n    x33 = increment(x31)\n    x34 = shift(x29, x33)\n    x35 = fork(connect, last, last)\n    x36 = mapply(x35, x22)\n    O = fill(x14, x13, x36)\n    return O"], [1.0, "def solve_4c46e58c(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_461fe4c6(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_c6820454(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_01a1ea2e(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_c638c946(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = apply(normalize, x2)\n    x4 = astuple(NINE, NINE)\n    x5 = canvas(FIVE, x4)\n    x6 = asindices(x5)\n    x7 = box(x6)\n    x8 = center(x6)\n    x9 = lbind(contained, ZERO)\n    x10 = rbind(subtract, x8)\n    x11 = compose(x9, x10)\n    x12 = chain(outbox, outbox, initset)\n    x13 = corners(x6)\n    x14 = mapply(x12, x13)\n    x15 = difference(x7, x14)\n    x16 = inbox(x7)\n    x17 = sfilter(x16, x11)\n    x18 = combine(x15, x17)\n    x19 = fill(x5, ONE, x18)\n    x20 = objects(x19, T, F, T)\n    x21 = apply(toindices, x20)\n    x22 = lbind(matcher, normalize)\n    x23 = lbind(extract, x21)\n    x24 = chain(ulcorner, x23, x22)\n    x25 = chain(invert, ulcorner, x24)\n    x26 = fork(shift, identity, x25)\n    x27 = mapply(x26, x3)\n    O = paint(x5, x27)\n    return O"], [1.0, "def solve_3072af49(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, x5)\n    x8 = rbind(x7, x6)\n    x9 = compose(x8, x7)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [1.0, "def solve_70fb6a99(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dneighbors)\n    x9 = fork(shift, x8, x6)\n    x10 = fork(combine, x9, x3)\n    x11 = mapply(x10, x1)\n    O = paint(I, x11)\n    return O"], [1.1, "def solve_36c306d0(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_19abcbdd(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = palette(I)\n    x7 = compose(x4, x5)\n    x8 = argmin(x6, x7)\n    x9 = colorcount(I, x8)\n    x10 = positive(x9)\n    x11 = branch(x10, dmirror, identity)\n    x12 = x11(I)\n    x13 = x8(x12)\n    x14 = ofcolor(x13, x8)\n    x15 = subgrid(x14, x13)\n    x16 = adaptation(x15, x13)\n    x17 = mostcolor(x16)\n    x18 = ofcolor(x x x17)\n    x19 = hmirror(x18)\n    x20 = asobject(x19)\n    x21 = matcher(first, x17)\n    x22 = compose(flip, x21)\n    x23 = sfilter(x20, x22)\n    x24 = partition(x12)\n    x25 = sizefilter(x24, ONE)\n    x26 = apply(merge, x25)\n    x27 = argmin(x26, last)\n    x28 = rbind(subgrid, x13)\n    x29 = apply(x28, x27)\n    x30 = rbind(colorcount, x17)\n    x31 = argmin(x29, x30)\n    x32 = rightmost(x31)\n    x33 = rightmost(x28)\n    x34 = width(x33)\n    x35 =rightmost(x28)\n    x36 = leftmost(x34)\n    x37 = subtract(x32, x35)\n    x38 = decrement(x37)\n    x39 = leftmost(x33)\n    x40 = rightmost(x33)\n    x41 = subtract(x39, x40)\n    x42 = astuple(x37, x"], [1.1, "def solve_a03a27cd(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = astuple(x34, x37)\n    x39 = add(x38, UNITY)\n    x40 = initset(x39)\n    x41 = backdrop(x40)\n    "], [1.1, "def solve_3e57783e(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = subtract(x11, TWO)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract("], [1.1, "def solve_204764b3(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = compose(x4, size)\n    x6 = sfilter(x1, x5)\n    x7 = fork(pair, x4, identity)\n    x8 = chain(x1, x7, dmirror)\n    x9 = maximum(x6)\n    x10 = identity(I)\n    x11 = branch(x10,130, x9)\n    x12 = x11(I)\n    x13 = x11(x12)\n    x14 = argmin(x13, x7)\n    x15 = argmax(x13, x7)\n    x16 = width(x12)\n    x17 = decrement(x16)\n    x18 = tojvec(x17)\n    x19 = height(x12)\n    x20 = decrement(x19)\n    x21 = interval(x17, x20, ONE)\n    x22 = lbind(apply, last)\n    x23 = compose(x22, first)\n    x24 = rbind(sfilter, x23)\n    x25 = chain(positive, size, x24)\n    x26 = sfilter(x21, x25)\n    x27 = maximum(x26)\n    x28 = increment(x27)\n    x29 = interval(ZERO, x28, ONE)\n    x30 = lbind( pair, x22)\n    x31 = lbind(pair, x25)\n    x32 = compose(x30, x31)\n    x33 = apply(x32, x29)\n    x34 = lbind(sfilter, x33)\n    x35 = lbind(matcher, first)\n    x36 = compose(x34, x35)\n    x37 = chain(size, x33, x36)\n    x38 = apply(x37, x29)\n    x39 = lbind(colorcount, x12)\n    x40 = valmax(x38, x39)\n    x41 = mat"], [1.1, "def solve_f1ba0082(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_f4119771(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = combine(x25, x26)\n    x28 = intersection(x27, x23)\n    x29 = first(x28)\n    x30 = ofcolor(x23, x29)\n    x31 = ofcolor(x24, x29)\n    x32 = intersection(x30, x31)\n    x33 = first(x32)\n    x34 = matcher(first, x29)\n    x35 = compose(flip, x34)\n    x36 = sfilter(x33, x35)\n    x37 = difference(x21, x36)\n    x38 = objects(x24, T, F, T)\n    x39 = colorfilter(x38, x29)"], [1.1, "def solve_f66653b4(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = compose(flip, x33)\n    x35 = sfilter(x32, x34)\n    x36 = difference(x32, x35)\n    x37 = fill(x23, x8, x31)\n    x38 = fill(x37, x42, x36)\n    x39 = fork(connect, identity, ul"], [1.1, "def solve_aae888ec(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = ONE00000000\n    001044404900\n    31000404413\n    \"\"\"\n    x2 = trim(I)\n    x3 = decrement(x2)\n    x4 = tojvec(x3)\n    x5 = connect(ORIGIN, x4)\n    x6 = height(I)\n    x7 = equality(x6, ZERO)\n    x8 = branch(x7, x5, x6)\n    x9 = width(I)\n    x10 = decrement(x9)\n    x11 = tojvec(x10)\n    x12 = connect(x11, x9)\n    x13 = height(I)\n    x14 = decrement(x13)\n    x15 = toivec(x14)\n    x16 = connect(x15, x12)\n    x17 = width(I)\n    x18 = decrement(x17)\n    x19 = tojvec(x18)\n    x20 = connect(x19, x12)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = toivec(x22)\n    x24 = connect(x23, x18)\n    x25 = width(I)\n    x26 = decrement(x25)\n    x27 = tojvec(x26)\n    x28 = shape(I)\n    x29 = decrement(x28)\n    x30 = connect(x27, x29)\n    x31 = height(I)\n    x32 = decrement(x31)\n    x33 = toivec(x32)\n    x34 = shape(I)\n    x35 = decrement(x34)\n    x36 = connect(x33, x35)\n    x37 = fill(I, THREE, x10)\n    x38 = fill(x37, astuple, x20)\n    x39 = fill(x38, x6, x30)\n    x40 = fill(x39, TWO, x36)\n    x41 = size(x1)\n    x42 = positive(x41)\n    x43 = branch(x42, x3, x4"], [1.1, "def solve_3af703c4(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_50fc64e8(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = leastcolor(x1)\n    x4 = leastcolor(x2)\n    x5 = ofcolor(I, x3)\n    x6 = center(x5)\n    x7 = ofcolor(I, x4)\n    x8 = center(x7)\n    x9 = height(I)\n    x10 = width(I)\n    x11 = hfrontier(x6)\n    x12 = fill(I, x3, x11)\n    x13 = hfrontier(x8)\n    x14 = fill(x12, x4, x13)\n    x15 = decrement(x10)\n    x16 = decrement(x9)\n    x17 = halve(x9)\n    x18 = tojvec(x15)\n    x19 = connect(ORIGIN, x18)\n    x20 = fill(x14, x3, x19)\n    x21 = toivec(x16)\n    x22 = astuple(x16, x15)\n    x23 = connect(x21, x22)\n    x24 = fill(x20, x4, x23)\n    x25 = decrement(x17)\n    x26 = toivec(x25)\n    x27 = connect(ORIGIN, x26)\n    x28 = fill(x24, x3, x27)\n    x29 = tojvec(x15)\n    x30 = decrement(x17)\n    x31 = astuple(x30, x15)\n    x32 = connect(x29, x31)\n    x33 = fill(x28, x3, x32)\n    x34 = toivec(x17)\n    x35 = toivec(x16)\n    x36 = connect(x34, x35)\n    x37 = fill(x33, x4, x36)\n    x38 = astuple(x17, x15)\n    x39 = astuple(x16, x15)\n    x40 = connect(x38, x39)\n    O = fill(x37,"], [1.1, "def solve_9efd596f(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_e5c79d0b(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = width(x4)\n    x6 = toivec(x5)\n    x7 = index(x4, x6)\n    x8 = shape(x4)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x4, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, rot90)\n    x16 = lbind(power, rot270)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x13)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x19)\n    x24 = uppermost(x12)\n    x25 = lbind(add, x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = lbind(multiply, x27)\n    x29 = chain(toivec, x25, x28)\n    x30 = fork(shift, x23, x29)\n    x31 = compose(asobject, x22)\n    x32 = uppermost(x12)\n    x33 = lbind(subtract, x32)\n    x34 = height(x12)\n    x35 = increment(x34)\n    x36 = lbind(multiply, x35)\n    x37 = chain(toivec, x33, x36)\n    x38 = fork(shift, x31, x37)\n    x39 = fork(combine"], [1.1, "def solve_1bcbf7f3(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = fork(recolor, x40, identity)\n    x42 = mapply"], [1.1, "def solve_fcbd5e79(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = rot270(I)\n    x2 = rot90(I)\n    x3 = rot270(x2)\n    x4 = rbind(order, identity)\n    x5 = apply(x4, x1)\n    x6 = apply(x4, x2)\n    x7 = compose(positive, size)\n    x8 = lbind(interval, ZERO)\n    x9 = rbind(x8, ONE)\n    x10 = compose(x7, x9)\n    x11 = apply(x10, x5)\n    x12 = lbind(matcher, SEVEN)\n    x13 = compose(x12, x4)\n    x14 = lbind(matcher, EIGHT)\n    x15 = compose(x14, x4)\n    x16 = fork(sfilter, identity, x13)\n    x17 = fork(sfilter, identity, x15)\n    x18 = compose(x16, x17)\n    x19 = rbind(shoot, UNITY)\n    x20 = rbind(shoot, NEG_UNITY)\n    x21 = fork(combine, x19, x20)\n    x22 = compose(x21, x18)\n    x23 = rbind(shoot, DOWN_LEFT)\n    x24 = rbind( visitmatching, ONE)\n    x25 = chain(x23, x24, x2)\n    x26 = compose(x25, x18)\n    x27 = fork(sfilter, identity, x26)\n    x28 = compose(x27, x15)\n    x29 = fork(difference, x28, x12)\n    x30 = compose(x28, x29)\n    x31 = fork(shift, x30, x17)\n    x32 = compose(decrement, numcolors)\n    x33 = fork(add, x32, x31)\n    x34 = fork(\n    intersection, x33, x39a)\n    x35 = chain(size, x34, xdmirror)\n    x36 = matcher(x35, ZERO)\n    x37 = lbind(apply, vmirror)\n    "], [1.1, "def solve_56507e47(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mostcolor(I)\n    x3 = shape(I)\n    x4 = canvas(x2, x3)\n    x5 = hconcat(I, x4)\n    x6 = objects(x5, F, F, T)\n    x7 = argmin(x6, size)\n    x8 = argmax(x6, size)\n    x9 = remove(x7, x6)\n    x10 = presents(x7, x9)\n    x11 = leftmost(x7)\n    x12 = leftmost(x8)\n    x13 = greater(x11, x12)\n    x14 = uppermost(x7)\n    x15 = uppermost(x8)\n    x16 = greater(x14, x15)\n    x17 = uppermost(x7)\n    x18 = equality(x13, x17)\n    x19 = branch(x18, x12, x13)\n    x20 = branch(x18, x8, x19)\n    x21 = branch(x18, x7, x20)\n    x22 = x21(I)\n    x23 = 17827(x22)\n    x24 = shape(x22)\n    x25 = canvas(x2, x24)\n    x26 = normalize(x22)\n    x27 = shift(x26, x24)\n    x28 = paint(x25, x27)\n    x29 = rbind(toobject, x28)\n    x30 = chain(x29, palette, x28)\n    x31 = matcher(x30, x8)\n    x32 = extract(x29, x31)\n    x33 = x32(x72)\n    x34 = interval(ZERO, NINE, ONE)\n    x35 = pair(x34, x34)\n    x36 = lbind(colorcount\n    3889033338\n    x369443289\n    3853034303\n    8833 m8388\n    \"\"\"\n    x1 = objects(x38, F, F, T)\n    x2 = rbind(colorcount, x8)\n    x3"], [1.1, "def solve_6e7ba30b(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = crop(I, ORIGIN, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = matcher(first, ZERO)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = shape(x5)\n    x7 = multiply(x6, x6)\n    x8 = add(x7, DOWN)\n    x9 = canvas(ZERO, x8)\n    x10 = multiply(x5, x6)\n    x11 = add(x10, x6)\n    x12 = lbind(multiply, x6)\n    x13 = chain(x12, double, partition)\n    x14 = lbind(add, x4)\n    x15 = compose(invert, x14)\n    x16 = lbind(multiply, x11)\n    x17 = compose(invert, x16)\n    x18 = fork(add, x15, x17)\n    x19 = fork(equality, toindices, x18)\n    x20 = sfilter(x15, x19)\n    x21 = lbind(multiply, x6)\n    x22 = compose(invert, x21)\n    x23 = fork(add, x20, x22)\n    x24 =28222244mult13)\n    x25 = decrement(x24)\n    x26 = lbind(multiply, x11)\n    x27 = compose(invert, x26)\n    x28 = fork(add, x23, x27)\n    x29 = rbind(contained, x47)\n    x30 = compose(x29, first)\n    x31 = rbind(added, x35)\n    x32 = compose(x31, first)\n    x33 = fork(add, x32, x30)\n    x34 = chain(ineighbors, x23, x33)\n    x35 = fork(astuple, x34, x32)\n    x36 = canvas(ZERO, x6)\n    x37 = paint(x36, x35)\n    x38 = fork(connect,"], [1.1, "def solve_1124c176(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dae)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)\n"], [1.1, "def solve_715f57e2(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(flip, x6)\n    x9 = fork(both, x3, x8)\n    x10 = sfilter(x1, x9)\n    x11 = compose(size, first)\n    x12 = decrement(x11)\n    x13 =8853alf(x10)\n    x14 = toindices(x13)\n    x15 = rbind(repeat, x12)\n    x16 = compose(x15, first)\n    x17 = lbind(contained, ONE)\n    x18 = chain(x17, x16, x first)\n    x19 = compose(x18, x10)\n    x20 = compose(x15, x19)\n    x21 = fork(contained, x20, x17)\n    x22 = compose(x21, x10)\n    x23 = fork(add, x28, astuple)\n    x24 = fork(add, x23, x22)\n    x25 = Tuple(x14, x24)\n    x26 = astuple(vmatching, x25)\n    x27 = fork(either, x24, x26)\n    x28 = compose(flip, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(invert, x29, x17)\n    x31 = decrement(x26)\n    x32 = astuple(x31, x30)\n    x33 = shift(x19, x32)\n    x34 = paint(I, x33)\n    x35 = toindices(x33)\n    x36 = rbind(manhattan, x35)\n    x37 = compose(x36, initset)\n    x38 = argmax(x35, x37)\n    x39 = first(x"], [1.1, "def solve_45e4654b(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = fork(vsplit, identity, height)\n    x5 = chain(asobject, first, x4)\n    x6 = mostcolor(I)\n    x7 = lbind(chain, numcolors)\n    x8 = lbind(x7, x5)\n    x9 = lbind(chain, color)\n    x10 = lbind(x9, x5)\n    x11 = rbind(rapply, I)\n    x12 = compose(initset, x8)\n    x13 = chain(first, x11, x12)\n    x14 = rbind(rapply, I)\n    x15 = compose(initset, x10)\n    x16 = chain(first, x14, x15)\n    x17 = matcher(x13, ONE)\n    x18 = matcher(x16, x6)\n    x19 = compose(flip, x18)\n    x20 = fork(sfilter, identity, x19)\n    x21 = compose(asobject, x20)\n    x22 = apply(x21, x3)\n    x23 = dmirror(x22)\n    x24 = hmirror(x23)\n    x25 = vmirror(x24)\n    x26 = width(x22)\n    x27 = hupscale(x25, x26)\n    x28 = toobject(x27, x23)\n    x29 = matcher(x28, ZERO)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x25, x30)\n    x32 = hmirror(x31)\n    x33 = vmirror(x32)\n    x34 = sfilter(x33, x30)\n    x35 = vmirror(x34)\n    x36 = hmirror(x35)\n    x37 = cellwise(x22, x33, x36)\n    x38 = product(x37, x37)\n"], [1.1, "def solve_02a2e256(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_1e512a9c(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = size(x3)\n    x5 = positive(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = frontiers(I)\n    x9 = x6(I)\n    x10 = size(x8)\n    x11 = size(x9)\n    x12 = greater(x10, x11)\n    x13 = branch(x12, identity, vmirror)\n    x14 = x13(I)\n    x15 = ofcolor(x14, NEG_ONE)\n    x16 = subgrid(x15, x14)\n    x17 = LEastuple(x16, x15)\n    x18 = hsplit(x17, x181)\n    x19 = lbind(ofcolor, x14)\n    x20 = compose(x19, last)\n    x21 = fork(sfilter, last, x20)\n    x22 = chain(x15, x21, first)\n    x23 = rbind(contained, x15)\n    x24 = compose(x23, last)\n    x25 = sfilter(x16, x24)\n    x26 =bordering(x25)\n    x27 = mostcolor(x26)\n    x28 = matcher(first, x27)\n    x29 = compose(flip, x28)\n    x30 = rbind(sfilter, x29)\n    x31 = lbind(recolor, x27)\n    x32 = compose(x31, x30)\n    x33 = chain(x19, x32, x29)\n    x34 = ofcolor(x14, x27)\n    x35 = compose(x34, x33)\n    x36 = ofcolor(x14, x27)\n    x37 = fork(combine, x35, x36)\n    x38 = apply(x37, x34)\n    x39 = fork(recolor, x33, x38)\n    x40 = mapply(x39,"], [1.1, "def solve_a3eb87ac(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = interval(ONE, x1, ONE)\n    x3 = connect(ORIGIN, DOWN)\n    x4 = connect(ORIGIN, ZERO_BY_TWO)\n    x5 = combine(x3, x4)\n    x6 = astuple(NEG_TWO, TWO)\n    x7 = lbind(multiply, x6)\n    x8 = toivec(NEG_TWO)\n    x9 = apply(x7, x2)\n    x10 = rbind(subtract, TWO_BY_ZERO)\n    x11 = fork(shift, identity, x10)\n    x12 = repeat(x11, TWO)\n    x13 = lbind(repeat, x12)\n    x14 = compose(x13, width)\n    x15 = rbind(paint, x14)\n    x16 = lbind(recolor, ZERO)\n    x17 = compose(x16, x15)\n    x18 = fork(paint, x17, x15)\n    x19 = compose(x13, first)\n    x20 = rbind(argmax, x19)\n    x21 = compose(x20, x18)\n    x22 = apply(x21, x3)\n    x23 = fork(common, x21, x22)\n    x24 = remove(x15, x23)\n    x25 = totuple(x24)\n    x26 = first(x25)\n    x27 = last(x25)\n    x28 = color(x26)\n    x29 = mostcolor(I)\n    x30 = shape(x26)\n    x31 = canvas(x29, x30)\n    x32 = fill(x31, x27, x26)\n    x33 = asobject(x12)\n    x34 = ofcolor(x33, x29)\n    x35 = difference(x34, x34)\n    x36 = shape(x28)\n    x37 = lbind(shift, x33)\n    x38 = shift(x34, x36)\n    x39 = lbind(paint, x33)\n    "], [1.1, "def solve_596d6b46(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_d7b7de6a(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = index(x3, DOWN)\n    x5 = portrait(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(x3)\n    x8 = lefthalf(x7)\n    x9 = righthalf(x7)\n    x10 = palette(x8)\n    x11 = palette(x9)\n    x12 = compose(flip, x5)\n    x13 = extract(x10, x12)\n    x14 = extract(x11, x13)\n    x15 = other(x10, x14)\n    x16 = ofcolor(x8, x15)\n    x17 = last(x16)\n    x18 = replace(x8, x14, x17)\n    x19 = leftmost(x16)\n    x20 = lbind(downscale, x19)\n    x21 = compose(x20, toindices)\n    x22 = x21(x18)\n    x23 = rbind(upscale, x22)\n    x24 = chain(x23, halve, width)\n    x25 = rbind(branch, x34)\n    x26 = rbind(x25, x24)\n    x27 = chain(size, dedupe, x26)\n    x28 = rbind(branch, x49)\n    x29 = rbind(x28, x27)\n    x30 = chain(x29, x26, x23)\n    x31 = fork(combine, x27, x30)\n    x32 = fork(add, x24, x31)\n    x33 = fork(insert, x32, palette)\n    x34 = compose(backdrop, x33)\n    x35 = mapply(x34, x18)\n    x36 = double(x19)\n    x37 = rbind(greater, x36)\n    x38 = compose(x37, first)\n    x39 = chain(invert, x35, x38)"], [1.1, "def solve_8c48ed19(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, corners)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, x2)\n    x5 = fgpartition(I)\n    x6 = merge(x5)\n    x7 = backdrop(x4)\n    x8 = toobject(x7, I)\n    x9 = difference(x6, x8)\n    x10 = toobject(x9, I)\n    x11 = color(x4)\n    x12 = color(x10)\n    x13 = ofcolor(I, x11)\n    x14 = ulcorner(x4)\n    x15 = ulcorner(x10)\n    x16 = subtract(x14, x15)\n    x17 = leftmost(x16)\n    x18 = rightmost(x16)\n    x19 = subtract(x17, x18)\n    x20 = lowermost(x16)\n    x21 = leftmost(x16)\n    x22 = subtract(x20, x21)\n    x23 = astuple(x22, x19)\n    x24 = ulcorner(x7)\n    x25 = ulcorner(x7)\n    x26 = subtract(x24, x25)\n    x27 = astuple(x26, x19)\n    x28 = invert(x27)\n    x29 = double(x28)\n    x30 = astuple(x22, x19)\n    x31 = cover(I, x30)\n    x32 = downscale(x31, x29)\n    x33 = ofcolor(x32, x11)\n    x34 = ulcorner(x3)\n    x35 = increment(x34)\n    x36 = rbind(subtract, x35)\n    x37 = chain(x36, size, first)\n    x38 = interval(e26, x37, ONE)\n    x39 = sfilter(x38, x37)\n    x40 = apply(normalize, x39)\n    x41 = rbind(colorcount, x11)\n    x42"], [1.1, "def solve_329f378a(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x2, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, x4)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x6, x2)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_efa33aa6(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_93912620(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_de576dac(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmin(x2, size)\n    x4 = color(x3)\n    x5 = leftmost(x3)\n    x6 =85(I)\n    x7 = color(x3)\n    x8 = leftmost(x3)\n    x9 =greater(x8, x5)\n    x10 = greater(x5, x9)\n    x11 = branch(x10, x7, x9)\n    x12 = x11(I)\n    x13 = color(x12)\n    x14 = subgrid(x12, I)\n    x15 = leftmost(x12)\n    x16 = rightmost(x12)\n    x17 = subtract(x15, x16)\n    x18 = add(x15, x17)\n    x19 = urcorner(x12)\n    x20 = shoot(x19, UNITY)\n    x21 = add(x29, x20)\n    x22 = llcorner(x12)\n    x23 = shoot(x22, DOWN_LEFT)\n    x24 =44877(x14)\n    x25 = combine(x23, x24)\n    x26 = combine(x21, x25)\n    x27 = downscale(x12, x19)\n    x28 = astuple(x31, x26)\n    x29 = canvas(x11, x28)\n    x30 = interval(ZERO, x12, ONE)\n    x31 = invert(x15)\n    x32 = shift(x30, x31)\n    x33 = asobject(x32)\n    x34 = matcher(first, x11)\n    x35 = compose(flip, x34)\n    x36 = sfilter(x33, x35)\n    x37 = lbind(shift, x27)\n    x38 = height(x12)\n    x39 = astuple(x37, x38)\n    x40 = x37(x39)\n    x41 = width(x12)\n    x42 = astuple(x44,"], [1.1, "def solve_d2c1c10b(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = chain(size, dedupe, first)\n    x9 = matcher(x8, ONE)\n    x10 = compose(first, cmirror)\n    x11 = chain(size, dedupe, x10)\n    x12 = matcher(x11, ONE)\n    x13 = fork(both, x9, x12)\n    x14 = rbind(rapply, I)\n    x15 = compose(initset, first)\n    x16 = chain(first, x14, x15)\n    x17 = compose(x13, x16)\n    x18 = extract(x7, x17)\n    x19 = first(x18)\n    x20 = last(x18)\n    x21 = x19(I)\n    x22 = width(x21)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = index(x21, x24)\n    x26 = asobject(x21)\n    x27 = matcher(first, x25)\n    x28 = compose(flip, x27)\n    x29 = sfilter(x26, x28)\n    x30 = hperiod(x29)\n    x31 = width(x21)\n    x32 = increment(x31)\n    x33 = interval(ZERO, x32, x30)\n    x34 = apply(tojvec, x33)\n    x35 = lbind(shift, x29)\n    x36 = mapply(x35, x34)\n    x37 = index(x21, x won)\n    x38 = lbind(shift, x26)\n    x39 = mapply(x38, x37)\n    x40 = combine(x36, x39)"], [1.1, "def solve_e5a6c3f3(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_552d11db(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_0d0e45b6(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_8478e970(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_cfeca1f0(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, FIVE)\n    x4 = astuple(FOUR, FOUR)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = asindices(x5)\n    x7 = rbind(toobject, I)\n    x8 = lbind(shift, x6)\n    x9 = compose(x7, x8)\n    x10 = multiply(x3, FIVE)\n    x11 = interval(ZERO, x10, FIVE)\n    x12 = apply(tojvec, x11)\n    x13 = apply(x9, x12)\n    x14 = matcher(numcolors, ONE)\n    x15 = fork(equality, identity, hmirror)\n    x16 = compose(flip, x15)\n    x17 = lbind(index, I)\n    x18 = compose(x17, ulcorner)\n    x19 = lbind(add, DOWN)\n    x20 = chain(x17, x19, ulcorner)\n    x21 = fork(equality, x18, x20)\n    x22 = compose(flip, x21)\n    x23 = fork(either, x14, x16)\n    x24 = fork(either, x23, x22)\n    x25 = compose(flip, x24)\n    x26 = lbind(multiply, TWO)\n    x27 = compose(x26, x14)\n    x28 = lbind(multiply, FOUR)\n    x29 = compose(x28, x16)\n    x30 = fork(add, x27, x29)\n    x31 = lbind(multiply, THREE)\n    x32 = compose(x31, x22)\n    x33 = lbind(multiply, EIGHT)\n    x34 = compose(x33, x25)\n    x35 = fork(add, x32, x34)\n    x36 = fork(add, x30, x35)\n    x37 = apply(x36, x13)\n    x38 = rbind(repeat,"], [1.1, "def solve_136c7692(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x1, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18,"], [1.1, "def solve_e581fd5d(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = insert(x8, x11)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = subgrid(x13, I)\n    x16 = width(x15)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = output(x17, x14)\n    x19 = height(x15)\n    x20 = interval(ZERO, x19, ONE)\n    x21 = pair(x18, x20)\n    x22 = sfilter(x21, x18)\n    x23 = first(x22)\n    x24 = height(x15)\n    x25 = interval(ZERO, x24, ONE)\n    x26 = pair(x23, x25)\n    x27 = urcorner(x28)\n    x28 = matcher(first, x3)\n    x29 = rbind(sfilter, x28)\n    x30 = compose(first, last)\n    x31 = chain(flip, x29, x30)\n    x32 = asobject(x27)\n    x33 = matcher(first, x3)\n    x34 = sfilter(x32, x33)\n    x35 = increment(x34)\n    x36 = width(x15)\n    x37 = interval(ZERO, x36, x35)\n    x38 = multiply(x37, x29)\n    x39 = lbind(apply, double)\n    x40 = lbind(shift, x33)\n    x41 = pair(x38, x40)\n    x42 ="], [1.1, "def solve_c8789a13(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = interval(TWO, FIVE, ONE)\n    x4 = rbind(shift, RIGHT)\n    x5 = rbind(shift, LEFT)\n    x6 = rbind(shift, UP)\n    x7 = rbind(shift, DOWN)\n    x8 = lbind(fork, intersection)\n    x9 = lbind(x8, identity)\n    x10 = lbind(rbind, shift)\n    x11 = compose(x9, x10)\n    x12 = compose(x11, tojvec)\n    x13 = chain(x11, tojvec, invert)\n    x14 = compose(x11, toivec)\n    x15 = chain(x11, toivec, invert)\n    x16 = lbind(compose, initset)\n    x17 = lbind(rbind, rapply)\n    x18 = lbind(chain, first)\n    x19 = lbind(compose, x5)\n    x20 = x16(x12)\n    x21 = rbind(compose, x20)\n    x22 = lbind(rbind, mapply)\n    x23 = chain(x21, x22, x17)\n    x24 = lbind(compose, x4)\n    x25 = x16(x13)\n    x26 = rbind(compose, x25)\n    x27 = x23(x10)\n    x28 = x27(x14)\n    x29 = x27(x divide)\n    x30 = branch(x26, x27, x28)\n    x31 = objects(I, T, T, T)\n    x32 = apply(x30, x31)\n    x33 = rbind(interval, ONE)\n    x34 = lbind(NEG_ONE)\n    x35 = chain(x33, x34, x30)\n    x36 = apply(x35, x32)\n    x37 = lbind(recolor, x1)\n    x38 = apply(x37, x36)\n    x39 = p"], [1.1, "def solve_648dd7c9(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = insert(x14, x24)\n    x26 = width(x9)\n    x27 = halve(x26)\n    x28 = tojvec(x27)\n    x29 = height(x9)\n    x30 = decrement(x29)\n    x31 = insert(x30, x30)\n    x32 = width(x9)\n    x33 = halve(x32)\n    x34 = tojvec(x33)\n    x35 = height(x9)\n    x36 = decrement(x35)\n    x37 = insert(x34, x36)\n    x38 = height(x10)\n    x39 = height(x28)\n    x40 = divide(x38, x39)\n    x41 = width(x10)\n    x42 = halve(x31)\n    x43 = tojvec(x42)\n    x44 = height(x10)\n    "], [1.1, "def solve_e00c3330(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = astuple(dmirror, cmirror)\n    x2 = astuple(hmirror, identity)\n    x3 = combine(x1, x2)\n    x4 = fork(vsplit, identity, height)\n    x5 = chain(asobject, first, x4)\n    x6 = mostcolor(I)\n    x7 = lbind(chain, numcolors)\n    x8 = lbind(x7, x5)\n    x9 = lbind(chain, color)\n    x10 = lbind(x9, x5)\n    x11 = rbind(rapply, I)\n    x12 = compose(initset, x8)\n    x13 = chain(first, x11, x12)\n    x14 = rbind(rapply, I)\n    x15 = compose(initset, x10)\n    x16 = chain(first, x14, x15)\n    x17 = matcher(x13, ONE)\n    x18 = matcher(x16, x6)\n    x19 = compose(flip, x18)\n    x20 = fork(both, x17, x19)\n    x21 = argmax(x3, x20)\n    x22 = x21(I)\n    x23 = x5(x22)\n    x24 = color(x23)\n    x25 = palette(x22)\n    x26 = remove(x24, x25)\n    x27 = other(x26, x6)\n    x28 = objects(x22, T, T, T)\n    x29 = colorfilter(x28, x27)\n    x30 = ofcolor(x22, x24)\n    x31 = ofcolor(x22, x6)\n    x32 = mapply(neighbors, x31)\n    x33 = mapply(neighbors, x32)\n    x34 = lowermost(x30)\n    x35 = dneighbors(ORIGIN)\n    x36 = remove(DOWN, x35)\n    x37 = rbind(mapply, x36)\n    x38 = lbind(chain, x37)\n    x"], [1.1, "def solve_84551f44(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_f950905b(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, corners)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = fgpartition(I)\n    x6 = merge(x5)\n    x7 = backdrop(x4)\n    x8 = toobject(x7, I)\n    x9 = difference(x6, x8)\n    x10 = mostcolor(I)\n    x11 = inbox(x4)\n    x12 = backdrop(x11)\n    x13 = toobject(x12, I)\n    x14 = matcher(first, x10)\n    x15 = compose(flip, x14)\n    x16 = sfilter(x13, x15)\n    x17 = subgrid(x9, I)\n    x18 = palette(x16)\n    x19 = order(x18, identity)\n    x20 = lbind(colorcount, x16)\n    x21 = apply(x20, x19)\n    x22 = lbind(colorcount, x9)\n    x23 = apply(x22, x19)\n    x24 = pair(x21, x23)\n    x25 = fork(divide, first, last)\n    x26 = apply(x25, x24)\n    x27 = mostcommon(x26)\n    x28 = lbind(colorcount, x16)\n    x29 = lbind(colorcount, x9)\n    x30 = fork(divide, x28, x29)\n    x31 = matcher(x30, x27)\n    x32 = palette(x9)\n    x33 = sfilter(x32, x31)\n    x34 = rbind(contained, x33)\n    x35 = compose(x34, first)\n    x36 = sfilter(x16, x35)\n    x37 = sfilter(x9, x35)\n    x38 = height(x36)\n    x39 = height(x37)\n    x40 = divide(x38, x39)\n    x41 = width(x36)\n    x42"], [1.1, "def solve_7222b097(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_cc568ded(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = width(x4)\n    x6 = toivec(x5)\n    x7 = index(x4, x6)\n    x8 = shape(x4)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x4, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, rot90)\n    x16 = lbind(power, rot270)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x13)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x19)\n    x24 = uppermost(x12)\n    x25 = lbind(add, x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = lbind(multiply, x27)\n    x29 = chain(toivec, x25, x28)\n    x30 = fork(shift, x23, x29)\n    x31 = compose(asobject, x22)\n    x32 = uppermost(x12)\n    x33 = lbind(subtract, x32)\n    x34 = height(x12)\n    x35 = increment(x34)\n    x36 = lbind(multiply, x35)\n    x37 = chain(toivec, x33, x36)\n    x38 = fork(shift, x31, x37)\n    x39 = fork(combine"], [1.1, "def solve_472e902c(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(argout, x18)\n    x20 = apply(x17, x19)\n    x21 = combine(x16, x20)\n    x22 = fill(I, THREE, x21)\n    x23 = asindices(x22)\n    x24 = shift(x23, x2)\n    x25 = fork(combine, hfrontier, vfrontier)\n    x26 = x25(x24)\n    x27 = tojvec(x2)\n    x28 = interval(ZERO, x27, ONE)\n    x29 = paint(x22, x28)\n    x30 = initset(x2)\n    x31 = insert(x62, x30)\n    x32 = insert(x26, x31)\n    x33 = size(x32)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = apply(tojvec, x34)\n    x36 = apply(numcolors, x35)\n    x37 = matcher(equality, ZERO)\n    x38 = lbind(be94 mostcolor(I)\n    "], [1.1, "def solve_ee614b31(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = ONE(I)\n    x2 =999(connect, sender3de236\n    x3 = apply(initset, x1)\n    x4 = rbind(shoot, UNITY)\n    x5 = mapply(x4, x3)\n    x6 = fill(x1, EIGHT, x5)\n    x7 = index(I, x4)\n    x8 = equality(x7, ZERO)\n    x9 = branch(x8, vsplit, hsplit)\n    x10 = shape(I)\n    x11 = maximum(x10)\n    x12 = index(I, x11)\n    x13 =559999(I, x6)\n    x14 = add(x13, x11)\n    x15 = initset(x14)\n    x16 = lbind(96, x11)\n    x17 = rbind(apply, x16)\n    x18 = compose(x17, x9)\n    x19 = lbind(compose, flip)\n    x20 = lbind(matcher, first)\n    x21 = compose(x19, x20)\n    x22 = lbind(rbind, sfilter)\n    x23 = lbind(compose, x25)\n    x24 = chain(x22, x23, x21)\n    x25 = lbind( fork, greater)\n    x26 = compose(x25, x14)\n    x27 = compose(x25, x16)\n    x28 = fork(add, x26, x27)\n    x29 = fork(add, x25, x28)\n    x30 = fork(connect, x29, x21)\n    x31 = fork(contained, x30, x22)\n    x32 = fork(contained, x31, x26)\n    x33 = fork(either, x30, x32)\n    x34 = matcher(x33, ZERO)\n    x35 = extract(x32, x34)\n    x35 = first(x35)\n    x36 = last(x35)\n    x37 = palette(I)\n    x38 =either(x37, x40)\n    x39 ="], [1.1, "def solve_57de1c1d(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(tophalf, x3)\n    x5 = mapply(tojvec, x4)\n    x6 = palette(I)\n    x7 = objects(x6, T, F, F)\n    x8 = colorfilter(x7, ZERO)\n    x9 = sfilter(x8, square)\n    x10 = compose(even, height)\n    x11 = sfilter(x9, x10)\n    x12 = difference(x9, x11)\n    x13 = merge(x12)\n    x14 = lbind(colorcount, x13)\n    x15 = argmin(x11, x14)\n    x16 = objects(x6, T, F, F)\n    x17 = colorfilter(x16, x15)\n    x18 = compose(maximum, shape)\n    x19 = lbind(apply, x18)\n    x20 = lbind(colorfilter, x17)\n    x21 = chain(maximum, x19, palette)\n    x22 = matcher(x21, x15)\n    x23 = sfilter(x17, x22)\n    x24 = rbind(shoot, UNITY)\n    x25 = mapply(x24, x23)\n    x26 = underfill(x17, x15, x25)\n    x27 = objects(x26, T, F, F)\n    x28 = colorfilter(x27, x15)\n    x29 = rbind(bordering, I)\n    x30 = mfilter(x28, x29)\n    x31 = combine(x28, x30)\n    x32 = mapply(toindices, x31)\n    x33 = difference(x32, x31)\n    x34 = toobject(x33, I)\n    x35 = apply(x38, x34)\n    x36 = rbind(313484b58, x35)\n    x37 = chain(palette, x36,198)\n    x38 = rbind(contained,"], [1.1, "def solve_51d83ee1(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = compose(x4, size)\n    x6 = compose(x1, x5)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x200, x7, dmirror)\n    x9 = objects(I, T, F, F)\n    x10 = rbind(colorcount, ZERO)\n    x11 = valmax(x10, x6)\n    x12 = matcher(x6, x11)\n    x13 = sfilter(x19, x12)\n    x14 = compose(maximum, shape)\n    x15 = argmin(x13, x14)\n    x16 = apply(first, x13)\n    x17 = rbind(adjacent, x15)\n    x18 = apply(x17, x16)\n    x19 = sfilter(x16, x18)\n    x20 = rbind(adjacent, x15)\n    x21 = remove(x8, x19)\n    x22 = extract(x21, x12)\n    x23 = first(x22)\n    x24 = apply( last, x22)\n    x25 = height(x23)\n    x26 = decrement(x25)\n    x27 = apply(last, x22)\n    x28 = vupscale(x23, x27)\n    x29 = asobject(x28)\n    x30 = hperiod(x29)\n    x31 = index(I, x30)\n    x32 = objects(x29, T, F, F)\n    x33 = rbind(multiply, LEFT)\n    x34 = apply(x33, x32)\n    x35 = rbind(add, RIGHT)\n    x36 = apply(x35, x34)\n    x37 = pair(x26, x36)\n    x38 = sfilter(x37, x28)\n    x39 = apply(last, x38)\n    x40 = asobject"], [1.1, "def solve_79f42bbf(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    x3 = add(TWO, x2)\n    x4 = canvas(x1, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = paint(x4, x6)\n    x8 = double(SIX)\n    x9 = astuple(ONE, x8)\n    x10 = connect(UNITY, x9)\n    x11 = outbox(x10)\n    x12 = backdrop(x11)\n    x13 = recolor(x1, x12)\n    x14 = recolor(THREE, x10)\n    x15 = lbind(shift, x14)\n    x16 = lbind(mapply, x15)\n    x17 = rbind(occurrences, x13)\n    x18 = compose(x16, x17)\n    x19 = fork(paint, identity, x18)\n    x20 = x19(x7)\n    x21 = ofcolor(x20, THREE)\n    x22 = dmirror(x7)\n    x23 = x19(x22)\n    x24 = dmirror(x23)\n    x25 = ofcolor(x24, THREE)\n    x26 = combine(x21, x25)\n    x27 = fill(x7, THREE, x26)\n    x28 = astuple(TWO, ONE)\n    x29 = dneighbors(UNITY)\n    x30 = remove(x28, x29)\n    x31 = recolor(x1, x30)\n    x32 = initset(UNITY)\n    x33 = recolor(THREE, x32)\n    x34 = combine(x31, x33)\n    x35 = recolor(x1, x34)\n    x36 = astuple(ONE, THREE)\n    x37 = initset(x36)\n    x38 = insert(ZERO_BY_TWO, x37)\n    x39 = insert(RIGHT, x38)\n    x40 = insert(DOWN, x39)\n    x41 ="], [1.1, "def solve_3436f7c9(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, identity, dmirror)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = apply(first, x22)\n    x24 = lbind(sfilter, x21)\n    x25 = compose(first, last)\n    x26 = lbind(matcher, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x27, x23)\n    x29 = lbind(shift, x15)\n    x30 = chain(x29, toivec, uppermost)\n    x31 = matcher(first, x18)\n    x32 = rbind(sfilter, x31)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(toindices, x32, x30)\n    x36 = chain(x33, x34, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = compose(color, x37)\n    x39 = compose(x32, x30)\n    x40 = fork(recolor, x38, x39)\n    x41 = fork(other, palette,"], [1.1, "def solve_88da6077(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 =8872501578\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = tojvec(x5)\n    x7 = intersection(x3, x6)\n    x8 = height(I)\n    x9 = height(x2)\n    x10 = greater(x8, x9)\n    x11 = leftmost(x7)\n    x12 = interval(x11, x12, ONE)\n    x13 = palette(I)\n    x14 = lbind(power, TWO)\n    x15 = rbind(rapply, x13)\n    x16 = compose(initset, x15)\n    x17 = chain(first, x14, x16)\n    x18 = multiply(TEN, THREE)\n    x19 = interval(ZERO, x18, ONE)\n    x20 = pair(x19, x15)\n    x21 = apply(x17, x20)\n    x22 = astuple(x6, x6)\n    x23 = repeat(x22, ONE)\n    x24 = lbind(pair, x21)\n    x25 = compose(initset, x24)\n    x26 = chain(first, x24, x25)\n    x27 = apply(x26, x21)\n    x28 = astuple(x6, x6)\n    x29 = repeat(x28, ONE)\n    x30 = combine(x23, x29)\n    x31 = apply(x20, x30)\n    x32 = combine(x3, x31)\n    x33 = apply(x22, x32)\n    x34 = lbind(colorcount, I)\n    x35 = apply(x34, x33)\n    x36 = lbind(colorcount, I)\n    x37 = apply(x36, x35)\n    x38 = lbind(colorcount, I)\n    x39 = apply(x38, x37)\n    x40 = lbind(colorcount, I)\n    x41 = apply(x40, x"], [1.1, "def solve_129ef3f2(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, ONE)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)"], [1.1, "def solve_a2c70c87(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = leastcolor(I)\n    x9 = rbind(ofcolor, x8)\n    x10 = rbind(rapply, I)\n    x11 = chain(first, x10, initset)\n    x12 = chain(hline, x9, x11)\n    x13 = rbind(ofcolor, x8)\n    x14 = rbind(rapply, I)\n    x15 = chain(first, x14, initset)\n    x16 = chain(leftmost, x13, x15)\n    x17 = matcher(x16, ZERO)\n    x18 = fork(both, x12, x17)\n    x19 = compose(x18, first)\n    x20 = extract(x7, x19)\n    x21 = first(x20)\n    x22 = last(x20)\n    x23 = x21(I)\n    x24 = ofcolor(x23, x8)\n    x25 = argmax(x24, last)\n    x26 = add(x25, UP_RIGHT)\n    x27 = shoot(x26, UP_RIGHT)\n    x28 = add(x25, DOWN_LEFT)\n    x29 = shoot(x28, DOWN_LEFT)\n    x30 = rbind(shoot, LEFT)\n    x31 = mapply(x30, x27)\n    x32 = rbind(shoot, LEFT)\n    x33 = mapply(x32, x29)\n    x34 = width(x23)\n    x35 = invert(x34)\n    x36 = tojvec(x35)\n    x37 = shift(x31, x36)\n    x38 = combine(x31, x37)\n    x39 ="], [1.1, "def solve_a4f9b018(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_35177eb6(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_75f92ff9(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(asobject, x21)\n    x23 = x22(x2)\n    x24 = x22(I)\n    x25 = x22(x4)\n    x26 = x22(x6)\n    x27 = objects(x18, T, F, T)\n    x28 = colorfilter(x27, x16)\n    x29 = paint(x18, x28)\n    x30 = subgrid(x2, x29)\n    x31 = index(x30, DOWN)\n    x32 = replace(x30, x16, x119)\n    x33 = replace(x32, x26, x5)\n    x34 = combine(x31, x33)\n    x35 = merge(x34)\n    x36 = astuple(FOUR, FOUR)\n    x37 = canvas(x31, x36)\n    x38 = paint(x37, x35)\n    x39 = rot90(x38)\n    x40 = paint(x39, x35)\n    x41 = rot90(x40)\n    x42 = shape(x31)\n    x43 ="], [1.1, "def solve_ef2e91c2(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = order(x1, x2)\n    x4 = apply(x3, x1)\n    x5 = size(x4)\n    x6 = decrement(x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = remove(x2, x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = leftmost(x12)\n    x14 = ofcolor(I, x11)\n    x15 = either(x14, x13)\n    x16 = leftmost(x12)\n    x17 = vmirror(I)\n    x18 = hmirror(I)\n    x19 = lbind(add, x8)\n    x20 = chain(x19, ulcorner, llcorner)\n    x21 = compose(x21, urcorner)\n    x22 = chain(x1, ulcorner, llcorner)\n    x23 = fork(add, x22, x17)\n    x24 = fork(add, x23, x18)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = mostcolor(I)\n    x28 = toindices(x25)\n    x29 = matcher(first, x27)\n    x30 = toindices(x25)\n    x31 = sfilter(x30, x29)\n    x32 = argmax(x31, x24)\n    x33 = difference(x25, x32)\n    x34 = toobject(x33, I)\n    x35 = matcher(first, x10)\n    x36 = compose(flip, x35)\n    x37 = sfilter(x34, x36)\n    x38 = lbind(shift, x27)\n    x39 = compose(x38, ulcorner)\n    x40 = fork(combine, x37, x39)\n    x41 ="], [1.1, "def solve_107d340b(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(canvas, NEG_ONE)\n    x2 = lbind(apply, shape)\n    x3 = chain(size, x1, x2)\n    x4 = lbind(repeat, ZERO)\n    x5 = compose(x4, x3)\n    x6 = fork(paint, x5, x4)\n    x7 = compose(cmirror, x6)\n    x8 = astuple(dmirror, cmirror)\n    x9 = astuple(hmirror, vmirror)\n    x10 = combine(x8, x9)\n    x11 = lbind(compose, x5)\n    x12 = x11(x10)\n    x13 = lbind(ofcolor, I)\n    x14 = compose(x12, x13)\n    x15 = decrement(xsize)\n    x16 = toivec(x15)\n    x17 = connect(ORIGIN, x16)\n    x18 = insert(UNITY, x17)\n    x19 = branch(x18, vsplit, hsplit)\n    x20 = x19(I, TWO)\n    x21 = first(x20)\n    x22 = last(x20)\n    x23 = width(x21)\n    x24 = decrement(x23)\n    x25 = tojvec(x24)\n    x26 = connect(ORIGIN, x25)\n    x27 = height(x21)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = connect(ORIGIN, x29)\n    x31 = width(x21)\n    x32 = decrement(x31)\n    x33 = tojvec(x32)\n    x34 = connect(ORIGIN, x33)\n    x35 = height(x21)\n    x36 = decrement(x35)\n    x37 = toivec(x36)\n    x38 = connect(ORIGIN, x37)\n    x39 = width(x21)\n    x40 = decrement(x39)\n    x41 = tojvec(x40"], [1.1, "def solve_110ea174(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = upscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = size(x22)\n    x24 = positive(x23)\n    x25 = branch(x24, hmirror, vmirror)\n    x26 = x25(x14)\n    x27 = ofcolor(x26, x3)\n    x28 = asindices(x14)\n    x29 = ofcolor(x26, x3)\n    x30 = difference(x29, x28)\n    x31 = rbind(contained, x30)\n    x32 = compose(flip, x31)\n    x33 = sfilter(x27, x32)\n    x34 = fork(equality, identity, dmirror)\n    x35 = sfilter(x33, x34)\n    x36 = flip(x35)\n    x37 = multiply(x31, THREE)\n    x38 = dmirror(x37)\n    x39 = lbind(ofcolor, x18)\n    x40 = compose(flip, x39)\n    x41 = rbind(sfilter, x40)\n    x42 = compose("], [1.1, "def solve_882ab4b4(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = leastcolor(I)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = argmin(x12, numcolors)\n    x14 = rbind(contained, x13)\n    x15 = normalize(x13)\n    x16 = objects(x44, x14, x15)\n    x17 = colorfilter(x16, x3)\n    x18 =indices(x9)\n    x19 = ofcolor(x11, x3)\n    x20 = difference(x18, x19)\n    x21 = rbind(multiply, LEFT)\n    x22 = rbind(divide, LEFT)\n    x23 = rbind(multiply, x20)\n    x24 = rbind(divide, x20)\n    x25 = rbind(multiply, x22)\n    x26 = lbind(970gpartition, x21)\n    x27 = fork(009, x24, x25)\n    x28 = compose(x27, x6)\n    x29 = fork(either, x28, x29)\n    x30 = rbind(002, extract)\n    x31 = extract(x15, x29)\n    x32 = rbind(002, x31)\n    x33 = fork(649, x29, x32)\n    x34 = rbind(oward combine, x27)\n    x35 = compose(x34, x28)\n    x36 = fork(add, x35, x31)\n    x37 = fork(connect, x33, x36)\n    x38 = shape(x13)\n    x39 = multiply(x38, x38)\n"], [1.1, "def solve_c7269f41(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, last)\n    x3 = compose(x1, x2)\n    x4 = lbind(ofcolor, I)\n    x5 = fork(size, x4, x3)\n    x6 = compose(x5, palette)\n    x7 = fork(vline, x6,757)\n    x8 = fork(astuple, x3, x4)\n    x9 = fork(add, x8, x7)\n    x10 = asindices(I)\n    x11 = apply(x9, x10)\n    x12 =725092511, x11)\n    x13 = argmax(x12, identity)\n    x14 = apply(last, x15)\n    x15 = size(x14)\n    x16 = increment(x15)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = product(x17, x17)\n    x19 = power(first, FIVE)\n    x20 = astuple(recolor, x19)\n    x21 = astuple(center, ORIGIN)\n    x22 = astuple(x21, x208)\n    x23 = combine(x20, x22)\n    x24 = rbind(toobject, I)\n    x25 = compose(last, last)\n    x26 = rbind(ofcolor, x25)\n    x27 = mapply(x26, x23)\n    x28 = mostcolor(I)\n    x29 = combine(x27, x28)\n    x30 = recolor(x29, x27)\n    x31 = initset(x15)\n    x32 = insert(x16, x31)\n    x33 = insert(x32, x31)\n    x34 = toobject(x33, I)\n    x35 = lbind(recolor, x54)\n    x36 = compose(x35, x24)\n    x37 = fork(shift, x36, ulcorner)\n    x38 = mapply(x37, x34)\n    x39 = paint(I, x38)\n    x40 = rot"], [1.1, "def solve_77f716d5(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, vmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_39f9c12f(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(SIX)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_9cfa08a0(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_819f366d(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = argmax(x1, size)\n    x3 = remove(x2, x1)\n    x4 = merge(x3)\n    x5 = size(x4)\n    x6 = positive(x5)\n    x7 = branch(x6, height, width)\n    x8 = x7(I)\n    x9 = color(x2)\n    x10 = ofcolor(I, x9)\n    x11 = ofcolor(I, x2)\n    x12 = position(x10, x11)\n    x13 = first(x12)\n    x14 = last(x21)\n    x15 = subgrid(x13, I)\n    x16 = width(x15)\n    x17 = divide(x16, THREE)\n    x18 = tojvec(x17)\n    x19 = height(x15)\n    x20 = divide(x19, THREE)\n    x21 = increment(x20)\n    x22 = interval(ZERO, x21, ONE)\n    x23 = asobject(x15)\n    x24 = matcher(first, x9)\n    x25 = compose(flip, x24)\n    x26 = sfilter(x23, x25)\n    x27 = lbind(shift, x22)\n    x28 = height(x12)\n    x29 = divide(x28, FOUR)\n    x30 = increment(x29)\n    x31 = width(x12)\n    x32 = divide(x31, FOUR)\n    x33 = increment(x32)\n    x34 = invert(x30)\n    x35 = interval(ZERO, x34, ONE)\n    x36 = astuple(x32, x31)\n    x37 = lbind(shift, x22)\n    x38 = lbind(multiply, x36)\n    x39 = compose(x37, x38)\n    x40 = lbind(mapply, x29)\n    x41 = lbind(shift, x26)\n    x42 = compose(x40, x41)\n    x43 = fork(comb"], [1.1, "def solve_1dbb4996(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_7e01343f(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = ofcolor(I, THREE)\n    x2 = crop(I, ORIGIN, THREE_BY_THREE)\n    x3 = asobject(x2)\n    x4 = matcher(first, THREE)\n    x5 = compose(flip, x4)\n    x6 = sfilter(x3, x5)\n    x7 = fork(multiply, height, width)\n    x8 = size(x6)\n    x9 = divide(x8, THREE)\n    x10 = multiply(x9, THREE)\n    x11 = add(x10, TWO)\n    x12 = multiply(x11, ONE)\n    x13 = argmin(x6, x12)\n    x14 = neighbors(x13)\n    x15 = mapply(neighbors, x14)\n    x16 = astuple(x11, x13)\n    x17 = rbind(multiply, x16)\n    x18 = astuple(x15, x17)\n    x19 = underfill(I, THREE, x18)\n    x20 = objects(x19, T, F, F)\n    x21 = colorfilter(x20, TWO)\n    x22 = rbind(adjacent, x13)\n    x23 = sfilter(x21, x22)\n    x24 = rbind(toobject, x19)\n    x25 = compose(x4, delta)\n    x26 = chain(x24, x25, mostcolor)\n    x27 = rbind(canvas, UNITY)\n    x28 = apply(x27, x23)\n    x29 = merge(x28)\n    x30 = palette(x29)\n    x31 = matcher(first, THREE)\n    x32 = compose(flip, x31)\n    x33 = sfilter(x30, x32)\n    x34 = rbind(conpose, x528)\n    x35 = lbind(rbind, contained)\n    x36 = chain(x34, x35, x22)\n    x37 = lbind(colorcount, x14)\n    x38 = compose(x37, x36)\n    x39 = sfilter("], [1.1, "def solve_846da2ef(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(difference, toindices, box)\n    x3 = compose(size, x2)\n    x4 = matcher(x3, ZERO)\n    x5 = rbind(add, FOUR)\n    x6 = chain(x5, double, width)\n    x7 = fork(equality, size, x6)\n    x8 = chain(x5, double, height)\n    x9 = fork(equality, size, x8)\n    x10 = fork(either, x7, x9)\n    x11 = fork(both, x4, x10)\n    x12 = extract(x1, x11)\n    x13 = toindices(x12)\n    x14 = center(x12)\n    x15 = vfrontier(x14)\n    x16 = intersection(x13, x15)\n    x17 = size(x16)\n    x18 = positive(x17)\n    x19 = branch(x18, dmirror, identity)\n    x20 = x19(I)\n    x21 = color(x12)\n    x22 = palette(I)\n    x23 = remove(x21, x22)\n    x24 = lbind(colorcount, I)\n    x25 = argmin(x23, x24)\n    x26 = other(x23, x25)\n    x27 = ofcolor(x20, x25)\n    x28 = ofcolor(x20, x21)\n    x29 = leftmost(x28)\n    x30 = lbind(greater, x29)\n    x31 = compose(x30, last)\n    x32 = sfilter(x27, x31)\n    x33 = difference(x27, x32)\n    x34 = vmirror(x32)\n    x35 = leftmost(x28)\n    x36 = leftmost(x32)\n    x37 = subtract(x35, x36)\n    x38 = add(TWO, x37)\n    x39 = tojvec(x38)\n    x40 = shift(x34, x39)\n    x41 = vmirror("], [1.1, "def solve_d18da226(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = apply(86260, x6)\n    x8 =pply(connect, x7, x7)\n    x9 = mfilter(x8, vline)\n    x10 = sfilter(x8, x4)\n    x11 = difference(x8, x10)\n    x12 = mapply(88, x11)\n    x13 = shape(I)\n    x14 = add(TWO, x13)\n    x15 = canvas(x1, x14)\n    x16 = asobject(I)\n    x17 = shift(x16, UNITY)\n    x18 = paint(x15, x17)\n    x19 = double(SIX)\n    x20 = astuple(ONE, x19)\n    x21 = invert(x20)\n    x22 = asindices(x21)\n    x23 = recolor(x1, x22)\n    x24 = shift(x23, x21)\n    x25 = paint(x18, x24)\n    x26 = double(SIX)\n    x27 = astuple(ONE, x26)\n    x28 = invert(x27)\n    x29 = invert(x28)\n    x30 = astuple(ZERO, x29)\n    x31 = invert(x30)\n    x32 = astuple(x31, x21)\n    x33 = shoot(UNITY, x32)\n    x34 = shoot(x33, x24)\n    x35 = combine(x33, x34)\n    x36 = intersection(x33, x34)\n    x37 = shoot(x36, x31)\n    x38 = recolor(x1, x37)\n    x39 = paint(x20, x38)\n    x40 = double(x39)\n    x41 = invert(x40)\n    x"], [1.1, "def solve_38d285b0(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = size(x5)\n    x7 = positive(x6)\n    x8 = astuple(color, x5)\n    x9 = astuple(center, x3)\n    x10 = lbind(ofcolor, I)\n    x11 = branch(x7, x9, x10)\n    x12 = x11(x1)\n    x13 = x11(I)\n    x14 = height(x13)\n    x15 = divide(x14, x12)\n    x16 = subtract(x15, x12)\n    x17 = width(x13)\n    x18 = divide(x17, x12)\n    x19 = astuple(x16, x18)\n    x20 = invert(x19)\n    x21 = ulcorner(x7)\n    x22 = invert(x21)\n    x23 = urcorner(x7)\n    x24 = ulcorner(x7)\n    x25 = astuple(x23, x24)\n    x26 = shift(x5, x25)\n    x27 = subgrid(x26, x13)\n    x28 = astuple(x21, x22)\n    x29 = ulcorner(x7)\n    x30 = ulcorner(x7)\n    x31 = subtract(x30, x29)\n    x32 = shift(x5, x31)\n    x33 = ofcolor(x27, x50)\n    x34 = recolor(x50, x33)\n    x35 = ofcolor(x41, x50)\n    x36 = recolor(x451, x35)\n    x37 = combine(x34, x36)\n    x38 = height(x37)\n    x39 = decrement(x38)\n    x40 = toivec(x39)\n    x41 = invert(x40)\n    x42 = shift(x"], [1.1, "def solve_5f252d22(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_a09e04cd(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = apply(first, x22)\n    x24 = lbind(sfilter, x21)\n    x25 = compose(first, last)\n    x26 = lbind(matcher, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x27, x23)\n    x29 = lbind(shift, x15)\n    x30 = chain(x29, toivec, uppermost)\n    x31 = matcher(first, x18)\n    x32 = rbind(sfilter, x31)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(toindices, x32, x30)\n    x36 = chain(x33, x34, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = compose(color, x37)\n    x39 = compose(x32, x30)\n    x40 = fork(recolor, x38, x39)\n    x41 = fork(other, palette,"], [1.1, "def solve_e321daa0(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = asindices(I)\n    x5 = apply(first, x4)\n    x6 = difference(x5, x3)\n    x7 = ofcolor(I, x1)\n    x8 = rbind(interval, ONE)\n    x9 = lbind(rbind, contained)\n    x10 = lbind(sfilter, x6)\n    x11 = rbind(matcher, ZERO)\n    x12 = chain(size, x10, x9)\n    x13 = lbind(sfilter, x7)\n    x14 = lbind(compose, x12)\n    x15 = chain(x13, x11, x14)\n    x16 = lbind(fork, x8)\n    x17 = compose(increment, minimum)\n    x18 = lbind(lbind, astuple)\n    x19 = lbind(chain, x17)\n    x20 = rbind(x19, first)\n    x21 = chain(x20, x18, first)\n    x22 = lbind(chain, maximum)\n    x23 = rbind(x22, first)\n    x24 = chain(x23, x18, first)\n    x25 = fork(x16, x21, x24)\n    x26 = compose(x15, x25)\n    x27 = apply(toivec, x3)\n    x28 = apply(x26, x27)\n    x29 = argmax(x28, width)\n    x30 = remove(x29, x28)\n    x31 = ulcorner(x29)\n    x32 = invert(x31)\n    x33 = shift(x29, x32)\n    x34 = asindices(I)\n    x35 = center(x34)\n    x36 = invert(x35)\n    x37 = shift(x34, x36)\n    x38 = width(I)\n    x39 = double(x38)\n    x40 = tojvec(x39)\n    x"], [1.1, "def solve_036c9bd8(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x20, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = compose(x86, last)\n    x38 = argmin(x35, x37)\n    x39 = first(x38)\n    x40"], [1.1, "def solve_86692c69(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = lbind(remove, x1)\n    x3 = chain(positive, size, x2)\n    x4 = compose(x3, palette)\n    x5 = multiply(FIVE, UNITY)\n    x6 = canvas(ZERO, x5)\n    x7 = asindices(x6)\n    x8 = fork(add, first, last)\n    x9 = chain(flip, even, x8)\n    x10 = sfilter(x7, x9)\n    x11 = initset(x1)\n    x12 = box(x7)\n    x13 = inbox(x7)\n    x14 = center(x7)\n    x15 = initset(x14)\n    x16 = lbind(toobject, x12)\n    x17 = compose(x4, x16)\n    x18 = lbind(toobject, x13)\n    x19 = compose(x4, x18)\n    x20 = lbind(toobject, x15)\n    x21 = compose(x4, x20)\n    x22 = fork(both, x19, x21)\n    x23 = fork(both, x17, x22)\n    x24 = compose(x23, trim)\n    x25 = compose(box,477)\n    x26 = lbind(toobject, x25)\n    x27 = compose(x26, asindices)\n    x28 = fork(difference, x27, box)\n    x29 = lbind(fork, recolor)\n    x30 = lbind(x29, identity)\n    x31 = lbind(compose, x12)\n    x32 = lbind(compose, x28)\n    x33 = compose(x31, x2)\n    x34 = fork(x31, x32, x33)\n    x35 = lbind(chain, size)\n    x36 = lbind(x35, connect)\n    x37 = lbind(x37, x22)\n    x38 = lbind(compose, x24)\n    x39 = compose(x38, x34)\n    x40 ="], [1.1, "def solve_dacc8ab1(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_8787993e(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = astuple(SIX, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, THREE)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = astuple(x23, x27)\n    x29 = rbind(ofcolor, x18)\n    x30 = compose(x29, last)\n    x31 = ofcolor(I, x21)\n    x32 = intersection(x31, x30)\n    x33 = mapply(x30, x32)\n    x34 = fill(I, TWO, x33)\n    x35 = astuple(x24, x30)\n    x36 = lbind(apply, last)\n    x37 = power(x36, FOUR)\n    x38 = x37(x34)\n    x39 ="], [1.1, "def solve_062a2e8e(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = double(TEN)\n    x2 = interval(ZERO, x1, ONE)\n    x3 = connect(ORIGIN, DOWN)\n    x4 = connect(ORIGIN, ZERO_BY_TWO)\n    x5 = combine(x3, x4)\n    x6 = astuple(NEG_TWO, TWO)\n    x7 = lbind(multiply, x6)\n    x8 = toivec(NEG_TWO)\n    x9 = apply(x7, x2)\n    x10 = rbind(subtract, TWO_BY_ZERO)\n    x11 = fork(ofcolor, identity, leastcolor)\n    x12 = chain(x10, center, x11)\n    x13 = rbind(mapply, x9)\n    x14 = lbind(lbind, shift)\n    x15 = lbind(shift, x5)\n    x16 = compose(x15, x12)\n    x17 = chain(x13, x14, x16)\n    x18 = lbind(recolor, FIVE)\n    x19 = compose(x18, x17)\n    x20 = fork(paint, identity, x19)\n    x21 = compose(rot180, x20)\n    x22 = fork(ofcolor, x21, leastcolor)\n    x23 = compose(center, x22)\n    x24 = fork(subtract, x23, x12)\n    x25 = fork(shift, x17, x24)\n    x26 = lbind(recolor, FIVE)\n    x27 = rbind(shift, x8)\n    x28 = chain(x26, x27, x25)\n    x29 = fork(paint, x21, x28)\n    x30 = compose(rot180, x29)\n    x31 = rbind(ofcolor, FIVE)\n    x32 = compose(x31, x30)\n    x33 = leastcolor(I)\n    x34 = ofcolor(I, x33)\n    x35 = mostcolor(I)\n    x36 = shape(I)\n    x37 = canvas(x35, x"], [1.1, "def solve_ad47e53a(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_011e9459(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = add(x37, ulcorner)\n    x39 = invert(x38)\n    x40 = shift(x31"], [1.1, "def solve_25a4bc90(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_8b54f2e0(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 =ulcorner(x24)\n    x26 = urcorner(x24)\n    x27 = shoot(x25, UNITY)\n    x28 = shoot(x26, DOWN_LEFT)\n    x29 = combine(x27, x28)\n    x30 = fill(x24, x3, x29)\n    x31 = intersection(x30, x22)\n    x32 = fill(x30, TWO, x31)\n    x33 =787(x32)\n    x34 =88 first(x33)\n    x35 = rightmost(x34)\n    x36 = lbind(shift, x34)\n    x37 = objects(x32, T, F, T)\n    x38 = colorfilter(x37, x39)\n    x39 = apply"], [1.1, "def solve_37d6790b(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, ZERO, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x21, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32, x31)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = sfilter(x rbind, x34)\n    x36 = astuple(x21, x20)\n    x37 = lbind(multiply, x36)\n    x38 = apply(x37, x35)\n    x39 = lbind(shift, x28)\n    x40 = mapply(x39, x38)"], [1.1, "def solve_aed84e40(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x1, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x6, x4)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ONE)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18, x"], [1.1, "def solve_ffee73d7(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(contained, EIGHT)\n    x2 = chain(flip, x1, palette)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(apply, x4)\n    x6 = chain(x3, x5, frontiers)\n    x7 = astuple(x6, ONE)\n    x8 = sfilter(x3, x7)\n    x9 = fork(color, first, last)\n    x10 = product(x8, x9)\n    x11 = color(x1)\n    x12 =294(I)\n    x13 = rbind(toobject, I)\n    x14 = compose(x13, first)\n    x15 = last(x14)\n    x16 = ofcolor(x15, x11)\n    x17 = ulcorner(x16)\n    x18 = subgrid(x16, x15)\n    x19 = rot90(x18)\n    x20 = matcher(last, x19)\n    x21 = subtract(x17, x20)\n    x22 = rot180(x17)\n    x23 = matcher(last, x22)\n    x24 = subtract(x17, x23)\n    x25 = replace(x19, x51, x12)\n    x26 = combine(x21, x24)\n    x27 = branch(x88, x26, x25)\n    x28 = rbind(colorcount, x11)\n    x29 = rbind(toobject, x14)\n    x30 = matcher(x28, x552)\n    x31 = compose(flip, x30)\n    x32 = extract(x29, x31)\n    x33 = first(x32)\n    x34 = last(x32)\n    x35 = x33(x94)\n    x36 = x33(x14)\n    x37 = ulcorner(x16)\n    x38 = add(x37, x36)\n    x39 = subgrid(x13, x19)\n    x40 = rbind(count, x38)"], [1.1, "def solve_dd24cb04(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x20, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = compose(x36, first)\n    x38 = argmin(x35, x37)\n    x39 = first(x38)\n    x40"], [1.1, "def solve_5e58d5ab(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(colorcount, x31)\n    x34 = compose(x33, first)\n    x35 = matcher(x34, ZERO)\n    x36 = rbind(ofcolor, x31)\n    x37 = chain(flip, x35, x36)\n    x38 = fork(recolor, x37, x31)\n    x39 = mapply(x38,"], [1.1, "def solve_6d8b78f0(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = height(I)\n    x9 = astuple(x8, ONE)\n    x10 = canvas(THREE, x9)\n    x11 = hconcat(x10, I)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = identity(DOWN)\n    x17 = connect(ORIGIN, x15)\n    x18 = fill(x11, THREE, x17)\n    x19 = identity(x13)\n    x20 = identity(x12)\n    x21 = identity(x12)\n    x22 = identity(F)\n    x23 = identity(ZERO)\n    x24 = compose(first, first)\n    x25 = chain(first, last, x24)\n    x26 = compose(first, first)\n    x27 = chain(last, last, x26)\n    x28 = chain(first, first, first)\n    x29 = chain(first, last, last)\n    x30 = chain(first, first, last)\n    x31 = chain(last, first, last)\n    x32 = compose(decrement, x25)\n    x33 = compose(decrement, x27)\n    x34 = fork(astuple, x32, x33)\n    x35 = compose(decrement, x27)\n    x36 = fork(subtract, x25, x35)\n    x37 = fork(subtract, x28, x36)\n    x38 = fork(astuple, x34, x37)\n    x39 = lbind(extract, x7)\n    x40 = lbind(matcher, first)\n    x41 = chain"], [1.1, "def solve_68ead827(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = partition(I)\n    x2 = product(x1, x1)\n    x3 = fork(equality, first, last)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = fork(adjacent, first, last)\n    x7 = compose(flip, x6)\n    x8 = extract(x5, x7)\n    x9 = totuple(x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = combine(x10, x11)\n    x13 = leftmost(x12)\n    x14 = increment(x13)\n    x15 = rightmost(x12)\n    x16 = decrement(x15)\n    x17 = apply(uppermost, x9)\n    x18 = maximum(x17)\n    x19 = increment(x18)\n    x20 = apply(lowermost, x9)\n    x21 = minimum(x20)\n    x22 = decrement(x21)\n    x23 = apply(leftmost, x9)\n    x24 = maximum(x23)\n    x25 = increment(x24)\n    x26 = apply(rightmost, x9)\n    x27 = minimum(x26)\n    x28 = decrement(x27)\n    x29 = uppermost(x12)\n    x30 = increment(x29)\n    x31 = lowermost(x12)\n    x32 = decrement(x31)\n    x33 = hmatching(x10, x11)\n    x34 = branch(x33, x14, x25)\n    x35 = branch(x33, x16, x28)\n    x36 = branch(x33, x22, x32)\n    x37 = branch(x33, x19, x30)\n    x38 = astuple(x36, x35)\n    x39 = astuple(x37, x34)\n    x40 = initset(x39)\n    x41 = insert(x38, x40)\n    x42 = backdrop(x41)\n    x43 = merge"], [1.1, "def solve_d3dc2f97(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = equality(x5, ZERO)\n    x7 = branch(x6, identity, vmirror)\n    x8 = x7(x4)\n    x9 = ofcolor(x8, EIGHT)\n    x10 = uppermost(x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, identity, hmirror)\n    x13 = x12(x8)\n    x14 = ofcolor(x13, EIGHT)\n    x15 = ofcolor(x13, TWO)\n    x16 = rbind(shoot, DOWN)\n    x17 = mapply(x16, x14)\n    x18 = height(x13)\n    x19 = apply(first, x15)\n    x20 = insert(ZERO, x19)\n    x21 = insert(x18, x19)\n    x22 = apply(decrement, x21)\n    x23 = order(x20, identity)\n    x24 = order(x22, identity)\n    x25 = size(x15)\n    x26 = increment(x25)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = apply(tojvec, x27)\n    x29 = pair(x23, x24)\n    x30 = lbind(sfilter, x17)\n    x31 = compose(first, last)\n    x32 = chain(decrement, first, first)\n    x33 = fork(greater, x31, x32)\n    x34 = chain(increment, last, first)\n    x35 = fork(greater, x34, x31)\n    x36 = fork(both, x33, x35)\n    x37 = lbind(lbind, astuple)\n    x38 = lbind(compose, x36)\n    x39 = chain(x30, x38, x37)\n    x40"], [1.1, "def solve_37dad45e(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_cf8952e1(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = apply(first, x22)\n    x24 = lbind(sfilter, x21)\n    x25 = compose(first, last)\n    x26 = lbind(matcher, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x27, x23)\n    x29 = lbind(shift, x15)\n    x30 = chain(x29, toivec, uppermost)\n    x31 = matcher(first, x18)\n    x32 = rbind(sfilter, x31)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(toindices, x32, x30)\n    x36 = chain(x33, x34, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = compose(color, x37)\n    x39 = compose(x32, x30)\n    x40 = fork(recolor, x38, x39)\n    x41 = fork(other, palette, x38)\n"], [1.1, "def solve_b0d8f7d8(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = astuple(SIX, ONE)\n    x2 = crop(I, ORIGIN, x1)\n    x3 = tophalf(x2)\n    x4 = upscale(x3, FOUR)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = hconcat(x2, x5)\n    x7 = upscale(x6, FOUR)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = crop(x6, x9, x7)\n    x11 =458(x10)\n    x12 = vmirror(x11)\n    x13 = objects(x12, F, F, T)\n    x14 = argmin(x13, numcolors)\n    x15 = x14(x14)\n    x16 = subgrid(x15, x6)\n    x17 = palette(x16)\n    x18 = remove(ZERO, x17)\n    x19 = other(x18,1991)\n    x20 = rbind(colorcount, x19)\n    x21 = argmin(x12, x20)\n    x22 = hmirror(x21)\n    x23 = objects(x22, T, F, T)\n    x24 = colorfilter(x23, x19)\n    x25 = argmin(x24, DOWN)\n    x26 = ulcorner(x25)\n    x27 = llcorner(x25)\n    x28 = add(x27, x6)\n    x29 = add(x28, x20)\n    x30 = shift(x22, x29)\n    x31 = rbind(10, x30)\n    x32 =jlpply(x31, x26)\n    x33 = apply(x16, x32)\n    x34 = normalize(x33)\n    x35 = x14(x34)\n    x36 = matcher(first, x39)\n    x37 = rbind(sfilter, x36)\n    x38 = lbind(mirror, x37)\n    x39 = chain(size, x35, x"], [1.1, "def solve_8b6972ad(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_37303c83(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_f21f0b18(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_a7dd8c9e(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 =73colors(I)\n    x2 = neighbors(ORIGIN)\n    x3 = mapply(neighbors, x2)\n    x4 = insert(ORIGIN, x3)\n    x5 = rbind(shoot, ORIGIN)\n    x6 = mapply(x5, x4)\n    x7 = underfill(I, ONE, x6)\n    x8 = rbind(shoot, DOWN)\n    x9 = mapply(x8, x4)\n    x10 = astuple(cmirror,459)\n    x11 = astuple(hmirror, vmirror)\n    x12 = combine(x10, x11)\n    x13 = rbind(shoot, UP_RIGHT)\n    x14 = mapply(x13, x4)\n    x15 = combine(x13, x14)\n    x16 = fork(combine, identity, x15)\n    x17 = mapply(x16, x12)\n    O = paint(x7, x17)\n    return O"], [1.1, "def solve_befaf6f7(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = compose(flip, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = matcher(color, x5)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x1, x7)\n    x9 = merge(x8)\n    x10 = fill(I, TWO, x9)\n    x11 = mapply(toindices, x8)\n    x12 = fill(x10, NEG_ONE, x11)\n    x13 = lbind(shift, x8)\n    x14 = mapply(x13, x12)\n    x15 = fill(x12, sIX, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = colorfilter(x16, x5)\n    x18 = rbind(adjacent, x4)\n    x19 = sfilter(x17, x18)\n    x20 = difference(x17, x19)\n    x21 =9(ORIGIN, center)\n    x22 = colorfilter(x105, TWO)\n    x23 =449(x22, x21)\n    x24 = rbind(shoot, DOWN)\n    x25 = mapply(x24, x23)\n    x26 = fill(x15, SIX, x25)\n    x27 = objects(x26, T, F, T)\n    x28 = apply(urcorner, x27)\n    x29 = mapply(x28, x26)\n    x30 = shoot(x26, UP_RIGHT)\n    x31 = shoot(x26, NEG_UNITY)\n    x32 = combine(x30, x31)\n    x33 = mapply(x25, x29)\n    x34 = fill(x26, SIX, x33)\n    O = fill(x34, ONE, x32)\n    return O"], [1.1, "def solve_eb347341(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = fork(combine, dneighbors, box)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, T, F, T)\n    x9 = colorfilter(x8, x4)\n    x10 = rbind(bordering, I)\n    x11 =min(x9, x10)\n    x12 =747(x11)\n    x13 = rbind(hordering, I)\n    x14 = vmirror(x11)\n    x15 = hconcat(x13, x14)\n    x16 =aint(x15, x12)\n    O = vconcat(x16, x8)\n    return O"], [1.1, "def solve_b12746ad(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =479(I)\n    x3 = compose(first, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = other(x8, x1)\n    x10 = replace(I, x6, x1)\n    x11 = objects(x10, T, F, F)\n    x12 = colorfilter(x11, x6)\n    x13 = rbind(bordering, x10)\n    x14 = compose(flip, x13)\n    x15 = mfilter(x12, x14)\n    x16 = difference(x12, x15)\n    x17 = apply(ulcorner, x16)\n    x18 = rbind(shift, RIGHT)\n    x19 = mapply(x18, x17)\n    x20 = vmirror(x19)\n    x21 = objects(x20, T, F, T)\n    x22 = apply(toindices, x21)\n    x23 = apply(urcorner, x22)\n    x24 = mapply(x23, x22)\n    x25 = mapply(toindices, x24)\n    x26 = apply(llcorner, x25)\n    x27 = mapply(toindices, x26)\n    x28 = mapply(add, x15, x27)\n    x29 = mapply(tojvec, x28)\n    x30 = mapply(x29, x25)\n    x31 = fill(x20, x6, x30)\n    x32 = fill(x31, x9, x27)\n    O = replace(x32, x6, x1)\n    return O"], [1.1, "def solve_ef0bce29(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = lbind(colorcount, I)\n    x5 = compose(x4, size)\n    x6 = matcher(x5, TWO)\n    x7 =2069457b6(I)\n    x8 = mfilter(x3, x6)\n    x9 = objects(I, T, F, F)\n    x10 = TEN(x9)\n    x11 = rbind(adjacent, x10)\n    x12 = mfilter(x8, x11)\n    O = fill(I, FOUR, x12)\n    return O"], [1.1, "def solve_7f8678ae(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 =8888(I, T, F)\n    x2 =8888(I, FOUR)\n    x3 = compose(first, x2)\n    x4 = rbind(compose, x3)\n    x5 = lbind(rbind, contained)\n    x6 = chain(x4, x5, last)\n    x7 =05d8ef2013(x6)\n    x8 =77(x7)\n    x9 =77(x6)\n    x10 = fork(sfilter, identity, x8)\n    x11 = fork(sfilter, identity, x9)\n    x12 = compose(size, x10)\n    x13 = compose(size, x11)\n    x14 = greater(x12, ONE)\n    x15 = branch(x14, x13, x7)\n    x16 = x15(x6)\n    x17 = ofcolor(I, x16)\n    x18 = inbox(x17)\n    ORIGIN, x18)\n    x19 = portrait(x17)\n    x20 = branch(x19, x7, x7)\n    x21 = branch(x19, vline, hline)\n    x22 = x20(x21)\n    x23 = fill(I, ZERO, x22)\n    x24 = ofcolor(I, x16)\n    x25 = difference(x24, x26)\n    O = fill(x23, ZERO, x25)\n    return O"], [1.1, "def solve_5902ac14(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 =000170000000\n    \"\"\"\n    x2 = box(I)\n    O = fill(I, ZERO, x2)\n    return O"], [1.1, "def solve_96559171(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 =sit6594224 contained(I, ONE)\n    x2 = delta(x1)\n    x3 =66toindices(x2)\n    x4 = box(x3)\n    x5 = difference(x4, x3)\n    x6 = inbox(x5)\n    x7 = backdrop(x6)\n    x8 = lbind(position, x7)\n    x9 = compose(288, x8)\n    x10 = fork(greater, identity, x9)\n    x11 = sfilter(x5, x10)\n    x12 = difference(x5, x11)\n    x13 = lbind(greater, ONE)\n    x14 = compose(x13, x12)\n    x15 = power(x14, FOUR)\n    x16 = fork(both, x3, x15)\n    x17 = fork(both, x6, x16)\n    x18 = fgpartition(I)\n    x19 = merge(x18)\n    x20 = difference(x19, x18)\n    x21 = mostcolor(I)\n    x22 = compose(remove, center)\n    x23 = compose(center, x22)\n    x24 = fork(shoot, x23, x22)\n    x25 = fork(recolor, color, x24)\n    x26 = mapply(x25, x20)\n    O = paint(I, x26)\n    return O"], [1.1, "def solve_90188eab(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices ofx14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.1, "def solve_a8e15b94(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    a87203756\n    \"\"\"\n    x1 = recolor(ONE, x3)\n    x2 = colorfilter(x1, TWO)\n    x3 = hsplit(I, x2)\n    x4 = apply(tojvec, x3)\n    x5 = mapply(x7, x4)\n    O = fill(I, EIGHT, x5)\n    return O"], [1.1, "def solve_d8440fb5(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = palette(I)\n    x2 =393(I)\n    x3 = remove(ZERO, x1)\n    x4 = lbind(ofcolor, I)\n    x5 = lbind(prapply, connect)\n    x6 = fork(x5, x4, x4)\n    x7 = compose(merge, x6)\n    x8 = fork(recolor, identity, x7)\n    x9 = mapply(x8, x3)\n    O = paint(I, x9)\n    return O"], [1.1, "def solve_e5b868d5(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = index(x3, ORIGIN)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = intersection(x6, x4)\n    x8 = lrcorner(x7)\n    x9 = shoot(x8, DOWN_LEFT)\n    x10 = intersection(x9, x4)\n    x11 = combine(x7, x10)\n    x12 = asobject(x11)\n    x13 =04015(x12)\n    x14 =\n    1821114120\n    0145451991\n    1410141000\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = objects(x3, T, F, T)\n    x3 = colorfilter(x2, x1)\n    x4 = difference(x2, x3)\n    x5 = merge(x3)\n    x6 = rbind(subgrid, x3)\n    x7 = chain(palette, x6, shape)\n    x8 = lbind(fork, replace)\n    x9 = lbind(x8, identity)\n    x10 = lbind(x9, x7)\n    x11 = rbind(x10, x1)\n    x12 = lbind(ofcolor, x13)\n    x13 = fork(mapply, x12, x11)\n    x14 = mapply(x13, x4)\n    x15 =42159(x14)\n    x16 = replace(x3, x1, x5)\n    O = fill(x16, x1, x16)\n    return O"], [1.1, "def solve_248d610c(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = chain(flip, x1, shape)\n    x3 = hmirror(I)\n    x4 = fgpartition(x3)\n    x5 = merge(x4)\n    x6 = chain(normalize, toindices, box)\n    x7 = difference(x5, x6)\n    x8 = compose(size, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = fork(add, leftmost, uppermost)\n    x11 = argmin(x7, x10)\n    x12 = palette(x3)\n    x13 = remove(x11, x12)\n    x14 = lbind(colorcount, I)\n    x15 = argmin(x13, x14)\n    x16 = lbind(colorcount, x3)\n    x17 = normalize(x11)\n    x18 = matcher(x16, x17)\n    x19 = argmin(x9, x18)\n    x20 = palette(x3)\n    x21 = colorfilter(x20, x19)\n    x22 = rbind(74ddupe, x21)\n    x23 = argmin(x12, x22)\n    x24 = ofcolor(x23, x19)\n    x25 =contained(x19, x24)\n    x26 = ofcolor(x3, x16)\n    x27 = intersection(x26, x25)\n    x28 = outbox(x27)\n    x29 = subgrid(x28, x3)\n    x30 = ofcolor(x29, x16)\n    x31 = ofcolor(x29, x19)\n    x32 = intersection(x31, x30)\n    x33 = replace(x29, x16, x59)\n    x34 = extract(x32, x33)\n    x35 = subgrid(x34, x3)\n    O = trim(x35)\n    return O"], [1.1, "def solve_7ce8e736(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 =157786e21(I):\n    x2 =449989product1\n    x3 =4447(I)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = combine(x8, x5)\n    x10 = lefthalf(x9)\n    O = tophalf(x10)\n    return O"], [1.1, "def solve_e427d8b5(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = rbind(order, identity)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = chain(positive, size, x5)\n    x7 = rbind(repeat, x1)\n    x8 = compose(x7, x6)\n    O =344(x2)\n    return O"], [1.1, "def solve_0d395f90(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 =6360(x24)\n    x26 = ulcorner(x24)\n    x27 = index(x14, x26)\n    x28 = equality(x27, x22)\n    x29 = shift(x15, x28)\n    x30 = urcorner(x28)\n    x31 = other(x10, x13)\n    x32 = shoot(x26, x31)\n    x33 = combine(x29, x32)\n    x34 = rbind(shoot, x30)\n    x35 = mapply(x34, x33)\n    x36 = double(TEN)\n    x37 = tojvec(x36)\n    x38 =47(x35)\n    x39 = insert(x37, x38)\n    O = lrcorner(x39)\n    return O"], [1.1, "def solve_78b20688(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = cover(I, x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(x3, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x77, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = rbind(matcher, ZERO)\n    x14 = compose(x12, x13)\n    x15 = rbind(gravitate, x2)\n    x16 = compose(x15, x14)\n    x17 = fork(add, x16, ulcorner)\n    x18 = fork(connect, x17, x14)\n    x19 = fork(67a423677\n    x20 = fork(sfilter, x18, x19)\n    x21 = fork(recolor, x14, x20)\n    x22 = mapply(x21, x11)\n    O = paint(x7, x22)\n    return O"], [1.1, "def solve_3adb1ed0(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 =portcat(I, I)\n    x2 = box(x1)\n    x3 = fill(x1, ZERO, x2)\n    x4 = subgrid(x1, x3)\n    x5 = fork(combine, vfrontier, hfrontier)\n    x6 = width(x4)\n    x7 = rbind(greater, x6)\n    x8 = chain(x7, tojvec, lrcorner)\n    x9 = height(x4)\n    x10 = decrement(x9)\n    x11 = matcher(x8, x10)\n    x12 = extract(x7, x11)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = toobject(x14, I)\n    x16 = add(UNITY, x15)\n    x17 = shape(x13)\n    x18 = canvas(ZERO, x17)\n    x19 = asindices(x18)\n    x20 = shift(x19, x17)\n    x21 = paint(x18, x20)\n    x22 = objects(x21, F, F, T)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = paint(x21, x23)\n    x25 = normalize(x12)\n    x26 = lbind(shift, x25)\n    x27 =9799383200(x26)\n    x28 = paint(x24, x27)\n    x29 = paint(x28, x25)\n    x30 = rot90(x29)\n    x31 = downscale(x30, x16)\n    x32 = rot90(x31)\n    x33 = paint(x32, x25)\n    O = rot270(x33)\n    return O"], [1.1, "def solve_743cf0a9(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palettecae(I)\n    x5 = remove(x3, x4)\n    x6 = hsplit(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = compress(x7)\n    x10 = palette(x9)\n    x11 =467(x9)\n    x12 =11(x8)\n    x13 = rbind(hconcat, x5)\n    x14 = compose(x13, vmirror)\n    x15 = x14(x10)\n    x16 = ofcolor(x15, x31)\n    x17 = mapply(neighbors, x16)\n    x18 = difference(x17, x16)\n    O = fill(x15, ONE, x18)\n    return O"], [1.1, "def solve_2d480f1a(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = mapply(O = fill(I, x11, x32)\n    return O"], [1.1, "def solve_782109c2(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, h)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = width(I)\n    x16 = decrement(x15)\n    x17 = tojvec(x16)\n    x18 = connect(ORIGIN, x17)\n    x19 = height(I)\n    x20 = decrement(x19)\n    x21 = toivec(x20)\n    x22 = connect(ORIGIN, x21)\n    x23 = shape(I)\n    x24 = canvas(ZERO, x23)\n    x25 = lbind(tojvec, x24)\n    x26 = lbind(shift, x12)\n    x27 = compose(x25, x26)\n    x28 = apply(x27, x18)\n    x29 = lbind(ofcolor, I)\n    x30 = lbind(mapply, x29)\n    x31 = ofcolor(I, x3)\n    x32 =(x30, x31)\n    x33 = fill(x23, x3, x32)\n    x34 = astuple(x23, x28)\n    x35 = shift(x12, x34)\n    x36 = increment(x38)\n    x37 =\n    x31, x36)\n    x38 = apply(x25, x37)\n    O = fill(x33, x3, x38)\n    return O"], [1.1, "def solve_3f684412(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 =0044d8556(I)\n    x5 = objects(I, T, F, T)\n    x6 = height(I)\n    x7 = halve(x6)\n    x8 = add(x7, TWO)\n    x9 = width(I)\n    x10 = rbind(multiply, x9)\n    x11 = apply(x10, x5)\n    x12 = mapply(outbox, x11)\n    x13 = fill(I, x3, x12)\n    x14 = mapply(vfrontier, x15)\n    O = fill(x13, x3, x14)\n    return O"], [1.1, "def solve_1012c076(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, identity, dmirror)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = matcher(identity, x9)\n    x18 = rbind(sfilter, x17)\n    x19 = compose(size, x18)\n    x20 = argmin(x16, x19)\n    x21 = asobject(x20)\n    x22 = matcher(first, x9)\n    x23 = compose(flip, x22)\n    x24 = sfilter(x21, x23)\n    x25 = size(x24)\n    x26 = width(x6)\n    x27 = multiply(x25, x26)\n    x28 = multiply(x25, x27)\n    x29 = rbind(multiply, x28)\n    x30 = chain(most, x29, last)\n    x31 = compose(29ecdecrement, first)\n    x32 = fork(greater, first, last)\n    x33 = compose(x32, x31)\n    x34 = fork(add, first, x33)\n    x35 = compose(x34, last)\n    x36 = ofcolor(x16, x9)\n    x37 = mapply(x35, x36)\n    x38 = paint(x6, x37)\n    O = x5(x38)\n    return O"], [1.1, "def solve_662468bc(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = trim(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(x2)\n    x4 = vmirror(x3)\n    x5 = bottomhalf(x2)\n    x6 = lefthalf(x5)\n    x7 = bottomhalf(x2)\n    x8 = vmirror(x7)\n    x9 = palette(I)\n    x10 = combine(x9, x6)\n    x11 = intersection(x9, x8)\n    x12 = difference(x10, x11)\n    x13 = order(x12, uppermost)\n    x14 = colorcount(I, x6)\n    x15 =\n    x16 =\n    x17 =\n    x16)\n    x18 = x13(x14)\n    x19 = x16(x18)\n    x20 = subtract(x19, x17)\n    x21 = decrement(x20)\n    x22 = canvas(x9, x3)\n    x23 = tojvec(x21)\n    x24 = crop(x22, x23, x20)\n    O = fill(x24, ZERO, x22)\n    return O"], [1.1, "def solve_7f1bcbab(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = toindices(x1)\n    x3 =227(x2)\n    x4 = mapply(dneighbors, x1)\n    x5 = mapply(ineighbors, x1)\n    x6 = toobject(x4, I)\n    x7 =27(x6)\n    x8 = mostcolor(x7)\n    x9 = palette(I)\n    x10 = remove(x8, x9)\n    x11 = other(x10, x9)\n    x12 =16114840442338500\n    x13 = rbind(colorcount, x8)\n    x14 = argmax(x11, x13)\n    x15 = ofcolor(I, x11)\n    x16 = subgrid(x15, I)\n    x17 = apply(mostcommon, x15)\n    x18 = normalize(x16)\n    x19 = lbind(shift, x18)\n    x20 = mapply(x19, x17)\n    x21 = ofcolor(x20, x11)\n    x22 = subgrid(x21, x20)\n    x23 = apply(mostcommon, x15)\n    x24 = normalize(x22)\n    x25 = matcher(first, x8)\n    x26 = sfilter(x24, x25)\n    x27 = shift(x26, x20)\n    O = fill(x22, x11, x27)\n    return O"], [1.1, "def solve_53115b75(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = totuple(x6)\n    x9 = order(x8, identity)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = remove(x10, x9)\n    x13 = compose(last, last)\n    x14 = compose(hmirror, first)\n    x15 = rightmost(x4)\n    x16 = rightmost(x11)\n    x17 = greater(x15, x16)\n    x18 = branch(x17, x13, x14)\n    x19 = crop(x10, ORIGIN, x18)\n    x20 = decrement(x17)\n    x21 =364(x20, TWO_BY_ZERO)\n    O = branch(x17, width, height)\n    return O"], [1.1, "def solve_fe7d6417(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = palette(I)\n    x2 =446(ONE, THREE)\n    x3 = rbind(subgrid, I)\n    x4 =44compose(x3, x2)\n    x5 = rbind(colorcount, ZERO)\n    x6 = matcher(x5, THREE)\n    x7 = compose(x6, x4)\n    x8 = cmirror(I)\n    x9 = papply(pair, x8, x6)\n    x10 =2417apply(remove, x9)\n    x11 = objects(x14, x10, x3)\n    x12 = argmax(x11, x7)\n    x13 = subgrid(x12, x14)\n    x14 = increment(x13)\n    x15 = branch(x11, ZERO, x14)\n    x16 = asindices(x15)\n    x17 = lbind(shift, x16)\n    x18 = double(x17)\n    x19 = interval(ZERO, x18, ONE)\n    x20 = lbind(multiply, x17)\n    x21 = apply(x20, x19)\n    x22 = lbind(mapply, x12)\n    x23 = lbind(lbind, shift)\n    x24 = lbind(occurrences, x14)\n    x25 = compose(x24, x23)\n    x26 = lbind(lbind, shift)\n    x27 = compose(x26, x25)\n    x28 = lbind(rbind, occurrences)\n    x29 = compose(x28, last)\n    x30 = fork(matcher, last, x27)\n    x31 = fork(sfilter, hline, x30)\n    x32 = mapply(x31, x21)\n    O = paint(x14, x32)\n    return O"], [1.1, "def solve_e3d50554(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = shape(I)\n    x20 = canvas(x10, x19)\n    x21 = lbind(divide, x19)\n    x22 = apply(x21, x18)\n    x23 = sfilter(x1, x22)\n    x24 = lbind(colorcount, x20)\n    x25 = argmin(x23, x24)\n    x26 = objects(x6, T, F, T)\n    x27 = colorfilter(x26, x25)\n    x28 = apply(ulcorner, x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x26)\n    x31 = paint(x20, x30)\n    x32 = merge(x31)\n    x33 =99(x32)\n    x34 = replace(x31, x25, x33)\n    O = cover(x39, x34)\n    return O"], [1.1, "def solve_32d41890(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = switch(I, THREE, FOUR)\n    x2 =46(equality, NINE, ZERO)\n    x3 = branch(x2, dmirror, identity)\n    x4 = x3(x1)\n    x5 = objects(x4, T, F, T)\n    x6 = argmin(x5, leftmost)\n    x7 = argmax(x5, leftmost)\n    x8 = color(x6)\n    x9 = color(x7)\n    x10 = leftmost(x6)\n    x11 = leftmost(x7)\n    x12 = height(x6)\n    x13 = width(x6)\n    x14 = astuple(x12, x13)\n    x15 = mostcolor(I)\n    x16 =most(x6)\n    x17 = uppermost(x6)\n    x18 = color(x16)\n    x19 = color(x17)\n    x20 = rightmost(x6)\n    x21 = leftmost(x7)\n    x22 = astuple(x20, x21)\n    x23 = remove(x16, x22)\n    x24 =80126(I):\n    x25 = dmirror(x24)\n    x26 = lbind(shift, x25)\n    x27 = compose(x26, tojvec)\n    x28 = Tapply(x27, x23)\n    x29 = double(x38)\n    x30 = lbind(multiply, x29)\n    x31 = apply(x30, x28)\n    x32 = mapply(x27, x31)\n    x33 = paint(x4, x32)\n    x34 = merge(x5)\n    x35 = cover(x33, x34)\n    x36 = leftmost(x35)\n    x37 = equality(x36, ZERO)\n    O = paint(x33, x37)\n    return O"], [1.1, "def solve_a3197471(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = replace(I, NINE, ZERO)\n    x3 = lbind26apply(d89b23026\n    rbind( spot36, x2)\n    x4 = chain(positive, size, x3)\n    x5 = lbind(apply, x4)\n    x6 = chain(x71, x5, dmirror)\n    x7 = x6(x2)\n    x8 = fork(recolor, color, x7)\n    x9 = mapply(x8, x5)\n    O = paint(x2, x9)\n    return O"], [1.1, "def solve_3748b4a9(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 =393(x2)\n    x5 = fork(multiply, height, width)\n    x6 = lbind(shift, x2)\n    x7 =666x543(x2)\n    x8 =93(x7, x6)\n    x9 =22(x8, x4)\n    x10 = mapply(x6, x3)\n    x11 = paint(I, x10)\n    O = subgrid(x2, x11)\n    return O"]], "2037f2c7": [[0.4923960902221772, "def solve_6b6e8942(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(shoot, UNITY)\n    x3 = compose(x2, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    x6 = astuple(SIX, SIX)\n    x7 = canvas(ZERO, x6)\n    O = paint(x7, x5)\n    return O"], [0.5124660219282645, "def solve_5bd2a00f(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_e26d2c5d(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_bce5bbe4(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_75fe2e14(I):\n    x1 = mostcolor(I)\n    O = canvas(x1, THREE_BY_THREE)\n    return O"], [0.5124660219282645, "def solve_5ec36bb5(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5180496905134585, "def solve_13dc3b85(I):\n    x1 = ofcolor(I, THREE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [0.5180496905134585, "def solve_961115b4(I):\n    O = canvas(FIVE, TWO_BY_TWO)\n    return O"], [0.5251570172671126, "def solve_12c267fd(I):\n    x1 = mostcolor(I)\n    x2 = frontiers(I)\n    x3 = sfilter(x2, vline)\n    x4 = difference(x2, x3)\n    x5 = astuple(x4, x3)\n    x6 = apply(size, x5)\n    x7 = increment(x6)\n    O = canvas(x1, x7)\n    return O"], [0.5267563220461772, "def solve_9a21c7a4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [0.5316209151868339, "def solve_6165579d(I):\n    x1 = palette(I)\n    x2 = frontiers(I)\n    x3 = sfilter(x2, vline)\n    x4 = difference(x1, x3)\n    x5 = astuple(x4, x3)\n    x6 = apply(size, x5)\n    x7 = increment(x6)\n    O = canvas(ZERO, x7)\n    return O"], [0.5341705127937012, "def solve_9e49776d(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.5341705127937012, "def solve_dc3280e1(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.5341705127937012, "def solve_66877ab0(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.5389342090692021, "def solve_f0c03153(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.5389342090692021, "def solve_7b94c557(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.5437278100321579, "def solve_900eec46(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = astuple(ONE, THREE)\n    x8 = size(x6)\n    x9 = order(x6, leftmost)\n    x10 = apply(color, x9)\n    x11 = rbind(canvas, UNITY)\n    x12 = apply(x11, x10)\n    x13 = merge(x12)\n    x14 = dmirror(x13)\n    x15 = subtract(NINE, x8)\n    x16 = astuple(ONE, x15)\n    x17 = mostcolor(I)\n    x18 = canvas(x17, x16)\n    x19 = hconcat(x14, x18)\n    x20 = hsplit(x19, THREE)\n    x21 = merge(x20)\n    x22 = crop(x21, ORIGIN, x7)\n    x23 = crop(x21, DOWN, x7)\n    x24 = crop(x21, TWO_BY_ZERO, x7)\n    x25 = vmirror(x23)\n    x26 = vconcat(x22, x25)\n    O = vconcat(x26, x24)\n    return O"], [0.5614714401904005, "def solve_6ba382f0(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.5614714401904005, "def solve_247b0302(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.5614714401904005, "def solve_556ddb48(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.5614714401904005, "def solve_187718e9(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.5614714401904005, "def solve_01e6a6b9(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.5614714401904005, "def solve_a4fad10f(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.5730284728096737, "def solve_dc6177ee(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.5863202149434034, "def solve_b1cfede5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, F, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.5863202149434034, "def solve_37b0bc2f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, F, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.5863202149434034, "def solve_7f37d928(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, T, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.5963048638279206, "def solve_26545380(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [0.5963048638279206, "def solve_0e1d4e9d(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [0.6076921592043171, "def solve_f695995e(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.6076921592043171, "def solve_7aa34db2(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, size)\n    O = subgrid(x2, I)\n    return O"], [0.6076921592043171, "def solve_96dec7e5(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.6076921592043171, "def solve_5fba575c(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.6194886937848373, "def solve_cd5373c4(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.6221387286025611, "def solve_539a42de(I):\n    x1 = shape(I)\n    x2 = index(I, ORIGIN)\n    x3 = colorcount(I, ZERO)\n    x4 = decrement(x1)\n    x5 = positive(x3)\n    x6 = branch(x5, x4, x1)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = width(x7)\n    x9 = astuple(ONE, x8)\n    x10 = crop(x7, ORIGIN, x9)\n    x11 = vupscale(x10, x8)\n    x12 = dmirror(x11)\n    x13 = hconcat(x7, x11)\n    x14 = hconcat(x12, x7)\n    x15 = vconcat(x13, x14)\n    x16 = asobject(x15)\n    x17 = multiply(UNITY, TEN)\n    x18 = canvas(x2, x17)\n    O = paint(x18, x16)\n    return O"], [0.6309126220053929, "def solve_39184cba(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_8c5da067(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_6e43647a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_890c43eb(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_2df22367(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_852d4cc7(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_9e86f565(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_8d28df06(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_4eda6654(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.631933306897075, "def solve_41420e20(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.631933306897075, "def solve_9868614a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.631933306897075, "def solve_736837d0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.631933306897075, "def solve_5d3dc232(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.631933306897075, "def solve_870358ef(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.631933306897075, "def solve_42430b00(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.6400120813164292, "def solve_57ab93bd(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(equality, toindices, box)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = argmax(x3, x4)\n    x6 = fgpartition(I)\n    x7 = merge(x6)\n    x8 = difference(x7, x5)\n    x9 = subgrid(x5, I)\n    x10 = subgrid(x8, I)\n    x11 = height(x9)\n    x12 = subtract(x11, TWO)\n    x13 = height(x10)\n    x14 = divide(x12, x13)\n    x15 = width(x9)\n    x16 = subtract(x15, TWO)\n    x17 = width(x10)\n    x18 = divide(x16, x17)\n    x19 = hupscale(x10, x18)\n    x20 = vupscale(x19, x14)\n    x21 = asobject(x20)\n    x22 = shift(x21, UNITY)\n    O = paint(x9, x22)\n    return O"], [0.652277101112151, "def solve_e0c62ccf(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.652277101112151, "def solve_88a00128(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.6557151442133381, "def solve_ae7b0a55(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.6557151442133381, "def solve_070aff51(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.6557151442133381, "def solve_7528b41c(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.6557151442133381, "def solve_eaa8f01b(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.6557151442133381, "def solve_070f3512(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.6557151442133381, "def solve_abf671a3(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.6557151442133381, "def solve_56b770bc(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.7120344565700184, "def solve_2b8ee24d(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.7121560919415234, "def solve_185fd8aa(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = equality(x1, ONE)\n    x3 = branch(x2, vsplit, hsplit)\n    x4 = x3(I, TWO)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = palette(x5)\n    x8 = palette(x6)\n    x9 = intersection(x7, x8)\n    x10 = first(x9)\n    x11 = shape(x5)\n    x12 = canvas(x10, x11)\n    x13 = ofcolor(x5, x10)\n    x14 = ofcolor(x6, x10)\n    x15 = intersection(x13, x14)\n    O = fill(x12, TWO, x15)\n    return O"], [0.7121560919415234, "def solve_7fb621e4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = ofcolor(x1, ZERO)\n    x4 = ofcolor(x2, ZERO)\n    x5 = intersection(x3, x4)\n    x6 = shape(x1)\n    x7 = canvas(ZERO, x6)\n    O = fill(x7, THREE, x5)\n    return O"], [0.7164645384977338, "def solve_3130e0e3(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, vline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = combine(x15, x16)\n    x18 = intersection(x15, x16)\n    x19 = difference(x17, x18)\n    O = fill(x14, THREE, x19)\n    return O"], [0.7313689109828214, "def solve_1207b8fa(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.7313689109828214, "def solve_0e475294(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.7313689109828214, "def solve_629ce595(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.7313689109828214, "def solve_64fe43b9(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.7313689109828214, "def solve_1175a4b6(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.7313689109828214, "def solve_8969f02f(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.7341627419784752, "def solve_09c12e0c(I):\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = shape(x23)\n    x33 = canvas(x28, x32)\n    O = fill(x33, THREE, x31)\n    return O"], [0.7514237970163009, "def solve_0b679412(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.7514237970163009, "def solve_0a068c72(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.7514237970163009, "def solve_891b2494(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.7514237970163009, "def solve_a977791b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.7531535096989002, "def solve_e450ca93(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = objects(x2, T, F, T)\n    x4 = merge(x3)\n    O = paint(x1, x4)\n    return O"], [0.7635614912120104, "def solve_a49bfacd(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = mostcolor(I)\n    O = replace(x3, x4, ZERO)\n    return O"], [0.7639570072779688, "def solve_d7aac698(I):\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    O = replace(x3, ONE, ZERO)\n    return O"], [0.7702738530895862, "def solve_4b257341(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_0a331e97(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_e967283b(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_f369af48(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_7a7449a1(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_f487fb6c(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_6b6a3bd5(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_6da73910(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_d188f008(I):\n    O = tophalf(I)\n    return O"], [0.7707492564922985, "def solve_e195ca94(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.7707492564922985, "def solve_4de87cb6(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.7707492564922985, "def solve_ce35297d(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.7946931652854432, "def solve_c02efb3c(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = ofcolor(I, ZERO)\n    x4 = astuple(x1, ONE)\n    x5 = crop(I, ORIGIN, x4)\n    x6 = hupscale(x5, x2)\n    O = fill(x6, ZERO, x3)\n    return O"], [0.7946931652854432, "def solve_fa82e118(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.7946931652854432, "def solve_4e852de1(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.8058042763965544, "def solve_2e865a66(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.8058042763965544, "def solve_77312294(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.8141732132799135, "def solve_819cd5fa(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.8141732132799135, "def solve_ee932955(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.8220447986833391, "def solve_c583e66c(I):\n    O = switch(I, EIGHT, TWO)\n    return O"], [0.8220447986833391, "def solve_277585dd(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.8277590843976249, "def solve_4a956a12(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_344dccf6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.8277590843976249, "def solve_768e4d1b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.8277590843976249, "def solve_99657942(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_548062c3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.8277590843976249, "def solve_f315413b(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_983a0b3f(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_29547386(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_95ad7653(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_45b6463a(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_49e873ea(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_7d7edbe6(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_170f9c6c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.8277590843976249, "def solve_f9ad95a9(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_337318ba(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.8277875214971026, "def solve_a7886267(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.8277875214971026, "def solve_a79af328(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.8277875214971026, "def solve_a8ee5901(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.8283838826941207, "def solve_6c25945c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = delta(x2)\n    O = fill(I, FOUR, x3)\n    return O"], [0.8290364842464534, "def solve_f95a5994(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, EIGHT, x4)\n    return O"], [0.8290364842464534, "def solve_65aeaea9(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply( neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, EIGHT, x4)\n    return O"], [0.829564622162508, "def solve_16b0fcd3(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.829564622162508, "def solve_40925569(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.8296258545422006, "def solve_74b5a91c(I):\n    O = trim(I)\n    return O"], [0.8296258545422006, "def solve_ce10c588(I):\n    O = trim(I)\n    return O"], [0.8337475314871048, "def solve_c69d1fc7(I):\n    x1 = ofcolor(I, TWO)\n    x2 = vline(x1)\n    x3 = branch(x2, dmirror, identity)\n    x4 = x3(I)\n    x5 = fgpartition(x4)\n    x6 = matcher(color, TWO)\n    x7 = compose(flip, x6)\n    x8 = extract(x5, x7)\n    x9 = ofcolor(x4, TWO)\n    x10 = leftmost(x9)\n    x11 = leftmost(x8)\n    x12 = greater(x10, x11)\n    x13 = manhattan(x8, x9)\n    x14 = decrement(x13)\n    x15 = branch(x12, identity, invert)\n    x16 = branch(x12, decrement, increment)\n    x17 = branch(x12, leftmost, rightmost)\n    x18 = x15(x14)\n    x19 = tojvec(x18)\n    x20 = shift(x8, x19)\n    x21 = x17(x20)\n    x22 = x16(x21)\n    x23 = tojvec(x22)\n    x24 = vfrontier(x23)\n    x25 = cover(x4, x8)\n    x26 = paint(x25, x20)\n    x27 = fill(x26, EIGHT, x24)\n    O = x3(x27)\n    return O"], [0.8341973243152688, "def solve_a36ededf(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.8372727715830096, "def solve_1a0ecf96(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [0.8372727715830096, "def solve_3a63e057(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [0.8372727715830096, "def solve_c6b36782(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [0.8376932799217021, "def solve_7b6228f0(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.8530872511837071, "def solve_9984774e(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.8530872511837071, "def solve_8c34366a(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.8550014879775064, "def solve_bd3e336c(I):\n    x1 = replace(I, SEVEN, ZERO)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [0.8552193526342258, "def solve_d4d2d11a(I):\n    x1 = ofcolor(I, ONE)\n    x2 = ofcolor(I, TWO)\n    x3 = mapply(neighbors, x1)\n    x4 = mapply(neighbors, x2)\n    x5 = fill(I, SEVEN, x3)\n    O = fill(x5, FOUR, x4)\n    return O"], [0.8552576021850845, "def solve_a13a7d93(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = astuple(SIX, THREE)\n    x6 = astuple(FOUR, EIGHT)\n    x7 = astuple(ONE, TWO)\n    x8 = initset(x5)\n    x9 = insert(x6, x8)\n    x10 = insert(x7, x9)\n    x11 = mapply(x4, x10)\n    O = paint(I, x11)\n    return O"], [0.8581546500312859, "def solve_0f68bba5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.8581546500312859, "def solve_ef4d04c0(I):\n    x1 = fork(multiply, height, width)\n    x2 = lbind(ofcolor, I)\n    x3 = palette(I)\n    x4 = compose(x1, x2)\n    x5 = argmax(x3, x4)\n    x6 = leastcolor(I)\n    x7 = palette(I)\n    x8 = remove(x5, x7)\n    x9 = other(x8, x6)\n    x10 = replace(I, x6, x5)\n    O = replace(x10, x9, x6)\n    return O"], [0.8581703987119509, "def solve_e43f175a(I):\n    O = replace(I, FOUR, ZERO)\n    return O"], [0.8582352748738153, "def solve_3312c412(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = fork(subtract, first, last)\n    x4 = fork(multiply, sign, identity)\n    x5 = compose(x4, x3)\n    x6 = lbind(greater, THREE)\n    x7 = chain(x6, maximum, x5)\n    x8 = lbind(lbind, astuple)\n    x9 = rbind(chain, x8)\n    x10 = lbind(compose, x7)\n    x11 = rbind(x9, x10)\n    x12 = lbind(lbind, sfilter)\n    x13 = compose(x11, x12)\n    x14 = lbind(mapply, backdrop)\n    x15 = fork(apply, x13, identity)\n    x16 = compose(x14, x15)\n    x17 = power(x16, TWO)\n    x18 = x17(x2)\n    x19 = fill(I, FOUR, x18)\n    O = replace(x19, x1, ZERO)\n    return O"], [0.8604574970960375, "def solve_839eb872(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.8604574970960375, "def solve_eb1677f4(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.8604574970960375, "def solve_a8b57165(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.861229304007208, "def solve_dc24b772(I):\n    x1 = ofcolor(I, ONE)\n    x2 = crop(I, ORIGIN, THREE_BY_THREE)\n    x3 = asobject(x2)\n    x4 = lbind(shift, x3)\n    x5 = compose(x4, decrement)\n    x6 = mapply(x5, x1)\n    O = paint(I, x6)\n    return O"], [0.8624395782950501, "def solve_a581fe24(I):\n    x1 = shape(I)\n    x2 = canvas(ZERO, x1)\n    x3 = hconcat(I, x2)\n    x4 = objects(x3, F, F, T)\n    x5 = argmin(x4, size)\n    x6 = ulcorner(x5)\n    x7 = llcorner(x5)\n    x8 = shoot(x6, NEG_UNITY)\n    x9 = shoot(x6, UNITY)\n    x10 = shoot(x7, DOWN_LEFT)\n    x11 = shoot(x7, UP_RIGHT)\n    x12 = combine(x8, x9)\n    x13 = combine(x10, x11)\n    x14 = combine(x12, x13)\n    x15 = underfill(I, THREE, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = colorfilter(x16, 18656)\n    x18 = rbind(bordering, I)\n    x19 = mfilter(x17, x18)\n    O = cover(x15, x19)\n    return O"], [0.8625466344449646, "def solve_6ad1ebb7(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, TWO, x3)\n    return O"], [0.8629640897331461, "def solve_b8b499a4(I):\n    x1 = astuple(SIX, TWO)\n    x2 = astuple(TWO, ONE)\n    x3 = initset(x2)\n    x4 = insert(ORIGIN, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    O = fill(I, FOUR, x12)\n    return O"], [0.8630966423697286, "def solve_af05c8b7(I):\n    x1 = fork(multiply, height, width)\n    x2 = partition(I)\n    x3 = argmax(x2, x1)\n    x4 = remove(x3, x2)\n    x5 = argmax(x4, x1)\n    x6 = other(x4, x5)\n    x7 = palette(I)\n    x8 = lrcorner(x5)\n    x9 = add(x8, UNITY)\n    x10 = llcorner(x5)\n    x11 = add(x10, DOWN_LEFT)\n    x12 = urcorner(x5)\n    x13 = add(x12, UP_RIGHT)\n    x14 = ulcorner(x5)\n    x15 = add(x14, NEG_UNITY)\n    x16 = shoot(x9, UNITY)\n    x17 = shoot(x11, DOWN_LEFT)\n    x18 = shoot(x13, UP_RIGHT)\n    x19 = shoot(x15, NEG_UNITY)\n    x20 = combine(x16, x17)\n    x21 = combine(x18, x19)\n    x22 = combine(x20, x21)\n    x23 = color(x6)\n    O = fill(I, x23, x22)\n    return O"], [0.8631333933751663, "def solve_98beb5f3(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = chain(size, dedupe, first)\n    x9 = matcher(x8, ONE)\n    x10 = compose(first, cmirror)\n    x11 = chain(size, dedupe, x10)\n    x12 = matcher(x11, ONE)\n    x13 = fork(both, x9, x12)\n    x14 = rbind(rapply, I)\n    x15 = compose(initset, first)\n    x16 = chain(first, x14, x15)\n    x17 = compose(x13, x16)\n    x18 = extract(x7, x17)\n    x19 = first(x18)\n    x20 = last(x18)\n    x21 = x19(I)\n    x22 = width(x21)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = index(x21, x24)\n    x26 = asobject(x21)\n    x27 = matcher(first, x25)\n    x28 = compose(flip, x27)\n    x29 = sfilter(x26, x28)\n    x30 = hperiod(x29)\n    x31 = width(x21)\n    x32 = increment(x31)\n    x33 = interval(ZERO, x32, x30)\n    x34 = apply(tojvec, x33)\n    x35 = lbind(shift, x29)\n    x36 = mapply(x35, x34)\n    x37 = paint(x21, x36)\n    O = x20(x37)\n    return O"], [0.8632184800688373, "def solve_36e1ded9(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.8632787798855505, "def solve_485a70ea(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot270(I)\n    return O"], [0.8634207638517514, "def solve_6c50b4fd(I):\n    O = vmirror(I)\n    return O"], [0.8636023351419029, "def solve_427db87f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = height(x2)\n    x4 = halve(x3)\n    x5 = width(x2)\n    x6 = halve(x5)\n    x7 = ulcorner(x2)\n    x8 = lrcorner(x2)\n    x9 = shape(I)\n    x10 = maximum(x9)\n    x11 = multiply(THREE, TEN)\n    x12 = interval(ZERO, x11, ONE)\n    x13 = rbind(multiply, x4)\n    x14 = apply(x13, x12)\n    x15 = rbind(multiply, x6)\n    x16 = apply(x15, x12)\n    x17 = pair(x14, x16)\n    x18 = rbind(add, x7)\n    x19 = apply(invert, x17)\n    x20 = apply(x18, x19)\n    x21 = rbind(add, x8)\n    x22 = apply(x21, x17)\n    x23 = pair(x20, x22)\n    x24 = mapply(box, x23)\n    O = fill(I, x1, x24)\n    return O"], [0.863678348633302, "def solve_8b58cd8a(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.863678348633302, "def solve_23b94ede(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.8636982153812559, "def solve_87528bbb(I):\n    x1 = palette(I)\n    x2 = intersection(x1, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = astuple(ONE, x4)\n    x6 = size(x5)\n    x7 = decrement(x6)\n    x8 = tojvec(x7)\n    x9 = shoot(x8, UNITY)\n    O = fill(I, x4, x9)\n    return O"], [0.863706518437685, "def solve_c00e3492(I):\n    O = dmirror(I)\n    return O"], [0.863706518437685, "def solve_84df7074(I):\n    O = dmirror(I)\n    return O"], [0.863706518437685, "def solve_d59526cf(I):\n    O = dmirror(I)\n    return O"], [0.8637867634430995, "def solve_02b96647(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.8637867634430995, "def solve_dea4fe77(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.863838257851044, "def solve_032ac5d0(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = lbind(colorcount, I)\n    x5 = argmin(x3, x4)\n    x6 = ofcolor(I, x1)\n    x7 = ofcolor(I, x5)\n    x8 = combine(x6, x7)\n    x9 = mapply(neighbors, x8)\n    x10 = difference(x9, x8)\n    x11 = toobject(x10, I)\n    x12 = leastcolor(x11)\n    x13 = ofcolor(I, x1)\n    x14 = first(x13)\n    x15 = initset(x14)\n    x16 = objects(I, T, F, F)\n    x17 = colorfilter(x16, x12)\n    x18 = lbind(adjacent, x8)\n    x19 = mfilter(x17, x18)\n    x20 = toindices(x19)\n    x21 = rbind(manhattan, x15)\n    x22 = chain(even, x21, initset)\n    x23 = sfilter(x20, x22)\n    x24 = fill(I, x5, x20)\n    O = fill(x24, x1, x23)\n    return O"], [0.8638448240547932, "def solve_a6eeb15b(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = apply(color, x3)\n    x5 = rbind(contained, x4)\n    x6 = compose(x5, color)\n    x7 = sfilter(x2, x6)\n    x8 = lbind(colorfilter, x3)\n    x9 = chain(first, x8, color)\n    x10 = fork(gravitate, identity, x9)\n    x11 = fork(shift, identity, x10)\n    x12 = mapply(x11, x7)\n    x13 = merge(x2)\n    x14 = cover(I, x13)\n    O = paint(x14, x12)\n    return O"], [0.8638701955087361, "def solve_055f497a(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_408dc8c5(I):\n    x1 = partition(I)\n    x2 = fork(recolor, color, backdrop)\n    x3 = apply(x2, x1)\n    x4 = mfilter(x3, hline)\n    x5 = mfilter(x3, vline)\n    x6 = paint(I, x4)\n    O = paint(x6, x5)\n    return O"], [0.8638701955087361, "def solve_5703d54b(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.8638701955087361, "def solve_5c37f680(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_1f82c158(I):\n    x1 = objects(I, T, F, F)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = lbind(sfilter, x3)\n    x5 = lbind(matcher, identity)\n    x6 = chain(size, x4, x5)\n    x7 = matcher(x6, ONE)\n    x8 = sfilter(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmax(x8, x9)\n    x11 = matcher(color, x10)\n    x12 = extract(x1, x11)\n    O = subgrid(x12, I)\n    return O"], [0.8638701955087361, "def solve_24189f94(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_a8768dfc(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_4828dc5b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_aa4ae39f(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.8638701955087361, "def solve_e87e12e5(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_2cc917c3(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.8638701955087361, "def solve_e4684d06(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.8638701955087361, "def solve_3287d2ac(I):\n    x1 = ofcolor(I, EIGHT)\n    x2 = delta(x1)\n    O = fill(I, THREE, x2)\n    return O"], [0.8638701955087361, "def solve_e811b287(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = astuple(TWO, FOUR)\n    x4 = rbind(contained, x3)\n    x5 = compose(x4, first)\n    x6 = rbind(sfilter, x5)\n    x7 = lbind(rbind, subtract)\n    x8 = lbind(occurrences, I)\n    x9 = lbind(lbind, shift)\n    x10 = compose(x7, ulcorner)\n    x11 = chain(x10, x6, normalize)\n    x12 = chain(x8, x6, normalize)\n    x13 = fork(apply, x11, x12)\n    x14 = compose(x9, normalize)\n    x15 = fork(mapply, x14, x13)\n    x16 = astuple(cmirror, dmirror)\n    x17 = astuple(hmirror, vmirror)\n    x18 = combine(x16, x17)\n    x19 = product(x18, x18)\n    x20 = fork(compose, first, last)\n    x21 = apply(x20, x19)\n    x22 = totuple(x21)\n    x23 = combine(x18, x22)\n    x24 = rapply(x23, x2)\n    x25 = mapply(x15, x24)\n    O = paint(I, x25)\n    return O"], [0.8638701955087361, "def solve_e9db1696(I):\n    O = replace(I, EIGHT, ONE)\n    return O"], [0.8638701955087361, "def solve_dbd3d9f2(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_b32e4eb3(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_f76a37c9(I):\n    x1 = palette(I)\n    x2 = remove(FIVE, x1)\n    x3 = first(x2)\n    x4 = ofcolor(I, x3)\n    x5 = fill(I, ZERO, x4)\n    x6 = ofcolor(I, FIVE)\n    O = fill(x5, x3, x6)\n    return O"], [0.8638701955087361, "def solve_5ee950a8(I):\n    x1 = objects(I, T, F, T)\n    x2 = ofcolor(I, THREE)\n    x3 = sizefilter(x1, ONE)\n    x4 = rbind(vmatching, x2)\n    x5 = rbind(hmatching, x2)\n    x6 = fork(either, x4, x5)\n    x7 = sfilter(x3, x6)\n    x8 = rbind(gravitate, x2)\n    x9 = fork(add, center, x8)\n    x10 = fork(connect, center, x9)\n    x11 = fork(recolor, color, x10)\n    x12 = mapply(x11, x7)\n    O = paint(I, x12)\n    return O"], [0.8638701955087361, "def solve_11016dbe(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.8638701955087361, "def solve_6458773b(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = subgrid(x2, I)\n    return O"], [0.8638701955087361, "def solve_12247c29(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_ccc58bde(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.8638701955087361, "def solve_f342d34d(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.8638701955087361, "def solve_3a5fa930(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_75c2d520(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.8638701955087361, "def solve_6beed481(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = fill(I, x8, x32)\n    return O"], [0.8638701955087361, "def solve_0f779890(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.8638701955087361, "def solve_aefecaed(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.8638701955087361, "def solve_72ab5ce8(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, TWO)\n    x3 = mfilter(x1, x2)\n    x4 = matcher(size, THREE)\n    x5 = mfilter(x1, x4)\n    x6 = matcher(size, FOUR)\n    x7 = mfilter(x1, x6)\n    x8 = fill(I, THREE, x3)\n    x9 = fill(x8, TWO, x5)\n    O = fill(x9, ONE, x7)\n    return O"], [0.8638701955087361, "def solve_f6e580bc(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_023adeef(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.8638701955087361, "def solve_61c9642c(I):\n    x1 = vmirror(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = toindices(x3)\n    x5 = sizefilter(x2, ONE)\n    x6 = apply(initset, x4)\n    x7 = lbind(argmin, x6)\n    x8 = lbind(rbind, manhattan)\n    x9 = compose(x7, x8)\n    x10 = fork(recolor, color, x9)\n    x11 = mapply(x10, x5)\n    x12 = merge(x5)\n    x13 = cover(I, x12)\n    O = paint(x13, x11)\n    return O"], [0.8638701955087361, "def solve_551325c9(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = fork(equality, identity, size)\n    x5 = mfilter(x3, x4)\n    O = fill(I, FOUR, x5)\n    return O"], [0.8638878416543551, "def solve_aebc9b9a(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = astuple(x1, ONE)\n    x8 = astuple(x2, ONE)\n    x9 = decrement(x1)\n    x10 = decrement(x2)\n    x11 = toivec(x10)\n    x12 = tojvec(x9)\n    x13 = crop(I, x11, x8)\n    x14 = crop(I, x12, x7)\n    x15 = asobject(x14)\n    x16 = asobject(x13)\n    x17 = vperiod(x15)\n    x18 = hperiod(x16)\n    x19 = astuple(x17, x18)\n    x20 = lbind(multiply, x19)\n    x21 = neighbors(ORIGIN)\n    x22 = mapply(neighbors, x21)\n    x23 = apply(x20, x22)\n    x24 = lbind(shift, x6)\n    x25 = mapply(x24, x23)\n    O = paint(I, x25)\n    return O"], [0.8639438916538609, "def solve_ba340321(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8639438916538609, "def solve_04739150(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8639438916538609, "def solve_01a1007f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x22 = invert(x11)\n    x23 = shift(x9, x22)\n    x24 = lbind(shift, x23)\n    x25 = mapply(x24, x8)\n    O = paint(I, x25)\n    return O"], [0.8639438916538609, "def solve_c2e0b3c6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8639438916538609, "def solve_80edc6b5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_d48b6367(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8639438916538609, "def solve_544cb80e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_c80046b2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_cce5466f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_1dceb5ce(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8639438916538609, "def solve_53819502(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8639438916538609, "def solve_5440fe70(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_20049e0c(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_b07e2ab3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8640253338383225, "def solve_85141ce4(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_c81221e6(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_94207012(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_fa794840(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_a44b4e05(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8641376097298877, "def solve_dab511d6(I):\n    O = rot180(I)\n    return O"], [0.8641376097298877, "def solve_1d9baa90(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.8641376097298877, "def solve_3ecc723d(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.8641376097298877, "def solve_ce10cc7d(I):\n    O = rot180(I)\n    return O"], [0.8641453134548085, "def solve_20703c94(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.8641453134548085, "def solve_75882916(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.8641453134548085, "def solve_de631d8a(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.8641453134548085, "def solve_0200d9ec(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.8643386284959661, "def solve_8f0cbf2f(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, last)\n    x5 = fork(recolor, first, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [0.8643386284959661, "def solve_f3c70214(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, last)\n    x5 = fork(recolor, first, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [0.8644669437834643, "def solve_c5ec41c9(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.8644669437834643, "def solve_eb89440f(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.8654574970960377, "def solve_d99dc4eb(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = rbind(multiply, THREE)\n    x6 = rbind(divide, THREE)\n    x7 = compose(x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = toindices(x4)\n    x10 = compose(x8, last)\n    x11 = sfilter(x9, x10)\n    O = fill(I, SIX, x11)\n    return O"], [0.8654764654856825, "def solve_c48c4ae2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, SEVEN, x2)\n    return O"], [0.8656237858337551, "def solve_f5ef6376(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.8656237858337551, "def solve_543a375e(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.8659287967270011, "def solve_22e3fdc7(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = apply(toindices, x6)\n    x8 = rbind(shoot, RIGHT)\n    x9 = compose(x8, center)\n    x10 = fork(recolor, color, x9)\n    x11 = mapply(x10, x6)\n    x12 = paint(I, x11)\n    x13 = width(I)\n    x14 = interval(ZERO, x13, ONE)\n    x15 = apply(double, x14)\n    x16 = apply(increment, x15)\n    x17 = apply(tojvec, x16)\n    x18 = prapply(shift, x7, x17)\n    x19 = merge(x18)\n    O = fill(x12, FIVE, x19)\n    return O"], [0.8684204478249318, "def solve_a89ab96a(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, ONE, x6)\n    return O"], [0.8687415090376716, "def solve_43335764(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_ef01b039(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_1ab6b3bd(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_f713e082(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_6bfe2952(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_6b8a7e73(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_f62371d1(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_6aa06a09(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_86f6fc77(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.895840777338116, "def solve_3b476d40(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, vmirror, hmirror)\n    x9 = x8(x6)\n    x10 = branch(x7, leftmost, uppermost)\n    x11 = branch(x7, tojvec, toivec)\n    x12 = x10(x5)\n    x13 = x10(x6)\n    x14 = greater(x12, x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = x11(x16)\n    x18 = shape(x6)\n    x19 = multiply(x17, x18)\n    x20 = shift(x9, x19)\n    x21 = fill(I, THREE, x3)\n    O = paint(x21, x20)\n    return O"], [0.895840777338116, "def solve_2d6e03b3(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, vmirror, hmirror)\n    x9 = x8(x6)\n    x10 = branch(x7, leftmost, uppermost)\n    x11 = branch(x7, tojvec, toivec)\n    x12 = x10(x5)\n    x13 = x10(x6)\n    x14 = greater(x12, x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = x11(x16)\n    x18 = shape(x6)\n    x19 = multiply(x17, x18)\n    x20 = shift(x9, x19)\n    x21 = fill(I, THREE, x3)\n    O = paint(x21, x20)\n    return O"], [0.895840777338116, "def solve_c20390de(I):\n    O = replace(I, ZERO, TWO)\n    return O"], [0.895840777338116, "def solve_3d4cd62c(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, vmirror, hmirror)\n    x9 = x8(x6)\n    x10 = branch(x7, leftmost, uppermost)\n    x11 = branch(x7, tojvec, toivec)\n    x12 = x10(x5)\n    x13 =x10(x6)\n    x14 = greater(x12, x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = x11(x16)\n    x18 = shape(x6)\n    x19 = multiply(x17, x18)\n    x20 = shift(x9, x19)\n    x21 = fill(I, THREE, x3)\n    O = paint(x21, x20)\n    return O"], [0.8966427298715387, "def solve_92216082(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [1.0, "def solve_25b103bb(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_b8ed7fd3(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = x2(I, TWO)\n    x4 = argmin(x3, numcolors)\n    x5 = argmax(x3, numcolors)\n    x6 = width(x5)\n    x7 = rbind(repeat, x6)\n    x8 = chain(dmirror, merge, x7)\n    x9 = upscale(x4, x6)\n    x10 = x8(x4)\n    x11 = x8(x10)\n    x12 = ofcolor(x11, ZERO)\n    O = fill(x9, ZERO, x12)\n    return O"], [1.0, "def solve_742af85d(I):\n    x1 = index(I, ORIGIN)\n    x2 = recolor(d511, x1)\n    x3 = apply(double, x2)\n    x4 = frontiers(x3)\n    x5 = merge(x4)\n    x6 = NEG_UNITY(x5)\n    x7 = shift(x5, x6)\n    x8 = recolor(x1, x7)\n    x9 = lbind(shift, x8)\n    x10 = mapply(x9, x3)\n    O = paint(I, x10)\n    return O"], [1.0, "def solve_addd792a(I):\n    x1 =alde4(I)\n    x2 = interval(ZERO, NINE, ONE)\n    x3 = apply(double, x2)\n    x4 = apply(width, x3)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x5, x6)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x5)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x2)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [1.0, "def solve_1d3f67c1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_5c29d6b4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_840e2fdb(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = compose(double, halve)\n    x5 = fork(equality, identity, x4)\n    x6 = compose(x5, last)\n    x7 = sfilter(x3, x6)\n    x8 = fork(recolor, first, x7)\n    x9 = mapply(x8, x4)\n    O = paint(I, x9)\n    return O"], [1.0, "def solve_6be248c7(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(4, x5)\n    return O"], [1.0, "def solve_cc6b1256(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_7b041589(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = toindices(x14)\n    x26 = lbind(shift, x24)\n    x27 = rbind(multiply, x30)\n    x28 = chain(x27, x26, last)\n    x29 = mapply(x28, x29)\n    O = fill(x14, x13, x29)\n    return O"], [1.0, "def solve_46aed437(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_1fb938eb(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_02507b7d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_b6e0ab4c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_11e4c715(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_6c48d8d6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_89476efe(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_73051aeb(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = height(x2)\n    x4 = halve(x3)\n    x5 = width(x2)\n    x6 = halve(x5)\n    x7 = tojvec(x4)\n    x8 = tojvec(x6)\n    x9 = connect(x7, x8)\n    x10 = fill(I, x1, x9)\n    x11 = objects(x10, F, F, T)\n    x12 = argmax(x11, numcolors)\n    x13 = normalize(x12)\n    x14 = remove(x12, x11)\n    x15 = toindices(x14)\n    x16 = lbind(intersection, x15)\n    x17 = chain(halve, x16, toindices)\n    x18 = fork(recolor, color, x17)\n    x19 = mapply(x18, x14)\n    O = paint(x10, x19)\n    return O"], [1.0, "def solve_93633735(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_01ad0218(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = rbind(shoot, x24)\n    x26 = mapply(x25, x23)\n    x27 = fill(x6, x3, x26)\n    x28 = x27(x1)\n    O = fill(x27, x10, x28)\n    return O"], [1.0, "def solve_6f69b5f7(I):\n    x1 = shoot(ORIGIN, UNITY)\n    x2 = rbind(shoot, DOWN)\n    x3 = compose(x2, last)\n    x4 = fork(recolor, first, x3)\n    x5 = mapply(x4, x1)\n    O = paint(I, x5)\n    return O"], [1.0, "def solve_a614e52c(I):\n    x1 = argmin(x1, numcolors)\n    x2 = apply(first, x1)\n    x3 = dmirror(x2)\n    x4 = papply(pair, x2, x3)\n    x5 = lbind(shift, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [1.0, "def solve_80cbfc70(I):\n    x1 = objects(I, T, F, T)\n    x2 = asindices(I)\n    x3 = outbox(x2)\n    x4 = lbind(adjacent, x3)\n    x5 = compose(x4, initset)\n    x6 = rbind(extract, x5)\n    x7 = compose(x6, toindices)\n    x8 = rbind(compose, initset)\n    x9 = lbind(rbind, manhattan)\n    x10 = chain(x8, x9, initset)\n    x11 = lbind(lbind, greater)\n    x12 = chain(x11, halve, size)\n    x13 = compose(x10, x7)\n    x14 = fork(compose, x12, x13)\n    x15 = fork(sfilter, toindices, x14)\n    x16 = mapply(x15, x1)\n    O = fill(I, EIGHT, x16)\n    return O"], [1.0, "def solve_606019f6(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_66832f92(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x24, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_3d4f9a38(I):\n    x1 = portrait(I)\n    x2 = branch(x1, partition, vsplit)\n    x3 = equality(x2, TWO)\n    x4 = branch(x3, hmirror, vmirror)\n    x5 = x4(I)\n    x6 = asobject(x5)\n    x7 = lbind(shift, x6)\n    x8 = height(x5)\n    x9 = chain(x7, halve, width)\n    x10 = x9(x2)\n    x11 = height(x5)\n    x12 = increment(x11)\n    x13 = interval(NEG_ONE, x12, ONE)\n    x14 = rbind(multiply, x5)\n    x15 = apply(x14, x13)\n    x16 = mapply(x12, x15)\n    x17 = paint(x5, x16)\n    x18 = repeat(x17, ONE)\n    O = x4(x18)\n    return O"], [1.0, "def solve_2e6a2d9f(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_06f00ee0(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_1aa149f2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_464525d6(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_6b553fe5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_00ddc610(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = hsplit(I, x2)\n    x4 = shape(x3)\n    x5 = maximum(x4)\n    x6 = branch(x5, ORIGIN, canvas)\n    x7 = connect(x5, x6)\n    x8 = height(x7)\n    x9 = width(x7)\n    x10 = matcher(identity, ZERO)\n    x11 = subtract(x10, x8)\n    x12 = matcher(last, x8)\n    x13 = subtract(x12, x9)\n    x14 = width(x3)\n    x15 = interval(ZERO, x14, ONE)\n    x16 = combine(x3, x13)\n    x17 = fill(x6, THREE, x16)\n    x18 = astuple(x11, x15)\n    x19 = canvas(ZERO, x18)\n    x20 = asobject(x19)\n    x21 = occurrences(x17, x20)\n    x22 = lbind(shift, x20)\n    x23 = mapply(x22, x21)\n    O = fill(x17, THREE, x23)\n    return O"], [1.0, "def solve_f5b13097(I):\n    x1 = fgpartition(I)\n    x2 = mapply(toindices, x1)\n    x3 = mapply(vfrontier, x2)\n    x4 = underfill(I, EIGHT, x3)\n    x5 = hconcat(x4, x4)\n    O = vconcat(x5, x5)\n    return O"], [1.0, "def solve_645e4142(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_9b626daa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_377edd58(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, TWO)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 =ulcorner(x11)\n    x13 = subgrid(x11, I)\n    x14 = increment(x13)\n    x15 = asobject(x14)\n    x16 = matcher(first, x3)\n    x17 = compose(flip, x16)\n    x18 = sfilter(x15, x17)\n    x19 = hperiod(x18)\n    x20 = vperiod(x18)\n    x21 = fgpartition(x7)\n    x22 = merge(x21)\n    x23 = paint(x7, x22)\n    x24 = solve(shift, x17)\n    x25 = shift(x24, x18)\n    x26 = fork(combine, hfrontier, vfrontier)\n    x27 = mapply(x26, x23)\n    O = paint(x25, x27)\n    return O"], [1.0, "def solve_945fafb7(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, F)\n    x3 = Fgpartition(I)\n    x4 = compose(last, first)\n    x5 = power(last, TWO)\n    x6 = fork(connect, x4, x5)\n    x7 = fork(recolor, color, x6)\n    x8 = mapply(x7, x3)\n    O = paint(I, x8)\n    return O"], [1.0, "def solve_8c1f40ba(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_d7ea8b99(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, THREE)\n    x7 = canvas(x4, x6)\n    x8 = asobject(x3)\n    x9 = shift(x8, UNITY)\n    O = paint(x7, x9)\n    return O"], [1.0, "def solve_b8be1fa7(I):\n    x1 = replace(I, FOUR, ZERO)\n    x2 = branch(x1, dmirror, identity)\n    x3 = x2(I)\n    x4 = partition(x3)\n    x5 = matcher(color, ZERO)\n    x6 = compose(flip, x5)\n    x7 = extract(x4, x6)\n    x8 = initset(ORIGIN)\n    x9 = height(x7)\n    x10 = insert(ZERO, x8)\n    x11 = insert(x9, x10)\n    x12 = insert(x11, x12)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = dmirror(x4)\n    x16 = width(x7)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = pair(x17, x14)\n    x19 = mapply(neighbors, x18)\n    O = fill(x3, ONE, x19)\n    return O"], [1.0, "def solve_70cad8dc(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = merge(x1)\n    x5 = fill(I, NEG_ONE, x4)\n    x6 = shape(I)\n    x7 = canvas(NEG_ONE, x6)\n    x8 = hconcat(x5, x7)\n    x9 = objects(x8, F, F, T)\n    x10 = rbind(other, x3)\n    x11 = compose(x10, palette)\n    x12 = fork(astuple, x11, ulcorner)\n    x13 = apply(x12, x9)\n    x14 = merge(x9)\n    x15 = fill(I, x3, x14)\n    x16 = paint(x15, x13)\n    O = compress(x16)\n    return O"], [1.0, "def solve_e069d028(I):\n    x1 = switch(I, FIVE, EIGHT)\n    x2 = switch(x1, EIGHT, NEG_ONE)\n    x3 = switch(x2, EIGHT, NEG_ONE)\n    x4 = switch(x3, EIGHT, UNITY)\n    x5 = switch(x4, EIGHT, NEG_ONE)\n    x6 = combine(x1, x5)\n    O = fill(x4, THREE, x6)\n    return O"], [1.0, "def solve_cb6ead5e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = shape(I)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(I, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmin(x11, numcolors)\n    x13 = normalize(x12)\n    x14 = toindices(x13)\n    x15 = increment(x4)\n    x16 = increment(x15)\n    x17 = increment(x5)\n    x18 = increment(x17)\n    x19 = astuple(x16, x18)\n    x20 = lbind(shift, x14)\n    x21 = rbind(multiply, x19)\n    x22 = chain(x20, x21, last)\n    x23 = fork(recolor, first, x22)\n    x24 = normalize(x12)\n    x25 = mapply(x23, x24)\n    O = paint(x9, x25)\n    return O"], [1.0, "def solve_9b41408b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_36fe7672(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_ae6e3c5c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_eee391e5(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_a3cbe197(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_04eef8bd(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_98f9d52f(I):\n    x1 = astuple(vsplit, hsplit)\n    x2 = rbind(rbind, TWO)\n    x3 = rbind(rapply, I)\n    x4 = initset(x2)\n    x5 = lbind(rapply, x4)\n    x6 = chain(first, x3, x5)\n    x7 = lbind(apply, numcolors)\n    x8 = compose(x7, x6)\n    x9 = matcher(x8, TWO_BY_TWO)\n    x10 = extract(x1, x9)\n    x11 = x10(I, TWO)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = palette(x12)\n    x15 = palette(x13)\n    x16 = intersection(x14, x15)\n    x17 = first(x16)\n    x18 = shape(x12)\n    x19 = canvas(x17, x18)\n    x20 = ofcolor(x12, x17)\n    x21 = ofcolor(x13, x17)\n    x22 = intersection(x20, x21)\n    O = fill(x19, TWO, x22)\n    return O"], [1.0, "def solve_985967fe(I):\n    x1 = rot270(I)\n    x2 = rot90(I)\n    x3 = rot270(x1)\n    x4 = astuple(x2, x3)\n    x5 = astuple(FOUR, EIGHT)\n    x6 = apply(decrement, x5)\n    x7 = apply(asobject, x4)\n    x8 = mpapply(shift, x7, x6)\n    O = paint(x1, x8)\n    return O"], [1.0, "def solve_865188b4(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = color(x13)\n    x15 = ofcolor(x7, x14)\n    x16 = ofcolor(x8, x14)\n    x17 = intersection(x15, x16)\n    x18 = canvas(x14, x9)\n    x19 = fill(x18, THREE, x17)\n    O = fill(x19, TWO, x15)\n    return O"], [1.0, "def solve_a75b263d(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = power(outbox, TWO)\n    x4 = mapply(x3, x2)\n    O = fill(I, FOUR, x4)\n    return O"], [1.0, "def solve_e0fb90ed(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_601cb44e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_8d319fd4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_23a6f291(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_f4030b03(I):\n    x1 = fgpartition(I)\n    x2 = compose(dneighbors, center)\n    x3 = fork(difference, backdrop, x2)\n    x4 = fork(equality, toindices, x3)\n    x5 = matcher(size, FIVE)\n    x6 = fork(both, x4, x5)\n    x7 = extract(x1, x6)\n    x8 = color(x7)\n    x9 = merge(x1)\n    x10 = compose(hmirror, vmirror)\n    x11 = initset(x10)\n    x12 = insert(vmirror, x11)\n    x13 = insert(hmirror, x12)\n    x14 = rapply(x13, x9)\n    x15 = ulcorner(x7)\n    x16 = lbind(subtract, x15)\n    x17 = matcher(first, x8)\n    x18 = rbind(sfilter, x17)\n    x19 = chain(x16, ulcorner, x18)\n    x20 = fork(shift, identity, x19)\n    x21 = mapply(x20, x14)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_f4744c08(I):\n    x1 = rbind(b775, I)\n    x2 = compose( shape, asobject)\n    x3 = objects(I, T, F, F)\n    x4 = argmax(x3, size)\n    x5 = canvas(FIVE, x2)\n    O = paint(x5, x4)\n    return O"], [1.0, "def solve_c336cac7(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_d827ad72(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = merge(x2)\n    O = subgrid(x3, I)\n    return O"], [1.0, "def solve_19717294(I):\n    x1 = lbind(toobject, I)\n    x2 = lbind(shift, I)\n    x3 = compose(x2, T)\n    x4 = chain(x1, x3, decrement)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x1)\n    O = paint(I, x6)\n    return O"], [1.0, "def solve_acdcb61a(I):\n    x1 = ofcolor(I, TWO)\n    x2 = dalowermost(x1)\n    x3 = equality(x2, ZERO)\n    x4 = branch(x3, x1, x2)\n    x5 = fork(combine, vfrontier, hfrontier)\n    x6 = x5(x4)\n    x7 = underfill(I, EIGHT, x6)\n    x8 = fill(x7, TWO, x5)\n    O = fill(x8, ONE, x7)\n    return O"], [1.0, "def solve_1f3ea06e(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_fe4e4b3f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_f393e6e9(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_8793aff7(I):\n    x1 = asindices(I)\n    x2 = objects(I, T, F, T)\n    x3 = fork(multiply, sign, identity)\n    x4 = lbind(apply, x3)\n    x5 = chain(even, maximum, x4)\n    x6 = lbind(sfilter, x1)\n    x7 = fork(add, first, last)\n    x8 = rbind(remove, x2)\n    x9 = compose(center, last)\n    x10 = fork(subtract, first, x9)\n    x11 = compose(x5, x10)\n    x12 = lbind(rbind, equality)\n    x13 = lbind(argmin, x2)\n    x14 = chain(x7, x4, x10)\n    x15 = lbind(lbind, astuple)\n    x16 = lbind(rbind, astuple)\n    x17 = lbind(compose, x11)\n    x18 = lbind(compose, x14)\n    x19 = compose(x18, x15)\n    x20 = compose(x18, x16)\n    x21 = compose(x13, x19)\n    x22 = rbind(compose, x21)\n    x23 = lbind(lbind, valmin)\n    x24 = rbind(compose, x19)\n    x25 = chain(x24, x23, x8)\n    x26 = lbind(fork, greater)\n    x27 = fork(x26, x25, x20)\n    x28 = chain(x6, x17, x16)\n    x29 = chain(x6, x22, x12)\n    x30 = fork(intersection, x28, x29)\n    x31 = compose(x6, x27)\n    x32 = fork(intersection, x30, x31)\n    x33 = fork(recolor, color, x32)\n    x34 = mapply(x33, x2)\n    O = paint(I, x34)\n    return O"], [1.0, "def solve_d2520127(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_d5b19de7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = difference(x2, x1)\n    x4 = fill(I, TWO, x3)\n    x5 = objects(x4, T, F, T)\n    x6 = color(x2)\n    x7 = palette(x5)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, x4)\n    x10 = argmax(x8, x9)\n    x11 = remove(x10, x8)\n    x12 = lbind(ofcolor, I)\n    x13 = mapply(x12, x11)\n    x14 = subgrid(x13, x4)\n    x15 = objects(x14, T, F, T)\n    x16 = colorfilter(x15, x6)\n    x17 = ofcolor(x14, x10)\n    x18 = subgrid(x17, x14)\n    x19 = mapply(dneighbors, x16)\n    x20 = mapply(ineighbors, x16)\n    x21 = fill(x14, toindices, x19)\n    x82 = fill(x21, x10, x20)\n    x83 = ofcolor(x18, x6)\n    x84 = fill(x82, x10, x83)\n    x85 = ofcolor(x84, x11)\n    x86 = mapply(ineighbors, x21)\n    x87 = mapply(ineighbors, x22)\n    x88 = fill(x85, x11, x68)\n    O = fill(x88, x10, x67)\n    return O"], [1.0, "def solve_3f139ab6(I):\n    x1 = partition(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmin(x1, size)\n    x4 = rbind(adjacent, x3)\n    x5 = remove(x3, x1)\n    x6 = extract(x5, x4)\n    x7 = color(x6)\n    x8 = rbind(contained, x7)\n    x9 = compose(x8, color)\n    x10 = sfilter(x2, x9)\n    x11 = size(x10)\n    x12 = increment(x11)\n    x13 = interval(ZERO, x12, THREE)\n    x14 = apply(tojvec, x13)\n    x15 = fork(shift, identity, mostcolor)\n    x16 = mapply(x15, x14)\n    x17 = interval(adjacent,770, ONE)\n    x18 = pair(x17, x16)\n    x19 = compose(invert, first)\n    x20 = order(x18, x19)\n    x21 = apply(last, x20)\n    x22 = mpapply(recolor, x21, x13)\n    O = paint(I, x22)\n    return O"], [1.0, "def solve_9882237f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_c1951c89(I):\n    O = fill(I, EIGHT, x2)\n    return O"], [1.0, "def solve_8cc80e52(I):\n    x1 = partition(I)\n    x2 = compose(maximum, shape)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(colorcount, I)\n    x8 = argmin(x6, x7)\n    x9 = mostcolor(I)\n    x10 = shape(I)\n    x11 = increment(x10)\n    x12 = increment(x11)\n    x13 = canvas(x9, x12)\n    x14 = asobject(I)\n    x15 = shift(x14, UNITY)\n    x16 = paint(x13, x15)\n    x17 = repeat(identity, ONE)\n    x18 = astuple(cmirror, dmirror)\n    x19 = astuple(hmirror, vmirror)\n    x20 = combine(x18, x19)\n    x21 = combine(x17, x20)\n    x22 = fork(compose, first, last)\n    x23 = product(x21, x21)\n    x24 = apply(x22, x23)\n    x25 = ofcolor(x16, x4)\n    x26 = intersection(x15, x25)\n    x27 = canvas(x9, x10)\n    O = fill(x27, x4, x27)\n    return O"], [1.0, "def solve_e39398e2(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = matcher(color, x4)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x2, x6)\n    x8 = difference(x2, x7)\n    x9 = fill(I, TWO, x8)\n    x10 = lbind(recolor, rbind)\n    x11 = compose(x10, initset)\n    x12 = chain(x11, mostcolor, x11)\n    x13 = recolor(x4, x7)\n    x14 = objects(x9, T, T, T)\n    x15 = sfilter(x14, x13)\n    x16 = difference(x14, x15)\n    x17 = toindices(x15)\n    x18 = fork(combine, hfrontier, vfrontier)\n    x19 = mapply(x18, x16)\n    x20 = paint(x9, x19)\n    O = x11(x20)\n    return O"], [1.0, "def solve_914888a5(I):\n    x1 = colorcount(I, ZERO)\n    x2 = subtract(NINE, x1)\n    O = upscale(I, x2)\n    return O"], [1.0, "def solve_4c75b029(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = shape(x3)\n    x5 = halve(x4)\n    x6 = hupscale(x3, x5)\n    x7 =(I, x6)\n    x8 = lefthalf(x7)\n    O = tophalf(x8)\n    return O"], [1.0, "def solve_1b4c2c49(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = fgpartition(x1)\n    x3 = compose(increment, first)\n    x4 = fork(greater, last, x3)\n    x5 = size(x2)\n    x6 = interval(ZERO, x5, ONE)\n    x7 = rbind(contained, x6)\n    x8 = compose(x7, first)\n    x9 = interval(ZERO, x5, ONE)\n    x10 = pair(x4, x9)\n    x11 = sfilter(x10, x8)\n    x12 = mapply(first, x11)\n    O = fill(x1, FOUR, x12)\n    return O"], [1.0, "def solve_f8ad0d51(I):\n    x1 = trim(I)\n    x2 = decrement(x1)\n    O = upscale(x3, x2)\n    return O"], [1.0, "def solve_a4eacf40(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = toobject(x2, I)\n    return O"], [1.0, "def solve_2e7e7fd3(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = extract(x2, x4)\n    x6 = width(I)\n    x7 = subtract(x6, TWO)\n    x8 = multiply(x7, THREE)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = interval(ZERO, x8, ONE)\n    x11 = lbind(multiply, x5)\n    x12 = apply(x11, x9)\n    x13 = lbind(shift, x5)\n    x14 = mapply(x13, x12)\n    x15 = astuple(x6, x14)\n    x16 = canvas(ZERO, x15)\n    x17 = asobject(I)\n    x18 = shift(x17, x16)\n    x19 = height(I)\n    x20 = lbind(shift, x16)\n    x21 = mapply(x20, x18)\n    x22 = paint(x16, x21)\n    x23 = partition(x22)\n    x24 = lbind(shift, x13)\n    x25 = mapply(x24, x23)\n    x26 = paint(x22, x25)\n    x27 =Documentmirror(x24)\n    x28 = astuple(x6, x14)\n    x29 = shift(x27, x28)\n    O = paint(x29, x29)\n    return O"], [1.0, "def solve_0495eae9(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fork(recolor, color, x11)\n    return O"], [1.0, "def solve_abc3ee14(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x77)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [1.0, "def solve_baac5602(I):\n    x1 = remove(I, x2)\n    x2 = lbind(contained, ONE)\n    x3 = chain(flip, x2, shape)\n    x4 = sfilter(x1, x3)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = fork(multiply, height, width)\n    x8 = argmin(x6, x7)\n    O = x6(x8)\n    return O"], [1.0, "def solve_696f2028(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_beb9c07a(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = matcher(x12, ZERO)\n    x17 = extract(x7, x16)\n    x18 = height(x17)\n    x19 = rbind(ofcolor, EIGHT)\n    x20 = compose(positive, size)\n    x21 = rbind(sfilter, x20)\n    x22 = chain(x17, x21, dmirror)\n    x23 = multiply(x12, UNITY)\n    x24 = power(x22, x23)\n    x25 = x24(I)\n    x26 = objects(x25, T, F, T)\n    x27 = colorfilter(x26, ZERO)\n    x28 = rbind(canvas, T88)\n    x29 = apply(x28, x27)\n    x30 = merge(x29)\n    x31 = rbind( OFcolor, EIGHT)\n    x32 = chain(x31, x30, x3)\n    x33 = rbind(ofcolor, EIGHT)\n    x34 = fork(recolor, x33, x32)\n    x35 = mapply(x34, x21)\n    x36 = paint(x25, x35)\n    O = x10(x36)\n    return O"], [1.0, "def solve_e4f6a1d0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_f3da74d8(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_3af34b1c(I):\n    x1 = astuple(identity, identity)\n    x2 = astuple(rot90, rot270)\n    x3 = astuple(x1, x2)\n    x4 = astuple(rot180, rot180)\n    x5 = astuple(rot270, rot90)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = leastcolor(I)\n    x9 = repeat(x8, ONE)\n    x10 = rbind(rapply, I)\n    x11 = chain(x10, initset, first)\n    x12 = compose(first, x11)\n    x13 = chain(dedupe, first, x12)\n    x14 = matcher(x13, x9)\n    x15 = extract(x7, x14)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = x16(I)\n    x19 = ofcolor(x18, x8)\n    x20 = height(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = lbind(astuple, x20)\n    x23 = apply(x22, x21)\n    x24 = rbind(shoot, DOWN)\n    x25 = mapply(x24, x23)\n    x26 = fill(x18, FOUR, x25)\n    x27 = astuple(x20, x20)\n    x28 = canvas(ZERO, x27)\n    x29 = asindices(x28)\n    x30 = shift(x29, x27)\n    x31 = shape(I)\n    x32 = maximum(x31)\n    x33 = lbind(shift, x30)\n    x34 = interval(ZERO, x32, x20)\n    x35 = pair(x34, x34)\n    x36 = mapply(x33, x35)\n    x37 = fill(x26, TWO, x36)\n    O = x17(x37)\n    return O"], [1.0, "def solve_79af4174(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_45970bc8(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_6c16c983(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_d4935307(I):\n    x1 = rbind(bordering, I)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x2, x2)\n    x4 = fork(equality, toindices, box)\n    x5 = sfilter(x3, x4)\n    x6 = mfilter(x5, x2)\n    O = fill(I, T, x6)\n    return O"], [1.0, "def solve_1a84fb2d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_31c504b7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_64572e1e(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = add(TWO, x2)\n    x4 = canvas(x1, x3)\n    x5 = apply(first, x4)\n    x6 = asindices(x5)\n    x7 = shift(x6, UNITY)\n    x8 = shape(x7)\n    x9 = halve(x8)\n    x10 = increment(x9)\n    x11 = interval(ZERO, x10, ONE)\n    x12 = lbind(shift, x7)\n    x13 = rbind(multiply, x4)\n    x14 = apply(x13, x11)\n    x15 = mapply(x12, x14)\n    O = paint(x4, x15)\n    return O"], [1.0, "def solve_b6ca3d6c(I):\n    x1 = index(I, ORIGIN)\n    x2 = box(I)\n    O = fill(I, x1, x2)\n    return O"], [1.0, "def solve_aebe6f9c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_bfc33641(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = leastcolor(x1)\n    x4 = leastcolor(x2)\n    x5 = ofcolor(I, x3)\n    x6 = center(x5)\n    x7 = ofcolor(I, x4)\n    x8 = center(x7)\n    x9 = height(I)\n    x10 = width(I)\n    x11 = hfrontier(x6)\n    x12 = fill(I, x3, x11)\n    x13 = hfrontier(x8)\n    x14 = fill(x12, x4, x13)\n    x15 = decrement(x10)\n    x16 = decrement(x9)\n    x17 = halve(x9)\n    x18 = tojvec(x15)\n    x19 = connect(ORIGIN, x18)\n    x20 = fill(x14, x3, x19)\n    x21 = toivec(x16)\n    x22 = astuple(x16, x15)\n    x23 = connect(x21, x22)\n    x24 = fill(x20, x4, x23)\n    x25 = decrement(x17)\n    x26 = toivec(x25)\n    x27 = connect(ORIGIN, x26)\n    x28 = fill(x24, x3, x27)\n    x29 = tojvec(x15)\n    x30 = decrement(x17)\n    x31 = astuple(x30, x15)\n    x32 = connect(x29, x31)\n    x33 = fill(x28, x3, x32)\n    x34 = equality(x17, x12)\n    x41 = branch(x34, x22, x24)\n    O = canvas(x31, x41)\n    return O"], [1.0, "def solve_9ecddb3b(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = shape(I)\n    x3 = multiply(x2, x2)\n    x4 = canvas(ZERO, x3)\n    x5 = rbind(multiply, x2)\n    x6 = apply(x5, x1)\n    x7 = asobject(I)\n    x8 = lbind(shift, x7)\n    x9 = mapply(x8, x6)\n    O = paint(x4, x9)\n    return O"], [1.0, "def solve_bd4d6cdd(I):\n    x1 = compose(positive, size)\n    x2 = rbind(sfilter, hline)\n    x3 = chain(x1, x2, frontiers)\n    x4 = chain(size, dedupe, first)\n    x5 = chain(size, dedupe, last)\n    x6 = fork(greater, x4, x5)\n    x7 = fork(both, x3, x6)\n    x8 = astuple(identity, rot90)\n    x9 = astuple(rot180, rot270)\n    x10 = combine(x8, x9)\n    x11 = astuple(identity, rot270)\n    x12 = astuple(rot180, rot90)\n    x13 = combine(x11, x12)\n    x14 = pair(x10, x13)\n    x15 = rbind(rapply, I)\n    x16 = compose(initset, first)\n    x17 = chain(first, x15, x16)\n    x18 = compose(x7, x17)\n    x19 = extract(x14, x18)\n    x20 = first(x19)\n    x21 = last(x19)\n    x22 = x20(I)\n    x23 = first(x22)\n    x24 = repeat(x23, ONE)\n    x25 = dmirror(x24)\n    x26 = width(x22)\n    x27 = hupscale(x25, x26)\n    x28 = asobject(x27)\n    x29 = height(x22)\n    x30 = height(x28)\n    x31 = interval(ZERO, x29, x30)\n    x32 = lbind(shift, x28)\n    x33 = apply(toivec, x31)\n    x34 = mapply(x32, x33)\n    x35 = shift(x34, TWO_BY_ZERO)\n    x36 = paint(x22, x35)\n    O = x21(x36)\n    return O"], [1.0, "def solve_6d23468b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_dc3a0aba(I):\n    x1 = astuple(SIX, THREE)\n    x2 = dmirror(I)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    x14 = apply(x4, x13)\n    x15 = ofcolor(I, ZERO)\n    x16 = asindices(I)\n    x17 = shoot(ORIGIN, x16)\n    x18 = intersection(x15, x17)\n    x19 = fill(I, ZERO, x18)\n    O = replace(x19, FIVE, ZERO)\n    return O"], [1.0, "def solve_8fa45371(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_2591893f(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_c8a2b041(I):\n    x1 = subgrid(I, I)\n    O = upscale(x1, THREE)\n    return O"], [1.0, "def solve_2e9f12c9(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = matcher(size, TWO)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = other(x8, x1)\n    x10 = replace(I, x6, x1)\n    x11 = ofcolor(I, x6)\n    x12 = repeat(x9, ONE)\n    x13 = rbind(equality, x12)\n    x14 = first(I)\n    x15 = dedupe(x14)\n    x16 = x13(x15)\n    x17 = last(x15)\n    x18 = dedupe(x17)\n    x19 = x13(x18)\n    x20 = dmirror(I)\n    x21 = first(x20)\n    x22 = dedupe(x21)\n    x23 = x13(x22)\n    x24 = dmirror(I)\n    x25 = last(x24)\n    x26 = dedupe(x25)\n    x27 = x13(x26)\n    x28 = apply(last, x11)\n    x29 = apply(first, x11)\n    x30 = either(x16, x19)\n    x31 = branch(x30, x28, x29)\n    x32 = branch(x30, lbind, rbind)\n    x33 = lbind(x32, astuple)\n    x34 = branch(x30, height, width)\n    x35 = x34(I)\n    x36 = decrement(x35)\n    x37 = either(x16, x23)\n    x38 = branch(x37, ZERO, x36)\n    x39 = x33(x38)\n    x40 = apply(x39, x31)\n    O = fill(x10, x6, x40)\n    return O"], [1.0, "def solve_78faa7f4(I):\n    x1 =feca360(I)\n    x2 = asobject(I)\n    x3 = matcher(first, ZERO)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = lbind(shift, x5)\n    x7 = mapply(x6, x2)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_47be22b3(I):\n    x1 = switch(I, TWO, NEG_ONE)\n    x2 = switch(x1, THREE, FOUR)\n    x3 = switch(x2, EIGHT, NINE)\n    x4 = switch(x3, ONE, FOUR)\n    x5 = astuple(TEN, TEN)\n    x6 = canvas(ZERO, x5)\n    x7 = asindices(x6)\n    x8 = paint(x6, x7)\n    x9 = matcher(first, THREE)\n    x10 = rbind(sfilter, x9)\n    x11 = rbind(compose, initset)\n    x12 = lbind(rbind, manhattan)\n    x13 = chain(x11, x12, initset)\n    x14 = chain(x10, x13,7776)\n    x15 = apply(x14, x5)\n    x16 = fork(connect, ulcorner, lrcorner)\n    x17 = fork(connect, llcorner, urcorner)\n    x18 = fork(combine, x16, x17)\n    x19 = mapply(x18, x15)\n    O = fill(x8, EIGHT, x19)\n    return O"], [1.0, "def solve_0c1b95c0(I):\n    x1 = fgpartition(I)\n    x2 = compose(dneighbors, center)\n    x3 = fork(difference, backdrop, x2)\n    x4 = fork(equality, toindices, x3)\n    x5 = matcher(size, FIVE)\n    x6 = fork(both, x4, x5)\n    x7 = extract(x1, x6)\n    x8 = color(x7)\n    x9 = merge(x1)\n    x10 = compose(hmirror, vmirror)\n    x11 = initset(x10)\n    x12 = insert(vmirror, x11)\n    x13 = insert(hmirror, x12)\n    x14 = rapply(x13, x9)\n    x15 = ulcorner(x7)\n    x16 = lbind(subtract, x15)\n    x17 = matcher(first, x8)\n    x18 = rbind(sfilter, x17)\n    x19 = chain(x16, ulcorner, x18)\n    x20 = fork(shift, identity, x19)\n    x21 = mapply(x20, x14)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_a860361d(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_8ca81ad9(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_5d301448(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_1aef2380(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = height(x2)\n    x4 = halve(x3)\n    x5 = width(x2)\n    x6 = halve(x5)\n    x7 = ulcorner(x2)\n    x8 = lrcorner(x2)\n    x9 = shape(I)\n    x10 = maximum(x9)\n    x11 = multiply(THREE, TEN)\n    x12 = interval(ONE, x11, ONE)\n    x13 = rbind(multiply, x4)\n    x14 = apply(x13, x12)\n    x15 = rbind(multiply, x6)\n    x16 = apply(x15, x12)\n    x17 = pair(x14, x16)\n    x18 = rbind(add, x7)\n    x19 = apply(invert, x17)\n    x20 = apply(x18, x19)\n    x21 = rbind(add, x8)\n    x22 = apply(x21, x17)\n    x23 = pair(x20, x22)\n    x24 = papply(box, x23)\n    O = fill(I, x1, x24)\n    return O"], [1.0, "def solve_5db94dc5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = extract(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = last(x12)\n    x21 = lbind(subtract, x20)\n    x22 = increment(x19)\n    x23 = rbind(subtract, x22)\n    x24 = chain(x21, x23, decrement)\n    x25 = lbind(shift, x1)\n    x26 = mapply(x25, x18)\n    O = fill(I, x3, x26)\n    return O"], [1.0, "def solve_2256a6d2(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_fb6a737b(I):\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = mfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = mfilter(x4, x2)\n    x6 = shape(I)\n    x7 = add(TWO, x6)\n    x8 = canvas(ZERO, x7)\n    x9 = asobject(I)\n    x10 = shift(x9, UNITY)\n    x11 = paint(x8, x10)\n    x12 = objects(x11, T, F, T)\n    x13 = apply(color, x12)\n    x14 = rbind(contained, x13)\n    x15 = compose(minimum, x14)\n    x16 = sfilter(x1, x15)\n    x17 = paint(x11, x16)\n    x18 = objects(x11, T, F, T)\n    x19 = merge(x18)\n    x20 = cover(x17, x19)\n    x21 = paint(x20, x16)\n    O = compress(x21)\n    return O"], [1.0, "def solve_4b143fdc(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_8bb47b66(I):\n    x1 = fgpartition(I)\n    x2 = argmax(x1, size)\n    x3 = height(x2)\n    x4 = width(x2)\n    x5 = neighbors(ORIGIN)\n    x6 = toindices(x2)\n    x7 = lbind(shift, x6)\n    x8 = height(I)\n    x9 = divide(x8, x3)\n    x10 = width(I)\n    x11 = divide(x10, x4)\n    x12 = astuple(x9, x11)\n    x13 = maximum(x12)\n    x14 = increment(x13)\n    x15 = interval(ONE, x14, ONE)\n    x16 = astuple(x3, x4)\n    x17 = lbind(multiply, x16)\n    x18 = compose(crement, x17)\n    x19 = lbind(mapply, x7)\n    x20 = rbind(apply, x15)\n    x21 = lbind(rbind, multiply)\n    x22 = compose(x21, x18)\n    x23 = chain(x19, x20, x22)\n    x24 = rbind(toobject, I)\n    x25 = compose(x7, x18)\n    x26 = chain(palette, x24, x25)\n    x27 = mostcolor(I)\n    x28 = rbind(equality, x27)\n    x29 = rbind(argmin, x28)\n    x30 = compose(x29, x26)\n    x31 = fork(recolor, x30, x23)\n    x32 = mapply(x31, x5)\n    O = paint(I, x32)\n    return O"], [1.0, "def solve_a0f497d4(I):\n    x1 = ofcolor(I, SIX)\n    x2 = recolor(ONE, x1)\n    x3 = power(decrement, TWO)\n    x4 = x3(x2)\n    x5 = on108(x4, THREE)\n    x6 = matcher(size, dedupe)\n    x7 = x6(x5)\n    x8 = rbind(subgrid, I)\n    x9 = apply(x8, x5)\n    x10 = dedupe(x9)\n    x11 = lbind(fork, shift)\n    x12 = lbind(x11, x12)\n    x13 = lbind(rbind, rapply)\n    x14 = compose(x12, x13)\n    x15 = lbind(compose, x5)\n    x16 = x15(x14)\n    x17 = mapply(x16, x10)\n    O = underfill(I, EIGHT, x17)\n    return O"], [1.0, "def solve_8d9e4de7(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_407adb1d(I):\n    x1 = lbind(recolor, EIGHT)\n    x2 = compose(x1, delta)\n    x3 = fork(paint, identity, x2)\n    x4 = apply(x3, I)\n    x5 = astuple(SIX, dmirror)\n    x6 = astuple(UNITY, papply)\n    x7 = initset(x6)\n    x8 = equality(x5, x7)\n    x9 = branch(x8, identity, x4)\n    x10 = x9(I)\n    x11 = objects(x10, T, F, T)\n    x12 = colorfilter(x11, EIGHT)\n    x13 = difference(x11, x12)\n    x14 =argmax(x13, size)\n    x15 = color(x14)\n    x16 = subgrid(x14, x10)\n    x17 = trim(x16)\n    x18 = lefthalf(x17)\n    x19 = vmirror(x18)\n    x20 = astuple(x15, x19)\n    x21 = double(x20)\n    x22 = interval(ZERO, x21, ONE)\n    x23 = apply(tojvec, x22)\n    x24 = lbind(shift, x18)\n    x25 = mapply(x24, x23)\n    x26 = fill(x10, EIGHT, x25)\n    x27 = fill(x26, FOUR, x24)\n    O = x9(x27)\n    return O"], [1.0, "def solve_d14f24ae(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_fdd67056(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_db548893(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = fork(recolor, color, backdrop)\n    x5 = apply(x4, x1)\n    x6 = mfilter(x5, hline)\n    x7 = mfilter(x5, vline)\n    x8 = size(x6)\n    x9 = size(x7)\n    x10 = greater(x8, x9)\n    x11 = branch(x10, vsplit, hsplit)\n    x12 = x11(I, TWO)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = palette(x13)\n    x16 = merge(x15)\n    x17 = palette(x14)\n    x18 = intersection(x16, x17)\n    x19 = difference(x16, x18)\n    x20 = first(x19)\n    x21 = shape(x13)\n    x22 = canvas(x20, x21)\n    x23 = ofcolor(x13, x10)\n    x24 = ofcolor(x14, x10)\n    x25 = intersection(x23, x24)\n    O = fill(x22, TWO, x25)\n    return O"], [1.0, "def solve_3d56e398(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_5b6751ac(I):\n    x1 = objects(I, T, F, T)\n    x2 = height(x1)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, le, tophalf)\n    x5 = branch(x3, righthalf, x4)\n    x6 = width(x5)\n    x7 = equality(x6, ONE)\n    x8 = branch(x7, ulcorner, last)\n    x9 = x8(x5)\n    x10 = x8(x10)\n    x11 = gravitate(x9, x11)\n    x12 = shape(x11)\n    x13 = multiply(x12, x4)\n    x14 = canvas(ZERO, x13)\n    x15 = ofcolor(x14, ZERO)\n    x16 = rbind(multiply, x14)\n    x17 = apply(x16, x15)\n    x18 = lbind(shift, x15)\n    x19 = mapply(x18, x17)\n    O = fill(x14, ZERO, x19)\n    return O"], [1.0, "def solve_8ef6330b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = fork(combine, vfrontier, hfrontier)\n    x16 = x15(x14)\n    x17 = mapply(x16, x13)\n    x18 =eepply(x17, x16)\n    x19 = hmirror(x18)\n    x20 = x16(x19)\n    x21 = replace(x20, x3, x5)\n    x22 = x15(x21)\n    O = compress(x22)\n    return O"], [1.0, "def solve_e3c704de(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_a9288d1a(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, least)\n    x9 = compose(flip, x8)\n    x10 = extract(x7, x9)\n    x11 = remove(x10, x7)\n    x12 = merge(x11)\n    x13 = mostcolor(x12)\n    x14 = partition(x12)\n    x15 = ofcolor(x12, x13)\n    x16 = subgrid(x15, x12)\n    x17 = difference(x16, x15)\n    x18 = hmirror(x17)\n    x19 = replace(x18, x13, x12)\n    x20 = subgrid(x15, x19)\n    x21 = asobject(x20)\n    x22 = occurrences(x19, x21)\n    x23 = size(x22)\n    x24 = positive(x23)\n    x25 = branch(x24,hmirror, vmirror)\n    x26 = x25(x20)\n    x27 = ofcolor(x26, x13)\n    x28 = subgrid(x27, x20)\n    x29 = ofcolor(x28, x13)\n    x30 = ulcorner(x27)\n    x31 = invert(x30)\n    x32 = lrcorner(x27)\n    x33 = increment(x31)\n    x34 = shift(x29, x33)\n    x35 = fork(connect, last, last)\n    x36 = mapply(x35, x22)\n    O = fill(x14, x13, x36)\n    return O"], [1.0, "def solve_4c46e58c(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_461fe4c6(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_c6820454(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_01a1ea2e(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_c638c946(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = apply(normalize, x2)\n    x4 = astuple(NINE, NINE)\n    x5 = canvas(FIVE, x4)\n    x6 = asindices(x5)\n    x7 = box(x6)\n    x8 = center(x6)\n    x9 = lbind(contained, ZERO)\n    x10 = rbind(subtract, x8)\n    x11 = compose(x9, x10)\n    x12 = chain(outbox, outbox, initset)\n    x13 = corners(x6)\n    x14 = mapply(x12, x13)\n    x15 = difference(x7, x14)\n    x16 = inbox(x7)\n    x17 = sfilter(x16, x11)\n    x18 = combine(x15, x17)\n    x19 = fill(x5, ONE, x18)\n    x20 = objects(x19, T, F, T)\n    x21 = apply(toindices, x20)\n    x22 = lbind(matcher, normalize)\n    x23 = lbind(extract, x21)\n    x24 = chain(ulcorner, x23, x22)\n    x25 = chain(invert, ulcorner, x24)\n    x26 = fork(shift, identity, x25)\n    x27 = mapply(x26, x3)\n    O = paint(x5, x27)\n    return O"], [1.0, "def solve_3072af49(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, x5)\n    x8 = rbind(x7, x6)\n    x9 = compose(x8, x7)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [1.0, "def solve_70fb6a99(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dneighbors)\n    x9 = fork(shift, x8, x6)\n    x10 = fork(combine, x9, x3)\n    x11 = mapply(x10, x1)\n    O = paint(I, x11)\n    return O"], [1.1, "def solve_36c306d0(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_19abcbdd(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = palette(I)\n    x7 = compose(x4, x5)\n    x8 = argmin(x6, x7)\n    x9 = colorcount(I, x8)\n    x10 = positive(x9)\n    x11 = branch(x10, dmirror, identity)\n    x12 = x11(I)\n    x13 = x8(x12)\n    x14 = ofcolor(x13, x8)\n    x15 = subgrid(x14, x13)\n    x16 = adaptation(x15, x13)\n    x17 = mostcolor(x16)\n    x18 = ofcolor(x x x17)\n    x19 = hmirror(x18)\n    x20 = asobject(x19)\n    x21 = matcher(first, x17)\n    x22 = compose(flip, x21)\n    x23 = sfilter(x20, x22)\n    x24 = partition(x12)\n    x25 = sizefilter(x24, ONE)\n    x26 = apply(merge, x25)\n    x27 = argmin(x26, last)\n    x28 = rbind(subgrid, x13)\n    x29 = apply(x28, x27)\n    x30 = rbind(colorcount, x17)\n    x31 = argmin(x29, x30)\n    x32 = rightmost(x31)\n    x33 = rightmost(x28)\n    x34 = width(x33)\n    x35 =rightmost(x28)\n    x36 = leftmost(x34)\n    x37 = subtract(x32, x35)\n    x38 = decrement(x37)\n    x39 = leftmost(x33)\n    x40 = rightmost(x33)\n    x41 = subtract(x39, x40)\n    x42 = astuple(x37, x"], [1.1, "def solve_a03a27cd(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = astuple(x34, x37)\n    x39 = add(x38, UNITY)\n    x40 = initset(x39)\n    x41 = backdrop(x40)\n    "], [1.1, "def solve_3e57783e(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = subtract(x11, TWO)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract("], [1.1, "def solve_204764b3(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = compose(x4, size)\n    x6 = sfilter(x1, x5)\n    x7 = fork(pair, x4, identity)\n    x8 = chain(x1, x7, dmirror)\n    x9 = maximum(x6)\n    x10 = identity(I)\n    x11 = branch(x10,130, x9)\n    x12 = x11(I)\n    x13 = x11(x12)\n    x14 = argmin(x13, x7)\n    x15 = argmax(x13, x7)\n    x16 = width(x12)\n    x17 = decrement(x16)\n    x18 = tojvec(x17)\n    x19 = height(x12)\n    x20 = decrement(x19)\n    x21 = interval(x17, x20, ONE)\n    x22 = lbind(apply, last)\n    x23 = compose(x22, first)\n    x24 = rbind(sfilter, x23)\n    x25 = chain(positive, size, x24)\n    x26 = sfilter(x21, x25)\n    x27 = maximum(x26)\n    x28 = increment(x27)\n    x29 = interval(ZERO, x28, ONE)\n    x30 = lbind( pair, x22)\n    x31 = lbind(pair, x25)\n    x32 = compose(x30, x31)\n    x33 = apply(x32, x29)\n    x34 = lbind(sfilter, x33)\n    x35 = lbind(matcher, first)\n    x36 = compose(x34, x35)\n    x37 = chain(size, x33, x36)\n    x38 = apply(x37, x29)\n    x39 = lbind(colorcount, x12)\n    x40 = valmax(x38, x39)\n    x41 = mat"], [1.1, "def solve_f1ba0082(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_f4119771(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = combine(x25, x26)\n    x28 = intersection(x27, x23)\n    x29 = first(x28)\n    x30 = ofcolor(x23, x29)\n    x31 = ofcolor(x24, x29)\n    x32 = intersection(x30, x31)\n    x33 = first(x32)\n    x34 = matcher(first, x29)\n    x35 = compose(flip, x34)\n    x36 = sfilter(x33, x35)\n    x37 = difference(x21, x36)\n    x38 = objects(x24, T, F, T)\n    x39 = colorfilter(x38, x29)"], [1.1, "def solve_f66653b4(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = compose(flip, x33)\n    x35 = sfilter(x32, x34)\n    x36 = difference(x32, x35)\n    x37 = fill(x23, x8, x31)\n    x38 = fill(x37, x42, x36)\n    x39 = fork(connect, identity, ul"], [1.1, "def solve_aae888ec(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = ONE00000000\n    001044404900\n    31000404413\n    \"\"\"\n    x2 = trim(I)\n    x3 = decrement(x2)\n    x4 = tojvec(x3)\n    x5 = connect(ORIGIN, x4)\n    x6 = height(I)\n    x7 = equality(x6, ZERO)\n    x8 = branch(x7, x5, x6)\n    x9 = width(I)\n    x10 = decrement(x9)\n    x11 = tojvec(x10)\n    x12 = connect(x11, x9)\n    x13 = height(I)\n    x14 = decrement(x13)\n    x15 = toivec(x14)\n    x16 = connect(x15, x12)\n    x17 = width(I)\n    x18 = decrement(x17)\n    x19 = tojvec(x18)\n    x20 = connect(x19, x12)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = toivec(x22)\n    x24 = connect(x23, x18)\n    x25 = width(I)\n    x26 = decrement(x25)\n    x27 = tojvec(x26)\n    x28 = shape(I)\n    x29 = decrement(x28)\n    x30 = connect(x27, x29)\n    x31 = height(I)\n    x32 = decrement(x31)\n    x33 = toivec(x32)\n    x34 = shape(I)\n    x35 = decrement(x34)\n    x36 = connect(x33, x35)\n    x37 = fill(I, THREE, x10)\n    x38 = fill(x37, astuple, x20)\n    x39 = fill(x38, x6, x30)\n    x40 = fill(x39, TWO, x36)\n    x41 = size(x1)\n    x42 = positive(x41)\n    x43 = branch(x42, x3, x4"], [1.1, "def solve_3af703c4(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_50fc64e8(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = leastcolor(x1)\n    x4 = leastcolor(x2)\n    x5 = ofcolor(I, x3)\n    x6 = center(x5)\n    x7 = ofcolor(I, x4)\n    x8 = center(x7)\n    x9 = height(I)\n    x10 = width(I)\n    x11 = hfrontier(x6)\n    x12 = fill(I, x3, x11)\n    x13 = hfrontier(x8)\n    x14 = fill(x12, x4, x13)\n    x15 = decrement(x10)\n    x16 = decrement(x9)\n    x17 = halve(x9)\n    x18 = tojvec(x15)\n    x19 = connect(ORIGIN, x18)\n    x20 = fill(x14, x3, x19)\n    x21 = toivec(x16)\n    x22 = astuple(x16, x15)\n    x23 = connect(x21, x22)\n    x24 = fill(x20, x4, x23)\n    x25 = decrement(x17)\n    x26 = toivec(x25)\n    x27 = connect(ORIGIN, x26)\n    x28 = fill(x24, x3, x27)\n    x29 = tojvec(x15)\n    x30 = decrement(x17)\n    x31 = astuple(x30, x15)\n    x32 = connect(x29, x31)\n    x33 = fill(x28, x3, x32)\n    x34 = toivec(x17)\n    x35 = toivec(x16)\n    x36 = connect(x34, x35)\n    x37 = fill(x33, x4, x36)\n    x38 = astuple(x17, x15)\n    x39 = astuple(x16, x15)\n    x40 = connect(x38, x39)\n    O = fill(x37,"], [1.1, "def solve_9efd596f(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_e5c79d0b(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = width(x4)\n    x6 = toivec(x5)\n    x7 = index(x4, x6)\n    x8 = shape(x4)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x4, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, rot90)\n    x16 = lbind(power, rot270)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x13)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x19)\n    x24 = uppermost(x12)\n    x25 = lbind(add, x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = lbind(multiply, x27)\n    x29 = chain(toivec, x25, x28)\n    x30 = fork(shift, x23, x29)\n    x31 = compose(asobject, x22)\n    x32 = uppermost(x12)\n    x33 = lbind(subtract, x32)\n    x34 = height(x12)\n    x35 = increment(x34)\n    x36 = lbind(multiply, x35)\n    x37 = chain(toivec, x33, x36)\n    x38 = fork(shift, x31, x37)\n    x39 = fork(combine"], [1.1, "def solve_1bcbf7f3(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = fork(recolor, x40, identity)\n    x42 = mapply"], [1.1, "def solve_fcbd5e79(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = rot270(I)\n    x2 = rot90(I)\n    x3 = rot270(x2)\n    x4 = rbind(order, identity)\n    x5 = apply(x4, x1)\n    x6 = apply(x4, x2)\n    x7 = compose(positive, size)\n    x8 = lbind(interval, ZERO)\n    x9 = rbind(x8, ONE)\n    x10 = compose(x7, x9)\n    x11 = apply(x10, x5)\n    x12 = lbind(matcher, SEVEN)\n    x13 = compose(x12, x4)\n    x14 = lbind(matcher, EIGHT)\n    x15 = compose(x14, x4)\n    x16 = fork(sfilter, identity, x13)\n    x17 = fork(sfilter, identity, x15)\n    x18 = compose(x16, x17)\n    x19 = rbind(shoot, UNITY)\n    x20 = rbind(shoot, NEG_UNITY)\n    x21 = fork(combine, x19, x20)\n    x22 = compose(x21, x18)\n    x23 = rbind(shoot, DOWN_LEFT)\n    x24 = rbind( visitmatching, ONE)\n    x25 = chain(x23, x24, x2)\n    x26 = compose(x25, x18)\n    x27 = fork(sfilter, identity, x26)\n    x28 = compose(x27, x15)\n    x29 = fork(difference, x28, x12)\n    x30 = compose(x28, x29)\n    x31 = fork(shift, x30, x17)\n    x32 = compose(decrement, numcolors)\n    x33 = fork(add, x32, x31)\n    x34 = fork(\n    intersection, x33, x39a)\n    x35 = chain(size, x34, xdmirror)\n    x36 = matcher(x35, ZERO)\n    x37 = lbind(apply, vmirror)\n    "], [1.1, "def solve_56507e47(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mostcolor(I)\n    x3 = shape(I)\n    x4 = canvas(x2, x3)\n    x5 = hconcat(I, x4)\n    x6 = objects(x5, F, F, T)\n    x7 = argmin(x6, size)\n    x8 = argmax(x6, size)\n    x9 = remove(x7, x6)\n    x10 = presents(x7, x9)\n    x11 = leftmost(x7)\n    x12 = leftmost(x8)\n    x13 = greater(x11, x12)\n    x14 = uppermost(x7)\n    x15 = uppermost(x8)\n    x16 = greater(x14, x15)\n    x17 = uppermost(x7)\n    x18 = equality(x13, x17)\n    x19 = branch(x18, x12, x13)\n    x20 = branch(x18, x8, x19)\n    x21 = branch(x18, x7, x20)\n    x22 = x21(I)\n    x23 = 17827(x22)\n    x24 = shape(x22)\n    x25 = canvas(x2, x24)\n    x26 = normalize(x22)\n    x27 = shift(x26, x24)\n    x28 = paint(x25, x27)\n    x29 = rbind(toobject, x28)\n    x30 = chain(x29, palette, x28)\n    x31 = matcher(x30, x8)\n    x32 = extract(x29, x31)\n    x33 = x32(x72)\n    x34 = interval(ZERO, NINE, ONE)\n    x35 = pair(x34, x34)\n    x36 = lbind(colorcount\n    3889033338\n    x369443289\n    3853034303\n    8833 m8388\n    \"\"\"\n    x1 = objects(x38, F, F, T)\n    x2 = rbind(colorcount, x8)\n    x3"], [1.1, "def solve_6e7ba30b(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = crop(I, ORIGIN, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = matcher(first, ZERO)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = shape(x5)\n    x7 = multiply(x6, x6)\n    x8 = add(x7, DOWN)\n    x9 = canvas(ZERO, x8)\n    x10 = multiply(x5, x6)\n    x11 = add(x10, x6)\n    x12 = lbind(multiply, x6)\n    x13 = chain(x12, double, partition)\n    x14 = lbind(add, x4)\n    x15 = compose(invert, x14)\n    x16 = lbind(multiply, x11)\n    x17 = compose(invert, x16)\n    x18 = fork(add, x15, x17)\n    x19 = fork(equality, toindices, x18)\n    x20 = sfilter(x15, x19)\n    x21 = lbind(multiply, x6)\n    x22 = compose(invert, x21)\n    x23 = fork(add, x20, x22)\n    x24 =28222244mult13)\n    x25 = decrement(x24)\n    x26 = lbind(multiply, x11)\n    x27 = compose(invert, x26)\n    x28 = fork(add, x23, x27)\n    x29 = rbind(contained, x47)\n    x30 = compose(x29, first)\n    x31 = rbind(added, x35)\n    x32 = compose(x31, first)\n    x33 = fork(add, x32, x30)\n    x34 = chain(ineighbors, x23, x33)\n    x35 = fork(astuple, x34, x32)\n    x36 = canvas(ZERO, x6)\n    x37 = paint(x36, x35)\n    x38 = fork(connect,"], [1.1, "def solve_1124c176(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dae)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)\n"], [1.1, "def solve_715f57e2(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(flip, x6)\n    x9 = fork(both, x3, x8)\n    x10 = sfilter(x1, x9)\n    x11 = compose(size, first)\n    x12 = decrement(x11)\n    x13 =8853alf(x10)\n    x14 = toindices(x13)\n    x15 = rbind(repeat, x12)\n    x16 = compose(x15, first)\n    x17 = lbind(contained, ONE)\n    x18 = chain(x17, x16, x first)\n    x19 = compose(x18, x10)\n    x20 = compose(x15, x19)\n    x21 = fork(contained, x20, x17)\n    x22 = compose(x21, x10)\n    x23 = fork(add, x28, astuple)\n    x24 = fork(add, x23, x22)\n    x25 = Tuple(x14, x24)\n    x26 = astuple(vmatching, x25)\n    x27 = fork(either, x24, x26)\n    x28 = compose(flip, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(invert, x29, x17)\n    x31 = decrement(x26)\n    x32 = astuple(x31, x30)\n    x33 = shift(x19, x32)\n    x34 = paint(I, x33)\n    x35 = toindices(x33)\n    x36 = rbind(manhattan, x35)\n    x37 = compose(x36, initset)\n    x38 = argmax(x35, x37)\n    x39 = first(x"], [1.1, "def solve_45e4654b(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = fork(vsplit, identity, height)\n    x5 = chain(asobject, first, x4)\n    x6 = mostcolor(I)\n    x7 = lbind(chain, numcolors)\n    x8 = lbind(x7, x5)\n    x9 = lbind(chain, color)\n    x10 = lbind(x9, x5)\n    x11 = rbind(rapply, I)\n    x12 = compose(initset, x8)\n    x13 = chain(first, x11, x12)\n    x14 = rbind(rapply, I)\n    x15 = compose(initset, x10)\n    x16 = chain(first, x14, x15)\n    x17 = matcher(x13, ONE)\n    x18 = matcher(x16, x6)\n    x19 = compose(flip, x18)\n    x20 = fork(sfilter, identity, x19)\n    x21 = compose(asobject, x20)\n    x22 = apply(x21, x3)\n    x23 = dmirror(x22)\n    x24 = hmirror(x23)\n    x25 = vmirror(x24)\n    x26 = width(x22)\n    x27 = hupscale(x25, x26)\n    x28 = toobject(x27, x23)\n    x29 = matcher(x28, ZERO)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x25, x30)\n    x32 = hmirror(x31)\n    x33 = vmirror(x32)\n    x34 = sfilter(x33, x30)\n    x35 = vmirror(x34)\n    x36 = hmirror(x35)\n    x37 = cellwise(x22, x33, x36)\n    x38 = product(x37, x37)\n"], [1.1, "def solve_02a2e256(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_1e512a9c(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = size(x3)\n    x5 = positive(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = frontiers(I)\n    x9 = x6(I)\n    x10 = size(x8)\n    x11 = size(x9)\n    x12 = greater(x10, x11)\n    x13 = branch(x12, identity, vmirror)\n    x14 = x13(I)\n    x15 = ofcolor(x14, NEG_ONE)\n    x16 = subgrid(x15, x14)\n    x17 = LEastuple(x16, x15)\n    x18 = hsplit(x17, x181)\n    x19 = lbind(ofcolor, x14)\n    x20 = compose(x19, last)\n    x21 = fork(sfilter, last, x20)\n    x22 = chain(x15, x21, first)\n    x23 = rbind(contained, x15)\n    x24 = compose(x23, last)\n    x25 = sfilter(x16, x24)\n    x26 =bordering(x25)\n    x27 = mostcolor(x26)\n    x28 = matcher(first, x27)\n    x29 = compose(flip, x28)\n    x30 = rbind(sfilter, x29)\n    x31 = lbind(recolor, x27)\n    x32 = compose(x31, x30)\n    x33 = chain(x19, x32, x29)\n    x34 = ofcolor(x14, x27)\n    x35 = compose(x34, x33)\n    x36 = ofcolor(x14, x27)\n    x37 = fork(combine, x35, x36)\n    x38 = apply(x37, x34)\n    x39 = fork(recolor, x33, x38)\n    x40 = mapply(x39,"], [1.1, "def solve_a3eb87ac(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = interval(ONE, x1, ONE)\n    x3 = connect(ORIGIN, DOWN)\n    x4 = connect(ORIGIN, ZERO_BY_TWO)\n    x5 = combine(x3, x4)\n    x6 = astuple(NEG_TWO, TWO)\n    x7 = lbind(multiply, x6)\n    x8 = toivec(NEG_TWO)\n    x9 = apply(x7, x2)\n    x10 = rbind(subtract, TWO_BY_ZERO)\n    x11 = fork(shift, identity, x10)\n    x12 = repeat(x11, TWO)\n    x13 = lbind(repeat, x12)\n    x14 = compose(x13, width)\n    x15 = rbind(paint, x14)\n    x16 = lbind(recolor, ZERO)\n    x17 = compose(x16, x15)\n    x18 = fork(paint, x17, x15)\n    x19 = compose(x13, first)\n    x20 = rbind(argmax, x19)\n    x21 = compose(x20, x18)\n    x22 = apply(x21, x3)\n    x23 = fork(common, x21, x22)\n    x24 = remove(x15, x23)\n    x25 = totuple(x24)\n    x26 = first(x25)\n    x27 = last(x25)\n    x28 = color(x26)\n    x29 = mostcolor(I)\n    x30 = shape(x26)\n    x31 = canvas(x29, x30)\n    x32 = fill(x31, x27, x26)\n    x33 = asobject(x12)\n    x34 = ofcolor(x33, x29)\n    x35 = difference(x34, x34)\n    x36 = shape(x28)\n    x37 = lbind(shift, x33)\n    x38 = shift(x34, x36)\n    x39 = lbind(paint, x33)\n    "], [1.1, "def solve_596d6b46(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_d7b7de6a(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = index(x3, DOWN)\n    x5 = portrait(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(x3)\n    x8 = lefthalf(x7)\n    x9 = righthalf(x7)\n    x10 = palette(x8)\n    x11 = palette(x9)\n    x12 = compose(flip, x5)\n    x13 = extract(x10, x12)\n    x14 = extract(x11, x13)\n    x15 = other(x10, x14)\n    x16 = ofcolor(x8, x15)\n    x17 = last(x16)\n    x18 = replace(x8, x14, x17)\n    x19 = leftmost(x16)\n    x20 = lbind(downscale, x19)\n    x21 = compose(x20, toindices)\n    x22 = x21(x18)\n    x23 = rbind(upscale, x22)\n    x24 = chain(x23, halve, width)\n    x25 = rbind(branch, x34)\n    x26 = rbind(x25, x24)\n    x27 = chain(size, dedupe, x26)\n    x28 = rbind(branch, x49)\n    x29 = rbind(x28, x27)\n    x30 = chain(x29, x26, x23)\n    x31 = fork(combine, x27, x30)\n    x32 = fork(add, x24, x31)\n    x33 = fork(insert, x32, palette)\n    x34 = compose(backdrop, x33)\n    x35 = mapply(x34, x18)\n    x36 = double(x19)\n    x37 = rbind(greater, x36)\n    x38 = compose(x37, first)\n    x39 = chain(invert, x35, x38)"], [1.1, "def solve_8c48ed19(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, corners)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, x2)\n    x5 = fgpartition(I)\n    x6 = merge(x5)\n    x7 = backdrop(x4)\n    x8 = toobject(x7, I)\n    x9 = difference(x6, x8)\n    x10 = toobject(x9, I)\n    x11 = color(x4)\n    x12 = color(x10)\n    x13 = ofcolor(I, x11)\n    x14 = ulcorner(x4)\n    x15 = ulcorner(x10)\n    x16 = subtract(x14, x15)\n    x17 = leftmost(x16)\n    x18 = rightmost(x16)\n    x19 = subtract(x17, x18)\n    x20 = lowermost(x16)\n    x21 = leftmost(x16)\n    x22 = subtract(x20, x21)\n    x23 = astuple(x22, x19)\n    x24 = ulcorner(x7)\n    x25 = ulcorner(x7)\n    x26 = subtract(x24, x25)\n    x27 = astuple(x26, x19)\n    x28 = invert(x27)\n    x29 = double(x28)\n    x30 = astuple(x22, x19)\n    x31 = cover(I, x30)\n    x32 = downscale(x31, x29)\n    x33 = ofcolor(x32, x11)\n    x34 = ulcorner(x3)\n    x35 = increment(x34)\n    x36 = rbind(subtract, x35)\n    x37 = chain(x36, size, first)\n    x38 = interval(e26, x37, ONE)\n    x39 = sfilter(x38, x37)\n    x40 = apply(normalize, x39)\n    x41 = rbind(colorcount, x11)\n    x42"], [1.1, "def solve_329f378a(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x2, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, x4)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x6, x2)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_efa33aa6(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_93912620(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_de576dac(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmin(x2, size)\n    x4 = color(x3)\n    x5 = leftmost(x3)\n    x6 =85(I)\n    x7 = color(x3)\n    x8 = leftmost(x3)\n    x9 =greater(x8, x5)\n    x10 = greater(x5, x9)\n    x11 = branch(x10, x7, x9)\n    x12 = x11(I)\n    x13 = color(x12)\n    x14 = subgrid(x12, I)\n    x15 = leftmost(x12)\n    x16 = rightmost(x12)\n    x17 = subtract(x15, x16)\n    x18 = add(x15, x17)\n    x19 = urcorner(x12)\n    x20 = shoot(x19, UNITY)\n    x21 = add(x29, x20)\n    x22 = llcorner(x12)\n    x23 = shoot(x22, DOWN_LEFT)\n    x24 =44877(x14)\n    x25 = combine(x23, x24)\n    x26 = combine(x21, x25)\n    x27 = downscale(x12, x19)\n    x28 = astuple(x31, x26)\n    x29 = canvas(x11, x28)\n    x30 = interval(ZERO, x12, ONE)\n    x31 = invert(x15)\n    x32 = shift(x30, x31)\n    x33 = asobject(x32)\n    x34 = matcher(first, x11)\n    x35 = compose(flip, x34)\n    x36 = sfilter(x33, x35)\n    x37 = lbind(shift, x27)\n    x38 = height(x12)\n    x39 = astuple(x37, x38)\n    x40 = x37(x39)\n    x41 = width(x12)\n    x42 = astuple(x44,"], [1.1, "def solve_d2c1c10b(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = chain(size, dedupe, first)\n    x9 = matcher(x8, ONE)\n    x10 = compose(first, cmirror)\n    x11 = chain(size, dedupe, x10)\n    x12 = matcher(x11, ONE)\n    x13 = fork(both, x9, x12)\n    x14 = rbind(rapply, I)\n    x15 = compose(initset, first)\n    x16 = chain(first, x14, x15)\n    x17 = compose(x13, x16)\n    x18 = extract(x7, x17)\n    x19 = first(x18)\n    x20 = last(x18)\n    x21 = x19(I)\n    x22 = width(x21)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = index(x21, x24)\n    x26 = asobject(x21)\n    x27 = matcher(first, x25)\n    x28 = compose(flip, x27)\n    x29 = sfilter(x26, x28)\n    x30 = hperiod(x29)\n    x31 = width(x21)\n    x32 = increment(x31)\n    x33 = interval(ZERO, x32, x30)\n    x34 = apply(tojvec, x33)\n    x35 = lbind(shift, x29)\n    x36 = mapply(x35, x34)\n    x37 = index(x21, x won)\n    x38 = lbind(shift, x26)\n    x39 = mapply(x38, x37)\n    x40 = combine(x36, x39)"], [1.1, "def solve_e5a6c3f3(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_552d11db(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_0d0e45b6(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_8478e970(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_cfeca1f0(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, FIVE)\n    x4 = astuple(FOUR, FOUR)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = asindices(x5)\n    x7 = rbind(toobject, I)\n    x8 = lbind(shift, x6)\n    x9 = compose(x7, x8)\n    x10 = multiply(x3, FIVE)\n    x11 = interval(ZERO, x10, FIVE)\n    x12 = apply(tojvec, x11)\n    x13 = apply(x9, x12)\n    x14 = matcher(numcolors, ONE)\n    x15 = fork(equality, identity, hmirror)\n    x16 = compose(flip, x15)\n    x17 = lbind(index, I)\n    x18 = compose(x17, ulcorner)\n    x19 = lbind(add, DOWN)\n    x20 = chain(x17, x19, ulcorner)\n    x21 = fork(equality, x18, x20)\n    x22 = compose(flip, x21)\n    x23 = fork(either, x14, x16)\n    x24 = fork(either, x23, x22)\n    x25 = compose(flip, x24)\n    x26 = lbind(multiply, TWO)\n    x27 = compose(x26, x14)\n    x28 = lbind(multiply, FOUR)\n    x29 = compose(x28, x16)\n    x30 = fork(add, x27, x29)\n    x31 = lbind(multiply, THREE)\n    x32 = compose(x31, x22)\n    x33 = lbind(multiply, EIGHT)\n    x34 = compose(x33, x25)\n    x35 = fork(add, x32, x34)\n    x36 = fork(add, x30, x35)\n    x37 = apply(x36, x13)\n    x38 = rbind(repeat,"], [1.1, "def solve_136c7692(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x1, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18,"], [1.1, "def solve_e581fd5d(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = insert(x8, x11)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = subgrid(x13, I)\n    x16 = width(x15)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = output(x17, x14)\n    x19 = height(x15)\n    x20 = interval(ZERO, x19, ONE)\n    x21 = pair(x18, x20)\n    x22 = sfilter(x21, x18)\n    x23 = first(x22)\n    x24 = height(x15)\n    x25 = interval(ZERO, x24, ONE)\n    x26 = pair(x23, x25)\n    x27 = urcorner(x28)\n    x28 = matcher(first, x3)\n    x29 = rbind(sfilter, x28)\n    x30 = compose(first, last)\n    x31 = chain(flip, x29, x30)\n    x32 = asobject(x27)\n    x33 = matcher(first, x3)\n    x34 = sfilter(x32, x33)\n    x35 = increment(x34)\n    x36 = width(x15)\n    x37 = interval(ZERO, x36, x35)\n    x38 = multiply(x37, x29)\n    x39 = lbind(apply, double)\n    x40 = lbind(shift, x33)\n    x41 = pair(x38, x40)\n    x42 ="], [1.1, "def solve_c8789a13(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = interval(TWO, FIVE, ONE)\n    x4 = rbind(shift, RIGHT)\n    x5 = rbind(shift, LEFT)\n    x6 = rbind(shift, UP)\n    x7 = rbind(shift, DOWN)\n    x8 = lbind(fork, intersection)\n    x9 = lbind(x8, identity)\n    x10 = lbind(rbind, shift)\n    x11 = compose(x9, x10)\n    x12 = compose(x11, tojvec)\n    x13 = chain(x11, tojvec, invert)\n    x14 = compose(x11, toivec)\n    x15 = chain(x11, toivec, invert)\n    x16 = lbind(compose, initset)\n    x17 = lbind(rbind, rapply)\n    x18 = lbind(chain, first)\n    x19 = lbind(compose, x5)\n    x20 = x16(x12)\n    x21 = rbind(compose, x20)\n    x22 = lbind(rbind, mapply)\n    x23 = chain(x21, x22, x17)\n    x24 = lbind(compose, x4)\n    x25 = x16(x13)\n    x26 = rbind(compose, x25)\n    x27 = x23(x10)\n    x28 = x27(x14)\n    x29 = x27(x divide)\n    x30 = branch(x26, x27, x28)\n    x31 = objects(I, T, T, T)\n    x32 = apply(x30, x31)\n    x33 = rbind(interval, ONE)\n    x34 = lbind(NEG_ONE)\n    x35 = chain(x33, x34, x30)\n    x36 = apply(x35, x32)\n    x37 = lbind(recolor, x1)\n    x38 = apply(x37, x36)\n    x39 = p"], [1.1, "def solve_648dd7c9(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = insert(x14, x24)\n    x26 = width(x9)\n    x27 = halve(x26)\n    x28 = tojvec(x27)\n    x29 = height(x9)\n    x30 = decrement(x29)\n    x31 = insert(x30, x30)\n    x32 = width(x9)\n    x33 = halve(x32)\n    x34 = tojvec(x33)\n    x35 = height(x9)\n    x36 = decrement(x35)\n    x37 = insert(x34, x36)\n    x38 = height(x10)\n    x39 = height(x28)\n    x40 = divide(x38, x39)\n    x41 = width(x10)\n    x42 = halve(x31)\n    x43 = tojvec(x42)\n    x44 = height(x10)\n    "], [1.1, "def solve_e00c3330(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = astuple(dmirror, cmirror)\n    x2 = astuple(hmirror, identity)\n    x3 = combine(x1, x2)\n    x4 = fork(vsplit, identity, height)\n    x5 = chain(asobject, first, x4)\n    x6 = mostcolor(I)\n    x7 = lbind(chain, numcolors)\n    x8 = lbind(x7, x5)\n    x9 = lbind(chain, color)\n    x10 = lbind(x9, x5)\n    x11 = rbind(rapply, I)\n    x12 = compose(initset, x8)\n    x13 = chain(first, x11, x12)\n    x14 = rbind(rapply, I)\n    x15 = compose(initset, x10)\n    x16 = chain(first, x14, x15)\n    x17 = matcher(x13, ONE)\n    x18 = matcher(x16, x6)\n    x19 = compose(flip, x18)\n    x20 = fork(both, x17, x19)\n    x21 = argmax(x3, x20)\n    x22 = x21(I)\n    x23 = x5(x22)\n    x24 = color(x23)\n    x25 = palette(x22)\n    x26 = remove(x24, x25)\n    x27 = other(x26, x6)\n    x28 = objects(x22, T, T, T)\n    x29 = colorfilter(x28, x27)\n    x30 = ofcolor(x22, x24)\n    x31 = ofcolor(x22, x6)\n    x32 = mapply(neighbors, x31)\n    x33 = mapply(neighbors, x32)\n    x34 = lowermost(x30)\n    x35 = dneighbors(ORIGIN)\n    x36 = remove(DOWN, x35)\n    x37 = rbind(mapply, x36)\n    x38 = lbind(chain, x37)\n    x"], [1.1, "def solve_84551f44(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_f950905b(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, corners)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = fgpartition(I)\n    x6 = merge(x5)\n    x7 = backdrop(x4)\n    x8 = toobject(x7, I)\n    x9 = difference(x6, x8)\n    x10 = mostcolor(I)\n    x11 = inbox(x4)\n    x12 = backdrop(x11)\n    x13 = toobject(x12, I)\n    x14 = matcher(first, x10)\n    x15 = compose(flip, x14)\n    x16 = sfilter(x13, x15)\n    x17 = subgrid(x9, I)\n    x18 = palette(x16)\n    x19 = order(x18, identity)\n    x20 = lbind(colorcount, x16)\n    x21 = apply(x20, x19)\n    x22 = lbind(colorcount, x9)\n    x23 = apply(x22, x19)\n    x24 = pair(x21, x23)\n    x25 = fork(divide, first, last)\n    x26 = apply(x25, x24)\n    x27 = mostcommon(x26)\n    x28 = lbind(colorcount, x16)\n    x29 = lbind(colorcount, x9)\n    x30 = fork(divide, x28, x29)\n    x31 = matcher(x30, x27)\n    x32 = palette(x9)\n    x33 = sfilter(x32, x31)\n    x34 = rbind(contained, x33)\n    x35 = compose(x34, first)\n    x36 = sfilter(x16, x35)\n    x37 = sfilter(x9, x35)\n    x38 = height(x36)\n    x39 = height(x37)\n    x40 = divide(x38, x39)\n    x41 = width(x36)\n    x42"], [1.1, "def solve_7222b097(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_cc568ded(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = width(x4)\n    x6 = toivec(x5)\n    x7 = index(x4, x6)\n    x8 = shape(x4)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x4, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, rot90)\n    x16 = lbind(power, rot270)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x13)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x19)\n    x24 = uppermost(x12)\n    x25 = lbind(add, x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = lbind(multiply, x27)\n    x29 = chain(toivec, x25, x28)\n    x30 = fork(shift, x23, x29)\n    x31 = compose(asobject, x22)\n    x32 = uppermost(x12)\n    x33 = lbind(subtract, x32)\n    x34 = height(x12)\n    x35 = increment(x34)\n    x36 = lbind(multiply, x35)\n    x37 = chain(toivec, x33, x36)\n    x38 = fork(shift, x31, x37)\n    x39 = fork(combine"], [1.1, "def solve_472e902c(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(argout, x18)\n    x20 = apply(x17, x19)\n    x21 = combine(x16, x20)\n    x22 = fill(I, THREE, x21)\n    x23 = asindices(x22)\n    x24 = shift(x23, x2)\n    x25 = fork(combine, hfrontier, vfrontier)\n    x26 = x25(x24)\n    x27 = tojvec(x2)\n    x28 = interval(ZERO, x27, ONE)\n    x29 = paint(x22, x28)\n    x30 = initset(x2)\n    x31 = insert(x62, x30)\n    x32 = insert(x26, x31)\n    x33 = size(x32)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = apply(tojvec, x34)\n    x36 = apply(numcolors, x35)\n    x37 = matcher(equality, ZERO)\n    x38 = lbind(be94 mostcolor(I)\n    "], [1.1, "def solve_ee614b31(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = ONE(I)\n    x2 =999(connect, sender3de236\n    x3 = apply(initset, x1)\n    x4 = rbind(shoot, UNITY)\n    x5 = mapply(x4, x3)\n    x6 = fill(x1, EIGHT, x5)\n    x7 = index(I, x4)\n    x8 = equality(x7, ZERO)\n    x9 = branch(x8, vsplit, hsplit)\n    x10 = shape(I)\n    x11 = maximum(x10)\n    x12 = index(I, x11)\n    x13 =559999(I, x6)\n    x14 = add(x13, x11)\n    x15 = initset(x14)\n    x16 = lbind(96, x11)\n    x17 = rbind(apply, x16)\n    x18 = compose(x17, x9)\n    x19 = lbind(compose, flip)\n    x20 = lbind(matcher, first)\n    x21 = compose(x19, x20)\n    x22 = lbind(rbind, sfilter)\n    x23 = lbind(compose, x25)\n    x24 = chain(x22, x23, x21)\n    x25 = lbind( fork, greater)\n    x26 = compose(x25, x14)\n    x27 = compose(x25, x16)\n    x28 = fork(add, x26, x27)\n    x29 = fork(add, x25, x28)\n    x30 = fork(connect, x29, x21)\n    x31 = fork(contained, x30, x22)\n    x32 = fork(contained, x31, x26)\n    x33 = fork(either, x30, x32)\n    x34 = matcher(x33, ZERO)\n    x35 = extract(x32, x34)\n    x35 = first(x35)\n    x36 = last(x35)\n    x37 = palette(I)\n    x38 =either(x37, x40)\n    x39 ="], [1.1, "def solve_57de1c1d(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(tophalf, x3)\n    x5 = mapply(tojvec, x4)\n    x6 = palette(I)\n    x7 = objects(x6, T, F, F)\n    x8 = colorfilter(x7, ZERO)\n    x9 = sfilter(x8, square)\n    x10 = compose(even, height)\n    x11 = sfilter(x9, x10)\n    x12 = difference(x9, x11)\n    x13 = merge(x12)\n    x14 = lbind(colorcount, x13)\n    x15 = argmin(x11, x14)\n    x16 = objects(x6, T, F, F)\n    x17 = colorfilter(x16, x15)\n    x18 = compose(maximum, shape)\n    x19 = lbind(apply, x18)\n    x20 = lbind(colorfilter, x17)\n    x21 = chain(maximum, x19, palette)\n    x22 = matcher(x21, x15)\n    x23 = sfilter(x17, x22)\n    x24 = rbind(shoot, UNITY)\n    x25 = mapply(x24, x23)\n    x26 = underfill(x17, x15, x25)\n    x27 = objects(x26, T, F, F)\n    x28 = colorfilter(x27, x15)\n    x29 = rbind(bordering, I)\n    x30 = mfilter(x28, x29)\n    x31 = combine(x28, x30)\n    x32 = mapply(toindices, x31)\n    x33 = difference(x32, x31)\n    x34 = toobject(x33, I)\n    x35 = apply(x38, x34)\n    x36 = rbind(313484b58, x35)\n    x37 = chain(palette, x36,198)\n    x38 = rbind(contained,"], [1.1, "def solve_51d83ee1(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = compose(x4, size)\n    x6 = compose(x1, x5)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x200, x7, dmirror)\n    x9 = objects(I, T, F, F)\n    x10 = rbind(colorcount, ZERO)\n    x11 = valmax(x10, x6)\n    x12 = matcher(x6, x11)\n    x13 = sfilter(x19, x12)\n    x14 = compose(maximum, shape)\n    x15 = argmin(x13, x14)\n    x16 = apply(first, x13)\n    x17 = rbind(adjacent, x15)\n    x18 = apply(x17, x16)\n    x19 = sfilter(x16, x18)\n    x20 = rbind(adjacent, x15)\n    x21 = remove(x8, x19)\n    x22 = extract(x21, x12)\n    x23 = first(x22)\n    x24 = apply( last, x22)\n    x25 = height(x23)\n    x26 = decrement(x25)\n    x27 = apply(last, x22)\n    x28 = vupscale(x23, x27)\n    x29 = asobject(x28)\n    x30 = hperiod(x29)\n    x31 = index(I, x30)\n    x32 = objects(x29, T, F, F)\n    x33 = rbind(multiply, LEFT)\n    x34 = apply(x33, x32)\n    x35 = rbind(add, RIGHT)\n    x36 = apply(x35, x34)\n    x37 = pair(x26, x36)\n    x38 = sfilter(x37, x28)\n    x39 = apply(last, x38)\n    x40 = asobject"], [1.1, "def solve_79f42bbf(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    x3 = add(TWO, x2)\n    x4 = canvas(x1, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = paint(x4, x6)\n    x8 = double(SIX)\n    x9 = astuple(ONE, x8)\n    x10 = connect(UNITY, x9)\n    x11 = outbox(x10)\n    x12 = backdrop(x11)\n    x13 = recolor(x1, x12)\n    x14 = recolor(THREE, x10)\n    x15 = lbind(shift, x14)\n    x16 = lbind(mapply, x15)\n    x17 = rbind(occurrences, x13)\n    x18 = compose(x16, x17)\n    x19 = fork(paint, identity, x18)\n    x20 = x19(x7)\n    x21 = ofcolor(x20, THREE)\n    x22 = dmirror(x7)\n    x23 = x19(x22)\n    x24 = dmirror(x23)\n    x25 = ofcolor(x24, THREE)\n    x26 = combine(x21, x25)\n    x27 = fill(x7, THREE, x26)\n    x28 = astuple(TWO, ONE)\n    x29 = dneighbors(UNITY)\n    x30 = remove(x28, x29)\n    x31 = recolor(x1, x30)\n    x32 = initset(UNITY)\n    x33 = recolor(THREE, x32)\n    x34 = combine(x31, x33)\n    x35 = recolor(x1, x34)\n    x36 = astuple(ONE, THREE)\n    x37 = initset(x36)\n    x38 = insert(ZERO_BY_TWO, x37)\n    x39 = insert(RIGHT, x38)\n    x40 = insert(DOWN, x39)\n    x41 ="], [1.1, "def solve_3436f7c9(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, identity, dmirror)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = apply(first, x22)\n    x24 = lbind(sfilter, x21)\n    x25 = compose(first, last)\n    x26 = lbind(matcher, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x27, x23)\n    x29 = lbind(shift, x15)\n    x30 = chain(x29, toivec, uppermost)\n    x31 = matcher(first, x18)\n    x32 = rbind(sfilter, x31)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(toindices, x32, x30)\n    x36 = chain(x33, x34, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = compose(color, x37)\n    x39 = compose(x32, x30)\n    x40 = fork(recolor, x38, x39)\n    x41 = fork(other, palette,"], [1.1, "def solve_88da6077(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 =8872501578\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = tojvec(x5)\n    x7 = intersection(x3, x6)\n    x8 = height(I)\n    x9 = height(x2)\n    x10 = greater(x8, x9)\n    x11 = leftmost(x7)\n    x12 = interval(x11, x12, ONE)\n    x13 = palette(I)\n    x14 = lbind(power, TWO)\n    x15 = rbind(rapply, x13)\n    x16 = compose(initset, x15)\n    x17 = chain(first, x14, x16)\n    x18 = multiply(TEN, THREE)\n    x19 = interval(ZERO, x18, ONE)\n    x20 = pair(x19, x15)\n    x21 = apply(x17, x20)\n    x22 = astuple(x6, x6)\n    x23 = repeat(x22, ONE)\n    x24 = lbind(pair, x21)\n    x25 = compose(initset, x24)\n    x26 = chain(first, x24, x25)\n    x27 = apply(x26, x21)\n    x28 = astuple(x6, x6)\n    x29 = repeat(x28, ONE)\n    x30 = combine(x23, x29)\n    x31 = apply(x20, x30)\n    x32 = combine(x3, x31)\n    x33 = apply(x22, x32)\n    x34 = lbind(colorcount, I)\n    x35 = apply(x34, x33)\n    x36 = lbind(colorcount, I)\n    x37 = apply(x36, x35)\n    x38 = lbind(colorcount, I)\n    x39 = apply(x38, x37)\n    x40 = lbind(colorcount, I)\n    x41 = apply(x40, x"], [1.1, "def solve_129ef3f2(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, ONE)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)"], [1.1, "def solve_a2c70c87(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = leastcolor(I)\n    x9 = rbind(ofcolor, x8)\n    x10 = rbind(rapply, I)\n    x11 = chain(first, x10, initset)\n    x12 = chain(hline, x9, x11)\n    x13 = rbind(ofcolor, x8)\n    x14 = rbind(rapply, I)\n    x15 = chain(first, x14, initset)\n    x16 = chain(leftmost, x13, x15)\n    x17 = matcher(x16, ZERO)\n    x18 = fork(both, x12, x17)\n    x19 = compose(x18, first)\n    x20 = extract(x7, x19)\n    x21 = first(x20)\n    x22 = last(x20)\n    x23 = x21(I)\n    x24 = ofcolor(x23, x8)\n    x25 = argmax(x24, last)\n    x26 = add(x25, UP_RIGHT)\n    x27 = shoot(x26, UP_RIGHT)\n    x28 = add(x25, DOWN_LEFT)\n    x29 = shoot(x28, DOWN_LEFT)\n    x30 = rbind(shoot, LEFT)\n    x31 = mapply(x30, x27)\n    x32 = rbind(shoot, LEFT)\n    x33 = mapply(x32, x29)\n    x34 = width(x23)\n    x35 = invert(x34)\n    x36 = tojvec(x35)\n    x37 = shift(x31, x36)\n    x38 = combine(x31, x37)\n    x39 ="], [1.1, "def solve_a4f9b018(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_35177eb6(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_75f92ff9(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(asobject, x21)\n    x23 = x22(x2)\n    x24 = x22(I)\n    x25 = x22(x4)\n    x26 = x22(x6)\n    x27 = objects(x18, T, F, T)\n    x28 = colorfilter(x27, x16)\n    x29 = paint(x18, x28)\n    x30 = subgrid(x2, x29)\n    x31 = index(x30, DOWN)\n    x32 = replace(x30, x16, x119)\n    x33 = replace(x32, x26, x5)\n    x34 = combine(x31, x33)\n    x35 = merge(x34)\n    x36 = astuple(FOUR, FOUR)\n    x37 = canvas(x31, x36)\n    x38 = paint(x37, x35)\n    x39 = rot90(x38)\n    x40 = paint(x39, x35)\n    x41 = rot90(x40)\n    x42 = shape(x31)\n    x43 ="], [1.1, "def solve_ef2e91c2(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = order(x1, x2)\n    x4 = apply(x3, x1)\n    x5 = size(x4)\n    x6 = decrement(x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = remove(x2, x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = leftmost(x12)\n    x14 = ofcolor(I, x11)\n    x15 = either(x14, x13)\n    x16 = leftmost(x12)\n    x17 = vmirror(I)\n    x18 = hmirror(I)\n    x19 = lbind(add, x8)\n    x20 = chain(x19, ulcorner, llcorner)\n    x21 = compose(x21, urcorner)\n    x22 = chain(x1, ulcorner, llcorner)\n    x23 = fork(add, x22, x17)\n    x24 = fork(add, x23, x18)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = mostcolor(I)\n    x28 = toindices(x25)\n    x29 = matcher(first, x27)\n    x30 = toindices(x25)\n    x31 = sfilter(x30, x29)\n    x32 = argmax(x31, x24)\n    x33 = difference(x25, x32)\n    x34 = toobject(x33, I)\n    x35 = matcher(first, x10)\n    x36 = compose(flip, x35)\n    x37 = sfilter(x34, x36)\n    x38 = lbind(shift, x27)\n    x39 = compose(x38, ulcorner)\n    x40 = fork(combine, x37, x39)\n    x41 ="], [1.1, "def solve_107d340b(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(canvas, NEG_ONE)\n    x2 = lbind(apply, shape)\n    x3 = chain(size, x1, x2)\n    x4 = lbind(repeat, ZERO)\n    x5 = compose(x4, x3)\n    x6 = fork(paint, x5, x4)\n    x7 = compose(cmirror, x6)\n    x8 = astuple(dmirror, cmirror)\n    x9 = astuple(hmirror, vmirror)\n    x10 = combine(x8, x9)\n    x11 = lbind(compose, x5)\n    x12 = x11(x10)\n    x13 = lbind(ofcolor, I)\n    x14 = compose(x12, x13)\n    x15 = decrement(xsize)\n    x16 = toivec(x15)\n    x17 = connect(ORIGIN, x16)\n    x18 = insert(UNITY, x17)\n    x19 = branch(x18, vsplit, hsplit)\n    x20 = x19(I, TWO)\n    x21 = first(x20)\n    x22 = last(x20)\n    x23 = width(x21)\n    x24 = decrement(x23)\n    x25 = tojvec(x24)\n    x26 = connect(ORIGIN, x25)\n    x27 = height(x21)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = connect(ORIGIN, x29)\n    x31 = width(x21)\n    x32 = decrement(x31)\n    x33 = tojvec(x32)\n    x34 = connect(ORIGIN, x33)\n    x35 = height(x21)\n    x36 = decrement(x35)\n    x37 = toivec(x36)\n    x38 = connect(ORIGIN, x37)\n    x39 = width(x21)\n    x40 = decrement(x39)\n    x41 = tojvec(x40"], [1.1, "def solve_110ea174(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = upscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = size(x22)\n    x24 = positive(x23)\n    x25 = branch(x24, hmirror, vmirror)\n    x26 = x25(x14)\n    x27 = ofcolor(x26, x3)\n    x28 = asindices(x14)\n    x29 = ofcolor(x26, x3)\n    x30 = difference(x29, x28)\n    x31 = rbind(contained, x30)\n    x32 = compose(flip, x31)\n    x33 = sfilter(x27, x32)\n    x34 = fork(equality, identity, dmirror)\n    x35 = sfilter(x33, x34)\n    x36 = flip(x35)\n    x37 = multiply(x31, THREE)\n    x38 = dmirror(x37)\n    x39 = lbind(ofcolor, x18)\n    x40 = compose(flip, x39)\n    x41 = rbind(sfilter, x40)\n    x42 = compose("], [1.1, "def solve_882ab4b4(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = leastcolor(I)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = argmin(x12, numcolors)\n    x14 = rbind(contained, x13)\n    x15 = normalize(x13)\n    x16 = objects(x44, x14, x15)\n    x17 = colorfilter(x16, x3)\n    x18 =indices(x9)\n    x19 = ofcolor(x11, x3)\n    x20 = difference(x18, x19)\n    x21 = rbind(multiply, LEFT)\n    x22 = rbind(divide, LEFT)\n    x23 = rbind(multiply, x20)\n    x24 = rbind(divide, x20)\n    x25 = rbind(multiply, x22)\n    x26 = lbind(970gpartition, x21)\n    x27 = fork(009, x24, x25)\n    x28 = compose(x27, x6)\n    x29 = fork(either, x28, x29)\n    x30 = rbind(002, extract)\n    x31 = extract(x15, x29)\n    x32 = rbind(002, x31)\n    x33 = fork(649, x29, x32)\n    x34 = rbind(oward combine, x27)\n    x35 = compose(x34, x28)\n    x36 = fork(add, x35, x31)\n    x37 = fork(connect, x33, x36)\n    x38 = shape(x13)\n    x39 = multiply(x38, x38)\n"], [1.1, "def solve_c7269f41(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, last)\n    x3 = compose(x1, x2)\n    x4 = lbind(ofcolor, I)\n    x5 = fork(size, x4, x3)\n    x6 = compose(x5, palette)\n    x7 = fork(vline, x6,757)\n    x8 = fork(astuple, x3, x4)\n    x9 = fork(add, x8, x7)\n    x10 = asindices(I)\n    x11 = apply(x9, x10)\n    x12 =725092511, x11)\n    x13 = argmax(x12, identity)\n    x14 = apply(last, x15)\n    x15 = size(x14)\n    x16 = increment(x15)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = product(x17, x17)\n    x19 = power(first, FIVE)\n    x20 = astuple(recolor, x19)\n    x21 = astuple(center, ORIGIN)\n    x22 = astuple(x21, x208)\n    x23 = combine(x20, x22)\n    x24 = rbind(toobject, I)\n    x25 = compose(last, last)\n    x26 = rbind(ofcolor, x25)\n    x27 = mapply(x26, x23)\n    x28 = mostcolor(I)\n    x29 = combine(x27, x28)\n    x30 = recolor(x29, x27)\n    x31 = initset(x15)\n    x32 = insert(x16, x31)\n    x33 = insert(x32, x31)\n    x34 = toobject(x33, I)\n    x35 = lbind(recolor, x54)\n    x36 = compose(x35, x24)\n    x37 = fork(shift, x36, ulcorner)\n    x38 = mapply(x37, x34)\n    x39 = paint(I, x38)\n    x40 = rot"], [1.1, "def solve_77f716d5(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, vmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_39f9c12f(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(SIX)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_9cfa08a0(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_819f366d(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = argmax(x1, size)\n    x3 = remove(x2, x1)\n    x4 = merge(x3)\n    x5 = size(x4)\n    x6 = positive(x5)\n    x7 = branch(x6, height, width)\n    x8 = x7(I)\n    x9 = color(x2)\n    x10 = ofcolor(I, x9)\n    x11 = ofcolor(I, x2)\n    x12 = position(x10, x11)\n    x13 = first(x12)\n    x14 = last(x21)\n    x15 = subgrid(x13, I)\n    x16 = width(x15)\n    x17 = divide(x16, THREE)\n    x18 = tojvec(x17)\n    x19 = height(x15)\n    x20 = divide(x19, THREE)\n    x21 = increment(x20)\n    x22 = interval(ZERO, x21, ONE)\n    x23 = asobject(x15)\n    x24 = matcher(first, x9)\n    x25 = compose(flip, x24)\n    x26 = sfilter(x23, x25)\n    x27 = lbind(shift, x22)\n    x28 = height(x12)\n    x29 = divide(x28, FOUR)\n    x30 = increment(x29)\n    x31 = width(x12)\n    x32 = divide(x31, FOUR)\n    x33 = increment(x32)\n    x34 = invert(x30)\n    x35 = interval(ZERO, x34, ONE)\n    x36 = astuple(x32, x31)\n    x37 = lbind(shift, x22)\n    x38 = lbind(multiply, x36)\n    x39 = compose(x37, x38)\n    x40 = lbind(mapply, x29)\n    x41 = lbind(shift, x26)\n    x42 = compose(x40, x41)\n    x43 = fork(comb"], [1.1, "def solve_1dbb4996(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_7e01343f(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = ofcolor(I, THREE)\n    x2 = crop(I, ORIGIN, THREE_BY_THREE)\n    x3 = asobject(x2)\n    x4 = matcher(first, THREE)\n    x5 = compose(flip, x4)\n    x6 = sfilter(x3, x5)\n    x7 = fork(multiply, height, width)\n    x8 = size(x6)\n    x9 = divide(x8, THREE)\n    x10 = multiply(x9, THREE)\n    x11 = add(x10, TWO)\n    x12 = multiply(x11, ONE)\n    x13 = argmin(x6, x12)\n    x14 = neighbors(x13)\n    x15 = mapply(neighbors, x14)\n    x16 = astuple(x11, x13)\n    x17 = rbind(multiply, x16)\n    x18 = astuple(x15, x17)\n    x19 = underfill(I, THREE, x18)\n    x20 = objects(x19, T, F, F)\n    x21 = colorfilter(x20, TWO)\n    x22 = rbind(adjacent, x13)\n    x23 = sfilter(x21, x22)\n    x24 = rbind(toobject, x19)\n    x25 = compose(x4, delta)\n    x26 = chain(x24, x25, mostcolor)\n    x27 = rbind(canvas, UNITY)\n    x28 = apply(x27, x23)\n    x29 = merge(x28)\n    x30 = palette(x29)\n    x31 = matcher(first, THREE)\n    x32 = compose(flip, x31)\n    x33 = sfilter(x30, x32)\n    x34 = rbind(conpose, x528)\n    x35 = lbind(rbind, contained)\n    x36 = chain(x34, x35, x22)\n    x37 = lbind(colorcount, x14)\n    x38 = compose(x37, x36)\n    x39 = sfilter("], [1.1, "def solve_846da2ef(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(difference, toindices, box)\n    x3 = compose(size, x2)\n    x4 = matcher(x3, ZERO)\n    x5 = rbind(add, FOUR)\n    x6 = chain(x5, double, width)\n    x7 = fork(equality, size, x6)\n    x8 = chain(x5, double, height)\n    x9 = fork(equality, size, x8)\n    x10 = fork(either, x7, x9)\n    x11 = fork(both, x4, x10)\n    x12 = extract(x1, x11)\n    x13 = toindices(x12)\n    x14 = center(x12)\n    x15 = vfrontier(x14)\n    x16 = intersection(x13, x15)\n    x17 = size(x16)\n    x18 = positive(x17)\n    x19 = branch(x18, dmirror, identity)\n    x20 = x19(I)\n    x21 = color(x12)\n    x22 = palette(I)\n    x23 = remove(x21, x22)\n    x24 = lbind(colorcount, I)\n    x25 = argmin(x23, x24)\n    x26 = other(x23, x25)\n    x27 = ofcolor(x20, x25)\n    x28 = ofcolor(x20, x21)\n    x29 = leftmost(x28)\n    x30 = lbind(greater, x29)\n    x31 = compose(x30, last)\n    x32 = sfilter(x27, x31)\n    x33 = difference(x27, x32)\n    x34 = vmirror(x32)\n    x35 = leftmost(x28)\n    x36 = leftmost(x32)\n    x37 = subtract(x35, x36)\n    x38 = add(TWO, x37)\n    x39 = tojvec(x38)\n    x40 = shift(x34, x39)\n    x41 = vmirror("], [1.1, "def solve_d18da226(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = apply(86260, x6)\n    x8 =pply(connect, x7, x7)\n    x9 = mfilter(x8, vline)\n    x10 = sfilter(x8, x4)\n    x11 = difference(x8, x10)\n    x12 = mapply(88, x11)\n    x13 = shape(I)\n    x14 = add(TWO, x13)\n    x15 = canvas(x1, x14)\n    x16 = asobject(I)\n    x17 = shift(x16, UNITY)\n    x18 = paint(x15, x17)\n    x19 = double(SIX)\n    x20 = astuple(ONE, x19)\n    x21 = invert(x20)\n    x22 = asindices(x21)\n    x23 = recolor(x1, x22)\n    x24 = shift(x23, x21)\n    x25 = paint(x18, x24)\n    x26 = double(SIX)\n    x27 = astuple(ONE, x26)\n    x28 = invert(x27)\n    x29 = invert(x28)\n    x30 = astuple(ZERO, x29)\n    x31 = invert(x30)\n    x32 = astuple(x31, x21)\n    x33 = shoot(UNITY, x32)\n    x34 = shoot(x33, x24)\n    x35 = combine(x33, x34)\n    x36 = intersection(x33, x34)\n    x37 = shoot(x36, x31)\n    x38 = recolor(x1, x37)\n    x39 = paint(x20, x38)\n    x40 = double(x39)\n    x41 = invert(x40)\n    x"], [1.1, "def solve_38d285b0(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = size(x5)\n    x7 = positive(x6)\n    x8 = astuple(color, x5)\n    x9 = astuple(center, x3)\n    x10 = lbind(ofcolor, I)\n    x11 = branch(x7, x9, x10)\n    x12 = x11(x1)\n    x13 = x11(I)\n    x14 = height(x13)\n    x15 = divide(x14, x12)\n    x16 = subtract(x15, x12)\n    x17 = width(x13)\n    x18 = divide(x17, x12)\n    x19 = astuple(x16, x18)\n    x20 = invert(x19)\n    x21 = ulcorner(x7)\n    x22 = invert(x21)\n    x23 = urcorner(x7)\n    x24 = ulcorner(x7)\n    x25 = astuple(x23, x24)\n    x26 = shift(x5, x25)\n    x27 = subgrid(x26, x13)\n    x28 = astuple(x21, x22)\n    x29 = ulcorner(x7)\n    x30 = ulcorner(x7)\n    x31 = subtract(x30, x29)\n    x32 = shift(x5, x31)\n    x33 = ofcolor(x27, x50)\n    x34 = recolor(x50, x33)\n    x35 = ofcolor(x41, x50)\n    x36 = recolor(x451, x35)\n    x37 = combine(x34, x36)\n    x38 = height(x37)\n    x39 = decrement(x38)\n    x40 = toivec(x39)\n    x41 = invert(x40)\n    x42 = shift(x"], [1.1, "def solve_5f252d22(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_a09e04cd(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = apply(first, x22)\n    x24 = lbind(sfilter, x21)\n    x25 = compose(first, last)\n    x26 = lbind(matcher, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x27, x23)\n    x29 = lbind(shift, x15)\n    x30 = chain(x29, toivec, uppermost)\n    x31 = matcher(first, x18)\n    x32 = rbind(sfilter, x31)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(toindices, x32, x30)\n    x36 = chain(x33, x34, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = compose(color, x37)\n    x39 = compose(x32, x30)\n    x40 = fork(recolor, x38, x39)\n    x41 = fork(other, palette,"], [1.1, "def solve_e321daa0(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = asindices(I)\n    x5 = apply(first, x4)\n    x6 = difference(x5, x3)\n    x7 = ofcolor(I, x1)\n    x8 = rbind(interval, ONE)\n    x9 = lbind(rbind, contained)\n    x10 = lbind(sfilter, x6)\n    x11 = rbind(matcher, ZERO)\n    x12 = chain(size, x10, x9)\n    x13 = lbind(sfilter, x7)\n    x14 = lbind(compose, x12)\n    x15 = chain(x13, x11, x14)\n    x16 = lbind(fork, x8)\n    x17 = compose(increment, minimum)\n    x18 = lbind(lbind, astuple)\n    x19 = lbind(chain, x17)\n    x20 = rbind(x19, first)\n    x21 = chain(x20, x18, first)\n    x22 = lbind(chain, maximum)\n    x23 = rbind(x22, first)\n    x24 = chain(x23, x18, first)\n    x25 = fork(x16, x21, x24)\n    x26 = compose(x15, x25)\n    x27 = apply(toivec, x3)\n    x28 = apply(x26, x27)\n    x29 = argmax(x28, width)\n    x30 = remove(x29, x28)\n    x31 = ulcorner(x29)\n    x32 = invert(x31)\n    x33 = shift(x29, x32)\n    x34 = asindices(I)\n    x35 = center(x34)\n    x36 = invert(x35)\n    x37 = shift(x34, x36)\n    x38 = width(I)\n    x39 = double(x38)\n    x40 = tojvec(x39)\n    x"], [1.1, "def solve_036c9bd8(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x20, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = compose(x86, last)\n    x38 = argmin(x35, x37)\n    x39 = first(x38)\n    x40"], [1.1, "def solve_86692c69(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = lbind(remove, x1)\n    x3 = chain(positive, size, x2)\n    x4 = compose(x3, palette)\n    x5 = multiply(FIVE, UNITY)\n    x6 = canvas(ZERO, x5)\n    x7 = asindices(x6)\n    x8 = fork(add, first, last)\n    x9 = chain(flip, even, x8)\n    x10 = sfilter(x7, x9)\n    x11 = initset(x1)\n    x12 = box(x7)\n    x13 = inbox(x7)\n    x14 = center(x7)\n    x15 = initset(x14)\n    x16 = lbind(toobject, x12)\n    x17 = compose(x4, x16)\n    x18 = lbind(toobject, x13)\n    x19 = compose(x4, x18)\n    x20 = lbind(toobject, x15)\n    x21 = compose(x4, x20)\n    x22 = fork(both, x19, x21)\n    x23 = fork(both, x17, x22)\n    x24 = compose(x23, trim)\n    x25 = compose(box,477)\n    x26 = lbind(toobject, x25)\n    x27 = compose(x26, asindices)\n    x28 = fork(difference, x27, box)\n    x29 = lbind(fork, recolor)\n    x30 = lbind(x29, identity)\n    x31 = lbind(compose, x12)\n    x32 = lbind(compose, x28)\n    x33 = compose(x31, x2)\n    x34 = fork(x31, x32, x33)\n    x35 = lbind(chain, size)\n    x36 = lbind(x35, connect)\n    x37 = lbind(x37, x22)\n    x38 = lbind(compose, x24)\n    x39 = compose(x38, x34)\n    x40 ="], [1.1, "def solve_dacc8ab1(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_8787993e(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = astuple(SIX, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, THREE)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = astuple(x23, x27)\n    x29 = rbind(ofcolor, x18)\n    x30 = compose(x29, last)\n    x31 = ofcolor(I, x21)\n    x32 = intersection(x31, x30)\n    x33 = mapply(x30, x32)\n    x34 = fill(I, TWO, x33)\n    x35 = astuple(x24, x30)\n    x36 = lbind(apply, last)\n    x37 = power(x36, FOUR)\n    x38 = x37(x34)\n    x39 ="], [1.1, "def solve_062a2e8e(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = double(TEN)\n    x2 = interval(ZERO, x1, ONE)\n    x3 = connect(ORIGIN, DOWN)\n    x4 = connect(ORIGIN, ZERO_BY_TWO)\n    x5 = combine(x3, x4)\n    x6 = astuple(NEG_TWO, TWO)\n    x7 = lbind(multiply, x6)\n    x8 = toivec(NEG_TWO)\n    x9 = apply(x7, x2)\n    x10 = rbind(subtract, TWO_BY_ZERO)\n    x11 = fork(ofcolor, identity, leastcolor)\n    x12 = chain(x10, center, x11)\n    x13 = rbind(mapply, x9)\n    x14 = lbind(lbind, shift)\n    x15 = lbind(shift, x5)\n    x16 = compose(x15, x12)\n    x17 = chain(x13, x14, x16)\n    x18 = lbind(recolor, FIVE)\n    x19 = compose(x18, x17)\n    x20 = fork(paint, identity, x19)\n    x21 = compose(rot180, x20)\n    x22 = fork(ofcolor, x21, leastcolor)\n    x23 = compose(center, x22)\n    x24 = fork(subtract, x23, x12)\n    x25 = fork(shift, x17, x24)\n    x26 = lbind(recolor, FIVE)\n    x27 = rbind(shift, x8)\n    x28 = chain(x26, x27, x25)\n    x29 = fork(paint, x21, x28)\n    x30 = compose(rot180, x29)\n    x31 = rbind(ofcolor, FIVE)\n    x32 = compose(x31, x30)\n    x33 = leastcolor(I)\n    x34 = ofcolor(I, x33)\n    x35 = mostcolor(I)\n    x36 = shape(I)\n    x37 = canvas(x35, x"], [1.1, "def solve_ad47e53a(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_011e9459(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = add(x37, ulcorner)\n    x39 = invert(x38)\n    x40 = shift(x31"], [1.1, "def solve_25a4bc90(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_8b54f2e0(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 =ulcorner(x24)\n    x26 = urcorner(x24)\n    x27 = shoot(x25, UNITY)\n    x28 = shoot(x26, DOWN_LEFT)\n    x29 = combine(x27, x28)\n    x30 = fill(x24, x3, x29)\n    x31 = intersection(x30, x22)\n    x32 = fill(x30, TWO, x31)\n    x33 =787(x32)\n    x34 =88 first(x33)\n    x35 = rightmost(x34)\n    x36 = lbind(shift, x34)\n    x37 = objects(x32, T, F, T)\n    x38 = colorfilter(x37, x39)\n    x39 = apply"], [1.1, "def solve_37d6790b(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, ZERO, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x21, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32, x31)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = sfilter(x rbind, x34)\n    x36 = astuple(x21, x20)\n    x37 = lbind(multiply, x36)\n    x38 = apply(x37, x35)\n    x39 = lbind(shift, x28)\n    x40 = mapply(x39, x38)"], [1.1, "def solve_aed84e40(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x1, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x6, x4)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ONE)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18, x"], [1.1, "def solve_ffee73d7(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = lbind(contained, EIGHT)\n    x2 = chain(flip, x1, palette)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(apply, x4)\n    x6 = chain(x3, x5, frontiers)\n    x7 = astuple(x6, ONE)\n    x8 = sfilter(x3, x7)\n    x9 = fork(color, first, last)\n    x10 = product(x8, x9)\n    x11 = color(x1)\n    x12 =294(I)\n    x13 = rbind(toobject, I)\n    x14 = compose(x13, first)\n    x15 = last(x14)\n    x16 = ofcolor(x15, x11)\n    x17 = ulcorner(x16)\n    x18 = subgrid(x16, x15)\n    x19 = rot90(x18)\n    x20 = matcher(last, x19)\n    x21 = subtract(x17, x20)\n    x22 = rot180(x17)\n    x23 = matcher(last, x22)\n    x24 = subtract(x17, x23)\n    x25 = replace(x19, x51, x12)\n    x26 = combine(x21, x24)\n    x27 = branch(x88, x26, x25)\n    x28 = rbind(colorcount, x11)\n    x29 = rbind(toobject, x14)\n    x30 = matcher(x28, x552)\n    x31 = compose(flip, x30)\n    x32 = extract(x29, x31)\n    x33 = first(x32)\n    x34 = last(x32)\n    x35 = x33(x94)\n    x36 = x33(x14)\n    x37 = ulcorner(x16)\n    x38 = add(x37, x36)\n    x39 = subgrid(x13, x19)\n    x40 = rbind(count, x38)"], [1.1, "def solve_dd24cb04(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x20, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = compose(x36, first)\n    x38 = argmin(x35, x37)\n    x39 = first(x38)\n    x40"], [1.1, "def solve_5e58d5ab(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(colorcount, x31)\n    x34 = compose(x33, first)\n    x35 = matcher(x34, ZERO)\n    x36 = rbind(ofcolor, x31)\n    x37 = chain(flip, x35, x36)\n    x38 = fork(recolor, x37, x31)\n    x39 = mapply(x38,"], [1.1, "def solve_6d8b78f0(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = height(I)\n    x9 = astuple(x8, ONE)\n    x10 = canvas(THREE, x9)\n    x11 = hconcat(x10, I)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = identity(DOWN)\n    x17 = connect(ORIGIN, x15)\n    x18 = fill(x11, THREE, x17)\n    x19 = identity(x13)\n    x20 = identity(x12)\n    x21 = identity(x12)\n    x22 = identity(F)\n    x23 = identity(ZERO)\n    x24 = compose(first, first)\n    x25 = chain(first, last, x24)\n    x26 = compose(first, first)\n    x27 = chain(last, last, x26)\n    x28 = chain(first, first, first)\n    x29 = chain(first, last, last)\n    x30 = chain(first, first, last)\n    x31 = chain(last, first, last)\n    x32 = compose(decrement, x25)\n    x33 = compose(decrement, x27)\n    x34 = fork(astuple, x32, x33)\n    x35 = compose(decrement, x27)\n    x36 = fork(subtract, x25, x35)\n    x37 = fork(subtract, x28, x36)\n    x38 = fork(astuple, x34, x37)\n    x39 = lbind(extract, x7)\n    x40 = lbind(matcher, first)\n    x41 = chain"], [1.1, "def solve_68ead827(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = partition(I)\n    x2 = product(x1, x1)\n    x3 = fork(equality, first, last)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = fork(adjacent, first, last)\n    x7 = compose(flip, x6)\n    x8 = extract(x5, x7)\n    x9 = totuple(x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = combine(x10, x11)\n    x13 = leftmost(x12)\n    x14 = increment(x13)\n    x15 = rightmost(x12)\n    x16 = decrement(x15)\n    x17 = apply(uppermost, x9)\n    x18 = maximum(x17)\n    x19 = increment(x18)\n    x20 = apply(lowermost, x9)\n    x21 = minimum(x20)\n    x22 = decrement(x21)\n    x23 = apply(leftmost, x9)\n    x24 = maximum(x23)\n    x25 = increment(x24)\n    x26 = apply(rightmost, x9)\n    x27 = minimum(x26)\n    x28 = decrement(x27)\n    x29 = uppermost(x12)\n    x30 = increment(x29)\n    x31 = lowermost(x12)\n    x32 = decrement(x31)\n    x33 = hmatching(x10, x11)\n    x34 = branch(x33, x14, x25)\n    x35 = branch(x33, x16, x28)\n    x36 = branch(x33, x22, x32)\n    x37 = branch(x33, x19, x30)\n    x38 = astuple(x36, x35)\n    x39 = astuple(x37, x34)\n    x40 = initset(x39)\n    x41 = insert(x38, x40)\n    x42 = backdrop(x41)\n    x43 = merge"], [1.1, "def solve_d3dc2f97(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = equality(x5, ZERO)\n    x7 = branch(x6, identity, vmirror)\n    x8 = x7(x4)\n    x9 = ofcolor(x8, EIGHT)\n    x10 = uppermost(x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, identity, hmirror)\n    x13 = x12(x8)\n    x14 = ofcolor(x13, EIGHT)\n    x15 = ofcolor(x13, TWO)\n    x16 = rbind(shoot, DOWN)\n    x17 = mapply(x16, x14)\n    x18 = height(x13)\n    x19 = apply(first, x15)\n    x20 = insert(ZERO, x19)\n    x21 = insert(x18, x19)\n    x22 = apply(decrement, x21)\n    x23 = order(x20, identity)\n    x24 = order(x22, identity)\n    x25 = size(x15)\n    x26 = increment(x25)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = apply(tojvec, x27)\n    x29 = pair(x23, x24)\n    x30 = lbind(sfilter, x17)\n    x31 = compose(first, last)\n    x32 = chain(decrement, first, first)\n    x33 = fork(greater, x31, x32)\n    x34 = chain(increment, last, first)\n    x35 = fork(greater, x34, x31)\n    x36 = fork(both, x33, x35)\n    x37 = lbind(lbind, astuple)\n    x38 = lbind(compose, x36)\n    x39 = chain(x30, x38, x37)\n    x40"], [1.1, "def solve_37dad45e(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_cf8952e1(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = apply(first, x22)\n    x24 = lbind(sfilter, x21)\n    x25 = compose(first, last)\n    x26 = lbind(matcher, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x27, x23)\n    x29 = lbind(shift, x15)\n    x30 = chain(x29, toivec, uppermost)\n    x31 = matcher(first, x18)\n    x32 = rbind(sfilter, x31)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(toindices, x32, x30)\n    x36 = chain(x33, x34, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = compose(color, x37)\n    x39 = compose(x32, x30)\n    x40 = fork(recolor, x38, x39)\n    x41 = fork(other, palette, x38)\n"], [1.1, "def solve_b0d8f7d8(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = astuple(SIX, ONE)\n    x2 = crop(I, ORIGIN, x1)\n    x3 = tophalf(x2)\n    x4 = upscale(x3, FOUR)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = hconcat(x2, x5)\n    x7 = upscale(x6, FOUR)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = crop(x6, x9, x7)\n    x11 =458(x10)\n    x12 = vmirror(x11)\n    x13 = objects(x12, F, F, T)\n    x14 = argmin(x13, numcolors)\n    x15 = x14(x14)\n    x16 = subgrid(x15, x6)\n    x17 = palette(x16)\n    x18 = remove(ZERO, x17)\n    x19 = other(x18,1991)\n    x20 = rbind(colorcount, x19)\n    x21 = argmin(x12, x20)\n    x22 = hmirror(x21)\n    x23 = objects(x22, T, F, T)\n    x24 = colorfilter(x23, x19)\n    x25 = argmin(x24, DOWN)\n    x26 = ulcorner(x25)\n    x27 = llcorner(x25)\n    x28 = add(x27, x6)\n    x29 = add(x28, x20)\n    x30 = shift(x22, x29)\n    x31 = rbind(10, x30)\n    x32 =jlpply(x31, x26)\n    x33 = apply(x16, x32)\n    x34 = normalize(x33)\n    x35 = x14(x34)\n    x36 = matcher(first, x39)\n    x37 = rbind(sfilter, x36)\n    x38 = lbind(mirror, x37)\n    x39 = chain(size, x35, x"], [1.1, "def solve_8b6972ad(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_37303c83(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_f21f0b18(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_a7dd8c9e(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 =73colors(I)\n    x2 = neighbors(ORIGIN)\n    x3 = mapply(neighbors, x2)\n    x4 = insert(ORIGIN, x3)\n    x5 = rbind(shoot, ORIGIN)\n    x6 = mapply(x5, x4)\n    x7 = underfill(I, ONE, x6)\n    x8 = rbind(shoot, DOWN)\n    x9 = mapply(x8, x4)\n    x10 = astuple(cmirror,459)\n    x11 = astuple(hmirror, vmirror)\n    x12 = combine(x10, x11)\n    x13 = rbind(shoot, UP_RIGHT)\n    x14 = mapply(x13, x4)\n    x15 = combine(x13, x14)\n    x16 = fork(combine, identity, x15)\n    x17 = mapply(x16, x12)\n    O = paint(x7, x17)\n    return O"], [1.1, "def solve_befaf6f7(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = compose(flip, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = matcher(color, x5)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x1, x7)\n    x9 = merge(x8)\n    x10 = fill(I, TWO, x9)\n    x11 = mapply(toindices, x8)\n    x12 = fill(x10, NEG_ONE, x11)\n    x13 = lbind(shift, x8)\n    x14 = mapply(x13, x12)\n    x15 = fill(x12, sIX, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = colorfilter(x16, x5)\n    x18 = rbind(adjacent, x4)\n    x19 = sfilter(x17, x18)\n    x20 = difference(x17, x19)\n    x21 =9(ORIGIN, center)\n    x22 = colorfilter(x105, TWO)\n    x23 =449(x22, x21)\n    x24 = rbind(shoot, DOWN)\n    x25 = mapply(x24, x23)\n    x26 = fill(x15, SIX, x25)\n    x27 = objects(x26, T, F, T)\n    x28 = apply(urcorner, x27)\n    x29 = mapply(x28, x26)\n    x30 = shoot(x26, UP_RIGHT)\n    x31 = shoot(x26, NEG_UNITY)\n    x32 = combine(x30, x31)\n    x33 = mapply(x25, x29)\n    x34 = fill(x26, SIX, x33)\n    O = fill(x34, ONE, x32)\n    return O"], [1.1, "def solve_eb347341(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = fork(combine, dneighbors, box)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, T, F, T)\n    x9 = colorfilter(x8, x4)\n    x10 = rbind(bordering, I)\n    x11 =min(x9, x10)\n    x12 =747(x11)\n    x13 = rbind(hordering, I)\n    x14 = vmirror(x11)\n    x15 = hconcat(x13, x14)\n    x16 =aint(x15, x12)\n    O = vconcat(x16, x8)\n    return O"], [1.1, "def solve_b12746ad(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =479(I)\n    x3 = compose(first, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = other(x8, x1)\n    x10 = replace(I, x6, x1)\n    x11 = objects(x10, T, F, F)\n    x12 = colorfilter(x11, x6)\n    x13 = rbind(bordering, x10)\n    x14 = compose(flip, x13)\n    x15 = mfilter(x12, x14)\n    x16 = difference(x12, x15)\n    x17 = apply(ulcorner, x16)\n    x18 = rbind(shift, RIGHT)\n    x19 = mapply(x18, x17)\n    x20 = vmirror(x19)\n    x21 = objects(x20, T, F, T)\n    x22 = apply(toindices, x21)\n    x23 = apply(urcorner, x22)\n    x24 = mapply(x23, x22)\n    x25 = mapply(toindices, x24)\n    x26 = apply(llcorner, x25)\n    x27 = mapply(toindices, x26)\n    x28 = mapply(add, x15, x27)\n    x29 = mapply(tojvec, x28)\n    x30 = mapply(x29, x25)\n    x31 = fill(x20, x6, x30)\n    x32 = fill(x31, x9, x27)\n    O = replace(x32, x6, x1)\n    return O"], [1.1, "def solve_ef0bce29(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = lbind(colorcount, I)\n    x5 = compose(x4, size)\n    x6 = matcher(x5, TWO)\n    x7 =2069457b6(I)\n    x8 = mfilter(x3, x6)\n    x9 = objects(I, T, F, F)\n    x10 = TEN(x9)\n    x11 = rbind(adjacent, x10)\n    x12 = mfilter(x8, x11)\n    O = fill(I, FOUR, x12)\n    return O"], [1.1, "def solve_7f8678ae(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 =8888(I, T, F)\n    x2 =8888(I, FOUR)\n    x3 = compose(first, x2)\n    x4 = rbind(compose, x3)\n    x5 = lbind(rbind, contained)\n    x6 = chain(x4, x5, last)\n    x7 =05d8ef2013(x6)\n    x8 =77(x7)\n    x9 =77(x6)\n    x10 = fork(sfilter, identity, x8)\n    x11 = fork(sfilter, identity, x9)\n    x12 = compose(size, x10)\n    x13 = compose(size, x11)\n    x14 = greater(x12, ONE)\n    x15 = branch(x14, x13, x7)\n    x16 = x15(x6)\n    x17 = ofcolor(I, x16)\n    x18 = inbox(x17)\n    ORIGIN, x18)\n    x19 = portrait(x17)\n    x20 = branch(x19, x7, x7)\n    x21 = branch(x19, vline, hline)\n    x22 = x20(x21)\n    x23 = fill(I, ZERO, x22)\n    x24 = ofcolor(I, x16)\n    x25 = difference(x24, x26)\n    O = fill(x23, ZERO, x25)\n    return O"], [1.1, "def solve_5902ac14(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 =000170000000\n    \"\"\"\n    x2 = box(I)\n    O = fill(I, ZERO, x2)\n    return O"], [1.1, "def solve_96559171(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 =sit6594224 contained(I, ONE)\n    x2 = delta(x1)\n    x3 =66toindices(x2)\n    x4 = box(x3)\n    x5 = difference(x4, x3)\n    x6 = inbox(x5)\n    x7 = backdrop(x6)\n    x8 = lbind(position, x7)\n    x9 = compose(288, x8)\n    x10 = fork(greater, identity, x9)\n    x11 = sfilter(x5, x10)\n    x12 = difference(x5, x11)\n    x13 = lbind(greater, ONE)\n    x14 = compose(x13, x12)\n    x15 = power(x14, FOUR)\n    x16 = fork(both, x3, x15)\n    x17 = fork(both, x6, x16)\n    x18 = fgpartition(I)\n    x19 = merge(x18)\n    x20 = difference(x19, x18)\n    x21 = mostcolor(I)\n    x22 = compose(remove, center)\n    x23 = compose(center, x22)\n    x24 = fork(shoot, x23, x22)\n    x25 = fork(recolor, color, x24)\n    x26 = mapply(x25, x20)\n    O = paint(I, x26)\n    return O"], [1.1, "def solve_90188eab(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices ofx14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.1, "def solve_a8e15b94(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    a87203756\n    \"\"\"\n    x1 = recolor(ONE, x3)\n    x2 = colorfilter(x1, TWO)\n    x3 = hsplit(I, x2)\n    x4 = apply(tojvec, x3)\n    x5 = mapply(x7, x4)\n    O = fill(I, EIGHT, x5)\n    return O"], [1.1, "def solve_d8440fb5(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = palette(I)\n    x2 =393(I)\n    x3 = remove(ZERO, x1)\n    x4 = lbind(ofcolor, I)\n    x5 = lbind(prapply, connect)\n    x6 = fork(x5, x4, x4)\n    x7 = compose(merge, x6)\n    x8 = fork(recolor, identity, x7)\n    x9 = mapply(x8, x3)\n    O = paint(I, x9)\n    return O"], [1.1, "def solve_e5b868d5(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = index(x3, ORIGIN)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = intersection(x6, x4)\n    x8 = lrcorner(x7)\n    x9 = shoot(x8, DOWN_LEFT)\n    x10 = intersection(x9, x4)\n    x11 = combine(x7, x10)\n    x12 = asobject(x11)\n    x13 =04015(x12)\n    x14 =\n    1821114120\n    0145451991\n    1410141000\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = objects(x3, T, F, T)\n    x3 = colorfilter(x2, x1)\n    x4 = difference(x2, x3)\n    x5 = merge(x3)\n    x6 = rbind(subgrid, x3)\n    x7 = chain(palette, x6, shape)\n    x8 = lbind(fork, replace)\n    x9 = lbind(x8, identity)\n    x10 = lbind(x9, x7)\n    x11 = rbind(x10, x1)\n    x12 = lbind(ofcolor, x13)\n    x13 = fork(mapply, x12, x11)\n    x14 = mapply(x13, x4)\n    x15 =42159(x14)\n    x16 = replace(x3, x1, x5)\n    O = fill(x16, x1, x16)\n    return O"], [1.1, "def solve_248d610c(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = chain(flip, x1, shape)\n    x3 = hmirror(I)\n    x4 = fgpartition(x3)\n    x5 = merge(x4)\n    x6 = chain(normalize, toindices, box)\n    x7 = difference(x5, x6)\n    x8 = compose(size, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = fork(add, leftmost, uppermost)\n    x11 = argmin(x7, x10)\n    x12 = palette(x3)\n    x13 = remove(x11, x12)\n    x14 = lbind(colorcount, I)\n    x15 = argmin(x13, x14)\n    x16 = lbind(colorcount, x3)\n    x17 = normalize(x11)\n    x18 = matcher(x16, x17)\n    x19 = argmin(x9, x18)\n    x20 = palette(x3)\n    x21 = colorfilter(x20, x19)\n    x22 = rbind(74ddupe, x21)\n    x23 = argmin(x12, x22)\n    x24 = ofcolor(x23, x19)\n    x25 =contained(x19, x24)\n    x26 = ofcolor(x3, x16)\n    x27 = intersection(x26, x25)\n    x28 = outbox(x27)\n    x29 = subgrid(x28, x3)\n    x30 = ofcolor(x29, x16)\n    x31 = ofcolor(x29, x19)\n    x32 = intersection(x31, x30)\n    x33 = replace(x29, x16, x59)\n    x34 = extract(x32, x33)\n    x35 = subgrid(x34, x3)\n    O = trim(x35)\n    return O"], [1.1, "def solve_7ce8e736(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 =157786e21(I):\n    x2 =449989product1\n    x3 =4447(I)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = combine(x8, x5)\n    x10 = lefthalf(x9)\n    O = tophalf(x10)\n    return O"], [1.1, "def solve_e427d8b5(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = rbind(order, identity)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = chain(positive, size, x5)\n    x7 = rbind(repeat, x1)\n    x8 = compose(x7, x6)\n    O =344(x2)\n    return O"], [1.1, "def solve_0d395f90(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 =6360(x24)\n    x26 = ulcorner(x24)\n    x27 = index(x14, x26)\n    x28 = equality(x27, x22)\n    x29 = shift(x15, x28)\n    x30 = urcorner(x28)\n    x31 = other(x10, x13)\n    x32 = shoot(x26, x31)\n    x33 = combine(x29, x32)\n    x34 = rbind(shoot, x30)\n    x35 = mapply(x34, x33)\n    x36 = double(TEN)\n    x37 = tojvec(x36)\n    x38 =47(x35)\n    x39 = insert(x37, x38)\n    O = lrcorner(x39)\n    return O"], [1.1, "def solve_78b20688(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = cover(I, x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(x3, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x77, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = rbind(matcher, ZERO)\n    x14 = compose(x12, x13)\n    x15 = rbind(gravitate, x2)\n    x16 = compose(x15, x14)\n    x17 = fork(add, x16, ulcorner)\n    x18 = fork(connect, x17, x14)\n    x19 = fork(67a423677\n    x20 = fork(sfilter, x18, x19)\n    x21 = fork(recolor, x14, x20)\n    x22 = mapply(x21, x11)\n    O = paint(x7, x22)\n    return O"], [1.1, "def solve_3adb1ed0(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 =portcat(I, I)\n    x2 = box(x1)\n    x3 = fill(x1, ZERO, x2)\n    x4 = subgrid(x1, x3)\n    x5 = fork(combine, vfrontier, hfrontier)\n    x6 = width(x4)\n    x7 = rbind(greater, x6)\n    x8 = chain(x7, tojvec, lrcorner)\n    x9 = height(x4)\n    x10 = decrement(x9)\n    x11 = matcher(x8, x10)\n    x12 = extract(x7, x11)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = toobject(x14, I)\n    x16 = add(UNITY, x15)\n    x17 = shape(x13)\n    x18 = canvas(ZERO, x17)\n    x19 = asindices(x18)\n    x20 = shift(x19, x17)\n    x21 = paint(x18, x20)\n    x22 = objects(x21, F, F, T)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = paint(x21, x23)\n    x25 = normalize(x12)\n    x26 = lbind(shift, x25)\n    x27 =9799383200(x26)\n    x28 = paint(x24, x27)\n    x29 = paint(x28, x25)\n    x30 = rot90(x29)\n    x31 = downscale(x30, x16)\n    x32 = rot90(x31)\n    x33 = paint(x32, x25)\n    O = rot270(x33)\n    return O"], [1.1, "def solve_743cf0a9(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palettecae(I)\n    x5 = remove(x3, x4)\n    x6 = hsplit(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = compress(x7)\n    x10 = palette(x9)\n    x11 =467(x9)\n    x12 =11(x8)\n    x13 = rbind(hconcat, x5)\n    x14 = compose(x13, vmirror)\n    x15 = x14(x10)\n    x16 = ofcolor(x15, x31)\n    x17 = mapply(neighbors, x16)\n    x18 = difference(x17, x16)\n    O = fill(x15, ONE, x18)\n    return O"], [1.1, "def solve_2d480f1a(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = mapply(O = fill(I, x11, x32)\n    return O"], [1.1, "def solve_782109c2(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, h)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = width(I)\n    x16 = decrement(x15)\n    x17 = tojvec(x16)\n    x18 = connect(ORIGIN, x17)\n    x19 = height(I)\n    x20 = decrement(x19)\n    x21 = toivec(x20)\n    x22 = connect(ORIGIN, x21)\n    x23 = shape(I)\n    x24 = canvas(ZERO, x23)\n    x25 = lbind(tojvec, x24)\n    x26 = lbind(shift, x12)\n    x27 = compose(x25, x26)\n    x28 = apply(x27, x18)\n    x29 = lbind(ofcolor, I)\n    x30 = lbind(mapply, x29)\n    x31 = ofcolor(I, x3)\n    x32 =(x30, x31)\n    x33 = fill(x23, x3, x32)\n    x34 = astuple(x23, x28)\n    x35 = shift(x12, x34)\n    x36 = increment(x38)\n    x37 =\n    x31, x36)\n    x38 = apply(x25, x37)\n    O = fill(x33, x3, x38)\n    return O"], [1.1, "def solve_3f684412(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 =0044d8556(I)\n    x5 = objects(I, T, F, T)\n    x6 = height(I)\n    x7 = halve(x6)\n    x8 = add(x7, TWO)\n    x9 = width(I)\n    x10 = rbind(multiply, x9)\n    x11 = apply(x10, x5)\n    x12 = mapply(outbox, x11)\n    x13 = fill(I, x3, x12)\n    x14 = mapply(vfrontier, x15)\n    O = fill(x13, x3, x14)\n    return O"], [1.1, "def solve_1012c076(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, identity, dmirror)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = matcher(identity, x9)\n    x18 = rbind(sfilter, x17)\n    x19 = compose(size, x18)\n    x20 = argmin(x16, x19)\n    x21 = asobject(x20)\n    x22 = matcher(first, x9)\n    x23 = compose(flip, x22)\n    x24 = sfilter(x21, x23)\n    x25 = size(x24)\n    x26 = width(x6)\n    x27 = multiply(x25, x26)\n    x28 = multiply(x25, x27)\n    x29 = rbind(multiply, x28)\n    x30 = chain(most, x29, last)\n    x31 = compose(29ecdecrement, first)\n    x32 = fork(greater, first, last)\n    x33 = compose(x32, x31)\n    x34 = fork(add, first, x33)\n    x35 = compose(x34, last)\n    x36 = ofcolor(x16, x9)\n    x37 = mapply(x35, x36)\n    x38 = paint(x6, x37)\n    O = x5(x38)\n    return O"], [1.1, "def solve_662468bc(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = trim(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(x2)\n    x4 = vmirror(x3)\n    x5 = bottomhalf(x2)\n    x6 = lefthalf(x5)\n    x7 = bottomhalf(x2)\n    x8 = vmirror(x7)\n    x9 = palette(I)\n    x10 = combine(x9, x6)\n    x11 = intersection(x9, x8)\n    x12 = difference(x10, x11)\n    x13 = order(x12, uppermost)\n    x14 = colorcount(I, x6)\n    x15 =\n    x16 =\n    x17 =\n    x16)\n    x18 = x13(x14)\n    x19 = x16(x18)\n    x20 = subtract(x19, x17)\n    x21 = decrement(x20)\n    x22 = canvas(x9, x3)\n    x23 = tojvec(x21)\n    x24 = crop(x22, x23, x20)\n    O = fill(x24, ZERO, x22)\n    return O"], [1.1, "def solve_7f1bcbab(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = toindices(x1)\n    x3 =227(x2)\n    x4 = mapply(dneighbors, x1)\n    x5 = mapply(ineighbors, x1)\n    x6 = toobject(x4, I)\n    x7 =27(x6)\n    x8 = mostcolor(x7)\n    x9 = palette(I)\n    x10 = remove(x8, x9)\n    x11 = other(x10, x9)\n    x12 =16114840442338500\n    x13 = rbind(colorcount, x8)\n    x14 = argmax(x11, x13)\n    x15 = ofcolor(I, x11)\n    x16 = subgrid(x15, I)\n    x17 = apply(mostcommon, x15)\n    x18 = normalize(x16)\n    x19 = lbind(shift, x18)\n    x20 = mapply(x19, x17)\n    x21 = ofcolor(x20, x11)\n    x22 = subgrid(x21, x20)\n    x23 = apply(mostcommon, x15)\n    x24 = normalize(x22)\n    x25 = matcher(first, x8)\n    x26 = sfilter(x24, x25)\n    x27 = shift(x26, x20)\n    O = fill(x22, x11, x27)\n    return O"], [1.1, "def solve_53115b75(I):\n    \"\"\"\n    Example input:\n    4201579060\n    0831403940\n    1954655009\n    4139807747\n    9765051759\n    6799994909\n    6135073141\n    4823232507\n    6054349022\n    1710896919\n    Example output:\n    9857903007\n    9484592249\n    9080901983\n    7178086677\n    3573955945\n    4425577604\n    7896963563\n    3529756312\n    5742466832\n    2538743228\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = totuple(x6)\n    x9 = order(x8, identity)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = remove(x10, x9)\n    x13 = compose(last, last)\n    x14 = compose(hmirror, first)\n    x15 = rightmost(x4)\n    x16 = rightmost(x11)\n    x17 = greater(x15, x16)\n    x18 = branch(x17, x13, x14)\n    x19 = crop(x10, ORIGIN, x18)\n    x20 = decrement(x17)\n    x21 =364(x20, TWO_BY_ZERO)\n    O = branch(x17, width, height)\n    return O"], [1.1, "def solve_fe7d6417(I):\n    \"\"\"\n    Example input:\n    1855060162\n    8691610551\n    6505064578\n    3047243673\n    7989713335\n    5874503232\n    5393543350\n    2274738221\n    0592166089\n    3855967384\n    Example output:\n    4410804808\n    3571055921\n    7937667187\n    7541297505\n    5812190987\n    9916938231\n    3401951454\n    6625944547\n    4429428305\n    2477123449\n    \"\"\"\n    x1 = palette(I)\n    x2 =446(ONE, THREE)\n    x3 = rbind(subgrid, I)\n    x4 =44compose(x3, x2)\n    x5 = rbind(colorcount, ZERO)\n    x6 = matcher(x5, THREE)\n    x7 = compose(x6, x4)\n    x8 = cmirror(I)\n    x9 = papply(pair, x8, x6)\n    x10 =2417apply(remove, x9)\n    x11 = objects(x14, x10, x3)\n    x12 = argmax(x11, x7)\n    x13 = subgrid(x12, x14)\n    x14 = increment(x13)\n    x15 = branch(x11, ZERO, x14)\n    x16 = asindices(x15)\n    x17 = lbind(shift, x16)\n    x18 = double(x17)\n    x19 = interval(ZERO, x18, ONE)\n    x20 = lbind(multiply, x17)\n    x21 = apply(x20, x19)\n    x22 = lbind(mapply, x12)\n    x23 = lbind(lbind, shift)\n    x24 = lbind(occurrences, x14)\n    x25 = compose(x24, x23)\n    x26 = lbind(lbind, shift)\n    x27 = compose(x26, x25)\n    x28 = lbind(rbind, occurrences)\n    x29 = compose(x28, last)\n    x30 = fork(matcher, last, x27)\n    x31 = fork(sfilter, hline, x30)\n    x32 = mapply(x31, x21)\n    O = paint(x14, x32)\n    return O"], [1.1, "def solve_e3d50554(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = shape(I)\n    x20 = canvas(x10, x19)\n    x21 = lbind(divide, x19)\n    x22 = apply(x21, x18)\n    x23 = sfilter(x1, x22)\n    x24 = lbind(colorcount, x20)\n    x25 = argmin(x23, x24)\n    x26 = objects(x6, T, F, T)\n    x27 = colorfilter(x26, x25)\n    x28 = apply(ulcorner, x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x26)\n    x31 = paint(x20, x30)\n    x32 = merge(x31)\n    x33 =99(x32)\n    x34 = replace(x31, x25, x33)\n    O = cover(x39, x34)\n    return O"], [1.1, "def solve_32d41890(I):\n    \"\"\"\n    Example input:\n    1865832238\n    3674138795\n    0329443279\n    3718831759\n    1444059500\n    7446020568\n    6759430471\n    6655791042\n    9169661709\n    9854687059\n    Example output:\n    7224242786\n    3688547500\n    7817074485\n    8980418221\n    4231777663\n    2329446232\n    7948262498\n    5400977995\n    3421953549\n    4046941777\n    \"\"\"\n    x1 = switch(I, THREE, FOUR)\n    x2 =46(equality, NINE, ZERO)\n    x3 = branch(x2, dmirror, identity)\n    x4 = x3(x1)\n    x5 = objects(x4, T, F, T)\n    x6 = argmin(x5, leftmost)\n    x7 = argmax(x5, leftmost)\n    x8 = color(x6)\n    x9 = color(x7)\n    x10 = leftmost(x6)\n    x11 = leftmost(x7)\n    x12 = height(x6)\n    x13 = width(x6)\n    x14 = astuple(x12, x13)\n    x15 = mostcolor(I)\n    x16 =most(x6)\n    x17 = uppermost(x6)\n    x18 = color(x16)\n    x19 = color(x17)\n    x20 = rightmost(x6)\n    x21 = leftmost(x7)\n    x22 = astuple(x20, x21)\n    x23 = remove(x16, x22)\n    x24 =80126(I):\n    x25 = dmirror(x24)\n    x26 = lbind(shift, x25)\n    x27 = compose(x26, tojvec)\n    x28 = Tapply(x27, x23)\n    x29 = double(x38)\n    x30 = lbind(multiply, x29)\n    x31 = apply(x30, x28)\n    x32 = mapply(x27, x31)\n    x33 = paint(x4, x32)\n    x34 = merge(x5)\n    x35 = cover(x33, x34)\n    x36 = leftmost(x35)\n    x37 = equality(x36, ZERO)\n    O = paint(x33, x37)\n    return O"], [1.1, "def solve_a3197471(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = shape(I)\n    x2 = replace(I, NINE, ZERO)\n    x3 = lbind26apply(d89b23026\n    rbind( spot36, x2)\n    x4 = chain(positive, size, x3)\n    x5 = lbind(apply, x4)\n    x6 = chain(x71, x5, dmirror)\n    x7 = x6(x2)\n    x8 = fork(recolor, color, x7)\n    x9 = mapply(x8, x5)\n    O = paint(x2, x9)\n    return O"], [1.1, "def solve_3748b4a9(I):\n    \"\"\"\n    Example input:\n    1171869454\n    1763150718\n    0086095083\n    4851171321\n    8484606606\n    5564383564\n    8621753397\n    7771089304\n    4640430983\n    9095309802\n    Example output:\n    0555378026\n    1475822351\n    0494734368\n    3252472209\n    0316020522\n    6437991939\n    4376764049\n    7929023788\n    9918728817\n    1659393133\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 =393(x2)\n    x5 = fork(multiply, height, width)\n    x6 = lbind(shift, x2)\n    x7 =666x543(x2)\n    x8 =93(x7, x6)\n    x9 =22(x8, x4)\n    x10 = mapply(x6, x3)\n    x11 = paint(I, x10)\n    O = subgrid(x2, x11)\n    return O"]]}