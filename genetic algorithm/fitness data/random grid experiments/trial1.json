{"d56f2372": [[0.273995593168007, "def solve_8747436a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, T, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.3040587683921017, "def solve_7ac1be8f(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [0.3040587683921017, "def solve_b15c2fb9(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [0.32625362023912746, "def solve_084f10d2(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = subgrid(x20, I)\n    x22 = switch(x21, x18, x19)\n    x23 = replace(x22, x18, x4)\n    x24 = lbind(downscale, x23)\n    x25 = fork(upscale, x24, identity)\n    x26 = matcher(x25, x23)\n    x27 = shape(x23)\n    x28 = maximum(x27)\n    x29 = interval(ONE, x28, ONE)\n    x30 = sfilter(x29, x26)\n    x31 = maximum(x30)\n    O = downscale(x23, x31)\n    return O"], [0.3346827117477524, "def solve_f594a25c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_c9eca4cf(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_f8673ff6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_0c008612(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_64dd5476(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_7dd18b34(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_0d70e1aa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_7a49e797(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_099d4c3d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_9d7960c4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.41699831998382725, "def solve_edf2e540(I):\n    x1 = width(I)\n    x2 = astuple(NINE, x1)\n    x3 = canvas(ZERO, x2)\n    x4 = vconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = rbind(colorcount, TWO)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.4204508671590131, "def solve_1f231c1c(I):\n    x1 = objects(I, T, F, T)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = lbind(sfilter, x3)\n    x5 = lbind(matcher, identity)\n    x6 = chain(size, x4, x5)\n    x7 = matcher(x6, ONE)\n    x8 = sfilter(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmax(x8, x9)\n    x11 = matcher(color, x10)\n    x12 = extract(x1, x11)\n    O = subgrid(x12, I)\n    return O"], [0.4225064948253354, "def solve_fa0a5507(I):\n    x1 = asindices(I)\n    x2 = toobject(x1, I)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = rbind(colorcount, TWO)\n    x9 = argmax(x7, x8)\n    O = subgrid(x9, I)\n    return O"], [0.4225064948253354, "def solve_ee531e12(I):\n    x1 = width(I)\n    x2 = astuple(NINE, x1)\n    x3 = canvas(ZERO, x2)\n    x4 = vconcat(I, x3)\n    x5 = objects(x4, F, T, T)\n    x6 = rbind(colorcount, TWO)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.4544472391184824, "def solve_73f4927b(I):\n    x1 = asindices(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(greater, TWO)\n    x4 = compose(x3, size)\n    x5 = sfilter(x2, x4)\n    x6 = totuple(x5)\n    x7 = apply(color, x6)\n    x8 = apply(center, x6)\n    x9 = pair(x7, x8)\n    x10 = fill(I, ZERO, x1)\n    x11 = paint(x10, x9)\n    x12 = rbind(greater, ONE)\n    x13 = compose(dedupe, totuple)\n    x14 = chain(x12, size, x13)\n    x15 = sfilter(x11, x14)\n    x16 = rot90(x15)\n    x17 = sfilter(x16, x14)\n    O = rot270(x17)\n    return O"], [0.47145600561542583, "def solve_7eae5fef(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.4725027588082295, "def solve_a14b567d(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.47691676185236953, "def solve_f3e72b6a(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.49325354355789136, "def solve_cad208c6(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = astuple(ONE, THREE)\n    x8 = size(x6)\n    x9 = order(x6, leftmost)\n    x10 = apply(color, x9)\n    x11 = rbind(canvas, UNITY)\n    x12 = apply(x11, x10)\n    x13 = merge(x12)\n    x14 = dmirror(x13)\n    x15 = subtract(NINE, x8)\n    x16 = astuple(ONE, x15)\n    x17 = mostcolor(I)\n    x18 = canvas(x17, x16)\n    x19 = hconcat(x14, x18)\n    x20 = hsplit(x19, THREE)\n    x21 = merge(x20)\n    x22 = crop(x21, ORIGIN, x7)\n    x23 = crop(x21, DOWN, x7)\n    x24 = crop(x21, TWO_BY_ZERO, x7)\n    x25 = vmirror(x23)\n    x26 = vconcat(x22, x25)\n    O = vconcat(x26, x24)\n    return O"], [0.49325354355789136, "def solve_cad91853(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = astuple(ONE, THREE)\n    x8 = size(x6)\n    x9 = order(x6, leftmost)\n    x10 = apply(color, x9)\n    x11 = rbind(canvas, UNITY)\n    x12 = apply(x11, x10)\n    x13 = merge(x12)\n    x14 = dmirror(x13)\n    x15 = subtract(NINE, x8)\n    x16 = astuple(ONE, x15)\n    x17 = mostcolor(I)\n    x18 = canvas(x17, x16)\n    x19 = hconcat(x14, x18)\n    x20 = hsplit(x19, THREE)\n    x21 = merge(x20)\n    x22 = crop(x21, ORIGIN, x7)\n    x23 = crop(x21, DOWN, x7)\n    x24 = crop(x21, TWO_BY_ZERO, x7)\n    x25 = vmirror(x23)\n    x26 = vconcat(x22, x25)\n    O = vconcat(x26, x24)\n    return O"], [0.4954775600294643, "def solve_48213163(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, T, T)\n    x3 = first(x2)\n    x4 = vline(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(x1)\n    x7 = objects(x6, T, T, T)\n    x8 = order(x7, uppermost)\n    x9 = apply(color, x8)\n    x10 = dedupe(x9)\n    x11 = size(x10)\n    x12 = rbind(repeat, x11)\n    x13 = apply(x12, x10)\n    O = x5(x13)\n    return O"], [0.49704719435154215, "def solve_aa6e98a2(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_4682ec67(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_46cd0e30(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_ed7aad60(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_463751f4(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49709861317837784, "def solve_af3ed0ae(I):\n    x1 = trim(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(x2)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(x2)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(x2)\n    x8 = lefthalf(x7)\n    x9 = palette(x4)\n    x10 = palette(x6)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x4)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x4)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5056030890741036, "def solve_c7dbe277(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.5056030890741036, "def solve_574f486b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.5130794983512649, "def solve_4182867e(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = rbind(equality, x4)\n    x7 = argmin(x5, x6)\n    x8 = asindices(I)\n    x9 = ofcolor(I, x4)\n    x10 = difference(x8, x9)\n    x11 = fill(I, x7, x10)\n    x12 = frontiers(x11)\n    x13 = sfilter(x12, vline)\n    x14 = difference(x12, x13)\n    x15 = astuple(x14, x13)\n    x16 = apply(size, x15)\n    x17 = increment(x16)\n    O = canvas(x4, x17)\n    return O"], [0.5307798906710026, "def solve_0d02d8f4(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5307798906710026, "def solve_5c8f233d(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5585024261811583, "def solve_75888707(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5585024261811583, "def solve_e47c7452(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5585024261811583, "def solve_41fa00c0(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5585024261811583, "def solve_e14349cd(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5585024261811583, "def solve_14b120b7(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5585024261811583, "def solve_c375a6ee(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5585024261811583, "def solve_99db25b8(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5652441058672942, "def solve_802eed96(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = color(x3)\n    x5 = remove(ZERO, x1)\n    x6 = other(x5, x4)\n    O = canvas(x6, UNITY)\n    return O"], [0.5652441058672942, "def solve_b23ce719(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.5859618289027809, "def solve_26ae7cbc(I):\n    x1 = hsplit(I, TWO)\n    x2 = apply(numcolors, x1)\n    x3 = equality(x2, TWO_BY_TWO)\n    x4 = branch(x3, hsplit, vsplit)\n    x5 = x4(I, TWO)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 = palette(x6)\n    x9 = palette(x7)\n    x10 = intersection(x8, x9)\n    x11 = first(x10)\n    x12 = palette(x6)\n    x13 = other(x12, x11)\n    x14 = palette(x7)\n    x15 = other(x14, x11)\n    x16 = shape(x6)\n    x17 = canvas(x11, x16)\n    x18 = ofcolor(x6, x13)\n    x19 = ofcolor(x7, x15)\n    x20 = combine(x18, x19)\n    O = fill(x17, SIX, x20)\n    return O"], [0.5985774392006277, "def solve_b9e61308(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.5985774392006277, "def solve_e406cac2(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.5985774392006277, "def solve_22e7556c(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = branch(x2, ONE, SEVEN)\n    O = canvas(x3, UNITY)\n    return O"], [0.5985774392006277, "def solve_4b3b4369(I):\n    x1 = fgpartition(I)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = compose(flip, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    O = canvas(x5, UNITY)\n    return O"], [0.6016750389108988, "def solve_12bf26e7(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.6016750389108988, "def solve_bbd72cce(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.6016750389108988, "def solve_8dcc0cf4(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.6016750389108988, "def solve_4ee717cb(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.6016750389108988, "def solve_86e9d730(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.601986706041267, "def solve_30ed39b2(I):\n    x1 = first(I)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(ONE, x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = objects(x6, T, F, F)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x5(x10)\n    return O"], [0.6137265258569606, "def solve_14d734ef(I):\n    x1 = astuple(SIX, ONE)\n    x2 = crop(I, ORIGIN, x1)\n    x3 = hmirror(x2)\n    x4 = upscale(x3, THREE)\n    x5 = dmirror(x2)\n    x6 = hconcat(x5, x2)\n    O = upscale(x6, THREE)\n    return O"], [0.6181018953185965, "def solve_b5240ed8(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_8c8a14d5(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_9114b9e5(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_d283af5c(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_9e682e8a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_19c63778(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_8e186af7(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_123b3dad(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6291436647232063, "def solve_ccb549cb(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_774620c3(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_e30533ef(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_71b9b227(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_507d7b13(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_0b7a725b(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_f93b0c11(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_377a47d0(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_2b3d5283(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_fc191c16(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    O = paint(x2, x4)\n    return O"], [0.6307531254528715, "def solve_f3432e08(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x7, x16)\n    x20 = ofcolor(x8, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, THREE, x21)\n    return O"], [0.6411654239156103, "def solve_7c43d454(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [0.6411654239156103, "def solve_86422e76(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [0.6411654239156103, "def solve_43d700f2(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [0.6412800234558097, "def solve_89fb4590(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, T, T)\n    x4 = merge(x3)\n    O = paint(x2, x4)\n    return O"], [0.6416977053214553, "def solve_24e6775d(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.6572952903476961, "def solve_e69f26ec(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.6602138625163511, "def solve_24cfb778(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.6602138625163511, "def solve_1425901f(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6602138625163511, "def solve_96367e9d(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.6662146786568869, "def solve_2f205aff(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, vline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = combine(x15, x16)\n    x18 = intersection(x15, x16)\n    x19 = difference(x17, x18)\n    O = fill(x14, THREE, x19)\n    return O"], [0.6978401405853463, "def solve_8c37c66c(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.6987437235862725, "def solve_c1096266(I):\n    O = trim(I)\n    return O"], [0.6987437235862725, "def solve_67736be5(I):\n    O = trim(I)\n    return O"], [0.6987437235862725, "def solve_b786f420(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, height)\n    x3 = subgrid(x2, I)\n    O = trim(x3)\n    return O"], [0.7046776153928492, "def solve_60d37582(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.7046776153928492, "def solve_d5ed6f6a(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.7068705363346716, "def solve_3e53b338(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, SIX)\n    x3 = compose(flip, x2)\n    x4 = mfilter(x1, x2)\n    x5 = mfilter(x1, x3)\n    x6 = fill(I, TWO, x4)\n    O = fill(x6, ONE, x5)\n    return O"], [0.7209610573661548, "def solve_48e262cc(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.7253714992428528, "def solve_7382b409(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.7265166129217103, "def solve_30e48a57(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.7327606579059885, "def solve_2a1df969(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.7328950067132097, "def solve_a1a881f1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.7348261017318624, "def solve_b607ec74(I):\n    x1 = leastcolor(I)\n    x2 = mostcolor(I)\n    x3 = ofcolor(I, x1)\n    x4 = replace(I, x1, x2)\n    x5 = mapply(dneighbors, x3)\n    x6 = mapply(ineighbors, x3)\n    x7 = fill(x4, ONE, x5)\n    O = fill(x7, x1, x6)\n    return O"], [0.7348261017318624, "def solve_bdb11c07(I):\n    x1 = leastcolor(I)\n    x2 = mostcolor(I)\n    x3 = ofcolor(I, x1)\n    x4 = replace(I, x1, x2)\n    x5 = mapply(dneighbors, x3)\n    x6 = mapply(ineighbors, x3)\n    x7 = fill(x4, ONE, x5)\n    O = fill(x7, x1, x6)\n    return O"], [0.7366714434090215, "def solve_2863bdd1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = first(x2)\n    x4 = neighbors(x3)\n    x5 = mostcolor(I)\n    x6 = shape(I)\n    x7 = canvas(x5, x6)\n    x8 = initset(x3)\n    x9 = fill(x7, x1, x8)\n    O = fill(x9, TWO, x4)\n    return O"], [0.7389410213901323, "def solve_4e55c917(I):\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = lefthalf(x4)\n    x6 = righthalf(x4)\n    x7 = rbind(order, identity)\n    x8 = apply(x7, x5)\n    x9 = apply(x7, x6)\n    x10 = hconcat(x8, x9)\n    O = x3(x10)\n    return O"], [0.739396261410893, "def solve_1695ac79(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.739396261410893, "def solve_8b036e59(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.739396261410893, "def solve_836cc12d(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, TWO, x3)\n    return O"], [0.7400226558178445, "def solve_20542bfc(I):\n    x1 = objects(I, F, F, T)\n    x2 = argmax(x1, numcolors)\n    x3 = remove(x2, x1)\n    x4 = normalize(x2)\n    x5 = apply(ulcorner, x3)\n    x6 = lbind(shift, x4)\n    x7 = mapply(x6, x5)\n    x8 = paint(I, x7)\n    O = cover(x8, x2)\n    return O"], [0.7410390952301974, "def solve_d7fccb94(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.7410390952301974, "def solve_f042c2d5(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.7410390952301974, "def solve_fc762d37(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.741120697952932, "def solve_423c1d40(I):\n    x1 = leastcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = colorfilter(x2, x1)\n    x4 = merge(x3)\n    x5 = delta(x4)\n    x6 = first(x5)\n    x7 = neighbors(x6)\n    O = fill(I, FOUR, x7)\n    return O"], [0.7411341780448716, "def solve_a4074d76(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7411341780448716, "def solve_c960a8fa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7411341780448716, "def solve_2434f2c6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7411341780448716, "def solve_646cb8a3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7411341780448716, "def solve_65654a3a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7411341780448716, "def solve_f3e18066(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7414217191724711, "def solve_51e90d18(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7414217191724711, "def solve_4f193e82(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7414654147115858, "def solve_b19d2edb(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7414654147115858, "def solve_275a100d(I):\n    x1 = lbind(greater, TWO)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(toindices, x3)\n    x5 = rbind(shoot, RIGHT)\n    x6 = compose(x5, center)\n    x7 = fork(recolor, color, x6)\n    x8 = mapply(x7, x4)\n    O = underpaint(I, x8)\n    return O"], [0.7414654147115858, "def solve_29c981c4(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, TWO)\n    x3 = mfilter(x1, x2)\n    x4 = matcher(size, THREE)\n    x5 = mfilter(x1, x4)\n    x6 = matcher(size, FOUR)\n    x7 = mfilter(x1, x6)\n    x8 = fill(I, THREE, x3)\n    x9 = fill(x8, TWO, x5)\n    O = fill(x9, ONE, x7)\n    return O"], [0.7414654147115858, "def solve_a839b426(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7414654147115858, "def solve_decdcc10(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.7414654147115858, "def solve_a2c595f8(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7414654147115858, "def solve_9a66bff6(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_bf8b1bf4(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_acf6bdf9(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7414654147115858, "def solve_21b08718(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(equality, toindices, box)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = argmax(x3, x4)\n    x6 = mostcolor(I)\n    x7 = inbox(x5)\n    x8 = backdrop(x7)\n    x9 = toobject(x8, I)\n    x10 = matcher(first, x6)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x9, x11)\n    x13 = normalize(x12)\n    x14 = color(x13)\n    x15 = toindices(x13)\n    x16 = compose(toindices, normalize)\n    x17 = matcher(x16, x15)\n    x18 = mfilter(x1, x17)\n    O = fill(I, x14, x18)\n    return O"], [0.7414654147115858, "def solve_c1a0a3c6(I):\n    O = subgrid(I, I)\n    return O"], [0.7414654147115858, "def solve_810abb6b(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(greater, TWO)\n    x3 = chain(x2, minimum, shape)\n    x4 = fork(equality, toindices, box)\n    x5 = fork(both, x3, x4)\n    x6 = mfilter(x1, x5)\n    O = fill(I, SEVEN, x6)\n    return O"], [0.7414654147115858, "def solve_d54a664f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7414654147115858, "def solve_1f533393(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = fill(I, x8, x32)\n    return O"], [0.7414654147115858, "def solve_4e71abd1(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = colorfilter(x2, x1)\n    x4 = rbind(toobject, I)\n    x5 = chain(leastcolor, x4, delta)\n    x6 = rbind(shift, UP)\n    x7 = compose(x6, delta)\n    x8 = rbind(mapply, x3)\n    x9 = compose(x8, x7)\n    x10 = fork(4344, x7, x9)\n    x11 = mapply(x10, x3)\n    O = fill(I, x1, x11)\n    return O"], [0.7414654147115858, "def solve_a527719e(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.7414654147115858, "def solve_21c80f55(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.7414654147115858, "def solve_c6f48df8(I):\n    O = replace(I, SEVEN, FIVE)\n    return O"], [0.7414654147115858, "def solve_bb7a076d(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.7414654147115858, "def solve_eb364f82(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_0c3b3abd(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_e2c11e11(I):\n    x1 = objects(I, F, F, T)\n    x2 = argmax(x1, numcolors)\n    x3 = astuple(TWO, FOUR)\n    x4 = rbind(contained, x3)\n    x5 = compose(x4, size)\n    x6 = rbind(sfilter, x5)\n    x7 = lbind(rbind, subtract)\n    x8 = lbind(occurrences, I)\n    x9 = lbind(lbind, shift)\n    x10 = compose(x7, ulcorner)\n    x11 = chain(x10, x6, normalize)\n    x12 = chain(x8, x6, normalize)\n    x13 = fork(apply, x11, x12)\n    x14 = compose(x9, normalize)\n    x15 = fork(mapply, x14, x13)\n    x16 = astuple(cmirror, dmirror)\n    x17 = astuple(hmirror, vmirror)\n    x18 = combine(x16, x17)\n    x19 = product(x18, x18)\n    x20 = fork(compose, first, last)\n    x21 = apply(x20, x19)\n    x22 = totuple(x21)\n    x23 = combine(x18, x22)\n    x24 = rapply(x23, x2)\n    x25 = mapply(x15, x24)\n    O = paint(I, x25)\n    return O"], [0.7414654147115858, "def solve_b07a8d11(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.7414654147115858, "def solve_f6d76d02(I):\n    x1 = palette(I)\n    x2 = remove(FIVE, x1)\n    x3 = first(x2)\n    x4 = ofcolor(I, x3)\n    x5 = fill(I, ZERO, x4)\n    x6 = ofcolor(I, FIVE)\n    O = fill(x5, x3, x6)\n    return O"], [0.7416617825061995, "def solve_6ee59fd8(I):\n    x1 = crop(I, ORIGIN, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7419294883893283, "def solve_ce587d0c(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_40070ff3(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_c25ac752(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_5331b04f(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_0556d0a8(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_ea483d50(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_c0586be1(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_4194c07f(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_459c45f7(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_a12a9fa9(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_58912951(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_29b8411f(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_05159e96(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7424486197279571, "def solve_2ebdc1eb(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = chain(size, dedupe, first)\n    x9 = matcher(x8, ONE)\n    x10 = compose(first, cmirror)\n    x11 = chain(size, dedupe, x10)\n    x12 = matcher(x11, ONE)\n    x13 = fork(both, x9, x12)\n    x14 = rbind(rapply, I)\n    x15 = compose(initset, first)\n    x16 = chain(first, x14, x15)\n    x17 = compose(x13, x16)\n    x18 = extract(x7, x17)\n    x19 = first(x18)\n    x20 = last(x18)\n    x21 = x19(I)\n    x22 = width(x21)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = index(x21, x24)\n    x26 = asobject(x21)\n    x27 = matcher(first, x25)\n    x28 = compose(flip, x27)\n    x29 = sfilter(x26, x28)\n    x30 = hperiod(x29)\n    x31 = width(x21)\n    x32 = increment(x31)\n    x33 = interval(ZERO, x32, x30)\n    x34 = apply(tojvec, x33)\n    x35 = lbind(shift, x29)\n    x36 = mapply(x35, x34)\n    x37 = paint(x21, x36)\n    O = x20(x37)\n    return O"], [0.7426909638249383, "def solve_62256d0a(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7430839091203382, "def solve_26ad5817(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = rbind(difference, x2)\n    x4 = rbind(greater, TWO)\n    x5 = chain(x4, size, x3)\n    x6 = compose(x5, dneighbors)\n    x7 = sfilter(x2, x6)\n    O = fill(I, ZERO, x7)\n    return O"], [0.7431832795883769, "def solve_adaea082(I):\n    x1 = objects(I, T, F, T)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = mostcommon(x3)\n    x5 = canvas(x4, TWO_BY_TWO)\n    x6 = asobject(x5)\n    x7 = palette(I)\n    x8 = matcher(identity, x4)\n    x9 = argmin(x7, x8)\n    x10 = shape(I)\n    x11 = canvas(x9, x10)\n    x12 = lbind(shift, x6)\n    x13 = occurrences(I, x6)\n    x14 = mapply(x12, x13)\n    O = paint(x11, x14)\n    return O"], [0.743417242412885, "def solve_fc935b42(I):\n    x1 = fork(multiply, height, width)\n    x2 = partition(I)\n    x3 = argmax(x2, x1)\n    x4 = remove(x3, x2)\n    x5 = argmax(x4, x1)\n    x6 = other(x4, x5)\n    x7 = palette(I)\n    x8 = lrcorner(x5)\n    x9 = add(x8, UNITY)\n    x10 = llcorner(x5)\n    x11 = add(x10, DOWN_LEFT)\n    x12 = urcorner(x5)\n    x13 = add(x12, UP_RIGHT)\n    x14 = ulcorner(x5)\n    x15 = add(x14, NEG_UNITY)\n    x16 = shoot(x9, UNITY)\n    x17 = shoot(x11, DOWN_LEFT)\n    x18 = shoot(x13, UP_RIGHT)\n    x19 = shoot(x15, NEG_UNITY)\n    x20 = combine(x16, x17)\n    x21 = combine(x18, x19)\n    x22 = combine(x20, x21)\n    x23 = color(x6)\n    O = fill(I, x23, x22)\n    return O"], [0.744309578111282, "def solve_cff284a0(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = contained(ZERO, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, ZERO)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.744309578111282, "def solve_0bfe2599(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.744309578111282, "def solve_f83cfc9e(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.744309578111282, "def solve_bca68728(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.744309578111282, "def solve_c2a12f17(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.744309578111282, "def solve_9370ba68(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.744309578111282, "def solve_606449bf(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.744309578111282, "def solve_f0c062e9(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.744932556029496, "def solve_a6007a60(I):\n    x1 = leastcolor(I)\n    x2 = height(I)\n    x3 = vsplit(I, x2)\n    x4 = lbind(recolor, TWO)\n    x5 = rbind(ofcolor, x1)\n    x6 = chain(x4, delta, x5)\n    x7 = fork(paint, identity, x6)\n    x8 = apply(x7, x3)\n    O = merge(x8)\n    return O"], [0.7450712646640288, "def solve_70e537c0(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(shoot, DOWN)\n    x3 = compose(x2, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    O = paint(I, x5)\n    return O"], [0.7453226770852263, "def solve_51a9ff61(I):\n    x1 = objects(I, T, F, T)\n    x2 = mapply(delta, x1)\n    O = fill(I, SEVEN, x2)\n    return O"], [0.7453281977266278, "def solve_fea2dd17(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = height(x2)\n    x4 = halve(x3)\n    x5 = width(x2)\n    x6 = halve(x5)\n    x7 = ulcorner(x2)\n    x8 = lrcorner(x2)\n    x9 = shape(I)\n    x10 = maximum(x9)\n    x11 = multiply(THREE, TEN)\n    x12 = interval(ZERO, x11, ONE)\n    x13 = rbind(multiply, x4)\n    x14 = apply(x13, x12)\n    x15 = rbind(multiply, x6)\n    x16 = apply(x15, x12)\n    x17 = pair(x14, x16)\n    x18 = rbind(add, x7)\n    x19 = apply(invert, x17)\n    x20 = apply(x18, x19)\n    x21 = rbind(add, x8)\n    x22 = apply(x21, x17)\n    x23 = pair(x20, x22)\n    x24 = mapply(box, x23)\n    O = fill(I, x1, x24)\n    return O"], [0.746036831698095, "def solve_16ca361e(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.746036831698095, "def solve_2ee32888(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.746036831698095, "def solve_7ae31051(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.7461098366866447, "def solve_23df3883(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = rbind(multiply, THREE)\n    x6 = rbind(divide, THREE)\n    x7 = compose(x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = toindices(x4)\n    x10 = compose(x8, last)\n    x11 = sfilter(x9, x10)\n    O = fill(I, SIX, x11)\n    return O"], [0.7462669862994846, "def solve_c9b36130(I):\n    O = dmirror(I)\n    return O"], [0.7462669862994846, "def solve_c43ebc54(I):\n    O = dmirror(I)\n    return O"], [0.7462669862994846, "def solve_d9741062(I):\n    O = dmirror(I)\n    return O"], [0.7464740545096182, "def solve_555fb7c6(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7467587450693074, "def solve_49b55b5b(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(shoot, RIGHT)\n    x4 = compose(x3, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(x1, DOWN_LEFT)\n    x9 = initset(x8)\n    x10 = mostcolor(I)\n    x11 = recolor(x10, x9)\n    x12 = objects(x7, T, F, T)\n    x13 = insert(x11, x12)\n    x14 = order(x13, uppermost)\n    x15 = first(x14)\n    x16 = remove(x11, x14)\n    x17 = remove(x15, x14)\n    x18 = compose(lrcorner, first)\n    x19 = compose(lrcorner, last)\n    x20 = fork(connect, x18, x19)\n    x21 = compose(color, first)\n    x22 = fork(recolor, x21, x20)\n    x23 = pair(x16, x17)\n    x24 = mapply(x22, x23)\n    O = underpaint(x7, x24)\n    return O"], [0.7470375666629149, "def solve_e4e70cb1(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, ONE, x6)\n    return O"], [0.7471075059718015, "def solve_95c35b68(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7476233794761621, "def solve_761070fb(I):\n    O = rot180(I)\n    return O"], [0.7478561079652767, "def solve_360099ce(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = recolor(ZERO, x2)\n    x4 = normalize(x3)\n    x5 = occurrences(I, x4)\n    x6 = toindices(x4)\n    x7 = lbind(shift, x6)\n    x8 = mapply(x7, x5)\n    O = fill(I, x1, x8)\n    return O"], [0.7481170341881848, "def solve_6482a033(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7481170341881848, "def solve_40e9c8df(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7481170341881848, "def solve_34ac5d8e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7481170341881848, "def solve_13884eaa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7481170341881848, "def solve_7a598386(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7481170341881848, "def solve_24400ee6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7481170341881848, "def solve_e24c552d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7481170341881848, "def solve_6a1912f2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7481170341881848, "def solve_eee644a0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7482565735643151, "def solve_10cf80c1(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_7cf868b9(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_0babfdda(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_6cc4f03e(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_81cb3365(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_165720ef(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_c66b0680(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_6b2389c7(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_c7371453(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_6e11b024(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_7cfb6dd5(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7484974551407092, "def solve_21e98f9e(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.7484974551407092, "def solve_cca89912(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.7485427567125599, "def solve_d1509c3e(I):\n    O = vmirror(I)\n    return O"], [0.7485427567125599, "def solve_74f08535(I):\n    O = vmirror(I)\n    return O"], [0.7487022635082722, "def solve_1b1c9fca(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.7487022635082722, "def solve_954eb638(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.7487022635082722, "def solve_d5b63ed1(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.7487035816092084, "def solve_c8d28a47(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.749321253046244, "def solve_9af89688(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.7498499462550435, "def solve_523d9c55(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.7498499462550435, "def solve_5883616d(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind( sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.7498499462550435, "def solve_1d868504(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.7499677021690484, "def solve_cbd1597b(I):\n    O = cmirror(I)\n    return O"], [0.7516087933992682, "def solve_e0cd8800(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.7516087933992682, "def solve_536c7915(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.7518753424364076, "def solve_6f267caf(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7518753424364076, "def solve_ca4e52c9(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7522366246475464, "def solve_4b3dbf01(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = lbind(power, outbox)\n    x8 = chain(x7, halve, width)\n    x9 = initset(x8)\n    x10 = lbind(rapply, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = compose(backdrop, x12)\n    x14 = fork(difference, x13, toindices)\n    x15 = mapply(x14, x1)\n    x16 = mostcolor(I)\n    x17 = ofcolor(I, x16)\n    x18 = intersection(x15, x17)\n    O = fill(x6, THREE, x18)\n    return O"], [0.7545626265317441, "def solve_e31408cd(I):\n    x1 = switch(I, THREE, FOUR)\n    O = replace(x1, EIGHT, NINE)\n    return O"], [0.755468108640728, "def solve_10288e4a(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, EIGHT, x6)\n    return O"], [0.755468108640728, "def solve_5063e569(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, EIGHT, x6)\n    return O"], [0.755468108640728, "def solve_99ad2cfe(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, EIGHT, x6)\n    return O"], [0.7598499462550435, "def solve_687daf70(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.7621304031378884, "def solve_a12e172f(I):\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.770283578319142, "def solve_7b9f301b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.770283578319142, "def solve_1499f949(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.770283578319142, "def solve_9467b2a4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7854388492260345, "def solve_fd781b02(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, T, F, T)\n    x9 = colorfilter(x8, x4)\n    x10 = sizefilter(x9, ONE)\n    x11 = merge(x10)\n    O = fill(x6, TWO, x11)\n    return O"], [0.7871062946758173, "def solve_2b688564(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, vmirror, hmirror)\n    x9 = x8(x6)\n    x10 = branch(x7, leftmost, uppermost)\n    x11 = branch(x7, tojvec, toivec)\n    x12 = x10(x5)\n    x13 = x10(x6)\n    x14 = greater(x12, x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = x11(x16)\n    x18 = shape(x6)\n    x19 = multiply(x17, x18)\n    x20 = shift(x9, x19)\n    x21 = fill(I, THREE, x3)\n    O = paint(x21, x20)\n    return O"], [0.7882967708662934, "def solve_9bedaaf3(I):\n    x1 = index(I, ORIGIN)\n    x2 = objects(I, T, F, F)\n    x3 = fork(multiply, height, width)\n    x4 = fork(equality, size, x3)\n    x5 = chain(positive, decrement, size)\n    x6 = colorfilter(x2, x1)\n    x7 = fork(both, x4, x5)\n    x8 = sfilter(x6, x7)\n    x9 = merge(x8)\n    x10 = ofcolor(I, x1)\n    x11 = fill(I, FOUR, x10)\n    O = fill(x11, THREE, x9)\n    return O"], [1.0, "def solve_a57bb1ab(I):\n    x1 = objects(I, T, F, T)\n    x2 = lbind(index, I)\n    x3 = compose(x2, lrcorner)\n    x4 = astuple(NEG_TWO, NEG_TWO)\n    x5 = rbind(subtract, x4)\n    x6 = rbind(shoot, x4)\n    x7 = compose(x5, x6)\n    x8 = fork(recolor, x3, x7)\n    x9 = mapply(x8, x1)\n    O = paint(I, x9)\n    return O"], [1.0, "def solve_2559f642(I):\n    x1 = rbind(Sfilter, vline)\n    x2 = compose(x1, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shift(x4, DOWN)\n    x6 = fill(x3, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [1.0, "def solve_3dcfe43c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_3bdae9ce(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = lbind(shift, x4)\n    x6 = mapply(x5, x2)\n    O = fill(I, THREE, x6)\n    return O"], [1.0, "def solve_17ae3959(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_e6b6f71e(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = connect(x3, x4)\n    x8 = combine(x7, x6)\n    O = fill(x1, EIGHT, x8)\n    return O"], [1.0, "def solve_a24c1107(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_eb5c8386(I):\n    x1 = fork(combine, vfrontier, hfrontier)\n    x2 = compose(x1, center)\n    x3 = fork(recolor, color, x2)\n    x4 = mapply(x3, x1)\n    x5 = paint(I, x4)\n    x6 = interval(ZERO, FIVE, ONE)\n    x7 = apply(double, x6)\n    x8 = apply(increment, x7)\n    x9 = apply(tojvec, x8)\n    x10 = prapply(shift, x1, x9)\n    x11 = apply(asobject, x10)\n    x12 = lbind(shift, x11)\n    x13 = mapply(x12, x2)\n    O = paint(x5, x13)\n    return O"], [1.0, "def solve_727dc712(I):\n    x1 = lbind(recolor, EIGHT)\n    x2 = rbind(ofcolor, ZERO)\n    x3 = chain(x1, backdrop, x2)\n    x4 = fork(paint, identity, x3)\n    x5 = height(I)\n    x6 = vsplit(I, x5)\n    x7 = mapply(x4, x6)\n    x8 = ofcolor(x7, EIGHT)\n    x9 = dmirror(I)\n    x10 = width(I)\n    x11 = vsplit(x9, x10)\n    x12 = mapply(x11, x8)\n    x13 = fill(x12, ZERO, x11)\n    x14 = dmirror(x13)\n    x15 = ofcolor(x14, EIGHT)\n    x16 = mapply(x15, x15)\n    O = fill(x13, ZERO, x16)\n    return O"], [1.0, "def solve_36f33f0c(I):\n    x1 = rot180(I)\n    x2 = rot270(I)\n    x3 = hconcat(I, x1)\n    x4 = hconcat(x3, x2)\n    O = vconcat(x4, x4)\n    return O"], [1.0, "def solve_4fe97998(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_5e0ff3e0(I):\n    x1 = vmirror(I)\n    O = hconcat(x1, I)\n    return O"], [1.0, "def solve_3ced58f2(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_37b12428(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_39e8e32b(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_f526a19c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_6ed2fc1c(I):\n    x1 = objects(I, T, F, T)\n    x2 = colorfilter(x1, ONE)\n    x3 = fork(subtract, first, last)\n    x4 = fork(multiply, sign, identity)\n    x5 = compose(x4, x3)\n    x6 = rbind(greater, TWO)\n    x7 = chain(x6, minimum, x5)\n    x8 = lbind(matcher, x7)\n    x9 = compose(x8, x3)\n    x10 = chain(sfilter, center, x9)\n    x11 = fork(shift, identity, x10)\n    x12 = mapply(x11, x2)\n    x13 = paint(I, x12)\n    x14 = canvas(ZERO, THREE_BY_THREE)\n    O = fill(x14, EIGHT, x2)\n    return O"], [1.0, "def solve_a5240307(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_8a691169(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = objects(x7, T, F, T)\n    x9 = colorfilter(x8, x6)\n    x10 = sizefilter(x9, ONE)\n    x11 = merge(x10)\n    x12 = argmax(x11, size)\n    x13 = subgrid(x12, x7)\n    x14 = width(x13)\n    x15 = divide(x14, x12)\n    x16 = downscale(x13, x15)\n    x17 = height(x16)\n    x18 = divide(x17, x12)\n    x19 = width(x12)\n    x20 = invert(x19)\n    x21 = interval(x20, x17, ONE)\n    x22 = prapply(shift, x7, x21)\n    x23 = merge(x22)\n    x24 = canvas(x6, x13)\n    x25 = asobject(x23)\n    x26 = insert(x24, x25)\n    x27 = height(x26)\n    x28 = increment(x18)\n    x29 = interval(ZERO, x28, x12)\n    x30 = apply(tojvec, x29)\n    x31 = pair(x30, x10)\n    x32 = sfilter(x31, ONE)\n    x33 = compose(size, first)\n    x34 = order(x32, x33)\n    x35 = apply(last, x34)\n    x36 = mpapply(recolor, x35, x32)\n    O = paint(x16, x36)\n    return O"], [1.0, "def solve_bcb376ba(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_4ffeddb9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_bdcadf62(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_65f78d9a(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_6338f343(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_1091f27e(I):\n    x1 = mostcolor(I)\n    x2 = colorcount(I, x1)\n    x3 = height(I)\n    x4 = width(I)\n    x5 = multiply(x3, x4)\n    x6 = subtract(x5, x2)\n    O = upscale(I, x6)\n    return O"], [1.0, "def solve_4c266689(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_28419118(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_7abb41f0(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_76c3f8ce(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_90e6c29c(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_64c1c1ce(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_f26a54c6(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_469c75f2(I):\n    x1 = height(I)\n    x2 = vsplit(I, x1)\n    x3 = apply(asobject, x2)\n    x4 = apply(hperiod, x3)\n    x5 = minimum(x4)\n    x6 = width(I)\n    x7 = hsplit(I, x6)\n    x8 = apply(asobject, x7)\n    x9 = apply(vperiod, x8)\n    x10 = minimum(x9)\n    x11 = matcher(hperiod, x5)\n    x12 = sfilter(x3, x11)\n    x13 = mapply(palette, x12)\n    x14 = matcher(vperiod, x10)\n    x15 = sfilter(x8, x14)\n    x16 = mapply(palette, x15)\n    x17 = palette(I)\n    x18 = combine(x13, x16)\n    x19 = rbind(contained, x18)\n    x20 = argmin(x17, x19)\n    x21 = asobject(I)\n    x22 = matcher(first, x20)\n    x23 = compose(flip, x22)\n    x24 = sfilter(x21, x23)\n    x25 = height(I)\n    x26 = divide(x25, x10)\n    x27 = increment(x26)\n    x28 = width(I)\n    x09 = divide(x28, x5)\n    x20 = increment(x29)\n    x21 = invert(x27)\n    x22 = interval(x21, x27, ONE)\n    x23 = apply(tojvec, x22)\n    x24 = lbind(shift, x24)\n    x25 = mapply(x24, x23)\n    O = paint(I, x25)\n    return O"], [1.0, "def solve_ce1bf59f(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    O = vperiod(x3)\n    return O"], [1.0, "def solve_a6da8000(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = increment(UNITY)\n    x4 = neighbors(x3)\n    x5 = delta(x3)\n    x6 = tophalf(I)\n    x7 = shift(x5, x6)\n    x8 = fill(I, ZERO, x7)\n    x9 = shape(x8)\n    x10 = maximum(x9)\n    x11 = lbind(shift, x8)\n    x12 = mapply(x11, x4)\n    O = fill(x8, x1, x12)\n    return O"], [1.0, "def solve_28fab0a5(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_eb1fb102(I):\n    x1 = rot270(I)\n    x2 = fork(equality, identity, rot90)\n    x3 = chain(flip, x2, x1)\n    x4 = sfilter(x1, x3)\n    x5 = fork(multiply, height, width)\n    x6 = argmax(x4, x5)\n    x7 = x6(I)\n    x8 = remove(x6, x7)\n    x9 = argmax(x8, x8)\n    x10 = lbind(chain, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x10, x11)\n    x13 = lbind(sfilter, x17)\n    x14 = chain(initset, x13, x12)\n    x15 = fork(upscale, identity, x14)\n    x16 = compose(rot90, x15)\n    x17 = power(x16, TWO)\n    x18 = x17(x6)\n    x19 = hconcat(x18, x17)\n    x20 = hmirror(x19)\n    x21 = vconcat(x19, x20)\n    x22 = vconcat(x21, x6)\n    x23 = x17(x22)\n    x24 = ofcolor(x23, ZERO)\n    x25 = asindices(x23)\n    x26 = outbox(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, x23)\n    x29 = mostcolor(x28)\n    x30 = color(x2)\n    x31 = matcher(first, x29)\n    x32 = compose(flip, x31)\n    x33 = sfilter(x1, x32)\n    x34 = sizefilter(x33, ONE)\n    x35 = merge(x34)\n    x36 = fill(x23, x30, x35)\n    x37 = paint(x36, x21)\n    O = x17(x37)\n    return O"], [1.0, "def solve_c9e2d240(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_89f8f38b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_a884a768(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_9c01849c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, mat, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [1.0, "def solve_e2924178(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_40f86e64(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_bf036372(I):\n    x1 = replace(I, SEVEN, FIVE)\n    x2 = ofcolor(I, THREE)\n    x3 = portrait(x2)\n    x4 = branch(x3, dmirror, identity)\n    x5 = x4(I)\n    x6 = decrement(x5)\n    x7 = hsplit(x6, THREE)\n    x8 = rbind(ofcolor, THREE)\n    x9 = apply(x8, x7)\n    x10 = leastcommon(x9)\n    x11 = matcher(x8, x10)\n    x12 = extract(x7, x11)\n    O = x4(x12)\n    return O"], [1.0, "def solve_6446b59d(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_5c338025(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, T)\n    x4 = merge(x3)\n    x5 = color(x4)\n    x6 = palette(x2)\n    x7 = remove(x5, x6)\n    x8 = lbind(colorcount, x4)\n    x9 = argmin(x7, x8)\n    x10 = ofcolor(x1, x9)\n    x11 = ofcolor(x2, x9)\n    x12 = combine(x10, x11)\n    x13 = mapply(neighbors, x12)\n    x14 = difference(x12, x13)\n    x15 = toobject(x14, x1)\n    x16 = apply(initset, x15)\n    x17 = rbind(gravitate, x17)\n    x18 = compose(crement, x17)\n    x19 = fork(shift, identity, x18)\n    x20 = mapply(x19, x15)\n    x21 = cover(x1, x20)\n    x22 = paint(x21, x02)\n    O = rot90(x22)\n    return O"], [1.0, "def solve_4b657b37(I):\n    x1 = branch(I, x2, ZERO)\n    x2 = branch(x1, x3, x5)\n    O = branch(x1, x4, x2)\n    return O"], [1.0, "def solve_1c512565(I):\n    x1 = rot180(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = x3(I)\n    x6 = shape(x4)\n    x7 = canvas(ZERO, x6)\n    x8 = ofcolor(x4, ZERO)\n    x9 =iers(x8)\n    x10 = intersection(x8, x9)\n    x11 = fill(x7, ZERO, x10)\n    O = x2(x11)\n    return O"], [1.0, "def solve_91e2daab(I):\n    x1 = asindices(I)\n    x2 = shape(I)\n    x3 = halve(x2)\n    x4 = rbind(shoot, x3)\n    x5 = compose(x4, last)\n    x6 = fork(recolor, first, x5)\n    x7 = mapply(x6, x1)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_8f945ce1(I):\n    x1 = faffalf(I)\n    x2 = equality(x1, I)\n    x3 = branch(x2, ONE, SEVEN)\n    O = canvas(x3, UNITY)\n    return O"], [1.0, "def solve_5e966667(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(toobject, I)\n    x4 = compose(first, delta)\n    x5 = rbind(colorcount, x1)\n    x6 = matcher(x5, TWO)\n    x7 = chain(x6, x3, dneighbors)\n    x8 = rbind(sfilter, x7)\n    x9 = chain(first, x8, toindices)\n    x10 = fork(subtract, x4, x9)\n    x11 = fork(shoot, x4, x10)\n    x12 = mapply(x11, x2)\n    x13 = fill(I, x1, x12)\n    x14 = mapply(delta, x2)\n    O = fill(x13, ZERO, x14)\n    return O"], [1.0, "def solve_c764df95(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_c356f8f6(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_fe49977b(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_1988e87c(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x8)\n    x11 = palette(x9)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x8, x13)\n    x15 = ofcolor(x10, x13)\n    x16 = difference(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [1.0, "def solve_4be9b6dc(I):\n    x1 = halve(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [1.0, "def solve_c27661f2(I):\n    x1 =287257462\n    x2 = frontiers(I)\n    x3 = merge(x2)\n    x4 = difference(x1, x3)\n    x5 = mostcolor(x4)\n    x6 = objects(I, T, F, F)\n    x7 = color(x3)\n    x8 = matcher(color, x7)\n    x9 = matcher(color, x5)\n    x10 = fork(either, x8, x9)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x6, x11)\n    x13 = merge(x12)\n    x14 = palette(x13)\n    x15 = lbind(toobject, x13)\n    x16 = lbind(colorcount, x13)\n    x17 = chain(x16, x15, dneighbors)\n    x18 = matcher(x17, TWO)\n    x19 = rbind(adjacent, x2)\n    x20 = rbind(adjacent, x11)\n    x21 = fork(both, x18, x20)\n    x22 = compose(x21, initset)\n    x23 = sfilter(x12, x18)\n    x24 = sfilter(x12, x22)\n    x25 = product(x23, x24)\n    x26 = fork(combine, vfrontier, hfrontier)\n    x27 = mapply(x26, x25)\n    x28 = mostcolor(I)\n    x29 = fill(I, x28, x27)\n    O = fill(x29, x8, x27)\n    return O"], [1.0, "def solve_9bbe6b7f(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_81671bb3(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_594fcdbe(I):\n    x1 = frontiers(I)\n    x2 = palette(I)\n    x3 = compose(maximum, shape)\n    x4 = lbind(apply, x3)\n    x5 = lbind(shift, x1)\n    x6 = lbind(ofcolor, I)\n    x7 = compose(x4, x5)\n    x8 = subgrid(x2, I)\n    x9 = objects(x8, T, F, T)\n    x10 = colorfilter(x9, TWO)\n    x11 = apply(x7, x10)\n    x12 = mapply(x11, x11)\n    x13 = mapply(x5, x12)\n    x14 = replace(x13, ONE, SIX)\n    O = fill(x14, THREE, x12)\n    return O"], [1.0, "def solve_08232941(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [1.0, "def solve_f4e94f93(I):\n    x1 = astuple(SIX, THREE)\n    x2 = astuple(FOUR, FOUR)\n    x3 = astuple(ONE, x2)\n    x4 = initset(x3)\n    x5 = insert(x14, x4)\n    x6 = insert(x1, x5)\n    x7 = apply(x6, x6)\n    x8 = crop(I, ORIGIN, THREE_BY_THREE)\n    O = asindices(x8)\n    return O"], [1.0, "def solve_d48bfcea(I):\n    x1 = first(I)\n    x2 = last(I)\n    x3 = equality(x1, x2)\n    x4 = crop(I, ORIGIN, THREE_BY_THREE)\n    x5 = branch(x3, x2, x4)\n    x6 = vconcat(I, x5)\n    O = replace(x6, ONE, TWO)\n    return O"], [1.0, "def solve_98cd6245(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = fork(multiply, height, width)\n    x4 = x3(I)\n    x5 = astuple(ONE, x4)\n    x6 = mostcolor(I)\n    x7 = canvas(x6, x5)\n    x8 = backdrop(x7)\n    x9 = lbind(hsplit, x8)\n    x10 = matcher(x9, x4)\n    x11 = fork(combine, vfrontier, hfrontier)\n    x12 = compose(x11, x10)\n    x13 = rbind(ofcolor, ZERO)\n    x14 = rbind(mapply, x12)\n    x15 = lbind(lbind, shift)\n    x16 = chain(x13, x14, x15)\n    x17 = apply(x16, x19)\n    O = paint(x7, x17)\n    return O"], [1.0, "def solve_fc0118f4(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    x5 = palette(x4)\n    x6 = intersection(x5, x2)\n    x7 = lbind(colorcount, x4)\n    x8 = argmax(x6, x7)\n    x9 = remove(x8, x6)\n    x10 = rbind(contained, x9)\n    x11 = compose(x10, color)\n    x12 = sfilter(x3, x11)\n    x13 = lbind(colorcount, x4)\n    x14 = argmax(x12, x13)\n    x15 = objects(x12, T, F, F)\n    x16 = colorfilter(x15, x14)\n    x17 = difference(x15, x16)\n    x18 = apply(leftmost, x17)\n    x19 = size(x18)\n    x20 = apply(uppermost, x17)\n    x21 = size(x20)\n    x22 = greater(x19, x21)\n    x23 = rbind(adjacent, x28)\n    x24 = rbind(adjacent, x22)\n    x25 = chain(x23, x24, last)\n    x26 = compose(x22, first)\n    x27 = fork(both, x25, x26)\n    x28 = sfilter(x18, x27)\n    x29 = compose(toindices, first)\n    x30 = lbind(mapply, x29)\n    x31 = chain(x30, x29, first)\n    x32 = fork(recolor, x31, x30)\n    x33 = mapply(x32, x18)\n    x34 = paint(x1, x33)\n    O = x38(x34)\n    return O"], [1.0, "def solve_5d582e24(I):\n    x1 = objects(I, T, F, T)\n    x2 = palette(I)\n    x3 = lbind(sfilter, x1)\n    x4 = rbind(compose, palette)\n    x5 = lbind(lbind, contained)\n    x6 = chain(x3, x4, x5)\n    x7 = compose(size, x6)\n    x8 = argmax(x2, x7)\n    x9 = rbind(colorcount, x8)\n    x10 = valmax(x2, x9)\n    x11 = matcher(x9, x10)\n    x12 = sfilter(x1, x11)\n    x13 = merge(x12)\n    x14 = palette(x13)\n    x15 = lbind(colorcount, x13)\n    x16 = argmin(x14, x15)\n    x17 = rbind(colorcount, x16)\n    x18 = argmax(x12, x17)\n    x19 = apply(ulcorner, x12)\n    x20 = lbind(shift, x18)\n    x21 = mapply(x20, x19)\n    x22 = paint(I, x21)\n    O = rot90(x22)\n    return O"], [1.0, "def solve_1ffb18e1(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_e9dc5f5d(I):\n    x1 = astuple(ONE, THREE)\n    x2 = size(I)\n    x3 = decrement(x2)\n    x4 = astuple(x3, ONE)\n    x5 = canvas(ZERO, x4)\n    x6 = tojvec(x3)\n    x7 = rbind(shoot, x6)\n    x8 = crement(x2)\n    x9 = lefthalf(x8)\n    x10 = insert(x7, x9)\n    x11 = width(I)\n    x12 = shoot(x4, DOWN)\n    x13 =tojvec(x12)\n    x14 = rbind(shoot, x13)\n    x15 = creine(x14)\n    x16 = insert(x7, x15)\n    x17 = mapply(x7, x11)\n    x18 = combine(x10, x17)\n    x19 = fill(x5, ZERO, x18)\n    O = replace(x19, ZERO, ONE)\n    return O"], [1.0, "def solve_5d37e618(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_4618d3f2(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_396f6c7c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_5e276d71(I):\n    x1 = rot35(I)\n    x2 = rbind(shoot, UP)\n    x3 = compose(x2, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    O = paint(x1, x5)\n    return O"], [1.0, "def solve_3ad9e0a5(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_4a12020f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = rbind(multiply, THREE)\n    x8 = apply(x7, x6)\n    O = rot180(x6)\n    return O"], [1.0, "def solve_fe998a9f(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_268ab6ab(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x4)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x6)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x4)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x4)\n    x26 = x22(x6)\n    x27 = x25(x2)\n    x28 = paint(x18, x27)\n    x29 = paint(x28, x26)\n    x30 = paint(x29, x25)\n    O = paint(x30, x24)\n    return O"], [1.0, "def solve_df958280(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_3d08137f(I):\n    x1 =50005\n    x2 = fgpartition(I)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = difference(x1, x4)\n    x6 = objects(I, T, F, T)\n    x7 = colorfilter(x6, ZERO)\n    x8 = rbind(shoot, DOWN)\n    x9 = mapply(x8, x7)\n    x10 = double(TEN)\n    x11 = rbind(greater, x10)\n    x12 = compose(x11, size)\n    x13 = mapply(x12, x9)\n    x14 = fill(I, ZERO, x13)\n    x15 = replace(x14, ZERO, EIGHT)\n    O = fill(x15, dmirror, x15)\n    return O"], [1.0, "def solve_16d90b02(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_a1b1b80a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = connect(x3, x4)\n    x8 = connect(x3, x5)\n    x9 = combine(x7, x8)\n    O = leastcolor(x9)\n    return O"], [1.0, "def solve_84167e7e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_b177332f(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_d0f48e69(I):\n    x1 = rbind(shoot, UNITY)\n    x2 = compose(x1, center)\n    x3 = fork(recolor, color, x2)\n    x4 = mapply(x3, x1)\n    x5 = objects(I, T, F, T)\n    x6 = rbind(colorcount, SIX)\n    x7 = valmax(x5, x6)\n    x8 = matcher(x6, x7)\n    x9 = sfilter(x8, x8)\n    x10 = merge(x9)\n    x11 = cover(I, x10)\n    x12 = rbind(toobject, I)\n    x13 = chain(delta, x12, delta)\n    x14 = mapply(x13, x9)\n    O = paint(x11, x14)\n    return O"], [1.0, "def solve_1e51567c(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_11dc1aab(I):\n    x1 = ofcolor(I, ONE)\n    x2 = lbind(rbind, shoot)\n    x3 = lbind(mapply, x2)\n    x4 = rbind(shoot, UP)\n    x5 = rbind(shoot, DOWN)\n    x6 = fork(combine, x3, x5)\n    x7 = fork(intersection, x1, x6)\n    x8 = size(x1)\n    x9 = decrement(x8)\n    x10 = index(I, x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, LEFT, RIGHT)\n    x13 = compose(size, x12)\n    x14 = decrement(x13)\n    x15 = index(I, x14)\n    x16 = equality(x15, ZERO)\n    x17 = branch(x16,leftmost, uppermost)\n    x18 = x17(x14)\n    x19 = shift(x18, UNITY)\n    x20 = x17(x19)\n    x21 = first(x20)\n    x22 = last(x21)\n    x23 = x17(x22)\n    x24 = color(x23)\n    x25 = branch(x11, RIGHT, LEFT)\n    x26 = x25(x20)\n    x27 = initset(x26)\n    x28 = insert(x25, x27)\n    x29 = insert(x24, x28)\n    x30 = insert(x22, x29)\n    x31 =recbind(greater, x30)\n    x32 = compose(x31, ulcorner)\n    x33 = sfilter(x30, x32)\n    x34 = merge(x33)\n    x35 = cover(I, x34)\n    x36 = subgrid(x35, x35)\n    O = paint(x36, x33)\n    return O"], [1.0, "def solve_299ba4db(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = EIGHT(x4)\n    return O"], [1.0, "def solve_af3078d2(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_4dd02a86(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_d77aeb5b(I):\n    x1 = dmirror(I)\n    x2 = equality(x1, I)\n    x3 = compose(dedupe, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = last(x6)\n    x8 = first(x6)\n    x9 = last(x6)\n    x10 = switch(x7, x8, x9)\n    x11 = forward(x10)\n    x12 = replace(x11, ONE, x6)\n    x13 = ofcolor(x12, ONE)\n    x14 = combine(x13, x7)\n    x15 = fill(x12,428, x14)\n    x16 = ofcolor(x15, ONE)\n    x17 = mapply(neighbors, x16)\n    x18 = difference(x17, x15)\n    O = fill(x15, EIGHT, x18)\n    return O"], [1.0, "def solve_bfe83657(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_d799a856(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(merge, x3)\n    x5 = merge(x4)\n    x6 = toindices(x5)\n    x7 = rbind(shoot, UP_RIGHT)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    x10 = fill(I, EIGHT, x9)\n    x11 = hmirror(x10)\n    x12 = index(x11, ORIGIN)\n    x13 = shoot(ORIGIN, UNITY)\n    x14 = fill(x10, DOWN, x13)\n    x15 = indexcolors(x11)\n    x16 = apply(Example, x15)\n    x17 = remove(x16, x15)\n    x18 = lbind(mapply, x7)\n    x19 = chain(x18, positive, size)\n    x20 = branch(x17, x19, x15)\n    O = x19(x20)\n    return O"], [1.0, "def solve_b292fa38(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = initset(x1)\n    x5 = chain(numcolors, lefthalf, tophalf)\n    x6 = insert(x2, x4)\n    x7 = insert(x3, x6)\n    x8 = insert(x7, x5)\n    x9 = argmax(x8, x5)\n    x10 = cover(x1, x9)\n    O = paint(x10, x4)\n    return O"], [1.0, "def solve_f662032c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_860b98fc(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(greater, size, dedupe)\n    x3 = equality(x1, TWO)\n    x4 = branch(x3, height, width)\n    x5 = x4(I)\n    x6 = equality(ONE, x5)\n    x7 = branch(x6, vsplit, hsplit)\n    x8 = x7(I, TWO)\n    x9 = order(x8, numcolors)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = objects(x11, F, F, T)\n    x13 = merge(x12)\n    x14 = mostcolor(x13)\n    x15 = matcher(first, x14)\n    x16 = compose(flip, x15)\n    x17 = rbind(sfilter, x16)\n    x18 = mostcolor(x10)\n    x19 = lbind(recolor, x18)\n    x20 = rbind(sfilter, x15)\n    x21 = compose(toindices, x20)\n    x22 = chain(x19, x21, normalize)\n    x23 = objects(x11, T, F, T)\n    x24 = colorfilter(x23, x18)\n    x25 = rbind(bordering, x10)\n    x26 = compose(flip, x25)\n    x27 = mfilter(x24, x26)\n    x28 = paint(x11, x27)\n    x29 = replace(x28, x18, x137)\n    x30 = x22(x29)\n    x31 = x22(x30)\n    x32 = flip(x6)\n    x33 = branch(x32, invert, outbox)\n    x34 = branch(x32, subgrid, x33)\n    x35 = apply(x34, x32)\n    O = x17(x35)\n    return O"], [1.0, "def solve_0784a25f(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = compose(x2, x1)\n    x4 = fork(intersection, x1, x3)\n    x5 = compose(size, x4)\n    x6 = palette(I)\n    x7 = matcher(x5, ZERO)\n    x8 = sfilter(x6, x7)\n    x9 = totuple(x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = mapply(neighbors, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = ofcolor(I, x11)\n    x17 = mapply(neighbors, x16)\n    x18 = toobject(x17, I)\n    x19 = mostcolor(x18)\n    x20 = rbind(shoot, UNITY)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = fork(combine, x20, x21)\n    x23 = rbind(shoot, UP_RIGHT)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = fork(combine, x23, x24)\n    x26 = fork(combine, x22, x25)\n    x27 = ofcolor(I, x11)\n    x28 = ofcolor(I, x10)\n    x29 = combine(x27, x28)\n    x30 = mapply(x26, x29)\n    x31 = ofcolor(I, x15)\n    x32 = intersection(x31, x30)\n    x33 = ofcolor(I, x19)\n    x34 = intersection(x33, x30)\n    x35 = fill(I, x10, x32)\n    O = fill(x35, x11, x34)\n    return O"], [1.0, "def solve_07cfb384(I):\n    x1 = asobject(I)\n    x2 = lbind(shift, x1)\n    x3 = compose(x2, decrement)\n    x4 = mapply(x3, x1)\n    O = paint(I, x4)\n    return O"], [1.0, "def solve_90f29ed4(I):\n    x1 =41388428\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = solve(doubleneighbors, x3)\n    x5 = astuple(ONE, NINE)\n    x6 = canvas(ZERO, x5)\n    x7 = fill(x6, ONE, x4)\n    x8 = hsplit(x7, THREE)\n    O = merge(x8)\n    return O"], [1.0, "def solve_612c7ac5(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_09dc8890(I):\n    x1 = hconcat(I, I)\n    x2 = vconcat(x1, x1)\n    x3 = asindices(x2)\n    x4 = mostcolor(I)\n    x5 = ofcolor(x2, x4)\n    x6 = difference(x3, x5)\n    x7 = mapply(ineighbors, x6)\n    O = underfill(x2, EIGHT, x7)\n    return O"], [1.0, "def solve_59af1e5e(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_6d19cad6(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_a9ade526(I):\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, x1)\n    x3 = lbind(toobject, I)\n    x4 = chain(x2, x3, ZERO)\n    x5 = fork(both, x4, x5)\n    x6 = compose(5, x5)\n    x7 = fork(hmatching, x6, identity)\n    x8 = compose(NEG_ONE, x7)\n    x9 = lbind(apply, x8)\n    x10 = chain(even, x9, leastcolor)\n    x11 = lbind(sfilter, x1)\n    x12 = compose(dmirror, x11)\n    x13 = lbind(lbind, shift)\n    x14 = rbind(compose, x12)\n    x15 = lbind(lbind, occurrences)\n    x16 = chain(x13, x14, x15)\n    x17 = rbind(compose, x10)\n    x18 = lbind(lbind, occurrences)\n    x19 = chain(x17, x18, xin)\n    x20 = rbind(mapply, x10)\n    x21 = compose(x20, x7)\n    x22 = fork(compose, x21, x7)\n    x23 = pair(x15, x17)\n    x24 = mapply(x22, x23)\n    O = underfill(I, ONE, x24)\n    return O"], [1.0, "def solve_0acc32c5(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_86cf3b27(I):\n    x1 = asobject(I)\n    x2 = hperiod(x1)\n    x3 = height(x1)\n    x4 = lbind(multiply, x3)\n    x5 = height(I)\n    x6 = subtract(x3, x5)\n    x7 = rot90(I)\n    x8 = rot180(I)\n    x9 = astuple(x6, x7)\n    x10 = astuple(x8, x9)\n    x11 = papply(shift, x7, x10)\n    x12 = apply(hmirror, x11)\n    x13 = mapply(vmirror, x12)\n    x14 = astuple(x6, x13)\n    x15 = canvas(x4, x14)\n    x16 = paint(x15, x13)\n    O = rot270(x16)\n    return O"], [1.0, "def solve_244c4426(I):\n    x1 = lbind(greater, TWO)\n    x2 = compose(x1, size)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(merge, x3, identity)\n    x5 = apply(x4, I)\n    x6 = chain(identity, merge, hmirror)\n    x7 = apply(x6, x5)\n    x8 = merge(x7)\n    x9 = fill(I, FOUR, x8)\n    x10 = compose(hmirror, vmirror)\n    x11 = fork(combine, x10, x9)\n    x12 = apply(x11, x5)\n    O = fill(x9, TWO, x12)\n    return O"], [1.0, "def solve_1e92da8f(I):\n    x1 = hmirror(I)\n    x2 = papply(pair, x1, I)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    O = apply(x2, x6)\n    return O"], [1.0, "def solve_2ca75bd8(I):\n    x1 = ofcolor(I, ONE)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = ofcolor(I, x4)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = mfilter(x5, x7)\n    x9 = fill(I, TWO, x8)\n    x10 = ofcolor(I, x4)\n    O = fill(x9, FOUR, x10)\n    return O"], [1.0, "def solve_c5e07062(I):\n    x1 = astuple( SEVEN, FIVE)\n    x2 = canvas(ZERO, x1)\n    x3 = tojvec(SIX)\n    x4 = index(I, x3)\n    x5 = equality(x4, FOUR)\n    x6 = branch(x5, lefthalf, tophalf)\n    x7 = branch(x5, righthalf, bottomhalf)\n    x8 = x4(I)\n    x9 = x7(I)\n    x10 = shape(x8)\n    x11 = canvas(x8, x10)\n    x12 = intersection(x9, x11)\n    O = fill(x11, TWO, x12)\n    return O"], [1.0, "def solve_d8171682(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_0960938f(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x11, x16)\n    x20 = ofcolor(x18, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, SIX, x21)\n    return O"], [1.0, "def solve_3be0c54b(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_8fc3afc9(I):\n    x1 = dmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = objects(x2, F, F, T)\n    x4 = argmin(x3, numcolors)\n    x5 = astuple(ONE, x4)\n    x6 = subgrid(x4, x5)\n    x7 = lefthalf(x6)\n    x8 = righthalf(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [1.0, "def solve_615572ce(I):\n    x1 = command36(I, EIGHT)\n    x2 = d037(x1)\n    x3 = apply(initset, x2)\n    x4 = rbind(rapply, I)\n    x5 = compose(first, x4)\n    x6 = compose(c59eb873, x5)\n    x7 = fork(recolor, x6, identity)\n    x8 = mapply(x7, x3)\n    x9 = palette(I)\n    x10 = remove(ZERO, x9)\n    x11 = other(x10, x8)\n    x12 = ofcolor(I, x11)\n    x13 = argmin(x12, last)\n    x14 = replace(I, x11, ZERO)\n    x15 = ofcolor(x14, x15)\n    x16 = subgrid(x15, x14)\n    x17 = mapply(x16, x16)\n    O = replace(x17, x11, ZERO)\n    return O"], [1.0, "def solve_2a6fb118(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_238d1110(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 = difference(x1, x2)\n    x9 = compose(normalize, toindices)\n    x10 = x9(x6)\n    x11 = x9(x7)\n    x12 = matcher(x9, x10)\n    x13 = matcher(x9, x11)\n    x14 = extract(x8, x12)\n    x15 = extract(x8, x13)\n    x16 = ulcorner(x6)\n    x17 = ulcorner(x7)\n    x18 = ulcorner(x14)\n    x19 = ulcorner(x15)\n    x20 = subtract(x16, x18)\n    x21 = subtract(x17, x19)\n    x22 = move(I, x14, x20)\n    O = move(x22, x15, x21)\n    return O"], [1.0, "def solve_be76cc93(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_b4eb0f69(I):\n    O = upscale(I, TWO)\n    return O"], [1.0, "def solve_dccf82fc(I):\n    x1 = fill(I, FOUR, x2)\n    x2 = astuple(TWO, FOUR)\n    x3 = size(x1)\n    x4 = order(x1, leftmost)\n    x5 = apply(color, x4)\n    x6 = rbind(canvas, x5)\n    x7 = apply(x6, x5)\n    x8 = merge(x7)\n    x9 = dmirror(x8)\n    x10 = subtract(NINE, x3)\n    x11 = astuple(x10, x4)\n    x12 = canvas(ZERO, x11)\n    x13 = hconcat(x9, x12)\n    x14 = hsplit(x13, TWO)\n    x15 = merge(x14)\n    x16 = crop(x15, ORIGIN, x2)\n    x17 = crop(x15, DOWN, x2)\n    x18 = crop(x15, TWO_BY_ZERO, x2)\n    x19 = vmirror(x17)\n    x20 = vconcat(x16, x19)\n    O = vconcat(x20, x18)\n    return O"], [1.0, "def solve_5aa066d6(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_0379e05a(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_650c1a9e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = width(I)\n    x5 = multiply(x4, x4)\n    x6 = intersection(x1, x5)\n    x7 = canvas(x3, x6)\n    x8 = fork(multiply, height, width)\n    x9 = lbind(shift, x2)\n    x10 = compose(x9, x8)\n    x11 = mapply(x10, x6)\n    O = fill(x7, TWO, x11)\n    return O"], [1.0, "def solve_6ba38a39(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_c6f6f14a(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_af881021(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_1271870d(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = compose(x2, x1)\n    x4 = fork(intersection, x1, x3)\n    x5 = compose(size, x4)\n    x6 = palette(I)\n    x7 = matcher(x5, ZERO)\n    x8 = sfilter(x6, x7)\n    x9 = totuple(x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = mapply(neighbors, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = ofcolor(I, x11)\n    x17 = mapply(neighbors, x16)\n    x18 = toobject(x17, I)\n    x19 = mostcolor(x18)\n    x20 = rbind(shoot, UNITY)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = fork(combine, x20, x21)\n    x23 = rbind(shoot, UP_RIGHT)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = fork(combine, x23, x24)\n    x26 = fork(combine, x22, x25)\n    x27 = ofcolor(I, x11)\n    x28 = ofcolor(I, x10)\n    x29 = combine(x27, x28)\n    x30 = mapply(x26, x29)\n    x31 = ofcolor(I, x15)\n    x32 = intersection(x31, x30)\n    x33 = ofcolor(I, x19)\n    x34 = intersection(x33, x30)\n    x35 = fill(I, x10, x32)\n    O = fill(x35, x11, x34)\n    return O"], [1.0, "def solve_3def0451(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_a9e577f8(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [1.0, "def solve_4ced8a9e(I):\n    x1 = matcher(identity, ZERO)\n    x2 = branch(x1, ONE, SEVEN)\n    O = x2(I)\n    return O"], [1.0, "def solve_c5b26daf(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = subgrid(x2, I)\n    x3 = shape(x2)\n    x4 = halve(x3)\n    x5 = rbind(multiply, x4)\n    x6 = rbind(divide, x3)\n    x7 = compose(x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = sfilter(x1, x8)\n    x10 = compose(increment, minimum)\n    x11 = chain(decrement,arymost, x10)\n    x12 = compose(x11, last)\n    x13 = fork(connect, x12, x5)\n    x14 = compose(last, first)\n    x15 = compose(last, x14)\n    x16 = fork(equality, x13, x15)\n    x17 = mfilter(x9, x16)\n    O = fill(x6, EIGHT, x17)\n    return O"], [1.0, "def solve_fe512e1d(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_7ec6cc2e(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_aa417b1f(I):\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = lbind(power, outbox)\n    x8 = chain(x7, halve, width)\n    x9 = initset(x8)\n    x10 = lbind(rapply, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = compose(backdrop, x12)\n    x14 = fork(difference, x13, toindices)\n    x15 = mapply(x14, x1)\n    x16 = mostcolor(I)\n    x17 = ofcolor(I, x16)\n    x18 = intersection(x15, x17)\n    O = fill(x6, THREE, x18)\n    return O"], [1.0, "def solve_dc59fb5e(I):\n    O = upscale(I, THREE)\n    return O"], [1.0, "def solve_e014b216(I):\n    x1 = ONE(I)\n    x2 = canvas(ZERO, THREE_BY_THREE)\n    x3 = asobject(x2)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, SIX, x6)\n    return O"], [1.0, "def solve_faa0e83c(I):\n    x1 = palette(I)\n    x2 = contained(ONE, x1)\n    x3 = branch(x2, ZERO, EIGHT)\n    x4 = canvas(x3, UNITY)\n    x5 = connect(ORIGIN, UNITY)\n    x6 = recolor(ONE, x5)\n    O = x3(x4)\n    return O"], [1.0, "def solve_b4b2f7d9(I):\n    x1 = astuple(SIX, FIVE)\n    x2 = canvas(ZERO, x1)\n    x3 = paint(x2, x2)\n    O = replace(x3, ONE, TWO)\n    return O"], [1.0, "def solve_6aba0774(I):\n    x1 = fgpartition(I)\n    x2 = valmax(x1, size)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, x2, x2)\n    x5 = shift(x4, UNITY)\n    x6 = merge(x1)\n    x7 = other(x1, x6)\n    x8 = equality(x2, FOUR)\n    x9 = shift(x8, UP_RIGHT)\n    x10 = paint(I, x9)\n    x11 = branch(x3, x2, x9)\n    x12 = cover(x10, x11)\n    x13 = branch(x8, x2, x9)\n    x14 = multiply(TEN, TEN)\n    x15 = branch(x41, x13, x14)\n    x16 = fork(combine, vfrontier, hfrontier)\n    x17 = x16(x15)\n    O = underfill(x9, x7, x17)\n    return O"], [1.0, "def solve_839039cf(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_efee02e0(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_c3f94ca3(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = cmirror(x4)\n    x6 = papply(pair, x4, x5)\n    x7 = apply(x3, x6)\n    x8 = vmirror(x7)\n    x9 = papply(pair, x7, x8)\n    x10 = apply(x3, x9)\n    x11 = hmirror(x10)\n    x12 = papply(pair, x11, x10)\n    x13 = apply(x3, x12)\n    x14 = vmirror(x13)\n    x15 = papply(pair, x13, x14)\n    x16 = apply(x3, x15)\n    x17 = hmirror(x16)\n    x18 = papply(pair, x16, x17)\n    x19 = apply(x3, x18)\n    x20 = vmirror(x19)\n    x21 = papply(pair, x19, x20)\n    x22 = apply(x3, x21)\n    x23 = vmirror(x22)\n    x24 = papply(pair, x21, x23)\n    x25 = apply(x3, x24)\n    x26 = shoot(ORIGIN, UNITY)\n    x27 = mapply(x26, x25)\n    O = fill(x1, ZERO, x27)\n    return O"], [1.0, "def solve_a15c64b7(I):\n    x1 = lbind(fork, subtract)\n    x2 = lbind(chain, ZERO)\n    x3 = lbind(x2, x1)\n    x4 = lbind(rbind, add)\n    x5 = chain(x4, x3, numcolors)\n    x6 = lbind(chain, x5)\n    x7 = rbind(x6, toindices)\n    x8 = lbind(rbind, extract)\n    x9 = compose(last, last)\n    x10 = chain(x8, x7, x9)\n    x11 = compose(first, last)\n    x12 = lbind(fork, greater)\n    x13 = compose(x12, x11)\n    x14 = lbind(fork, astuple)\n    x15 = compose(x14, x13)\n    x16 = rbind(sfilter, x15)\n    x17 = compose(x16, ulcorner)\n    x18 = compose(x16, urcorner)\n    x19 = compose(x16, shoot)\n    x20 = chain(x17, x18, x19)\n    x21 = compose(x16, llcorner)\n    x22 = compose(x16, lrcorner)\n    x23 = chain(x17, x21, x22)\n    x24 = rbind(mapply, x3)\n    x25 = chain(x17, x43, x24)\n    x26 = compose(x25, x23)\n    x27 = fork(recolor, x26, x20)\n    x28 = mapply(x27, x1)\n    O = paint(I, x28)\n    return O"], [1.0, "def solve_2d18b4dd(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_2d1f4f3c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_6a833f01(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_a6bbe9db(I):\n    x1 = rot180(I)\n    x2 = matcher(identity, ZERO)\n    x3 = rbind(sfilter, x2)\n    x4 = compose(size, x3)\n    x5 = apply(x4, x1)\n    x6 = merge(x5)\n    x7 = lbind(subtract, x6)\n    x8 = chain(increment, x7, size)\n    x9 = apply(x8, x1)\n    x10 = ZERO(x6)\n    x11 = lbind(subtract, x10)\n    x12 = chain(x11, x8, size)\n    x13 = rbind(sfilter, x12)\n    x14 = rbind(subgrid, I)\n    x15 = chain(asobject, x13, x14)\n    x16 = apply(x15, x9)\n    x17 = ZERO(x10)\n    x18 = lbind(subtract, x17)\n    x19 = chain(invert, x18, shift)\n    x20 = fork(shift, identity, x19)\n    x21 = mapply(x20, x16)\n    O = paint(x1, x21)\n    return O"], [1.0, "def solve_f6c4f2f2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = shape(I)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(I, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmin(x11, numcolors)\n    x13 = normalize(x12)\n    x14 = toindices(x13)\n    x15 = increment(x4)\n    x16 = increment(x15)\n    x17 = increment(x5)\n    x18 = increment(x17)\n    x19 = astuple(x16, x18)\n    x20 = lbind(shift, x14)\n    x21 = rbind(multiply, x19)\n    x22 = chain(x20, x21, last)\n    x23 = fork(recolor, first, x22)\n    x24 = normalize(x12)\n    x25 = mapply(x23, x24)\n    O = paint(x9, x25)\n    return O"], [1.0, "def solve_6ee84d4f(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_b09a1bcf(I):\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, x1)\n    x3 = compose(maximum, x2)\n    x4 = lbind(apply, x3)\n    x5 = chain(positive, size, x4)\n    x6 = lbind(sfilter, x3)\n    x7 = compose(x6, x3)\n    x8 = rbind(compose, x3)\n    x9 = lbind(lbind, contained)\n    x10 = chain(x8, x9, x7)\n    x11 = apply(x10, x5)\n    x12 = sfilter(x11, x7)\n    x13 = fork(hmatching, identity, vmirror)\n    x14 = mfilter(x12, x13)\n    x15 = mostcolor(I)\n    x16 = paint(I, x15)\n    x17 = objects(x16, T, F, T)\n    x18 = compose(backdrop, inbox)\n    x19 = apply(x18, x17)\n    x20 = mfilter(x19, x5)\n    O = fill(x16, EIGHT, x20)\n    return O"], [1.0, "def solve_38c09ef6(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = merge(x5)\n    x7 = palette(x6)\n    x8 = lbind(mfilter, x5)\n    x9 = lbind(matcher, x4)\n    x10 = compose(x8, x9)\n    x11 = fork(sfilter, identity, x10)\n    x12 = apply(x11, x7)\n    x13 = merge(x12)\n    x14 = lbind(colorcount, I)\n    x15 = argmin(x12, x14)\n    x16 = ofcolor(I, x15)\n    x17 = recolor(x15, x16)\n    x18 = compose(initset, x17)\n    x19 = fork(min, identity, x18)\n    x20 = ofcolor(I, x15)\n    x21 = rbind(shoot, UNITY)\n    x22 = DOWN(x21)\n    x23 = leftmost(x20)\n    x24 = height(I)\n    x25 = increment(x24)\n    x26 = interval(ZERO, x25, ONE)\n    x27 = apply(double, x26)\n    x28 = mapply(increment, x27)\n    x29 = apply(tojvec, x28)\n    x30 = prapply(shift, x27, x29)\n    x31 = mapply(x19, x30)\n    x32 = paint(I, x31)\n    x33 = biind(canvas, NEG_ONE)\n    x34 = rbind(apply, x33)\n    x35 = lbind(recolor, x15)\n    x36 = chain(x34, x35, x29)\n    x37 = mapply(x36, x34)\n    O = underpaint(x32, x37)\n    return O"], [1.0, "def solve_d4ef95a8(I):\n    x1 = ofcolor(I, TWO)\n    x2 = portrait(x1)\n    x3 = branch(x2, vsplit, hsplit)\n    x4 = x3(I, TWO)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = vmirror(x5)\n    x8 = vconcat(x7, x7)\n    x9 = hmirror(x8)\n    O = vconcat(x9, x8)\n    return O"], [1.0, "def solve_f46e8227(I):\n    x1 = trim(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(x2)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(x2)\n    x6 = lefthalf(x5)\n    x7 = bottomhalf(x2)\n    x8 = righthalf(x7)\n    x9 = palette(x4)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x4)\n    x13 = palette(x4)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x4)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x5)\n    x24 = x22(x6)\n    x25 = x22(x4)\n    x26 = x22(x6)\n    x27 = lefthalf(x18)\n    x28 = lefthalf(x27)\n    x29 = righthalf(x28)\n    x30 = righthalf(x29)\n    x31 = palette(x23)\n    x32 = palette(x24)\n    x33 = intersection(x31, x32)\n    x34 = first(x33)\n    x35 = shape(x4)\n    x36 = canvas(x35, x32)\n    x37 = intersection(x33, x32)\n    x38 = paint(x36, x37)\n    O = x22(x38)\n    return O"], [1.0, "def solve_4f29a2df(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_e0ad5289(I):\n    x1 = fork(equality, identity, dmirror)\n    x2 = compose(flip, x1)\n    O = extract(x1, x2)\n    return O"], [1.0, "def solve_fc18abc6(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = Fgpartition(I)\n    x4 = merge(x3)\n    x5 = cover(I, x4)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = leastcolor(I)\n    O = fill(x5, x7, x6)\n    return O"], [1.0, "def solve_841ba802(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_4cba1dbd(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_ed95fbb4(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_68ea083f(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = multiply(x4, x4)\n    x6 = canvas(x3, x5)\n    x7 = asobject(I)\n    x8 = shift(x7, UNITY)\n    O = paint(x6, x8)\n    return O"], [1.0, "def solve_ddc996f8(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.1, "def solve_8b1069cd(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 =1000(I)\n    x2 =5000(x1, x4)\n    x3 = compose(positive, size)\n    x4 = rbind(sfilter, x3)\n    x5 = chain(x2, x4, frontiers)\n    x6 = merge(x2)\n    x7 = contained(x6, x5)\n    x8 = height(x7)\n    x9 = width(x7)\n    x10 = rbind(multiply, x8)\n    x11 = power(x10, TWO)\n    x12 = compose(rot90, x11)\n    x13 = power(x12, FOUR)\n    x14 = x15(I)\n    x15 = x16(I)\n    x16 = matcher(first, x14)\n    x17 = compose(flip, x16)\n    x18 = sfilter(x15, x17)\n    x19 = lbind(ofcolor, x14)\n    x20 = compose(x19, asobject)\n    x21 = fork(subtract, x20, identity)\n    x22 = compose(first, x21)\n    x23 = fork(mapply, x22, identity)\n    x24 = chain(x19, x23, x14)\n    x25 =594color(x18, NEG_ONE)\n    x26 = lone(x25)\n    x27 = asindices(x18)\n    x28 = matcher(first, NEG_ONE)\n    x29 = rbind(sfilter, x28)\n    x30 = lbind(shift, x27)\n    x31 = chain(x29, x30, x29)\n    x32 = mapply(x31, x73)\n    x33 = replace(x16, NEG_ONE, ZERO)\n    x34 = dmirror(x32)\n    x35 = combine(x33, x34)\n    x36 = flip(x35)\n    x37 = asindices(x16)\n    x38 = toobject(x37, x16)\n    x39 = multiply(x38, UNITY)\n    x40 = rbind"], [1.1, "def solve_f112163f(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_2952bcf0(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = rot90(I)\n    x2 = apply(mostcommon, I)\n    x3 = hmirror(x1)\n    x4 =oe(x3, I)\n    x5 = merge(x4)\n    x6 = palette(x5)\n    x7 =5031982586\n    8713671684\n    3955068690\n    0764217343\n    5380956567\n    \"\"\"\n    x1 = asindices(x1)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = ofcolor(x3, x4)\n    x6 = vmirror(x5)\n    x7 = hmirror(x5)\n    x8 = astuple(x6, x7)\n    x9 = combine(x leftmost, x8)\n    x10 = hmirror(x7)\n    x11 = invert(x10)\n    x12 = increment(x11)\n    x13 = order(x9, x12)\n    x14 = difference(x9, x13)\n    x15 = toobject(x14, x13)\n    x16 = apply(increment, x15)\n    x17 = apply(tojvec, x16)\n    x18 = prapply(shift, x17, x9)\n    x19 = mapply(x18, x14)\n    x20 = ofcolor(x19, x4)\n    x21 = lbind(shift, x19)\n    x22 = mapply(x21, x20)\n    x23 = rightmost(x20)\n    x24 = lbind(shift, x20)\n    x25 = mapply(x24, x23)\n    x26 = ulcorner(x20)\n    x27 = lbind(shift, x27)\n    x28 = mapply(x27, x22)\n    x29 = sfilter(x24, x18)\n    x30 = sizefilter(x29, x28)\n    x31 = lbind(shift, x27)\n    x32 ="], [1.1, "def solve_75434d9a(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_a7ea8a26(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = compose(first, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = compose(last, last)\n    x8 = totuple(x2)\n    x9 = apply(x7, x8)\n    x10 = mostcommon(x9)\n    x11 = compose(first, last)\n    x12 = matcher(x11, x6)\n    x13 = sfilter(x2, x12)\n    x14 = compose(last, last)\n    x15 = matcher(x14, x10)\n    x16 = sfilter(x2, x15)\n    x17 = objects(I, F, T, T)\n    x18 = size(x17)\n    x19 = equality(x18, TWO)\n    x20 = mfilter(x17, hline)\n    x21 = mfilter(x17, vline)\n    x22 = branch(x19, x20, x13)\n    x23 = branch(x19, x21, x16)\n    x24 = width(x22)\n    x25 = lbind(multiply, x24)\n    x26 = width(I)\n    x27 = divide(x26, x24)\n    x28 = increment(x27)\n    x29 = interval(ZERO, x28, ONE)\n    x30 = apply(x25, x29)\n    x31 = apply(invert, x30)\n    x32 = combine(x30, x31)\n    x33 = apply(tojvec, x32)\n    x34 = lbind(shift, x22)\n    x35 = mapply(x34, x33)\n    x36 = height(x23)\n    x37 = lbind(multiply, x36)\n    x38 = height(I)\n    x39 = height(x22)\n    x40 = divide(x38, x39)\n    x41 = increment(x40)\n    x42 = interval"], [1.1, "def solve_bb1b5cc0(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = fork(multiply, height, width)\n    x2 = fgpartition(I)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = argmax(x4, x1)\n    x6 = outbox(x5)\n    x7 = corners(x6)\n    x8 = combine(x7, x5)\n    x9 = fill(I, x3, x8)\n    x10 = asobject(x5)\n    x11 = ofcolor(x10, ZERO)\n    x12 = difference(x10, x11)\n    x13 = rbind(contained, x12)\n    x14 = compose(x13, first)\n    x15 = sfilter(x11, x14)\n    x16 = difference(x11, x15)\n    x17 = compose(x13, first)\n    x18 = fork(multiply, x17, x16)\n    x19 = compose(x18, last)\n    x20 = fork(equality, toindices, x19)\n    x21 = fork(equality, toindices, x20)\n    x22 = fork(either, x20, x21)\n    x23 = rbind(sfilter, x22)\n    x24 = compose(x23, trim)\n    x25 = chain(x20, x22, x24)\n    x26 = compose(x25, asobject)\n    x27 = apply(x26, x15)\n    x28 = last(x27)\n    x29 = remove(x28, x27)\n    x30 = color(x28)\n    x31 = combine(x29, x30)\n    x32 =x23(x31)\n    x33 = asobject(x32)\n    x34 = apply(x33, x31)\n    x35 = prapply(shift, x29, x34)\n    x36 = mapply(x35, x43)\n    x37 = paint(x96, x36)\n    x38 = astuple(x31, x33)\n    x39 = x38(x37)\n    x40 = fill"], [1.1, "def solve_649fb1de(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =618\n    \"\"\"\n    x2 = lbind(subtract,    INE)\n    x3 = chain(even, x2, last)\n    x4 = rbind(branch, ZERO)\n    x5 = rbind(x4, x3)\n    x6 = chain(initset, x5, x4)\n    x7 = fork(rapply, x6, identity)\n    x8 = compose(first, x7)\n    x9 = rbind(branch, ONE)\n    x10 = rbind(x9, x8)\n    x11 = chain(initset, x10, x7)\n    x12 = fork(rapply, x11, identity)\n    x13 = compose(first, x12)\n    x14 = extract(x1, x13)\n    x15 = x14(I)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 =666(x16, x17)\n    x19 = merge(x18)\n    x20 = cover(x16, x19)\n    x21 = flip(x18)\n    x22 = branch(x21, x20, x19)\n    x23 = branch(x1, x22, x20)\n    x24 = multiply(xTEN, DOWN)\n    x25 = ulcorner(x28)\n    x26 = add(x25, x24)\n    x27 = power(x22, x26)\n    x28 = add(x25, x23)\n    x29 = shift(x19, x28)\n    x30 = x27(x29)\n    x31 = palette(x30)\n    x32 = lbind(shift, x30)\n    x33 = apply(x32, x31)\n    x34 = mapply(dneighbors, x33)\n    x35 = mapply(ineighbors, x34)\n    x36 = other(x61, x39)\n    x37 = colorfilter(x36, x39)\n    x38 = rbind(adjacent, xMas)\n    x39 = apply(x38, x37)\n"], [1.1, "def solve_1cea9ef6(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = argmin(x1, size)\n    x5 = shoot(x4, NEG_UNITY)\n    x6 = insert(x4, x5)\n    x7 = recolor(x3, x6)\n    x8 = frontiers(I)\n    x9 = sfilter(x8, vline)\n    x10 = size(x9)\n    x11 = positive(x10)\n    x12 = branch(x11, dmirror, identity)\n    x13 = x12(I)\n    x14 = x12(I)\n    x15 = ofcolor(x13, x3)\n    x16 = subgrid(x15, x13)\n    x17 = ZERO(x16)\n    x18 = shift(x15, x17)\n    x19 = ulcorner(x15)\n    x20 = urcorner(x15)\n    x21 = shoot(x19, NEG_UNITY)\n    x22 = shoot(x20,_LEFT)\n    x23 = combine(x21, x22)\n    x24 = shoot(x19, UP_RIGHT)\n    x25 = shoot(x20, DOWN_LEFT)\n    x26 = combine(x24, x25)\n    x27 = combine(x23, x26)\n    x28 = lbind(contained, x27)\n    x29 = chain(flip, x28, last)\n    x30 = cfilter(x11, x29)\n    x31 = branch(x11, height, width)\n    x32 = x31(I)\n    x33 = even(x32)\n    x34 = branch(x33, vline, hline)\n    x35 = x34(I)\n    x36 = astuple(x34, x35)\n    x37 = shift(x15, x36)\n    x38 = combine(x31, x37)\n    x39 = x30(x38)\n    x40 = shift(x19, x39)\n    x41 = combine("], [1.1, "def solve_aa93e0ce(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = positive(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_bd85689d(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_865d8377(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_9139b776(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_9ad6136f(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_0a25e854(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asobject(x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = astuple(x27, x25)\n    x29 = lbind(subtract, x28)\n    x30 = compose(x29, last)\n    x31 =173(x04)\n    x32 = rbind(ofcolor, ZERO)\n    x33 = fork(add, last, first)\n    x34 = chain(x31, x32, x33)\n    x35 = compose(x34, x30)\n    x36 = objects(x32, x26, F, T)\n    x37 = sfilter(x36, x35)\n    x38 = lbind(recolor, ONE)\n    x39 = compose(x38, outbox)\n    x40 = fork(combine, x34"], [1.1, "def solve_19c30321(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 =173(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = frontiers(x3)\n    x5 = sfilter(x4, hline)\n    x6 = size(x5)\n    x7 = increment(x6)\n    x8 = sfilter(x4, vline)\n    x9 = size(x8)\n    x10 = increment(x9)\n    x11 = height(x3)\n    x12 = decrement(x11)\n    x13 = to frontiers(x12)\n    x14 = sfilter(x13, vline)\n    x15 = size(x14)\n    x16 = increment(x15)\n    x17 = width(x3)\n    x18 = decrement(x17)\n    x19 = tophalf(x3)\n    x20 = increment(x19)\n    x21 = rbind(multiply, x20)\n    x22 = chain(tophalf, x21, initset)\n    x23 = fork(insert, dmirror, x22)\n    x24 = fork(insert, cmirror, x23)\n    x25 = fork(insert, hmirror, x24)\n    x26 = compose(x25, x20)\n    x27 = fork(insert, vmirror, x26)\n    x28 = fork(insert, x17, x27)\n    x29 = compose(x28, x21)\n    x30 = fork(insert, width, x29)\n    x31 = rbind(repeat, x3)\n    x32 = chain(toivec, x30, x31)\n    x33 = fork(shift, x23, x32)\n    x34 = canvas(ZERO, x11)\n    x35 = paint(x34, x3)\n    x36 = merge(x8)\n    x37 = cover(x35, x36)\n    x38 = shift(x36, x37)\n    x39 = paint(x34, x38)\n    x40 = shift(x33, x39)\n    x"], [1.1, "def solve_8698b8b8(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, T, T, F)\n    x6 = colorfilter(x5, x4)\n    x7 = fork(add, leftmost, uppermost)\n    x8 = argmin(x6, x7)\n    x9 = lbind(adjacent, x8)\n    x10 = rbind(add, x8)\n    x11 = totuple(x10)\n    x12 = sfilter(x11, x9)\n    x13 = mapply(neighbors, x12)\n    x14 = difference(x1, x12)\n    x15 = mapply(neighbors, x14)\n    x16 = apply(urcorner, x12)\n    x17 = size(x16)\n    x18 = equality(ONE, x17)\n    x19 = mfilter(x18, identity)\n    x20 = branch(x18, identity, dmirror)\n    x21 = x20(I)\n    x22 = fgpartition(x21)\n    x23 = merge(x22)\n    x24 = ONE(x23)\n    x25 =\u5b50(x24, x22)\n    x26 = width(x25)\n    x27 = lefthalf(x25)\n    x28 = tophalf(x27)\n    x29 = righthalf(x28)\n    x30 = palette(x29)\n    x31 = palette(x of)\n    x32 = combine(x30, x31)\n    x33 = intersection(x32, x22)\n    x34 = first(x33)\n    x35 = last(x33)\n    x36 = ofcolor(x26, x34)\n    x37 = ofcolor(x26, x35)\n    x38 = combine(x36, x37)\n    x39 = fill(x21, x34, x38)\n    x40 = ofcolor(x31, x34)\n    x41 = ofcolor(x31,"], [1.1, "def solve_41066c0d(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_621c090c(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = astuple(NINE, NINE)\n    x3 = canvas(ZERO, x2)\n    x4 = astuple(THREE, ORIGIN)\n    x5 = initset(x4)\n    x6 = insert(x3, x5)\n    x7 = merge(x1)\n    x8 = lbind(colorfilter, x6)\n    x9 = compose(first, x8)\n    x10 = compose(SIX, x9)\n    x11 = fork(paint, identity, x10)\n    x12 = x11(x5)\n    x13 = normalize(x12)\n    x14 = dmirror(x13)\n    x15 = increment(NINE)\n    x16 = insert(x14, x15)\n    x17 = lbind(rapply, x16)\n    x18 = compose(first, x17)\n    x19 = fork(paint, identity, x18)\n    x20 = x19(x5)\n    x21 = palette(x20)\n    x22 = lbind(ofcolor, x20)\n    x23 = compose(size, x22)\n    x24 = palette(x20)\n    x25 = contained(ONE, x24)\n    x26 = contained(TWO, x24)\n    x27 = branch(x25, UNITY, TWO_BY_TWO)\n    x28 = branch(x26, RIGHT, x27)\n    x29 = fork(combine, vfrontier, hfrontier)\n    x30 = x29(x28)\n    x31 = ofcolor(x20, TWO)\n    x32 = gravitate(x31, x30)\n    x33 =8(x32)\n    x34 = colorfilter(x1, TWO)\n    x35 = apply(x29, x34)\n    x36 = rbind(ZERO, x35)\n    x37 = apply(x36, x32)\n    x38 = rbind(bordering, x20)\n    x39 = mfilter(x37, x38)\n    x40 = fill"], [1.1, "def solve_05e521b4(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, ONE)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)"], [1.1, "def solve_a910c30d(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = power(c909, DOWN)\n    x5 = fork(equality, identity, x4)\n    x6 =230(x2)\n    x7 = frontiers(I)\n    x8 = sfilter(x7, x5)\n    x9 = merge(x8)\n    x10 = color(x9)\n    x11 = subgrid(x9, I)\n    x12 = frontiers(x11)\n    x13 = merge(x12)\n    x14 = shift(x13, NEG_UNITY)\n    x15 = ofcolor(x11, x10)\n    x16 = ofcolor(x11, x11)\n    x17 = combine(x15, x16)\n    x18 = mapply(x17, x12)\n    x19 = difference(x18, x15)\n    x20 =49mirror(x15)\n    x21 =49mirror(x15)\n    x22 = ofcolor(x11, x10)\n    x23 = leftmost(x22)\n    x24 = ofcolor(x11, x10)\n    x25 = leftmost(x24)\n    x26 = greater(x23, x25)\n    x27 = uppermost(x22)\n    x28 = equality(x27, x28)\n    x29 = hmatching(x28, x11)\n    x30 = branch(x29, identity, vmirror)\n    x31 = x30(x11)\n    x32 = ofcolor(x31, x10)\n    x33 = first(x32)\n    x34 = last(x31)\n    x35 = x33(x40)\n    x36 = ofcolor(x31, x10)\n    x37 =37(x36)\n    x38 = difference(x37, x31)\n    x39 = fill(x31, x10, x38)\n    x40 = ofcolor(x39, x10)\n    x41 = mapply(dneighbors, x40)\n    x"], [1.1, "def solve_2df6e1be(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = lbind(multiply, x11)\n    x13 = width(I)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = connect(x12, x15)\n    x17 = shape(I)\n    x18 = maximum(x17)\n    x19 = lbind(multiply, x18)\n    x20 = toivec(x18)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = toivec(x22)\n    x24 = connect(x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = decrement(x25)\n    x28 = tojvec(x27)\n    x29 = connect(x26, x28)\n    x30 = height(I)\n    x31 = decrement(x30)\n    x32 = toivec(x31)\n    x33 = connect(x29, x32)\n    x34 = width(I)\n    x35 = decrement(x34)\n    x36 = tojvec(x35)\n    x37 = connect(x33, x36)\n    x38 = height(I)\n    x39 = decrement(x38)\n    x40 = toivec(x39)\n    x41 = connect(x38, x40)\n    x42 = width(I)\n    x43 = decrement(x42)\n    x44 = tojvec(x43)\n    x45 = connect(x42, x44)\n    x46 = height(I)"], [1.1, "def solve_e9c2052f(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, lefthalf, tophalf)\n    x7 = branch(x5, righthalf, bottomhalf)\n    x8 = branch(x5, hconcat, vconcat)\n    x9 = x6(I)\n    x10 = x7(I)\n    x11 = index(x9, ORIGIN)\n    x12 = shape(x10)\n    x13 = decrement(x12)\n    x14 = index(x10, x13)\n    x15 = mostcolor(I)\n    x16 = mostcolor(I)\n    x17 = palette(I)\n    x18 = remove(x11, x17)\n    x19 = remove(x14, x18)\n    x20 = remove(x16, x19)\n    x21 = first(x20)\n    x22 = replace(x9, x21, x11)\n    x23 = branch(x5, asobject, x22)\n    x24 = x23(I)\n    x25 = astuple(x71, x19)\n    x26 = canvas(x25, x25)\n    x27 = paint(x26, x24)\n    x28 = objects(x27, T, F, T)\n    x29 = first(x28)\n    x30 = color(x29)\n    x31 = subgrid(x29, x30)\n    x32 = lefthalf(x61)\n    x33 = righthalf(x31)\n    x34 = shape(x33)\n    x35 = decrement(x34)\n    x36 = hmirror(x33)\n    x37 = vconcat(x36, x33)\n    x38 = objects(x37, T, F, T)\n    x39 = first(x38)\n    x40 = replace(x39, x21, x11)\n    O = hmirror(x"], [1.1, "def solve_4ba694f2(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = height(I)\n    x2 = decrement(x1)\n    x3 = tojvec(x2)\n    x4 = connect(ORIGIN, x3)\n    x5 = height(I)\n    x6 = decrement(x5)\n    x7 = toivec(x6)\n    x8 = connect(ORIGIN, x7)\n    x9 = width(I)\n    x10 = decrement(x9)\n    x11 = tojvec(x10)\n    x12 = shape(I)\n    x13 = decrement(x12)\n    x14 = connect(x11, x13)\n    x15 = height(I)\n    x16 = decrement(x15)\n    x17 = toivec(x16)\n    x18 = shape(I)\n    x19 = decrement(x18)\n    x20 = connect(x17, x19)\n    x21 = asindices(I)\n    x22 = box(x21)\n    x23 = toobject(x22, I)\n    x24 = mostcolor(x23)\n    x25 = matcher(color, x24)\n    x26 = compose(flip, x25)\n    x27 = rbind(sfilter, x26)\n    x28 = rbind(sizefilter, ONE)\n    x29 = rbind(objects, F)\n    x30 = rbind(x29, F)\n    x31 = rbind(x30, T)\n    x32 = rbind(subgrid, I)\n    x33 = chain(x27, x31, x32)\n    x34 = chain(size, x28, x33)\n    x35 = astuple(colors, ONE)\n    x36 = astuple(ONE, x22)\n    x37 = astuple(ONE, x23)\n    x38 = astuple(TWO, x34)\n    x39 = initset(x38)\n    x40 = insert(x36, x39)\n    x41 = insert(x47, x40)\n    x42 = pair(x42, x41)\n    x43 ="], [1.1, "def solve_d06cd310(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = double(TEN)\n    x2 = interval(ZERO, x1, ONE)\n    x3 = connect(ORIGIN, DOWN)\n    x4 = connect(ORIGIN, ZERO_BY_TWO)\n    x5 = combine(x3, x4)\n    x6 = astuple(NEG_TWO, TWO)\n    x7 = lbind(multiply, x6)\n    x8 = toivec(NEG_TWO)\n    x9 = apply(x7, x2)\n    x10 = rbind(subtract, TWO_BY_ZERO)\n    x11 = fork(ofcolor, identity, leastcolor)\n    x12 = chain(x10, center, x11)\n    x13 = rbind(mapply, x9)\n    x14 = lbind(lbind, shift)\n    x15 = lbind(shift, x5)\n    x16 = compose(x15, x12)\n    x17 = chain(x13, x14, x16)\n    x18 = lbind(recolor, FIVE)\n    x19 = compose(x18, x17)\n    x20 = fork(paint, identity, x19)\n    x21 = compose(rot180, x20)\n    x22 = fork(ofcolor, x21, leastcolor)\n    x23 = compose(center, x22)\n    x24 = fork(subtract, x23, x12)\n    x25 = fork(shift, x17, x24)\n    x26 = lbind(recolor, FIVE)\n    x27 = rbind(shift, x8)\n    x28 = chain(x26, x27, x25)\n    x29 = fork(paint, x21, x28)\n    x30 = compose(rot180, x29)\n    x31 = rbind(ofcolor, FIVE)\n    x32 = compose(x31, x30)\n    x33 = leastcolor(I)\n    x34 = ofcolor(I, x33)\n    x35 = mostcolor(I)\n    x36 = shape(I)\n    x37 = canvas(x35, x"], [1.1, "def solve_c4bc107a(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_4899322b(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, toindices)\n    x3 = difference(x1, x2)\n    x4 = size(x3)\n    x5 = positive(x4)\n    x6 = branch(x5, lefthalf, tophalf)\n    x7 = branch(x5, righthalf, bottomhalf)\n    x8 = branch(x5, hconcat, vconcat)\n    x9 = x6(I)\n    x10 = x7(I)\n    x11 = index(x9, ORIGIN)\n    x12 = shape(x10)\n    x13 = decrement(x12)\n    x14 = index(x10, x13)\n    x15 = mostcolor(I)\n    x16 = mostcolor(I)\n    x17 = palette(I)\n    x18 = remove(x11, x17)\n    x19 = remove(x14, x18)\n    x20 = remove(x16, x19)\n    x21 = first(x20)\n    x22 = last(x21)\n    x23 = ofcolor(x9, x22)\n    x24 = leftmost(x23)\n    x25 = ofcolor(x10, x22)\n    x26 = leftmost(x25)\n    x27 = greater(x24, x26)\n    x28 = uppermost(x23)\n    x29 = ofcolor(x10, x22)\n    x30 = uppermost(x29)\n    x31 = greater(x28, x30)\n    x32 = leftmost(x23)\n    x33 = interval(x32, x33, ONE)\n    x34 = matcher(first, x11)\n    x35 = matcher(first, x14)\n    x36 = sfilter(x34, x35)\n    x37 = apply(double, x36)\n    x38 = lbind(apply, maximum)\n    x39 = lbind(ofcolor, I)\n    x40 = compose(x38, x39)\n    x41 = rbind(intersection, x24)\n    x42 ="], [1.1, "def solve_8df6b189(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_018f2c78(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = lbind(remove, x1)\n    x3 = compose(first, x2)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = mapply(x3, x4)\n    x6 =23978259\n    7851115737\n    6519315530\n    9830561239\n    5352852971\n    \"\"\"\n    x1 = palette(I)\n    x2 = compose(last, last)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = totuple(x5)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = switch(I, x7, x8)\n    x10 = rot90(x9)\n    x11 = sfilter(x6, x4)\n    x12 = size(x11)\n    x13 = increment(x12)\n    x14 = divide(x13, x3)\n    x15 = width(I)\n    x16 = interval(ZERO, x15, ONE)\n    x17 = apply(tojvec, x16)\n    x18 = height(I)\n    x19 = lbind(shift, xI)\n    x20 = mapply(x19, x16)\n    x21 = astuple(x17, x20)\n    x22 = canvas(ZERO, x21)\n    x23 = asindices(x22)\n    x24 = shape(I)\n    x25 = canvas(ZERO, x24)\n    x26 = lbind(multiply, x24)\n    x27 = apply(x26, x23)\n    x28 = rbind(multiply, x14)\n    x29 = apply(x28, x27)\n    x30 = matcher(x26, x12)\n    x31 = argmax(x29, x30)\n    x32 = lbind(shift, x23)\n    x33 = mapply(x32, x27)\n    O = fill"], [1.1, "def solve_d1f369f1(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_90d1b867(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_330e00b4(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(sfilter, x3)\n    x6 = chain(x5, x4, color)\n    x7 = compose(maximum, shape)\n    x8 = fork(add, x7, x6)\n    x9 = compose(invert, x8)\n    x10 = order(x2, x9)\n    x11 = rbind(add, DOWN)\n    x12 = compose(x11, ulcorner)\n    x13 = fork(contained, x12, toindices)\n    x14 = rbind(add, RIGHT)\n    x15 = compose(x14, ulcorner)\n    x16 = fork(contained, x15, toindices)\n    x17 = fork(add, x13, x16)\n    x18 = rbind(argmax, x17)\n    x19 = compose(initset, identity)\n    x20 = fork(insert, vmirror, x19)\n    x21 = fork(insert, cmirror, x20)\n    x22 = fork(insert, hmirror, x21)\n    x23 = compose(x18, x22)\n    x24 = apply(x23, x10)\n    x25 = size(x2)\n    x26 = apply(size, x2)\n    x27 = contained(ONE, x26)\n    x28 = increment(x25)\n    x29 = branch(x27, x25, x28)\n    x30 = double(x29)\n    x31 = decrement(x30)\n    x32 = apply(normalize, x24)\n    x33 = interval(ZERO, x29, ONE)\n    x34 = pair(x33, x33)\n    x35 = mpapply(shift, x32, x34)\n    x36 = astuple(x31, x31)\n    x37 = canvas(x1, x36)\n    x38 = paint(x37, x35)\n    x39 ="], [1.1, "def solve_1a561f30(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = toindices(x1)\n    x3 = lbind(contained, ZERO)\n    x4 = compose(x3, hline)\n    x5 = rot(I)\n    x6 = lbind(contained, ZERO)\n    x7 = compose(x6, vline)\n    x8 = rbind(sfilter, x4)\n    x9 = compose(x8, asindices)\n    x10 = power(x9, TWO)\n    x11 = fork(gravitate, toindices, x10)\n    x12 = lbind(contained, ZERO)\n    x13 = compose(x12, leftmost)\n    x14 = lbind(compose, x11)\n    x15 = lbind(rbind, greater)\n    x16 = chain(x15, x14, x13)\n    x17 = fork(greater, x16, x12)\n    x18 = compose(x17, rot90)\n    x19 = fork(greater, x17, x13)\n    x20 = chain(x19, x17, x16)\n    x21 = fork(both, x18, x20)\n    x22 = fork(both, x14, x21)\n    x23 = compose(flip, x22)\n    x24 = sfilter(x1, x23)\n    x25 = fork(compose, x21, x22)\n    x26 = product(x24, x25)\n    x27 = fork(compose, toindices, x25)\n    x28 = fork(rbind, x27, x26)\n    x29 = fork(multiply, x27, x28)\n    x30 = compose(x29, first)\n    x31 = palette(I)\n    x32 = lbind(sfilter, x31)\n    x33 = lbind(compose, x82)\n    x34 = chain(x32, x33, x30)\n    x35 = lbind(ofcolor, I)\n    x36 = compose(x34, x35)\n    x37 =77(x34)\n    x38 = compose"], [1.1, "def solve_f810701d(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, box)\n    x3 = fork(multiply, height, width)\n    x4 = fork(equality, size, x3)\n    x5 = compose(flip, x4)\n    x6 = fork(both, x2, x5)\n    x7 = extract(x1, x6)\n    x8 = inbox(x7)\n    x9 = backdrop(x8)\n    x10 = toobject(x9, I)\n    x11 = remove(x10, x1)\n    x12 = remove(x7, x11)\n    x13 = argmin(x12, size)\n    x14 = combine(x13, x7)\n    x15 = backdrop(x14)\n    x16 = objects(x10, T, F, T)\n    x17 = color(x10)\n    x18 = fill(x17, x16, x15)\n    x19 = subgrid(x18, I)\n    x20 = argmin(x16, width)\n    x21 = ulcorner(x20)\n    x22 = llcorner(x20)\n    x23 = urcorner(x20)\n    x24 = shoot(x21, UNITY)\n    x25 = shoot(x22, DOWN_LEFT)\n    x26 = shoot(x24, UP_RIGHT)\n    x27 = shoot(x25, x22)\n    x28 = combine(x26, x27)\n    x29 = intersection(x28, x22)\n    x30 = fill(x17, x17, x29)\n    x31 = combine(x24, x22)\n    x32 = llcorner(x31)\n    x33 = rbind(subtract, x32)\n    x34 = chain(positive, size, x33)\n    x35 = sfilter(x24, x34)\n    x36 = height(x35)\n    x37 = equality(x36, ONE)\n    x38 = branch(x37, ZERO, x31)\n    O = move(x38, x33, x37)\n    "], [1.1, "def solve_2c2f30fa(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_bc464370(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(I)\n    x9 = fill(I, x8, x7)\n    x10 = sfilter(x7, hline)\n    x11 = size(x10)\n    x12 = increment(x11)\n    x13 = sfilter(x7, vline)\n    x14 = size(x13)\n    x15 = increment(x14)\n    x16 = divide(x12, x15)\n    x17 = asindices(x7)\n    x18 = center(x17)\n    x19 = multiply(x13, x12)\n    x20 = increment(x19)\n    x21 = asindices(I)\n    x22 = center(x21)\n    x23 = width(I)\n    x24 = decrement(x23)\n    x25 = tojvec(x24)\n    x26 = double(x12)\n    x27 = tojvec(x25)\n    x28 = connect(x26, x27)\n    x29 = center(x28)\n    x30 =\n    x29(x7)\n    x31 = asindices(I)\n    x32 = center(x31)\n    x33 = width(I)\n    x34 = halve(x33)\n    x35 = tojvec(x34)\n    x36 = height(I)\n    x37 = halve(x36)\n    x38 = connect(x35, x37)\n    x39 = fill(x19, x38, x32)\n    x40 = fill(x39, x08, x23)\n    x41 = ofcolor(x40, EIGHT)\n    x42 = size(x41)\n    x43 = equality(x42, ONE)\n    x44 = branch(x43, x40, x40)\n    x45 = connect(x42, x44"], [1.1, "def solve_701aa21e(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_1830846c(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = asindices(I)\n    x5 = apply(first, x4)\n    x6 = difference(x5, x3)\n    x7 = ofcolor(I, x1)\n    x8 = rbind(interval, ONE)\n    x9 = lbind(rbind, contained)\n    x10 = lbind(sfilter, x6)\n    x11 = rbind(matcher, ZERO)\n    x12 = chain(size, x10, x9)\n    x13 = lbind(sfilter, x7)\n    x14 = lbind(compose, x12)\n    x15 = chain(x13, x11, x14)\n    x16 = lbind(fork, x8)\n    x17 = compose(increment, minimum)\n    x18 = lbind(lbind, astuple)\n    x19 = lbind(chain, x17)\n    x20 = rbind(x19, first)\n    x21 = chain(x20, x18, first)\n    x22 = lbind(chain, maximum)\n    x23 = rbind(x22, first)\n    x24 = chain(x23, x18, first)\n    x25 = fork(x16, x21, x24)\n    x26 = compose(x15, x25)\n    x27 = apply(toivec, x3)\n    x28 = apply(x26, x27)\n    x29 = argmax(x28, width)\n    x30 = remove(x29, x28)\n    x31 = ulcorner(x29)\n    x32 = invert(x31)\n    x33 = shift(x29, x32)\n    x34 = asindices(I)\n    x35 = center(x34)\n    x36 = invert(x35)\n    x37 = shift(x34, x36)\n    x38 = width(I)\n    x39 = multiply(x38, x37)\n    x40 = tojvec(x39)"], [1.1, "def solve_f603102a(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = equality(x1, FOUR)\n    x3 = fork(equality, height, width)\n    x4 = extract(x2, x3)\n    x5 = other(x1, x4)\n    x6 = color(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = toindices(x11)\n    x13 = vmirror(x12)\n    x14 = hmirror(x12)\n    x15 = shoot(x13, UNITY)\n    x16 = shoot(x14, NEG_UNITY)\n    x17 = fill(I, x11, x15)\n    x18 = fill(x17, x10, x16)\n    x19 = ofcolor(x18, x6)\n    x20 = lowermost(x19)\n    x21 = matcher(first, x10)\n    x22 = compose(flip, x21)\n    x23 = rightmost(x19)\n    x24 = matcher(first, x10)\n    x25 = rightmost(x194)\n    x26 = matcher(first, x24)\n    x27 = leftmost(x194)\n    x28 = matcher(first, x25)\n    x29 = both(x22, x28)\n    x30 = branch(x29, x22, x25)\n    x31 = fill(x18, x11, x30)\n    x32 = ofcolor(x31, x6)\n    x33 = urcorner(x32)\n    x34 = shoot(x33, UP_RIGHT)\n    x35 = shoot(x34, DOWN_LEFT)\n    x36 = underfill(x31, x11, x35)\n    x37 = ofcolor(x36, x6)\n    x38 = compose(flip, x27)\n    x39 = rbind(sfilter, x38)"], [1.1, "def solve_b5325838(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_669b94eb(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x228, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_8980fc85(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = contained(ZERO, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(greater, TWO)\n    x9 = compose(x8, first)\n    x10 = color(x2)\n    x11 =y10000(x10)\n    x12 = insert(x8, x11)\n    x13 = merge(x12)\n    x14 = rot90(x13)\n    x15 = subtract(x4, TWO)\n    x16 = insert(x15, x4)\n    x17 = urcorner(x16)\n    x18 = shoot(x17, UNITY)\n    x19 = rbind(shoot, NEG_UNITY)\n    x20 = rbind(shoot, DOWN_LEFT)\n    x21 = rbind(shoot, UP_RIGHT)\n    x22 = rbind(shoot, DOWN_LEFT)\n    x23 = rbind(shoot, UNITY)\n    x24 = rbind(shoot, x15)\n    x25 = rbind(shoot, x14)\n    x26 = rbind(shoot, x25)\n    x27 = fork(combine, x22, x24)\n    x28 = fork(combine, x26, x27)\n    x29 = fork(combine, x27, x28)\n    x30 = compose(x9, x29)\n    x31 = difference(x1, x8)\n    x32 = extract(x31, x30)\n    x33 = x32(x32)\n    x34 = x6(x33)\n    x35 = height(x34)\n    x36 = width(x34)\n    x37 = interval(ZERO, x35, x36)\n    x38 = pair(x37, x37)\n    x39 = lbind(sfilter, x33)\n    x40 = rbind(compose, last)\n    x"], [1.1, "def solve_0f1a8bdf(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_00368803(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = astuple(x15, x17)\n    x19 = vupscale(x10, x18)\n    x20 = hupscale(x19, x17)\n    x21 = asobject(x20)\n    x22 = lbind(shift, x21)\n    x23 = neighbors(ORIGIN)\n    x24 = mapply(x22, x23)\n    x25 = paint(x5, x24)\n    x26 = objects(x25, T, T, T)\n    x27 = apply(uppermost, x26)\n    x28 = order(x27, identity)\n    x29 = apply(color, x28)\n    x30 = rbind(contained, x22)\n    x31 = compose(x30, palette)\n    x32 = rbind(sfilter, x31)\n    x33 = lbind(shift, x21)\n    x34 = chain(x32, x33, x25)\n    x35 = rbind(apply, x29)\n    x36 = lbind(lbind, shift)\n    x37 = compose(x35, x36)\n    x38 = lbind(rbind, combine)\n    x39 = chain(x35, x38, x37)\n    x40 = fork(sfilter, x34, x39)\n    "], [1.1, "def solve_a210a5a2(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_13ac0f79(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = chain(increment, merge, size)\n    x5 = chain(decrement, decrement, width)\n    x6 = fork(greater, x4, x5)\n    x7 = fork(both, x3, x6)\n    x8 = tojvec(TEN)\n    x9 = crop(I, x8, x7)\n    x10 = numcolors(x9)\n    x11 = equality(x10, TWO)\n    x12 = insert(x8, x11)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = insert(x13, x15)\n    x17 = height(x12)\n    x18 = decrement(x17)\n    x19 = lbind(multiply, x18)\n    x20 = add(x14, x19)\n    x21 = width(x12)\n    x22 = decrement(x21)\n    x23 = lbind(multiply, x22)\n    x24 = add(x14, x23)\n    x25 = repeat(x16, x11)\n    x26 = astuple(x25, x24)\n    x27 = add(x25, x26)\n    x28 = subtract(x24, x18)\n    x29 = astuple(x28, x27)\n    x30 = add(x29, x28)\n    x31 = crement(x30)\n    x32 = height(x12)\n    x33 = decrement(x32)\n    x34 = subtract(x33, x31)\n    x35 = astuple(x34, x31)\n    x36 = add(x35, x31)\n    x37 =repeat(x36, x11)\n    x38 = merge(x37)\n    x39 = cover(I, x38)\n    x40 = tojvec(x3)\n    x"], [1.1, "def solve_f623db8b(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(306, DOWN)\n    x7 = rbind(compose, initset)\n    x8 = lbind(rbind, sfilter)\n    x9 = chain(x6, leftmost, x8)\n    x10 = chain(uppermost, x7, x9)\n    x11 = fork(greater, x9, x10)\n    x12 = compose(x11, x5)\n    x13 = lbind(compose, x12)\n    x14 = lbind(rbind, sfilter)\n    x15 = chain(x13, x14, x11)\n    x16 = chain(uppermost, x7, x15)\n    x17 = fork(greater, x16, x12)\n    x18 = compose(x17, x5)\n    x19 = fork( quotur, x18, identity)\n    x20 = fork(equality, identity, x19)\n    x21 = compose(x20, x15)\n    x22 = rbind(compose, x21)\n    x23 = lbind(rbind, sfilter)\n    x24 = chain(x22, x23, x15)\n    x25 = chain(uppermost, x7, x15)\n    x26 = lbind(greater, x26)\n    x27 = compose(x26, x45)\n    x28 = chain(toivec, x27, x25)\n    x29 = lbind(lbind, shift)\n    x30 = compose(x29, x27)\n    x31 = fork(compose, x28, x30)\n    x32 = compose(cmirror, x31)\n    x33 = fork(mapply, x32, x17)\n    x34 = multiply(SIX, THREE)\n    x35 = astuple(x34, x34)\n    x36 = x35(I)\n    x37"], [1.1, "def solve_f62bf43a(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = apply(x12, x9)\n    x14 = dedupe(x13)\n    x15 = size(x14)\n    x16 = decrement(x15)\n    x17 = add(x16, x16)\n    x18 = compose(x11, x14)\n    x19 = x8(x18)\n    x20 = branch(x7, x19, height)\n    x21 = subtract(x17, x20)\n    x22 = decrement(x21)\n    x23 = add(x22, x20)\n    x24 = canvas(ZERO, x1)\n    x25 = asindices(x24)\n    x26 = box(x25)\n    x27 = mostcolor(I)\n    x28 = recolor(x27, x26)\n    x29 = double(x28)\n    x30 = interval(ZERO, x29, ONE)\n    x31 = asobject(x30)\n    x32 = shape(x31)\n    x33 = shift(x31, x32)\n    x34 = paint(x24, x33)\n    x35 = astuple(x shift, x34)\n    x36 = interval(ZERO, x25, ONE)\n    x37 = product(x36, x36)\n    x38 = rbind(multiply, x31)\n    x39 = apply(x38, x37)\n    x40 = lbind(shift, x33)\n    x41 = mapply(x40, x39)\n    O ="], [1.1, "def solve_86180c1a(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_ea229701(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = shape(I)\n    x2 = add(x1, DOWN)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = lbind(multiply, x4)\n    x6 = width(I)\n    x7 = subtract(x6, x3)\n    x8 = astuple(x7, x5)\n    x9 = connect(x3, x8)\n    x10 = recolor(ZERO, x9)\n    x11 = compose(first, last)\n    x12 = rbind(remove, x11)\n    x13 = compose(x12, first)\n    x14 = astuple(x10, x13)\n    x15 = mostcolor(I)\n    x16 = canvas(x15, x14)\n    x17 = paint(x16, x12)\n    x18 = size(x1)\n    x19 = interval(ZERO, x18, ONE)\n    x20 = pair(x19, x19)\n    x21 = width(I)\n    x22 = astuple(x21, x5)\n    x23 = repeat(ZERO, x22)\n    x24 = combine(x23, x20)\n    x25 = branch(x18, x24, ONE)\n    x26 = multiply(x25, x5)\n    x27 = invert(x26)\n    x28 = interval(ZERO, x27, ONE)\n    x29 = product(x28, x28)\n    x30 = order(x29, last)\n    x31 = apply(compose, x470)\n    x32 = lbind(extract, x31)\n    x33 = lbind(matcher, first)\n    x34 = compose(x33, first)\n    x35 = chain(last, x32, x34)\n    x36 = compose(last, last)\n    x37 = lbind(recolor, FIVE)\n    x38 = lbind(mapply, last)\n    x39 = compose(x38, x35)\n    x40 = fork(combine, x36, x39)\n    x41 = compose"], [1.1, "def solve_fc2d1034(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    x5 = palette(x4)\n    x6 = intersection(x5, x2)\n    x7 = colorfilter(x3, x5)\n    x8 = argmax(x7, size)\n    x9 = remove(x8, x7)\n    x10 = lbind(chain, positive)\n    x11 = lbind(x10, size)\n    x12 = lbind(lbind, shift)\n    x13 = lbind(lbind, intersection)\n    x14 = compose(x11, x12)\n    x15 = compose(x13, x13)\n    x16 = fork( x199, x14, x15)\n    x17 = fork(mapply, x16, x17)\n    x18 = astuple(SIX, x18)\n    x19 = x15(I)\n    x20 = cover(x19, x8)\n    x21 = dropping(x20, UNITY)\n    x22 = dmirror(x21)\n    x23 = papply(pair, x21, x22)\n    x24 = lbind(apply, maximum)\n    x25 = apply(x24, x23)\n    x26 = cmirror(x25)\n    x27 = papply(pair, x25, x26)\n    x28 = apply(x25, x27)\n    x29 =mirror(x28)\n    x30 = papply(pair, x28, x29)\n    x31 = apply(x24, x30)\n    x32 = llcorner(x28)\n    x33 = palette(x29)\n    x34 = lbind(ofcolor, x22)\n    x35 = compose(x34, x31)\n    x36 =726200(x35)\n    x37 =4438(x31, x36)\n    x38 = fork(recolor, x35, x37)\n    x39 = mapply(x38, x31)\n    O = paint("], [1.1, "def solve_81157fed(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_5221339b(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(compose, x8)\n    x13 = compose(x11, x12)\n    x14 = lbind(sfilter, x3)\n    x15 = chain(size, x14, x13)\n    x16 = itemmax(x3, x15)\n    x17 = objects(x7, T, F, T)\n    x18 = merge(x17)\n    x19 = palette(x18)\n    x20 = colorfilter(x17, x19)\n    x21 = chain(positive, size, x17)\n    x22 = rbind(shoot, UNITY)\n    x23 = rbind(shoot, NEG_UNITY)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = rbind(shoot, UP_RIGHT)\n    x26 = lbind(lbind, greater)\n    x27 = chain(x22, x24, x25)\n    x28 = rbind(shoot, UP_RIGHT)\n    x29 = rightmost(x16)\n    x30 = lbind(rbind, greater)\n    x31 = chain(x28, x30, x29)\n    x32 = lbind(recolor, x509)\n    x33 = rbind(shoot, x31)\n    x34 = rbind(shoot, x32)\n    x35 =fork(combine, x33, x34)\n    x36 = compose(x35, x27)\n    x37 = fork(paint, identity, x36)\n    x38 = rbind(shoot, x"], [1.1, "def solve_27a6a068(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_d74d08da(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(identity, dmirror)\n    x5 = astuple(cmirror, hmirror)\n    x6 = combine(x4, x5)\n    x7 = rbind(rapply, I)\n    x8 = compose(first, x7)\n    x9 = chain(x3, x8, initset)\n    x10 = extract(x6, x9)\n    x11 = x10(I)\n    x12 = mostcolor(I)\n    x13 = palette(I)\n    x14 = remove(x12, x13)\n    x15 = other(x14, TWO)\n    x16 = ofcolor(x11, x15)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, identity, vmirror)\n    x20 = x19(x11)\n    x21 = ofcolor(x20, x15)\n    x22 = ofcolor(x20, TWO)\n    x23 = apply(last, x22)\n    x24 = insert(ZERO, x23)\n    x25 = width(x20)\n    x26 = insert(x25, x24)\n    x27 = order(x26, identity)\n    x28 = last(x27)\n    x29 = remove(x28, x27)\n    x30 = first(x27)\n    x31 = remove(x30, x27)\n    x32 = pair(x29, x31)\n    x33 = size(x29)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = pair(x34, x32)\n    x36 = lbind(fork, connect)\n    x37 = compose(first, last)\n    x38 = chain(decrement, last, last)\n    x39 = lbind(lbind, add)\n    x40 = compose(x39, first)\n    x41 = lbind("], [1.1, "def solve_96fa9643(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = compose(leftmost, first)\n    x13 = compose(leftmost, last)\n    x14 = fork(equality, x12, x13)\n    x15 = compose(uppermost, first)\n    x16 = compose(uppermost, last)\n    x17 = fork(equality, x15, x16)\n    x18 = fork(either, x14, x17)\n    x19 = sfilter(x11, x18)\n    x20 = compose(color, first)\n    x21 = compose(center, first)\n    x22 = compose(center, last)\n    x23 = fork(connect, x21, x22)\n    x24 = fork(recolor, x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = matcher(last, ZERO)\n    x28 = decrement(x26)\n    x29 = matcher(last, x28)\n    x30 = fork(either, x27, x29)\n    x31 = matcher(first, ZERO)\n    x32 = decrement(x25)\n    x33 = matcher(first, x32)\n    x34 = fork(either, x31, x33)\n    x35 = toindices(x5)\n    x36 = sfilter(x35, x30)\n    x37 = equality(x35, x36)\n    x38 = mapply(x24, x19)\n    x39 = paint(I, x38)\n    x40 = branch(x37, x30, x34)\n    "], [1.1, "def solve_862378c3(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =238\n    729 relatively623\n    2990529281\n    3446ly2453\n    1437048410\n    \"\"\"\n    x2 = height(I)\n    x3 = halve(x2)\n    x4 = increment(x3)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = astuple(x4, x6)\n    x11 = canvas(x9, x10)\n    x12 =, toindices(x11)\n    x13 = normalize(x12)\n    x14 = toindices(x13)\n    x15 = remove(x9, x14)\n    x16 = lbind(intersection, x12)\n    x17 = chain(size, x16, toindices)\n    x18 = argmax(x15, x17)\n    x19 = ulcorner(x18)\n    x20 = matcher(first, x9)\n    x21 = sfilter(x18, x20)\n    x22 = lbind(shift, x12)\n    x23 = height(x12)\n    x24 = divide(x23, FOUR)\n    x25 = increment(x24)\n    x26 = width(x12)\n    x27 = divide(x25, FOUR)\n    x28 = increment(x27)\n    x29 = divide(x28, FOUR)\n    x30 =ensAgainst(x21, x13)\n    x31 = paddingapply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(tojvec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = lbind(fork, both)\n    x37 = lbind(index, I)\n    x38 = lbind(compose, x37)\n    x39 = lbind(lbind, shift)\n    x40 = compose(x38, x39)\n"], [1.1, "def solve_98d6c048(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_c03aebbc(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = asobject(I)\n    x2 = dmirror(I)\n    x3 = mostcolor(I)\n    x4 = matcher(first, x3)\n    x5 = compose(flip, x4)\n    x6 = sfilter(x1, x5)\n    x7 =227(x6)\n    x8 = mostcolor(I)\n    x9 = lbind(occurrences, I)\n    x10 = matcher(x9, x8)\n    x11 = compose(flip, x10)\n    x12 = fork(both, x3, x11)\n    x13 = sfilter(x6, x12)\n    x14 = combine(x7, x13)\n    x15 = increment(x14)\n    x16 = order(x1, last)\n    x17 = apply(first, x16)\n    x18 = last(x16)\n    x19 = decrement(x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = hsplit(I, x21)\n    x23 = astuple(ONE, THREE)\n    x24 = astuple(TWO, FOUR)\n    x25 = initset(x24)\n    x26 = insert(ORIGIN, x25)\n    x27 = insert(x20, x26)\n    x28 = insert(x25, x27)\n    x29 = insert(x28, x267)\n    x30 = ofcolor(x22, x4)\n    x31 = ofcolor(x22, TWO)\n    x32 = asindices(x22)\n    x33 = initset(x32)\n    x34 = insert(x27, x33)\n    x35 = lbind(hfrontier, x34)\n    x36 = compose(x35, center)\n    x37 = fork(recolor, color, x36)\n    x38 = mapply(x37, x30)\n    x39 = merge(x38)\n    x40 = recolor(x4, x39)\n    O = paint(x22, x40)"], [1.1, "def solve_f1bb13b7(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_aed2df05(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_104508f4(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x17, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = s5000(x28, x24)\n    x30 =388(x29, x16)\n    x31 = rbind(greater, x15)\n    x32 = compose(x31, last)\n    x33 =88(x32)\n    x34 = vmirror(x30)\n    x35 = x32(x34)\n    x36 = width(x16)\n    x37 = crop(x35, ORIGIN, x36)\n    x38 = chain(positive, decrement, size)\n    x39 = rbind(toobject, x38)\n    x40 = rbind(colorcount, x7)\n    x41 = chain(x39, x40"], [1.1, "def solve_44ad6801(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_308d5604(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(positive, size)\n    x3 = lbind(intersection, x2)\n    x4 = chain(x2, x1, x3)\n    x5 = compose(positive, size)\n    x6 = fork(either, x4, x5)\n    x7 = fork(both, x2, x6)\n    x8 = rbind(shoot, UNITY)\n    x9 = rbind(shoot, NEG_UNITY)\n    x10 = fork(combine, x8, x9)\n    x11 = rbind(shoot, UP_RIGHT)\n    x12 = rbind(shoot, DOWN_LEFT)\n    x13 = fork(combine, x11, x12)\n    x14 = fork(combine, x10, x13)\n    x15 = ofcolor(I, ONE)\n    x16 = intersection(x15, x15)\n    x17 = lbind(apply, color)\n    x18 = chain(x17, x16, x9)\n    x19 = lbind(lbind, intersection)\n    x20 = chain(x19, x18, x9)\n    x21 = compose(x2, x20)\n    x22 = fork(pair, x21, identity)\n    x23 = sfilter(x16, x22)\n    x24 = argmax(x23, size)\n    x25 = matcher(first, ONE)\n    x26 = compose(flip, x25)\n    x27 = sfilter(x24, x26)\n    x28 = lbind(colorcount, I)\n    x29 = argmin(x27, x28)\n    x30 = ofcolor(I, x22)\n    x31 = leftmost(x30)\n    x32 = width(I)\n    x33 = interval(x31, x32, ONE)\n    x34 = rightmost(x30)\n    x35 = decrement(x34)\n    x36 = lbind(multiply, x35)\n    x37 = apply(x36, x33)\n    x38 = mapply(vfrontier,"], [1.1, "def solve_960f2cc4(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, identity, dmirror)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = apply(first, x22)\n    x24 = lbind(sfilter, x21)\n    x25 = compose(first, last)\n    x26 = lbind(matcher, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x27, x23)\n    x29 = lbind(shift, x15)\n    x30 = chain(x29, toivec, uppermost)\n    x31 = matcher(first, x18)\n    x32 = rbind(sfilter, x31)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(toindices, x32, x30)\n    x36 = chain(x33, x34, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = compose(color, x37)\n    x39 = compose(x32, x30)\n    x40 = fork(recolor, x38, x39)\n    x41 = fork(other, palette,"], [1.1, "def solve_fc637d33(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    x5 = palette(x4)\n    x6 = intersection(x5, x2)\n    x7 = lbind(colorcount, x4)\n    x8 = argmax(x6, x7)\n    x9 = leastcolor(x8)\n    x10 = matcher(first, x8)\n    x11 =004(x2, x10)\n    x12 = argmin(x11, x9)\n    x13 = merge(x11)\n    x14 = cover(x13, x12)\n    x15 = matcher(first, x9)\n    x16 = compose(flip, x15)\n    x17 = rbind(sfilter, x16)\n    x18 = mostcolor(I)\n    x19 = lbind(colorcount, x4)\n    x20 = chain(flip, x18, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(dmirror, x21)\n    x23 = x22(x41)\n    x24 = dmirror(x23)\n    x25 = chain(x19, x34, x24)\n    x26 = lbind(rapply, x29)\n    x27 = compose(x26, first)\n    x28 = chain(first, x24, x27)\n    x29 = rbind(ofcolor, x18)\n    x30 = fork(recolor, x18, x28)\n    x31 = compose(x29, x30)\n    x32 = fork(paint, identity, x31)\n    x33 = rbind(add, DOWN)\n    x34 = chain(positive, size, x33)\n    x35 = rbind(mfilter, x34)\n    x36 = compose(x35, x32)\n    x37 = sfilter(x2, x36)\n    x38 = lbind(paint, x5)\n    x39 = chain(x38, asobject, x"], [1.1, "def solve_52b9f265(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_b3813f22(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = replace(I, FOUR, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = replace(x2, FOUR, ZERO)\n    x4 =7513(x3)\n    x5 = ulcorner(x4)\n    x6 = subgrid(x4, x5)\n    x7 = replace(x6, ONE, ZERO)\n    O = replace(x7, DOWN, ZERO)\n    return O"], [1.1, "def solve_84e52fe0(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 =73mirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [1.1, "def solve_102a4ec9(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices ofI)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [1.1, "def solve_c6840d89(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =180007fOUR)\n    x2 = subgrid(x1, I)\n    x3 = mostcolor(x2)\n    x4 = replace(x2, x3, ZERO)\n    x5 = leastcolor(x4)\n    x6 = ofcolor(x2, x5)\n    x7 = recolor(x3, x6)\n    O = replace(x4, x5, x7)\n    return O"], [1.1, "def solve_e594a22c(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = switch(I, THREE, FOUR)\n    x2 =1115(x1)\n    x3 = argmin(x2, lrcorner)\n    x4 = urcorner(x3)\n    x5 = shoot(x4, NEG_UNITY)\n    x6 = shoot(x4, UP_RIGHT)\n    x7 = combine(x5, x6)\n    x8 = llcorner(x3)\n    x9 = compose(x8, invert)\n    x10 = power(x9, TWO)\n    x11 = initset(x2)\n    x12 = insert(x3, x11)\n    x13 = insert(x10, x12)\n    x14 = toobject(x13, I)\n    x15 = mapply(x9, x14)\n    x16 = height(I)\n    x17 = width(I)\n    x18 = divide(x16, x17)\n    x19 =389(x18)\n    x20 = toindices(x3)\n    x21 = chain(ZERO, x20, x11)\n    x22 = lbind(contained, ZERO)\n    x23 = compose(x22, outbox)\n    x24 = fork(add, identity, x23)\n    x25 = compose(invert, x24)\n    x26 = order(x21, x25)\n    x27 = fork(insert, identity, x66)\n    x28 = fork(insert, identity, x25)\n    x29 = fork(insert, identity, x28)\n    x30 = fork(insert, identity, x29)\n    x31 = switch(I, THREE, FOUR)\n    x32 = x31(x26)\n    x33 = invert(x32)\n    x34 = shift(x31, x33)\n    x35 = shift(x34, LEFT)\n    x36 = paint(x39, x35)\n    O = x30(x36)\n    return O"], [1.1, "def solve_a01d8e1a(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = last(x2)\n    x5 =446(447, x4)\n    x6 = recolor(x1, x5)\n    O = underfill(I, x1, x6)\n    return O"], [1.1, "def solve_7ed869d4(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = fork(insert, identity, identity)\n    x6 = compose(insert, x5)\n    x7 = fork(insert, cmirror, x6)\n    x8 = fork(insert, dmirror, x7)\n    x9 = fork(insert,cmirror, x8)\n    x10 = fork(insert, hmirror, x9)\n    x11 = mapply(x10, x4)\n    x12 = merge(x1)\n    x13 = vsplit(x61, x12)\n    x14 = mapply(x11, x13)\n    x15 = output:\n    1111114841\n    1111145851\n    1472584620\n    1642734888\n    8154415238\n    \"\"\"\n    x1 = argmax(x14, size)\n    x2 = subgrid(x1, I)\n    O = trim(x2)\n    return O"], [1.1, "def solve_b8c1863d(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = apply(normalize, x2)\n    x4 = astuple(NINE, NINE)\n    x5 = canvas(F25fbde4(x4)\n    x6 = asindices(x5)\n    x7 = box(x6)\n    x8 = center(x6)\n    x9 = lbind(contained, ZERO)\n    x10 = rbind(subtract, x8)\n    x11 = compose(x9, x10)\n    x12 = chain(outbox, outbox, initset)\n    x13 = corners(x6)\n    x14 = mapply(x12, x13)\n    x15 = difference(x7, x14)\n    x16 = inbox(x7)\n    x17 = sfilter(x16, x11)\n    x18 = difference(x16, x17)\n    x19 = fill(x5, ONE, x15)\n    x20 = fill(x19, TWO, x18)\n    x21 = ofcolor(x20, ZERO)\n    O = fill(x20, FOUR, x21)\n    return O"], [1.1, "def solve_ea07c672(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = first(x3)\n    x5 = rbind(colorcount, ZERO)\n    x6 = rbind(toobject, I)\n    x7 = compose(x5, x6)\n    x8 = chain(x7, x4, dneighbors)\n    x9 = matcher(x8,4200x4)\n    x10 = sfilter(x2, x9)\n    x11 = difference(x2, x10)\n    x12 = papply(recolor, x11, x10)\n    x13 = mapply(x5, x12)\n    x14 = paint(I, x13)\n    x15 = subgrid(x4, x14)\n    O = trim(x15)\n    return O"], [1.1, "def solve_215f5bb4(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 =424(I)\n    x2 = rbind(multiply, THREE)\n    x3 = rbind(divide, THREE)\n    x4 = compose(x2, x3)\n    x5 = fork(equality, identity, x4)\n    x6 = compose(x5, last)\n    x7 = sfilter(x1, x6)\n    x8 = rbind(multiply, THREE)\n    x9 = rbind(divide, THREE)\n    x10 = compose(x8, x9)\n    x11 = fork(equality, identity, x10)\n    x12 = compose(x11, last)\n    x13 = extract(x7, x12)\n    x14 = extract(xr, x13)\n    x15 = ulcorner(x14)\n    x16 = subgrid(x14, I)\n    x17 = replace(x16, ZERO, x14)\n    x18 = asobject(x17)\n    x19 = shift(x18, x15)\n    O = paint(I, x19)\n    return O"], [1.1, "def solve_d7bc4b60(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = trim(I)\n    x2 = repeat(x1, ONE)\n    x3 = numcolors(x2)\n    x4 = equality(x3, THREE)\n    x5 = height(x1)\n    x6 = width(x1)\n    x7 = astuple(x5, x6)\n    x8 = add(d406, TWO)\n    x9 = compose(outbox, x8)\n    x10 =\n    x11 = apply(x9, x7)\n    x12 = initset(x5)\n    x13 =71(x6)\n    x14 = insert(x12, x13)\n    x15 = toobject(x14, x1)\n    x16 = toindices(x15)\n    x17 = lbind(intersection, x16)\n    x18 = lbind(shift, x15)\n    x19 = compose(x17, x18)\n    x20 = toindices(x15)\n    x21 = lbind(intersection, x20)\n    x22 = chain(x19, size, x21)\n    x23 = fork(shift, x19, x22)\n    x24 = compose(x5, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = rot180(x24)\n    x28 = apply(x26, x27)\n    x29 = apply(x25, x28)\n    x30 = fork(combine, x28, x29)\n    x31 = x30(x15)\n    x32 = decrement(x31)\n    x33 = lbind(astuple, x32)\n    x34 = lbind(shift, x15)\n    x35 = compose(x33, x34)\n    x36 = apply(x35, x29)\n    O = x30(x36)\n    return O"], [1.1, "def solve_837e299d(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 =173(I)\n    x2 =29c(I)\n    x3 = fgpartition(x2)\n    x4 = merge(x3)\n    x5 = rbind(shoot, DOWN)\n    x6 = compose(x5, last)\n    x7 = fork(recolor, first, x6)\n    x8 = mapply(x7, x4)\n    O = paint(x1, x8)\n    return O"], [1.1, "def solve_f79d2d32(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(replace, x2)\n    x4 = compose(color, x3)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(SIX, SIX)\n    x9 = astuple(EIGHT, x8)\n    x10 = connect(ORIGIN, x9)\n    x11 = initset(UNITY)\n    x12 = recolor(ZERO, x11)\n    x13 = sfilter(x10, x12)\n    x14 = upscale(x13, TWO)\n    x15 = branch(x14, ORIGIN, RIGHT)\n    x16 = mapply(x5, x13)\n    x17 = apply(double, x16)\n    x18 = insert(x16, x17)\n    x19 = width(x15)\n    x20 = insert(x19, x18)\n    x21 = ulcorner(x15)\n    x22 = ulcorner(x18)\n    x23 = subtract(x21, x22)\n    x24 = add(x23, x20)\n    x25 = crop(x15, x27, x24)\n    x26 = hupscale(x25, x20)\n    x27 = compose(last, last)\n    x28 =9259(ZERO, x27)\n    x29 = h59(x28)\n    x30 = insert(x27, x28)\n    x31 = crop(x30, x29, x20)\n    x32 = vupscale(x31, x20)\n    O = other(x23, x32)\n    return O"], [1.1, "def solve_e16148b2(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =7313636344\n    6973281190\n    3424891948\n    9458092097\n    0962975318\n    6899378059\n    6567395500\n    0069332464\n    37149656707\n    \"\"\"\n    x2 = solve_e9af63ed(I):\n    O = hmirror(I)\n    return O"], [1.1, "def solve_189dd23b(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(9172mirror)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, EIGHT, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [1.1, "def solve_7c870502(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, height, width)\n    x8 = argmin(x7, size)\n    x9 = palette(x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 =37(x311)\n    x13 = colorcount(I, x11)\n    x14 = colorfilter(x1, x12)\n    x15 = argmax(x14, size)\n    x16 = remove(x15, x14)\n    x17 = apply(first, x16)\n    x18 = rbind(sfilter, x15)\n    x19 = chain(merge, x18, last)\n    x20 = x19(x17)\n    x21 = ofcolor(x20, x11)\n    x22 = subgrid(x21, I)\n    x23 = toobject(x22, x20)\n    x24 = delta(x23)\n    x25 = mapply(x19, x24)\n    x26 =06(x25)\n    x27 = paint(x20, x26)\n    x28 = matcher(first, x11)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(first, center, x29)\n    x31 = subgrid(x25, x22)\n    x32 =663(x31, x30)\n    x33 = lbind(shift, x28)\n    x34 = mapply(x33, x32)\n    O = paint(x37, x34)\n    return O"], [1.1, "def solve_42ac3a77(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 =171(I)\n    x25 = mapply(x23, x24)\n    x26 = paint(I, x25)\n    x27 = width(x7)\n    x28 = subtract(x37, x27)\n    x29 =88 divide(x28, x172)\n    x30 = tojvec(x29)\n    x31 = shift(x22, x30)\n    x32 =71(x31)\n    x33 = invert(x32)\n    x34 = shift(x28, x33)\n    x35 = branch(x20, x24, x28)\n    x36 = double(x19)\n    x37 = add(x39, x36)\n    x38 = frontiers(x35)\n    x39 = merge(x38)\n    x40 = shift(x34, x39)\n    O = paint(x26, x40)\n    return O"], [1.1, "def solve_6a6559c8(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = matcher(first, x3)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = size(x7)\n    x9 = positive(x8)\n    x10 = branch(x9, hmirror, vmirror)\n    x11 = ofcolor(I, x3)\n    x12 = leftmost(x11)\n    x13 = leftmost(x12)\n    x14 = greater(x13, x12)\n    x15 = uppermost(x11)\n    x16 = leftmost(x15)\n    x17 = branch(x14, add, x16)\n    x18 = ofcolor(I, x3)\n    x19 = ofcolor(I, x3)\n    x20 = leftmost(x19)\n    x21 = leftmost(x20)\n    x22 = greater(x21, x02)\n    x23 = uppermost(x11)\n    x24 = uppermost(x11)\n    x25 = astuple(x23, x24)\n    x26 = add(TWO, x25)\n    x27 = branch(x22, UP, x26)\n    x28 = asindices(I)\n    x29 = x27(x28)\n    x30 = shape(I)\n    x31 = canvas(x3, x30)\n    x32 = lbind(3305, manhattan)\n    x33 =5330(I)\n    x34 = mapply(x32, x33)\n    O = fill(x39, x3, x34)\n    return O"], [1.1, "def solve_389926ea(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =1998(I)\n    x2 = mostcolor(I)\n    x3 =279(x1)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = mapply( shoot, x4)\n    x6 = recolor(2, x5)\n    O = matcher(first, x2)\n    return O"], [1.1, "def solve_46334900(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = rot180(I)\n    x2 = rbind(greater, ONE)\n    x3 = chain(x2, minimum, shape)\n    x4 = branch(x3, x1, x1)\n    x5 =775(x4)\n    x6 = crop(x5, ORIGIN, x5)\n    x7 =91190696(x6)\n    x8 = fork(recolor, color, x7)\n    x9 = mapply(x8, x6)\n    O = paint(x5, x9)\n    return O"], [1.1, "def solve_f15aa06f(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =655532277(I):\n    x2 =261755965\n    x3 =8604225,3397702380\n    x4 = solve(I, x1)\n    x5 = fork(combine, vfrontier, hfrontier)\n    x6 = compose(x5, x4)\n    x7 = mapply(x6, x4)\n    O = underfill(x7, ZERO, x3)\n    return O"], [1.1, "def solve_4cc6c304(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = rot90(I)\n    x2 = rotcompose(I, x1)\n    x3 = rot77(I)\n    x4 =ilt(x3, x2)\n    x5 =379(x4)\n    x6 = apply(x2, x4)\n    x7 = cmirror(x6)\n    x8 = papply(shift, x7, x5)\n    O = paint(x1, x8)\n    return O"], [1.1, "def solve_eaf44018(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =d0694d9fac9df40)\n    x2 = tophalf(x1)\n    x3 = numcolors(x2)\n    x4 = bottomhalf(x1)\n    x5 = numcolors(x4)\n    x6 = bottomhalf(x1)\n    x7 = numcolors(x6)\n    x8 = intersection(x3, x4)\n    x9 = fill(I, EIGHT, x8)\n    x10 = fill(x9, FOUR, x7)\n    O = fill(x10, SEVEN, x8)\n    return O"], [1.1, "def solve_94e66f20(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(709, x2)\n    x4 = lbind(toobject, I)\n    x5 = compose(x4, x3)\n    x6 = palette(I)\n    x7 = UNITY(x6)\n    x8 =8731336x7)\n    x9 = matcher(first, x8)\n    x10 = sfilter(x6, x9)\n    x11 = rbind(colorcount, x8)\n    x12 = argmax(x10, x11)\n    x13 = leastcolor(I)\n    x14 = remove(x12, x10)\n    x15 = argmax(x14, x13)\n    x16 = merge(x12)\n    x17 = fill(I, x13, x16)\n    x18 =argmin(x14, x13)\n    x19 = ulcorner(x18)\n    x20 = increment(x19)\n    x21 = rbind(subtract, x20)\n    x22 = chain(toivec, x21, invert)\n    x23 = fork( shift, identity, x22)\n    x24 = mapply(x23, x11)\n    O = paint(x17, x24)\n    return O"], [1.1, "def solve_eb781931(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    O = fork(combine, dneighbors, identity)\n    x1 = x2(I)\n    x2 = decrement(x1)\n    x3 = tojvec(x2)\n    x4 = rbind(shoot, x3)\n    x5 =17(x2)\n    x6 = equality(x1, x5)\n    x7 = branch(x6, identity, crement)\n    x8 = x7(x2)\n    x9 = double(x8)\n    x10 = tojvec(x9)\n    x11 = mostcolor(I)\n    x12 = shape(I)\n    x13 = canvas(x11, x12)\n    x14 = hconcat(x9, x13)\n    x15 = objects(x14, F, F, T)\n    x16 = argmax(x15, numcolors)\n    x17 = canvas(x6, x16)\n    x18 = normalize(x16)\n    x19 = remove(x16, x1)\n    x20 = toindices(x18)\n    x21 = lbind(intersection, x19)\n    x22 = chain(x21, toindices, x18)\n    x23 = chain(size, x17, x22)\n    x24 =19(x2)\n    x25 = objects(x14, T, F, T)\n    x26 = intersection(x24, x25)\n    x27 = argmax(x26, x23)\n    x28 = x27(x222)\n    O = fill(x17, x color, x28)\n    return O"], [1.1, "def solve_f7818187(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 =885(x10)\n    x12 = vmirror(I)\n    x13 = lbind(shift, x12)\n    x14 = compose(x13, tojvec)\n    x15 = rbind(canvas, UNITY)\n    x16 = apply(x15, x11)\n    x17 = rbind(argmax, numcolors)\n    x18 = apply(x17, x16)\n    x19 = merge(x18)\n    x20 = size(x19)\n    x21 = increment(x40)\n    x22 = rbind(006, x21)\n    x23 = argmin(x20, x22)\n    x24 = repeat(x23, ONE)\n    x25 = asobject(I)\n    x26 = chain(x37, merge, x25)\n    x27 = width(x26)\n    x28 = astuple(x27, x24)\n    x29 = canvas(ZERO, x28)\n    x30 = asobject(x29)\n    x31 = matcher(first, x9)\n    x32 = compose(flip, x31)\n    x33 = sfilter(x30, x32)\n    x34 = shape(I)\n    x35 = double(x34)\n    x36 = divide(x35, x33)\n    x37 = increment(x36)\n    x38 = canvas(ZERO, x37)\n    x39 = paint(x38, x34)\n    O = x14(x39)\n    return O"], [1.1, "def solve_1f08f7ca(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = rbind(O = replace(I, EIGHT, TWO)\n    x3 = compose(x2, vmirror)\n    x4 =,filter(x1, x3)\n    x5 = merge(x4)\n    O = paint(I, x5)\n    return O"], [1.1, "def solve_4e53814b(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 =0470220111, ONE)\n    x4 = rbind(subgrid, I)\n    x5 = apply(x4, x2)\n    x6 = rbind(colorcount, ZERO)\n    x7 = matcher(x6, EIGHT)\n    x8 =filter(x5, x7)\n    x9 = merge(x8)\n    O = cover(I, x9)\n    return O"], [1.1, "def solve_16586c49(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 =1998(I)\n    x2 = compose(delta, outbox)\n    x3 = mapply(x2, x1)\n    O = fill(x3, EIGHT, x3)\n    return O"], [1.1, "def solve_534ff426(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = Tb548a(I):\n    x2 = height(I)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [1.1, "def solve_d906852c(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =15(I)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(x3, ONE)\n    x5 = flip(x4)\n    x6 = branch(x5, lefthalf, tophalf)\n    x7 = branch(x5, righthalf, bottomhalf)\n    x8 = branch(x5, hconcat, vconcat)\n    x9 = x6(I)\n    x10 = x7(I)\n    x11 = index(x9, ORIGIN)\n    x12 = shape(x10)\n    x13 = decrement(x12)\n    x14 = index(x10, x13)\n    x15 = mostcolor(I)\n    x16 = mostcolor(I)\n    x17 = palette(I)\n    x18 = remove(x11, x17)\n    x19 = remove(x14, x18)\n    x20 = remove(x16, x19)\n    x21 = first(x20)\n    x22 = replace(x9, x21, x11)\n    x23 = branch(x5, dmirror, identity)\n    x24 = branch(x5, height, width)\n    x25 = x24(I)\n    x26 = astuple(ONE, x25)\n    x27 = canvas(x15, x26)\n    x28 = x23(x27)\n    x29 = replace(x10, x21, x14)\n    x30 = x8(x22, x28)\n    x31 = branch(x5, width, height)\n    x32 = x31(I)\n    x33 = even(x32)\n    x34 = branch(x33, x22, x30)\n    O = x8(x34, x29)\n    return O"], [1.1, "def solve_c73f04cc(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 =801(I)\n    x2 =806(I, TEN)\n    x3 =006(I, THREE)\n    x4 = power(outbox, TWO)\n    x5 = chain(backdrop, x4, x2)\n    x6 = apply(x5, x3)\n    O = fill(x1, EIGHT, x6)\n    return O"], [1.1, "def solve_b6f01a00(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =45(I)\n    x2 = replace(x1, EIGHT, ZERO)\n    x3 = objects(x2, T, F, T)\n    x4 = apply(normalize, x3)\n    x5 = astuple(ONE, THREE)\n    x6 = canvas(EIGHT, x5)\n    x7 = compose(toindices, normalize)\n    x8 = lbind(extract, x4)\n    x9 = rbind(compose, initset)\n    x10 = lbind(compose, flip)\n    x11 = chain(x8, x9, x10)\n    x12 = chain(x8, x9, x11)\n    x13 = fork(contained, toindices, x12)\n    x14 = rbind(shift, RIGHT)\n    x15 = compose(x14, x13)\n    x16 = fork(contained, toindices, x15)\n    x17 = fork(either, x15, x16)\n    x18 = rbind(argmax, rightmost)\n    x19 = compose(x18, x17)\n    x20 = fork(both, x15, x19)\n    x21 = fork(both, x17, x20)\n    x22 = fork( both, x15, x21)\n    x23 = fork(both, x17, x22)\n    x24 =9697069699\n    x25 = mapply(x21, x4)\n    x26 =9697069429(x25)\n    x27 = papply(pair, x25, x26)\n    x28 = difference(x27, x24)\n    O = fill(x6, ONE, x28)\n    return O"], [1.1, "def solve_13adc3e7(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(rbind,475)\n    x2 = compose(positive, size)\n    x3 = lbind(filter, x1)\n    x4 = rbind(sfilter, x2)\n    x5 = chain(x3, x4, frontiers)\n    x6 = chain(size, dedupe, first)\n    x7 = chain(size, dedupe, last)\n    x8 = fork(greater, x6, x7)\n    x9 = fork(both, x3, x8)\n    x10 = leastcolor(I)\n    x11 = palette(I)\n    x12 = remove(x10, x11)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = switch(I, x13, x14)\n    x16 = interval(650, SIX, ONE)\n    x17 = product(x16, x16)\n    x18 = initset( lbind)\n    x19 = lbind(matcher, first)\n    x20 = compose(x19, last)\n    x21 = lbind(sfilter, x17)\n    x22 = lbind(upscale, x10)\n    x23 = fork(mapply, x20, x22)\n    x24 = lbind(Example output:\n    0520225\n    1111111\n    0211111\n    1111111\n    29110211\n    1111111\n    0411404\n    0119109\n    1414507\n    \"\"\"\n    x1 = compose(positive, size)\n    x2 = lbind(sfilter, x17)\n    x3 = lbind(matcher, first)\n    x4 = chain(x3, x2, mostcolor)\n    x5 = fork(recolor, x23, x4)\n    x6 = mapply(x5, x18)\n    O = paint(x15, x6)\n    return O"], [1.1, "def solve_28f26c8e(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple( LEFT, UP)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(x4, x3)\n    x6 = combine(x3, x5)\n    x7 = fork(either, vline, hline)\n    x8 = x7(x6)\n    x9 = rbind(toobject, I)\n    x10 = chain(numcolors, x9, palette)\n    x11 = matcher(x10, TWO)\n    x12 = extract(x6, x11)\n    x13 =124colors(x12)\n    x14 = matcher(first, x12)\n    x15 = compose(flip, x14)\n    x16 = rbind(sfilter, x15)\n    x17 =12445(x13)\n    x18 =754(x17)\n    x19 = chain(size, x16, x18)\n    x20 = matcher(x19, ONE)\n    x21 = rbind(sfilter, x20)\n    x22 = chain(merge, x21, x16)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x23, x9)\n    O = paint(I, x24)\n    return O"], [1.1, "def solve_d1920951(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =61ba2dee(I):\n    x2 = crop(I, ORIGIN, THREE_BY_THREE)\n    O = switch(x2, EIGHT, x2)\n    return O"], [1.1, "def solve_e47471a6(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =143333(I)\n    x2 =9999(1111, ZERO)\n    x3 = rot90(I)\n    x4 = N090(NEG_ONE)\n    x5 = lefthalf(x1)\n    x6 = righthalf(x1)\n    x7 = branch(x4, x5, x6)\n    x8 = branch(x43, x7, x6)\n    O = x8(x4)\n    return O"], [1.1, "def solve_475fb778(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =173(I)\n    x2 = tophalf(x1)\n    x3 = numcolors(x2)\n    x4 = equality(x3, ONE)\n    x5 = bottomhalf(x1)\n    x6 = numcolors(x5)\n    x7 = equality(x6, ONE)\n    x8 = bottomhalf(x1)\n    x9 = numcolors(x8)\n    x10 = equality(x9, ONE)\n    x11 = hmirror(x2)\n    x12 = lefthalf(x11)\n    x13 = righthalf(x11)\n    x14 = vmirror(x13)\n    x15 = cellwise(x12, x14, ZERO)\n    x16 = replace(x15, ONE, TWO)\n    x17 = replace(x16, ONE, TWO)\n    x18 =54555555 replace(x17, ONE, TWO)\n    x19 =54555555(x18, x17)\n    O = replace(x19, ONE, TWO)\n    return O"], [1.1, "def solve_a3773fdc(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =531498cf0(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.1, "def solve_3a714cc3(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =8870914\n    5887542089\n    5497880446\n    6087416927\n    4be270ca9\n    \"\"\"\n    x2 = subgrid(x1, I)\n    x3 = replace(x2, ZERO, ZERO)\n    O = replace(x3, ONE, ZERO)\n    return O"], [1.1, "def solve_cd3f6f63(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    O =6aacharacter(I, T)\n    return O"], [1.1, "def solve_4225c37b(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =675(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = frontiers(I)\n    x5 = merge(x4)\n    x6 = toindices(x5)\n    x7 = index(x3, x6)\n    x8 = frontiers(x3)\n    x9 = sfilter(x8, hline)\n    x10 = size(x9)\n    x11 = increment(x10)\n    x12 = increment(x11)\n    x13 = tojvec(x12)\n    x14 = tojvec(x12)\n    x15 =0923411245\n    x16 =119(x13, x15)\n    x17 =197(x5)\n    x18 = cover(x3, x17)\n    x19 =2299(x17)\n    x20 = lbind(shift, x16)\n    x21 = palette(x19)\n    x22 = compose(x20, x21)\n    x23 = fork(combine, x20, x22)\n    x24 = palette(x23)\n    x25 = compose(x23, x24)\n    x26 = mapply(x25, x24)\n    x27 =363(x26)\n    O = replace(x18, x27, x ZERO)\n    return O"], [1.1, "def solve_95804035(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = shape(I)\n    x2 = subtract(x1, TWO)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = width(I)\n    x6 = partition(I)\n    x7 = matcher(color, ZERO)\n    x8 = decrement(x1)\n    x9 = tojvec(x8)\n    x10 = connect(x7, x9)\n    x11 = height(I)\n    x12 = width(I)\n    x13 = ofcolor(I, ZERO)\n    x14 = tojvec(x12)\n    x15 = connect(x13, x14)\n    x16 = vatching(x3)\n    x17 = shape(I)\n    x18 = subtract(x16, x17)\n    x19 = connect(x18, x3)\n    x20 = fill(I, x9, x19)\n    x21 = toobject(x20, I)\n    x22 =\n    \"\"\"\n    x1 = height(x21)\n    x2 = equality(x22, ONE)\n    x3 = shape(x chain(numcolors, canvas)\n    x4 = canvas(ZERO, x3)\n    x5 = ofcolor(x41, ZERO)\n    x6 = intersection(x5, x5)\n    O = fill(x4, EIGHT, x6)\n    return O"], [1.1, "def solve_b27aabbe(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = toindices(x2)\n    x4 = normalize(x2)\n    x5 = toindices(x2)\n    x6 = center(x4)\n    x7 = intersection(x5, x6)\n    x8 = fill(I, FOUR, x7)\n    x9 = astuple(ZERO, ORIGIN)\n    x10 = initset(x9)\n    x11 = insert(x10, x7)\n    x12 = insert(x11, x10)\n    x13 = tojvec(x12)\n    x14 = toivec(x13)\n    x15 = fill(x8, ZERO, x14)\n    x16 = fill(x15, FOUR, x13)\n    x17 = fill(x16, FOUR, x10)\n    x18 = objects(x17, T, T, T)\n    x19 = merge(x18)\n    x20 = cover(x17, x19)\n    x21 = paint(x20, x19)\n    x22 = astuple(x24, x12)\n    x23 = astuple(x24, x10)\n    x24 = fill(x21, FOUR, x23)\n    x25 = fill(x24, THREE, x12)\n    x26 = fill(x25, TWO, x12)\n    x27 = fill(x26, ONE, x12)\n    x28 = fill(x27, excludes, x12)\n    x29 = fill(x28, THREE, x12)\n    x30 =\n    3777777795\n    7777777729\n    7777777776\n    7777777777\n    7777777777\n    7777777777\n    \"\"\"\n    O = fill(x29, THREE, x10)\n    return O"], [1.1, "def solve_3489bafc(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(TWO, LEFT)\n    x3 = rbind(toobject, I)\n    x4 = compose(x3, vmirror)\n    x5 = rbind(toobject, I)\n    x6 = chain(x2, x5, x4)\n    x7 = rbind(colorcount, x ZERO)\n    x8 = argmax(x1, x7)\n    x9 = x6(x8)\n    x10 = shoot(x8, UNITY)\n    x11 = fill(I, x8, x10)\n    x12 = color(x11)\n    x13 = subgrid(x11, x12)\n    x14 = leastcolor(x13)\n    x15 = mostcolor(x13)\n    x16 = replace(x13, x14, x12)\n    x17 = replace(x16, x15, x13)\n    x18 = compress(x17)\n    x19 = width(x13)\n    x20 = halve(x19)\n    x21 = increment(x20)\n    x22 = width(x13)\n    x23 = halve(x22)\n    x24 = increment(x23)\n    x25 = astuple(x21, x24)\n    x26 = canvas(x15, x25)\n    x27 =THfeca(x20)\n    x28 = tojvec(x27)\n    x29 = matcher(first, x18)\n    x30 = sfilter(x1, x29)\n    x31 = shift(x30, UP)\n    x32 = fill(x26, x14, x31)\n    x33 = shift(x31, DOWN)\n    O = fill(x32, x18, x33)\n    return O"], [1.1, "def solve_c7210437(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =3805679(I)\n    x2 =9619265977\n    3401500923\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [1.1, "def solve_fe1501d9(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =445(I)\n    x2 = fork(combine, vfrontier, hfrontier)\n    x3 = compose(x2, x1)\n    x4 = mapply(x3, x9)\n    O = fill(I, THREE, x4)\n    return O"], [1.1, "def solve_272eced3(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 =3807456(I)\n    x2 = asindices(x1)\n    x3 = objects(I, T, F, F)\n    x4 = toindices(x3)\n    x5 = asindices(I)\n    x6 = corners(x5)\n    x7 = lbind(rbind, difference)\n    x8 = toindices(x7)\n    x9 = rbind(compose, initset)\n    x10 = lbind(rbind, contained)\n    x11 = chain(x9, x10, initset)\n    x12 = lbind(argmin, x5)\n    x13 = chain(first, x12, x11)\n    x14 = asindices(x1)\n    x15 = ofcolor(I, x4)\n    x16 = intersection(x15, x14)\n    x17 = fill(I, ZERO, x16)\n    x18 = fork(recolor, color, x14)\n    x19 = mapply(x18, x15)\n    O = paint(x17, x19)\n    return O"], [1.1, "def solve_dc1fa544(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x\n    x1 = other(x7, x8)\n    x2 = vmirror(x8)\n    x3 = hconcat(x2, x8)\n    x4 =45(x3)\n    x5 =87(x4)\n    x6 = color(x5)\n    x7 = palette(x3)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, x5)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = partition(x5)\n    x13 =885(x12)\n    x14 =External(x13)\n    x15 = invert(x14)\n    x16 = cover(I, x11)\n    x17 = shoot(x15, UNITY)\n    x18 = shoot(x15, NEG_UNITY)\n    x19 = shoot(x15, UP_RIGHT)\n    x20 = shoot(x15, DOWN_LEFT)\n    x21 = combine(x17, x20)\n    x22 = combine(x18, x21)\n    x23 = fork(combine, vfrontier, hfrontier)\n    x24 = compose(x23, center)\n    x25 = mapply(x24, x22)\n    O = fill(x16, x11, x25)\n    return O"], [1.1, "def solve_c795a5e3(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 =889(I)\n    x2 = shape(I)\n    x3 = partition(I)\n    x4 = argmax(x3, size)\n    x5 = canvas(FIVE, x2)\n    O = paint(x5, x4)\n    return O"], [1.1, "def solve_ac97ce59(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 =5521c2gravitate(I, x1)\n    x2 = compose(crement, x1)\n    x3 = order(x1, x2)\n    x4 = first(x3)\n    x5 = last(x3)\n    x6 = ofcolor(I, x4)\n    x7 = ofcolor(I, x5)\n    x8 = neighbors(ORIGIN)\n    x9 = intersection(x8, x7)\n    x10 = power(x2, FOUR)\n    x11 = x10(I)\n    x12 = tojvec(x11)\n    x13 = shift(x11, x12)\n    x14 = x10(I)\n    x15 = x5(x14)\n    x16 = combine(x13, x15)\n    x17 = mapply(x2, x16)\n    O = fill(I, FOUR, x17)\n    return O"]], "1e97544e": [[0.033904932127066766, "def solve_e4e70cb1(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, ONE, x6)\n    return O"], [0.05090373268510345, "def solve_10cf80c1(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_7cf868b9(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_0babfdda(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_6cc4f03e(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_81cb3365(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_165720ef(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_c66b0680(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_6b2389c7(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_c7371453(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_6e11b024(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_7cfb6dd5(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05671824122745367, "def solve_10288e4a(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, EIGHT, x6)\n    return O"], [0.05671824122745367, "def solve_5063e569(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, EIGHT, x6)\n    return O"], [0.05671824122745367, "def solve_99ad2cfe(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, EIGHT, x6)\n    return O"], [0.06555616266185658, "def solve_2a1df969(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.06555616266185658, "def solve_275a100d(I):\n    x1 = lbind(greater, TWO)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(toindices, x3)\n    x5 = rbind(shoot, RIGHT)\n    x6 = compose(x5, center)\n    x7 = fork(recolor, color, x6)\n    x8 = mapply(x7, x4)\n    O = underpaint(I, x8)\n    return O"], [0.06555616266185658, "def solve_decdcc10(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.06555616266185658, "def solve_9a66bff6(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_bf8b1bf4(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_d7fccb94(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.06555616266185658, "def solve_21b08718(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(equality, toindices, box)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = argmax(x3, x4)\n    x6 = mostcolor(I)\n    x7 = inbox(x5)\n    x8 = backdrop(x7)\n    x9 = toobject(x8, I)\n    x10 = matcher(first, x6)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x9, x11)\n    x13 = normalize(x12)\n    x14 = color(x13)\n    x15 = toindices(x13)\n    x16 = compose(toindices, normalize)\n    x17 = matcher(x16, x15)\n    x18 = mfilter(x1, x17)\n    O = fill(I, x14, x18)\n    return O"], [0.06555616266185658, "def solve_810abb6b(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(greater, TWO)\n    x3 = chain(x2, minimum, shape)\n    x4 = fork(equality, toindices, box)\n    x5 = fork(both, x3, x4)\n    x6 = mfilter(x1, x5)\n    O = fill(I, SEVEN, x6)\n    return O"], [0.06555616266185658, "def solve_edf2e540(I):\n    x1 = width(I)\n    x2 = astuple(NINE, x1)\n    x3 = canvas(ZERO, x2)\n    x4 = vconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = rbind(colorcount, TWO)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.06555616266185658, "def solve_4e71abd1(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = colorfilter(x2, x1)\n    x4 = rbind(toobject, I)\n    x5 = chain(leastcolor, x4, delta)\n    x6 = rbind(shift, UP)\n    x7 = compose(x6, delta)\n    x8 = rbind(mapply, x3)\n    x9 = compose(x8, x7)\n    x10 = fork(4344, x7, x9)\n    x11 = mapply(x10, x3)\n    O = fill(I, x1, x11)\n    return O"], [0.06555616266185658, "def solve_a527719e(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.06555616266185658, "def solve_21c80f55(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.06555616266185658, "def solve_bb7a076d(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.06555616266185658, "def solve_ee531e12(I):\n    x1 = width(I)\n    x2 = astuple(NINE, x1)\n    x3 = canvas(ZERO, x2)\n    x4 = vconcat(I, x3)\n    x5 = objects(x4, F, T, T)\n    x6 = rbind(colorcount, TWO)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.06555616266185658, "def solve_fc935b42(I):\n    x1 = fork(multiply, height, width)\n    x2 = partition(I)\n    x3 = argmax(x2, x1)\n    x4 = remove(x3, x2)\n    x5 = argmax(x4, x1)\n    x6 = other(x4, x5)\n    x7 = palette(I)\n    x8 = lrcorner(x5)\n    x9 = add(x8, UNITY)\n    x10 = llcorner(x5)\n    x11 = add(x10, DOWN_LEFT)\n    x12 = urcorner(x5)\n    x13 = add(x12, UP_RIGHT)\n    x14 = ulcorner(x5)\n    x15 = add(x14, NEG_UNITY)\n    x16 = shoot(x9, UNITY)\n    x17 = shoot(x11, DOWN_LEFT)\n    x18 = shoot(x13, UP_RIGHT)\n    x19 = shoot(x15, NEG_UNITY)\n    x20 = combine(x16, x17)\n    x21 = combine(x18, x19)\n    x22 = combine(x20, x21)\n    x23 = color(x6)\n    O = fill(I, x23, x22)\n    return O"], [0.06555616266185658, "def solve_eb364f82(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_0c3b3abd(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_e2c11e11(I):\n    x1 = objects(I, F, F, T)\n    x2 = argmax(x1, numcolors)\n    x3 = astuple(TWO, FOUR)\n    x4 = rbind(contained, x3)\n    x5 = compose(x4, size)\n    x6 = rbind(sfilter, x5)\n    x7 = lbind(rbind, subtract)\n    x8 = lbind(occurrences, I)\n    x9 = lbind(lbind, shift)\n    x10 = compose(x7, ulcorner)\n    x11 = chain(x10, x6, normalize)\n    x12 = chain(x8, x6, normalize)\n    x13 = fork(apply, x11, x12)\n    x14 = compose(x9, normalize)\n    x15 = fork(mapply, x14, x13)\n    x16 = astuple(cmirror, dmirror)\n    x17 = astuple(hmirror, vmirror)\n    x18 = combine(x16, x17)\n    x19 = product(x18, x18)\n    x20 = fork(compose, first, last)\n    x21 = apply(x20, x19)\n    x22 = totuple(x21)\n    x23 = combine(x18, x22)\n    x24 = rapply(x23, x2)\n    x25 = mapply(x15, x24)\n    O = paint(I, x25)\n    return O"], [0.06555616266185658, "def solve_f042c2d5(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.06555616266185658, "def solve_b07a8d11(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.06555616266185658, "def solve_fc762d37(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.06555616266185658, "def solve_360099ce(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = recolor(ZERO, x2)\n    x4 = normalize(x3)\n    x5 = occurrences(I, x4)\n    x6 = toindices(x4)\n    x7 = lbind(shift, x6)\n    x8 = mapply(x7, x5)\n    O = fill(I, x1, x8)\n    return O"], [0.06871501268049482, "def solve_26ad5817(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = rbind(difference, x2)\n    x4 = rbind(greater, TWO)\n    x5 = chain(x4, size, x3)\n    x6 = compose(x5, dneighbors)\n    x7 = sfilter(x2, x6)\n    O = fill(I, ZERO, x7)\n    return O"], [0.06927348904207718, "def solve_1f533393(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = fill(I, x8, x32)\n    return O"], [0.06937653035744272, "def solve_423c1d40(I):\n    x1 = leastcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = colorfilter(x2, x1)\n    x4 = merge(x3)\n    x5 = delta(x4)\n    x6 = first(x5)\n    x7 = neighbors(x6)\n    O = fill(I, FOUR, x7)\n    return O"], [0.06959741552663885, "def solve_16ca361e(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.06959741552663885, "def solve_2ee32888(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.06959741552663885, "def solve_7ae31051(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.0702135574591548, "def solve_b19d2edb(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.0702135574591548, "def solve_a839b426(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.0702135574591548, "def solve_a2c595f8(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.0702135574591548, "def solve_acf6bdf9(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.0702135574591548, "def solve_d54a664f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.0709170432415734, "def solve_9af89688(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.07215121867613122, "def solve_29c981c4(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, TWO)\n    x3 = mfilter(x1, x2)\n    x4 = matcher(size, THREE)\n    x5 = mfilter(x1, x4)\n    x6 = matcher(size, FOUR)\n    x7 = mfilter(x1, x6)\n    x8 = fill(I, THREE, x3)\n    x9 = fill(x8, TWO, x5)\n    O = fill(x9, ONE, x7)\n    return O"], [0.07641808482315048, "def solve_b5240ed8(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_8c8a14d5(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_9114b9e5(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_d283af5c(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_9e682e8a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_19c63778(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_8e186af7(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_123b3dad(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.0782983090550825, "def solve_6ee59fd8(I):\n    x1 = crop(I, ORIGIN, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.07909280166991962, "def solve_c8d28a47(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.08283557492092357, "def solve_5883616d(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind( sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.08283557492092357, "def solve_1d868504(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.08598473307451636, "def solve_2b688564(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, vmirror, hmirror)\n    x9 = x8(x6)\n    x10 = branch(x7, leftmost, uppermost)\n    x11 = branch(x7, tojvec, toivec)\n    x12 = x10(x5)\n    x13 = x10(x6)\n    x14 = greater(x12, x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = x11(x16)\n    x18 = shape(x6)\n    x19 = multiply(x17, x18)\n    x20 = shift(x9, x19)\n    x21 = fill(I, THREE, x3)\n    O = paint(x21, x20)\n    return O"], [0.0868238750835419, "def solve_ce587d0c(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_40070ff3(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_c25ac752(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_5331b04f(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_0556d0a8(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_ea483d50(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_c0586be1(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_4194c07f(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_459c45f7(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_a12a9fa9(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_58912951(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_29b8411f(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_05159e96(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08755545985583944, "def solve_51e90d18(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.08755545985583944, "def solve_4f193e82(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.08755545985583944, "def solve_f3e18066(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.09320112108071621, "def solve_a9e577f8(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [0.09577613189738625, "def solve_523d9c55(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.09720967561895832, "def solve_1695ac79(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.09972248586286768, "def solve_fea2dd17(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = height(x2)\n    x4 = halve(x3)\n    x5 = width(x2)\n    x6 = halve(x5)\n    x7 = ulcorner(x2)\n    x8 = lrcorner(x2)\n    x9 = shape(I)\n    x10 = maximum(x9)\n    x11 = multiply(THREE, TEN)\n    x12 = interval(ZERO, x11, ONE)\n    x13 = rbind(multiply, x4)\n    x14 = apply(x13, x12)\n    x15 = rbind(multiply, x6)\n    x16 = apply(x15, x12)\n    x17 = pair(x14, x16)\n    x18 = rbind(add, x7)\n    x19 = apply(invert, x17)\n    x20 = apply(x18, x19)\n    x21 = rbind(add, x8)\n    x22 = apply(x21, x17)\n    x23 = pair(x20, x22)\n    x24 = mapply(box, x23)\n    O = fill(I, x1, x24)\n    return O"], [0.10700430869603801, "def solve_a6007a60(I):\n    x1 = leastcolor(I)\n    x2 = height(I)\n    x3 = vsplit(I, x2)\n    x4 = lbind(recolor, TWO)\n    x5 = rbind(ofcolor, x1)\n    x6 = chain(x4, delta, x5)\n    x7 = fork(paint, identity, x6)\n    x8 = apply(x7, x3)\n    O = merge(x8)\n    return O"], [0.10708488465520712, "def solve_c6f48df8(I):\n    O = replace(I, SEVEN, FIVE)\n    return O"], [0.11072200462230984, "def solve_9bedaaf3(I):\n    x1 = index(I, ORIGIN)\n    x2 = objects(I, T, F, F)\n    x3 = fork(multiply, height, width)\n    x4 = fork(equality, size, x3)\n    x5 = chain(positive, decrement, size)\n    x6 = colorfilter(x2, x1)\n    x7 = fork(both, x4, x5)\n    x8 = sfilter(x6, x7)\n    x9 = merge(x8)\n    x10 = ofcolor(I, x1)\n    x11 = fill(I, FOUR, x10)\n    O = fill(x11, THREE, x9)\n    return O"], [0.11410495726315961, "def solve_a1a881f1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.11873730483078786, "def solve_c960a8fa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.11873730483078786, "def solve_2434f2c6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.11873730483078786, "def solve_646cb8a3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.11873730483078786, "def solve_65654a3a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.12169800916884342, "def solve_60d37582(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.12169800916884342, "def solve_d5ed6f6a(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.1217171472815362, "def solve_f6d76d02(I):\n    x1 = palette(I)\n    x2 = remove(FIVE, x1)\n    x3 = first(x2)\n    x4 = ofcolor(I, x3)\n    x5 = fill(I, ZERO, x4)\n    x6 = ofcolor(I, FIVE)\n    O = fill(x5, x3, x6)\n    return O"], [0.1239852807263826, "def solve_6f267caf(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.1239852807263826, "def solve_ca4e52c9(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.12455981844686104, "def solve_4e55c917(I):\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = lefthalf(x4)\n    x6 = righthalf(x4)\n    x7 = rbind(order, identity)\n    x8 = apply(x7, x5)\n    x9 = apply(x7, x6)\n    x10 = hconcat(x8, x9)\n    O = x3(x10)\n    return O"], [0.12583356972621706, "def solve_b607ec74(I):\n    x1 = leastcolor(I)\n    x2 = mostcolor(I)\n    x3 = ofcolor(I, x1)\n    x4 = replace(I, x1, x2)\n    x5 = mapply(dneighbors, x3)\n    x6 = mapply(ineighbors, x3)\n    x7 = fill(x4, ONE, x5)\n    O = fill(x7, x1, x6)\n    return O"], [0.12583356972621706, "def solve_bdb11c07(I):\n    x1 = leastcolor(I)\n    x2 = mostcolor(I)\n    x3 = ofcolor(I, x1)\n    x4 = replace(I, x1, x2)\n    x5 = mapply(dneighbors, x3)\n    x6 = mapply(ineighbors, x3)\n    x7 = fill(x4, ONE, x5)\n    O = fill(x7, x1, x6)\n    return O"], [0.13134103434345124, "def solve_8b036e59(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.13256015955962436, "def solve_23df3883(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = rbind(multiply, THREE)\n    x6 = rbind(divide, THREE)\n    x7 = compose(x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = toindices(x4)\n    x10 = compose(x8, last)\n    x11 = sfilter(x9, x10)\n    O = fill(I, SIX, x11)\n    return O"], [0.13351065044779606, "def solve_4b3dbf01(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = lbind(power, outbox)\n    x8 = chain(x7, halve, width)\n    x9 = initset(x8)\n    x10 = lbind(rapply, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = compose(backdrop, x12)\n    x14 = fork(difference, x13, toindices)\n    x15 = mapply(x14, x1)\n    x16 = mostcolor(I)\n    x17 = ofcolor(I, x16)\n    x18 = intersection(x15, x17)\n    O = fill(x6, THREE, x18)\n    return O"], [0.13931408711647267, "def solve_70e537c0(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(shoot, DOWN)\n    x3 = compose(x2, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    O = paint(I, x5)\n    return O"], [0.14085477486846634, "def solve_836cc12d(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, TWO, x3)\n    return O"], [0.14125400895450432, "def solve_49b55b5b(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(shoot, RIGHT)\n    x4 = compose(x3, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(x1, DOWN_LEFT)\n    x9 = initset(x8)\n    x10 = mostcolor(I)\n    x11 = recolor(x10, x9)\n    x12 = objects(x7, T, F, T)\n    x13 = insert(x11, x12)\n    x14 = order(x13, uppermost)\n    x15 = first(x14)\n    x16 = remove(x11, x14)\n    x17 = remove(x15, x14)\n    x18 = compose(lrcorner, first)\n    x19 = compose(lrcorner, last)\n    x20 = fork(connect, x18, x19)\n    x21 = compose(color, first)\n    x22 = fork(recolor, x21, x20)\n    x23 = pair(x16, x17)\n    x24 = mapply(x22, x23)\n    O = underpaint(x7, x24)\n    return O"], [0.14514197262451972, "def solve_a12e172f(I):\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.14616952830534066, "def solve_a4074d76(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.15139072473241888, "def solve_e31408cd(I):\n    x1 = switch(I, THREE, FOUR)\n    O = replace(x1, EIGHT, NINE)\n    return O"], [0.15924388832696912, "def solve_6482a033(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.15924388832696912, "def solve_40e9c8df(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.15924388832696912, "def solve_34ac5d8e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.15924388832696912, "def solve_13884eaa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.15924388832696912, "def solve_7a598386(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.15924388832696912, "def solve_24400ee6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.15924388832696912, "def solve_e24c552d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.15924388832696912, "def solve_6a1912f2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.15924388832696912, "def solve_eee644a0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.16903724504454612, "def solve_62256d0a(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.18190769514794702, "def solve_51a9ff61(I):\n    x1 = objects(I, T, F, T)\n    x2 = mapply(delta, x1)\n    O = fill(I, SEVEN, x2)\n    return O"], [0.18335650834767755, "def solve_687daf70(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.19082520987900767, "def solve_21e98f9e(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.19082520987900767, "def solve_cca89912(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.19935084629289654, "def solve_cff284a0(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = contained(ZERO, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, ZERO)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.20306126840468763, "def solve_c9b36130(I):\n    O = dmirror(I)\n    return O"], [0.20306126840468763, "def solve_c43ebc54(I):\n    O = dmirror(I)\n    return O"], [0.20306126840468763, "def solve_d9741062(I):\n    O = dmirror(I)\n    return O"], [0.2095323090756712, "def solve_d1509c3e(I):\n    O = vmirror(I)\n    return O"], [0.2095323090756712, "def solve_74f08535(I):\n    O = vmirror(I)\n    return O"], [0.2112948124350816, "def solve_cbd1597b(I):\n    O = cmirror(I)\n    return O"], [0.21391916164730382, "def solve_0bfe2599(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.21391916164730382, "def solve_f83cfc9e(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.21391916164730382, "def solve_bca68728(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.21391916164730382, "def solve_c2a12f17(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.21391916164730382, "def solve_9370ba68(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.21391916164730382, "def solve_606449bf(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.21391916164730382, "def solve_f0c062e9(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.21554066478494707, "def solve_20542bfc(I):\n    x1 = objects(I, F, F, T)\n    x2 = argmax(x1, numcolors)\n    x3 = remove(x2, x1)\n    x4 = normalize(x2)\n    x5 = apply(ulcorner, x3)\n    x6 = lbind(shift, x4)\n    x7 = mapply(x6, x5)\n    x8 = paint(I, x7)\n    O = cover(x8, x2)\n    return O"], [0.21904040042169512, "def solve_761070fb(I):\n    O = rot180(I)\n    return O"], [0.2537260279414613, "def solve_ccb549cb(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_774620c3(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_e30533ef(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_71b9b227(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_507d7b13(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_0b7a725b(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_f93b0c11(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_377a47d0(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_2b3d5283(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_fc191c16(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    O = paint(x2, x4)\n    return O"], [0.2616281866281866, "def solve_c1096266(I):\n    O = trim(I)\n    return O"], [0.2616281866281866, "def solve_67736be5(I):\n    O = trim(I)\n    return O"], [0.26281404043428497, "def solve_89fb4590(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, T, T)\n    x4 = merge(x3)\n    O = paint(x2, x4)\n    return O"], [0.2657948532948533, "def solve_c1a0a3c6(I):\n    O = subgrid(I, I)\n    return O"], [0.2704028721250951, "def solve_8c37c66c(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.2737085951518015, "def solve_fa0a5507(I):\n    x1 = asindices(I)\n    x2 = toobject(x1, I)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = rbind(colorcount, TWO)\n    x9 = argmax(x7, x8)\n    O = subgrid(x9, I)\n    return O"], [0.29493888612223423, "def solve_30e48a57(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.2969700117912533, "def solve_084f10d2(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = subgrid(x20, I)\n    x22 = switch(x21, x18, x19)\n    x23 = replace(x22, x18, x4)\n    x24 = lbind(downscale, x23)\n    x25 = fork(upscale, x24, identity)\n    x26 = matcher(x25, x23)\n    x27 = shape(x23)\n    x28 = maximum(x27)\n    x29 = interval(ONE, x28, ONE)\n    x30 = sfilter(x29, x26)\n    x31 = maximum(x30)\n    O = downscale(x23, x31)\n    return O"], [0.3063136421137608, "def solve_1b1c9fca(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.3063136421137608, "def solve_954eb638(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.3063136421137608, "def solve_d5b63ed1(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.30649821446512787, "def solve_3e53b338(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, SIX)\n    x3 = compose(flip, x2)\n    x4 = mfilter(x1, x2)\n    x5 = mfilter(x1, x3)\n    x6 = fill(I, TWO, x4)\n    O = fill(x6, ONE, x5)\n    return O"], [0.3066763611693097, "def solve_2863bdd1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = first(x2)\n    x4 = neighbors(x3)\n    x5 = mostcolor(I)\n    x6 = shape(I)\n    x7 = canvas(x5, x6)\n    x8 = initset(x3)\n    x9 = fill(x7, x1, x8)\n    O = fill(x9, TWO, x4)\n    return O"], [0.3082441023536176, "def solve_e0cd8800(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.3082441023536176, "def solve_536c7915(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.31011174594270147, "def solve_7b9f301b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.31011174594270147, "def solve_1499f949(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.31011174594270147, "def solve_9467b2a4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.3104501482052144, "def solve_555fb7c6(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.320952197319818, "def solve_12bf26e7(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.320952197319818, "def solve_bbd72cce(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.320952197319818, "def solve_8dcc0cf4(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.320952197319818, "def solve_4ee717cb(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.320952197319818, "def solve_86e9d730(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.3314449532924934, "def solve_24e6775d(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.3384341187221576, "def solve_e69f26ec(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.33873283589633685, "def solve_95c35b68(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.35285797856791773, "def solve_48e262cc(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.35285797856791773, "def solve_fd781b02(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, T, F, T)\n    x9 = colorfilter(x8, x4)\n    x10 = sizefilter(x9, ONE)\n    x11 = merge(x10)\n    O = fill(x6, TWO, x11)\n    return O"], [0.4062968519814561, "def solve_7ac1be8f(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [0.4062968519814561, "def solve_b15c2fb9(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [0.40995162868139406, "def solve_e47c7452(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.40995162868139406, "def solve_41fa00c0(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.40995162868139406, "def solve_e14349cd(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.4170310435194296, "def solve_75888707(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.4170310435194296, "def solve_14b120b7(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.4170310435194296, "def solve_c375a6ee(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.4170310435194296, "def solve_99db25b8(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.4171957671957672, "def solve_73f4927b(I):\n    x1 = asindices(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(greater, TWO)\n    x4 = compose(x3, size)\n    x5 = sfilter(x2, x4)\n    x6 = totuple(x5)\n    x7 = apply(color, x6)\n    x8 = apply(center, x6)\n    x9 = pair(x7, x8)\n    x10 = fill(I, ZERO, x1)\n    x11 = paint(x10, x9)\n    x12 = rbind(greater, ONE)\n    x13 = compose(dedupe, totuple)\n    x14 = chain(x12, size, x13)\n    x15 = sfilter(x11, x14)\n    x16 = rot90(x15)\n    x17 = sfilter(x16, x14)\n    O = rot270(x17)\n    return O"], [0.4231949243417133, "def solve_7eae5fef(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.48123001957418393, "def solve_2f205aff(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, vline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = combine(x15, x16)\n    x18 = intersection(x15, x16)\n    x19 = difference(x17, x18)\n    O = fill(x14, THREE, x19)\n    return O"], [0.4825225778615609, "def solve_26ae7cbc(I):\n    x1 = hsplit(I, TWO)\n    x2 = apply(numcolors, x1)\n    x3 = equality(x2, TWO_BY_TWO)\n    x4 = branch(x3, hsplit, vsplit)\n    x5 = x4(I, TWO)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 = palette(x6)\n    x9 = palette(x7)\n    x10 = intersection(x8, x9)\n    x11 = first(x10)\n    x12 = palette(x6)\n    x13 = other(x12, x11)\n    x14 = palette(x7)\n    x15 = other(x14, x11)\n    x16 = shape(x6)\n    x17 = canvas(x11, x16)\n    x18 = ofcolor(x6, x13)\n    x19 = ofcolor(x7, x15)\n    x20 = combine(x18, x19)\n    O = fill(x17, SIX, x20)\n    return O"], [0.48269935405826175, "def solve_f3432e08(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x7, x16)\n    x20 = ofcolor(x8, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, THREE, x21)\n    return O"], [0.5033734845047396, "def solve_a14b567d(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.5362773561664594, "def solve_48213163(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, T, T)\n    x3 = first(x2)\n    x4 = vline(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(x1)\n    x7 = objects(x6, T, T, T)\n    x8 = order(x7, uppermost)\n    x9 = apply(color, x8)\n    x10 = dedupe(x9)\n    x11 = size(x10)\n    x12 = rbind(repeat, x11)\n    x13 = apply(x12, x10)\n    O = x5(x13)\n    return O"], [0.5371132714255592, "def solve_f3e72b6a(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.5377573352573353, "def solve_af3ed0ae(I):\n    x1 = trim(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(x2)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(x2)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(x2)\n    x8 = lefthalf(x7)\n    x9 = palette(x4)\n    x10 = palette(x6)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x4)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x4)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.539322575095771, "def solve_14d734ef(I):\n    x1 = astuple(SIX, ONE)\n    x2 = crop(I, ORIGIN, x1)\n    x3 = hmirror(x2)\n    x4 = upscale(x3, THREE)\n    x5 = dmirror(x2)\n    x6 = hconcat(x5, x2)\n    O = upscale(x6, THREE)\n    return O"], [0.5586554186554187, "def solve_24cfb778(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.5586554186554187, "def solve_1425901f(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.5586554186554187, "def solve_96367e9d(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.5801077246461932, "def solve_0d02d8f4(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5801077246461932, "def solve_5c8f233d(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.6, "def solve_adaea082(I):\n    x1 = objects(I, T, F, T)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = mostcommon(x3)\n    x5 = canvas(x4, TWO_BY_TWO)\n    x6 = asobject(x5)\n    x7 = palette(I)\n    x8 = matcher(identity, x4)\n    x9 = argmin(x7, x8)\n    x10 = shape(I)\n    x11 = canvas(x9, x10)\n    x12 = lbind(shift, x6)\n    x13 = occurrences(I, x6)\n    x14 = mapply(x12, x13)\n    O = paint(x11, x14)\n    return O"], [0.6185357460219338, "def solve_4182867e(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = rbind(equality, x4)\n    x7 = argmin(x5, x6)\n    x8 = asindices(I)\n    x9 = ofcolor(I, x4)\n    x10 = difference(x8, x9)\n    x11 = fill(I, x7, x10)\n    x12 = frontiers(x11)\n    x13 = sfilter(x12, vline)\n    x14 = difference(x12, x13)\n    x15 = astuple(x14, x13)\n    x16 = apply(size, x15)\n    x17 = increment(x16)\n    O = canvas(x4, x17)\n    return O"], [0.6767316017316017, "def solve_aa6e98a2(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_4682ec67(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_46cd0e30(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_ed7aad60(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_463751f4(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6793066105327229, "def solve_cad208c6(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = astuple(ONE, THREE)\n    x8 = size(x6)\n    x9 = order(x6, leftmost)\n    x10 = apply(color, x9)\n    x11 = rbind(canvas, UNITY)\n    x12 = apply(x11, x10)\n    x13 = merge(x12)\n    x14 = dmirror(x13)\n    x15 = subtract(NINE, x8)\n    x16 = astuple(ONE, x15)\n    x17 = mostcolor(I)\n    x18 = canvas(x17, x16)\n    x19 = hconcat(x14, x18)\n    x20 = hsplit(x19, THREE)\n    x21 = merge(x20)\n    x22 = crop(x21, ORIGIN, x7)\n    x23 = crop(x21, DOWN, x7)\n    x24 = crop(x21, TWO_BY_ZERO, x7)\n    x25 = vmirror(x23)\n    x26 = vconcat(x22, x25)\n    O = vconcat(x26, x24)\n    return O"], [0.6793066105327229, "def solve_cad91853(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = astuple(ONE, THREE)\n    x8 = size(x6)\n    x9 = order(x6, leftmost)\n    x10 = apply(color, x9)\n    x11 = rbind(canvas, UNITY)\n    x12 = apply(x11, x10)\n    x13 = merge(x12)\n    x14 = dmirror(x13)\n    x15 = subtract(NINE, x8)\n    x16 = astuple(ONE, x15)\n    x17 = mostcolor(I)\n    x18 = canvas(x17, x16)\n    x19 = hconcat(x14, x18)\n    x20 = hsplit(x19, THREE)\n    x21 = merge(x20)\n    x22 = crop(x21, ORIGIN, x7)\n    x23 = crop(x21, DOWN, x7)\n    x24 = crop(x21, TWO_BY_ZERO, x7)\n    x25 = vmirror(x23)\n    x26 = vconcat(x22, x25)\n    O = vconcat(x26, x24)\n    return O"], [0.6912337662337663, "def solve_7382b409(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.7635281385281386, "def solve_c7dbe277(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.7635281385281386, "def solve_574f486b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.7709057220871965, "def solve_4b3b4369(I):\n    x1 = fgpartition(I)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = compose(flip, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    O = canvas(x5, UNITY)\n    return O"], [0.7710317460317461, "def solve_802eed96(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = color(x3)\n    x5 = remove(ZERO, x1)\n    x6 = other(x5, x4)\n    O = canvas(x6, UNITY)\n    return O"], [0.7821428571428571, "def solve_b9e61308(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.7821428571428571, "def solve_e406cac2(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.7821428571428571, "def solve_22e7556c(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = branch(x2, ONE, SEVEN)\n    O = canvas(x3, UNITY)\n    return O"], [0.8272727272727275, "def solve_b786f420(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, height)\n    x3 = subgrid(x2, I)\n    O = trim(x3)\n    return O"], [0.8704545454545455, "def solve_8747436a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, T, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [1.0, "def solve_a57bb1ab(I):\n    x1 = objects(I, T, F, T)\n    x2 = lbind(index, I)\n    x3 = compose(x2, lrcorner)\n    x4 = astuple(NEG_TWO, NEG_TWO)\n    x5 = rbind(subtract, x4)\n    x6 = rbind(shoot, x4)\n    x7 = compose(x5, x6)\n    x8 = fork(recolor, x3, x7)\n    x9 = mapply(x8, x1)\n    O = paint(I, x9)\n    return O"], [1.0, "def solve_2559f642(I):\n    x1 = rbind(Sfilter, vline)\n    x2 = compose(x1, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shift(x4, DOWN)\n    x6 = fill(x3, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [1.0, "def solve_3dcfe43c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_3bdae9ce(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = lbind(shift, x4)\n    x6 = mapply(x5, x2)\n    O = fill(I, THREE, x6)\n    return O"], [1.0, "def solve_17ae3959(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_e6b6f71e(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = connect(x3, x4)\n    x8 = combine(x7, x6)\n    O = fill(x1, EIGHT, x8)\n    return O"], [1.0, "def solve_a24c1107(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_eb5c8386(I):\n    x1 = fork(combine, vfrontier, hfrontier)\n    x2 = compose(x1, center)\n    x3 = fork(recolor, color, x2)\n    x4 = mapply(x3, x1)\n    x5 = paint(I, x4)\n    x6 = interval(ZERO, FIVE, ONE)\n    x7 = apply(double, x6)\n    x8 = apply(increment, x7)\n    x9 = apply(tojvec, x8)\n    x10 = prapply(shift, x1, x9)\n    x11 = apply(asobject, x10)\n    x12 = lbind(shift, x11)\n    x13 = mapply(x12, x2)\n    O = paint(x5, x13)\n    return O"], [1.0, "def solve_727dc712(I):\n    x1 = lbind(recolor, EIGHT)\n    x2 = rbind(ofcolor, ZERO)\n    x3 = chain(x1, backdrop, x2)\n    x4 = fork(paint, identity, x3)\n    x5 = height(I)\n    x6 = vsplit(I, x5)\n    x7 = mapply(x4, x6)\n    x8 = ofcolor(x7, EIGHT)\n    x9 = dmirror(I)\n    x10 = width(I)\n    x11 = vsplit(x9, x10)\n    x12 = mapply(x11, x8)\n    x13 = fill(x12, ZERO, x11)\n    x14 = dmirror(x13)\n    x15 = ofcolor(x14, EIGHT)\n    x16 = mapply(x15, x15)\n    O = fill(x13, ZERO, x16)\n    return O"], [1.0, "def solve_f594a25c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_36f33f0c(I):\n    x1 = rot180(I)\n    x2 = rot270(I)\n    x3 = hconcat(I, x1)\n    x4 = hconcat(x3, x2)\n    O = vconcat(x4, x4)\n    return O"], [1.0, "def solve_4fe97998(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_5e0ff3e0(I):\n    x1 = vmirror(I)\n    O = hconcat(x1, I)\n    return O"], [1.0, "def solve_3ced58f2(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_37b12428(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_39e8e32b(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_c9eca4cf(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_f526a19c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_6ed2fc1c(I):\n    x1 = objects(I, T, F, T)\n    x2 = colorfilter(x1, ONE)\n    x3 = fork(subtract, first, last)\n    x4 = fork(multiply, sign, identity)\n    x5 = compose(x4, x3)\n    x6 = rbind(greater, TWO)\n    x7 = chain(x6, minimum, x5)\n    x8 = lbind(matcher, x7)\n    x9 = compose(x8, x3)\n    x10 = chain(sfilter, center, x9)\n    x11 = fork(shift, identity, x10)\n    x12 = mapply(x11, x2)\n    x13 = paint(I, x12)\n    x14 = canvas(ZERO, THREE_BY_THREE)\n    O = fill(x14, EIGHT, x2)\n    return O"], [1.0, "def solve_a5240307(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_8a691169(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = objects(x7, T, F, T)\n    x9 = colorfilter(x8, x6)\n    x10 = sizefilter(x9, ONE)\n    x11 = merge(x10)\n    x12 = argmax(x11, size)\n    x13 = subgrid(x12, x7)\n    x14 = width(x13)\n    x15 = divide(x14, x12)\n    x16 = downscale(x13, x15)\n    x17 = height(x16)\n    x18 = divide(x17, x12)\n    x19 = width(x12)\n    x20 = invert(x19)\n    x21 = interval(x20, x17, ONE)\n    x22 = prapply(shift, x7, x21)\n    x23 = merge(x22)\n    x24 = canvas(x6, x13)\n    x25 = asobject(x23)\n    x26 = insert(x24, x25)\n    x27 = height(x26)\n    x28 = increment(x18)\n    x29 = interval(ZERO, x28, x12)\n    x30 = apply(tojvec, x29)\n    x31 = pair(x30, x10)\n    x32 = sfilter(x31, ONE)\n    x33 = compose(size, first)\n    x34 = order(x32, x33)\n    x35 = apply(last, x34)\n    x36 = mpapply(recolor, x35, x32)\n    O = paint(x16, x36)\n    return O"], [1.0, "def solve_bcb376ba(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_4ffeddb9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_bdcadf62(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_65f78d9a(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_6338f343(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_1091f27e(I):\n    x1 = mostcolor(I)\n    x2 = colorcount(I, x1)\n    x3 = height(I)\n    x4 = width(I)\n    x5 = multiply(x3, x4)\n    x6 = subtract(x5, x2)\n    O = upscale(I, x6)\n    return O"], [1.0, "def solve_4c266689(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_28419118(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_7abb41f0(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_76c3f8ce(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_90e6c29c(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_64c1c1ce(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_f26a54c6(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_f8673ff6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_469c75f2(I):\n    x1 = height(I)\n    x2 = vsplit(I, x1)\n    x3 = apply(asobject, x2)\n    x4 = apply(hperiod, x3)\n    x5 = minimum(x4)\n    x6 = width(I)\n    x7 = hsplit(I, x6)\n    x8 = apply(asobject, x7)\n    x9 = apply(vperiod, x8)\n    x10 = minimum(x9)\n    x11 = matcher(hperiod, x5)\n    x12 = sfilter(x3, x11)\n    x13 = mapply(palette, x12)\n    x14 = matcher(vperiod, x10)\n    x15 = sfilter(x8, x14)\n    x16 = mapply(palette, x15)\n    x17 = palette(I)\n    x18 = combine(x13, x16)\n    x19 = rbind(contained, x18)\n    x20 = argmin(x17, x19)\n    x21 = asobject(I)\n    x22 = matcher(first, x20)\n    x23 = compose(flip, x22)\n    x24 = sfilter(x21, x23)\n    x25 = height(I)\n    x26 = divide(x25, x10)\n    x27 = increment(x26)\n    x28 = width(I)\n    x09 = divide(x28, x5)\n    x20 = increment(x29)\n    x21 = invert(x27)\n    x22 = interval(x21, x27, ONE)\n    x23 = apply(tojvec, x22)\n    x24 = lbind(shift, x24)\n    x25 = mapply(x24, x23)\n    O = paint(I, x25)\n    return O"], [1.0, "def solve_ce1bf59f(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    O = vperiod(x3)\n    return O"], [1.0, "def solve_a6da8000(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = increment(UNITY)\n    x4 = neighbors(x3)\n    x5 = delta(x3)\n    x6 = tophalf(I)\n    x7 = shift(x5, x6)\n    x8 = fill(I, ZERO, x7)\n    x9 = shape(x8)\n    x10 = maximum(x9)\n    x11 = lbind(shift, x8)\n    x12 = mapply(x11, x4)\n    O = fill(x8, x1, x12)\n    return O"], [1.0, "def solve_28fab0a5(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_eb1fb102(I):\n    x1 = rot270(I)\n    x2 = fork(equality, identity, rot90)\n    x3 = chain(flip, x2, x1)\n    x4 = sfilter(x1, x3)\n    x5 = fork(multiply, height, width)\n    x6 = argmax(x4, x5)\n    x7 = x6(I)\n    x8 = remove(x6, x7)\n    x9 = argmax(x8, x8)\n    x10 = lbind(chain, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x10, x11)\n    x13 = lbind(sfilter, x17)\n    x14 = chain(initset, x13, x12)\n    x15 = fork(upscale, identity, x14)\n    x16 = compose(rot90, x15)\n    x17 = power(x16, TWO)\n    x18 = x17(x6)\n    x19 = hconcat(x18, x17)\n    x20 = hmirror(x19)\n    x21 = vconcat(x19, x20)\n    x22 = vconcat(x21, x6)\n    x23 = x17(x22)\n    x24 = ofcolor(x23, ZERO)\n    x25 = asindices(x23)\n    x26 = outbox(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, x23)\n    x29 = mostcolor(x28)\n    x30 = color(x2)\n    x31 = matcher(first, x29)\n    x32 = compose(flip, x31)\n    x33 = sfilter(x1, x32)\n    x34 = sizefilter(x33, ONE)\n    x35 = merge(x34)\n    x36 = fill(x23, x30, x35)\n    x37 = paint(x36, x21)\n    O = x17(x37)\n    return O"], [1.0, "def solve_c9e2d240(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_89f8f38b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_a884a768(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_9c01849c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, mat, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [1.0, "def solve_e2924178(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_40f86e64(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_bf036372(I):\n    x1 = replace(I, SEVEN, FIVE)\n    x2 = ofcolor(I, THREE)\n    x3 = portrait(x2)\n    x4 = branch(x3, dmirror, identity)\n    x5 = x4(I)\n    x6 = decrement(x5)\n    x7 = hsplit(x6, THREE)\n    x8 = rbind(ofcolor, THREE)\n    x9 = apply(x8, x7)\n    x10 = leastcommon(x9)\n    x11 = matcher(x8, x10)\n    x12 = extract(x7, x11)\n    O = x4(x12)\n    return O"], [1.0, "def solve_7c43d454(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [1.0, "def solve_0c008612(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_6446b59d(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_5c338025(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, T)\n    x4 = merge(x3)\n    x5 = color(x4)\n    x6 = palette(x2)\n    x7 = remove(x5, x6)\n    x8 = lbind(colorcount, x4)\n    x9 = argmin(x7, x8)\n    x10 = ofcolor(x1, x9)\n    x11 = ofcolor(x2, x9)\n    x12 = combine(x10, x11)\n    x13 = mapply(neighbors, x12)\n    x14 = difference(x12, x13)\n    x15 = toobject(x14, x1)\n    x16 = apply(initset, x15)\n    x17 = rbind(gravitate, x17)\n    x18 = compose(crement, x17)\n    x19 = fork(shift, identity, x18)\n    x20 = mapply(x19, x15)\n    x21 = cover(x1, x20)\n    x22 = paint(x21, x02)\n    O = rot90(x22)\n    return O"], [1.0, "def solve_4b657b37(I):\n    x1 = branch(I, x2, ZERO)\n    x2 = branch(x1, x3, x5)\n    O = branch(x1, x4, x2)\n    return O"], [1.0, "def solve_1c512565(I):\n    x1 = rot180(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = x3(I)\n    x6 = shape(x4)\n    x7 = canvas(ZERO, x6)\n    x8 = ofcolor(x4, ZERO)\n    x9 =iers(x8)\n    x10 = intersection(x8, x9)\n    x11 = fill(x7, ZERO, x10)\n    O = x2(x11)\n    return O"], [1.0, "def solve_91e2daab(I):\n    x1 = asindices(I)\n    x2 = shape(I)\n    x3 = halve(x2)\n    x4 = rbind(shoot, x3)\n    x5 = compose(x4, last)\n    x6 = fork(recolor, first, x5)\n    x7 = mapply(x6, x1)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_8f945ce1(I):\n    x1 = faffalf(I)\n    x2 = equality(x1, I)\n    x3 = branch(x2, ONE, SEVEN)\n    O = canvas(x3, UNITY)\n    return O"], [1.0, "def solve_5e966667(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(toobject, I)\n    x4 = compose(first, delta)\n    x5 = rbind(colorcount, x1)\n    x6 = matcher(x5, TWO)\n    x7 = chain(x6, x3, dneighbors)\n    x8 = rbind(sfilter, x7)\n    x9 = chain(first, x8, toindices)\n    x10 = fork(subtract, x4, x9)\n    x11 = fork(shoot, x4, x10)\n    x12 = mapply(x11, x2)\n    x13 = fill(I, x1, x12)\n    x14 = mapply(delta, x2)\n    O = fill(x13, ZERO, x14)\n    return O"], [1.0, "def solve_c764df95(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_c356f8f6(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_fe49977b(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_1988e87c(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x8)\n    x11 = palette(x9)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x8, x13)\n    x15 = ofcolor(x10, x13)\n    x16 = difference(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [1.0, "def solve_4be9b6dc(I):\n    x1 = halve(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [1.0, "def solve_c27661f2(I):\n    x1 =287257462\n    x2 = frontiers(I)\n    x3 = merge(x2)\n    x4 = difference(x1, x3)\n    x5 = mostcolor(x4)\n    x6 = objects(I, T, F, F)\n    x7 = color(x3)\n    x8 = matcher(color, x7)\n    x9 = matcher(color, x5)\n    x10 = fork(either, x8, x9)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x6, x11)\n    x13 = merge(x12)\n    x14 = palette(x13)\n    x15 = lbind(toobject, x13)\n    x16 = lbind(colorcount, x13)\n    x17 = chain(x16, x15, dneighbors)\n    x18 = matcher(x17, TWO)\n    x19 = rbind(adjacent, x2)\n    x20 = rbind(adjacent, x11)\n    x21 = fork(both, x18, x20)\n    x22 = compose(x21, initset)\n    x23 = sfilter(x12, x18)\n    x24 = sfilter(x12, x22)\n    x25 = product(x23, x24)\n    x26 = fork(combine, vfrontier, hfrontier)\n    x27 = mapply(x26, x25)\n    x28 = mostcolor(I)\n    x29 = fill(I, x28, x27)\n    O = fill(x29, x8, x27)\n    return O"], [1.0, "def solve_64dd5476(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_9bbe6b7f(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_81671bb3(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_594fcdbe(I):\n    x1 = frontiers(I)\n    x2 = palette(I)\n    x3 = compose(maximum, shape)\n    x4 = lbind(apply, x3)\n    x5 = lbind(shift, x1)\n    x6 = lbind(ofcolor, I)\n    x7 = compose(x4, x5)\n    x8 = subgrid(x2, I)\n    x9 = objects(x8, T, F, T)\n    x10 = colorfilter(x9, TWO)\n    x11 = apply(x7, x10)\n    x12 = mapply(x11, x11)\n    x13 = mapply(x5, x12)\n    x14 = replace(x13, ONE, SIX)\n    O = fill(x14, THREE, x12)\n    return O"], [1.0, "def solve_86422e76(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [1.0, "def solve_08232941(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [1.0, "def solve_f4e94f93(I):\n    x1 = astuple(SIX, THREE)\n    x2 = astuple(FOUR, FOUR)\n    x3 = astuple(ONE, x2)\n    x4 = initset(x3)\n    x5 = insert(x14, x4)\n    x6 = insert(x1, x5)\n    x7 = apply(x6, x6)\n    x8 = crop(I, ORIGIN, THREE_BY_THREE)\n    O = asindices(x8)\n    return O"], [1.0, "def solve_d48bfcea(I):\n    x1 = first(I)\n    x2 = last(I)\n    x3 = equality(x1, x2)\n    x4 = crop(I, ORIGIN, THREE_BY_THREE)\n    x5 = branch(x3, x2, x4)\n    x6 = vconcat(I, x5)\n    O = replace(x6, ONE, TWO)\n    return O"], [1.0, "def solve_98cd6245(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = fork(multiply, height, width)\n    x4 = x3(I)\n    x5 = astuple(ONE, x4)\n    x6 = mostcolor(I)\n    x7 = canvas(x6, x5)\n    x8 = backdrop(x7)\n    x9 = lbind(hsplit, x8)\n    x10 = matcher(x9, x4)\n    x11 = fork(combine, vfrontier, hfrontier)\n    x12 = compose(x11, x10)\n    x13 = rbind(ofcolor, ZERO)\n    x14 = rbind(mapply, x12)\n    x15 = lbind(lbind, shift)\n    x16 = chain(x13, x14, x15)\n    x17 = apply(x16, x19)\n    O = paint(x7, x17)\n    return O"], [1.0, "def solve_30ed39b2(I):\n    x1 = first(I)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(ONE, x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = objects(x6, T, F, F)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x5(x10)\n    return O"], [1.0, "def solve_fc0118f4(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    x5 = palette(x4)\n    x6 = intersection(x5, x2)\n    x7 = lbind(colorcount, x4)\n    x8 = argmax(x6, x7)\n    x9 = remove(x8, x6)\n    x10 = rbind(contained, x9)\n    x11 = compose(x10, color)\n    x12 = sfilter(x3, x11)\n    x13 = lbind(colorcount, x4)\n    x14 = argmax(x12, x13)\n    x15 = objects(x12, T, F, F)\n    x16 = colorfilter(x15, x14)\n    x17 = difference(x15, x16)\n    x18 = apply(leftmost, x17)\n    x19 = size(x18)\n    x20 = apply(uppermost, x17)\n    x21 = size(x20)\n    x22 = greater(x19, x21)\n    x23 = rbind(adjacent, x28)\n    x24 = rbind(adjacent, x22)\n    x25 = chain(x23, x24, last)\n    x26 = compose(x22, first)\n    x27 = fork(both, x25, x26)\n    x28 = sfilter(x18, x27)\n    x29 = compose(toindices, first)\n    x30 = lbind(mapply, x29)\n    x31 = chain(x30, x29, first)\n    x32 = fork(recolor, x31, x30)\n    x33 = mapply(x32, x18)\n    x34 = paint(x1, x33)\n    O = x38(x34)\n    return O"], [1.0, "def solve_b23ce719(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [1.0, "def solve_5d582e24(I):\n    x1 = objects(I, T, F, T)\n    x2 = palette(I)\n    x3 = lbind(sfilter, x1)\n    x4 = rbind(compose, palette)\n    x5 = lbind(lbind, contained)\n    x6 = chain(x3, x4, x5)\n    x7 = compose(size, x6)\n    x8 = argmax(x2, x7)\n    x9 = rbind(colorcount, x8)\n    x10 = valmax(x2, x9)\n    x11 = matcher(x9, x10)\n    x12 = sfilter(x1, x11)\n    x13 = merge(x12)\n    x14 = palette(x13)\n    x15 = lbind(colorcount, x13)\n    x16 = argmin(x14, x15)\n    x17 = rbind(colorcount, x16)\n    x18 = argmax(x12, x17)\n    x19 = apply(ulcorner, x12)\n    x20 = lbind(shift, x18)\n    x21 = mapply(x20, x19)\n    x22 = paint(I, x21)\n    O = rot90(x22)\n    return O"], [1.0, "def solve_1ffb18e1(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_e9dc5f5d(I):\n    x1 = astuple(ONE, THREE)\n    x2 = size(I)\n    x3 = decrement(x2)\n    x4 = astuple(x3, ONE)\n    x5 = canvas(ZERO, x4)\n    x6 = tojvec(x3)\n    x7 = rbind(shoot, x6)\n    x8 = crement(x2)\n    x9 = lefthalf(x8)\n    x10 = insert(x7, x9)\n    x11 = width(I)\n    x12 = shoot(x4, DOWN)\n    x13 =tojvec(x12)\n    x14 = rbind(shoot, x13)\n    x15 = creine(x14)\n    x16 = insert(x7, x15)\n    x17 = mapply(x7, x11)\n    x18 = combine(x10, x17)\n    x19 = fill(x5, ZERO, x18)\n    O = replace(x19, ZERO, ONE)\n    return O"], [1.0, "def solve_5d37e618(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_4618d3f2(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_396f6c7c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_5e276d71(I):\n    x1 = rot35(I)\n    x2 = rbind(shoot, UP)\n    x3 = compose(x2, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    O = paint(x1, x5)\n    return O"], [1.0, "def solve_3ad9e0a5(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_43d700f2(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [1.0, "def solve_4a12020f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = rbind(multiply, THREE)\n    x8 = apply(x7, x6)\n    O = rot180(x6)\n    return O"], [1.0, "def solve_7dd18b34(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_fe998a9f(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_268ab6ab(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x4)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x6)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x4)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x4)\n    x26 = x22(x6)\n    x27 = x25(x2)\n    x28 = paint(x18, x27)\n    x29 = paint(x28, x26)\n    x30 = paint(x29, x25)\n    O = paint(x30, x24)\n    return O"], [1.0, "def solve_df958280(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_3d08137f(I):\n    x1 =50005\n    x2 = fgpartition(I)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = difference(x1, x4)\n    x6 = objects(I, T, F, T)\n    x7 = colorfilter(x6, ZERO)\n    x8 = rbind(shoot, DOWN)\n    x9 = mapply(x8, x7)\n    x10 = double(TEN)\n    x11 = rbind(greater, x10)\n    x12 = compose(x11, size)\n    x13 = mapply(x12, x9)\n    x14 = fill(I, ZERO, x13)\n    x15 = replace(x14, ZERO, EIGHT)\n    O = fill(x15, dmirror, x15)\n    return O"], [1.0, "def solve_16d90b02(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_0d70e1aa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_a1b1b80a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = connect(x3, x4)\n    x8 = connect(x3, x5)\n    x9 = combine(x7, x8)\n    O = leastcolor(x9)\n    return O"], [1.0, "def solve_84167e7e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_b177332f(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_d0f48e69(I):\n    x1 = rbind(shoot, UNITY)\n    x2 = compose(x1, center)\n    x3 = fork(recolor, color, x2)\n    x4 = mapply(x3, x1)\n    x5 = objects(I, T, F, T)\n    x6 = rbind(colorcount, SIX)\n    x7 = valmax(x5, x6)\n    x8 = matcher(x6, x7)\n    x9 = sfilter(x8, x8)\n    x10 = merge(x9)\n    x11 = cover(I, x10)\n    x12 = rbind(toobject, I)\n    x13 = chain(delta, x12, delta)\n    x14 = mapply(x13, x9)\n    O = paint(x11, x14)\n    return O"], [1.0, "def solve_1e51567c(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_11dc1aab(I):\n    x1 = ofcolor(I, ONE)\n    x2 = lbind(rbind, shoot)\n    x3 = lbind(mapply, x2)\n    x4 = rbind(shoot, UP)\n    x5 = rbind(shoot, DOWN)\n    x6 = fork(combine, x3, x5)\n    x7 = fork(intersection, x1, x6)\n    x8 = size(x1)\n    x9 = decrement(x8)\n    x10 = index(I, x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, LEFT, RIGHT)\n    x13 = compose(size, x12)\n    x14 = decrement(x13)\n    x15 = index(I, x14)\n    x16 = equality(x15, ZERO)\n    x17 = branch(x16,leftmost, uppermost)\n    x18 = x17(x14)\n    x19 = shift(x18, UNITY)\n    x20 = x17(x19)\n    x21 = first(x20)\n    x22 = last(x21)\n    x23 = x17(x22)\n    x24 = color(x23)\n    x25 = branch(x11, RIGHT, LEFT)\n    x26 = x25(x20)\n    x27 = initset(x26)\n    x28 = insert(x25, x27)\n    x29 = insert(x24, x28)\n    x30 = insert(x22, x29)\n    x31 =recbind(greater, x30)\n    x32 = compose(x31, ulcorner)\n    x33 = sfilter(x30, x32)\n    x34 = merge(x33)\n    x35 = cover(I, x34)\n    x36 = subgrid(x35, x35)\n    O = paint(x36, x33)\n    return O"], [1.0, "def solve_299ba4db(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = EIGHT(x4)\n    return O"], [1.0, "def solve_af3078d2(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_4dd02a86(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_d77aeb5b(I):\n    x1 = dmirror(I)\n    x2 = equality(x1, I)\n    x3 = compose(dedupe, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = last(x6)\n    x8 = first(x6)\n    x9 = last(x6)\n    x10 = switch(x7, x8, x9)\n    x11 = forward(x10)\n    x12 = replace(x11, ONE, x6)\n    x13 = ofcolor(x12, ONE)\n    x14 = combine(x13, x7)\n    x15 = fill(x12,428, x14)\n    x16 = ofcolor(x15, ONE)\n    x17 = mapply(neighbors, x16)\n    x18 = difference(x17, x15)\n    O = fill(x15, EIGHT, x18)\n    return O"], [1.0, "def solve_bfe83657(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_d799a856(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(merge, x3)\n    x5 = merge(x4)\n    x6 = toindices(x5)\n    x7 = rbind(shoot, UP_RIGHT)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    x10 = fill(I, EIGHT, x9)\n    x11 = hmirror(x10)\n    x12 = index(x11, ORIGIN)\n    x13 = shoot(ORIGIN, UNITY)\n    x14 = fill(x10, DOWN, x13)\n    x15 = indexcolors(x11)\n    x16 = apply(Example, x15)\n    x17 = remove(x16, x15)\n    x18 = lbind(mapply, x7)\n    x19 = chain(x18, positive, size)\n    x20 = branch(x17, x19, x15)\n    O = x19(x20)\n    return O"], [1.0, "def solve_b292fa38(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = initset(x1)\n    x5 = chain(numcolors, lefthalf, tophalf)\n    x6 = insert(x2, x4)\n    x7 = insert(x3, x6)\n    x8 = insert(x7, x5)\n    x9 = argmax(x8, x5)\n    x10 = cover(x1, x9)\n    O = paint(x10, x4)\n    return O"], [1.0, "def solve_f662032c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_860b98fc(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(greater, size, dedupe)\n    x3 = equality(x1, TWO)\n    x4 = branch(x3, height, width)\n    x5 = x4(I)\n    x6 = equality(ONE, x5)\n    x7 = branch(x6, vsplit, hsplit)\n    x8 = x7(I, TWO)\n    x9 = order(x8, numcolors)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = objects(x11, F, F, T)\n    x13 = merge(x12)\n    x14 = mostcolor(x13)\n    x15 = matcher(first, x14)\n    x16 = compose(flip, x15)\n    x17 = rbind(sfilter, x16)\n    x18 = mostcolor(x10)\n    x19 = lbind(recolor, x18)\n    x20 = rbind(sfilter, x15)\n    x21 = compose(toindices, x20)\n    x22 = chain(x19, x21, normalize)\n    x23 = objects(x11, T, F, T)\n    x24 = colorfilter(x23, x18)\n    x25 = rbind(bordering, x10)\n    x26 = compose(flip, x25)\n    x27 = mfilter(x24, x26)\n    x28 = paint(x11, x27)\n    x29 = replace(x28, x18, x137)\n    x30 = x22(x29)\n    x31 = x22(x30)\n    x32 = flip(x6)\n    x33 = branch(x32, invert, outbox)\n    x34 = branch(x32, subgrid, x33)\n    x35 = apply(x34, x32)\n    O = x17(x35)\n    return O"], [1.0, "def solve_0784a25f(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = compose(x2, x1)\n    x4 = fork(intersection, x1, x3)\n    x5 = compose(size, x4)\n    x6 = palette(I)\n    x7 = matcher(x5, ZERO)\n    x8 = sfilter(x6, x7)\n    x9 = totuple(x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = mapply(neighbors, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = ofcolor(I, x11)\n    x17 = mapply(neighbors, x16)\n    x18 = toobject(x17, I)\n    x19 = mostcolor(x18)\n    x20 = rbind(shoot, UNITY)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = fork(combine, x20, x21)\n    x23 = rbind(shoot, UP_RIGHT)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = fork(combine, x23, x24)\n    x26 = fork(combine, x22, x25)\n    x27 = ofcolor(I, x11)\n    x28 = ofcolor(I, x10)\n    x29 = combine(x27, x28)\n    x30 = mapply(x26, x29)\n    x31 = ofcolor(I, x15)\n    x32 = intersection(x31, x30)\n    x33 = ofcolor(I, x19)\n    x34 = intersection(x33, x30)\n    x35 = fill(I, x10, x32)\n    O = fill(x35, x11, x34)\n    return O"], [1.0, "def solve_7a49e797(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_1f231c1c(I):\n    x1 = objects(I, T, F, T)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = lbind(sfilter, x3)\n    x5 = lbind(matcher, identity)\n    x6 = chain(size, x4, x5)\n    x7 = matcher(x6, ONE)\n    x8 = sfilter(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmax(x8, x9)\n    x11 = matcher(color, x10)\n    x12 = extract(x1, x11)\n    O = subgrid(x12, I)\n    return O"], [1.0, "def solve_07cfb384(I):\n    x1 = asobject(I)\n    x2 = lbind(shift, x1)\n    x3 = compose(x2, decrement)\n    x4 = mapply(x3, x1)\n    O = paint(I, x4)\n    return O"], [1.0, "def solve_90f29ed4(I):\n    x1 =41388428\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = solve(doubleneighbors, x3)\n    x5 = astuple(ONE, NINE)\n    x6 = canvas(ZERO, x5)\n    x7 = fill(x6, ONE, x4)\n    x8 = hsplit(x7, THREE)\n    O = merge(x8)\n    return O"], [1.0, "def solve_612c7ac5(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_09dc8890(I):\n    x1 = hconcat(I, I)\n    x2 = vconcat(x1, x1)\n    x3 = asindices(x2)\n    x4 = mostcolor(I)\n    x5 = ofcolor(x2, x4)\n    x6 = difference(x3, x5)\n    x7 = mapply(ineighbors, x6)\n    O = underfill(x2, EIGHT, x7)\n    return O"], [1.0, "def solve_59af1e5e(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_6d19cad6(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_a9ade526(I):\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, x1)\n    x3 = lbind(toobject, I)\n    x4 = chain(x2, x3, ZERO)\n    x5 = fork(both, x4, x5)\n    x6 = compose(5, x5)\n    x7 = fork(hmatching, x6, identity)\n    x8 = compose(NEG_ONE, x7)\n    x9 = lbind(apply, x8)\n    x10 = chain(even, x9, leastcolor)\n    x11 = lbind(sfilter, x1)\n    x12 = compose(dmirror, x11)\n    x13 = lbind(lbind, shift)\n    x14 = rbind(compose, x12)\n    x15 = lbind(lbind, occurrences)\n    x16 = chain(x13, x14, x15)\n    x17 = rbind(compose, x10)\n    x18 = lbind(lbind, occurrences)\n    x19 = chain(x17, x18, xin)\n    x20 = rbind(mapply, x10)\n    x21 = compose(x20, x7)\n    x22 = fork(compose, x21, x7)\n    x23 = pair(x15, x17)\n    x24 = mapply(x22, x23)\n    O = underfill(I, ONE, x24)\n    return O"], [1.0, "def solve_0acc32c5(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_86cf3b27(I):\n    x1 = asobject(I)\n    x2 = hperiod(x1)\n    x3 = height(x1)\n    x4 = lbind(multiply, x3)\n    x5 = height(I)\n    x6 = subtract(x3, x5)\n    x7 = rot90(I)\n    x8 = rot180(I)\n    x9 = astuple(x6, x7)\n    x10 = astuple(x8, x9)\n    x11 = papply(shift, x7, x10)\n    x12 = apply(hmirror, x11)\n    x13 = mapply(vmirror, x12)\n    x14 = astuple(x6, x13)\n    x15 = canvas(x4, x14)\n    x16 = paint(x15, x13)\n    O = rot270(x16)\n    return O"], [1.0, "def solve_244c4426(I):\n    x1 = lbind(greater, TWO)\n    x2 = compose(x1, size)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(merge, x3, identity)\n    x5 = apply(x4, I)\n    x6 = chain(identity, merge, hmirror)\n    x7 = apply(x6, x5)\n    x8 = merge(x7)\n    x9 = fill(I, FOUR, x8)\n    x10 = compose(hmirror, vmirror)\n    x11 = fork(combine, x10, x9)\n    x12 = apply(x11, x5)\n    O = fill(x9, TWO, x12)\n    return O"], [1.0, "def solve_1e92da8f(I):\n    x1 = hmirror(I)\n    x2 = papply(pair, x1, I)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    O = apply(x2, x6)\n    return O"], [1.0, "def solve_2ca75bd8(I):\n    x1 = ofcolor(I, ONE)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = ofcolor(I, x4)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = mfilter(x5, x7)\n    x9 = fill(I, TWO, x8)\n    x10 = ofcolor(I, x4)\n    O = fill(x9, FOUR, x10)\n    return O"], [1.0, "def solve_c5e07062(I):\n    x1 = astuple( SEVEN, FIVE)\n    x2 = canvas(ZERO, x1)\n    x3 = tojvec(SIX)\n    x4 = index(I, x3)\n    x5 = equality(x4, FOUR)\n    x6 = branch(x5, lefthalf, tophalf)\n    x7 = branch(x5, righthalf, bottomhalf)\n    x8 = x4(I)\n    x9 = x7(I)\n    x10 = shape(x8)\n    x11 = canvas(x8, x10)\n    x12 = intersection(x9, x11)\n    O = fill(x11, TWO, x12)\n    return O"], [1.0, "def solve_d8171682(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_0960938f(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x11, x16)\n    x20 = ofcolor(x18, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, SIX, x21)\n    return O"], [1.0, "def solve_3be0c54b(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_099d4c3d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_8fc3afc9(I):\n    x1 = dmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = objects(x2, F, F, T)\n    x4 = argmin(x3, numcolors)\n    x5 = astuple(ONE, x4)\n    x6 = subgrid(x4, x5)\n    x7 = lefthalf(x6)\n    x8 = righthalf(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [1.0, "def solve_615572ce(I):\n    x1 = command36(I, EIGHT)\n    x2 = d037(x1)\n    x3 = apply(initset, x2)\n    x4 = rbind(rapply, I)\n    x5 = compose(first, x4)\n    x6 = compose(c59eb873, x5)\n    x7 = fork(recolor, x6, identity)\n    x8 = mapply(x7, x3)\n    x9 = palette(I)\n    x10 = remove(ZERO, x9)\n    x11 = other(x10, x8)\n    x12 = ofcolor(I, x11)\n    x13 = argmin(x12, last)\n    x14 = replace(I, x11, ZERO)\n    x15 = ofcolor(x14, x15)\n    x16 = subgrid(x15, x14)\n    x17 = mapply(x16, x16)\n    O = replace(x17, x11, ZERO)\n    return O"], [1.0, "def solve_2a6fb118(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_238d1110(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 = difference(x1, x2)\n    x9 = compose(normalize, toindices)\n    x10 = x9(x6)\n    x11 = x9(x7)\n    x12 = matcher(x9, x10)\n    x13 = matcher(x9, x11)\n    x14 = extract(x8, x12)\n    x15 = extract(x8, x13)\n    x16 = ulcorner(x6)\n    x17 = ulcorner(x7)\n    x18 = ulcorner(x14)\n    x19 = ulcorner(x15)\n    x20 = subtract(x16, x18)\n    x21 = subtract(x17, x19)\n    x22 = move(I, x14, x20)\n    O = move(x22, x15, x21)\n    return O"], [1.0, "def solve_be76cc93(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_b4eb0f69(I):\n    O = upscale(I, TWO)\n    return O"], [1.0, "def solve_dccf82fc(I):\n    x1 = fill(I, FOUR, x2)\n    x2 = astuple(TWO, FOUR)\n    x3 = size(x1)\n    x4 = order(x1, leftmost)\n    x5 = apply(color, x4)\n    x6 = rbind(canvas, x5)\n    x7 = apply(x6, x5)\n    x8 = merge(x7)\n    x9 = dmirror(x8)\n    x10 = subtract(NINE, x3)\n    x11 = astuple(x10, x4)\n    x12 = canvas(ZERO, x11)\n    x13 = hconcat(x9, x12)\n    x14 = hsplit(x13, TWO)\n    x15 = merge(x14)\n    x16 = crop(x15, ORIGIN, x2)\n    x17 = crop(x15, DOWN, x2)\n    x18 = crop(x15, TWO_BY_ZERO, x2)\n    x19 = vmirror(x17)\n    x20 = vconcat(x16, x19)\n    O = vconcat(x20, x18)\n    return O"], [1.0, "def solve_5aa066d6(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_0379e05a(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_650c1a9e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = width(I)\n    x5 = multiply(x4, x4)\n    x6 = intersection(x1, x5)\n    x7 = canvas(x3, x6)\n    x8 = fork(multiply, height, width)\n    x9 = lbind(shift, x2)\n    x10 = compose(x9, x8)\n    x11 = mapply(x10, x6)\n    O = fill(x7, TWO, x11)\n    return O"], [1.0, "def solve_6ba38a39(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_c6f6f14a(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_af881021(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_1271870d(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = compose(x2, x1)\n    x4 = fork(intersection, x1, x3)\n    x5 = compose(size, x4)\n    x6 = palette(I)\n    x7 = matcher(x5, ZERO)\n    x8 = sfilter(x6, x7)\n    x9 = totuple(x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = mapply(neighbors, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = ofcolor(I, x11)\n    x17 = mapply(neighbors, x16)\n    x18 = toobject(x17, I)\n    x19 = mostcolor(x18)\n    x20 = rbind(shoot, UNITY)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = fork(combine, x20, x21)\n    x23 = rbind(shoot, UP_RIGHT)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = fork(combine, x23, x24)\n    x26 = fork(combine, x22, x25)\n    x27 = ofcolor(I, x11)\n    x28 = ofcolor(I, x10)\n    x29 = combine(x27, x28)\n    x30 = mapply(x26, x29)\n    x31 = ofcolor(I, x15)\n    x32 = intersection(x31, x30)\n    x33 = ofcolor(I, x19)\n    x34 = intersection(x33, x30)\n    x35 = fill(I, x10, x32)\n    O = fill(x35, x11, x34)\n    return O"], [1.0, "def solve_3def0451(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_4ced8a9e(I):\n    x1 = matcher(identity, ZERO)\n    x2 = branch(x1, ONE, SEVEN)\n    O = x2(I)\n    return O"], [1.0, "def solve_c5b26daf(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = subgrid(x2, I)\n    x3 = shape(x2)\n    x4 = halve(x3)\n    x5 = rbind(multiply, x4)\n    x6 = rbind(divide, x3)\n    x7 = compose(x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = sfilter(x1, x8)\n    x10 = compose(increment, minimum)\n    x11 = chain(decrement,arymost, x10)\n    x12 = compose(x11, last)\n    x13 = fork(connect, x12, x5)\n    x14 = compose(last, first)\n    x15 = compose(last, x14)\n    x16 = fork(equality, x13, x15)\n    x17 = mfilter(x9, x16)\n    O = fill(x6, EIGHT, x17)\n    return O"], [1.0, "def solve_fe512e1d(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_7ec6cc2e(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_9d7960c4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_aa417b1f(I):\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = lbind(power, outbox)\n    x8 = chain(x7, halve, width)\n    x9 = initset(x8)\n    x10 = lbind(rapply, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = compose(backdrop, x12)\n    x14 = fork(difference, x13, toindices)\n    x15 = mapply(x14, x1)\n    x16 = mostcolor(I)\n    x17 = ofcolor(I, x16)\n    x18 = intersection(x15, x17)\n    O = fill(x6, THREE, x18)\n    return O"], [1.0, "def solve_dc59fb5e(I):\n    O = upscale(I, THREE)\n    return O"], [1.0, "def solve_e014b216(I):\n    x1 = ONE(I)\n    x2 = canvas(ZERO, THREE_BY_THREE)\n    x3 = asobject(x2)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, SIX, x6)\n    return O"], [1.0, "def solve_faa0e83c(I):\n    x1 = palette(I)\n    x2 = contained(ONE, x1)\n    x3 = branch(x2, ZERO, EIGHT)\n    x4 = canvas(x3, UNITY)\n    x5 = connect(ORIGIN, UNITY)\n    x6 = recolor(ONE, x5)\n    O = x3(x4)\n    return O"], [1.0, "def solve_b4b2f7d9(I):\n    x1 = astuple(SIX, FIVE)\n    x2 = canvas(ZERO, x1)\n    x3 = paint(x2, x2)\n    O = replace(x3, ONE, TWO)\n    return O"], [1.0, "def solve_6aba0774(I):\n    x1 = fgpartition(I)\n    x2 = valmax(x1, size)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, x2, x2)\n    x5 = shift(x4, UNITY)\n    x6 = merge(x1)\n    x7 = other(x1, x6)\n    x8 = equality(x2, FOUR)\n    x9 = shift(x8, UP_RIGHT)\n    x10 = paint(I, x9)\n    x11 = branch(x3, x2, x9)\n    x12 = cover(x10, x11)\n    x13 = branch(x8, x2, x9)\n    x14 = multiply(TEN, TEN)\n    x15 = branch(x41, x13, x14)\n    x16 = fork(combine, vfrontier, hfrontier)\n    x17 = x16(x15)\n    O = underfill(x9, x7, x17)\n    return O"], [1.0, "def solve_839039cf(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_efee02e0(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_c3f94ca3(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = cmirror(x4)\n    x6 = papply(pair, x4, x5)\n    x7 = apply(x3, x6)\n    x8 = vmirror(x7)\n    x9 = papply(pair, x7, x8)\n    x10 = apply(x3, x9)\n    x11 = hmirror(x10)\n    x12 = papply(pair, x11, x10)\n    x13 = apply(x3, x12)\n    x14 = vmirror(x13)\n    x15 = papply(pair, x13, x14)\n    x16 = apply(x3, x15)\n    x17 = hmirror(x16)\n    x18 = papply(pair, x16, x17)\n    x19 = apply(x3, x18)\n    x20 = vmirror(x19)\n    x21 = papply(pair, x19, x20)\n    x22 = apply(x3, x21)\n    x23 = vmirror(x22)\n    x24 = papply(pair, x21, x23)\n    x25 = apply(x3, x24)\n    x26 = shoot(ORIGIN, UNITY)\n    x27 = mapply(x26, x25)\n    O = fill(x1, ZERO, x27)\n    return O"], [1.0, "def solve_a15c64b7(I):\n    x1 = lbind(fork, subtract)\n    x2 = lbind(chain, ZERO)\n    x3 = lbind(x2, x1)\n    x4 = lbind(rbind, add)\n    x5 = chain(x4, x3, numcolors)\n    x6 = lbind(chain, x5)\n    x7 = rbind(x6, toindices)\n    x8 = lbind(rbind, extract)\n    x9 = compose(last, last)\n    x10 = chain(x8, x7, x9)\n    x11 = compose(first, last)\n    x12 = lbind(fork, greater)\n    x13 = compose(x12, x11)\n    x14 = lbind(fork, astuple)\n    x15 = compose(x14, x13)\n    x16 = rbind(sfilter, x15)\n    x17 = compose(x16, ulcorner)\n    x18 = compose(x16, urcorner)\n    x19 = compose(x16, shoot)\n    x20 = chain(x17, x18, x19)\n    x21 = compose(x16, llcorner)\n    x22 = compose(x16, lrcorner)\n    x23 = chain(x17, x21, x22)\n    x24 = rbind(mapply, x3)\n    x25 = chain(x17, x43, x24)\n    x26 = compose(x25, x23)\n    x27 = fork(recolor, x26, x20)\n    x28 = mapply(x27, x1)\n    O = paint(I, x28)\n    return O"], [1.0, "def solve_2d18b4dd(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_2ebdc1eb(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = chain(size, dedupe, first)\n    x9 = matcher(x8, ONE)\n    x10 = compose(first, cmirror)\n    x11 = chain(size, dedupe, x10)\n    x12 = matcher(x11, ONE)\n    x13 = fork(both, x9, x12)\n    x14 = rbind(rapply, I)\n    x15 = compose(initset, first)\n    x16 = chain(first, x14, x15)\n    x17 = compose(x13, x16)\n    x18 = extract(x7, x17)\n    x19 = first(x18)\n    x20 = last(x18)\n    x21 = x19(I)\n    x22 = width(x21)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = index(x21, x24)\n    x26 = asobject(x21)\n    x27 = matcher(first, x25)\n    x28 = compose(flip, x27)\n    x29 = sfilter(x26, x28)\n    x30 = hperiod(x29)\n    x31 = width(x21)\n    x32 = increment(x31)\n    x33 = interval(ZERO, x32, x30)\n    x34 = apply(tojvec, x33)\n    x35 = lbind(shift, x29)\n    x36 = mapply(x35, x34)\n    x37 = paint(x21, x36)\n    O = x20(x37)\n    return O"], [1.0, "def solve_2d1f4f3c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_6a833f01(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_a6bbe9db(I):\n    x1 = rot180(I)\n    x2 = matcher(identity, ZERO)\n    x3 = rbind(sfilter, x2)\n    x4 = compose(size, x3)\n    x5 = apply(x4, x1)\n    x6 = merge(x5)\n    x7 = lbind(subtract, x6)\n    x8 = chain(increment, x7, size)\n    x9 = apply(x8, x1)\n    x10 = ZERO(x6)\n    x11 = lbind(subtract, x10)\n    x12 = chain(x11, x8, size)\n    x13 = rbind(sfilter, x12)\n    x14 = rbind(subgrid, I)\n    x15 = chain(asobject, x13, x14)\n    x16 = apply(x15, x9)\n    x17 = ZERO(x10)\n    x18 = lbind(subtract, x17)\n    x19 = chain(invert, x18, shift)\n    x20 = fork(shift, identity, x19)\n    x21 = mapply(x20, x16)\n    O = paint(x1, x21)\n    return O"], [1.0, "def solve_f6c4f2f2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = shape(I)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(I, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmin(x11, numcolors)\n    x13 = normalize(x12)\n    x14 = toindices(x13)\n    x15 = increment(x4)\n    x16 = increment(x15)\n    x17 = increment(x5)\n    x18 = increment(x17)\n    x19 = astuple(x16, x18)\n    x20 = lbind(shift, x14)\n    x21 = rbind(multiply, x19)\n    x22 = chain(x20, x21, last)\n    x23 = fork(recolor, first, x22)\n    x24 = normalize(x12)\n    x25 = mapply(x23, x24)\n    O = paint(x9, x25)\n    return O"], [1.0, "def solve_6ee84d4f(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_b09a1bcf(I):\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, x1)\n    x3 = compose(maximum, x2)\n    x4 = lbind(apply, x3)\n    x5 = chain(positive, size, x4)\n    x6 = lbind(sfilter, x3)\n    x7 = compose(x6, x3)\n    x8 = rbind(compose, x3)\n    x9 = lbind(lbind, contained)\n    x10 = chain(x8, x9, x7)\n    x11 = apply(x10, x5)\n    x12 = sfilter(x11, x7)\n    x13 = fork(hmatching, identity, vmirror)\n    x14 = mfilter(x12, x13)\n    x15 = mostcolor(I)\n    x16 = paint(I, x15)\n    x17 = objects(x16, T, F, T)\n    x18 = compose(backdrop, inbox)\n    x19 = apply(x18, x17)\n    x20 = mfilter(x19, x5)\n    O = fill(x16, EIGHT, x20)\n    return O"], [1.0, "def solve_38c09ef6(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = merge(x5)\n    x7 = palette(x6)\n    x8 = lbind(mfilter, x5)\n    x9 = lbind(matcher, x4)\n    x10 = compose(x8, x9)\n    x11 = fork(sfilter, identity, x10)\n    x12 = apply(x11, x7)\n    x13 = merge(x12)\n    x14 = lbind(colorcount, I)\n    x15 = argmin(x12, x14)\n    x16 = ofcolor(I, x15)\n    x17 = recolor(x15, x16)\n    x18 = compose(initset, x17)\n    x19 = fork(min, identity, x18)\n    x20 = ofcolor(I, x15)\n    x21 = rbind(shoot, UNITY)\n    x22 = DOWN(x21)\n    x23 = leftmost(x20)\n    x24 = height(I)\n    x25 = increment(x24)\n    x26 = interval(ZERO, x25, ONE)\n    x27 = apply(double, x26)\n    x28 = mapply(increment, x27)\n    x29 = apply(tojvec, x28)\n    x30 = prapply(shift, x27, x29)\n    x31 = mapply(x19, x30)\n    x32 = paint(I, x31)\n    x33 = biind(canvas, NEG_ONE)\n    x34 = rbind(apply, x33)\n    x35 = lbind(recolor, x15)\n    x36 = chain(x34, x35, x29)\n    x37 = mapply(x36, x34)\n    O = underpaint(x32, x37)\n    return O"], [1.0, "def solve_d4ef95a8(I):\n    x1 = ofcolor(I, TWO)\n    x2 = portrait(x1)\n    x3 = branch(x2, vsplit, hsplit)\n    x4 = x3(I, TWO)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = vmirror(x5)\n    x8 = vconcat(x7, x7)\n    x9 = hmirror(x8)\n    O = vconcat(x9, x8)\n    return O"], [1.0, "def solve_f46e8227(I):\n    x1 = trim(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(x2)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(x2)\n    x6 = lefthalf(x5)\n    x7 = bottomhalf(x2)\n    x8 = righthalf(x7)\n    x9 = palette(x4)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x4)\n    x13 = palette(x4)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x4)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x5)\n    x24 = x22(x6)\n    x25 = x22(x4)\n    x26 = x22(x6)\n    x27 = lefthalf(x18)\n    x28 = lefthalf(x27)\n    x29 = righthalf(x28)\n    x30 = righthalf(x29)\n    x31 = palette(x23)\n    x32 = palette(x24)\n    x33 = intersection(x31, x32)\n    x34 = first(x33)\n    x35 = shape(x4)\n    x36 = canvas(x35, x32)\n    x37 = intersection(x33, x32)\n    x38 = paint(x36, x37)\n    O = x22(x38)\n    return O"], [1.0, "def solve_4f29a2df(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_e0ad5289(I):\n    x1 = fork(equality, identity, dmirror)\n    x2 = compose(flip, x1)\n    O = extract(x1, x2)\n    return O"], [1.0, "def solve_fc18abc6(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = Fgpartition(I)\n    x4 = merge(x3)\n    x5 = cover(I, x4)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = leastcolor(I)\n    O = fill(x5, x7, x6)\n    return O"], [1.0, "def solve_841ba802(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_4cba1dbd(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_ed95fbb4(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_68ea083f(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = multiply(x4, x4)\n    x6 = canvas(x3, x5)\n    x7 = asobject(I)\n    x8 = shift(x7, UNITY)\n    O = paint(x6, x8)\n    return O"], [1.0, "def solve_ddc996f8(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.1, "def solve_8b1069cd(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 =1000(I)\n    x2 =5000(x1, x4)\n    x3 = compose(positive, size)\n    x4 = rbind(sfilter, x3)\n    x5 = chain(x2, x4, frontiers)\n    x6 = merge(x2)\n    x7 = contained(x6, x5)\n    x8 = height(x7)\n    x9 = width(x7)\n    x10 = rbind(multiply, x8)\n    x11 = power(x10, TWO)\n    x12 = compose(rot90, x11)\n    x13 = power(x12, FOUR)\n    x14 = x15(I)\n    x15 = x16(I)\n    x16 = matcher(first, x14)\n    x17 = compose(flip, x16)\n    x18 = sfilter(x15, x17)\n    x19 = lbind(ofcolor, x14)\n    x20 = compose(x19, asobject)\n    x21 = fork(subtract, x20, identity)\n    x22 = compose(first, x21)\n    x23 = fork(mapply, x22, identity)\n    x24 = chain(x19, x23, x14)\n    x25 =594color(x18, NEG_ONE)\n    x26 = lone(x25)\n    x27 = asindices(x18)\n    x28 = matcher(first, NEG_ONE)\n    x29 = rbind(sfilter, x28)\n    x30 = lbind(shift, x27)\n    x31 = chain(x29, x30, x29)\n    x32 = mapply(x31, x73)\n    x33 = replace(x16, NEG_ONE, ZERO)\n    x34 = dmirror(x32)\n    x35 = combine(x33, x34)\n    x36 = flip(x35)\n    x37 = asindices(x16)\n    x38 = toobject(x37, x16)\n    x39 = multiply(x38, UNITY)\n    x40 = rbind"], [1.1, "def solve_f112163f(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_2952bcf0(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = rot90(I)\n    x2 = apply(mostcommon, I)\n    x3 = hmirror(x1)\n    x4 =oe(x3, I)\n    x5 = merge(x4)\n    x6 = palette(x5)\n    x7 =5031982586\n    8713671684\n    3955068690\n    0764217343\n    5380956567\n    \"\"\"\n    x1 = asindices(x1)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = ofcolor(x3, x4)\n    x6 = vmirror(x5)\n    x7 = hmirror(x5)\n    x8 = astuple(x6, x7)\n    x9 = combine(x leftmost, x8)\n    x10 = hmirror(x7)\n    x11 = invert(x10)\n    x12 = increment(x11)\n    x13 = order(x9, x12)\n    x14 = difference(x9, x13)\n    x15 = toobject(x14, x13)\n    x16 = apply(increment, x15)\n    x17 = apply(tojvec, x16)\n    x18 = prapply(shift, x17, x9)\n    x19 = mapply(x18, x14)\n    x20 = ofcolor(x19, x4)\n    x21 = lbind(shift, x19)\n    x22 = mapply(x21, x20)\n    x23 = rightmost(x20)\n    x24 = lbind(shift, x20)\n    x25 = mapply(x24, x23)\n    x26 = ulcorner(x20)\n    x27 = lbind(shift, x27)\n    x28 = mapply(x27, x22)\n    x29 = sfilter(x24, x18)\n    x30 = sizefilter(x29, x28)\n    x31 = lbind(shift, x27)\n    x32 ="], [1.1, "def solve_75434d9a(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_a7ea8a26(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = compose(first, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = compose(last, last)\n    x8 = totuple(x2)\n    x9 = apply(x7, x8)\n    x10 = mostcommon(x9)\n    x11 = compose(first, last)\n    x12 = matcher(x11, x6)\n    x13 = sfilter(x2, x12)\n    x14 = compose(last, last)\n    x15 = matcher(x14, x10)\n    x16 = sfilter(x2, x15)\n    x17 = objects(I, F, T, T)\n    x18 = size(x17)\n    x19 = equality(x18, TWO)\n    x20 = mfilter(x17, hline)\n    x21 = mfilter(x17, vline)\n    x22 = branch(x19, x20, x13)\n    x23 = branch(x19, x21, x16)\n    x24 = width(x22)\n    x25 = lbind(multiply, x24)\n    x26 = width(I)\n    x27 = divide(x26, x24)\n    x28 = increment(x27)\n    x29 = interval(ZERO, x28, ONE)\n    x30 = apply(x25, x29)\n    x31 = apply(invert, x30)\n    x32 = combine(x30, x31)\n    x33 = apply(tojvec, x32)\n    x34 = lbind(shift, x22)\n    x35 = mapply(x34, x33)\n    x36 = height(x23)\n    x37 = lbind(multiply, x36)\n    x38 = height(I)\n    x39 = height(x22)\n    x40 = divide(x38, x39)\n    x41 = increment(x40)\n    x42 = interval"], [1.1, "def solve_bb1b5cc0(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = fork(multiply, height, width)\n    x2 = fgpartition(I)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = argmax(x4, x1)\n    x6 = outbox(x5)\n    x7 = corners(x6)\n    x8 = combine(x7, x5)\n    x9 = fill(I, x3, x8)\n    x10 = asobject(x5)\n    x11 = ofcolor(x10, ZERO)\n    x12 = difference(x10, x11)\n    x13 = rbind(contained, x12)\n    x14 = compose(x13, first)\n    x15 = sfilter(x11, x14)\n    x16 = difference(x11, x15)\n    x17 = compose(x13, first)\n    x18 = fork(multiply, x17, x16)\n    x19 = compose(x18, last)\n    x20 = fork(equality, toindices, x19)\n    x21 = fork(equality, toindices, x20)\n    x22 = fork(either, x20, x21)\n    x23 = rbind(sfilter, x22)\n    x24 = compose(x23, trim)\n    x25 = chain(x20, x22, x24)\n    x26 = compose(x25, asobject)\n    x27 = apply(x26, x15)\n    x28 = last(x27)\n    x29 = remove(x28, x27)\n    x30 = color(x28)\n    x31 = combine(x29, x30)\n    x32 =x23(x31)\n    x33 = asobject(x32)\n    x34 = apply(x33, x31)\n    x35 = prapply(shift, x29, x34)\n    x36 = mapply(x35, x43)\n    x37 = paint(x96, x36)\n    x38 = astuple(x31, x33)\n    x39 = x38(x37)\n    x40 = fill"], [1.1, "def solve_649fb1de(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =618\n    \"\"\"\n    x2 = lbind(subtract,    INE)\n    x3 = chain(even, x2, last)\n    x4 = rbind(branch, ZERO)\n    x5 = rbind(x4, x3)\n    x6 = chain(initset, x5, x4)\n    x7 = fork(rapply, x6, identity)\n    x8 = compose(first, x7)\n    x9 = rbind(branch, ONE)\n    x10 = rbind(x9, x8)\n    x11 = chain(initset, x10, x7)\n    x12 = fork(rapply, x11, identity)\n    x13 = compose(first, x12)\n    x14 = extract(x1, x13)\n    x15 = x14(I)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 =666(x16, x17)\n    x19 = merge(x18)\n    x20 = cover(x16, x19)\n    x21 = flip(x18)\n    x22 = branch(x21, x20, x19)\n    x23 = branch(x1, x22, x20)\n    x24 = multiply(xTEN, DOWN)\n    x25 = ulcorner(x28)\n    x26 = add(x25, x24)\n    x27 = power(x22, x26)\n    x28 = add(x25, x23)\n    x29 = shift(x19, x28)\n    x30 = x27(x29)\n    x31 = palette(x30)\n    x32 = lbind(shift, x30)\n    x33 = apply(x32, x31)\n    x34 = mapply(dneighbors, x33)\n    x35 = mapply(ineighbors, x34)\n    x36 = other(x61, x39)\n    x37 = colorfilter(x36, x39)\n    x38 = rbind(adjacent, xMas)\n    x39 = apply(x38, x37)\n"], [1.1, "def solve_1cea9ef6(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = argmin(x1, size)\n    x5 = shoot(x4, NEG_UNITY)\n    x6 = insert(x4, x5)\n    x7 = recolor(x3, x6)\n    x8 = frontiers(I)\n    x9 = sfilter(x8, vline)\n    x10 = size(x9)\n    x11 = positive(x10)\n    x12 = branch(x11, dmirror, identity)\n    x13 = x12(I)\n    x14 = x12(I)\n    x15 = ofcolor(x13, x3)\n    x16 = subgrid(x15, x13)\n    x17 = ZERO(x16)\n    x18 = shift(x15, x17)\n    x19 = ulcorner(x15)\n    x20 = urcorner(x15)\n    x21 = shoot(x19, NEG_UNITY)\n    x22 = shoot(x20,_LEFT)\n    x23 = combine(x21, x22)\n    x24 = shoot(x19, UP_RIGHT)\n    x25 = shoot(x20, DOWN_LEFT)\n    x26 = combine(x24, x25)\n    x27 = combine(x23, x26)\n    x28 = lbind(contained, x27)\n    x29 = chain(flip, x28, last)\n    x30 = cfilter(x11, x29)\n    x31 = branch(x11, height, width)\n    x32 = x31(I)\n    x33 = even(x32)\n    x34 = branch(x33, vline, hline)\n    x35 = x34(I)\n    x36 = astuple(x34, x35)\n    x37 = shift(x15, x36)\n    x38 = combine(x31, x37)\n    x39 = x30(x38)\n    x40 = shift(x19, x39)\n    x41 = combine("], [1.1, "def solve_aa93e0ce(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = positive(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_bd85689d(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_865d8377(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_9139b776(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_9ad6136f(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_0a25e854(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asobject(x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = astuple(x27, x25)\n    x29 = lbind(subtract, x28)\n    x30 = compose(x29, last)\n    x31 =173(x04)\n    x32 = rbind(ofcolor, ZERO)\n    x33 = fork(add, last, first)\n    x34 = chain(x31, x32, x33)\n    x35 = compose(x34, x30)\n    x36 = objects(x32, x26, F, T)\n    x37 = sfilter(x36, x35)\n    x38 = lbind(recolor, ONE)\n    x39 = compose(x38, outbox)\n    x40 = fork(combine, x34"], [1.1, "def solve_19c30321(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 =173(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = frontiers(x3)\n    x5 = sfilter(x4, hline)\n    x6 = size(x5)\n    x7 = increment(x6)\n    x8 = sfilter(x4, vline)\n    x9 = size(x8)\n    x10 = increment(x9)\n    x11 = height(x3)\n    x12 = decrement(x11)\n    x13 = to frontiers(x12)\n    x14 = sfilter(x13, vline)\n    x15 = size(x14)\n    x16 = increment(x15)\n    x17 = width(x3)\n    x18 = decrement(x17)\n    x19 = tophalf(x3)\n    x20 = increment(x19)\n    x21 = rbind(multiply, x20)\n    x22 = chain(tophalf, x21, initset)\n    x23 = fork(insert, dmirror, x22)\n    x24 = fork(insert, cmirror, x23)\n    x25 = fork(insert, hmirror, x24)\n    x26 = compose(x25, x20)\n    x27 = fork(insert, vmirror, x26)\n    x28 = fork(insert, x17, x27)\n    x29 = compose(x28, x21)\n    x30 = fork(insert, width, x29)\n    x31 = rbind(repeat, x3)\n    x32 = chain(toivec, x30, x31)\n    x33 = fork(shift, x23, x32)\n    x34 = canvas(ZERO, x11)\n    x35 = paint(x34, x3)\n    x36 = merge(x8)\n    x37 = cover(x35, x36)\n    x38 = shift(x36, x37)\n    x39 = paint(x34, x38)\n    x40 = shift(x33, x39)\n    x"], [1.1, "def solve_8698b8b8(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, T, T, F)\n    x6 = colorfilter(x5, x4)\n    x7 = fork(add, leftmost, uppermost)\n    x8 = argmin(x6, x7)\n    x9 = lbind(adjacent, x8)\n    x10 = rbind(add, x8)\n    x11 = totuple(x10)\n    x12 = sfilter(x11, x9)\n    x13 = mapply(neighbors, x12)\n    x14 = difference(x1, x12)\n    x15 = mapply(neighbors, x14)\n    x16 = apply(urcorner, x12)\n    x17 = size(x16)\n    x18 = equality(ONE, x17)\n    x19 = mfilter(x18, identity)\n    x20 = branch(x18, identity, dmirror)\n    x21 = x20(I)\n    x22 = fgpartition(x21)\n    x23 = merge(x22)\n    x24 = ONE(x23)\n    x25 =\u5b50(x24, x22)\n    x26 = width(x25)\n    x27 = lefthalf(x25)\n    x28 = tophalf(x27)\n    x29 = righthalf(x28)\n    x30 = palette(x29)\n    x31 = palette(x of)\n    x32 = combine(x30, x31)\n    x33 = intersection(x32, x22)\n    x34 = first(x33)\n    x35 = last(x33)\n    x36 = ofcolor(x26, x34)\n    x37 = ofcolor(x26, x35)\n    x38 = combine(x36, x37)\n    x39 = fill(x21, x34, x38)\n    x40 = ofcolor(x31, x34)\n    x41 = ofcolor(x31,"], [1.1, "def solve_41066c0d(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_621c090c(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = astuple(NINE, NINE)\n    x3 = canvas(ZERO, x2)\n    x4 = astuple(THREE, ORIGIN)\n    x5 = initset(x4)\n    x6 = insert(x3, x5)\n    x7 = merge(x1)\n    x8 = lbind(colorfilter, x6)\n    x9 = compose(first, x8)\n    x10 = compose(SIX, x9)\n    x11 = fork(paint, identity, x10)\n    x12 = x11(x5)\n    x13 = normalize(x12)\n    x14 = dmirror(x13)\n    x15 = increment(NINE)\n    x16 = insert(x14, x15)\n    x17 = lbind(rapply, x16)\n    x18 = compose(first, x17)\n    x19 = fork(paint, identity, x18)\n    x20 = x19(x5)\n    x21 = palette(x20)\n    x22 = lbind(ofcolor, x20)\n    x23 = compose(size, x22)\n    x24 = palette(x20)\n    x25 = contained(ONE, x24)\n    x26 = contained(TWO, x24)\n    x27 = branch(x25, UNITY, TWO_BY_TWO)\n    x28 = branch(x26, RIGHT, x27)\n    x29 = fork(combine, vfrontier, hfrontier)\n    x30 = x29(x28)\n    x31 = ofcolor(x20, TWO)\n    x32 = gravitate(x31, x30)\n    x33 =8(x32)\n    x34 = colorfilter(x1, TWO)\n    x35 = apply(x29, x34)\n    x36 = rbind(ZERO, x35)\n    x37 = apply(x36, x32)\n    x38 = rbind(bordering, x20)\n    x39 = mfilter(x37, x38)\n    x40 = fill"], [1.1, "def solve_05e521b4(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, ONE)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)"], [1.1, "def solve_a910c30d(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = power(c909, DOWN)\n    x5 = fork(equality, identity, x4)\n    x6 =230(x2)\n    x7 = frontiers(I)\n    x8 = sfilter(x7, x5)\n    x9 = merge(x8)\n    x10 = color(x9)\n    x11 = subgrid(x9, I)\n    x12 = frontiers(x11)\n    x13 = merge(x12)\n    x14 = shift(x13, NEG_UNITY)\n    x15 = ofcolor(x11, x10)\n    x16 = ofcolor(x11, x11)\n    x17 = combine(x15, x16)\n    x18 = mapply(x17, x12)\n    x19 = difference(x18, x15)\n    x20 =49mirror(x15)\n    x21 =49mirror(x15)\n    x22 = ofcolor(x11, x10)\n    x23 = leftmost(x22)\n    x24 = ofcolor(x11, x10)\n    x25 = leftmost(x24)\n    x26 = greater(x23, x25)\n    x27 = uppermost(x22)\n    x28 = equality(x27, x28)\n    x29 = hmatching(x28, x11)\n    x30 = branch(x29, identity, vmirror)\n    x31 = x30(x11)\n    x32 = ofcolor(x31, x10)\n    x33 = first(x32)\n    x34 = last(x31)\n    x35 = x33(x40)\n    x36 = ofcolor(x31, x10)\n    x37 =37(x36)\n    x38 = difference(x37, x31)\n    x39 = fill(x31, x10, x38)\n    x40 = ofcolor(x39, x10)\n    x41 = mapply(dneighbors, x40)\n    x"], [1.1, "def solve_2df6e1be(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = lbind(multiply, x11)\n    x13 = width(I)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = connect(x12, x15)\n    x17 = shape(I)\n    x18 = maximum(x17)\n    x19 = lbind(multiply, x18)\n    x20 = toivec(x18)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = toivec(x22)\n    x24 = connect(x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = decrement(x25)\n    x28 = tojvec(x27)\n    x29 = connect(x26, x28)\n    x30 = height(I)\n    x31 = decrement(x30)\n    x32 = toivec(x31)\n    x33 = connect(x29, x32)\n    x34 = width(I)\n    x35 = decrement(x34)\n    x36 = tojvec(x35)\n    x37 = connect(x33, x36)\n    x38 = height(I)\n    x39 = decrement(x38)\n    x40 = toivec(x39)\n    x41 = connect(x38, x40)\n    x42 = width(I)\n    x43 = decrement(x42)\n    x44 = tojvec(x43)\n    x45 = connect(x42, x44)\n    x46 = height(I)"], [1.1, "def solve_e9c2052f(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, lefthalf, tophalf)\n    x7 = branch(x5, righthalf, bottomhalf)\n    x8 = branch(x5, hconcat, vconcat)\n    x9 = x6(I)\n    x10 = x7(I)\n    x11 = index(x9, ORIGIN)\n    x12 = shape(x10)\n    x13 = decrement(x12)\n    x14 = index(x10, x13)\n    x15 = mostcolor(I)\n    x16 = mostcolor(I)\n    x17 = palette(I)\n    x18 = remove(x11, x17)\n    x19 = remove(x14, x18)\n    x20 = remove(x16, x19)\n    x21 = first(x20)\n    x22 = replace(x9, x21, x11)\n    x23 = branch(x5, asobject, x22)\n    x24 = x23(I)\n    x25 = astuple(x71, x19)\n    x26 = canvas(x25, x25)\n    x27 = paint(x26, x24)\n    x28 = objects(x27, T, F, T)\n    x29 = first(x28)\n    x30 = color(x29)\n    x31 = subgrid(x29, x30)\n    x32 = lefthalf(x61)\n    x33 = righthalf(x31)\n    x34 = shape(x33)\n    x35 = decrement(x34)\n    x36 = hmirror(x33)\n    x37 = vconcat(x36, x33)\n    x38 = objects(x37, T, F, T)\n    x39 = first(x38)\n    x40 = replace(x39, x21, x11)\n    O = hmirror(x"], [1.1, "def solve_4ba694f2(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = height(I)\n    x2 = decrement(x1)\n    x3 = tojvec(x2)\n    x4 = connect(ORIGIN, x3)\n    x5 = height(I)\n    x6 = decrement(x5)\n    x7 = toivec(x6)\n    x8 = connect(ORIGIN, x7)\n    x9 = width(I)\n    x10 = decrement(x9)\n    x11 = tojvec(x10)\n    x12 = shape(I)\n    x13 = decrement(x12)\n    x14 = connect(x11, x13)\n    x15 = height(I)\n    x16 = decrement(x15)\n    x17 = toivec(x16)\n    x18 = shape(I)\n    x19 = decrement(x18)\n    x20 = connect(x17, x19)\n    x21 = asindices(I)\n    x22 = box(x21)\n    x23 = toobject(x22, I)\n    x24 = mostcolor(x23)\n    x25 = matcher(color, x24)\n    x26 = compose(flip, x25)\n    x27 = rbind(sfilter, x26)\n    x28 = rbind(sizefilter, ONE)\n    x29 = rbind(objects, F)\n    x30 = rbind(x29, F)\n    x31 = rbind(x30, T)\n    x32 = rbind(subgrid, I)\n    x33 = chain(x27, x31, x32)\n    x34 = chain(size, x28, x33)\n    x35 = astuple(colors, ONE)\n    x36 = astuple(ONE, x22)\n    x37 = astuple(ONE, x23)\n    x38 = astuple(TWO, x34)\n    x39 = initset(x38)\n    x40 = insert(x36, x39)\n    x41 = insert(x47, x40)\n    x42 = pair(x42, x41)\n    x43 ="], [1.1, "def solve_d06cd310(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = double(TEN)\n    x2 = interval(ZERO, x1, ONE)\n    x3 = connect(ORIGIN, DOWN)\n    x4 = connect(ORIGIN, ZERO_BY_TWO)\n    x5 = combine(x3, x4)\n    x6 = astuple(NEG_TWO, TWO)\n    x7 = lbind(multiply, x6)\n    x8 = toivec(NEG_TWO)\n    x9 = apply(x7, x2)\n    x10 = rbind(subtract, TWO_BY_ZERO)\n    x11 = fork(ofcolor, identity, leastcolor)\n    x12 = chain(x10, center, x11)\n    x13 = rbind(mapply, x9)\n    x14 = lbind(lbind, shift)\n    x15 = lbind(shift, x5)\n    x16 = compose(x15, x12)\n    x17 = chain(x13, x14, x16)\n    x18 = lbind(recolor, FIVE)\n    x19 = compose(x18, x17)\n    x20 = fork(paint, identity, x19)\n    x21 = compose(rot180, x20)\n    x22 = fork(ofcolor, x21, leastcolor)\n    x23 = compose(center, x22)\n    x24 = fork(subtract, x23, x12)\n    x25 = fork(shift, x17, x24)\n    x26 = lbind(recolor, FIVE)\n    x27 = rbind(shift, x8)\n    x28 = chain(x26, x27, x25)\n    x29 = fork(paint, x21, x28)\n    x30 = compose(rot180, x29)\n    x31 = rbind(ofcolor, FIVE)\n    x32 = compose(x31, x30)\n    x33 = leastcolor(I)\n    x34 = ofcolor(I, x33)\n    x35 = mostcolor(I)\n    x36 = shape(I)\n    x37 = canvas(x35, x"], [1.1, "def solve_c4bc107a(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_4899322b(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, toindices)\n    x3 = difference(x1, x2)\n    x4 = size(x3)\n    x5 = positive(x4)\n    x6 = branch(x5, lefthalf, tophalf)\n    x7 = branch(x5, righthalf, bottomhalf)\n    x8 = branch(x5, hconcat, vconcat)\n    x9 = x6(I)\n    x10 = x7(I)\n    x11 = index(x9, ORIGIN)\n    x12 = shape(x10)\n    x13 = decrement(x12)\n    x14 = index(x10, x13)\n    x15 = mostcolor(I)\n    x16 = mostcolor(I)\n    x17 = palette(I)\n    x18 = remove(x11, x17)\n    x19 = remove(x14, x18)\n    x20 = remove(x16, x19)\n    x21 = first(x20)\n    x22 = last(x21)\n    x23 = ofcolor(x9, x22)\n    x24 = leftmost(x23)\n    x25 = ofcolor(x10, x22)\n    x26 = leftmost(x25)\n    x27 = greater(x24, x26)\n    x28 = uppermost(x23)\n    x29 = ofcolor(x10, x22)\n    x30 = uppermost(x29)\n    x31 = greater(x28, x30)\n    x32 = leftmost(x23)\n    x33 = interval(x32, x33, ONE)\n    x34 = matcher(first, x11)\n    x35 = matcher(first, x14)\n    x36 = sfilter(x34, x35)\n    x37 = apply(double, x36)\n    x38 = lbind(apply, maximum)\n    x39 = lbind(ofcolor, I)\n    x40 = compose(x38, x39)\n    x41 = rbind(intersection, x24)\n    x42 ="], [1.1, "def solve_8df6b189(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_018f2c78(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = lbind(remove, x1)\n    x3 = compose(first, x2)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = mapply(x3, x4)\n    x6 =23978259\n    7851115737\n    6519315530\n    9830561239\n    5352852971\n    \"\"\"\n    x1 = palette(I)\n    x2 = compose(last, last)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = totuple(x5)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = switch(I, x7, x8)\n    x10 = rot90(x9)\n    x11 = sfilter(x6, x4)\n    x12 = size(x11)\n    x13 = increment(x12)\n    x14 = divide(x13, x3)\n    x15 = width(I)\n    x16 = interval(ZERO, x15, ONE)\n    x17 = apply(tojvec, x16)\n    x18 = height(I)\n    x19 = lbind(shift, xI)\n    x20 = mapply(x19, x16)\n    x21 = astuple(x17, x20)\n    x22 = canvas(ZERO, x21)\n    x23 = asindices(x22)\n    x24 = shape(I)\n    x25 = canvas(ZERO, x24)\n    x26 = lbind(multiply, x24)\n    x27 = apply(x26, x23)\n    x28 = rbind(multiply, x14)\n    x29 = apply(x28, x27)\n    x30 = matcher(x26, x12)\n    x31 = argmax(x29, x30)\n    x32 = lbind(shift, x23)\n    x33 = mapply(x32, x27)\n    O = fill"], [1.1, "def solve_d1f369f1(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_90d1b867(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_330e00b4(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(sfilter, x3)\n    x6 = chain(x5, x4, color)\n    x7 = compose(maximum, shape)\n    x8 = fork(add, x7, x6)\n    x9 = compose(invert, x8)\n    x10 = order(x2, x9)\n    x11 = rbind(add, DOWN)\n    x12 = compose(x11, ulcorner)\n    x13 = fork(contained, x12, toindices)\n    x14 = rbind(add, RIGHT)\n    x15 = compose(x14, ulcorner)\n    x16 = fork(contained, x15, toindices)\n    x17 = fork(add, x13, x16)\n    x18 = rbind(argmax, x17)\n    x19 = compose(initset, identity)\n    x20 = fork(insert, vmirror, x19)\n    x21 = fork(insert, cmirror, x20)\n    x22 = fork(insert, hmirror, x21)\n    x23 = compose(x18, x22)\n    x24 = apply(x23, x10)\n    x25 = size(x2)\n    x26 = apply(size, x2)\n    x27 = contained(ONE, x26)\n    x28 = increment(x25)\n    x29 = branch(x27, x25, x28)\n    x30 = double(x29)\n    x31 = decrement(x30)\n    x32 = apply(normalize, x24)\n    x33 = interval(ZERO, x29, ONE)\n    x34 = pair(x33, x33)\n    x35 = mpapply(shift, x32, x34)\n    x36 = astuple(x31, x31)\n    x37 = canvas(x1, x36)\n    x38 = paint(x37, x35)\n    x39 ="], [1.1, "def solve_1a561f30(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = toindices(x1)\n    x3 = lbind(contained, ZERO)\n    x4 = compose(x3, hline)\n    x5 = rot(I)\n    x6 = lbind(contained, ZERO)\n    x7 = compose(x6, vline)\n    x8 = rbind(sfilter, x4)\n    x9 = compose(x8, asindices)\n    x10 = power(x9, TWO)\n    x11 = fork(gravitate, toindices, x10)\n    x12 = lbind(contained, ZERO)\n    x13 = compose(x12, leftmost)\n    x14 = lbind(compose, x11)\n    x15 = lbind(rbind, greater)\n    x16 = chain(x15, x14, x13)\n    x17 = fork(greater, x16, x12)\n    x18 = compose(x17, rot90)\n    x19 = fork(greater, x17, x13)\n    x20 = chain(x19, x17, x16)\n    x21 = fork(both, x18, x20)\n    x22 = fork(both, x14, x21)\n    x23 = compose(flip, x22)\n    x24 = sfilter(x1, x23)\n    x25 = fork(compose, x21, x22)\n    x26 = product(x24, x25)\n    x27 = fork(compose, toindices, x25)\n    x28 = fork(rbind, x27, x26)\n    x29 = fork(multiply, x27, x28)\n    x30 = compose(x29, first)\n    x31 = palette(I)\n    x32 = lbind(sfilter, x31)\n    x33 = lbind(compose, x82)\n    x34 = chain(x32, x33, x30)\n    x35 = lbind(ofcolor, I)\n    x36 = compose(x34, x35)\n    x37 =77(x34)\n    x38 = compose"], [1.1, "def solve_f810701d(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, box)\n    x3 = fork(multiply, height, width)\n    x4 = fork(equality, size, x3)\n    x5 = compose(flip, x4)\n    x6 = fork(both, x2, x5)\n    x7 = extract(x1, x6)\n    x8 = inbox(x7)\n    x9 = backdrop(x8)\n    x10 = toobject(x9, I)\n    x11 = remove(x10, x1)\n    x12 = remove(x7, x11)\n    x13 = argmin(x12, size)\n    x14 = combine(x13, x7)\n    x15 = backdrop(x14)\n    x16 = objects(x10, T, F, T)\n    x17 = color(x10)\n    x18 = fill(x17, x16, x15)\n    x19 = subgrid(x18, I)\n    x20 = argmin(x16, width)\n    x21 = ulcorner(x20)\n    x22 = llcorner(x20)\n    x23 = urcorner(x20)\n    x24 = shoot(x21, UNITY)\n    x25 = shoot(x22, DOWN_LEFT)\n    x26 = shoot(x24, UP_RIGHT)\n    x27 = shoot(x25, x22)\n    x28 = combine(x26, x27)\n    x29 = intersection(x28, x22)\n    x30 = fill(x17, x17, x29)\n    x31 = combine(x24, x22)\n    x32 = llcorner(x31)\n    x33 = rbind(subtract, x32)\n    x34 = chain(positive, size, x33)\n    x35 = sfilter(x24, x34)\n    x36 = height(x35)\n    x37 = equality(x36, ONE)\n    x38 = branch(x37, ZERO, x31)\n    O = move(x38, x33, x37)\n    "], [1.1, "def solve_2c2f30fa(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_bc464370(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(I)\n    x9 = fill(I, x8, x7)\n    x10 = sfilter(x7, hline)\n    x11 = size(x10)\n    x12 = increment(x11)\n    x13 = sfilter(x7, vline)\n    x14 = size(x13)\n    x15 = increment(x14)\n    x16 = divide(x12, x15)\n    x17 = asindices(x7)\n    x18 = center(x17)\n    x19 = multiply(x13, x12)\n    x20 = increment(x19)\n    x21 = asindices(I)\n    x22 = center(x21)\n    x23 = width(I)\n    x24 = decrement(x23)\n    x25 = tojvec(x24)\n    x26 = double(x12)\n    x27 = tojvec(x25)\n    x28 = connect(x26, x27)\n    x29 = center(x28)\n    x30 =\n    x29(x7)\n    x31 = asindices(I)\n    x32 = center(x31)\n    x33 = width(I)\n    x34 = halve(x33)\n    x35 = tojvec(x34)\n    x36 = height(I)\n    x37 = halve(x36)\n    x38 = connect(x35, x37)\n    x39 = fill(x19, x38, x32)\n    x40 = fill(x39, x08, x23)\n    x41 = ofcolor(x40, EIGHT)\n    x42 = size(x41)\n    x43 = equality(x42, ONE)\n    x44 = branch(x43, x40, x40)\n    x45 = connect(x42, x44"], [1.1, "def solve_701aa21e(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_1830846c(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = asindices(I)\n    x5 = apply(first, x4)\n    x6 = difference(x5, x3)\n    x7 = ofcolor(I, x1)\n    x8 = rbind(interval, ONE)\n    x9 = lbind(rbind, contained)\n    x10 = lbind(sfilter, x6)\n    x11 = rbind(matcher, ZERO)\n    x12 = chain(size, x10, x9)\n    x13 = lbind(sfilter, x7)\n    x14 = lbind(compose, x12)\n    x15 = chain(x13, x11, x14)\n    x16 = lbind(fork, x8)\n    x17 = compose(increment, minimum)\n    x18 = lbind(lbind, astuple)\n    x19 = lbind(chain, x17)\n    x20 = rbind(x19, first)\n    x21 = chain(x20, x18, first)\n    x22 = lbind(chain, maximum)\n    x23 = rbind(x22, first)\n    x24 = chain(x23, x18, first)\n    x25 = fork(x16, x21, x24)\n    x26 = compose(x15, x25)\n    x27 = apply(toivec, x3)\n    x28 = apply(x26, x27)\n    x29 = argmax(x28, width)\n    x30 = remove(x29, x28)\n    x31 = ulcorner(x29)\n    x32 = invert(x31)\n    x33 = shift(x29, x32)\n    x34 = asindices(I)\n    x35 = center(x34)\n    x36 = invert(x35)\n    x37 = shift(x34, x36)\n    x38 = width(I)\n    x39 = multiply(x38, x37)\n    x40 = tojvec(x39)"], [1.1, "def solve_f603102a(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = equality(x1, FOUR)\n    x3 = fork(equality, height, width)\n    x4 = extract(x2, x3)\n    x5 = other(x1, x4)\n    x6 = color(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = toindices(x11)\n    x13 = vmirror(x12)\n    x14 = hmirror(x12)\n    x15 = shoot(x13, UNITY)\n    x16 = shoot(x14, NEG_UNITY)\n    x17 = fill(I, x11, x15)\n    x18 = fill(x17, x10, x16)\n    x19 = ofcolor(x18, x6)\n    x20 = lowermost(x19)\n    x21 = matcher(first, x10)\n    x22 = compose(flip, x21)\n    x23 = rightmost(x19)\n    x24 = matcher(first, x10)\n    x25 = rightmost(x194)\n    x26 = matcher(first, x24)\n    x27 = leftmost(x194)\n    x28 = matcher(first, x25)\n    x29 = both(x22, x28)\n    x30 = branch(x29, x22, x25)\n    x31 = fill(x18, x11, x30)\n    x32 = ofcolor(x31, x6)\n    x33 = urcorner(x32)\n    x34 = shoot(x33, UP_RIGHT)\n    x35 = shoot(x34, DOWN_LEFT)\n    x36 = underfill(x31, x11, x35)\n    x37 = ofcolor(x36, x6)\n    x38 = compose(flip, x27)\n    x39 = rbind(sfilter, x38)"], [1.1, "def solve_b5325838(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_669b94eb(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x228, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_8980fc85(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = contained(ZERO, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(greater, TWO)\n    x9 = compose(x8, first)\n    x10 = color(x2)\n    x11 =y10000(x10)\n    x12 = insert(x8, x11)\n    x13 = merge(x12)\n    x14 = rot90(x13)\n    x15 = subtract(x4, TWO)\n    x16 = insert(x15, x4)\n    x17 = urcorner(x16)\n    x18 = shoot(x17, UNITY)\n    x19 = rbind(shoot, NEG_UNITY)\n    x20 = rbind(shoot, DOWN_LEFT)\n    x21 = rbind(shoot, UP_RIGHT)\n    x22 = rbind(shoot, DOWN_LEFT)\n    x23 = rbind(shoot, UNITY)\n    x24 = rbind(shoot, x15)\n    x25 = rbind(shoot, x14)\n    x26 = rbind(shoot, x25)\n    x27 = fork(combine, x22, x24)\n    x28 = fork(combine, x26, x27)\n    x29 = fork(combine, x27, x28)\n    x30 = compose(x9, x29)\n    x31 = difference(x1, x8)\n    x32 = extract(x31, x30)\n    x33 = x32(x32)\n    x34 = x6(x33)\n    x35 = height(x34)\n    x36 = width(x34)\n    x37 = interval(ZERO, x35, x36)\n    x38 = pair(x37, x37)\n    x39 = lbind(sfilter, x33)\n    x40 = rbind(compose, last)\n    x"], [1.1, "def solve_0f1a8bdf(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_00368803(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = astuple(x15, x17)\n    x19 = vupscale(x10, x18)\n    x20 = hupscale(x19, x17)\n    x21 = asobject(x20)\n    x22 = lbind(shift, x21)\n    x23 = neighbors(ORIGIN)\n    x24 = mapply(x22, x23)\n    x25 = paint(x5, x24)\n    x26 = objects(x25, T, T, T)\n    x27 = apply(uppermost, x26)\n    x28 = order(x27, identity)\n    x29 = apply(color, x28)\n    x30 = rbind(contained, x22)\n    x31 = compose(x30, palette)\n    x32 = rbind(sfilter, x31)\n    x33 = lbind(shift, x21)\n    x34 = chain(x32, x33, x25)\n    x35 = rbind(apply, x29)\n    x36 = lbind(lbind, shift)\n    x37 = compose(x35, x36)\n    x38 = lbind(rbind, combine)\n    x39 = chain(x35, x38, x37)\n    x40 = fork(sfilter, x34, x39)\n    "], [1.1, "def solve_a210a5a2(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_13ac0f79(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = chain(increment, merge, size)\n    x5 = chain(decrement, decrement, width)\n    x6 = fork(greater, x4, x5)\n    x7 = fork(both, x3, x6)\n    x8 = tojvec(TEN)\n    x9 = crop(I, x8, x7)\n    x10 = numcolors(x9)\n    x11 = equality(x10, TWO)\n    x12 = insert(x8, x11)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = insert(x13, x15)\n    x17 = height(x12)\n    x18 = decrement(x17)\n    x19 = lbind(multiply, x18)\n    x20 = add(x14, x19)\n    x21 = width(x12)\n    x22 = decrement(x21)\n    x23 = lbind(multiply, x22)\n    x24 = add(x14, x23)\n    x25 = repeat(x16, x11)\n    x26 = astuple(x25, x24)\n    x27 = add(x25, x26)\n    x28 = subtract(x24, x18)\n    x29 = astuple(x28, x27)\n    x30 = add(x29, x28)\n    x31 = crement(x30)\n    x32 = height(x12)\n    x33 = decrement(x32)\n    x34 = subtract(x33, x31)\n    x35 = astuple(x34, x31)\n    x36 = add(x35, x31)\n    x37 =repeat(x36, x11)\n    x38 = merge(x37)\n    x39 = cover(I, x38)\n    x40 = tojvec(x3)\n    x"], [1.1, "def solve_f623db8b(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(306, DOWN)\n    x7 = rbind(compose, initset)\n    x8 = lbind(rbind, sfilter)\n    x9 = chain(x6, leftmost, x8)\n    x10 = chain(uppermost, x7, x9)\n    x11 = fork(greater, x9, x10)\n    x12 = compose(x11, x5)\n    x13 = lbind(compose, x12)\n    x14 = lbind(rbind, sfilter)\n    x15 = chain(x13, x14, x11)\n    x16 = chain(uppermost, x7, x15)\n    x17 = fork(greater, x16, x12)\n    x18 = compose(x17, x5)\n    x19 = fork( quotur, x18, identity)\n    x20 = fork(equality, identity, x19)\n    x21 = compose(x20, x15)\n    x22 = rbind(compose, x21)\n    x23 = lbind(rbind, sfilter)\n    x24 = chain(x22, x23, x15)\n    x25 = chain(uppermost, x7, x15)\n    x26 = lbind(greater, x26)\n    x27 = compose(x26, x45)\n    x28 = chain(toivec, x27, x25)\n    x29 = lbind(lbind, shift)\n    x30 = compose(x29, x27)\n    x31 = fork(compose, x28, x30)\n    x32 = compose(cmirror, x31)\n    x33 = fork(mapply, x32, x17)\n    x34 = multiply(SIX, THREE)\n    x35 = astuple(x34, x34)\n    x36 = x35(I)\n    x37"], [1.1, "def solve_f62bf43a(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = apply(x12, x9)\n    x14 = dedupe(x13)\n    x15 = size(x14)\n    x16 = decrement(x15)\n    x17 = add(x16, x16)\n    x18 = compose(x11, x14)\n    x19 = x8(x18)\n    x20 = branch(x7, x19, height)\n    x21 = subtract(x17, x20)\n    x22 = decrement(x21)\n    x23 = add(x22, x20)\n    x24 = canvas(ZERO, x1)\n    x25 = asindices(x24)\n    x26 = box(x25)\n    x27 = mostcolor(I)\n    x28 = recolor(x27, x26)\n    x29 = double(x28)\n    x30 = interval(ZERO, x29, ONE)\n    x31 = asobject(x30)\n    x32 = shape(x31)\n    x33 = shift(x31, x32)\n    x34 = paint(x24, x33)\n    x35 = astuple(x shift, x34)\n    x36 = interval(ZERO, x25, ONE)\n    x37 = product(x36, x36)\n    x38 = rbind(multiply, x31)\n    x39 = apply(x38, x37)\n    x40 = lbind(shift, x33)\n    x41 = mapply(x40, x39)\n    O ="], [1.1, "def solve_86180c1a(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_ea229701(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = shape(I)\n    x2 = add(x1, DOWN)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = lbind(multiply, x4)\n    x6 = width(I)\n    x7 = subtract(x6, x3)\n    x8 = astuple(x7, x5)\n    x9 = connect(x3, x8)\n    x10 = recolor(ZERO, x9)\n    x11 = compose(first, last)\n    x12 = rbind(remove, x11)\n    x13 = compose(x12, first)\n    x14 = astuple(x10, x13)\n    x15 = mostcolor(I)\n    x16 = canvas(x15, x14)\n    x17 = paint(x16, x12)\n    x18 = size(x1)\n    x19 = interval(ZERO, x18, ONE)\n    x20 = pair(x19, x19)\n    x21 = width(I)\n    x22 = astuple(x21, x5)\n    x23 = repeat(ZERO, x22)\n    x24 = combine(x23, x20)\n    x25 = branch(x18, x24, ONE)\n    x26 = multiply(x25, x5)\n    x27 = invert(x26)\n    x28 = interval(ZERO, x27, ONE)\n    x29 = product(x28, x28)\n    x30 = order(x29, last)\n    x31 = apply(compose, x470)\n    x32 = lbind(extract, x31)\n    x33 = lbind(matcher, first)\n    x34 = compose(x33, first)\n    x35 = chain(last, x32, x34)\n    x36 = compose(last, last)\n    x37 = lbind(recolor, FIVE)\n    x38 = lbind(mapply, last)\n    x39 = compose(x38, x35)\n    x40 = fork(combine, x36, x39)\n    x41 = compose"], [1.1, "def solve_fc2d1034(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    x5 = palette(x4)\n    x6 = intersection(x5, x2)\n    x7 = colorfilter(x3, x5)\n    x8 = argmax(x7, size)\n    x9 = remove(x8, x7)\n    x10 = lbind(chain, positive)\n    x11 = lbind(x10, size)\n    x12 = lbind(lbind, shift)\n    x13 = lbind(lbind, intersection)\n    x14 = compose(x11, x12)\n    x15 = compose(x13, x13)\n    x16 = fork( x199, x14, x15)\n    x17 = fork(mapply, x16, x17)\n    x18 = astuple(SIX, x18)\n    x19 = x15(I)\n    x20 = cover(x19, x8)\n    x21 = dropping(x20, UNITY)\n    x22 = dmirror(x21)\n    x23 = papply(pair, x21, x22)\n    x24 = lbind(apply, maximum)\n    x25 = apply(x24, x23)\n    x26 = cmirror(x25)\n    x27 = papply(pair, x25, x26)\n    x28 = apply(x25, x27)\n    x29 =mirror(x28)\n    x30 = papply(pair, x28, x29)\n    x31 = apply(x24, x30)\n    x32 = llcorner(x28)\n    x33 = palette(x29)\n    x34 = lbind(ofcolor, x22)\n    x35 = compose(x34, x31)\n    x36 =726200(x35)\n    x37 =4438(x31, x36)\n    x38 = fork(recolor, x35, x37)\n    x39 = mapply(x38, x31)\n    O = paint("], [1.1, "def solve_81157fed(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_5221339b(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(compose, x8)\n    x13 = compose(x11, x12)\n    x14 = lbind(sfilter, x3)\n    x15 = chain(size, x14, x13)\n    x16 = itemmax(x3, x15)\n    x17 = objects(x7, T, F, T)\n    x18 = merge(x17)\n    x19 = palette(x18)\n    x20 = colorfilter(x17, x19)\n    x21 = chain(positive, size, x17)\n    x22 = rbind(shoot, UNITY)\n    x23 = rbind(shoot, NEG_UNITY)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = rbind(shoot, UP_RIGHT)\n    x26 = lbind(lbind, greater)\n    x27 = chain(x22, x24, x25)\n    x28 = rbind(shoot, UP_RIGHT)\n    x29 = rightmost(x16)\n    x30 = lbind(rbind, greater)\n    x31 = chain(x28, x30, x29)\n    x32 = lbind(recolor, x509)\n    x33 = rbind(shoot, x31)\n    x34 = rbind(shoot, x32)\n    x35 =fork(combine, x33, x34)\n    x36 = compose(x35, x27)\n    x37 = fork(paint, identity, x36)\n    x38 = rbind(shoot, x"], [1.1, "def solve_27a6a068(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_d74d08da(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(identity, dmirror)\n    x5 = astuple(cmirror, hmirror)\n    x6 = combine(x4, x5)\n    x7 = rbind(rapply, I)\n    x8 = compose(first, x7)\n    x9 = chain(x3, x8, initset)\n    x10 = extract(x6, x9)\n    x11 = x10(I)\n    x12 = mostcolor(I)\n    x13 = palette(I)\n    x14 = remove(x12, x13)\n    x15 = other(x14, TWO)\n    x16 = ofcolor(x11, x15)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, identity, vmirror)\n    x20 = x19(x11)\n    x21 = ofcolor(x20, x15)\n    x22 = ofcolor(x20, TWO)\n    x23 = apply(last, x22)\n    x24 = insert(ZERO, x23)\n    x25 = width(x20)\n    x26 = insert(x25, x24)\n    x27 = order(x26, identity)\n    x28 = last(x27)\n    x29 = remove(x28, x27)\n    x30 = first(x27)\n    x31 = remove(x30, x27)\n    x32 = pair(x29, x31)\n    x33 = size(x29)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = pair(x34, x32)\n    x36 = lbind(fork, connect)\n    x37 = compose(first, last)\n    x38 = chain(decrement, last, last)\n    x39 = lbind(lbind, add)\n    x40 = compose(x39, first)\n    x41 = lbind("], [1.1, "def solve_96fa9643(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = compose(leftmost, first)\n    x13 = compose(leftmost, last)\n    x14 = fork(equality, x12, x13)\n    x15 = compose(uppermost, first)\n    x16 = compose(uppermost, last)\n    x17 = fork(equality, x15, x16)\n    x18 = fork(either, x14, x17)\n    x19 = sfilter(x11, x18)\n    x20 = compose(color, first)\n    x21 = compose(center, first)\n    x22 = compose(center, last)\n    x23 = fork(connect, x21, x22)\n    x24 = fork(recolor, x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = matcher(last, ZERO)\n    x28 = decrement(x26)\n    x29 = matcher(last, x28)\n    x30 = fork(either, x27, x29)\n    x31 = matcher(first, ZERO)\n    x32 = decrement(x25)\n    x33 = matcher(first, x32)\n    x34 = fork(either, x31, x33)\n    x35 = toindices(x5)\n    x36 = sfilter(x35, x30)\n    x37 = equality(x35, x36)\n    x38 = mapply(x24, x19)\n    x39 = paint(I, x38)\n    x40 = branch(x37, x30, x34)\n    "], [1.1, "def solve_862378c3(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =238\n    729 relatively623\n    2990529281\n    3446ly2453\n    1437048410\n    \"\"\"\n    x2 = height(I)\n    x3 = halve(x2)\n    x4 = increment(x3)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = astuple(x4, x6)\n    x11 = canvas(x9, x10)\n    x12 =, toindices(x11)\n    x13 = normalize(x12)\n    x14 = toindices(x13)\n    x15 = remove(x9, x14)\n    x16 = lbind(intersection, x12)\n    x17 = chain(size, x16, toindices)\n    x18 = argmax(x15, x17)\n    x19 = ulcorner(x18)\n    x20 = matcher(first, x9)\n    x21 = sfilter(x18, x20)\n    x22 = lbind(shift, x12)\n    x23 = height(x12)\n    x24 = divide(x23, FOUR)\n    x25 = increment(x24)\n    x26 = width(x12)\n    x27 = divide(x25, FOUR)\n    x28 = increment(x27)\n    x29 = divide(x28, FOUR)\n    x30 =ensAgainst(x21, x13)\n    x31 = paddingapply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(tojvec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = lbind(fork, both)\n    x37 = lbind(index, I)\n    x38 = lbind(compose, x37)\n    x39 = lbind(lbind, shift)\n    x40 = compose(x38, x39)\n"], [1.1, "def solve_98d6c048(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_c03aebbc(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = asobject(I)\n    x2 = dmirror(I)\n    x3 = mostcolor(I)\n    x4 = matcher(first, x3)\n    x5 = compose(flip, x4)\n    x6 = sfilter(x1, x5)\n    x7 =227(x6)\n    x8 = mostcolor(I)\n    x9 = lbind(occurrences, I)\n    x10 = matcher(x9, x8)\n    x11 = compose(flip, x10)\n    x12 = fork(both, x3, x11)\n    x13 = sfilter(x6, x12)\n    x14 = combine(x7, x13)\n    x15 = increment(x14)\n    x16 = order(x1, last)\n    x17 = apply(first, x16)\n    x18 = last(x16)\n    x19 = decrement(x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = hsplit(I, x21)\n    x23 = astuple(ONE, THREE)\n    x24 = astuple(TWO, FOUR)\n    x25 = initset(x24)\n    x26 = insert(ORIGIN, x25)\n    x27 = insert(x20, x26)\n    x28 = insert(x25, x27)\n    x29 = insert(x28, x267)\n    x30 = ofcolor(x22, x4)\n    x31 = ofcolor(x22, TWO)\n    x32 = asindices(x22)\n    x33 = initset(x32)\n    x34 = insert(x27, x33)\n    x35 = lbind(hfrontier, x34)\n    x36 = compose(x35, center)\n    x37 = fork(recolor, color, x36)\n    x38 = mapply(x37, x30)\n    x39 = merge(x38)\n    x40 = recolor(x4, x39)\n    O = paint(x22, x40)"], [1.1, "def solve_f1bb13b7(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_aed2df05(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_104508f4(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x17, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = s5000(x28, x24)\n    x30 =388(x29, x16)\n    x31 = rbind(greater, x15)\n    x32 = compose(x31, last)\n    x33 =88(x32)\n    x34 = vmirror(x30)\n    x35 = x32(x34)\n    x36 = width(x16)\n    x37 = crop(x35, ORIGIN, x36)\n    x38 = chain(positive, decrement, size)\n    x39 = rbind(toobject, x38)\n    x40 = rbind(colorcount, x7)\n    x41 = chain(x39, x40"], [1.1, "def solve_44ad6801(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_308d5604(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(positive, size)\n    x3 = lbind(intersection, x2)\n    x4 = chain(x2, x1, x3)\n    x5 = compose(positive, size)\n    x6 = fork(either, x4, x5)\n    x7 = fork(both, x2, x6)\n    x8 = rbind(shoot, UNITY)\n    x9 = rbind(shoot, NEG_UNITY)\n    x10 = fork(combine, x8, x9)\n    x11 = rbind(shoot, UP_RIGHT)\n    x12 = rbind(shoot, DOWN_LEFT)\n    x13 = fork(combine, x11, x12)\n    x14 = fork(combine, x10, x13)\n    x15 = ofcolor(I, ONE)\n    x16 = intersection(x15, x15)\n    x17 = lbind(apply, color)\n    x18 = chain(x17, x16, x9)\n    x19 = lbind(lbind, intersection)\n    x20 = chain(x19, x18, x9)\n    x21 = compose(x2, x20)\n    x22 = fork(pair, x21, identity)\n    x23 = sfilter(x16, x22)\n    x24 = argmax(x23, size)\n    x25 = matcher(first, ONE)\n    x26 = compose(flip, x25)\n    x27 = sfilter(x24, x26)\n    x28 = lbind(colorcount, I)\n    x29 = argmin(x27, x28)\n    x30 = ofcolor(I, x22)\n    x31 = leftmost(x30)\n    x32 = width(I)\n    x33 = interval(x31, x32, ONE)\n    x34 = rightmost(x30)\n    x35 = decrement(x34)\n    x36 = lbind(multiply, x35)\n    x37 = apply(x36, x33)\n    x38 = mapply(vfrontier,"], [1.1, "def solve_960f2cc4(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, identity, dmirror)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = apply(first, x22)\n    x24 = lbind(sfilter, x21)\n    x25 = compose(first, last)\n    x26 = lbind(matcher, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x27, x23)\n    x29 = lbind(shift, x15)\n    x30 = chain(x29, toivec, uppermost)\n    x31 = matcher(first, x18)\n    x32 = rbind(sfilter, x31)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(toindices, x32, x30)\n    x36 = chain(x33, x34, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = compose(color, x37)\n    x39 = compose(x32, x30)\n    x40 = fork(recolor, x38, x39)\n    x41 = fork(other, palette,"], [1.1, "def solve_fc637d33(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    x5 = palette(x4)\n    x6 = intersection(x5, x2)\n    x7 = lbind(colorcount, x4)\n    x8 = argmax(x6, x7)\n    x9 = leastcolor(x8)\n    x10 = matcher(first, x8)\n    x11 =004(x2, x10)\n    x12 = argmin(x11, x9)\n    x13 = merge(x11)\n    x14 = cover(x13, x12)\n    x15 = matcher(first, x9)\n    x16 = compose(flip, x15)\n    x17 = rbind(sfilter, x16)\n    x18 = mostcolor(I)\n    x19 = lbind(colorcount, x4)\n    x20 = chain(flip, x18, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(dmirror, x21)\n    x23 = x22(x41)\n    x24 = dmirror(x23)\n    x25 = chain(x19, x34, x24)\n    x26 = lbind(rapply, x29)\n    x27 = compose(x26, first)\n    x28 = chain(first, x24, x27)\n    x29 = rbind(ofcolor, x18)\n    x30 = fork(recolor, x18, x28)\n    x31 = compose(x29, x30)\n    x32 = fork(paint, identity, x31)\n    x33 = rbind(add, DOWN)\n    x34 = chain(positive, size, x33)\n    x35 = rbind(mfilter, x34)\n    x36 = compose(x35, x32)\n    x37 = sfilter(x2, x36)\n    x38 = lbind(paint, x5)\n    x39 = chain(x38, asobject, x"], [1.1, "def solve_52b9f265(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_b3813f22(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = replace(I, FOUR, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = replace(x2, FOUR, ZERO)\n    x4 =7513(x3)\n    x5 = ulcorner(x4)\n    x6 = subgrid(x4, x5)\n    x7 = replace(x6, ONE, ZERO)\n    O = replace(x7, DOWN, ZERO)\n    return O"], [1.1, "def solve_84e52fe0(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 =73mirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [1.1, "def solve_102a4ec9(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices ofI)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [1.1, "def solve_c6840d89(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =180007fOUR)\n    x2 = subgrid(x1, I)\n    x3 = mostcolor(x2)\n    x4 = replace(x2, x3, ZERO)\n    x5 = leastcolor(x4)\n    x6 = ofcolor(x2, x5)\n    x7 = recolor(x3, x6)\n    O = replace(x4, x5, x7)\n    return O"], [1.1, "def solve_e594a22c(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = switch(I, THREE, FOUR)\n    x2 =1115(x1)\n    x3 = argmin(x2, lrcorner)\n    x4 = urcorner(x3)\n    x5 = shoot(x4, NEG_UNITY)\n    x6 = shoot(x4, UP_RIGHT)\n    x7 = combine(x5, x6)\n    x8 = llcorner(x3)\n    x9 = compose(x8, invert)\n    x10 = power(x9, TWO)\n    x11 = initset(x2)\n    x12 = insert(x3, x11)\n    x13 = insert(x10, x12)\n    x14 = toobject(x13, I)\n    x15 = mapply(x9, x14)\n    x16 = height(I)\n    x17 = width(I)\n    x18 = divide(x16, x17)\n    x19 =389(x18)\n    x20 = toindices(x3)\n    x21 = chain(ZERO, x20, x11)\n    x22 = lbind(contained, ZERO)\n    x23 = compose(x22, outbox)\n    x24 = fork(add, identity, x23)\n    x25 = compose(invert, x24)\n    x26 = order(x21, x25)\n    x27 = fork(insert, identity, x66)\n    x28 = fork(insert, identity, x25)\n    x29 = fork(insert, identity, x28)\n    x30 = fork(insert, identity, x29)\n    x31 = switch(I, THREE, FOUR)\n    x32 = x31(x26)\n    x33 = invert(x32)\n    x34 = shift(x31, x33)\n    x35 = shift(x34, LEFT)\n    x36 = paint(x39, x35)\n    O = x30(x36)\n    return O"], [1.1, "def solve_a01d8e1a(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = last(x2)\n    x5 =446(447, x4)\n    x6 = recolor(x1, x5)\n    O = underfill(I, x1, x6)\n    return O"], [1.1, "def solve_7ed869d4(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = fork(insert, identity, identity)\n    x6 = compose(insert, x5)\n    x7 = fork(insert, cmirror, x6)\n    x8 = fork(insert, dmirror, x7)\n    x9 = fork(insert,cmirror, x8)\n    x10 = fork(insert, hmirror, x9)\n    x11 = mapply(x10, x4)\n    x12 = merge(x1)\n    x13 = vsplit(x61, x12)\n    x14 = mapply(x11, x13)\n    x15 = output:\n    1111114841\n    1111145851\n    1472584620\n    1642734888\n    8154415238\n    \"\"\"\n    x1 = argmax(x14, size)\n    x2 = subgrid(x1, I)\n    O = trim(x2)\n    return O"], [1.1, "def solve_b8c1863d(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = apply(normalize, x2)\n    x4 = astuple(NINE, NINE)\n    x5 = canvas(F25fbde4(x4)\n    x6 = asindices(x5)\n    x7 = box(x6)\n    x8 = center(x6)\n    x9 = lbind(contained, ZERO)\n    x10 = rbind(subtract, x8)\n    x11 = compose(x9, x10)\n    x12 = chain(outbox, outbox, initset)\n    x13 = corners(x6)\n    x14 = mapply(x12, x13)\n    x15 = difference(x7, x14)\n    x16 = inbox(x7)\n    x17 = sfilter(x16, x11)\n    x18 = difference(x16, x17)\n    x19 = fill(x5, ONE, x15)\n    x20 = fill(x19, TWO, x18)\n    x21 = ofcolor(x20, ZERO)\n    O = fill(x20, FOUR, x21)\n    return O"], [1.1, "def solve_ea07c672(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = first(x3)\n    x5 = rbind(colorcount, ZERO)\n    x6 = rbind(toobject, I)\n    x7 = compose(x5, x6)\n    x8 = chain(x7, x4, dneighbors)\n    x9 = matcher(x8,4200x4)\n    x10 = sfilter(x2, x9)\n    x11 = difference(x2, x10)\n    x12 = papply(recolor, x11, x10)\n    x13 = mapply(x5, x12)\n    x14 = paint(I, x13)\n    x15 = subgrid(x4, x14)\n    O = trim(x15)\n    return O"], [1.1, "def solve_215f5bb4(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 =424(I)\n    x2 = rbind(multiply, THREE)\n    x3 = rbind(divide, THREE)\n    x4 = compose(x2, x3)\n    x5 = fork(equality, identity, x4)\n    x6 = compose(x5, last)\n    x7 = sfilter(x1, x6)\n    x8 = rbind(multiply, THREE)\n    x9 = rbind(divide, THREE)\n    x10 = compose(x8, x9)\n    x11 = fork(equality, identity, x10)\n    x12 = compose(x11, last)\n    x13 = extract(x7, x12)\n    x14 = extract(xr, x13)\n    x15 = ulcorner(x14)\n    x16 = subgrid(x14, I)\n    x17 = replace(x16, ZERO, x14)\n    x18 = asobject(x17)\n    x19 = shift(x18, x15)\n    O = paint(I, x19)\n    return O"], [1.1, "def solve_d7bc4b60(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = trim(I)\n    x2 = repeat(x1, ONE)\n    x3 = numcolors(x2)\n    x4 = equality(x3, THREE)\n    x5 = height(x1)\n    x6 = width(x1)\n    x7 = astuple(x5, x6)\n    x8 = add(d406, TWO)\n    x9 = compose(outbox, x8)\n    x10 =\n    x11 = apply(x9, x7)\n    x12 = initset(x5)\n    x13 =71(x6)\n    x14 = insert(x12, x13)\n    x15 = toobject(x14, x1)\n    x16 = toindices(x15)\n    x17 = lbind(intersection, x16)\n    x18 = lbind(shift, x15)\n    x19 = compose(x17, x18)\n    x20 = toindices(x15)\n    x21 = lbind(intersection, x20)\n    x22 = chain(x19, size, x21)\n    x23 = fork(shift, x19, x22)\n    x24 = compose(x5, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = rot180(x24)\n    x28 = apply(x26, x27)\n    x29 = apply(x25, x28)\n    x30 = fork(combine, x28, x29)\n    x31 = x30(x15)\n    x32 = decrement(x31)\n    x33 = lbind(astuple, x32)\n    x34 = lbind(shift, x15)\n    x35 = compose(x33, x34)\n    x36 = apply(x35, x29)\n    O = x30(x36)\n    return O"], [1.1, "def solve_837e299d(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 =173(I)\n    x2 =29c(I)\n    x3 = fgpartition(x2)\n    x4 = merge(x3)\n    x5 = rbind(shoot, DOWN)\n    x6 = compose(x5, last)\n    x7 = fork(recolor, first, x6)\n    x8 = mapply(x7, x4)\n    O = paint(x1, x8)\n    return O"], [1.1, "def solve_f79d2d32(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(replace, x2)\n    x4 = compose(color, x3)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(SIX, SIX)\n    x9 = astuple(EIGHT, x8)\n    x10 = connect(ORIGIN, x9)\n    x11 = initset(UNITY)\n    x12 = recolor(ZERO, x11)\n    x13 = sfilter(x10, x12)\n    x14 = upscale(x13, TWO)\n    x15 = branch(x14, ORIGIN, RIGHT)\n    x16 = mapply(x5, x13)\n    x17 = apply(double, x16)\n    x18 = insert(x16, x17)\n    x19 = width(x15)\n    x20 = insert(x19, x18)\n    x21 = ulcorner(x15)\n    x22 = ulcorner(x18)\n    x23 = subtract(x21, x22)\n    x24 = add(x23, x20)\n    x25 = crop(x15, x27, x24)\n    x26 = hupscale(x25, x20)\n    x27 = compose(last, last)\n    x28 =9259(ZERO, x27)\n    x29 = h59(x28)\n    x30 = insert(x27, x28)\n    x31 = crop(x30, x29, x20)\n    x32 = vupscale(x31, x20)\n    O = other(x23, x32)\n    return O"], [1.1, "def solve_e16148b2(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =7313636344\n    6973281190\n    3424891948\n    9458092097\n    0962975318\n    6899378059\n    6567395500\n    0069332464\n    37149656707\n    \"\"\"\n    x2 = solve_e9af63ed(I):\n    O = hmirror(I)\n    return O"], [1.1, "def solve_189dd23b(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(9172mirror)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, EIGHT, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [1.1, "def solve_7c870502(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, height, width)\n    x8 = argmin(x7, size)\n    x9 = palette(x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 =37(x311)\n    x13 = colorcount(I, x11)\n    x14 = colorfilter(x1, x12)\n    x15 = argmax(x14, size)\n    x16 = remove(x15, x14)\n    x17 = apply(first, x16)\n    x18 = rbind(sfilter, x15)\n    x19 = chain(merge, x18, last)\n    x20 = x19(x17)\n    x21 = ofcolor(x20, x11)\n    x22 = subgrid(x21, I)\n    x23 = toobject(x22, x20)\n    x24 = delta(x23)\n    x25 = mapply(x19, x24)\n    x26 =06(x25)\n    x27 = paint(x20, x26)\n    x28 = matcher(first, x11)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(first, center, x29)\n    x31 = subgrid(x25, x22)\n    x32 =663(x31, x30)\n    x33 = lbind(shift, x28)\n    x34 = mapply(x33, x32)\n    O = paint(x37, x34)\n    return O"], [1.1, "def solve_42ac3a77(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 =171(I)\n    x25 = mapply(x23, x24)\n    x26 = paint(I, x25)\n    x27 = width(x7)\n    x28 = subtract(x37, x27)\n    x29 =88 divide(x28, x172)\n    x30 = tojvec(x29)\n    x31 = shift(x22, x30)\n    x32 =71(x31)\n    x33 = invert(x32)\n    x34 = shift(x28, x33)\n    x35 = branch(x20, x24, x28)\n    x36 = double(x19)\n    x37 = add(x39, x36)\n    x38 = frontiers(x35)\n    x39 = merge(x38)\n    x40 = shift(x34, x39)\n    O = paint(x26, x40)\n    return O"], [1.1, "def solve_6a6559c8(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = matcher(first, x3)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = size(x7)\n    x9 = positive(x8)\n    x10 = branch(x9, hmirror, vmirror)\n    x11 = ofcolor(I, x3)\n    x12 = leftmost(x11)\n    x13 = leftmost(x12)\n    x14 = greater(x13, x12)\n    x15 = uppermost(x11)\n    x16 = leftmost(x15)\n    x17 = branch(x14, add, x16)\n    x18 = ofcolor(I, x3)\n    x19 = ofcolor(I, x3)\n    x20 = leftmost(x19)\n    x21 = leftmost(x20)\n    x22 = greater(x21, x02)\n    x23 = uppermost(x11)\n    x24 = uppermost(x11)\n    x25 = astuple(x23, x24)\n    x26 = add(TWO, x25)\n    x27 = branch(x22, UP, x26)\n    x28 = asindices(I)\n    x29 = x27(x28)\n    x30 = shape(I)\n    x31 = canvas(x3, x30)\n    x32 = lbind(3305, manhattan)\n    x33 =5330(I)\n    x34 = mapply(x32, x33)\n    O = fill(x39, x3, x34)\n    return O"], [1.1, "def solve_389926ea(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =1998(I)\n    x2 = mostcolor(I)\n    x3 =279(x1)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = mapply( shoot, x4)\n    x6 = recolor(2, x5)\n    O = matcher(first, x2)\n    return O"], [1.1, "def solve_46334900(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = rot180(I)\n    x2 = rbind(greater, ONE)\n    x3 = chain(x2, minimum, shape)\n    x4 = branch(x3, x1, x1)\n    x5 =775(x4)\n    x6 = crop(x5, ORIGIN, x5)\n    x7 =91190696(x6)\n    x8 = fork(recolor, color, x7)\n    x9 = mapply(x8, x6)\n    O = paint(x5, x9)\n    return O"], [1.1, "def solve_f15aa06f(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =655532277(I):\n    x2 =261755965\n    x3 =8604225,3397702380\n    x4 = solve(I, x1)\n    x5 = fork(combine, vfrontier, hfrontier)\n    x6 = compose(x5, x4)\n    x7 = mapply(x6, x4)\n    O = underfill(x7, ZERO, x3)\n    return O"], [1.1, "def solve_4cc6c304(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = rot90(I)\n    x2 = rotcompose(I, x1)\n    x3 = rot77(I)\n    x4 =ilt(x3, x2)\n    x5 =379(x4)\n    x6 = apply(x2, x4)\n    x7 = cmirror(x6)\n    x8 = papply(shift, x7, x5)\n    O = paint(x1, x8)\n    return O"], [1.1, "def solve_eaf44018(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =d0694d9fac9df40)\n    x2 = tophalf(x1)\n    x3 = numcolors(x2)\n    x4 = bottomhalf(x1)\n    x5 = numcolors(x4)\n    x6 = bottomhalf(x1)\n    x7 = numcolors(x6)\n    x8 = intersection(x3, x4)\n    x9 = fill(I, EIGHT, x8)\n    x10 = fill(x9, FOUR, x7)\n    O = fill(x10, SEVEN, x8)\n    return O"], [1.1, "def solve_94e66f20(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(709, x2)\n    x4 = lbind(toobject, I)\n    x5 = compose(x4, x3)\n    x6 = palette(I)\n    x7 = UNITY(x6)\n    x8 =8731336x7)\n    x9 = matcher(first, x8)\n    x10 = sfilter(x6, x9)\n    x11 = rbind(colorcount, x8)\n    x12 = argmax(x10, x11)\n    x13 = leastcolor(I)\n    x14 = remove(x12, x10)\n    x15 = argmax(x14, x13)\n    x16 = merge(x12)\n    x17 = fill(I, x13, x16)\n    x18 =argmin(x14, x13)\n    x19 = ulcorner(x18)\n    x20 = increment(x19)\n    x21 = rbind(subtract, x20)\n    x22 = chain(toivec, x21, invert)\n    x23 = fork( shift, identity, x22)\n    x24 = mapply(x23, x11)\n    O = paint(x17, x24)\n    return O"], [1.1, "def solve_eb781931(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    O = fork(combine, dneighbors, identity)\n    x1 = x2(I)\n    x2 = decrement(x1)\n    x3 = tojvec(x2)\n    x4 = rbind(shoot, x3)\n    x5 =17(x2)\n    x6 = equality(x1, x5)\n    x7 = branch(x6, identity, crement)\n    x8 = x7(x2)\n    x9 = double(x8)\n    x10 = tojvec(x9)\n    x11 = mostcolor(I)\n    x12 = shape(I)\n    x13 = canvas(x11, x12)\n    x14 = hconcat(x9, x13)\n    x15 = objects(x14, F, F, T)\n    x16 = argmax(x15, numcolors)\n    x17 = canvas(x6, x16)\n    x18 = normalize(x16)\n    x19 = remove(x16, x1)\n    x20 = toindices(x18)\n    x21 = lbind(intersection, x19)\n    x22 = chain(x21, toindices, x18)\n    x23 = chain(size, x17, x22)\n    x24 =19(x2)\n    x25 = objects(x14, T, F, T)\n    x26 = intersection(x24, x25)\n    x27 = argmax(x26, x23)\n    x28 = x27(x222)\n    O = fill(x17, x color, x28)\n    return O"], [1.1, "def solve_f7818187(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 =885(x10)\n    x12 = vmirror(I)\n    x13 = lbind(shift, x12)\n    x14 = compose(x13, tojvec)\n    x15 = rbind(canvas, UNITY)\n    x16 = apply(x15, x11)\n    x17 = rbind(argmax, numcolors)\n    x18 = apply(x17, x16)\n    x19 = merge(x18)\n    x20 = size(x19)\n    x21 = increment(x40)\n    x22 = rbind(006, x21)\n    x23 = argmin(x20, x22)\n    x24 = repeat(x23, ONE)\n    x25 = asobject(I)\n    x26 = chain(x37, merge, x25)\n    x27 = width(x26)\n    x28 = astuple(x27, x24)\n    x29 = canvas(ZERO, x28)\n    x30 = asobject(x29)\n    x31 = matcher(first, x9)\n    x32 = compose(flip, x31)\n    x33 = sfilter(x30, x32)\n    x34 = shape(I)\n    x35 = double(x34)\n    x36 = divide(x35, x33)\n    x37 = increment(x36)\n    x38 = canvas(ZERO, x37)\n    x39 = paint(x38, x34)\n    O = x14(x39)\n    return O"], [1.1, "def solve_1f08f7ca(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = rbind(O = replace(I, EIGHT, TWO)\n    x3 = compose(x2, vmirror)\n    x4 =,filter(x1, x3)\n    x5 = merge(x4)\n    O = paint(I, x5)\n    return O"], [1.1, "def solve_4e53814b(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 =0470220111, ONE)\n    x4 = rbind(subgrid, I)\n    x5 = apply(x4, x2)\n    x6 = rbind(colorcount, ZERO)\n    x7 = matcher(x6, EIGHT)\n    x8 =filter(x5, x7)\n    x9 = merge(x8)\n    O = cover(I, x9)\n    return O"], [1.1, "def solve_16586c49(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 =1998(I)\n    x2 = compose(delta, outbox)\n    x3 = mapply(x2, x1)\n    O = fill(x3, EIGHT, x3)\n    return O"], [1.1, "def solve_534ff426(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = Tb548a(I):\n    x2 = height(I)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [1.1, "def solve_d906852c(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =15(I)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(x3, ONE)\n    x5 = flip(x4)\n    x6 = branch(x5, lefthalf, tophalf)\n    x7 = branch(x5, righthalf, bottomhalf)\n    x8 = branch(x5, hconcat, vconcat)\n    x9 = x6(I)\n    x10 = x7(I)\n    x11 = index(x9, ORIGIN)\n    x12 = shape(x10)\n    x13 = decrement(x12)\n    x14 = index(x10, x13)\n    x15 = mostcolor(I)\n    x16 = mostcolor(I)\n    x17 = palette(I)\n    x18 = remove(x11, x17)\n    x19 = remove(x14, x18)\n    x20 = remove(x16, x19)\n    x21 = first(x20)\n    x22 = replace(x9, x21, x11)\n    x23 = branch(x5, dmirror, identity)\n    x24 = branch(x5, height, width)\n    x25 = x24(I)\n    x26 = astuple(ONE, x25)\n    x27 = canvas(x15, x26)\n    x28 = x23(x27)\n    x29 = replace(x10, x21, x14)\n    x30 = x8(x22, x28)\n    x31 = branch(x5, width, height)\n    x32 = x31(I)\n    x33 = even(x32)\n    x34 = branch(x33, x22, x30)\n    O = x8(x34, x29)\n    return O"], [1.1, "def solve_c73f04cc(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 =801(I)\n    x2 =806(I, TEN)\n    x3 =006(I, THREE)\n    x4 = power(outbox, TWO)\n    x5 = chain(backdrop, x4, x2)\n    x6 = apply(x5, x3)\n    O = fill(x1, EIGHT, x6)\n    return O"], [1.1, "def solve_b6f01a00(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =45(I)\n    x2 = replace(x1, EIGHT, ZERO)\n    x3 = objects(x2, T, F, T)\n    x4 = apply(normalize, x3)\n    x5 = astuple(ONE, THREE)\n    x6 = canvas(EIGHT, x5)\n    x7 = compose(toindices, normalize)\n    x8 = lbind(extract, x4)\n    x9 = rbind(compose, initset)\n    x10 = lbind(compose, flip)\n    x11 = chain(x8, x9, x10)\n    x12 = chain(x8, x9, x11)\n    x13 = fork(contained, toindices, x12)\n    x14 = rbind(shift, RIGHT)\n    x15 = compose(x14, x13)\n    x16 = fork(contained, toindices, x15)\n    x17 = fork(either, x15, x16)\n    x18 = rbind(argmax, rightmost)\n    x19 = compose(x18, x17)\n    x20 = fork(both, x15, x19)\n    x21 = fork(both, x17, x20)\n    x22 = fork( both, x15, x21)\n    x23 = fork(both, x17, x22)\n    x24 =9697069699\n    x25 = mapply(x21, x4)\n    x26 =9697069429(x25)\n    x27 = papply(pair, x25, x26)\n    x28 = difference(x27, x24)\n    O = fill(x6, ONE, x28)\n    return O"], [1.1, "def solve_13adc3e7(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(rbind,475)\n    x2 = compose(positive, size)\n    x3 = lbind(filter, x1)\n    x4 = rbind(sfilter, x2)\n    x5 = chain(x3, x4, frontiers)\n    x6 = chain(size, dedupe, first)\n    x7 = chain(size, dedupe, last)\n    x8 = fork(greater, x6, x7)\n    x9 = fork(both, x3, x8)\n    x10 = leastcolor(I)\n    x11 = palette(I)\n    x12 = remove(x10, x11)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = switch(I, x13, x14)\n    x16 = interval(650, SIX, ONE)\n    x17 = product(x16, x16)\n    x18 = initset( lbind)\n    x19 = lbind(matcher, first)\n    x20 = compose(x19, last)\n    x21 = lbind(sfilter, x17)\n    x22 = lbind(upscale, x10)\n    x23 = fork(mapply, x20, x22)\n    x24 = lbind(Example output:\n    0520225\n    1111111\n    0211111\n    1111111\n    29110211\n    1111111\n    0411404\n    0119109\n    1414507\n    \"\"\"\n    x1 = compose(positive, size)\n    x2 = lbind(sfilter, x17)\n    x3 = lbind(matcher, first)\n    x4 = chain(x3, x2, mostcolor)\n    x5 = fork(recolor, x23, x4)\n    x6 = mapply(x5, x18)\n    O = paint(x15, x6)\n    return O"], [1.1, "def solve_28f26c8e(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple( LEFT, UP)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(x4, x3)\n    x6 = combine(x3, x5)\n    x7 = fork(either, vline, hline)\n    x8 = x7(x6)\n    x9 = rbind(toobject, I)\n    x10 = chain(numcolors, x9, palette)\n    x11 = matcher(x10, TWO)\n    x12 = extract(x6, x11)\n    x13 =124colors(x12)\n    x14 = matcher(first, x12)\n    x15 = compose(flip, x14)\n    x16 = rbind(sfilter, x15)\n    x17 =12445(x13)\n    x18 =754(x17)\n    x19 = chain(size, x16, x18)\n    x20 = matcher(x19, ONE)\n    x21 = rbind(sfilter, x20)\n    x22 = chain(merge, x21, x16)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x23, x9)\n    O = paint(I, x24)\n    return O"], [1.1, "def solve_d1920951(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =61ba2dee(I):\n    x2 = crop(I, ORIGIN, THREE_BY_THREE)\n    O = switch(x2, EIGHT, x2)\n    return O"], [1.1, "def solve_e47471a6(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =143333(I)\n    x2 =9999(1111, ZERO)\n    x3 = rot90(I)\n    x4 = N090(NEG_ONE)\n    x5 = lefthalf(x1)\n    x6 = righthalf(x1)\n    x7 = branch(x4, x5, x6)\n    x8 = branch(x43, x7, x6)\n    O = x8(x4)\n    return O"], [1.1, "def solve_475fb778(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =173(I)\n    x2 = tophalf(x1)\n    x3 = numcolors(x2)\n    x4 = equality(x3, ONE)\n    x5 = bottomhalf(x1)\n    x6 = numcolors(x5)\n    x7 = equality(x6, ONE)\n    x8 = bottomhalf(x1)\n    x9 = numcolors(x8)\n    x10 = equality(x9, ONE)\n    x11 = hmirror(x2)\n    x12 = lefthalf(x11)\n    x13 = righthalf(x11)\n    x14 = vmirror(x13)\n    x15 = cellwise(x12, x14, ZERO)\n    x16 = replace(x15, ONE, TWO)\n    x17 = replace(x16, ONE, TWO)\n    x18 =54555555 replace(x17, ONE, TWO)\n    x19 =54555555(x18, x17)\n    O = replace(x19, ONE, TWO)\n    return O"], [1.1, "def solve_a3773fdc(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =531498cf0(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.1, "def solve_3a714cc3(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =8870914\n    5887542089\n    5497880446\n    6087416927\n    4be270ca9\n    \"\"\"\n    x2 = subgrid(x1, I)\n    x3 = replace(x2, ZERO, ZERO)\n    O = replace(x3, ONE, ZERO)\n    return O"], [1.1, "def solve_cd3f6f63(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    O =6aacharacter(I, T)\n    return O"], [1.1, "def solve_4225c37b(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =675(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = frontiers(I)\n    x5 = merge(x4)\n    x6 = toindices(x5)\n    x7 = index(x3, x6)\n    x8 = frontiers(x3)\n    x9 = sfilter(x8, hline)\n    x10 = size(x9)\n    x11 = increment(x10)\n    x12 = increment(x11)\n    x13 = tojvec(x12)\n    x14 = tojvec(x12)\n    x15 =0923411245\n    x16 =119(x13, x15)\n    x17 =197(x5)\n    x18 = cover(x3, x17)\n    x19 =2299(x17)\n    x20 = lbind(shift, x16)\n    x21 = palette(x19)\n    x22 = compose(x20, x21)\n    x23 = fork(combine, x20, x22)\n    x24 = palette(x23)\n    x25 = compose(x23, x24)\n    x26 = mapply(x25, x24)\n    x27 =363(x26)\n    O = replace(x18, x27, x ZERO)\n    return O"], [1.1, "def solve_95804035(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = shape(I)\n    x2 = subtract(x1, TWO)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = width(I)\n    x6 = partition(I)\n    x7 = matcher(color, ZERO)\n    x8 = decrement(x1)\n    x9 = tojvec(x8)\n    x10 = connect(x7, x9)\n    x11 = height(I)\n    x12 = width(I)\n    x13 = ofcolor(I, ZERO)\n    x14 = tojvec(x12)\n    x15 = connect(x13, x14)\n    x16 = vatching(x3)\n    x17 = shape(I)\n    x18 = subtract(x16, x17)\n    x19 = connect(x18, x3)\n    x20 = fill(I, x9, x19)\n    x21 = toobject(x20, I)\n    x22 =\n    \"\"\"\n    x1 = height(x21)\n    x2 = equality(x22, ONE)\n    x3 = shape(x chain(numcolors, canvas)\n    x4 = canvas(ZERO, x3)\n    x5 = ofcolor(x41, ZERO)\n    x6 = intersection(x5, x5)\n    O = fill(x4, EIGHT, x6)\n    return O"], [1.1, "def solve_b27aabbe(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = toindices(x2)\n    x4 = normalize(x2)\n    x5 = toindices(x2)\n    x6 = center(x4)\n    x7 = intersection(x5, x6)\n    x8 = fill(I, FOUR, x7)\n    x9 = astuple(ZERO, ORIGIN)\n    x10 = initset(x9)\n    x11 = insert(x10, x7)\n    x12 = insert(x11, x10)\n    x13 = tojvec(x12)\n    x14 = toivec(x13)\n    x15 = fill(x8, ZERO, x14)\n    x16 = fill(x15, FOUR, x13)\n    x17 = fill(x16, FOUR, x10)\n    x18 = objects(x17, T, T, T)\n    x19 = merge(x18)\n    x20 = cover(x17, x19)\n    x21 = paint(x20, x19)\n    x22 = astuple(x24, x12)\n    x23 = astuple(x24, x10)\n    x24 = fill(x21, FOUR, x23)\n    x25 = fill(x24, THREE, x12)\n    x26 = fill(x25, TWO, x12)\n    x27 = fill(x26, ONE, x12)\n    x28 = fill(x27, excludes, x12)\n    x29 = fill(x28, THREE, x12)\n    x30 =\n    3777777795\n    7777777729\n    7777777776\n    7777777777\n    7777777777\n    7777777777\n    \"\"\"\n    O = fill(x29, THREE, x10)\n    return O"], [1.1, "def solve_3489bafc(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(TWO, LEFT)\n    x3 = rbind(toobject, I)\n    x4 = compose(x3, vmirror)\n    x5 = rbind(toobject, I)\n    x6 = chain(x2, x5, x4)\n    x7 = rbind(colorcount, x ZERO)\n    x8 = argmax(x1, x7)\n    x9 = x6(x8)\n    x10 = shoot(x8, UNITY)\n    x11 = fill(I, x8, x10)\n    x12 = color(x11)\n    x13 = subgrid(x11, x12)\n    x14 = leastcolor(x13)\n    x15 = mostcolor(x13)\n    x16 = replace(x13, x14, x12)\n    x17 = replace(x16, x15, x13)\n    x18 = compress(x17)\n    x19 = width(x13)\n    x20 = halve(x19)\n    x21 = increment(x20)\n    x22 = width(x13)\n    x23 = halve(x22)\n    x24 = increment(x23)\n    x25 = astuple(x21, x24)\n    x26 = canvas(x15, x25)\n    x27 =THfeca(x20)\n    x28 = tojvec(x27)\n    x29 = matcher(first, x18)\n    x30 = sfilter(x1, x29)\n    x31 = shift(x30, UP)\n    x32 = fill(x26, x14, x31)\n    x33 = shift(x31, DOWN)\n    O = fill(x32, x18, x33)\n    return O"], [1.1, "def solve_c7210437(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =3805679(I)\n    x2 =9619265977\n    3401500923\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [1.1, "def solve_fe1501d9(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =445(I)\n    x2 = fork(combine, vfrontier, hfrontier)\n    x3 = compose(x2, x1)\n    x4 = mapply(x3, x9)\n    O = fill(I, THREE, x4)\n    return O"], [1.1, "def solve_272eced3(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 =3807456(I)\n    x2 = asindices(x1)\n    x3 = objects(I, T, F, F)\n    x4 = toindices(x3)\n    x5 = asindices(I)\n    x6 = corners(x5)\n    x7 = lbind(rbind, difference)\n    x8 = toindices(x7)\n    x9 = rbind(compose, initset)\n    x10 = lbind(rbind, contained)\n    x11 = chain(x9, x10, initset)\n    x12 = lbind(argmin, x5)\n    x13 = chain(first, x12, x11)\n    x14 = asindices(x1)\n    x15 = ofcolor(I, x4)\n    x16 = intersection(x15, x14)\n    x17 = fill(I, ZERO, x16)\n    x18 = fork(recolor, color, x14)\n    x19 = mapply(x18, x15)\n    O = paint(x17, x19)\n    return O"], [1.1, "def solve_dc1fa544(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x\n    x1 = other(x7, x8)\n    x2 = vmirror(x8)\n    x3 = hconcat(x2, x8)\n    x4 =45(x3)\n    x5 =87(x4)\n    x6 = color(x5)\n    x7 = palette(x3)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, x5)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = partition(x5)\n    x13 =885(x12)\n    x14 =External(x13)\n    x15 = invert(x14)\n    x16 = cover(I, x11)\n    x17 = shoot(x15, UNITY)\n    x18 = shoot(x15, NEG_UNITY)\n    x19 = shoot(x15, UP_RIGHT)\n    x20 = shoot(x15, DOWN_LEFT)\n    x21 = combine(x17, x20)\n    x22 = combine(x18, x21)\n    x23 = fork(combine, vfrontier, hfrontier)\n    x24 = compose(x23, center)\n    x25 = mapply(x24, x22)\n    O = fill(x16, x11, x25)\n    return O"], [1.1, "def solve_c795a5e3(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 =889(I)\n    x2 = shape(I)\n    x3 = partition(I)\n    x4 = argmax(x3, size)\n    x5 = canvas(FIVE, x2)\n    O = paint(x5, x4)\n    return O"], [1.1, "def solve_ac97ce59(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 =5521c2gravitate(I, x1)\n    x2 = compose(crement, x1)\n    x3 = order(x1, x2)\n    x4 = first(x3)\n    x5 = last(x3)\n    x6 = ofcolor(I, x4)\n    x7 = ofcolor(I, x5)\n    x8 = neighbors(ORIGIN)\n    x9 = intersection(x8, x7)\n    x10 = power(x2, FOUR)\n    x11 = x10(I)\n    x12 = tojvec(x11)\n    x13 = shift(x11, x12)\n    x14 = x10(I)\n    x15 = x5(x14)\n    x16 = combine(x13, x15)\n    x17 = mapply(x2, x16)\n    O = fill(I, FOUR, x17)\n    return O"]], "3490cc26": [[0.08173484697705038, "def solve_b19d2edb(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.08173484697705038, "def solve_3bdae9ce(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = lbind(shift, x4)\n    x6 = mapply(x5, x2)\n    O = fill(I, THREE, x6)\n    return O"], [0.08173484697705038, "def solve_275a100d(I):\n    x1 = lbind(greater, TWO)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(toindices, x3)\n    x5 = rbind(shoot, RIGHT)\n    x6 = compose(x5, center)\n    x7 = fork(recolor, color, x6)\n    x8 = mapply(x7, x4)\n    O = underpaint(I, x8)\n    return O"], [0.08173484697705038, "def solve_a839b426(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.08173484697705038, "def solve_decdcc10(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.08173484697705038, "def solve_51a9ff61(I):\n    x1 = objects(I, T, F, T)\n    x2 = mapply(delta, x1)\n    O = fill(I, SEVEN, x2)\n    return O"], [0.08173484697705038, "def solve_a2c595f8(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.08173484697705038, "def solve_9a66bff6(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_bf8b1bf4(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_acf6bdf9(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.08173484697705038, "def solve_c1a0a3c6(I):\n    O = subgrid(I, I)\n    return O"], [0.08173484697705038, "def solve_810abb6b(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(greater, TWO)\n    x3 = chain(x2, minimum, shape)\n    x4 = fork(equality, toindices, box)\n    x5 = fork(both, x3, x4)\n    x6 = mfilter(x1, x5)\n    O = fill(I, SEVEN, x6)\n    return O"], [0.08173484697705038, "def solve_d54a664f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.08173484697705038, "def solve_26ad5817(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = rbind(difference, x2)\n    x4 = rbind(greater, TWO)\n    x5 = chain(x4, size, x3)\n    x6 = compose(x5, dneighbors)\n    x7 = sfilter(x2, x6)\n    O = fill(I, ZERO, x7)\n    return O"], [0.08173484697705038, "def solve_4e71abd1(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = colorfilter(x2, x1)\n    x4 = rbind(toobject, I)\n    x5 = chain(leastcolor, x4, delta)\n    x6 = rbind(shift, UP)\n    x7 = compose(x6, delta)\n    x8 = rbind(mapply, x3)\n    x9 = compose(x8, x7)\n    x10 = fork(4344, x7, x9)\n    x11 = mapply(x10, x3)\n    O = fill(I, x1, x11)\n    return O"], [0.08173484697705038, "def solve_a527719e(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.08173484697705038, "def solve_21c80f55(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.08173484697705038, "def solve_c6f48df8(I):\n    O = replace(I, SEVEN, FIVE)\n    return O"], [0.08173484697705038, "def solve_bb7a076d(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.08173484697705038, "def solve_1695ac79(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.08173484697705038, "def solve_a6007a60(I):\n    x1 = leastcolor(I)\n    x2 = height(I)\n    x3 = vsplit(I, x2)\n    x4 = lbind(recolor, TWO)\n    x5 = rbind(ofcolor, x1)\n    x6 = chain(x4, delta, x5)\n    x7 = fork(paint, identity, x6)\n    x8 = apply(x7, x3)\n    O = merge(x8)\n    return O"], [0.08173484697705038, "def solve_eb364f82(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_0c3b3abd(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_e2c11e11(I):\n    x1 = objects(I, F, F, T)\n    x2 = argmax(x1, numcolors)\n    x3 = astuple(TWO, FOUR)\n    x4 = rbind(contained, x3)\n    x5 = compose(x4, size)\n    x6 = rbind(sfilter, x5)\n    x7 = lbind(rbind, subtract)\n    x8 = lbind(occurrences, I)\n    x9 = lbind(lbind, shift)\n    x10 = compose(x7, ulcorner)\n    x11 = chain(x10, x6, normalize)\n    x12 = chain(x8, x6, normalize)\n    x13 = fork(apply, x11, x12)\n    x14 = compose(x9, normalize)\n    x15 = fork(mapply, x14, x13)\n    x16 = astuple(cmirror, dmirror)\n    x17 = astuple(hmirror, vmirror)\n    x18 = combine(x16, x17)\n    x19 = product(x18, x18)\n    x20 = fork(compose, first, last)\n    x21 = apply(x20, x19)\n    x22 = totuple(x21)\n    x23 = combine(x18, x22)\n    x24 = rapply(x23, x2)\n    x25 = mapply(x15, x24)\n    O = paint(I, x25)\n    return O"], [0.08173484697705038, "def solve_b07a8d11(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.08173484697705038, "def solve_8b036e59(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.08173484697705038, "def solve_836cc12d(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, TWO, x3)\n    return O"], [0.08173484697705038, "def solve_f6d76d02(I):\n    x1 = palette(I)\n    x2 = remove(FIVE, x1)\n    x3 = first(x2)\n    x4 = ofcolor(I, x3)\n    x5 = fill(I, ZERO, x4)\n    x6 = ofcolor(I, FIVE)\n    O = fill(x5, x3, x6)\n    return O"], [0.08318632736744225, "def solve_ce587d0c(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_40070ff3(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_c25ac752(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_5331b04f(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_0556d0a8(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_ea483d50(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_c0586be1(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_4194c07f(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_459c45f7(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_a12a9fa9(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_58912951(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_29b8411f(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_05159e96(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.1179007840135784, "def solve_23df3883(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = rbind(multiply, THREE)\n    x6 = rbind(divide, THREE)\n    x7 = compose(x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = toindices(x4)\n    x10 = compose(x8, last)\n    x11 = sfilter(x9, x10)\n    O = fill(I, SIX, x11)\n    return O"], [0.12284772253271087, "def solve_2ebdc1eb(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = chain(size, dedupe, first)\n    x9 = matcher(x8, ONE)\n    x10 = compose(first, cmirror)\n    x11 = chain(size, dedupe, x10)\n    x12 = matcher(x11, ONE)\n    x13 = fork(both, x9, x12)\n    x14 = rbind(rapply, I)\n    x15 = compose(initset, first)\n    x16 = chain(first, x14, x15)\n    x17 = compose(x13, x16)\n    x18 = extract(x7, x17)\n    x19 = first(x18)\n    x20 = last(x18)\n    x21 = x19(I)\n    x22 = width(x21)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = index(x21, x24)\n    x26 = asobject(x21)\n    x27 = matcher(first, x25)\n    x28 = compose(flip, x27)\n    x29 = sfilter(x26, x28)\n    x30 = hperiod(x29)\n    x31 = width(x21)\n    x32 = increment(x31)\n    x33 = interval(ZERO, x32, x30)\n    x34 = apply(tojvec, x33)\n    x35 = lbind(shift, x29)\n    x36 = mapply(x35, x34)\n    x37 = paint(x21, x36)\n    O = x20(x37)\n    return O"], [0.12814991617905258, "def solve_28fab0a5(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [0.12814991617905258, "def solve_1e51567c(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [0.13468134728045977, "def solve_a4074d76(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_6482a033(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13468134728045977, "def solve_c960a8fa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_51e90d18(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_adaea082(I):\n    x1 = objects(I, T, F, T)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = mostcommon(x3)\n    x5 = canvas(x4, TWO_BY_TWO)\n    x6 = asobject(x5)\n    x7 = palette(I)\n    x8 = matcher(identity, x4)\n    x9 = argmin(x7, x8)\n    x10 = shape(I)\n    x11 = canvas(x9, x10)\n    x12 = lbind(shift, x6)\n    x13 = occurrences(I, x6)\n    x14 = mapply(x12, x13)\n    O = paint(x11, x14)\n    return O"], [0.13468134728045977, "def solve_40e9c8df(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13468134728045977, "def solve_2434f2c6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_34ac5d8e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13468134728045977, "def solve_13884eaa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13468134728045977, "def solve_7a598386(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13468134728045977, "def solve_21b08718(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(equality, toindices, box)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = argmax(x3, x4)\n    x6 = mostcolor(I)\n    x7 = inbox(x5)\n    x8 = backdrop(x7)\n    x9 = toobject(x8, I)\n    x10 = matcher(first, x6)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x9, x11)\n    x13 = normalize(x12)\n    x14 = color(x13)\n    x15 = toindices(x13)\n    x16 = compose(toindices, normalize)\n    x17 = matcher(x16, x15)\n    x18 = mfilter(x1, x17)\n    O = fill(I, x14, x18)\n    return O"], [0.13468134728045977, "def solve_24400ee6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13468134728045977, "def solve_646cb8a3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_e24c552d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13468134728045977, "def solve_4f193e82(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_6a1912f2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13468134728045977, "def solve_65654a3a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_f3e18066(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_eee644a0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13604469536847255, "def solve_fc935b42(I):\n    x1 = fork(multiply, height, width)\n    x2 = partition(I)\n    x3 = argmax(x2, x1)\n    x4 = remove(x3, x2)\n    x5 = argmax(x4, x1)\n    x6 = other(x4, x5)\n    x7 = palette(I)\n    x8 = lrcorner(x5)\n    x9 = add(x8, UNITY)\n    x10 = llcorner(x5)\n    x11 = add(x10, DOWN_LEFT)\n    x12 = urcorner(x5)\n    x13 = add(x12, UP_RIGHT)\n    x14 = ulcorner(x5)\n    x15 = add(x14, NEG_UNITY)\n    x16 = shoot(x9, UNITY)\n    x17 = shoot(x11, DOWN_LEFT)\n    x18 = shoot(x13, UP_RIGHT)\n    x19 = shoot(x15, NEG_UNITY)\n    x20 = combine(x16, x17)\n    x21 = combine(x18, x19)\n    x22 = combine(x20, x21)\n    x23 = color(x6)\n    O = fill(I, x23, x22)\n    return O"], [0.13757267766397355, "def solve_20542bfc(I):\n    x1 = objects(I, F, F, T)\n    x2 = argmax(x1, numcolors)\n    x3 = remove(x2, x1)\n    x4 = normalize(x2)\n    x5 = apply(ulcorner, x3)\n    x6 = lbind(shift, x4)\n    x7 = mapply(x6, x5)\n    x8 = paint(I, x7)\n    O = cover(x8, x2)\n    return O"], [0.13811265931525568, "def solve_21e98f9e(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.13811265931525568, "def solve_cca89912(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.14098233381512817, "def solve_b607ec74(I):\n    x1 = leastcolor(I)\n    x2 = mostcolor(I)\n    x3 = ofcolor(I, x1)\n    x4 = replace(I, x1, x2)\n    x5 = mapply(dneighbors, x3)\n    x6 = mapply(ineighbors, x3)\n    x7 = fill(x4, ONE, x5)\n    O = fill(x7, x1, x6)\n    return O"], [0.14098233381512817, "def solve_bdb11c07(I):\n    x1 = leastcolor(I)\n    x2 = mostcolor(I)\n    x3 = ofcolor(I, x1)\n    x4 = replace(I, x1, x2)\n    x5 = mapply(dneighbors, x3)\n    x6 = mapply(ineighbors, x3)\n    x7 = fill(x4, ONE, x5)\n    O = fill(x7, x1, x6)\n    return O"], [0.14633502634498852, "def solve_d7fccb94(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.14633502634498852, "def solve_f042c2d5(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.14633502634498852, "def solve_fc762d37(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.147039853263387, "def solve_1f533393(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = fill(I, x8, x32)\n    return O"], [0.1622171408545395, "def solve_cff284a0(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = contained(ZERO, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, ZERO)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.167039853263387, "def solve_e31408cd(I):\n    x1 = switch(I, THREE, FOUR)\n    O = replace(x1, EIGHT, NINE)\n    return O"], [0.168463732206312, "def solve_0bfe2599(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.168463732206312, "def solve_f83cfc9e(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.168463732206312, "def solve_bca68728(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.168463732206312, "def solve_c2a12f17(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.168463732206312, "def solve_9370ba68(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.168463732206312, "def solve_606449bf(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.168463732206312, "def solve_f0c062e9(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.1697728934434557, "def solve_7b9f301b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.1697728934434557, "def solve_1499f949(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.1697728934434557, "def solve_9467b2a4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.17098233381512817, "def solve_2a1df969(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.17098233381512817, "def solve_a1a881f1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.19986952115995066, "def solve_1b1c9fca(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.19986952115995066, "def solve_954eb638(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.19986952115995066, "def solve_d5b63ed1(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.2005586948668813, "def solve_70e537c0(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(shoot, DOWN)\n    x3 = compose(x2, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    O = paint(I, x5)\n    return O"], [0.20252763457609518, "def solve_62256d0a(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.20977289344345568, "def solve_29c981c4(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, TWO)\n    x3 = mfilter(x1, x2)\n    x4 = matcher(size, THREE)\n    x5 = mfilter(x1, x4)\n    x6 = matcher(size, FOUR)\n    x7 = mfilter(x1, x6)\n    x8 = fill(I, THREE, x3)\n    x9 = fill(x8, TWO, x5)\n    O = fill(x9, ONE, x7)\n    return O"], [0.20977289344345568, "def solve_3e53b338(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, SIX)\n    x3 = compose(flip, x2)\n    x4 = mfilter(x1, x2)\n    x5 = mfilter(x1, x3)\n    x6 = fill(I, TWO, x4)\n    O = fill(x6, ONE, x5)\n    return O"], [0.20977289344345568, "def solve_555fb7c6(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_95c35b68(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.21724245422789054, "def solve_49b55b5b(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(shoot, RIGHT)\n    x4 = compose(x3, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(x1, DOWN_LEFT)\n    x9 = initset(x8)\n    x10 = mostcolor(I)\n    x11 = recolor(x10, x9)\n    x12 = objects(x7, T, F, T)\n    x13 = insert(x11, x12)\n    x14 = order(x13, uppermost)\n    x15 = first(x14)\n    x16 = remove(x11, x14)\n    x17 = remove(x15, x14)\n    x18 = compose(lrcorner, first)\n    x19 = compose(lrcorner, last)\n    x20 = fork(connect, x18, x19)\n    x21 = compose(color, first)\n    x22 = fork(recolor, x21, x20)\n    x23 = pair(x16, x17)\n    x24 = mapply(x22, x23)\n    O = underpaint(x7, x24)\n    return O"], [0.22208695827893984, "def solve_e0cd8800(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.22208695827893984, "def solve_536c7915(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.22746637157822558, "def solve_d1509c3e(I):\n    O = vmirror(I)\n    return O"], [0.22746637157822558, "def solve_74f08535(I):\n    O = vmirror(I)\n    return O"], [0.2384010333421186, "def solve_2863bdd1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = first(x2)\n    x4 = neighbors(x3)\n    x5 = mostcolor(I)\n    x6 = shape(I)\n    x7 = canvas(x5, x6)\n    x8 = initset(x3)\n    x9 = fill(x7, x1, x8)\n    O = fill(x9, TWO, x4)\n    return O"], [0.24440527968330814, "def solve_60d37582(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.24440527968330814, "def solve_d5ed6f6a(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.2473346261417366, "def solve_7382b409(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.2521086091390762, "def solve_4e55c917(I):\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = lefthalf(x4)\n    x6 = righthalf(x4)\n    x7 = rbind(order, identity)\n    x8 = apply(x7, x5)\n    x9 = apply(x7, x6)\n    x10 = hconcat(x8, x9)\n    O = x3(x10)\n    return O"], [0.25543417203130403, "def solve_5883616d(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind( sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.25543417203130403, "def solve_1d868504(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.25586824336349373, "def solve_523d9c55(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.2730213103674518, "def solve_761070fb(I):\n    O = rot180(I)\n    return O"], [0.2735505434325868, "def solve_30e48a57(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.28257229929506134, "def solve_6f267caf(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.28257229929506134, "def solve_ca4e52c9(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.2912996173225872, "def solve_ccb549cb(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_774620c3(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_e30533ef(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_71b9b227(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_507d7b13(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_0b7a725b(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_f93b0c11(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_377a47d0(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_2b3d5283(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_fc191c16(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    O = paint(x2, x4)\n    return O"], [0.29175210347734337, "def solve_c1096266(I):\n    O = trim(I)\n    return O"], [0.29175210347734337, "def solve_67736be5(I):\n    O = trim(I)\n    return O"], [0.29175210347734337, "def solve_b786f420(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, height)\n    x3 = subgrid(x2, I)\n    O = trim(x3)\n    return O"], [0.29660861186373566, "def solve_9af89688(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.31572456964802403, "def solve_e69f26ec(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.326168988805897, "def solve_24e6775d(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.326168988805897, "def solve_89fb4590(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, T, T)\n    x4 = merge(x3)\n    O = paint(x2, x4)\n    return O"], [0.3315011728051802, "def solve_8c37c66c(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.3333998715624176, "def solve_aa417b1f(I):\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = lbind(power, outbox)\n    x8 = chain(x7, halve, width)\n    x9 = initset(x8)\n    x10 = lbind(rapply, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = compose(backdrop, x12)\n    x14 = fork(difference, x13, toindices)\n    x15 = mapply(x14, x1)\n    x16 = mostcolor(I)\n    x17 = ofcolor(I, x16)\n    x18 = intersection(x15, x17)\n    O = fill(x6, THREE, x18)\n    return O"], [0.34510675848655514, "def solve_12bf26e7(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.34510675848655514, "def solve_bbd72cce(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.34510675848655514, "def solve_8dcc0cf4(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.34510675848655514, "def solve_4ee717cb(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.34510675848655514, "def solve_86e9d730(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.36281063387107276, "def solve_cbd1597b(I):\n    O = cmirror(I)\n    return O"], [0.36791347770439387, "def solve_c9b36130(I):\n    O = dmirror(I)\n    return O"], [0.36791347770439387, "def solve_c43ebc54(I):\n    O = dmirror(I)\n    return O"], [0.36791347770439387, "def solve_d9741062(I):\n    O = dmirror(I)\n    return O"], [0.3997728934434557, "def solve_48e262cc(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.3997728934434557, "def solve_687daf70(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.4008628990369438, "def solve_6ee59fd8(I):\n    x1 = crop(I, ORIGIN, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.4121180954681841, "def solve_16ca361e(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.4121180954681841, "def solve_2ee32888(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.4121180954681841, "def solve_7ae31051(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.41434496433667933, "def solve_10288e4a(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, EIGHT, x6)\n    return O"], [0.41434496433667933, "def solve_5063e569(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, EIGHT, x6)\n    return O"], [0.41434496433667933, "def solve_99ad2cfe(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, EIGHT, x6)\n    return O"], [0.41434496433667933, "def solve_360099ce(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = recolor(ZERO, x2)\n    x4 = normalize(x3)\n    x5 = occurrences(I, x4)\n    x6 = toindices(x4)\n    x7 = lbind(shift, x6)\n    x8 = mapply(x7, x5)\n    O = fill(I, x1, x8)\n    return O"], [0.4221658498666133, "def solve_c8d28a47(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.44421029663584294, "def solve_10cf80c1(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_7cf868b9(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_0babfdda(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_6cc4f03e(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_81cb3365(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_165720ef(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_c66b0680(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_6b2389c7(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_c7371453(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_6e11b024(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_7cfb6dd5(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44434496433667936, "def solve_e4e70cb1(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, ONE, x6)\n    return O"], [0.46735865100246843, "def solve_4b3dbf01(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = lbind(power, outbox)\n    x8 = chain(x7, halve, width)\n    x9 = initset(x8)\n    x10 = lbind(rapply, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = compose(backdrop, x12)\n    x14 = fork(difference, x13, toindices)\n    x15 = mapply(x14, x1)\n    x16 = mostcolor(I)\n    x17 = ofcolor(I, x16)\n    x18 = intersection(x15, x17)\n    O = fill(x6, THREE, x18)\n    return O"], [0.469992675486797, "def solve_2f205aff(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, vline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = combine(x15, x16)\n    x18 = intersection(x15, x16)\n    x19 = difference(x17, x18)\n    O = fill(x14, THREE, x19)\n    return O"], [0.4853084736970792, "def solve_2b688564(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, vmirror, hmirror)\n    x9 = x8(x6)\n    x10 = branch(x7, leftmost, uppermost)\n    x11 = branch(x7, tojvec, toivec)\n    x12 = x10(x5)\n    x13 = x10(x6)\n    x14 = greater(x12, x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = x11(x16)\n    x18 = shape(x6)\n    x19 = multiply(x17, x18)\n    x20 = shift(x9, x19)\n    x21 = fill(I, THREE, x3)\n    O = paint(x21, x20)\n    return O"], [0.4853084736970792, "def solve_9bedaaf3(I):\n    x1 = index(I, ORIGIN)\n    x2 = objects(I, T, F, F)\n    x3 = fork(multiply, height, width)\n    x4 = fork(equality, size, x3)\n    x5 = chain(positive, decrement, size)\n    x6 = colorfilter(x2, x1)\n    x7 = fork(both, x4, x5)\n    x8 = sfilter(x6, x7)\n    x9 = merge(x8)\n    x10 = ofcolor(I, x1)\n    x11 = fill(I, FOUR, x10)\n    O = fill(x11, THREE, x9)\n    return O"], [0.49394713895507103, "def solve_a12e172f(I):\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.516202927118657, "def solve_fd781b02(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, T, F, T)\n    x9 = colorfilter(x8, x4)\n    x10 = sizefilter(x9, ONE)\n    x11 = merge(x10)\n    O = fill(x6, TWO, x11)\n    return O"], [0.5202879261104161, "def solve_fea2dd17(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = height(x2)\n    x4 = halve(x3)\n    x5 = width(x2)\n    x6 = halve(x5)\n    x7 = ulcorner(x2)\n    x8 = lrcorner(x2)\n    x9 = shape(I)\n    x10 = maximum(x9)\n    x11 = multiply(THREE, TEN)\n    x12 = interval(ZERO, x11, ONE)\n    x13 = rbind(multiply, x4)\n    x14 = apply(x13, x12)\n    x15 = rbind(multiply, x6)\n    x16 = apply(x15, x12)\n    x17 = pair(x14, x16)\n    x18 = rbind(add, x7)\n    x19 = apply(invert, x17)\n    x20 = apply(x18, x19)\n    x21 = rbind(add, x8)\n    x22 = apply(x21, x17)\n    x23 = pair(x20, x22)\n    x24 = mapply(box, x23)\n    O = fill(I, x1, x24)\n    return O"], [0.5235791174015115, "def solve_75888707(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5235791174015115, "def solve_e47c7452(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5235791174015115, "def solve_41fa00c0(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5235791174015115, "def solve_e14349cd(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5235791174015115, "def solve_14b120b7(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5235791174015115, "def solve_c375a6ee(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5235791174015115, "def solve_99db25b8(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5542587288414367, "def solve_0d02d8f4(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5542587288414367, "def solve_5c8f233d(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5641693586048402, "def solve_7eae5fef(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.5648229277707709, "def solve_084f10d2(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = subgrid(x20, I)\n    x22 = switch(x21, x18, x19)\n    x23 = replace(x22, x18, x4)\n    x24 = lbind(downscale, x23)\n    x25 = fork(upscale, x24, identity)\n    x26 = matcher(x25, x23)\n    x27 = shape(x23)\n    x28 = maximum(x27)\n    x29 = interval(ONE, x28, ONE)\n    x30 = sfilter(x29, x26)\n    x31 = maximum(x30)\n    O = downscale(x23, x31)\n    return O"], [0.6014849716551933, "def solve_4182867e(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = rbind(equality, x4)\n    x7 = argmin(x5, x6)\n    x8 = asindices(I)\n    x9 = ofcolor(I, x4)\n    x10 = difference(x8, x9)\n    x11 = fill(I, x7, x10)\n    x12 = frontiers(x11)\n    x13 = sfilter(x12, vline)\n    x14 = difference(x12, x13)\n    x15 = astuple(x14, x13)\n    x16 = apply(size, x15)\n    x17 = increment(x16)\n    O = canvas(x4, x17)\n    return O"], [0.641276367065674, "def solve_c7dbe277(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.641276367065674, "def solve_574f486b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.6460408141864922, "def solve_24cfb778(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.6460408141864922, "def solve_1425901f(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6460408141864922, "def solve_96367e9d(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.6947586846156356, "def solve_a14b567d(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.6968040052377024, "def solve_f3e72b6a(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.7183912032176915, "def solve_af3ed0ae(I):\n    x1 = trim(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(x2)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(x2)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(x2)\n    x8 = lefthalf(x7)\n    x9 = palette(x4)\n    x10 = palette(x6)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x4)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x4)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.7485899560468822, "def solve_14d734ef(I):\n    x1 = astuple(SIX, ONE)\n    x2 = crop(I, ORIGIN, x1)\n    x3 = hmirror(x2)\n    x4 = upscale(x3, THREE)\n    x5 = dmirror(x2)\n    x6 = hconcat(x5, x2)\n    O = upscale(x6, THREE)\n    return O"], [0.7540848163604722, "def solve_7c43d454(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [0.7540848163604722, "def solve_86422e76(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [0.7540848163604722, "def solve_43d700f2(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [0.7815794829293188, "def solve_30ed39b2(I):\n    x1 = first(I)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(ONE, x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = objects(x6, T, F, F)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x5(x10)\n    return O"], [0.7915392052312495, "def solve_b5240ed8(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_8c8a14d5(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_9114b9e5(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_d283af5c(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_9e682e8a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_19c63778(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_8e186af7(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_123b3dad(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.8642031835623443, "def solve_cad208c6(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = astuple(ONE, THREE)\n    x8 = size(x6)\n    x9 = order(x6, leftmost)\n    x10 = apply(color, x9)\n    x11 = rbind(canvas, UNITY)\n    x12 = apply(x11, x10)\n    x13 = merge(x12)\n    x14 = dmirror(x13)\n    x15 = subtract(NINE, x8)\n    x16 = astuple(ONE, x15)\n    x17 = mostcolor(I)\n    x18 = canvas(x17, x16)\n    x19 = hconcat(x14, x18)\n    x20 = hsplit(x19, THREE)\n    x21 = merge(x20)\n    x22 = crop(x21, ORIGIN, x7)\n    x23 = crop(x21, DOWN, x7)\n    x24 = crop(x21, TWO_BY_ZERO, x7)\n    x25 = vmirror(x23)\n    x26 = vconcat(x22, x25)\n    O = vconcat(x26, x24)\n    return O"], [0.8642031835623443, "def solve_cad91853(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = astuple(ONE, THREE)\n    x8 = size(x6)\n    x9 = order(x6, leftmost)\n    x10 = apply(color, x9)\n    x11 = rbind(canvas, UNITY)\n    x12 = apply(x11, x10)\n    x13 = merge(x12)\n    x14 = dmirror(x13)\n    x15 = subtract(NINE, x8)\n    x16 = astuple(ONE, x15)\n    x17 = mostcolor(I)\n    x18 = canvas(x17, x16)\n    x19 = hconcat(x14, x18)\n    x20 = hsplit(x19, THREE)\n    x21 = merge(x20)\n    x22 = crop(x21, ORIGIN, x7)\n    x23 = crop(x21, DOWN, x7)\n    x24 = crop(x21, TWO_BY_ZERO, x7)\n    x25 = vmirror(x23)\n    x26 = vconcat(x22, x25)\n    O = vconcat(x26, x24)\n    return O"], [0.868349128540305, "def solve_48213163(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, T, T)\n    x3 = first(x2)\n    x4 = vline(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(x1)\n    x7 = objects(x6, T, T, T)\n    x8 = order(x7, uppermost)\n    x9 = apply(color, x8)\n    x10 = dedupe(x9)\n    x11 = size(x10)\n    x12 = rbind(repeat, x11)\n    x13 = apply(x12, x10)\n    O = x5(x13)\n    return O"], [0.9081403808721191, "def solve_6ed2fc1c(I):\n    x1 = objects(I, T, F, T)\n    x2 = colorfilter(x1, ONE)\n    x3 = fork(subtract, first, last)\n    x4 = fork(multiply, sign, identity)\n    x5 = compose(x4, x3)\n    x6 = rbind(greater, TWO)\n    x7 = chain(x6, minimum, x5)\n    x8 = lbind(matcher, x7)\n    x9 = compose(x8, x3)\n    x10 = chain(sfilter, center, x9)\n    x11 = fork(shift, identity, x10)\n    x12 = mapply(x11, x2)\n    x13 = paint(I, x12)\n    x14 = canvas(ZERO, THREE_BY_THREE)\n    O = fill(x14, EIGHT, x2)\n    return O"], [0.9081403808721191, "def solve_aa6e98a2(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_4682ec67(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_46cd0e30(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_ed7aad60(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_463751f4(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9182807290875006, "def solve_f594a25c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_c9eca4cf(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_f8673ff6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_0c008612(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_64dd5476(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_7dd18b34(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_0d70e1aa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_7a49e797(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_099d4c3d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_9d7960c4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_8747436a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, T, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.9183491285403049, "def solve_fa0a5507(I):\n    x1 = asindices(I)\n    x2 = toobject(x1, I)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = rbind(colorcount, TWO)\n    x9 = argmax(x7, x8)\n    O = subgrid(x9, I)\n    return O"], [0.9183491285403049, "def solve_edf2e540(I):\n    x1 = width(I)\n    x2 = astuple(NINE, x1)\n    x3 = canvas(ZERO, x2)\n    x4 = vconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = rbind(colorcount, TWO)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.9183491285403049, "def solve_1f231c1c(I):\n    x1 = objects(I, T, F, T)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = lbind(sfilter, x3)\n    x5 = lbind(matcher, identity)\n    x6 = chain(size, x4, x5)\n    x7 = matcher(x6, ONE)\n    x8 = sfilter(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmax(x8, x9)\n    x11 = matcher(color, x10)\n    x12 = extract(x1, x11)\n    O = subgrid(x12, I)\n    return O"], [0.9183491285403049, "def solve_ee531e12(I):\n    x1 = width(I)\n    x2 = astuple(NINE, x1)\n    x3 = canvas(ZERO, x2)\n    x4 = vconcat(I, x3)\n    x5 = objects(x4, F, T, T)\n    x6 = rbind(colorcount, TWO)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.95, "def solve_b9e61308(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.95, "def solve_802eed96(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = color(x3)\n    x5 = remove(ZERO, x1)\n    x6 = other(x5, x4)\n    O = canvas(x6, UNITY)\n    return O"], [0.95, "def solve_b23ce719(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.95, "def solve_e406cac2(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.95, "def solve_22e7556c(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = branch(x2, ONE, SEVEN)\n    O = canvas(x3, UNITY)\n    return O"], [0.95, "def solve_4b3b4369(I):\n    x1 = fgpartition(I)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = compose(flip, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    O = canvas(x5, UNITY)\n    return O"], [1.0, "def solve_a57bb1ab(I):\n    x1 = objects(I, T, F, T)\n    x2 = lbind(index, I)\n    x3 = compose(x2, lrcorner)\n    x4 = astuple(NEG_TWO, NEG_TWO)\n    x5 = rbind(subtract, x4)\n    x6 = rbind(shoot, x4)\n    x7 = compose(x5, x6)\n    x8 = fork(recolor, x3, x7)\n    x9 = mapply(x8, x1)\n    O = paint(I, x9)\n    return O"], [1.0, "def solve_2559f642(I):\n    x1 = rbind(Sfilter, vline)\n    x2 = compose(x1, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shift(x4, DOWN)\n    x6 = fill(x3, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [1.0, "def solve_3dcfe43c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_17ae3959(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_e6b6f71e(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = connect(x3, x4)\n    x8 = combine(x7, x6)\n    O = fill(x1, EIGHT, x8)\n    return O"], [1.0, "def solve_a24c1107(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_eb5c8386(I):\n    x1 = fork(combine, vfrontier, hfrontier)\n    x2 = compose(x1, center)\n    x3 = fork(recolor, color, x2)\n    x4 = mapply(x3, x1)\n    x5 = paint(I, x4)\n    x6 = interval(ZERO, FIVE, ONE)\n    x7 = apply(double, x6)\n    x8 = apply(increment, x7)\n    x9 = apply(tojvec, x8)\n    x10 = prapply(shift, x1, x9)\n    x11 = apply(asobject, x10)\n    x12 = lbind(shift, x11)\n    x13 = mapply(x12, x2)\n    O = paint(x5, x13)\n    return O"], [1.0, "def solve_727dc712(I):\n    x1 = lbind(recolor, EIGHT)\n    x2 = rbind(ofcolor, ZERO)\n    x3 = chain(x1, backdrop, x2)\n    x4 = fork(paint, identity, x3)\n    x5 = height(I)\n    x6 = vsplit(I, x5)\n    x7 = mapply(x4, x6)\n    x8 = ofcolor(x7, EIGHT)\n    x9 = dmirror(I)\n    x10 = width(I)\n    x11 = vsplit(x9, x10)\n    x12 = mapply(x11, x8)\n    x13 = fill(x12, ZERO, x11)\n    x14 = dmirror(x13)\n    x15 = ofcolor(x14, EIGHT)\n    x16 = mapply(x15, x15)\n    O = fill(x13, ZERO, x16)\n    return O"], [1.0, "def solve_36f33f0c(I):\n    x1 = rot180(I)\n    x2 = rot270(I)\n    x3 = hconcat(I, x1)\n    x4 = hconcat(x3, x2)\n    O = vconcat(x4, x4)\n    return O"], [1.0, "def solve_4fe97998(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_5e0ff3e0(I):\n    x1 = vmirror(I)\n    O = hconcat(x1, I)\n    return O"], [1.0, "def solve_3ced58f2(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_37b12428(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_39e8e32b(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_7ac1be8f(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [1.0, "def solve_f526a19c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_f3432e08(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x7, x16)\n    x20 = ofcolor(x8, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, THREE, x21)\n    return O"], [1.0, "def solve_a5240307(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_8a691169(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = objects(x7, T, F, T)\n    x9 = colorfilter(x8, x6)\n    x10 = sizefilter(x9, ONE)\n    x11 = merge(x10)\n    x12 = argmax(x11, size)\n    x13 = subgrid(x12, x7)\n    x14 = width(x13)\n    x15 = divide(x14, x12)\n    x16 = downscale(x13, x15)\n    x17 = height(x16)\n    x18 = divide(x17, x12)\n    x19 = width(x12)\n    x20 = invert(x19)\n    x21 = interval(x20, x17, ONE)\n    x22 = prapply(shift, x7, x21)\n    x23 = merge(x22)\n    x24 = canvas(x6, x13)\n    x25 = asobject(x23)\n    x26 = insert(x24, x25)\n    x27 = height(x26)\n    x28 = increment(x18)\n    x29 = interval(ZERO, x28, x12)\n    x30 = apply(tojvec, x29)\n    x31 = pair(x30, x10)\n    x32 = sfilter(x31, ONE)\n    x33 = compose(size, first)\n    x34 = order(x32, x33)\n    x35 = apply(last, x34)\n    x36 = mpapply(recolor, x35, x32)\n    O = paint(x16, x36)\n    return O"], [1.0, "def solve_bcb376ba(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_4ffeddb9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_bdcadf62(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_65f78d9a(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_6338f343(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_1091f27e(I):\n    x1 = mostcolor(I)\n    x2 = colorcount(I, x1)\n    x3 = height(I)\n    x4 = width(I)\n    x5 = multiply(x3, x4)\n    x6 = subtract(x5, x2)\n    O = upscale(I, x6)\n    return O"], [1.0, "def solve_4c266689(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_28419118(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_7abb41f0(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_76c3f8ce(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_90e6c29c(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_64c1c1ce(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_f26a54c6(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_469c75f2(I):\n    x1 = height(I)\n    x2 = vsplit(I, x1)\n    x3 = apply(asobject, x2)\n    x4 = apply(hperiod, x3)\n    x5 = minimum(x4)\n    x6 = width(I)\n    x7 = hsplit(I, x6)\n    x8 = apply(asobject, x7)\n    x9 = apply(vperiod, x8)\n    x10 = minimum(x9)\n    x11 = matcher(hperiod, x5)\n    x12 = sfilter(x3, x11)\n    x13 = mapply(palette, x12)\n    x14 = matcher(vperiod, x10)\n    x15 = sfilter(x8, x14)\n    x16 = mapply(palette, x15)\n    x17 = palette(I)\n    x18 = combine(x13, x16)\n    x19 = rbind(contained, x18)\n    x20 = argmin(x17, x19)\n    x21 = asobject(I)\n    x22 = matcher(first, x20)\n    x23 = compose(flip, x22)\n    x24 = sfilter(x21, x23)\n    x25 = height(I)\n    x26 = divide(x25, x10)\n    x27 = increment(x26)\n    x28 = width(I)\n    x09 = divide(x28, x5)\n    x20 = increment(x29)\n    x21 = invert(x27)\n    x22 = interval(x21, x27, ONE)\n    x23 = apply(tojvec, x22)\n    x24 = lbind(shift, x24)\n    x25 = mapply(x24, x23)\n    O = paint(I, x25)\n    return O"], [1.0, "def solve_ce1bf59f(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    O = vperiod(x3)\n    return O"], [1.0, "def solve_a6da8000(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = increment(UNITY)\n    x4 = neighbors(x3)\n    x5 = delta(x3)\n    x6 = tophalf(I)\n    x7 = shift(x5, x6)\n    x8 = fill(I, ZERO, x7)\n    x9 = shape(x8)\n    x10 = maximum(x9)\n    x11 = lbind(shift, x8)\n    x12 = mapply(x11, x4)\n    O = fill(x8, x1, x12)\n    return O"], [1.0, "def solve_eb1fb102(I):\n    x1 = rot270(I)\n    x2 = fork(equality, identity, rot90)\n    x3 = chain(flip, x2, x1)\n    x4 = sfilter(x1, x3)\n    x5 = fork(multiply, height, width)\n    x6 = argmax(x4, x5)\n    x7 = x6(I)\n    x8 = remove(x6, x7)\n    x9 = argmax(x8, x8)\n    x10 = lbind(chain, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x10, x11)\n    x13 = lbind(sfilter, x17)\n    x14 = chain(initset, x13, x12)\n    x15 = fork(upscale, identity, x14)\n    x16 = compose(rot90, x15)\n    x17 = power(x16, TWO)\n    x18 = x17(x6)\n    x19 = hconcat(x18, x17)\n    x20 = hmirror(x19)\n    x21 = vconcat(x19, x20)\n    x22 = vconcat(x21, x6)\n    x23 = x17(x22)\n    x24 = ofcolor(x23, ZERO)\n    x25 = asindices(x23)\n    x26 = outbox(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, x23)\n    x29 = mostcolor(x28)\n    x30 = color(x2)\n    x31 = matcher(first, x29)\n    x32 = compose(flip, x31)\n    x33 = sfilter(x1, x32)\n    x34 = sizefilter(x33, ONE)\n    x35 = merge(x34)\n    x36 = fill(x23, x30, x35)\n    x37 = paint(x36, x21)\n    O = x17(x37)\n    return O"], [1.0, "def solve_423c1d40(I):\n    x1 = leastcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = colorfilter(x2, x1)\n    x4 = merge(x3)\n    x5 = delta(x4)\n    x6 = first(x5)\n    x7 = neighbors(x6)\n    O = fill(I, FOUR, x7)\n    return O"], [1.0, "def solve_c9e2d240(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_b15c2fb9(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [1.0, "def solve_89f8f38b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_a884a768(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_9c01849c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, mat, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [1.0, "def solve_e2924178(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_40f86e64(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_bf036372(I):\n    x1 = replace(I, SEVEN, FIVE)\n    x2 = ofcolor(I, THREE)\n    x3 = portrait(x2)\n    x4 = branch(x3, dmirror, identity)\n    x5 = x4(I)\n    x6 = decrement(x5)\n    x7 = hsplit(x6, THREE)\n    x8 = rbind(ofcolor, THREE)\n    x9 = apply(x8, x7)\n    x10 = leastcommon(x9)\n    x11 = matcher(x8, x10)\n    x12 = extract(x7, x11)\n    O = x4(x12)\n    return O"], [1.0, "def solve_6446b59d(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_5c338025(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, T)\n    x4 = merge(x3)\n    x5 = color(x4)\n    x6 = palette(x2)\n    x7 = remove(x5, x6)\n    x8 = lbind(colorcount, x4)\n    x9 = argmin(x7, x8)\n    x10 = ofcolor(x1, x9)\n    x11 = ofcolor(x2, x9)\n    x12 = combine(x10, x11)\n    x13 = mapply(neighbors, x12)\n    x14 = difference(x12, x13)\n    x15 = toobject(x14, x1)\n    x16 = apply(initset, x15)\n    x17 = rbind(gravitate, x17)\n    x18 = compose(crement, x17)\n    x19 = fork(shift, identity, x18)\n    x20 = mapply(x19, x15)\n    x21 = cover(x1, x20)\n    x22 = paint(x21, x02)\n    O = rot90(x22)\n    return O"], [1.0, "def solve_4b657b37(I):\n    x1 = branch(I, x2, ZERO)\n    x2 = branch(x1, x3, x5)\n    O = branch(x1, x4, x2)\n    return O"], [1.0, "def solve_1c512565(I):\n    x1 = rot180(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = x3(I)\n    x6 = shape(x4)\n    x7 = canvas(ZERO, x6)\n    x8 = ofcolor(x4, ZERO)\n    x9 =iers(x8)\n    x10 = intersection(x8, x9)\n    x11 = fill(x7, ZERO, x10)\n    O = x2(x11)\n    return O"], [1.0, "def solve_91e2daab(I):\n    x1 = asindices(I)\n    x2 = shape(I)\n    x3 = halve(x2)\n    x4 = rbind(shoot, x3)\n    x5 = compose(x4, last)\n    x6 = fork(recolor, first, x5)\n    x7 = mapply(x6, x1)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_8f945ce1(I):\n    x1 = faffalf(I)\n    x2 = equality(x1, I)\n    x3 = branch(x2, ONE, SEVEN)\n    O = canvas(x3, UNITY)\n    return O"], [1.0, "def solve_5e966667(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(toobject, I)\n    x4 = compose(first, delta)\n    x5 = rbind(colorcount, x1)\n    x6 = matcher(x5, TWO)\n    x7 = chain(x6, x3, dneighbors)\n    x8 = rbind(sfilter, x7)\n    x9 = chain(first, x8, toindices)\n    x10 = fork(subtract, x4, x9)\n    x11 = fork(shoot, x4, x10)\n    x12 = mapply(x11, x2)\n    x13 = fill(I, x1, x12)\n    x14 = mapply(delta, x2)\n    O = fill(x13, ZERO, x14)\n    return O"], [1.0, "def solve_c764df95(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_c356f8f6(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_fe49977b(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_1988e87c(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x8)\n    x11 = palette(x9)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x8, x13)\n    x15 = ofcolor(x10, x13)\n    x16 = difference(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [1.0, "def solve_4be9b6dc(I):\n    x1 = halve(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [1.0, "def solve_c27661f2(I):\n    x1 =287257462\n    x2 = frontiers(I)\n    x3 = merge(x2)\n    x4 = difference(x1, x3)\n    x5 = mostcolor(x4)\n    x6 = objects(I, T, F, F)\n    x7 = color(x3)\n    x8 = matcher(color, x7)\n    x9 = matcher(color, x5)\n    x10 = fork(either, x8, x9)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x6, x11)\n    x13 = merge(x12)\n    x14 = palette(x13)\n    x15 = lbind(toobject, x13)\n    x16 = lbind(colorcount, x13)\n    x17 = chain(x16, x15, dneighbors)\n    x18 = matcher(x17, TWO)\n    x19 = rbind(adjacent, x2)\n    x20 = rbind(adjacent, x11)\n    x21 = fork(both, x18, x20)\n    x22 = compose(x21, initset)\n    x23 = sfilter(x12, x18)\n    x24 = sfilter(x12, x22)\n    x25 = product(x23, x24)\n    x26 = fork(combine, vfrontier, hfrontier)\n    x27 = mapply(x26, x25)\n    x28 = mostcolor(I)\n    x29 = fill(I, x28, x27)\n    O = fill(x29, x8, x27)\n    return O"], [1.0, "def solve_9bbe6b7f(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_81671bb3(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_594fcdbe(I):\n    x1 = frontiers(I)\n    x2 = palette(I)\n    x3 = compose(maximum, shape)\n    x4 = lbind(apply, x3)\n    x5 = lbind(shift, x1)\n    x6 = lbind(ofcolor, I)\n    x7 = compose(x4, x5)\n    x8 = subgrid(x2, I)\n    x9 = objects(x8, T, F, T)\n    x10 = colorfilter(x9, TWO)\n    x11 = apply(x7, x10)\n    x12 = mapply(x11, x11)\n    x13 = mapply(x5, x12)\n    x14 = replace(x13, ONE, SIX)\n    O = fill(x14, THREE, x12)\n    return O"], [1.0, "def solve_08232941(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [1.0, "def solve_f4e94f93(I):\n    x1 = astuple(SIX, THREE)\n    x2 = astuple(FOUR, FOUR)\n    x3 = astuple(ONE, x2)\n    x4 = initset(x3)\n    x5 = insert(x14, x4)\n    x6 = insert(x1, x5)\n    x7 = apply(x6, x6)\n    x8 = crop(I, ORIGIN, THREE_BY_THREE)\n    O = asindices(x8)\n    return O"], [1.0, "def solve_d48bfcea(I):\n    x1 = first(I)\n    x2 = last(I)\n    x3 = equality(x1, x2)\n    x4 = crop(I, ORIGIN, THREE_BY_THREE)\n    x5 = branch(x3, x2, x4)\n    x6 = vconcat(I, x5)\n    O = replace(x6, ONE, TWO)\n    return O"], [1.0, "def solve_98cd6245(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = fork(multiply, height, width)\n    x4 = x3(I)\n    x5 = astuple(ONE, x4)\n    x6 = mostcolor(I)\n    x7 = canvas(x6, x5)\n    x8 = backdrop(x7)\n    x9 = lbind(hsplit, x8)\n    x10 = matcher(x9, x4)\n    x11 = fork(combine, vfrontier, hfrontier)\n    x12 = compose(x11, x10)\n    x13 = rbind(ofcolor, ZERO)\n    x14 = rbind(mapply, x12)\n    x15 = lbind(lbind, shift)\n    x16 = chain(x13, x14, x15)\n    x17 = apply(x16, x19)\n    O = paint(x7, x17)\n    return O"], [1.0, "def solve_fc0118f4(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    x5 = palette(x4)\n    x6 = intersection(x5, x2)\n    x7 = lbind(colorcount, x4)\n    x8 = argmax(x6, x7)\n    x9 = remove(x8, x6)\n    x10 = rbind(contained, x9)\n    x11 = compose(x10, color)\n    x12 = sfilter(x3, x11)\n    x13 = lbind(colorcount, x4)\n    x14 = argmax(x12, x13)\n    x15 = objects(x12, T, F, F)\n    x16 = colorfilter(x15, x14)\n    x17 = difference(x15, x16)\n    x18 = apply(leftmost, x17)\n    x19 = size(x18)\n    x20 = apply(uppermost, x17)\n    x21 = size(x20)\n    x22 = greater(x19, x21)\n    x23 = rbind(adjacent, x28)\n    x24 = rbind(adjacent, x22)\n    x25 = chain(x23, x24, last)\n    x26 = compose(x22, first)\n    x27 = fork(both, x25, x26)\n    x28 = sfilter(x18, x27)\n    x29 = compose(toindices, first)\n    x30 = lbind(mapply, x29)\n    x31 = chain(x30, x29, first)\n    x32 = fork(recolor, x31, x30)\n    x33 = mapply(x32, x18)\n    x34 = paint(x1, x33)\n    O = x38(x34)\n    return O"], [1.0, "def solve_5d582e24(I):\n    x1 = objects(I, T, F, T)\n    x2 = palette(I)\n    x3 = lbind(sfilter, x1)\n    x4 = rbind(compose, palette)\n    x5 = lbind(lbind, contained)\n    x6 = chain(x3, x4, x5)\n    x7 = compose(size, x6)\n    x8 = argmax(x2, x7)\n    x9 = rbind(colorcount, x8)\n    x10 = valmax(x2, x9)\n    x11 = matcher(x9, x10)\n    x12 = sfilter(x1, x11)\n    x13 = merge(x12)\n    x14 = palette(x13)\n    x15 = lbind(colorcount, x13)\n    x16 = argmin(x14, x15)\n    x17 = rbind(colorcount, x16)\n    x18 = argmax(x12, x17)\n    x19 = apply(ulcorner, x12)\n    x20 = lbind(shift, x18)\n    x21 = mapply(x20, x19)\n    x22 = paint(I, x21)\n    O = rot90(x22)\n    return O"], [1.0, "def solve_1ffb18e1(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_e9dc5f5d(I):\n    x1 = astuple(ONE, THREE)\n    x2 = size(I)\n    x3 = decrement(x2)\n    x4 = astuple(x3, ONE)\n    x5 = canvas(ZERO, x4)\n    x6 = tojvec(x3)\n    x7 = rbind(shoot, x6)\n    x8 = crement(x2)\n    x9 = lefthalf(x8)\n    x10 = insert(x7, x9)\n    x11 = width(I)\n    x12 = shoot(x4, DOWN)\n    x13 =tojvec(x12)\n    x14 = rbind(shoot, x13)\n    x15 = creine(x14)\n    x16 = insert(x7, x15)\n    x17 = mapply(x7, x11)\n    x18 = combine(x10, x17)\n    x19 = fill(x5, ZERO, x18)\n    O = replace(x19, ZERO, ONE)\n    return O"], [1.0, "def solve_5d37e618(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_4618d3f2(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_396f6c7c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_5e276d71(I):\n    x1 = rot35(I)\n    x2 = rbind(shoot, UP)\n    x3 = compose(x2, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    O = paint(x1, x5)\n    return O"], [1.0, "def solve_3ad9e0a5(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_4a12020f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = rbind(multiply, THREE)\n    x8 = apply(x7, x6)\n    O = rot180(x6)\n    return O"], [1.0, "def solve_fe998a9f(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_268ab6ab(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x4)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x6)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x4)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x4)\n    x26 = x22(x6)\n    x27 = x25(x2)\n    x28 = paint(x18, x27)\n    x29 = paint(x28, x26)\n    x30 = paint(x29, x25)\n    O = paint(x30, x24)\n    return O"], [1.0, "def solve_df958280(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_3d08137f(I):\n    x1 =50005\n    x2 = fgpartition(I)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = difference(x1, x4)\n    x6 = objects(I, T, F, T)\n    x7 = colorfilter(x6, ZERO)\n    x8 = rbind(shoot, DOWN)\n    x9 = mapply(x8, x7)\n    x10 = double(TEN)\n    x11 = rbind(greater, x10)\n    x12 = compose(x11, size)\n    x13 = mapply(x12, x9)\n    x14 = fill(I, ZERO, x13)\n    x15 = replace(x14, ZERO, EIGHT)\n    O = fill(x15, dmirror, x15)\n    return O"], [1.0, "def solve_16d90b02(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_a1b1b80a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = connect(x3, x4)\n    x8 = connect(x3, x5)\n    x9 = combine(x7, x8)\n    O = leastcolor(x9)\n    return O"], [1.0, "def solve_84167e7e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_b177332f(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_d0f48e69(I):\n    x1 = rbind(shoot, UNITY)\n    x2 = compose(x1, center)\n    x3 = fork(recolor, color, x2)\n    x4 = mapply(x3, x1)\n    x5 = objects(I, T, F, T)\n    x6 = rbind(colorcount, SIX)\n    x7 = valmax(x5, x6)\n    x8 = matcher(x6, x7)\n    x9 = sfilter(x8, x8)\n    x10 = merge(x9)\n    x11 = cover(I, x10)\n    x12 = rbind(toobject, I)\n    x13 = chain(delta, x12, delta)\n    x14 = mapply(x13, x9)\n    O = paint(x11, x14)\n    return O"], [1.0, "def solve_11dc1aab(I):\n    x1 = ofcolor(I, ONE)\n    x2 = lbind(rbind, shoot)\n    x3 = lbind(mapply, x2)\n    x4 = rbind(shoot, UP)\n    x5 = rbind(shoot, DOWN)\n    x6 = fork(combine, x3, x5)\n    x7 = fork(intersection, x1, x6)\n    x8 = size(x1)\n    x9 = decrement(x8)\n    x10 = index(I, x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, LEFT, RIGHT)\n    x13 = compose(size, x12)\n    x14 = decrement(x13)\n    x15 = index(I, x14)\n    x16 = equality(x15, ZERO)\n    x17 = branch(x16,leftmost, uppermost)\n    x18 = x17(x14)\n    x19 = shift(x18, UNITY)\n    x20 = x17(x19)\n    x21 = first(x20)\n    x22 = last(x21)\n    x23 = x17(x22)\n    x24 = color(x23)\n    x25 = branch(x11, RIGHT, LEFT)\n    x26 = x25(x20)\n    x27 = initset(x26)\n    x28 = insert(x25, x27)\n    x29 = insert(x24, x28)\n    x30 = insert(x22, x29)\n    x31 =recbind(greater, x30)\n    x32 = compose(x31, ulcorner)\n    x33 = sfilter(x30, x32)\n    x34 = merge(x33)\n    x35 = cover(I, x34)\n    x36 = subgrid(x35, x35)\n    O = paint(x36, x33)\n    return O"], [1.0, "def solve_299ba4db(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = EIGHT(x4)\n    return O"], [1.0, "def solve_af3078d2(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_4dd02a86(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_d77aeb5b(I):\n    x1 = dmirror(I)\n    x2 = equality(x1, I)\n    x3 = compose(dedupe, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = last(x6)\n    x8 = first(x6)\n    x9 = last(x6)\n    x10 = switch(x7, x8, x9)\n    x11 = forward(x10)\n    x12 = replace(x11, ONE, x6)\n    x13 = ofcolor(x12, ONE)\n    x14 = combine(x13, x7)\n    x15 = fill(x12,428, x14)\n    x16 = ofcolor(x15, ONE)\n    x17 = mapply(neighbors, x16)\n    x18 = difference(x17, x15)\n    O = fill(x15, EIGHT, x18)\n    return O"], [1.0, "def solve_bfe83657(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_73f4927b(I):\n    x1 = asindices(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(greater, TWO)\n    x4 = compose(x3, size)\n    x5 = sfilter(x2, x4)\n    x6 = totuple(x5)\n    x7 = apply(color, x6)\n    x8 = apply(center, x6)\n    x9 = pair(x7, x8)\n    x10 = fill(I, ZERO, x1)\n    x11 = paint(x10, x9)\n    x12 = rbind(greater, ONE)\n    x13 = compose(dedupe, totuple)\n    x14 = chain(x12, size, x13)\n    x15 = sfilter(x11, x14)\n    x16 = rot90(x15)\n    x17 = sfilter(x16, x14)\n    O = rot270(x17)\n    return O"], [1.0, "def solve_d799a856(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(merge, x3)\n    x5 = merge(x4)\n    x6 = toindices(x5)\n    x7 = rbind(shoot, UP_RIGHT)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    x10 = fill(I, EIGHT, x9)\n    x11 = hmirror(x10)\n    x12 = index(x11, ORIGIN)\n    x13 = shoot(ORIGIN, UNITY)\n    x14 = fill(x10, DOWN, x13)\n    x15 = indexcolors(x11)\n    x16 = apply(Example, x15)\n    x17 = remove(x16, x15)\n    x18 = lbind(mapply, x7)\n    x19 = chain(x18, positive, size)\n    x20 = branch(x17, x19, x15)\n    O = x19(x20)\n    return O"], [1.0, "def solve_b292fa38(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = initset(x1)\n    x5 = chain(numcolors, lefthalf, tophalf)\n    x6 = insert(x2, x4)\n    x7 = insert(x3, x6)\n    x8 = insert(x7, x5)\n    x9 = argmax(x8, x5)\n    x10 = cover(x1, x9)\n    O = paint(x10, x4)\n    return O"], [1.0, "def solve_f662032c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_860b98fc(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(greater, size, dedupe)\n    x3 = equality(x1, TWO)\n    x4 = branch(x3, height, width)\n    x5 = x4(I)\n    x6 = equality(ONE, x5)\n    x7 = branch(x6, vsplit, hsplit)\n    x8 = x7(I, TWO)\n    x9 = order(x8, numcolors)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = objects(x11, F, F, T)\n    x13 = merge(x12)\n    x14 = mostcolor(x13)\n    x15 = matcher(first, x14)\n    x16 = compose(flip, x15)\n    x17 = rbind(sfilter, x16)\n    x18 = mostcolor(x10)\n    x19 = lbind(recolor, x18)\n    x20 = rbind(sfilter, x15)\n    x21 = compose(toindices, x20)\n    x22 = chain(x19, x21, normalize)\n    x23 = objects(x11, T, F, T)\n    x24 = colorfilter(x23, x18)\n    x25 = rbind(bordering, x10)\n    x26 = compose(flip, x25)\n    x27 = mfilter(x24, x26)\n    x28 = paint(x11, x27)\n    x29 = replace(x28, x18, x137)\n    x30 = x22(x29)\n    x31 = x22(x30)\n    x32 = flip(x6)\n    x33 = branch(x32, invert, outbox)\n    x34 = branch(x32, subgrid, x33)\n    x35 = apply(x34, x32)\n    O = x17(x35)\n    return O"], [1.0, "def solve_0784a25f(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = compose(x2, x1)\n    x4 = fork(intersection, x1, x3)\n    x5 = compose(size, x4)\n    x6 = palette(I)\n    x7 = matcher(x5, ZERO)\n    x8 = sfilter(x6, x7)\n    x9 = totuple(x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = mapply(neighbors, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = ofcolor(I, x11)\n    x17 = mapply(neighbors, x16)\n    x18 = toobject(x17, I)\n    x19 = mostcolor(x18)\n    x20 = rbind(shoot, UNITY)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = fork(combine, x20, x21)\n    x23 = rbind(shoot, UP_RIGHT)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = fork(combine, x23, x24)\n    x26 = fork(combine, x22, x25)\n    x27 = ofcolor(I, x11)\n    x28 = ofcolor(I, x10)\n    x29 = combine(x27, x28)\n    x30 = mapply(x26, x29)\n    x31 = ofcolor(I, x15)\n    x32 = intersection(x31, x30)\n    x33 = ofcolor(I, x19)\n    x34 = intersection(x33, x30)\n    x35 = fill(I, x10, x32)\n    O = fill(x35, x11, x34)\n    return O"], [1.0, "def solve_07cfb384(I):\n    x1 = asobject(I)\n    x2 = lbind(shift, x1)\n    x3 = compose(x2, decrement)\n    x4 = mapply(x3, x1)\n    O = paint(I, x4)\n    return O"], [1.0, "def solve_90f29ed4(I):\n    x1 =41388428\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = solve(doubleneighbors, x3)\n    x5 = astuple(ONE, NINE)\n    x6 = canvas(ZERO, x5)\n    x7 = fill(x6, ONE, x4)\n    x8 = hsplit(x7, THREE)\n    O = merge(x8)\n    return O"], [1.0, "def solve_612c7ac5(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_09dc8890(I):\n    x1 = hconcat(I, I)\n    x2 = vconcat(x1, x1)\n    x3 = asindices(x2)\n    x4 = mostcolor(I)\n    x5 = ofcolor(x2, x4)\n    x6 = difference(x3, x5)\n    x7 = mapply(ineighbors, x6)\n    O = underfill(x2, EIGHT, x7)\n    return O"], [1.0, "def solve_59af1e5e(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_26ae7cbc(I):\n    x1 = hsplit(I, TWO)\n    x2 = apply(numcolors, x1)\n    x3 = equality(x2, TWO_BY_TWO)\n    x4 = branch(x3, hsplit, vsplit)\n    x5 = x4(I, TWO)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 = palette(x6)\n    x9 = palette(x7)\n    x10 = intersection(x8, x9)\n    x11 = first(x10)\n    x12 = palette(x6)\n    x13 = other(x12, x11)\n    x14 = palette(x7)\n    x15 = other(x14, x11)\n    x16 = shape(x6)\n    x17 = canvas(x11, x16)\n    x18 = ofcolor(x6, x13)\n    x19 = ofcolor(x7, x15)\n    x20 = combine(x18, x19)\n    O = fill(x17, SIX, x20)\n    return O"], [1.0, "def solve_6d19cad6(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_a9ade526(I):\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, x1)\n    x3 = lbind(toobject, I)\n    x4 = chain(x2, x3, ZERO)\n    x5 = fork(both, x4, x5)\n    x6 = compose(5, x5)\n    x7 = fork(hmatching, x6, identity)\n    x8 = compose(NEG_ONE, x7)\n    x9 = lbind(apply, x8)\n    x10 = chain(even, x9, leastcolor)\n    x11 = lbind(sfilter, x1)\n    x12 = compose(dmirror, x11)\n    x13 = lbind(lbind, shift)\n    x14 = rbind(compose, x12)\n    x15 = lbind(lbind, occurrences)\n    x16 = chain(x13, x14, x15)\n    x17 = rbind(compose, x10)\n    x18 = lbind(lbind, occurrences)\n    x19 = chain(x17, x18, xin)\n    x20 = rbind(mapply, x10)\n    x21 = compose(x20, x7)\n    x22 = fork(compose, x21, x7)\n    x23 = pair(x15, x17)\n    x24 = mapply(x22, x23)\n    O = underfill(I, ONE, x24)\n    return O"], [1.0, "def solve_0acc32c5(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_86cf3b27(I):\n    x1 = asobject(I)\n    x2 = hperiod(x1)\n    x3 = height(x1)\n    x4 = lbind(multiply, x3)\n    x5 = height(I)\n    x6 = subtract(x3, x5)\n    x7 = rot90(I)\n    x8 = rot180(I)\n    x9 = astuple(x6, x7)\n    x10 = astuple(x8, x9)\n    x11 = papply(shift, x7, x10)\n    x12 = apply(hmirror, x11)\n    x13 = mapply(vmirror, x12)\n    x14 = astuple(x6, x13)\n    x15 = canvas(x4, x14)\n    x16 = paint(x15, x13)\n    O = rot270(x16)\n    return O"], [1.0, "def solve_244c4426(I):\n    x1 = lbind(greater, TWO)\n    x2 = compose(x1, size)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(merge, x3, identity)\n    x5 = apply(x4, I)\n    x6 = chain(identity, merge, hmirror)\n    x7 = apply(x6, x5)\n    x8 = merge(x7)\n    x9 = fill(I, FOUR, x8)\n    x10 = compose(hmirror, vmirror)\n    x11 = fork(combine, x10, x9)\n    x12 = apply(x11, x5)\n    O = fill(x9, TWO, x12)\n    return O"], [1.0, "def solve_1e92da8f(I):\n    x1 = hmirror(I)\n    x2 = papply(pair, x1, I)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    O = apply(x2, x6)\n    return O"], [1.0, "def solve_2ca75bd8(I):\n    x1 = ofcolor(I, ONE)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = ofcolor(I, x4)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = mfilter(x5, x7)\n    x9 = fill(I, TWO, x8)\n    x10 = ofcolor(I, x4)\n    O = fill(x9, FOUR, x10)\n    return O"], [1.0, "def solve_c5e07062(I):\n    x1 = astuple( SEVEN, FIVE)\n    x2 = canvas(ZERO, x1)\n    x3 = tojvec(SIX)\n    x4 = index(I, x3)\n    x5 = equality(x4, FOUR)\n    x6 = branch(x5, lefthalf, tophalf)\n    x7 = branch(x5, righthalf, bottomhalf)\n    x8 = x4(I)\n    x9 = x7(I)\n    x10 = shape(x8)\n    x11 = canvas(x8, x10)\n    x12 = intersection(x9, x11)\n    O = fill(x11, TWO, x12)\n    return O"], [1.0, "def solve_d8171682(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_0960938f(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x11, x16)\n    x20 = ofcolor(x18, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, SIX, x21)\n    return O"], [1.0, "def solve_3be0c54b(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_8fc3afc9(I):\n    x1 = dmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = objects(x2, F, F, T)\n    x4 = argmin(x3, numcolors)\n    x5 = astuple(ONE, x4)\n    x6 = subgrid(x4, x5)\n    x7 = lefthalf(x6)\n    x8 = righthalf(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [1.0, "def solve_615572ce(I):\n    x1 = command36(I, EIGHT)\n    x2 = d037(x1)\n    x3 = apply(initset, x2)\n    x4 = rbind(rapply, I)\n    x5 = compose(first, x4)\n    x6 = compose(c59eb873, x5)\n    x7 = fork(recolor, x6, identity)\n    x8 = mapply(x7, x3)\n    x9 = palette(I)\n    x10 = remove(ZERO, x9)\n    x11 = other(x10, x8)\n    x12 = ofcolor(I, x11)\n    x13 = argmin(x12, last)\n    x14 = replace(I, x11, ZERO)\n    x15 = ofcolor(x14, x15)\n    x16 = subgrid(x15, x14)\n    x17 = mapply(x16, x16)\n    O = replace(x17, x11, ZERO)\n    return O"], [1.0, "def solve_2a6fb118(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_238d1110(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 = difference(x1, x2)\n    x9 = compose(normalize, toindices)\n    x10 = x9(x6)\n    x11 = x9(x7)\n    x12 = matcher(x9, x10)\n    x13 = matcher(x9, x11)\n    x14 = extract(x8, x12)\n    x15 = extract(x8, x13)\n    x16 = ulcorner(x6)\n    x17 = ulcorner(x7)\n    x18 = ulcorner(x14)\n    x19 = ulcorner(x15)\n    x20 = subtract(x16, x18)\n    x21 = subtract(x17, x19)\n    x22 = move(I, x14, x20)\n    O = move(x22, x15, x21)\n    return O"], [1.0, "def solve_be76cc93(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_b4eb0f69(I):\n    O = upscale(I, TWO)\n    return O"], [1.0, "def solve_dccf82fc(I):\n    x1 = fill(I, FOUR, x2)\n    x2 = astuple(TWO, FOUR)\n    x3 = size(x1)\n    x4 = order(x1, leftmost)\n    x5 = apply(color, x4)\n    x6 = rbind(canvas, x5)\n    x7 = apply(x6, x5)\n    x8 = merge(x7)\n    x9 = dmirror(x8)\n    x10 = subtract(NINE, x3)\n    x11 = astuple(x10, x4)\n    x12 = canvas(ZERO, x11)\n    x13 = hconcat(x9, x12)\n    x14 = hsplit(x13, TWO)\n    x15 = merge(x14)\n    x16 = crop(x15, ORIGIN, x2)\n    x17 = crop(x15, DOWN, x2)\n    x18 = crop(x15, TWO_BY_ZERO, x2)\n    x19 = vmirror(x17)\n    x20 = vconcat(x16, x19)\n    O = vconcat(x20, x18)\n    return O"], [1.0, "def solve_5aa066d6(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_0379e05a(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_650c1a9e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = width(I)\n    x5 = multiply(x4, x4)\n    x6 = intersection(x1, x5)\n    x7 = canvas(x3, x6)\n    x8 = fork(multiply, height, width)\n    x9 = lbind(shift, x2)\n    x10 = compose(x9, x8)\n    x11 = mapply(x10, x6)\n    O = fill(x7, TWO, x11)\n    return O"], [1.0, "def solve_6ba38a39(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_c6f6f14a(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_af881021(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_1271870d(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = compose(x2, x1)\n    x4 = fork(intersection, x1, x3)\n    x5 = compose(size, x4)\n    x6 = palette(I)\n    x7 = matcher(x5, ZERO)\n    x8 = sfilter(x6, x7)\n    x9 = totuple(x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = mapply(neighbors, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = ofcolor(I, x11)\n    x17 = mapply(neighbors, x16)\n    x18 = toobject(x17, I)\n    x19 = mostcolor(x18)\n    x20 = rbind(shoot, UNITY)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = fork(combine, x20, x21)\n    x23 = rbind(shoot, UP_RIGHT)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = fork(combine, x23, x24)\n    x26 = fork(combine, x22, x25)\n    x27 = ofcolor(I, x11)\n    x28 = ofcolor(I, x10)\n    x29 = combine(x27, x28)\n    x30 = mapply(x26, x29)\n    x31 = ofcolor(I, x15)\n    x32 = intersection(x31, x30)\n    x33 = ofcolor(I, x19)\n    x34 = intersection(x33, x30)\n    x35 = fill(I, x10, x32)\n    O = fill(x35, x11, x34)\n    return O"], [1.0, "def solve_3def0451(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_a9e577f8(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [1.0, "def solve_4ced8a9e(I):\n    x1 = matcher(identity, ZERO)\n    x2 = branch(x1, ONE, SEVEN)\n    O = x2(I)\n    return O"], [1.0, "def solve_c5b26daf(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = subgrid(x2, I)\n    x3 = shape(x2)\n    x4 = halve(x3)\n    x5 = rbind(multiply, x4)\n    x6 = rbind(divide, x3)\n    x7 = compose(x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = sfilter(x1, x8)\n    x10 = compose(increment, minimum)\n    x11 = chain(decrement,arymost, x10)\n    x12 = compose(x11, last)\n    x13 = fork(connect, x12, x5)\n    x14 = compose(last, first)\n    x15 = compose(last, x14)\n    x16 = fork(equality, x13, x15)\n    x17 = mfilter(x9, x16)\n    O = fill(x6, EIGHT, x17)\n    return O"], [1.0, "def solve_fe512e1d(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_7ec6cc2e(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_dc59fb5e(I):\n    O = upscale(I, THREE)\n    return O"], [1.0, "def solve_e014b216(I):\n    x1 = ONE(I)\n    x2 = canvas(ZERO, THREE_BY_THREE)\n    x3 = asobject(x2)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, SIX, x6)\n    return O"], [1.0, "def solve_faa0e83c(I):\n    x1 = palette(I)\n    x2 = contained(ONE, x1)\n    x3 = branch(x2, ZERO, EIGHT)\n    x4 = canvas(x3, UNITY)\n    x5 = connect(ORIGIN, UNITY)\n    x6 = recolor(ONE, x5)\n    O = x3(x4)\n    return O"], [1.0, "def solve_b4b2f7d9(I):\n    x1 = astuple(SIX, FIVE)\n    x2 = canvas(ZERO, x1)\n    x3 = paint(x2, x2)\n    O = replace(x3, ONE, TWO)\n    return O"], [1.0, "def solve_6aba0774(I):\n    x1 = fgpartition(I)\n    x2 = valmax(x1, size)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, x2, x2)\n    x5 = shift(x4, UNITY)\n    x6 = merge(x1)\n    x7 = other(x1, x6)\n    x8 = equality(x2, FOUR)\n    x9 = shift(x8, UP_RIGHT)\n    x10 = paint(I, x9)\n    x11 = branch(x3, x2, x9)\n    x12 = cover(x10, x11)\n    x13 = branch(x8, x2, x9)\n    x14 = multiply(TEN, TEN)\n    x15 = branch(x41, x13, x14)\n    x16 = fork(combine, vfrontier, hfrontier)\n    x17 = x16(x15)\n    O = underfill(x9, x7, x17)\n    return O"], [1.0, "def solve_839039cf(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_efee02e0(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_c3f94ca3(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = cmirror(x4)\n    x6 = papply(pair, x4, x5)\n    x7 = apply(x3, x6)\n    x8 = vmirror(x7)\n    x9 = papply(pair, x7, x8)\n    x10 = apply(x3, x9)\n    x11 = hmirror(x10)\n    x12 = papply(pair, x11, x10)\n    x13 = apply(x3, x12)\n    x14 = vmirror(x13)\n    x15 = papply(pair, x13, x14)\n    x16 = apply(x3, x15)\n    x17 = hmirror(x16)\n    x18 = papply(pair, x16, x17)\n    x19 = apply(x3, x18)\n    x20 = vmirror(x19)\n    x21 = papply(pair, x19, x20)\n    x22 = apply(x3, x21)\n    x23 = vmirror(x22)\n    x24 = papply(pair, x21, x23)\n    x25 = apply(x3, x24)\n    x26 = shoot(ORIGIN, UNITY)\n    x27 = mapply(x26, x25)\n    O = fill(x1, ZERO, x27)\n    return O"], [1.0, "def solve_a15c64b7(I):\n    x1 = lbind(fork, subtract)\n    x2 = lbind(chain, ZERO)\n    x3 = lbind(x2, x1)\n    x4 = lbind(rbind, add)\n    x5 = chain(x4, x3, numcolors)\n    x6 = lbind(chain, x5)\n    x7 = rbind(x6, toindices)\n    x8 = lbind(rbind, extract)\n    x9 = compose(last, last)\n    x10 = chain(x8, x7, x9)\n    x11 = compose(first, last)\n    x12 = lbind(fork, greater)\n    x13 = compose(x12, x11)\n    x14 = lbind(fork, astuple)\n    x15 = compose(x14, x13)\n    x16 = rbind(sfilter, x15)\n    x17 = compose(x16, ulcorner)\n    x18 = compose(x16, urcorner)\n    x19 = compose(x16, shoot)\n    x20 = chain(x17, x18, x19)\n    x21 = compose(x16, llcorner)\n    x22 = compose(x16, lrcorner)\n    x23 = chain(x17, x21, x22)\n    x24 = rbind(mapply, x3)\n    x25 = chain(x17, x43, x24)\n    x26 = compose(x25, x23)\n    x27 = fork(recolor, x26, x20)\n    x28 = mapply(x27, x1)\n    O = paint(I, x28)\n    return O"], [1.0, "def solve_2d18b4dd(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_2d1f4f3c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_6a833f01(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_a6bbe9db(I):\n    x1 = rot180(I)\n    x2 = matcher(identity, ZERO)\n    x3 = rbind(sfilter, x2)\n    x4 = compose(size, x3)\n    x5 = apply(x4, x1)\n    x6 = merge(x5)\n    x7 = lbind(subtract, x6)\n    x8 = chain(increment, x7, size)\n    x9 = apply(x8, x1)\n    x10 = ZERO(x6)\n    x11 = lbind(subtract, x10)\n    x12 = chain(x11, x8, size)\n    x13 = rbind(sfilter, x12)\n    x14 = rbind(subgrid, I)\n    x15 = chain(asobject, x13, x14)\n    x16 = apply(x15, x9)\n    x17 = ZERO(x10)\n    x18 = lbind(subtract, x17)\n    x19 = chain(invert, x18, shift)\n    x20 = fork(shift, identity, x19)\n    x21 = mapply(x20, x16)\n    O = paint(x1, x21)\n    return O"], [1.0, "def solve_f6c4f2f2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = shape(I)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(I, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmin(x11, numcolors)\n    x13 = normalize(x12)\n    x14 = toindices(x13)\n    x15 = increment(x4)\n    x16 = increment(x15)\n    x17 = increment(x5)\n    x18 = increment(x17)\n    x19 = astuple(x16, x18)\n    x20 = lbind(shift, x14)\n    x21 = rbind(multiply, x19)\n    x22 = chain(x20, x21, last)\n    x23 = fork(recolor, first, x22)\n    x24 = normalize(x12)\n    x25 = mapply(x23, x24)\n    O = paint(x9, x25)\n    return O"], [1.0, "def solve_6ee84d4f(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_b09a1bcf(I):\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, x1)\n    x3 = compose(maximum, x2)\n    x4 = lbind(apply, x3)\n    x5 = chain(positive, size, x4)\n    x6 = lbind(sfilter, x3)\n    x7 = compose(x6, x3)\n    x8 = rbind(compose, x3)\n    x9 = lbind(lbind, contained)\n    x10 = chain(x8, x9, x7)\n    x11 = apply(x10, x5)\n    x12 = sfilter(x11, x7)\n    x13 = fork(hmatching, identity, vmirror)\n    x14 = mfilter(x12, x13)\n    x15 = mostcolor(I)\n    x16 = paint(I, x15)\n    x17 = objects(x16, T, F, T)\n    x18 = compose(backdrop, inbox)\n    x19 = apply(x18, x17)\n    x20 = mfilter(x19, x5)\n    O = fill(x16, EIGHT, x20)\n    return O"], [1.0, "def solve_38c09ef6(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = merge(x5)\n    x7 = palette(x6)\n    x8 = lbind(mfilter, x5)\n    x9 = lbind(matcher, x4)\n    x10 = compose(x8, x9)\n    x11 = fork(sfilter, identity, x10)\n    x12 = apply(x11, x7)\n    x13 = merge(x12)\n    x14 = lbind(colorcount, I)\n    x15 = argmin(x12, x14)\n    x16 = ofcolor(I, x15)\n    x17 = recolor(x15, x16)\n    x18 = compose(initset, x17)\n    x19 = fork(min, identity, x18)\n    x20 = ofcolor(I, x15)\n    x21 = rbind(shoot, UNITY)\n    x22 = DOWN(x21)\n    x23 = leftmost(x20)\n    x24 = height(I)\n    x25 = increment(x24)\n    x26 = interval(ZERO, x25, ONE)\n    x27 = apply(double, x26)\n    x28 = mapply(increment, x27)\n    x29 = apply(tojvec, x28)\n    x30 = prapply(shift, x27, x29)\n    x31 = mapply(x19, x30)\n    x32 = paint(I, x31)\n    x33 = biind(canvas, NEG_ONE)\n    x34 = rbind(apply, x33)\n    x35 = lbind(recolor, x15)\n    x36 = chain(x34, x35, x29)\n    x37 = mapply(x36, x34)\n    O = underpaint(x32, x37)\n    return O"], [1.0, "def solve_d4ef95a8(I):\n    x1 = ofcolor(I, TWO)\n    x2 = portrait(x1)\n    x3 = branch(x2, vsplit, hsplit)\n    x4 = x3(I, TWO)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = vmirror(x5)\n    x8 = vconcat(x7, x7)\n    x9 = hmirror(x8)\n    O = vconcat(x9, x8)\n    return O"], [1.0, "def solve_f46e8227(I):\n    x1 = trim(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(x2)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(x2)\n    x6 = lefthalf(x5)\n    x7 = bottomhalf(x2)\n    x8 = righthalf(x7)\n    x9 = palette(x4)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x4)\n    x13 = palette(x4)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x4)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x5)\n    x24 = x22(x6)\n    x25 = x22(x4)\n    x26 = x22(x6)\n    x27 = lefthalf(x18)\n    x28 = lefthalf(x27)\n    x29 = righthalf(x28)\n    x30 = righthalf(x29)\n    x31 = palette(x23)\n    x32 = palette(x24)\n    x33 = intersection(x31, x32)\n    x34 = first(x33)\n    x35 = shape(x4)\n    x36 = canvas(x35, x32)\n    x37 = intersection(x33, x32)\n    x38 = paint(x36, x37)\n    O = x22(x38)\n    return O"], [1.0, "def solve_4f29a2df(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_e0ad5289(I):\n    x1 = fork(equality, identity, dmirror)\n    x2 = compose(flip, x1)\n    O = extract(x1, x2)\n    return O"], [1.0, "def solve_fc18abc6(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = Fgpartition(I)\n    x4 = merge(x3)\n    x5 = cover(I, x4)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = leastcolor(I)\n    O = fill(x5, x7, x6)\n    return O"], [1.0, "def solve_841ba802(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_4cba1dbd(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_ed95fbb4(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_68ea083f(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = multiply(x4, x4)\n    x6 = canvas(x3, x5)\n    x7 = asobject(I)\n    x8 = shift(x7, UNITY)\n    O = paint(x6, x8)\n    return O"], [1.0, "def solve_ddc996f8(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.1, "def solve_8b1069cd(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 =1000(I)\n    x2 =5000(x1, x4)\n    x3 = compose(positive, size)\n    x4 = rbind(sfilter, x3)\n    x5 = chain(x2, x4, frontiers)\n    x6 = merge(x2)\n    x7 = contained(x6, x5)\n    x8 = height(x7)\n    x9 = width(x7)\n    x10 = rbind(multiply, x8)\n    x11 = power(x10, TWO)\n    x12 = compose(rot90, x11)\n    x13 = power(x12, FOUR)\n    x14 = x15(I)\n    x15 = x16(I)\n    x16 = matcher(first, x14)\n    x17 = compose(flip, x16)\n    x18 = sfilter(x15, x17)\n    x19 = lbind(ofcolor, x14)\n    x20 = compose(x19, asobject)\n    x21 = fork(subtract, x20, identity)\n    x22 = compose(first, x21)\n    x23 = fork(mapply, x22, identity)\n    x24 = chain(x19, x23, x14)\n    x25 =594color(x18, NEG_ONE)\n    x26 = lone(x25)\n    x27 = asindices(x18)\n    x28 = matcher(first, NEG_ONE)\n    x29 = rbind(sfilter, x28)\n    x30 = lbind(shift, x27)\n    x31 = chain(x29, x30, x29)\n    x32 = mapply(x31, x73)\n    x33 = replace(x16, NEG_ONE, ZERO)\n    x34 = dmirror(x32)\n    x35 = combine(x33, x34)\n    x36 = flip(x35)\n    x37 = asindices(x16)\n    x38 = toobject(x37, x16)\n    x39 = multiply(x38, UNITY)\n    x40 = rbind"], [1.1, "def solve_f112163f(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_2952bcf0(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = rot90(I)\n    x2 = apply(mostcommon, I)\n    x3 = hmirror(x1)\n    x4 =oe(x3, I)\n    x5 = merge(x4)\n    x6 = palette(x5)\n    x7 =5031982586\n    8713671684\n    3955068690\n    0764217343\n    5380956567\n    \"\"\"\n    x1 = asindices(x1)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = ofcolor(x3, x4)\n    x6 = vmirror(x5)\n    x7 = hmirror(x5)\n    x8 = astuple(x6, x7)\n    x9 = combine(x leftmost, x8)\n    x10 = hmirror(x7)\n    x11 = invert(x10)\n    x12 = increment(x11)\n    x13 = order(x9, x12)\n    x14 = difference(x9, x13)\n    x15 = toobject(x14, x13)\n    x16 = apply(increment, x15)\n    x17 = apply(tojvec, x16)\n    x18 = prapply(shift, x17, x9)\n    x19 = mapply(x18, x14)\n    x20 = ofcolor(x19, x4)\n    x21 = lbind(shift, x19)\n    x22 = mapply(x21, x20)\n    x23 = rightmost(x20)\n    x24 = lbind(shift, x20)\n    x25 = mapply(x24, x23)\n    x26 = ulcorner(x20)\n    x27 = lbind(shift, x27)\n    x28 = mapply(x27, x22)\n    x29 = sfilter(x24, x18)\n    x30 = sizefilter(x29, x28)\n    x31 = lbind(shift, x27)\n    x32 ="], [1.1, "def solve_75434d9a(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_a7ea8a26(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = compose(first, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = compose(last, last)\n    x8 = totuple(x2)\n    x9 = apply(x7, x8)\n    x10 = mostcommon(x9)\n    x11 = compose(first, last)\n    x12 = matcher(x11, x6)\n    x13 = sfilter(x2, x12)\n    x14 = compose(last, last)\n    x15 = matcher(x14, x10)\n    x16 = sfilter(x2, x15)\n    x17 = objects(I, F, T, T)\n    x18 = size(x17)\n    x19 = equality(x18, TWO)\n    x20 = mfilter(x17, hline)\n    x21 = mfilter(x17, vline)\n    x22 = branch(x19, x20, x13)\n    x23 = branch(x19, x21, x16)\n    x24 = width(x22)\n    x25 = lbind(multiply, x24)\n    x26 = width(I)\n    x27 = divide(x26, x24)\n    x28 = increment(x27)\n    x29 = interval(ZERO, x28, ONE)\n    x30 = apply(x25, x29)\n    x31 = apply(invert, x30)\n    x32 = combine(x30, x31)\n    x33 = apply(tojvec, x32)\n    x34 = lbind(shift, x22)\n    x35 = mapply(x34, x33)\n    x36 = height(x23)\n    x37 = lbind(multiply, x36)\n    x38 = height(I)\n    x39 = height(x22)\n    x40 = divide(x38, x39)\n    x41 = increment(x40)\n    x42 = interval"], [1.1, "def solve_bb1b5cc0(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = fork(multiply, height, width)\n    x2 = fgpartition(I)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = argmax(x4, x1)\n    x6 = outbox(x5)\n    x7 = corners(x6)\n    x8 = combine(x7, x5)\n    x9 = fill(I, x3, x8)\n    x10 = asobject(x5)\n    x11 = ofcolor(x10, ZERO)\n    x12 = difference(x10, x11)\n    x13 = rbind(contained, x12)\n    x14 = compose(x13, first)\n    x15 = sfilter(x11, x14)\n    x16 = difference(x11, x15)\n    x17 = compose(x13, first)\n    x18 = fork(multiply, x17, x16)\n    x19 = compose(x18, last)\n    x20 = fork(equality, toindices, x19)\n    x21 = fork(equality, toindices, x20)\n    x22 = fork(either, x20, x21)\n    x23 = rbind(sfilter, x22)\n    x24 = compose(x23, trim)\n    x25 = chain(x20, x22, x24)\n    x26 = compose(x25, asobject)\n    x27 = apply(x26, x15)\n    x28 = last(x27)\n    x29 = remove(x28, x27)\n    x30 = color(x28)\n    x31 = combine(x29, x30)\n    x32 =x23(x31)\n    x33 = asobject(x32)\n    x34 = apply(x33, x31)\n    x35 = prapply(shift, x29, x34)\n    x36 = mapply(x35, x43)\n    x37 = paint(x96, x36)\n    x38 = astuple(x31, x33)\n    x39 = x38(x37)\n    x40 = fill"], [1.1, "def solve_649fb1de(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =618\n    \"\"\"\n    x2 = lbind(subtract,    INE)\n    x3 = chain(even, x2, last)\n    x4 = rbind(branch, ZERO)\n    x5 = rbind(x4, x3)\n    x6 = chain(initset, x5, x4)\n    x7 = fork(rapply, x6, identity)\n    x8 = compose(first, x7)\n    x9 = rbind(branch, ONE)\n    x10 = rbind(x9, x8)\n    x11 = chain(initset, x10, x7)\n    x12 = fork(rapply, x11, identity)\n    x13 = compose(first, x12)\n    x14 = extract(x1, x13)\n    x15 = x14(I)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 =666(x16, x17)\n    x19 = merge(x18)\n    x20 = cover(x16, x19)\n    x21 = flip(x18)\n    x22 = branch(x21, x20, x19)\n    x23 = branch(x1, x22, x20)\n    x24 = multiply(xTEN, DOWN)\n    x25 = ulcorner(x28)\n    x26 = add(x25, x24)\n    x27 = power(x22, x26)\n    x28 = add(x25, x23)\n    x29 = shift(x19, x28)\n    x30 = x27(x29)\n    x31 = palette(x30)\n    x32 = lbind(shift, x30)\n    x33 = apply(x32, x31)\n    x34 = mapply(dneighbors, x33)\n    x35 = mapply(ineighbors, x34)\n    x36 = other(x61, x39)\n    x37 = colorfilter(x36, x39)\n    x38 = rbind(adjacent, xMas)\n    x39 = apply(x38, x37)\n"], [1.1, "def solve_1cea9ef6(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = argmin(x1, size)\n    x5 = shoot(x4, NEG_UNITY)\n    x6 = insert(x4, x5)\n    x7 = recolor(x3, x6)\n    x8 = frontiers(I)\n    x9 = sfilter(x8, vline)\n    x10 = size(x9)\n    x11 = positive(x10)\n    x12 = branch(x11, dmirror, identity)\n    x13 = x12(I)\n    x14 = x12(I)\n    x15 = ofcolor(x13, x3)\n    x16 = subgrid(x15, x13)\n    x17 = ZERO(x16)\n    x18 = shift(x15, x17)\n    x19 = ulcorner(x15)\n    x20 = urcorner(x15)\n    x21 = shoot(x19, NEG_UNITY)\n    x22 = shoot(x20,_LEFT)\n    x23 = combine(x21, x22)\n    x24 = shoot(x19, UP_RIGHT)\n    x25 = shoot(x20, DOWN_LEFT)\n    x26 = combine(x24, x25)\n    x27 = combine(x23, x26)\n    x28 = lbind(contained, x27)\n    x29 = chain(flip, x28, last)\n    x30 = cfilter(x11, x29)\n    x31 = branch(x11, height, width)\n    x32 = x31(I)\n    x33 = even(x32)\n    x34 = branch(x33, vline, hline)\n    x35 = x34(I)\n    x36 = astuple(x34, x35)\n    x37 = shift(x15, x36)\n    x38 = combine(x31, x37)\n    x39 = x30(x38)\n    x40 = shift(x19, x39)\n    x41 = combine("], [1.1, "def solve_aa93e0ce(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = positive(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_bd85689d(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_865d8377(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_9139b776(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_9ad6136f(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_0a25e854(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asobject(x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = astuple(x27, x25)\n    x29 = lbind(subtract, x28)\n    x30 = compose(x29, last)\n    x31 =173(x04)\n    x32 = rbind(ofcolor, ZERO)\n    x33 = fork(add, last, first)\n    x34 = chain(x31, x32, x33)\n    x35 = compose(x34, x30)\n    x36 = objects(x32, x26, F, T)\n    x37 = sfilter(x36, x35)\n    x38 = lbind(recolor, ONE)\n    x39 = compose(x38, outbox)\n    x40 = fork(combine, x34"], [1.1, "def solve_19c30321(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 =173(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = frontiers(x3)\n    x5 = sfilter(x4, hline)\n    x6 = size(x5)\n    x7 = increment(x6)\n    x8 = sfilter(x4, vline)\n    x9 = size(x8)\n    x10 = increment(x9)\n    x11 = height(x3)\n    x12 = decrement(x11)\n    x13 = to frontiers(x12)\n    x14 = sfilter(x13, vline)\n    x15 = size(x14)\n    x16 = increment(x15)\n    x17 = width(x3)\n    x18 = decrement(x17)\n    x19 = tophalf(x3)\n    x20 = increment(x19)\n    x21 = rbind(multiply, x20)\n    x22 = chain(tophalf, x21, initset)\n    x23 = fork(insert, dmirror, x22)\n    x24 = fork(insert, cmirror, x23)\n    x25 = fork(insert, hmirror, x24)\n    x26 = compose(x25, x20)\n    x27 = fork(insert, vmirror, x26)\n    x28 = fork(insert, x17, x27)\n    x29 = compose(x28, x21)\n    x30 = fork(insert, width, x29)\n    x31 = rbind(repeat, x3)\n    x32 = chain(toivec, x30, x31)\n    x33 = fork(shift, x23, x32)\n    x34 = canvas(ZERO, x11)\n    x35 = paint(x34, x3)\n    x36 = merge(x8)\n    x37 = cover(x35, x36)\n    x38 = shift(x36, x37)\n    x39 = paint(x34, x38)\n    x40 = shift(x33, x39)\n    x"], [1.1, "def solve_8698b8b8(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, T, T, F)\n    x6 = colorfilter(x5, x4)\n    x7 = fork(add, leftmost, uppermost)\n    x8 = argmin(x6, x7)\n    x9 = lbind(adjacent, x8)\n    x10 = rbind(add, x8)\n    x11 = totuple(x10)\n    x12 = sfilter(x11, x9)\n    x13 = mapply(neighbors, x12)\n    x14 = difference(x1, x12)\n    x15 = mapply(neighbors, x14)\n    x16 = apply(urcorner, x12)\n    x17 = size(x16)\n    x18 = equality(ONE, x17)\n    x19 = mfilter(x18, identity)\n    x20 = branch(x18, identity, dmirror)\n    x21 = x20(I)\n    x22 = fgpartition(x21)\n    x23 = merge(x22)\n    x24 = ONE(x23)\n    x25 =\u5b50(x24, x22)\n    x26 = width(x25)\n    x27 = lefthalf(x25)\n    x28 = tophalf(x27)\n    x29 = righthalf(x28)\n    x30 = palette(x29)\n    x31 = palette(x of)\n    x32 = combine(x30, x31)\n    x33 = intersection(x32, x22)\n    x34 = first(x33)\n    x35 = last(x33)\n    x36 = ofcolor(x26, x34)\n    x37 = ofcolor(x26, x35)\n    x38 = combine(x36, x37)\n    x39 = fill(x21, x34, x38)\n    x40 = ofcolor(x31, x34)\n    x41 = ofcolor(x31,"], [1.1, "def solve_41066c0d(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_621c090c(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = astuple(NINE, NINE)\n    x3 = canvas(ZERO, x2)\n    x4 = astuple(THREE, ORIGIN)\n    x5 = initset(x4)\n    x6 = insert(x3, x5)\n    x7 = merge(x1)\n    x8 = lbind(colorfilter, x6)\n    x9 = compose(first, x8)\n    x10 = compose(SIX, x9)\n    x11 = fork(paint, identity, x10)\n    x12 = x11(x5)\n    x13 = normalize(x12)\n    x14 = dmirror(x13)\n    x15 = increment(NINE)\n    x16 = insert(x14, x15)\n    x17 = lbind(rapply, x16)\n    x18 = compose(first, x17)\n    x19 = fork(paint, identity, x18)\n    x20 = x19(x5)\n    x21 = palette(x20)\n    x22 = lbind(ofcolor, x20)\n    x23 = compose(size, x22)\n    x24 = palette(x20)\n    x25 = contained(ONE, x24)\n    x26 = contained(TWO, x24)\n    x27 = branch(x25, UNITY, TWO_BY_TWO)\n    x28 = branch(x26, RIGHT, x27)\n    x29 = fork(combine, vfrontier, hfrontier)\n    x30 = x29(x28)\n    x31 = ofcolor(x20, TWO)\n    x32 = gravitate(x31, x30)\n    x33 =8(x32)\n    x34 = colorfilter(x1, TWO)\n    x35 = apply(x29, x34)\n    x36 = rbind(ZERO, x35)\n    x37 = apply(x36, x32)\n    x38 = rbind(bordering, x20)\n    x39 = mfilter(x37, x38)\n    x40 = fill"], [1.1, "def solve_05e521b4(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, ONE)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)"], [1.1, "def solve_a910c30d(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = power(c909, DOWN)\n    x5 = fork(equality, identity, x4)\n    x6 =230(x2)\n    x7 = frontiers(I)\n    x8 = sfilter(x7, x5)\n    x9 = merge(x8)\n    x10 = color(x9)\n    x11 = subgrid(x9, I)\n    x12 = frontiers(x11)\n    x13 = merge(x12)\n    x14 = shift(x13, NEG_UNITY)\n    x15 = ofcolor(x11, x10)\n    x16 = ofcolor(x11, x11)\n    x17 = combine(x15, x16)\n    x18 = mapply(x17, x12)\n    x19 = difference(x18, x15)\n    x20 =49mirror(x15)\n    x21 =49mirror(x15)\n    x22 = ofcolor(x11, x10)\n    x23 = leftmost(x22)\n    x24 = ofcolor(x11, x10)\n    x25 = leftmost(x24)\n    x26 = greater(x23, x25)\n    x27 = uppermost(x22)\n    x28 = equality(x27, x28)\n    x29 = hmatching(x28, x11)\n    x30 = branch(x29, identity, vmirror)\n    x31 = x30(x11)\n    x32 = ofcolor(x31, x10)\n    x33 = first(x32)\n    x34 = last(x31)\n    x35 = x33(x40)\n    x36 = ofcolor(x31, x10)\n    x37 =37(x36)\n    x38 = difference(x37, x31)\n    x39 = fill(x31, x10, x38)\n    x40 = ofcolor(x39, x10)\n    x41 = mapply(dneighbors, x40)\n    x"], [1.1, "def solve_2df6e1be(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = lbind(multiply, x11)\n    x13 = width(I)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = connect(x12, x15)\n    x17 = shape(I)\n    x18 = maximum(x17)\n    x19 = lbind(multiply, x18)\n    x20 = toivec(x18)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = toivec(x22)\n    x24 = connect(x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = decrement(x25)\n    x28 = tojvec(x27)\n    x29 = connect(x26, x28)\n    x30 = height(I)\n    x31 = decrement(x30)\n    x32 = toivec(x31)\n    x33 = connect(x29, x32)\n    x34 = width(I)\n    x35 = decrement(x34)\n    x36 = tojvec(x35)\n    x37 = connect(x33, x36)\n    x38 = height(I)\n    x39 = decrement(x38)\n    x40 = toivec(x39)\n    x41 = connect(x38, x40)\n    x42 = width(I)\n    x43 = decrement(x42)\n    x44 = tojvec(x43)\n    x45 = connect(x42, x44)\n    x46 = height(I)"], [1.1, "def solve_e9c2052f(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, lefthalf, tophalf)\n    x7 = branch(x5, righthalf, bottomhalf)\n    x8 = branch(x5, hconcat, vconcat)\n    x9 = x6(I)\n    x10 = x7(I)\n    x11 = index(x9, ORIGIN)\n    x12 = shape(x10)\n    x13 = decrement(x12)\n    x14 = index(x10, x13)\n    x15 = mostcolor(I)\n    x16 = mostcolor(I)\n    x17 = palette(I)\n    x18 = remove(x11, x17)\n    x19 = remove(x14, x18)\n    x20 = remove(x16, x19)\n    x21 = first(x20)\n    x22 = replace(x9, x21, x11)\n    x23 = branch(x5, asobject, x22)\n    x24 = x23(I)\n    x25 = astuple(x71, x19)\n    x26 = canvas(x25, x25)\n    x27 = paint(x26, x24)\n    x28 = objects(x27, T, F, T)\n    x29 = first(x28)\n    x30 = color(x29)\n    x31 = subgrid(x29, x30)\n    x32 = lefthalf(x61)\n    x33 = righthalf(x31)\n    x34 = shape(x33)\n    x35 = decrement(x34)\n    x36 = hmirror(x33)\n    x37 = vconcat(x36, x33)\n    x38 = objects(x37, T, F, T)\n    x39 = first(x38)\n    x40 = replace(x39, x21, x11)\n    O = hmirror(x"], [1.1, "def solve_4ba694f2(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = height(I)\n    x2 = decrement(x1)\n    x3 = tojvec(x2)\n    x4 = connect(ORIGIN, x3)\n    x5 = height(I)\n    x6 = decrement(x5)\n    x7 = toivec(x6)\n    x8 = connect(ORIGIN, x7)\n    x9 = width(I)\n    x10 = decrement(x9)\n    x11 = tojvec(x10)\n    x12 = shape(I)\n    x13 = decrement(x12)\n    x14 = connect(x11, x13)\n    x15 = height(I)\n    x16 = decrement(x15)\n    x17 = toivec(x16)\n    x18 = shape(I)\n    x19 = decrement(x18)\n    x20 = connect(x17, x19)\n    x21 = asindices(I)\n    x22 = box(x21)\n    x23 = toobject(x22, I)\n    x24 = mostcolor(x23)\n    x25 = matcher(color, x24)\n    x26 = compose(flip, x25)\n    x27 = rbind(sfilter, x26)\n    x28 = rbind(sizefilter, ONE)\n    x29 = rbind(objects, F)\n    x30 = rbind(x29, F)\n    x31 = rbind(x30, T)\n    x32 = rbind(subgrid, I)\n    x33 = chain(x27, x31, x32)\n    x34 = chain(size, x28, x33)\n    x35 = astuple(colors, ONE)\n    x36 = astuple(ONE, x22)\n    x37 = astuple(ONE, x23)\n    x38 = astuple(TWO, x34)\n    x39 = initset(x38)\n    x40 = insert(x36, x39)\n    x41 = insert(x47, x40)\n    x42 = pair(x42, x41)\n    x43 ="], [1.1, "def solve_d06cd310(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = double(TEN)\n    x2 = interval(ZERO, x1, ONE)\n    x3 = connect(ORIGIN, DOWN)\n    x4 = connect(ORIGIN, ZERO_BY_TWO)\n    x5 = combine(x3, x4)\n    x6 = astuple(NEG_TWO, TWO)\n    x7 = lbind(multiply, x6)\n    x8 = toivec(NEG_TWO)\n    x9 = apply(x7, x2)\n    x10 = rbind(subtract, TWO_BY_ZERO)\n    x11 = fork(ofcolor, identity, leastcolor)\n    x12 = chain(x10, center, x11)\n    x13 = rbind(mapply, x9)\n    x14 = lbind(lbind, shift)\n    x15 = lbind(shift, x5)\n    x16 = compose(x15, x12)\n    x17 = chain(x13, x14, x16)\n    x18 = lbind(recolor, FIVE)\n    x19 = compose(x18, x17)\n    x20 = fork(paint, identity, x19)\n    x21 = compose(rot180, x20)\n    x22 = fork(ofcolor, x21, leastcolor)\n    x23 = compose(center, x22)\n    x24 = fork(subtract, x23, x12)\n    x25 = fork(shift, x17, x24)\n    x26 = lbind(recolor, FIVE)\n    x27 = rbind(shift, x8)\n    x28 = chain(x26, x27, x25)\n    x29 = fork(paint, x21, x28)\n    x30 = compose(rot180, x29)\n    x31 = rbind(ofcolor, FIVE)\n    x32 = compose(x31, x30)\n    x33 = leastcolor(I)\n    x34 = ofcolor(I, x33)\n    x35 = mostcolor(I)\n    x36 = shape(I)\n    x37 = canvas(x35, x"], [1.1, "def solve_c4bc107a(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_4899322b(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, toindices)\n    x3 = difference(x1, x2)\n    x4 = size(x3)\n    x5 = positive(x4)\n    x6 = branch(x5, lefthalf, tophalf)\n    x7 = branch(x5, righthalf, bottomhalf)\n    x8 = branch(x5, hconcat, vconcat)\n    x9 = x6(I)\n    x10 = x7(I)\n    x11 = index(x9, ORIGIN)\n    x12 = shape(x10)\n    x13 = decrement(x12)\n    x14 = index(x10, x13)\n    x15 = mostcolor(I)\n    x16 = mostcolor(I)\n    x17 = palette(I)\n    x18 = remove(x11, x17)\n    x19 = remove(x14, x18)\n    x20 = remove(x16, x19)\n    x21 = first(x20)\n    x22 = last(x21)\n    x23 = ofcolor(x9, x22)\n    x24 = leftmost(x23)\n    x25 = ofcolor(x10, x22)\n    x26 = leftmost(x25)\n    x27 = greater(x24, x26)\n    x28 = uppermost(x23)\n    x29 = ofcolor(x10, x22)\n    x30 = uppermost(x29)\n    x31 = greater(x28, x30)\n    x32 = leftmost(x23)\n    x33 = interval(x32, x33, ONE)\n    x34 = matcher(first, x11)\n    x35 = matcher(first, x14)\n    x36 = sfilter(x34, x35)\n    x37 = apply(double, x36)\n    x38 = lbind(apply, maximum)\n    x39 = lbind(ofcolor, I)\n    x40 = compose(x38, x39)\n    x41 = rbind(intersection, x24)\n    x42 ="], [1.1, "def solve_8df6b189(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_018f2c78(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = lbind(remove, x1)\n    x3 = compose(first, x2)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = mapply(x3, x4)\n    x6 =23978259\n    7851115737\n    6519315530\n    9830561239\n    5352852971\n    \"\"\"\n    x1 = palette(I)\n    x2 = compose(last, last)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = totuple(x5)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = switch(I, x7, x8)\n    x10 = rot90(x9)\n    x11 = sfilter(x6, x4)\n    x12 = size(x11)\n    x13 = increment(x12)\n    x14 = divide(x13, x3)\n    x15 = width(I)\n    x16 = interval(ZERO, x15, ONE)\n    x17 = apply(tojvec, x16)\n    x18 = height(I)\n    x19 = lbind(shift, xI)\n    x20 = mapply(x19, x16)\n    x21 = astuple(x17, x20)\n    x22 = canvas(ZERO, x21)\n    x23 = asindices(x22)\n    x24 = shape(I)\n    x25 = canvas(ZERO, x24)\n    x26 = lbind(multiply, x24)\n    x27 = apply(x26, x23)\n    x28 = rbind(multiply, x14)\n    x29 = apply(x28, x27)\n    x30 = matcher(x26, x12)\n    x31 = argmax(x29, x30)\n    x32 = lbind(shift, x23)\n    x33 = mapply(x32, x27)\n    O = fill"], [1.1, "def solve_d1f369f1(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_90d1b867(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_330e00b4(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(sfilter, x3)\n    x6 = chain(x5, x4, color)\n    x7 = compose(maximum, shape)\n    x8 = fork(add, x7, x6)\n    x9 = compose(invert, x8)\n    x10 = order(x2, x9)\n    x11 = rbind(add, DOWN)\n    x12 = compose(x11, ulcorner)\n    x13 = fork(contained, x12, toindices)\n    x14 = rbind(add, RIGHT)\n    x15 = compose(x14, ulcorner)\n    x16 = fork(contained, x15, toindices)\n    x17 = fork(add, x13, x16)\n    x18 = rbind(argmax, x17)\n    x19 = compose(initset, identity)\n    x20 = fork(insert, vmirror, x19)\n    x21 = fork(insert, cmirror, x20)\n    x22 = fork(insert, hmirror, x21)\n    x23 = compose(x18, x22)\n    x24 = apply(x23, x10)\n    x25 = size(x2)\n    x26 = apply(size, x2)\n    x27 = contained(ONE, x26)\n    x28 = increment(x25)\n    x29 = branch(x27, x25, x28)\n    x30 = double(x29)\n    x31 = decrement(x30)\n    x32 = apply(normalize, x24)\n    x33 = interval(ZERO, x29, ONE)\n    x34 = pair(x33, x33)\n    x35 = mpapply(shift, x32, x34)\n    x36 = astuple(x31, x31)\n    x37 = canvas(x1, x36)\n    x38 = paint(x37, x35)\n    x39 ="], [1.1, "def solve_1a561f30(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = toindices(x1)\n    x3 = lbind(contained, ZERO)\n    x4 = compose(x3, hline)\n    x5 = rot(I)\n    x6 = lbind(contained, ZERO)\n    x7 = compose(x6, vline)\n    x8 = rbind(sfilter, x4)\n    x9 = compose(x8, asindices)\n    x10 = power(x9, TWO)\n    x11 = fork(gravitate, toindices, x10)\n    x12 = lbind(contained, ZERO)\n    x13 = compose(x12, leftmost)\n    x14 = lbind(compose, x11)\n    x15 = lbind(rbind, greater)\n    x16 = chain(x15, x14, x13)\n    x17 = fork(greater, x16, x12)\n    x18 = compose(x17, rot90)\n    x19 = fork(greater, x17, x13)\n    x20 = chain(x19, x17, x16)\n    x21 = fork(both, x18, x20)\n    x22 = fork(both, x14, x21)\n    x23 = compose(flip, x22)\n    x24 = sfilter(x1, x23)\n    x25 = fork(compose, x21, x22)\n    x26 = product(x24, x25)\n    x27 = fork(compose, toindices, x25)\n    x28 = fork(rbind, x27, x26)\n    x29 = fork(multiply, x27, x28)\n    x30 = compose(x29, first)\n    x31 = palette(I)\n    x32 = lbind(sfilter, x31)\n    x33 = lbind(compose, x82)\n    x34 = chain(x32, x33, x30)\n    x35 = lbind(ofcolor, I)\n    x36 = compose(x34, x35)\n    x37 =77(x34)\n    x38 = compose"], [1.1, "def solve_f810701d(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, box)\n    x3 = fork(multiply, height, width)\n    x4 = fork(equality, size, x3)\n    x5 = compose(flip, x4)\n    x6 = fork(both, x2, x5)\n    x7 = extract(x1, x6)\n    x8 = inbox(x7)\n    x9 = backdrop(x8)\n    x10 = toobject(x9, I)\n    x11 = remove(x10, x1)\n    x12 = remove(x7, x11)\n    x13 = argmin(x12, size)\n    x14 = combine(x13, x7)\n    x15 = backdrop(x14)\n    x16 = objects(x10, T, F, T)\n    x17 = color(x10)\n    x18 = fill(x17, x16, x15)\n    x19 = subgrid(x18, I)\n    x20 = argmin(x16, width)\n    x21 = ulcorner(x20)\n    x22 = llcorner(x20)\n    x23 = urcorner(x20)\n    x24 = shoot(x21, UNITY)\n    x25 = shoot(x22, DOWN_LEFT)\n    x26 = shoot(x24, UP_RIGHT)\n    x27 = shoot(x25, x22)\n    x28 = combine(x26, x27)\n    x29 = intersection(x28, x22)\n    x30 = fill(x17, x17, x29)\n    x31 = combine(x24, x22)\n    x32 = llcorner(x31)\n    x33 = rbind(subtract, x32)\n    x34 = chain(positive, size, x33)\n    x35 = sfilter(x24, x34)\n    x36 = height(x35)\n    x37 = equality(x36, ONE)\n    x38 = branch(x37, ZERO, x31)\n    O = move(x38, x33, x37)\n    "], [1.1, "def solve_2c2f30fa(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_bc464370(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(I)\n    x9 = fill(I, x8, x7)\n    x10 = sfilter(x7, hline)\n    x11 = size(x10)\n    x12 = increment(x11)\n    x13 = sfilter(x7, vline)\n    x14 = size(x13)\n    x15 = increment(x14)\n    x16 = divide(x12, x15)\n    x17 = asindices(x7)\n    x18 = center(x17)\n    x19 = multiply(x13, x12)\n    x20 = increment(x19)\n    x21 = asindices(I)\n    x22 = center(x21)\n    x23 = width(I)\n    x24 = decrement(x23)\n    x25 = tojvec(x24)\n    x26 = double(x12)\n    x27 = tojvec(x25)\n    x28 = connect(x26, x27)\n    x29 = center(x28)\n    x30 =\n    x29(x7)\n    x31 = asindices(I)\n    x32 = center(x31)\n    x33 = width(I)\n    x34 = halve(x33)\n    x35 = tojvec(x34)\n    x36 = height(I)\n    x37 = halve(x36)\n    x38 = connect(x35, x37)\n    x39 = fill(x19, x38, x32)\n    x40 = fill(x39, x08, x23)\n    x41 = ofcolor(x40, EIGHT)\n    x42 = size(x41)\n    x43 = equality(x42, ONE)\n    x44 = branch(x43, x40, x40)\n    x45 = connect(x42, x44"], [1.1, "def solve_701aa21e(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_1830846c(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = asindices(I)\n    x5 = apply(first, x4)\n    x6 = difference(x5, x3)\n    x7 = ofcolor(I, x1)\n    x8 = rbind(interval, ONE)\n    x9 = lbind(rbind, contained)\n    x10 = lbind(sfilter, x6)\n    x11 = rbind(matcher, ZERO)\n    x12 = chain(size, x10, x9)\n    x13 = lbind(sfilter, x7)\n    x14 = lbind(compose, x12)\n    x15 = chain(x13, x11, x14)\n    x16 = lbind(fork, x8)\n    x17 = compose(increment, minimum)\n    x18 = lbind(lbind, astuple)\n    x19 = lbind(chain, x17)\n    x20 = rbind(x19, first)\n    x21 = chain(x20, x18, first)\n    x22 = lbind(chain, maximum)\n    x23 = rbind(x22, first)\n    x24 = chain(x23, x18, first)\n    x25 = fork(x16, x21, x24)\n    x26 = compose(x15, x25)\n    x27 = apply(toivec, x3)\n    x28 = apply(x26, x27)\n    x29 = argmax(x28, width)\n    x30 = remove(x29, x28)\n    x31 = ulcorner(x29)\n    x32 = invert(x31)\n    x33 = shift(x29, x32)\n    x34 = asindices(I)\n    x35 = center(x34)\n    x36 = invert(x35)\n    x37 = shift(x34, x36)\n    x38 = width(I)\n    x39 = multiply(x38, x37)\n    x40 = tojvec(x39)"], [1.1, "def solve_f603102a(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = equality(x1, FOUR)\n    x3 = fork(equality, height, width)\n    x4 = extract(x2, x3)\n    x5 = other(x1, x4)\n    x6 = color(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = toindices(x11)\n    x13 = vmirror(x12)\n    x14 = hmirror(x12)\n    x15 = shoot(x13, UNITY)\n    x16 = shoot(x14, NEG_UNITY)\n    x17 = fill(I, x11, x15)\n    x18 = fill(x17, x10, x16)\n    x19 = ofcolor(x18, x6)\n    x20 = lowermost(x19)\n    x21 = matcher(first, x10)\n    x22 = compose(flip, x21)\n    x23 = rightmost(x19)\n    x24 = matcher(first, x10)\n    x25 = rightmost(x194)\n    x26 = matcher(first, x24)\n    x27 = leftmost(x194)\n    x28 = matcher(first, x25)\n    x29 = both(x22, x28)\n    x30 = branch(x29, x22, x25)\n    x31 = fill(x18, x11, x30)\n    x32 = ofcolor(x31, x6)\n    x33 = urcorner(x32)\n    x34 = shoot(x33, UP_RIGHT)\n    x35 = shoot(x34, DOWN_LEFT)\n    x36 = underfill(x31, x11, x35)\n    x37 = ofcolor(x36, x6)\n    x38 = compose(flip, x27)\n    x39 = rbind(sfilter, x38)"], [1.1, "def solve_b5325838(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_669b94eb(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x228, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_8980fc85(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = contained(ZERO, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(greater, TWO)\n    x9 = compose(x8, first)\n    x10 = color(x2)\n    x11 =y10000(x10)\n    x12 = insert(x8, x11)\n    x13 = merge(x12)\n    x14 = rot90(x13)\n    x15 = subtract(x4, TWO)\n    x16 = insert(x15, x4)\n    x17 = urcorner(x16)\n    x18 = shoot(x17, UNITY)\n    x19 = rbind(shoot, NEG_UNITY)\n    x20 = rbind(shoot, DOWN_LEFT)\n    x21 = rbind(shoot, UP_RIGHT)\n    x22 = rbind(shoot, DOWN_LEFT)\n    x23 = rbind(shoot, UNITY)\n    x24 = rbind(shoot, x15)\n    x25 = rbind(shoot, x14)\n    x26 = rbind(shoot, x25)\n    x27 = fork(combine, x22, x24)\n    x28 = fork(combine, x26, x27)\n    x29 = fork(combine, x27, x28)\n    x30 = compose(x9, x29)\n    x31 = difference(x1, x8)\n    x32 = extract(x31, x30)\n    x33 = x32(x32)\n    x34 = x6(x33)\n    x35 = height(x34)\n    x36 = width(x34)\n    x37 = interval(ZERO, x35, x36)\n    x38 = pair(x37, x37)\n    x39 = lbind(sfilter, x33)\n    x40 = rbind(compose, last)\n    x"], [1.1, "def solve_0f1a8bdf(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_00368803(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = astuple(x15, x17)\n    x19 = vupscale(x10, x18)\n    x20 = hupscale(x19, x17)\n    x21 = asobject(x20)\n    x22 = lbind(shift, x21)\n    x23 = neighbors(ORIGIN)\n    x24 = mapply(x22, x23)\n    x25 = paint(x5, x24)\n    x26 = objects(x25, T, T, T)\n    x27 = apply(uppermost, x26)\n    x28 = order(x27, identity)\n    x29 = apply(color, x28)\n    x30 = rbind(contained, x22)\n    x31 = compose(x30, palette)\n    x32 = rbind(sfilter, x31)\n    x33 = lbind(shift, x21)\n    x34 = chain(x32, x33, x25)\n    x35 = rbind(apply, x29)\n    x36 = lbind(lbind, shift)\n    x37 = compose(x35, x36)\n    x38 = lbind(rbind, combine)\n    x39 = chain(x35, x38, x37)\n    x40 = fork(sfilter, x34, x39)\n    "], [1.1, "def solve_a210a5a2(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_13ac0f79(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = chain(increment, merge, size)\n    x5 = chain(decrement, decrement, width)\n    x6 = fork(greater, x4, x5)\n    x7 = fork(both, x3, x6)\n    x8 = tojvec(TEN)\n    x9 = crop(I, x8, x7)\n    x10 = numcolors(x9)\n    x11 = equality(x10, TWO)\n    x12 = insert(x8, x11)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = insert(x13, x15)\n    x17 = height(x12)\n    x18 = decrement(x17)\n    x19 = lbind(multiply, x18)\n    x20 = add(x14, x19)\n    x21 = width(x12)\n    x22 = decrement(x21)\n    x23 = lbind(multiply, x22)\n    x24 = add(x14, x23)\n    x25 = repeat(x16, x11)\n    x26 = astuple(x25, x24)\n    x27 = add(x25, x26)\n    x28 = subtract(x24, x18)\n    x29 = astuple(x28, x27)\n    x30 = add(x29, x28)\n    x31 = crement(x30)\n    x32 = height(x12)\n    x33 = decrement(x32)\n    x34 = subtract(x33, x31)\n    x35 = astuple(x34, x31)\n    x36 = add(x35, x31)\n    x37 =repeat(x36, x11)\n    x38 = merge(x37)\n    x39 = cover(I, x38)\n    x40 = tojvec(x3)\n    x"], [1.1, "def solve_f623db8b(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(306, DOWN)\n    x7 = rbind(compose, initset)\n    x8 = lbind(rbind, sfilter)\n    x9 = chain(x6, leftmost, x8)\n    x10 = chain(uppermost, x7, x9)\n    x11 = fork(greater, x9, x10)\n    x12 = compose(x11, x5)\n    x13 = lbind(compose, x12)\n    x14 = lbind(rbind, sfilter)\n    x15 = chain(x13, x14, x11)\n    x16 = chain(uppermost, x7, x15)\n    x17 = fork(greater, x16, x12)\n    x18 = compose(x17, x5)\n    x19 = fork( quotur, x18, identity)\n    x20 = fork(equality, identity, x19)\n    x21 = compose(x20, x15)\n    x22 = rbind(compose, x21)\n    x23 = lbind(rbind, sfilter)\n    x24 = chain(x22, x23, x15)\n    x25 = chain(uppermost, x7, x15)\n    x26 = lbind(greater, x26)\n    x27 = compose(x26, x45)\n    x28 = chain(toivec, x27, x25)\n    x29 = lbind(lbind, shift)\n    x30 = compose(x29, x27)\n    x31 = fork(compose, x28, x30)\n    x32 = compose(cmirror, x31)\n    x33 = fork(mapply, x32, x17)\n    x34 = multiply(SIX, THREE)\n    x35 = astuple(x34, x34)\n    x36 = x35(I)\n    x37"], [1.1, "def solve_f62bf43a(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = apply(x12, x9)\n    x14 = dedupe(x13)\n    x15 = size(x14)\n    x16 = decrement(x15)\n    x17 = add(x16, x16)\n    x18 = compose(x11, x14)\n    x19 = x8(x18)\n    x20 = branch(x7, x19, height)\n    x21 = subtract(x17, x20)\n    x22 = decrement(x21)\n    x23 = add(x22, x20)\n    x24 = canvas(ZERO, x1)\n    x25 = asindices(x24)\n    x26 = box(x25)\n    x27 = mostcolor(I)\n    x28 = recolor(x27, x26)\n    x29 = double(x28)\n    x30 = interval(ZERO, x29, ONE)\n    x31 = asobject(x30)\n    x32 = shape(x31)\n    x33 = shift(x31, x32)\n    x34 = paint(x24, x33)\n    x35 = astuple(x shift, x34)\n    x36 = interval(ZERO, x25, ONE)\n    x37 = product(x36, x36)\n    x38 = rbind(multiply, x31)\n    x39 = apply(x38, x37)\n    x40 = lbind(shift, x33)\n    x41 = mapply(x40, x39)\n    O ="], [1.1, "def solve_86180c1a(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_ea229701(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = shape(I)\n    x2 = add(x1, DOWN)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = lbind(multiply, x4)\n    x6 = width(I)\n    x7 = subtract(x6, x3)\n    x8 = astuple(x7, x5)\n    x9 = connect(x3, x8)\n    x10 = recolor(ZERO, x9)\n    x11 = compose(first, last)\n    x12 = rbind(remove, x11)\n    x13 = compose(x12, first)\n    x14 = astuple(x10, x13)\n    x15 = mostcolor(I)\n    x16 = canvas(x15, x14)\n    x17 = paint(x16, x12)\n    x18 = size(x1)\n    x19 = interval(ZERO, x18, ONE)\n    x20 = pair(x19, x19)\n    x21 = width(I)\n    x22 = astuple(x21, x5)\n    x23 = repeat(ZERO, x22)\n    x24 = combine(x23, x20)\n    x25 = branch(x18, x24, ONE)\n    x26 = multiply(x25, x5)\n    x27 = invert(x26)\n    x28 = interval(ZERO, x27, ONE)\n    x29 = product(x28, x28)\n    x30 = order(x29, last)\n    x31 = apply(compose, x470)\n    x32 = lbind(extract, x31)\n    x33 = lbind(matcher, first)\n    x34 = compose(x33, first)\n    x35 = chain(last, x32, x34)\n    x36 = compose(last, last)\n    x37 = lbind(recolor, FIVE)\n    x38 = lbind(mapply, last)\n    x39 = compose(x38, x35)\n    x40 = fork(combine, x36, x39)\n    x41 = compose"], [1.1, "def solve_fc2d1034(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    x5 = palette(x4)\n    x6 = intersection(x5, x2)\n    x7 = colorfilter(x3, x5)\n    x8 = argmax(x7, size)\n    x9 = remove(x8, x7)\n    x10 = lbind(chain, positive)\n    x11 = lbind(x10, size)\n    x12 = lbind(lbind, shift)\n    x13 = lbind(lbind, intersection)\n    x14 = compose(x11, x12)\n    x15 = compose(x13, x13)\n    x16 = fork( x199, x14, x15)\n    x17 = fork(mapply, x16, x17)\n    x18 = astuple(SIX, x18)\n    x19 = x15(I)\n    x20 = cover(x19, x8)\n    x21 = dropping(x20, UNITY)\n    x22 = dmirror(x21)\n    x23 = papply(pair, x21, x22)\n    x24 = lbind(apply, maximum)\n    x25 = apply(x24, x23)\n    x26 = cmirror(x25)\n    x27 = papply(pair, x25, x26)\n    x28 = apply(x25, x27)\n    x29 =mirror(x28)\n    x30 = papply(pair, x28, x29)\n    x31 = apply(x24, x30)\n    x32 = llcorner(x28)\n    x33 = palette(x29)\n    x34 = lbind(ofcolor, x22)\n    x35 = compose(x34, x31)\n    x36 =726200(x35)\n    x37 =4438(x31, x36)\n    x38 = fork(recolor, x35, x37)\n    x39 = mapply(x38, x31)\n    O = paint("], [1.1, "def solve_81157fed(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_5221339b(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(compose, x8)\n    x13 = compose(x11, x12)\n    x14 = lbind(sfilter, x3)\n    x15 = chain(size, x14, x13)\n    x16 = itemmax(x3, x15)\n    x17 = objects(x7, T, F, T)\n    x18 = merge(x17)\n    x19 = palette(x18)\n    x20 = colorfilter(x17, x19)\n    x21 = chain(positive, size, x17)\n    x22 = rbind(shoot, UNITY)\n    x23 = rbind(shoot, NEG_UNITY)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = rbind(shoot, UP_RIGHT)\n    x26 = lbind(lbind, greater)\n    x27 = chain(x22, x24, x25)\n    x28 = rbind(shoot, UP_RIGHT)\n    x29 = rightmost(x16)\n    x30 = lbind(rbind, greater)\n    x31 = chain(x28, x30, x29)\n    x32 = lbind(recolor, x509)\n    x33 = rbind(shoot, x31)\n    x34 = rbind(shoot, x32)\n    x35 =fork(combine, x33, x34)\n    x36 = compose(x35, x27)\n    x37 = fork(paint, identity, x36)\n    x38 = rbind(shoot, x"], [1.1, "def solve_27a6a068(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_d74d08da(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(identity, dmirror)\n    x5 = astuple(cmirror, hmirror)\n    x6 = combine(x4, x5)\n    x7 = rbind(rapply, I)\n    x8 = compose(first, x7)\n    x9 = chain(x3, x8, initset)\n    x10 = extract(x6, x9)\n    x11 = x10(I)\n    x12 = mostcolor(I)\n    x13 = palette(I)\n    x14 = remove(x12, x13)\n    x15 = other(x14, TWO)\n    x16 = ofcolor(x11, x15)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, identity, vmirror)\n    x20 = x19(x11)\n    x21 = ofcolor(x20, x15)\n    x22 = ofcolor(x20, TWO)\n    x23 = apply(last, x22)\n    x24 = insert(ZERO, x23)\n    x25 = width(x20)\n    x26 = insert(x25, x24)\n    x27 = order(x26, identity)\n    x28 = last(x27)\n    x29 = remove(x28, x27)\n    x30 = first(x27)\n    x31 = remove(x30, x27)\n    x32 = pair(x29, x31)\n    x33 = size(x29)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = pair(x34, x32)\n    x36 = lbind(fork, connect)\n    x37 = compose(first, last)\n    x38 = chain(decrement, last, last)\n    x39 = lbind(lbind, add)\n    x40 = compose(x39, first)\n    x41 = lbind("], [1.1, "def solve_96fa9643(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = compose(leftmost, first)\n    x13 = compose(leftmost, last)\n    x14 = fork(equality, x12, x13)\n    x15 = compose(uppermost, first)\n    x16 = compose(uppermost, last)\n    x17 = fork(equality, x15, x16)\n    x18 = fork(either, x14, x17)\n    x19 = sfilter(x11, x18)\n    x20 = compose(color, first)\n    x21 = compose(center, first)\n    x22 = compose(center, last)\n    x23 = fork(connect, x21, x22)\n    x24 = fork(recolor, x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = matcher(last, ZERO)\n    x28 = decrement(x26)\n    x29 = matcher(last, x28)\n    x30 = fork(either, x27, x29)\n    x31 = matcher(first, ZERO)\n    x32 = decrement(x25)\n    x33 = matcher(first, x32)\n    x34 = fork(either, x31, x33)\n    x35 = toindices(x5)\n    x36 = sfilter(x35, x30)\n    x37 = equality(x35, x36)\n    x38 = mapply(x24, x19)\n    x39 = paint(I, x38)\n    x40 = branch(x37, x30, x34)\n    "], [1.1, "def solve_862378c3(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =238\n    729 relatively623\n    2990529281\n    3446ly2453\n    1437048410\n    \"\"\"\n    x2 = height(I)\n    x3 = halve(x2)\n    x4 = increment(x3)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = astuple(x4, x6)\n    x11 = canvas(x9, x10)\n    x12 =, toindices(x11)\n    x13 = normalize(x12)\n    x14 = toindices(x13)\n    x15 = remove(x9, x14)\n    x16 = lbind(intersection, x12)\n    x17 = chain(size, x16, toindices)\n    x18 = argmax(x15, x17)\n    x19 = ulcorner(x18)\n    x20 = matcher(first, x9)\n    x21 = sfilter(x18, x20)\n    x22 = lbind(shift, x12)\n    x23 = height(x12)\n    x24 = divide(x23, FOUR)\n    x25 = increment(x24)\n    x26 = width(x12)\n    x27 = divide(x25, FOUR)\n    x28 = increment(x27)\n    x29 = divide(x28, FOUR)\n    x30 =ensAgainst(x21, x13)\n    x31 = paddingapply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(tojvec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = lbind(fork, both)\n    x37 = lbind(index, I)\n    x38 = lbind(compose, x37)\n    x39 = lbind(lbind, shift)\n    x40 = compose(x38, x39)\n"], [1.1, "def solve_98d6c048(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_c03aebbc(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = asobject(I)\n    x2 = dmirror(I)\n    x3 = mostcolor(I)\n    x4 = matcher(first, x3)\n    x5 = compose(flip, x4)\n    x6 = sfilter(x1, x5)\n    x7 =227(x6)\n    x8 = mostcolor(I)\n    x9 = lbind(occurrences, I)\n    x10 = matcher(x9, x8)\n    x11 = compose(flip, x10)\n    x12 = fork(both, x3, x11)\n    x13 = sfilter(x6, x12)\n    x14 = combine(x7, x13)\n    x15 = increment(x14)\n    x16 = order(x1, last)\n    x17 = apply(first, x16)\n    x18 = last(x16)\n    x19 = decrement(x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = hsplit(I, x21)\n    x23 = astuple(ONE, THREE)\n    x24 = astuple(TWO, FOUR)\n    x25 = initset(x24)\n    x26 = insert(ORIGIN, x25)\n    x27 = insert(x20, x26)\n    x28 = insert(x25, x27)\n    x29 = insert(x28, x267)\n    x30 = ofcolor(x22, x4)\n    x31 = ofcolor(x22, TWO)\n    x32 = asindices(x22)\n    x33 = initset(x32)\n    x34 = insert(x27, x33)\n    x35 = lbind(hfrontier, x34)\n    x36 = compose(x35, center)\n    x37 = fork(recolor, color, x36)\n    x38 = mapply(x37, x30)\n    x39 = merge(x38)\n    x40 = recolor(x4, x39)\n    O = paint(x22, x40)"], [1.1, "def solve_f1bb13b7(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_aed2df05(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_104508f4(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x17, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = s5000(x28, x24)\n    x30 =388(x29, x16)\n    x31 = rbind(greater, x15)\n    x32 = compose(x31, last)\n    x33 =88(x32)\n    x34 = vmirror(x30)\n    x35 = x32(x34)\n    x36 = width(x16)\n    x37 = crop(x35, ORIGIN, x36)\n    x38 = chain(positive, decrement, size)\n    x39 = rbind(toobject, x38)\n    x40 = rbind(colorcount, x7)\n    x41 = chain(x39, x40"], [1.1, "def solve_44ad6801(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_308d5604(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(positive, size)\n    x3 = lbind(intersection, x2)\n    x4 = chain(x2, x1, x3)\n    x5 = compose(positive, size)\n    x6 = fork(either, x4, x5)\n    x7 = fork(both, x2, x6)\n    x8 = rbind(shoot, UNITY)\n    x9 = rbind(shoot, NEG_UNITY)\n    x10 = fork(combine, x8, x9)\n    x11 = rbind(shoot, UP_RIGHT)\n    x12 = rbind(shoot, DOWN_LEFT)\n    x13 = fork(combine, x11, x12)\n    x14 = fork(combine, x10, x13)\n    x15 = ofcolor(I, ONE)\n    x16 = intersection(x15, x15)\n    x17 = lbind(apply, color)\n    x18 = chain(x17, x16, x9)\n    x19 = lbind(lbind, intersection)\n    x20 = chain(x19, x18, x9)\n    x21 = compose(x2, x20)\n    x22 = fork(pair, x21, identity)\n    x23 = sfilter(x16, x22)\n    x24 = argmax(x23, size)\n    x25 = matcher(first, ONE)\n    x26 = compose(flip, x25)\n    x27 = sfilter(x24, x26)\n    x28 = lbind(colorcount, I)\n    x29 = argmin(x27, x28)\n    x30 = ofcolor(I, x22)\n    x31 = leftmost(x30)\n    x32 = width(I)\n    x33 = interval(x31, x32, ONE)\n    x34 = rightmost(x30)\n    x35 = decrement(x34)\n    x36 = lbind(multiply, x35)\n    x37 = apply(x36, x33)\n    x38 = mapply(vfrontier,"], [1.1, "def solve_960f2cc4(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, identity, dmirror)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = apply(first, x22)\n    x24 = lbind(sfilter, x21)\n    x25 = compose(first, last)\n    x26 = lbind(matcher, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x27, x23)\n    x29 = lbind(shift, x15)\n    x30 = chain(x29, toivec, uppermost)\n    x31 = matcher(first, x18)\n    x32 = rbind(sfilter, x31)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(toindices, x32, x30)\n    x36 = chain(x33, x34, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = compose(color, x37)\n    x39 = compose(x32, x30)\n    x40 = fork(recolor, x38, x39)\n    x41 = fork(other, palette,"], [1.1, "def solve_fc637d33(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    x5 = palette(x4)\n    x6 = intersection(x5, x2)\n    x7 = lbind(colorcount, x4)\n    x8 = argmax(x6, x7)\n    x9 = leastcolor(x8)\n    x10 = matcher(first, x8)\n    x11 =004(x2, x10)\n    x12 = argmin(x11, x9)\n    x13 = merge(x11)\n    x14 = cover(x13, x12)\n    x15 = matcher(first, x9)\n    x16 = compose(flip, x15)\n    x17 = rbind(sfilter, x16)\n    x18 = mostcolor(I)\n    x19 = lbind(colorcount, x4)\n    x20 = chain(flip, x18, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(dmirror, x21)\n    x23 = x22(x41)\n    x24 = dmirror(x23)\n    x25 = chain(x19, x34, x24)\n    x26 = lbind(rapply, x29)\n    x27 = compose(x26, first)\n    x28 = chain(first, x24, x27)\n    x29 = rbind(ofcolor, x18)\n    x30 = fork(recolor, x18, x28)\n    x31 = compose(x29, x30)\n    x32 = fork(paint, identity, x31)\n    x33 = rbind(add, DOWN)\n    x34 = chain(positive, size, x33)\n    x35 = rbind(mfilter, x34)\n    x36 = compose(x35, x32)\n    x37 = sfilter(x2, x36)\n    x38 = lbind(paint, x5)\n    x39 = chain(x38, asobject, x"], [1.1, "def solve_52b9f265(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_b3813f22(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = replace(I, FOUR, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = replace(x2, FOUR, ZERO)\n    x4 =7513(x3)\n    x5 = ulcorner(x4)\n    x6 = subgrid(x4, x5)\n    x7 = replace(x6, ONE, ZERO)\n    O = replace(x7, DOWN, ZERO)\n    return O"], [1.1, "def solve_84e52fe0(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 =73mirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [1.1, "def solve_102a4ec9(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices ofI)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [1.1, "def solve_c6840d89(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =180007fOUR)\n    x2 = subgrid(x1, I)\n    x3 = mostcolor(x2)\n    x4 = replace(x2, x3, ZERO)\n    x5 = leastcolor(x4)\n    x6 = ofcolor(x2, x5)\n    x7 = recolor(x3, x6)\n    O = replace(x4, x5, x7)\n    return O"], [1.1, "def solve_e594a22c(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = switch(I, THREE, FOUR)\n    x2 =1115(x1)\n    x3 = argmin(x2, lrcorner)\n    x4 = urcorner(x3)\n    x5 = shoot(x4, NEG_UNITY)\n    x6 = shoot(x4, UP_RIGHT)\n    x7 = combine(x5, x6)\n    x8 = llcorner(x3)\n    x9 = compose(x8, invert)\n    x10 = power(x9, TWO)\n    x11 = initset(x2)\n    x12 = insert(x3, x11)\n    x13 = insert(x10, x12)\n    x14 = toobject(x13, I)\n    x15 = mapply(x9, x14)\n    x16 = height(I)\n    x17 = width(I)\n    x18 = divide(x16, x17)\n    x19 =389(x18)\n    x20 = toindices(x3)\n    x21 = chain(ZERO, x20, x11)\n    x22 = lbind(contained, ZERO)\n    x23 = compose(x22, outbox)\n    x24 = fork(add, identity, x23)\n    x25 = compose(invert, x24)\n    x26 = order(x21, x25)\n    x27 = fork(insert, identity, x66)\n    x28 = fork(insert, identity, x25)\n    x29 = fork(insert, identity, x28)\n    x30 = fork(insert, identity, x29)\n    x31 = switch(I, THREE, FOUR)\n    x32 = x31(x26)\n    x33 = invert(x32)\n    x34 = shift(x31, x33)\n    x35 = shift(x34, LEFT)\n    x36 = paint(x39, x35)\n    O = x30(x36)\n    return O"], [1.1, "def solve_a01d8e1a(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = last(x2)\n    x5 =446(447, x4)\n    x6 = recolor(x1, x5)\n    O = underfill(I, x1, x6)\n    return O"], [1.1, "def solve_7ed869d4(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = fork(insert, identity, identity)\n    x6 = compose(insert, x5)\n    x7 = fork(insert, cmirror, x6)\n    x8 = fork(insert, dmirror, x7)\n    x9 = fork(insert,cmirror, x8)\n    x10 = fork(insert, hmirror, x9)\n    x11 = mapply(x10, x4)\n    x12 = merge(x1)\n    x13 = vsplit(x61, x12)\n    x14 = mapply(x11, x13)\n    x15 = output:\n    1111114841\n    1111145851\n    1472584620\n    1642734888\n    8154415238\n    \"\"\"\n    x1 = argmax(x14, size)\n    x2 = subgrid(x1, I)\n    O = trim(x2)\n    return O"], [1.1, "def solve_b8c1863d(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = apply(normalize, x2)\n    x4 = astuple(NINE, NINE)\n    x5 = canvas(F25fbde4(x4)\n    x6 = asindices(x5)\n    x7 = box(x6)\n    x8 = center(x6)\n    x9 = lbind(contained, ZERO)\n    x10 = rbind(subtract, x8)\n    x11 = compose(x9, x10)\n    x12 = chain(outbox, outbox, initset)\n    x13 = corners(x6)\n    x14 = mapply(x12, x13)\n    x15 = difference(x7, x14)\n    x16 = inbox(x7)\n    x17 = sfilter(x16, x11)\n    x18 = difference(x16, x17)\n    x19 = fill(x5, ONE, x15)\n    x20 = fill(x19, TWO, x18)\n    x21 = ofcolor(x20, ZERO)\n    O = fill(x20, FOUR, x21)\n    return O"], [1.1, "def solve_ea07c672(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = first(x3)\n    x5 = rbind(colorcount, ZERO)\n    x6 = rbind(toobject, I)\n    x7 = compose(x5, x6)\n    x8 = chain(x7, x4, dneighbors)\n    x9 = matcher(x8,4200x4)\n    x10 = sfilter(x2, x9)\n    x11 = difference(x2, x10)\n    x12 = papply(recolor, x11, x10)\n    x13 = mapply(x5, x12)\n    x14 = paint(I, x13)\n    x15 = subgrid(x4, x14)\n    O = trim(x15)\n    return O"], [1.1, "def solve_215f5bb4(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 =424(I)\n    x2 = rbind(multiply, THREE)\n    x3 = rbind(divide, THREE)\n    x4 = compose(x2, x3)\n    x5 = fork(equality, identity, x4)\n    x6 = compose(x5, last)\n    x7 = sfilter(x1, x6)\n    x8 = rbind(multiply, THREE)\n    x9 = rbind(divide, THREE)\n    x10 = compose(x8, x9)\n    x11 = fork(equality, identity, x10)\n    x12 = compose(x11, last)\n    x13 = extract(x7, x12)\n    x14 = extract(xr, x13)\n    x15 = ulcorner(x14)\n    x16 = subgrid(x14, I)\n    x17 = replace(x16, ZERO, x14)\n    x18 = asobject(x17)\n    x19 = shift(x18, x15)\n    O = paint(I, x19)\n    return O"], [1.1, "def solve_d7bc4b60(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = trim(I)\n    x2 = repeat(x1, ONE)\n    x3 = numcolors(x2)\n    x4 = equality(x3, THREE)\n    x5 = height(x1)\n    x6 = width(x1)\n    x7 = astuple(x5, x6)\n    x8 = add(d406, TWO)\n    x9 = compose(outbox, x8)\n    x10 =\n    x11 = apply(x9, x7)\n    x12 = initset(x5)\n    x13 =71(x6)\n    x14 = insert(x12, x13)\n    x15 = toobject(x14, x1)\n    x16 = toindices(x15)\n    x17 = lbind(intersection, x16)\n    x18 = lbind(shift, x15)\n    x19 = compose(x17, x18)\n    x20 = toindices(x15)\n    x21 = lbind(intersection, x20)\n    x22 = chain(x19, size, x21)\n    x23 = fork(shift, x19, x22)\n    x24 = compose(x5, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = rot180(x24)\n    x28 = apply(x26, x27)\n    x29 = apply(x25, x28)\n    x30 = fork(combine, x28, x29)\n    x31 = x30(x15)\n    x32 = decrement(x31)\n    x33 = lbind(astuple, x32)\n    x34 = lbind(shift, x15)\n    x35 = compose(x33, x34)\n    x36 = apply(x35, x29)\n    O = x30(x36)\n    return O"], [1.1, "def solve_837e299d(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 =173(I)\n    x2 =29c(I)\n    x3 = fgpartition(x2)\n    x4 = merge(x3)\n    x5 = rbind(shoot, DOWN)\n    x6 = compose(x5, last)\n    x7 = fork(recolor, first, x6)\n    x8 = mapply(x7, x4)\n    O = paint(x1, x8)\n    return O"], [1.1, "def solve_f79d2d32(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(replace, x2)\n    x4 = compose(color, x3)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(SIX, SIX)\n    x9 = astuple(EIGHT, x8)\n    x10 = connect(ORIGIN, x9)\n    x11 = initset(UNITY)\n    x12 = recolor(ZERO, x11)\n    x13 = sfilter(x10, x12)\n    x14 = upscale(x13, TWO)\n    x15 = branch(x14, ORIGIN, RIGHT)\n    x16 = mapply(x5, x13)\n    x17 = apply(double, x16)\n    x18 = insert(x16, x17)\n    x19 = width(x15)\n    x20 = insert(x19, x18)\n    x21 = ulcorner(x15)\n    x22 = ulcorner(x18)\n    x23 = subtract(x21, x22)\n    x24 = add(x23, x20)\n    x25 = crop(x15, x27, x24)\n    x26 = hupscale(x25, x20)\n    x27 = compose(last, last)\n    x28 =9259(ZERO, x27)\n    x29 = h59(x28)\n    x30 = insert(x27, x28)\n    x31 = crop(x30, x29, x20)\n    x32 = vupscale(x31, x20)\n    O = other(x23, x32)\n    return O"], [1.1, "def solve_e16148b2(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =7313636344\n    6973281190\n    3424891948\n    9458092097\n    0962975318\n    6899378059\n    6567395500\n    0069332464\n    37149656707\n    \"\"\"\n    x2 = solve_e9af63ed(I):\n    O = hmirror(I)\n    return O"], [1.1, "def solve_189dd23b(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(9172mirror)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, EIGHT, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [1.1, "def solve_7c870502(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, height, width)\n    x8 = argmin(x7, size)\n    x9 = palette(x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 =37(x311)\n    x13 = colorcount(I, x11)\n    x14 = colorfilter(x1, x12)\n    x15 = argmax(x14, size)\n    x16 = remove(x15, x14)\n    x17 = apply(first, x16)\n    x18 = rbind(sfilter, x15)\n    x19 = chain(merge, x18, last)\n    x20 = x19(x17)\n    x21 = ofcolor(x20, x11)\n    x22 = subgrid(x21, I)\n    x23 = toobject(x22, x20)\n    x24 = delta(x23)\n    x25 = mapply(x19, x24)\n    x26 =06(x25)\n    x27 = paint(x20, x26)\n    x28 = matcher(first, x11)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(first, center, x29)\n    x31 = subgrid(x25, x22)\n    x32 =663(x31, x30)\n    x33 = lbind(shift, x28)\n    x34 = mapply(x33, x32)\n    O = paint(x37, x34)\n    return O"], [1.1, "def solve_42ac3a77(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 =171(I)\n    x25 = mapply(x23, x24)\n    x26 = paint(I, x25)\n    x27 = width(x7)\n    x28 = subtract(x37, x27)\n    x29 =88 divide(x28, x172)\n    x30 = tojvec(x29)\n    x31 = shift(x22, x30)\n    x32 =71(x31)\n    x33 = invert(x32)\n    x34 = shift(x28, x33)\n    x35 = branch(x20, x24, x28)\n    x36 = double(x19)\n    x37 = add(x39, x36)\n    x38 = frontiers(x35)\n    x39 = merge(x38)\n    x40 = shift(x34, x39)\n    O = paint(x26, x40)\n    return O"], [1.1, "def solve_6a6559c8(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = matcher(first, x3)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = size(x7)\n    x9 = positive(x8)\n    x10 = branch(x9, hmirror, vmirror)\n    x11 = ofcolor(I, x3)\n    x12 = leftmost(x11)\n    x13 = leftmost(x12)\n    x14 = greater(x13, x12)\n    x15 = uppermost(x11)\n    x16 = leftmost(x15)\n    x17 = branch(x14, add, x16)\n    x18 = ofcolor(I, x3)\n    x19 = ofcolor(I, x3)\n    x20 = leftmost(x19)\n    x21 = leftmost(x20)\n    x22 = greater(x21, x02)\n    x23 = uppermost(x11)\n    x24 = uppermost(x11)\n    x25 = astuple(x23, x24)\n    x26 = add(TWO, x25)\n    x27 = branch(x22, UP, x26)\n    x28 = asindices(I)\n    x29 = x27(x28)\n    x30 = shape(I)\n    x31 = canvas(x3, x30)\n    x32 = lbind(3305, manhattan)\n    x33 =5330(I)\n    x34 = mapply(x32, x33)\n    O = fill(x39, x3, x34)\n    return O"], [1.1, "def solve_389926ea(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =1998(I)\n    x2 = mostcolor(I)\n    x3 =279(x1)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = mapply( shoot, x4)\n    x6 = recolor(2, x5)\n    O = matcher(first, x2)\n    return O"], [1.1, "def solve_46334900(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = rot180(I)\n    x2 = rbind(greater, ONE)\n    x3 = chain(x2, minimum, shape)\n    x4 = branch(x3, x1, x1)\n    x5 =775(x4)\n    x6 = crop(x5, ORIGIN, x5)\n    x7 =91190696(x6)\n    x8 = fork(recolor, color, x7)\n    x9 = mapply(x8, x6)\n    O = paint(x5, x9)\n    return O"], [1.1, "def solve_f15aa06f(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =655532277(I):\n    x2 =261755965\n    x3 =8604225,3397702380\n    x4 = solve(I, x1)\n    x5 = fork(combine, vfrontier, hfrontier)\n    x6 = compose(x5, x4)\n    x7 = mapply(x6, x4)\n    O = underfill(x7, ZERO, x3)\n    return O"], [1.1, "def solve_4cc6c304(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = rot90(I)\n    x2 = rotcompose(I, x1)\n    x3 = rot77(I)\n    x4 =ilt(x3, x2)\n    x5 =379(x4)\n    x6 = apply(x2, x4)\n    x7 = cmirror(x6)\n    x8 = papply(shift, x7, x5)\n    O = paint(x1, x8)\n    return O"], [1.1, "def solve_eaf44018(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =d0694d9fac9df40)\n    x2 = tophalf(x1)\n    x3 = numcolors(x2)\n    x4 = bottomhalf(x1)\n    x5 = numcolors(x4)\n    x6 = bottomhalf(x1)\n    x7 = numcolors(x6)\n    x8 = intersection(x3, x4)\n    x9 = fill(I, EIGHT, x8)\n    x10 = fill(x9, FOUR, x7)\n    O = fill(x10, SEVEN, x8)\n    return O"], [1.1, "def solve_94e66f20(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(709, x2)\n    x4 = lbind(toobject, I)\n    x5 = compose(x4, x3)\n    x6 = palette(I)\n    x7 = UNITY(x6)\n    x8 =8731336x7)\n    x9 = matcher(first, x8)\n    x10 = sfilter(x6, x9)\n    x11 = rbind(colorcount, x8)\n    x12 = argmax(x10, x11)\n    x13 = leastcolor(I)\n    x14 = remove(x12, x10)\n    x15 = argmax(x14, x13)\n    x16 = merge(x12)\n    x17 = fill(I, x13, x16)\n    x18 =argmin(x14, x13)\n    x19 = ulcorner(x18)\n    x20 = increment(x19)\n    x21 = rbind(subtract, x20)\n    x22 = chain(toivec, x21, invert)\n    x23 = fork( shift, identity, x22)\n    x24 = mapply(x23, x11)\n    O = paint(x17, x24)\n    return O"], [1.1, "def solve_eb781931(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    O = fork(combine, dneighbors, identity)\n    x1 = x2(I)\n    x2 = decrement(x1)\n    x3 = tojvec(x2)\n    x4 = rbind(shoot, x3)\n    x5 =17(x2)\n    x6 = equality(x1, x5)\n    x7 = branch(x6, identity, crement)\n    x8 = x7(x2)\n    x9 = double(x8)\n    x10 = tojvec(x9)\n    x11 = mostcolor(I)\n    x12 = shape(I)\n    x13 = canvas(x11, x12)\n    x14 = hconcat(x9, x13)\n    x15 = objects(x14, F, F, T)\n    x16 = argmax(x15, numcolors)\n    x17 = canvas(x6, x16)\n    x18 = normalize(x16)\n    x19 = remove(x16, x1)\n    x20 = toindices(x18)\n    x21 = lbind(intersection, x19)\n    x22 = chain(x21, toindices, x18)\n    x23 = chain(size, x17, x22)\n    x24 =19(x2)\n    x25 = objects(x14, T, F, T)\n    x26 = intersection(x24, x25)\n    x27 = argmax(x26, x23)\n    x28 = x27(x222)\n    O = fill(x17, x color, x28)\n    return O"], [1.1, "def solve_f7818187(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 =885(x10)\n    x12 = vmirror(I)\n    x13 = lbind(shift, x12)\n    x14 = compose(x13, tojvec)\n    x15 = rbind(canvas, UNITY)\n    x16 = apply(x15, x11)\n    x17 = rbind(argmax, numcolors)\n    x18 = apply(x17, x16)\n    x19 = merge(x18)\n    x20 = size(x19)\n    x21 = increment(x40)\n    x22 = rbind(006, x21)\n    x23 = argmin(x20, x22)\n    x24 = repeat(x23, ONE)\n    x25 = asobject(I)\n    x26 = chain(x37, merge, x25)\n    x27 = width(x26)\n    x28 = astuple(x27, x24)\n    x29 = canvas(ZERO, x28)\n    x30 = asobject(x29)\n    x31 = matcher(first, x9)\n    x32 = compose(flip, x31)\n    x33 = sfilter(x30, x32)\n    x34 = shape(I)\n    x35 = double(x34)\n    x36 = divide(x35, x33)\n    x37 = increment(x36)\n    x38 = canvas(ZERO, x37)\n    x39 = paint(x38, x34)\n    O = x14(x39)\n    return O"], [1.1, "def solve_1f08f7ca(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = rbind(O = replace(I, EIGHT, TWO)\n    x3 = compose(x2, vmirror)\n    x4 =,filter(x1, x3)\n    x5 = merge(x4)\n    O = paint(I, x5)\n    return O"], [1.1, "def solve_4e53814b(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 =0470220111, ONE)\n    x4 = rbind(subgrid, I)\n    x5 = apply(x4, x2)\n    x6 = rbind(colorcount, ZERO)\n    x7 = matcher(x6, EIGHT)\n    x8 =filter(x5, x7)\n    x9 = merge(x8)\n    O = cover(I, x9)\n    return O"], [1.1, "def solve_16586c49(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 =1998(I)\n    x2 = compose(delta, outbox)\n    x3 = mapply(x2, x1)\n    O = fill(x3, EIGHT, x3)\n    return O"], [1.1, "def solve_534ff426(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = Tb548a(I):\n    x2 = height(I)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [1.1, "def solve_d906852c(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =15(I)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(x3, ONE)\n    x5 = flip(x4)\n    x6 = branch(x5, lefthalf, tophalf)\n    x7 = branch(x5, righthalf, bottomhalf)\n    x8 = branch(x5, hconcat, vconcat)\n    x9 = x6(I)\n    x10 = x7(I)\n    x11 = index(x9, ORIGIN)\n    x12 = shape(x10)\n    x13 = decrement(x12)\n    x14 = index(x10, x13)\n    x15 = mostcolor(I)\n    x16 = mostcolor(I)\n    x17 = palette(I)\n    x18 = remove(x11, x17)\n    x19 = remove(x14, x18)\n    x20 = remove(x16, x19)\n    x21 = first(x20)\n    x22 = replace(x9, x21, x11)\n    x23 = branch(x5, dmirror, identity)\n    x24 = branch(x5, height, width)\n    x25 = x24(I)\n    x26 = astuple(ONE, x25)\n    x27 = canvas(x15, x26)\n    x28 = x23(x27)\n    x29 = replace(x10, x21, x14)\n    x30 = x8(x22, x28)\n    x31 = branch(x5, width, height)\n    x32 = x31(I)\n    x33 = even(x32)\n    x34 = branch(x33, x22, x30)\n    O = x8(x34, x29)\n    return O"], [1.1, "def solve_c73f04cc(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 =801(I)\n    x2 =806(I, TEN)\n    x3 =006(I, THREE)\n    x4 = power(outbox, TWO)\n    x5 = chain(backdrop, x4, x2)\n    x6 = apply(x5, x3)\n    O = fill(x1, EIGHT, x6)\n    return O"], [1.1, "def solve_b6f01a00(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =45(I)\n    x2 = replace(x1, EIGHT, ZERO)\n    x3 = objects(x2, T, F, T)\n    x4 = apply(normalize, x3)\n    x5 = astuple(ONE, THREE)\n    x6 = canvas(EIGHT, x5)\n    x7 = compose(toindices, normalize)\n    x8 = lbind(extract, x4)\n    x9 = rbind(compose, initset)\n    x10 = lbind(compose, flip)\n    x11 = chain(x8, x9, x10)\n    x12 = chain(x8, x9, x11)\n    x13 = fork(contained, toindices, x12)\n    x14 = rbind(shift, RIGHT)\n    x15 = compose(x14, x13)\n    x16 = fork(contained, toindices, x15)\n    x17 = fork(either, x15, x16)\n    x18 = rbind(argmax, rightmost)\n    x19 = compose(x18, x17)\n    x20 = fork(both, x15, x19)\n    x21 = fork(both, x17, x20)\n    x22 = fork( both, x15, x21)\n    x23 = fork(both, x17, x22)\n    x24 =9697069699\n    x25 = mapply(x21, x4)\n    x26 =9697069429(x25)\n    x27 = papply(pair, x25, x26)\n    x28 = difference(x27, x24)\n    O = fill(x6, ONE, x28)\n    return O"], [1.1, "def solve_13adc3e7(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(rbind,475)\n    x2 = compose(positive, size)\n    x3 = lbind(filter, x1)\n    x4 = rbind(sfilter, x2)\n    x5 = chain(x3, x4, frontiers)\n    x6 = chain(size, dedupe, first)\n    x7 = chain(size, dedupe, last)\n    x8 = fork(greater, x6, x7)\n    x9 = fork(both, x3, x8)\n    x10 = leastcolor(I)\n    x11 = palette(I)\n    x12 = remove(x10, x11)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = switch(I, x13, x14)\n    x16 = interval(650, SIX, ONE)\n    x17 = product(x16, x16)\n    x18 = initset( lbind)\n    x19 = lbind(matcher, first)\n    x20 = compose(x19, last)\n    x21 = lbind(sfilter, x17)\n    x22 = lbind(upscale, x10)\n    x23 = fork(mapply, x20, x22)\n    x24 = lbind(Example output:\n    0520225\n    1111111\n    0211111\n    1111111\n    29110211\n    1111111\n    0411404\n    0119109\n    1414507\n    \"\"\"\n    x1 = compose(positive, size)\n    x2 = lbind(sfilter, x17)\n    x3 = lbind(matcher, first)\n    x4 = chain(x3, x2, mostcolor)\n    x5 = fork(recolor, x23, x4)\n    x6 = mapply(x5, x18)\n    O = paint(x15, x6)\n    return O"], [1.1, "def solve_28f26c8e(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple( LEFT, UP)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(x4, x3)\n    x6 = combine(x3, x5)\n    x7 = fork(either, vline, hline)\n    x8 = x7(x6)\n    x9 = rbind(toobject, I)\n    x10 = chain(numcolors, x9, palette)\n    x11 = matcher(x10, TWO)\n    x12 = extract(x6, x11)\n    x13 =124colors(x12)\n    x14 = matcher(first, x12)\n    x15 = compose(flip, x14)\n    x16 = rbind(sfilter, x15)\n    x17 =12445(x13)\n    x18 =754(x17)\n    x19 = chain(size, x16, x18)\n    x20 = matcher(x19, ONE)\n    x21 = rbind(sfilter, x20)\n    x22 = chain(merge, x21, x16)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x23, x9)\n    O = paint(I, x24)\n    return O"], [1.1, "def solve_d1920951(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =61ba2dee(I):\n    x2 = crop(I, ORIGIN, THREE_BY_THREE)\n    O = switch(x2, EIGHT, x2)\n    return O"], [1.1, "def solve_e47471a6(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =143333(I)\n    x2 =9999(1111, ZERO)\n    x3 = rot90(I)\n    x4 = N090(NEG_ONE)\n    x5 = lefthalf(x1)\n    x6 = righthalf(x1)\n    x7 = branch(x4, x5, x6)\n    x8 = branch(x43, x7, x6)\n    O = x8(x4)\n    return O"], [1.1, "def solve_475fb778(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =173(I)\n    x2 = tophalf(x1)\n    x3 = numcolors(x2)\n    x4 = equality(x3, ONE)\n    x5 = bottomhalf(x1)\n    x6 = numcolors(x5)\n    x7 = equality(x6, ONE)\n    x8 = bottomhalf(x1)\n    x9 = numcolors(x8)\n    x10 = equality(x9, ONE)\n    x11 = hmirror(x2)\n    x12 = lefthalf(x11)\n    x13 = righthalf(x11)\n    x14 = vmirror(x13)\n    x15 = cellwise(x12, x14, ZERO)\n    x16 = replace(x15, ONE, TWO)\n    x17 = replace(x16, ONE, TWO)\n    x18 =54555555 replace(x17, ONE, TWO)\n    x19 =54555555(x18, x17)\n    O = replace(x19, ONE, TWO)\n    return O"], [1.1, "def solve_a3773fdc(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =531498cf0(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.1, "def solve_3a714cc3(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =8870914\n    5887542089\n    5497880446\n    6087416927\n    4be270ca9\n    \"\"\"\n    x2 = subgrid(x1, I)\n    x3 = replace(x2, ZERO, ZERO)\n    O = replace(x3, ONE, ZERO)\n    return O"], [1.1, "def solve_cd3f6f63(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    O =6aacharacter(I, T)\n    return O"], [1.1, "def solve_4225c37b(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =675(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = frontiers(I)\n    x5 = merge(x4)\n    x6 = toindices(x5)\n    x7 = index(x3, x6)\n    x8 = frontiers(x3)\n    x9 = sfilter(x8, hline)\n    x10 = size(x9)\n    x11 = increment(x10)\n    x12 = increment(x11)\n    x13 = tojvec(x12)\n    x14 = tojvec(x12)\n    x15 =0923411245\n    x16 =119(x13, x15)\n    x17 =197(x5)\n    x18 = cover(x3, x17)\n    x19 =2299(x17)\n    x20 = lbind(shift, x16)\n    x21 = palette(x19)\n    x22 = compose(x20, x21)\n    x23 = fork(combine, x20, x22)\n    x24 = palette(x23)\n    x25 = compose(x23, x24)\n    x26 = mapply(x25, x24)\n    x27 =363(x26)\n    O = replace(x18, x27, x ZERO)\n    return O"], [1.1, "def solve_95804035(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = shape(I)\n    x2 = subtract(x1, TWO)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = width(I)\n    x6 = partition(I)\n    x7 = matcher(color, ZERO)\n    x8 = decrement(x1)\n    x9 = tojvec(x8)\n    x10 = connect(x7, x9)\n    x11 = height(I)\n    x12 = width(I)\n    x13 = ofcolor(I, ZERO)\n    x14 = tojvec(x12)\n    x15 = connect(x13, x14)\n    x16 = vatching(x3)\n    x17 = shape(I)\n    x18 = subtract(x16, x17)\n    x19 = connect(x18, x3)\n    x20 = fill(I, x9, x19)\n    x21 = toobject(x20, I)\n    x22 =\n    \"\"\"\n    x1 = height(x21)\n    x2 = equality(x22, ONE)\n    x3 = shape(x chain(numcolors, canvas)\n    x4 = canvas(ZERO, x3)\n    x5 = ofcolor(x41, ZERO)\n    x6 = intersection(x5, x5)\n    O = fill(x4, EIGHT, x6)\n    return O"], [1.1, "def solve_b27aabbe(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = toindices(x2)\n    x4 = normalize(x2)\n    x5 = toindices(x2)\n    x6 = center(x4)\n    x7 = intersection(x5, x6)\n    x8 = fill(I, FOUR, x7)\n    x9 = astuple(ZERO, ORIGIN)\n    x10 = initset(x9)\n    x11 = insert(x10, x7)\n    x12 = insert(x11, x10)\n    x13 = tojvec(x12)\n    x14 = toivec(x13)\n    x15 = fill(x8, ZERO, x14)\n    x16 = fill(x15, FOUR, x13)\n    x17 = fill(x16, FOUR, x10)\n    x18 = objects(x17, T, T, T)\n    x19 = merge(x18)\n    x20 = cover(x17, x19)\n    x21 = paint(x20, x19)\n    x22 = astuple(x24, x12)\n    x23 = astuple(x24, x10)\n    x24 = fill(x21, FOUR, x23)\n    x25 = fill(x24, THREE, x12)\n    x26 = fill(x25, TWO, x12)\n    x27 = fill(x26, ONE, x12)\n    x28 = fill(x27, excludes, x12)\n    x29 = fill(x28, THREE, x12)\n    x30 =\n    3777777795\n    7777777729\n    7777777776\n    7777777777\n    7777777777\n    7777777777\n    \"\"\"\n    O = fill(x29, THREE, x10)\n    return O"], [1.1, "def solve_3489bafc(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(TWO, LEFT)\n    x3 = rbind(toobject, I)\n    x4 = compose(x3, vmirror)\n    x5 = rbind(toobject, I)\n    x6 = chain(x2, x5, x4)\n    x7 = rbind(colorcount, x ZERO)\n    x8 = argmax(x1, x7)\n    x9 = x6(x8)\n    x10 = shoot(x8, UNITY)\n    x11 = fill(I, x8, x10)\n    x12 = color(x11)\n    x13 = subgrid(x11, x12)\n    x14 = leastcolor(x13)\n    x15 = mostcolor(x13)\n    x16 = replace(x13, x14, x12)\n    x17 = replace(x16, x15, x13)\n    x18 = compress(x17)\n    x19 = width(x13)\n    x20 = halve(x19)\n    x21 = increment(x20)\n    x22 = width(x13)\n    x23 = halve(x22)\n    x24 = increment(x23)\n    x25 = astuple(x21, x24)\n    x26 = canvas(x15, x25)\n    x27 =THfeca(x20)\n    x28 = tojvec(x27)\n    x29 = matcher(first, x18)\n    x30 = sfilter(x1, x29)\n    x31 = shift(x30, UP)\n    x32 = fill(x26, x14, x31)\n    x33 = shift(x31, DOWN)\n    O = fill(x32, x18, x33)\n    return O"], [1.1, "def solve_c7210437(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =3805679(I)\n    x2 =9619265977\n    3401500923\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [1.1, "def solve_fe1501d9(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =445(I)\n    x2 = fork(combine, vfrontier, hfrontier)\n    x3 = compose(x2, x1)\n    x4 = mapply(x3, x9)\n    O = fill(I, THREE, x4)\n    return O"], [1.1, "def solve_272eced3(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 =3807456(I)\n    x2 = asindices(x1)\n    x3 = objects(I, T, F, F)\n    x4 = toindices(x3)\n    x5 = asindices(I)\n    x6 = corners(x5)\n    x7 = lbind(rbind, difference)\n    x8 = toindices(x7)\n    x9 = rbind(compose, initset)\n    x10 = lbind(rbind, contained)\n    x11 = chain(x9, x10, initset)\n    x12 = lbind(argmin, x5)\n    x13 = chain(first, x12, x11)\n    x14 = asindices(x1)\n    x15 = ofcolor(I, x4)\n    x16 = intersection(x15, x14)\n    x17 = fill(I, ZERO, x16)\n    x18 = fork(recolor, color, x14)\n    x19 = mapply(x18, x15)\n    O = paint(x17, x19)\n    return O"], [1.1, "def solve_dc1fa544(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x\n    x1 = other(x7, x8)\n    x2 = vmirror(x8)\n    x3 = hconcat(x2, x8)\n    x4 =45(x3)\n    x5 =87(x4)\n    x6 = color(x5)\n    x7 = palette(x3)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, x5)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = partition(x5)\n    x13 =885(x12)\n    x14 =External(x13)\n    x15 = invert(x14)\n    x16 = cover(I, x11)\n    x17 = shoot(x15, UNITY)\n    x18 = shoot(x15, NEG_UNITY)\n    x19 = shoot(x15, UP_RIGHT)\n    x20 = shoot(x15, DOWN_LEFT)\n    x21 = combine(x17, x20)\n    x22 = combine(x18, x21)\n    x23 = fork(combine, vfrontier, hfrontier)\n    x24 = compose(x23, center)\n    x25 = mapply(x24, x22)\n    O = fill(x16, x11, x25)\n    return O"], [1.1, "def solve_c795a5e3(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 =889(I)\n    x2 = shape(I)\n    x3 = partition(I)\n    x4 = argmax(x3, size)\n    x5 = canvas(FIVE, x2)\n    O = paint(x5, x4)\n    return O"], [1.1, "def solve_ac97ce59(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 =5521c2gravitate(I, x1)\n    x2 = compose(crement, x1)\n    x3 = order(x1, x2)\n    x4 = first(x3)\n    x5 = last(x3)\n    x6 = ofcolor(I, x4)\n    x7 = ofcolor(I, x5)\n    x8 = neighbors(ORIGIN)\n    x9 = intersection(x8, x7)\n    x10 = power(x2, FOUR)\n    x11 = x10(I)\n    x12 = tojvec(x11)\n    x13 = shift(x11, x12)\n    x14 = x10(I)\n    x15 = x5(x14)\n    x16 = combine(x13, x15)\n    x17 = mapply(x2, x16)\n    O = fill(I, FOUR, x17)\n    return O"]], "bf699163": [[0.1607843137254902, "def solve_8747436a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, T, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.30490196078431375, "def solve_aa6e98a2(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_4682ec67(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_46cd0e30(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_ed7aad60(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_463751f4(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.32027505446623095, "def solve_4182867e(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = rbind(equality, x4)\n    x7 = argmin(x5, x6)\n    x8 = asindices(I)\n    x9 = ofcolor(I, x4)\n    x10 = difference(x8, x9)\n    x11 = fill(I, x7, x10)\n    x12 = frontiers(x11)\n    x13 = sfilter(x12, vline)\n    x14 = difference(x12, x13)\n    x15 = astuple(x14, x13)\n    x16 = apply(size, x15)\n    x17 = increment(x16)\n    O = canvas(x4, x17)\n    return O"], [0.3215686274509804, "def solve_fa0a5507(I):\n    x1 = asindices(I)\n    x2 = toobject(x1, I)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = rbind(colorcount, TWO)\n    x9 = argmax(x7, x8)\n    O = subgrid(x9, I)\n    return O"], [0.3215686274509804, "def solve_084f10d2(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = subgrid(x20, I)\n    x22 = switch(x21, x18, x19)\n    x23 = replace(x22, x18, x4)\n    x24 = lbind(downscale, x23)\n    x25 = fork(upscale, x24, identity)\n    x26 = matcher(x25, x23)\n    x27 = shape(x23)\n    x28 = maximum(x27)\n    x29 = interval(ONE, x28, ONE)\n    x30 = sfilter(x29, x26)\n    x31 = maximum(x30)\n    O = downscale(x23, x31)\n    return O"], [0.3215686274509804, "def solve_edf2e540(I):\n    x1 = width(I)\n    x2 = astuple(NINE, x1)\n    x3 = canvas(ZERO, x2)\n    x4 = vconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = rbind(colorcount, TWO)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.3215686274509804, "def solve_1f231c1c(I):\n    x1 = objects(I, T, F, T)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = lbind(sfilter, x3)\n    x5 = lbind(matcher, identity)\n    x6 = chain(size, x4, x5)\n    x7 = matcher(x6, ONE)\n    x8 = sfilter(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmax(x8, x9)\n    x11 = matcher(color, x10)\n    x12 = extract(x1, x11)\n    O = subgrid(x12, I)\n    return O"], [0.3215686274509804, "def solve_ee531e12(I):\n    x1 = width(I)\n    x2 = astuple(NINE, x1)\n    x3 = canvas(ZERO, x2)\n    x4 = vconcat(I, x3)\n    x5 = objects(x4, F, T, T)\n    x6 = rbind(colorcount, TWO)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.36851851851851847, "def solve_802eed96(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = color(x3)\n    x5 = remove(ZERO, x1)\n    x6 = other(x5, x4)\n    O = canvas(x6, UNITY)\n    return O"], [0.36851851851851847, "def solve_b23ce719(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.37411764705882355, "def solve_cad208c6(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = astuple(ONE, THREE)\n    x8 = size(x6)\n    x9 = order(x6, leftmost)\n    x10 = apply(color, x9)\n    x11 = rbind(canvas, UNITY)\n    x12 = apply(x11, x10)\n    x13 = merge(x12)\n    x14 = dmirror(x13)\n    x15 = subtract(NINE, x8)\n    x16 = astuple(ONE, x15)\n    x17 = mostcolor(I)\n    x18 = canvas(x17, x16)\n    x19 = hconcat(x14, x18)\n    x20 = hsplit(x19, THREE)\n    x21 = merge(x20)\n    x22 = crop(x21, ORIGIN, x7)\n    x23 = crop(x21, DOWN, x7)\n    x24 = crop(x21, TWO_BY_ZERO, x7)\n    x25 = vmirror(x23)\n    x26 = vconcat(x22, x25)\n    O = vconcat(x26, x24)\n    return O"], [0.37411764705882355, "def solve_cad91853(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = astuple(ONE, THREE)\n    x8 = size(x6)\n    x9 = order(x6, leftmost)\n    x10 = apply(color, x9)\n    x11 = rbind(canvas, UNITY)\n    x12 = apply(x11, x10)\n    x13 = merge(x12)\n    x14 = dmirror(x13)\n    x15 = subtract(NINE, x8)\n    x16 = astuple(ONE, x15)\n    x17 = mostcolor(I)\n    x18 = canvas(x17, x16)\n    x19 = hconcat(x14, x18)\n    x20 = hsplit(x19, THREE)\n    x21 = merge(x20)\n    x22 = crop(x21, ORIGIN, x7)\n    x23 = crop(x21, DOWN, x7)\n    x24 = crop(x21, TWO_BY_ZERO, x7)\n    x25 = vmirror(x23)\n    x26 = vconcat(x22, x25)\n    O = vconcat(x26, x24)\n    return O"], [0.3931917211328976, "def solve_c7dbe277(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.3931917211328976, "def solve_574f486b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.40763616557734206, "def solve_f594a25c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_c9eca4cf(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_f8673ff6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_0c008612(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_64dd5476(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_7dd18b34(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_0d70e1aa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_7a49e797(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_099d4c3d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_9d7960c4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.4296296296296296, "def solve_b9e61308(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.4296296296296296, "def solve_e406cac2(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.4296296296296296, "def solve_22e7556c(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = branch(x2, ONE, SEVEN)\n    O = canvas(x3, UNITY)\n    return O"], [0.4296296296296296, "def solve_4b3b4369(I):\n    x1 = fgpartition(I)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = compose(flip, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    O = canvas(x5, UNITY)\n    return O"], [0.4642600574712644, "def solve_af3ed0ae(I):\n    x1 = trim(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(x2)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(x2)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(x2)\n    x8 = lefthalf(x7)\n    x9 = palette(x4)\n    x10 = palette(x6)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x4)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x4)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5232709913889689, "def solve_0d02d8f4(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5232709913889689, "def solve_5c8f233d(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5361111111111111, "def solve_f3e72b6a(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.5587301587301587, "def solve_48213163(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, T, T)\n    x3 = first(x2)\n    x4 = vline(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(x1)\n    x7 = objects(x6, T, T, T)\n    x8 = order(x7, uppermost)\n    x9 = apply(color, x8)\n    x10 = dedupe(x9)\n    x11 = size(x10)\n    x12 = rbind(repeat, x11)\n    x13 = apply(x12, x10)\n    O = x5(x13)\n    return O"], [0.5900055192264699, "def solve_75888707(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5900055192264699, "def solve_14b120b7(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5900055192264699, "def solve_c375a6ee(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5900055192264699, "def solve_99db25b8(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5902430555555556, "def solve_e47c7452(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5902430555555556, "def solve_41fa00c0(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5902430555555556, "def solve_e14349cd(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5916319444444444, "def solve_7eae5fef(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.5936739417989418, "def solve_7ac1be8f(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [0.5936739417989418, "def solve_b15c2fb9(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [0.5982804232804233, "def solve_73f4927b(I):\n    x1 = asindices(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(greater, TWO)\n    x4 = compose(x3, size)\n    x5 = sfilter(x2, x4)\n    x6 = totuple(x5)\n    x7 = apply(color, x6)\n    x8 = apply(center, x6)\n    x9 = pair(x7, x8)\n    x10 = fill(I, ZERO, x1)\n    x11 = paint(x10, x9)\n    x12 = rbind(greater, ONE)\n    x13 = compose(dedupe, totuple)\n    x14 = chain(x12, size, x13)\n    x15 = sfilter(x11, x14)\n    x16 = rot90(x15)\n    x17 = sfilter(x16, x14)\n    O = rot270(x17)\n    return O"], [0.601945003353454, "def solve_14d734ef(I):\n    x1 = astuple(SIX, ONE)\n    x2 = crop(I, ORIGIN, x1)\n    x3 = hmirror(x2)\n    x4 = upscale(x3, THREE)\n    x5 = dmirror(x2)\n    x6 = hconcat(x5, x2)\n    O = upscale(x6, THREE)\n    return O"], [0.6163211951447245, "def solve_30ed39b2(I):\n    x1 = first(I)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(ONE, x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = objects(x6, T, F, F)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x5(x10)\n    return O"], [0.631901366607249, "def solve_12bf26e7(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.631901366607249, "def solve_bbd72cce(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.631901366607249, "def solve_8dcc0cf4(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.631901366607249, "def solve_4ee717cb(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.631901366607249, "def solve_86e9d730(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.6368028313150265, "def solve_c1a0a3c6(I):\n    O = subgrid(I, I)\n    return O"], [0.6600575299564271, "def solve_24cfb778(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.6600575299564271, "def solve_1425901f(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6600575299564271, "def solve_96367e9d(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.660134929337232, "def solve_f3432e08(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x7, x16)\n    x20 = ofcolor(x8, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, THREE, x21)\n    return O"], [0.660134929337232, "def solve_26ae7cbc(I):\n    x1 = hsplit(I, TWO)\n    x2 = apply(numcolors, x1)\n    x3 = equality(x2, TWO_BY_TWO)\n    x4 = branch(x3, hsplit, vsplit)\n    x5 = x4(I, TWO)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 = palette(x6)\n    x9 = palette(x7)\n    x10 = intersection(x8, x9)\n    x11 = first(x10)\n    x12 = palette(x6)\n    x13 = other(x12, x11)\n    x14 = palette(x7)\n    x15 = other(x14, x11)\n    x16 = shape(x6)\n    x17 = canvas(x11, x16)\n    x18 = ofcolor(x6, x13)\n    x19 = ofcolor(x7, x15)\n    x20 = combine(x18, x19)\n    O = fill(x17, SIX, x20)\n    return O"], [0.6648936711436711, "def solve_fea2dd17(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = height(x2)\n    x4 = halve(x3)\n    x5 = width(x2)\n    x6 = halve(x5)\n    x7 = ulcorner(x2)\n    x8 = lrcorner(x2)\n    x9 = shape(I)\n    x10 = maximum(x9)\n    x11 = multiply(THREE, TEN)\n    x12 = interval(ZERO, x11, ONE)\n    x13 = rbind(multiply, x4)\n    x14 = apply(x13, x12)\n    x15 = rbind(multiply, x6)\n    x16 = apply(x15, x12)\n    x17 = pair(x14, x16)\n    x18 = rbind(add, x7)\n    x19 = apply(invert, x17)\n    x20 = apply(x18, x19)\n    x21 = rbind(add, x8)\n    x22 = apply(x21, x17)\n    x23 = pair(x20, x22)\n    x24 = mapply(box, x23)\n    O = fill(I, x1, x24)\n    return O"], [0.6667887568583583, "def solve_3e53b338(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, SIX)\n    x3 = compose(flip, x2)\n    x4 = mfilter(x1, x2)\n    x5 = mfilter(x1, x3)\n    x6 = fill(I, TWO, x4)\n    O = fill(x6, ONE, x5)\n    return O"], [0.6696587388610415, "def solve_24e6775d(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.6696587388610415, "def solve_89fb4590(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, T, T)\n    x4 = merge(x3)\n    O = paint(x2, x4)\n    return O"], [0.674180469289165, "def solve_e69f26ec(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.6837830785199206, "def solve_b5240ed8(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_8c8a14d5(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_9114b9e5(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_d283af5c(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_9e682e8a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_19c63778(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_8e186af7(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_123b3dad(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6901349293372321, "def solve_ccb549cb(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_774620c3(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_e30533ef(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_71b9b227(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_507d7b13(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_0b7a725b(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_f93b0c11(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_377a47d0(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_2b3d5283(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_fc191c16(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    O = paint(x2, x4)\n    return O"], [0.6986111111111111, "def solve_2f205aff(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, vline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = combine(x15, x16)\n    x18 = intersection(x15, x16)\n    x19 = difference(x17, x18)\n    O = fill(x14, THREE, x19)\n    return O"], [0.700481793212685, "def solve_48e262cc(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.700481793212685, "def solve_fd781b02(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, T, F, T)\n    x9 = colorfilter(x8, x4)\n    x10 = sizefilter(x9, ONE)\n    x11 = merge(x10)\n    O = fill(x6, TWO, x11)\n    return O"], [0.700481793212685, "def solve_555fb7c6(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_95c35b68(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7026546999333007, "def solve_60d37582(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.7026546999333007, "def solve_d5ed6f6a(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.7088151265460183, "def solve_2863bdd1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = first(x2)\n    x4 = neighbors(x3)\n    x5 = mostcolor(I)\n    x6 = shape(I)\n    x7 = canvas(x5, x6)\n    x8 = initset(x3)\n    x9 = fill(x7, x1, x8)\n    O = fill(x9, TWO, x4)\n    return O"], [0.7121404907528761, "def solve_c1096266(I):\n    O = trim(I)\n    return O"], [0.7121404907528761, "def solve_67736be5(I):\n    O = trim(I)\n    return O"], [0.7121404907528761, "def solve_b786f420(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, height)\n    x3 = subgrid(x2, I)\n    O = trim(x3)\n    return O"], [0.7167554635380722, "def solve_7c43d454(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [0.7167554635380722, "def solve_86422e76(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [0.7167554635380722, "def solve_43d700f2(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [0.7275112822906941, "def solve_7382b409(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.7338151265460182, "def solve_30e48a57(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.7338151265460182, "def solve_e0cd8800(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.7338151265460182, "def solve_536c7915(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.7341722694031612, "def solve_810abb6b(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(greater, TWO)\n    x3 = chain(x2, minimum, shape)\n    x4 = fork(equality, toindices, box)\n    x5 = fork(both, x3, x4)\n    x6 = mfilter(x1, x5)\n    O = fill(I, SEVEN, x6)\n    return O"], [0.7341722694031612, "def solve_c6f48df8(I):\n    O = replace(I, SEVEN, FIVE)\n    return O"], [0.7394320423364541, "def solve_4e55c917(I):\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = lefthalf(x4)\n    x6 = righthalf(x4)\n    x7 = rbind(order, identity)\n    x8 = apply(x7, x5)\n    x9 = apply(x7, x6)\n    x10 = hconcat(x8, x9)\n    O = x3(x10)\n    return O"], [0.7410841473341474, "def solve_6ee59fd8(I):\n    x1 = crop(I, ORIGIN, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7421484598793515, "def solve_687daf70(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.7433389360698277, "def solve_cff284a0(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = contained(ZERO, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, ZERO)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.7433389360698277, "def solve_523d9c55(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.7433389360698277, "def solve_5883616d(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind( sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.7433389360698277, "def solve_d1509c3e(I):\n    O = vmirror(I)\n    return O"], [0.7433389360698277, "def solve_1d868504(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.7433389360698277, "def solve_74f08535(I):\n    O = vmirror(I)\n    return O"], [0.7433389360698277, "def solve_cbd1597b(I):\n    O = cmirror(I)\n    return O"], [0.7433389360698277, "def solve_761070fb(I):\n    O = rot180(I)\n    return O"], [0.7436960789269706, "def solve_10288e4a(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, EIGHT, x6)\n    return O"], [0.7436960789269706, "def solve_b19d2edb(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7436960789269706, "def solve_6f267caf(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7436960789269706, "def solve_2a1df969(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.7436960789269706, "def solve_10cf80c1(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_ca4e52c9(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7436960789269706, "def solve_0bfe2599(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.7436960789269706, "def solve_275a100d(I):\n    x1 = lbind(greater, TWO)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(toindices, x3)\n    x5 = rbind(shoot, RIGHT)\n    x6 = compose(x5, center)\n    x7 = fork(recolor, color, x6)\n    x8 = mapply(x7, x4)\n    O = underpaint(I, x8)\n    return O"], [0.7436960789269706, "def solve_f83cfc9e(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.7436960789269706, "def solve_bca68728(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.7436960789269706, "def solve_ce587d0c(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_29c981c4(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, TWO)\n    x3 = mfilter(x1, x2)\n    x4 = matcher(size, THREE)\n    x5 = mfilter(x1, x4)\n    x6 = matcher(size, FOUR)\n    x7 = mfilter(x1, x6)\n    x8 = fill(I, THREE, x3)\n    x9 = fill(x8, TWO, x5)\n    O = fill(x9, ONE, x7)\n    return O"], [0.7436960789269706, "def solve_a839b426(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7436960789269706, "def solve_16ca361e(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.7436960789269706, "def solve_c9b36130(I):\n    O = dmirror(I)\n    return O"], [0.7436960789269706, "def solve_e31408cd(I):\n    x1 = switch(I, THREE, FOUR)\n    O = replace(x1, EIGHT, NINE)\n    return O"], [0.7436960789269706, "def solve_f26a54c6(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [0.7436960789269706, "def solve_40070ff3(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_decdcc10(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.7436960789269706, "def solve_51a9ff61(I):\n    x1 = objects(I, T, F, T)\n    x2 = mapply(delta, x1)\n    O = fill(I, SEVEN, x2)\n    return O"], [0.7436960789269706, "def solve_a2c595f8(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7436960789269706, "def solve_7cf868b9(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_9a66bff6(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_5063e569(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, EIGHT, x6)\n    return O"], [0.7436960789269706, "def solve_c25ac752(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_c2a12f17(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.7436960789269706, "def solve_49b55b5b(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(shoot, RIGHT)\n    x4 = compose(x3, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(x1, DOWN_LEFT)\n    x9 = initset(x8)\n    x10 = mostcolor(I)\n    x11 = recolor(x10, x9)\n    x12 = objects(x7, T, F, T)\n    x13 = insert(x11, x12)\n    x14 = order(x13, uppermost)\n    x15 = first(x14)\n    x16 = remove(x11, x14)\n    x17 = remove(x15, x14)\n    x18 = compose(lrcorner, first)\n    x19 = compose(lrcorner, last)\n    x20 = fork(connect, x18, x19)\n    x21 = compose(color, first)\n    x22 = fork(recolor, x21, x20)\n    x23 = pair(x16, x17)\n    x24 = mapply(x22, x23)\n    O = underpaint(x7, x24)\n    return O"], [0.7436960789269706, "def solve_e4e70cb1(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, ONE, x6)\n    return O"], [0.7436960789269706, "def solve_c43ebc54(I):\n    O = dmirror(I)\n    return O"], [0.7436960789269706, "def solve_bf8b1bf4(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_0babfdda(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_5331b04f(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_acf6bdf9(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7436960789269706, "def solve_2ee32888(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.7436960789269706, "def solve_6cc4f03e(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_08232941(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [0.7436960789269706, "def solve_d7fccb94(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.7436960789269706, "def solve_0556d0a8(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_d9741062(I):\n    O = dmirror(I)\n    return O"], [0.7436960789269706, "def solve_ea483d50(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_c8d28a47(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.7436960789269706, "def solve_c0586be1(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_d54a664f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7436960789269706, "def solve_4194c07f(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_1f533393(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = fill(I, x8, x32)\n    return O"], [0.7436960789269706, "def solve_26ad5817(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = rbind(difference, x2)\n    x4 = rbind(greater, TWO)\n    x5 = chain(x4, size, x3)\n    x6 = compose(x5, dneighbors)\n    x7 = sfilter(x2, x6)\n    O = fill(I, ZERO, x7)\n    return O"], [0.7436960789269706, "def solve_81cb3365(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_165720ef(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_70e537c0(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(shoot, DOWN)\n    x3 = compose(x2, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    O = paint(I, x5)\n    return O"], [0.7436960789269706, "def solve_7ae31051(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.7436960789269706, "def solve_459c45f7(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_4e71abd1(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = colorfilter(x2, x1)\n    x4 = rbind(toobject, I)\n    x5 = chain(leastcolor, x4, delta)\n    x6 = rbind(shift, UP)\n    x7 = compose(x6, delta)\n    x8 = rbind(mapply, x3)\n    x9 = compose(x8, x7)\n    x10 = fork(4344, x7, x9)\n    x11 = mapply(x10, x3)\n    O = fill(I, x1, x11)\n    return O"], [0.7436960789269706, "def solve_99ad2cfe(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, EIGHT, x6)\n    return O"], [0.7436960789269706, "def solve_a527719e(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.7436960789269706, "def solve_62256d0a(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7436960789269706, "def solve_21c80f55(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.7436960789269706, "def solve_d8171682(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [0.7436960789269706, "def solve_a12a9fa9(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_bb7a076d(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.7436960789269706, "def solve_58912951(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_fc935b42(I):\n    x1 = fork(multiply, height, width)\n    x2 = partition(I)\n    x3 = argmax(x2, x1)\n    x4 = remove(x3, x2)\n    x5 = argmax(x4, x1)\n    x6 = other(x4, x5)\n    x7 = palette(I)\n    x8 = lrcorner(x5)\n    x9 = add(x8, UNITY)\n    x10 = llcorner(x5)\n    x11 = add(x10, DOWN_LEFT)\n    x12 = urcorner(x5)\n    x13 = add(x12, UP_RIGHT)\n    x14 = ulcorner(x5)\n    x15 = add(x14, NEG_UNITY)\n    x16 = shoot(x9, UNITY)\n    x17 = shoot(x11, DOWN_LEFT)\n    x18 = shoot(x13, UP_RIGHT)\n    x19 = shoot(x15, NEG_UNITY)\n    x20 = combine(x16, x17)\n    x21 = combine(x18, x19)\n    x22 = combine(x20, x21)\n    x23 = color(x6)\n    O = fill(I, x23, x22)\n    return O"], [0.7436960789269706, "def solve_c66b0680(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_1695ac79(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.7436960789269706, "def solve_6b2389c7(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_c7371453(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_a6007a60(I):\n    x1 = leastcolor(I)\n    x2 = height(I)\n    x3 = vsplit(I, x2)\n    x4 = lbind(recolor, TWO)\n    x5 = rbind(ofcolor, x1)\n    x6 = chain(x4, delta, x5)\n    x7 = fork(paint, identity, x6)\n    x8 = apply(x7, x3)\n    O = merge(x8)\n    return O"], [0.7436960789269706, "def solve_eb364f82(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_9370ba68(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.7436960789269706, "def solve_0c3b3abd(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_e2c11e11(I):\n    x1 = objects(I, F, F, T)\n    x2 = argmax(x1, numcolors)\n    x3 = astuple(TWO, FOUR)\n    x4 = rbind(contained, x3)\n    x5 = compose(x4, size)\n    x6 = rbind(sfilter, x5)\n    x7 = lbind(rbind, subtract)\n    x8 = lbind(occurrences, I)\n    x9 = lbind(lbind, shift)\n    x10 = compose(x7, ulcorner)\n    x11 = chain(x10, x6, normalize)\n    x12 = chain(x8, x6, normalize)\n    x13 = fork(apply, x11, x12)\n    x14 = compose(x9, normalize)\n    x15 = fork(mapply, x14, x13)\n    x16 = astuple(cmirror, dmirror)\n    x17 = astuple(hmirror, vmirror)\n    x18 = combine(x16, x17)\n    x19 = product(x18, x18)\n    x20 = fork(compose, first, last)\n    x21 = apply(x20, x19)\n    x22 = totuple(x21)\n    x23 = combine(x18, x22)\n    x24 = rapply(x23, x2)\n    x25 = mapply(x15, x24)\n    O = paint(I, x25)\n    return O"], [0.7436960789269706, "def solve_606449bf(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.7436960789269706, "def solve_f042c2d5(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.7436960789269706, "def solve_6e11b024(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_b07a8d11(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.7436960789269706, "def solve_29b8411f(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_8b036e59(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.7436960789269706, "def solve_836cc12d(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, TWO, x3)\n    return O"], [0.7436960789269706, "def solve_2ebdc1eb(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = chain(size, dedupe, first)\n    x9 = matcher(x8, ONE)\n    x10 = compose(first, cmirror)\n    x11 = chain(size, dedupe, x10)\n    x12 = matcher(x11, ONE)\n    x13 = fork(both, x9, x12)\n    x14 = rbind(rapply, I)\n    x15 = compose(initset, first)\n    x16 = chain(first, x14, x15)\n    x17 = compose(x13, x16)\n    x18 = extract(x7, x17)\n    x19 = first(x18)\n    x20 = last(x18)\n    x21 = x19(I)\n    x22 = width(x21)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = index(x21, x24)\n    x26 = asobject(x21)\n    x27 = matcher(first, x25)\n    x28 = compose(flip, x27)\n    x29 = sfilter(x26, x28)\n    x30 = hperiod(x29)\n    x31 = width(x21)\n    x32 = increment(x31)\n    x33 = interval(ZERO, x32, x30)\n    x34 = apply(tojvec, x33)\n    x35 = lbind(shift, x29)\n    x36 = mapply(x35, x34)\n    x37 = paint(x21, x36)\n    O = x20(x37)\n    return O"], [0.7436960789269706, "def solve_f0c062e9(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.7436960789269706, "def solve_fc762d37(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.7436960789269706, "def solve_360099ce(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = recolor(ZERO, x2)\n    x4 = normalize(x3)\n    x5 = occurrences(I, x4)\n    x6 = toindices(x4)\n    x7 = lbind(shift, x6)\n    x8 = mapply(x7, x5)\n    O = fill(I, x1, x8)\n    return O"], [0.7436960789269706, "def solve_05159e96(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_7cfb6dd5(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7440145502645503, "def solve_a1a881f1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.7440145502645503, "def solve_4b3dbf01(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = lbind(power, outbox)\n    x8 = chain(x7, halve, width)\n    x9 = initset(x8)\n    x10 = lbind(rapply, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = compose(backdrop, x12)\n    x14 = fork(difference, x13, toindices)\n    x15 = mapply(x14, x1)\n    x16 = mostcolor(I)\n    x17 = ofcolor(I, x16)\n    x18 = intersection(x15, x17)\n    O = fill(x6, THREE, x18)\n    return O"], [0.7440145502645503, "def solve_b607ec74(I):\n    x1 = leastcolor(I)\n    x2 = mostcolor(I)\n    x3 = ofcolor(I, x1)\n    x4 = replace(I, x1, x2)\n    x5 = mapply(dneighbors, x3)\n    x6 = mapply(ineighbors, x3)\n    x7 = fill(x4, ONE, x5)\n    O = fill(x7, x1, x6)\n    return O"], [0.7440145502645503, "def solve_bdb11c07(I):\n    x1 = leastcolor(I)\n    x2 = mostcolor(I)\n    x3 = ofcolor(I, x1)\n    x4 = replace(I, x1, x2)\n    x5 = mapply(dneighbors, x3)\n    x6 = mapply(ineighbors, x3)\n    x7 = fill(x4, ONE, x5)\n    O = fill(x7, x1, x6)\n    return O"], [0.7459101546601546, "def solve_21e98f9e(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.7459101546601546, "def solve_cca89912(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.7472675074983992, "def solve_23df3883(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = rbind(multiply, THREE)\n    x6 = rbind(divide, THREE)\n    x7 = compose(x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = toindices(x4)\n    x10 = compose(x8, last)\n    x11 = sfilter(x9, x10)\n    O = fill(I, SIX, x11)\n    return O"], [0.7472675074983992, "def solve_6482a033(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7472675074983992, "def solve_51e90d18(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7472675074983992, "def solve_40e9c8df(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7472675074983992, "def solve_34ac5d8e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7472675074983992, "def solve_13884eaa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7472675074983992, "def solve_7a598386(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7472675074983992, "def solve_24400ee6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7472675074983992, "def solve_e24c552d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7472675074983992, "def solve_4f193e82(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7472675074983992, "def solve_6a1912f2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7472675074983992, "def solve_f3e18066(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7472675074983992, "def solve_eee644a0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7480334878120887, "def solve_8c37c66c(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.7482270044770045, "def solve_adaea082(I):\n    x1 = objects(I, T, F, T)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = mostcommon(x3)\n    x5 = canvas(x4, TWO_BY_TWO)\n    x6 = asobject(x5)\n    x7 = palette(I)\n    x8 = matcher(identity, x4)\n    x9 = argmin(x7, x8)\n    x10 = shape(I)\n    x11 = canvas(x9, x10)\n    x12 = lbind(shift, x6)\n    x13 = occurrences(I, x6)\n    x14 = mapply(x12, x13)\n    O = paint(x11, x14)\n    return O"], [0.7532198884507801, "def solve_9af89688(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.7543625356125356, "def solve_423c1d40(I):\n    x1 = leastcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = colorfilter(x2, x1)\n    x4 = merge(x3)\n    x5 = delta(x4)\n    x6 = first(x5)\n    x7 = neighbors(x6)\n    O = fill(I, FOUR, x7)\n    return O"], [0.7615532217841134, "def solve_a4074d76(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7615532217841134, "def solve_c960a8fa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7615532217841134, "def solve_2434f2c6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7615532217841134, "def solve_646cb8a3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7615532217841134, "def solve_20542bfc(I):\n    x1 = objects(I, F, F, T)\n    x2 = argmax(x1, numcolors)\n    x3 = remove(x2, x1)\n    x4 = normalize(x2)\n    x5 = apply(ulcorner, x3)\n    x6 = lbind(shift, x4)\n    x7 = mapply(x6, x5)\n    x8 = paint(I, x7)\n    O = cover(x8, x2)\n    return O"], [0.7615532217841134, "def solve_65654a3a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.767824074074074, "def solve_1b1c9fca(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.767824074074074, "def solve_954eb638(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.767824074074074, "def solve_d5b63ed1(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.767824074074074, "def solve_a12e172f(I):\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.7724299455488776, "def solve_9bedaaf3(I):\n    x1 = index(I, ORIGIN)\n    x2 = objects(I, T, F, F)\n    x3 = fork(multiply, height, width)\n    x4 = fork(equality, size, x3)\n    x5 = chain(positive, decrement, size)\n    x6 = colorfilter(x2, x1)\n    x7 = fork(both, x4, x5)\n    x8 = sfilter(x6, x7)\n    x9 = merge(x8)\n    x10 = ofcolor(I, x1)\n    x11 = fill(I, FOUR, x10)\n    O = fill(x11, THREE, x9)\n    return O"], [0.7725859788359788, "def solve_2b688564(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, vmirror, hmirror)\n    x9 = x8(x6)\n    x10 = branch(x7, leftmost, uppermost)\n    x11 = branch(x7, tojvec, toivec)\n    x12 = x10(x5)\n    x13 = x10(x6)\n    x14 = greater(x12, x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = x11(x16)\n    x18 = shape(x6)\n    x19 = multiply(x17, x18)\n    x20 = shift(x9, x19)\n    x21 = fill(I, THREE, x3)\n    O = paint(x21, x20)\n    return O"], [0.7744675050279077, "def solve_f6d76d02(I):\n    x1 = palette(I)\n    x2 = remove(FIVE, x1)\n    x3 = first(x2)\n    x4 = ofcolor(I, x3)\n    x5 = fill(I, ZERO, x4)\n    x6 = ofcolor(I, FIVE)\n    O = fill(x5, x3, x6)\n    return O"], [0.7758389360698277, "def solve_7b9f301b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7758389360698277, "def solve_1499f949(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7758389360698277, "def solve_9467b2a4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [1.0, "def solve_a57bb1ab(I):\n    x1 = objects(I, T, F, T)\n    x2 = lbind(index, I)\n    x3 = compose(x2, lrcorner)\n    x4 = astuple(NEG_TWO, NEG_TWO)\n    x5 = rbind(subtract, x4)\n    x6 = rbind(shoot, x4)\n    x7 = compose(x5, x6)\n    x8 = fork(recolor, x3, x7)\n    x9 = mapply(x8, x1)\n    O = paint(I, x9)\n    return O"], [1.0, "def solve_2559f642(I):\n    x1 = rbind(Sfilter, vline)\n    x2 = compose(x1, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shift(x4, DOWN)\n    x6 = fill(x3, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [1.0, "def solve_3dcfe43c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_3bdae9ce(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = lbind(shift, x4)\n    x6 = mapply(x5, x2)\n    O = fill(I, THREE, x6)\n    return O"], [1.0, "def solve_17ae3959(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_e6b6f71e(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = connect(x3, x4)\n    x8 = combine(x7, x6)\n    O = fill(x1, EIGHT, x8)\n    return O"], [1.0, "def solve_a24c1107(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_eb5c8386(I):\n    x1 = fork(combine, vfrontier, hfrontier)\n    x2 = compose(x1, center)\n    x3 = fork(recolor, color, x2)\n    x4 = mapply(x3, x1)\n    x5 = paint(I, x4)\n    x6 = interval(ZERO, FIVE, ONE)\n    x7 = apply(double, x6)\n    x8 = apply(increment, x7)\n    x9 = apply(tojvec, x8)\n    x10 = prapply(shift, x1, x9)\n    x11 = apply(asobject, x10)\n    x12 = lbind(shift, x11)\n    x13 = mapply(x12, x2)\n    O = paint(x5, x13)\n    return O"], [1.0, "def solve_727dc712(I):\n    x1 = lbind(recolor, EIGHT)\n    x2 = rbind(ofcolor, ZERO)\n    x3 = chain(x1, backdrop, x2)\n    x4 = fork(paint, identity, x3)\n    x5 = height(I)\n    x6 = vsplit(I, x5)\n    x7 = mapply(x4, x6)\n    x8 = ofcolor(x7, EIGHT)\n    x9 = dmirror(I)\n    x10 = width(I)\n    x11 = vsplit(x9, x10)\n    x12 = mapply(x11, x8)\n    x13 = fill(x12, ZERO, x11)\n    x14 = dmirror(x13)\n    x15 = ofcolor(x14, EIGHT)\n    x16 = mapply(x15, x15)\n    O = fill(x13, ZERO, x16)\n    return O"], [1.0, "def solve_36f33f0c(I):\n    x1 = rot180(I)\n    x2 = rot270(I)\n    x3 = hconcat(I, x1)\n    x4 = hconcat(x3, x2)\n    O = vconcat(x4, x4)\n    return O"], [1.0, "def solve_4fe97998(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_5e0ff3e0(I):\n    x1 = vmirror(I)\n    O = hconcat(x1, I)\n    return O"], [1.0, "def solve_3ced58f2(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_37b12428(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_39e8e32b(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_f526a19c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_6ed2fc1c(I):\n    x1 = objects(I, T, F, T)\n    x2 = colorfilter(x1, ONE)\n    x3 = fork(subtract, first, last)\n    x4 = fork(multiply, sign, identity)\n    x5 = compose(x4, x3)\n    x6 = rbind(greater, TWO)\n    x7 = chain(x6, minimum, x5)\n    x8 = lbind(matcher, x7)\n    x9 = compose(x8, x3)\n    x10 = chain(sfilter, center, x9)\n    x11 = fork(shift, identity, x10)\n    x12 = mapply(x11, x2)\n    x13 = paint(I, x12)\n    x14 = canvas(ZERO, THREE_BY_THREE)\n    O = fill(x14, EIGHT, x2)\n    return O"], [1.0, "def solve_a5240307(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_8a691169(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = objects(x7, T, F, T)\n    x9 = colorfilter(x8, x6)\n    x10 = sizefilter(x9, ONE)\n    x11 = merge(x10)\n    x12 = argmax(x11, size)\n    x13 = subgrid(x12, x7)\n    x14 = width(x13)\n    x15 = divide(x14, x12)\n    x16 = downscale(x13, x15)\n    x17 = height(x16)\n    x18 = divide(x17, x12)\n    x19 = width(x12)\n    x20 = invert(x19)\n    x21 = interval(x20, x17, ONE)\n    x22 = prapply(shift, x7, x21)\n    x23 = merge(x22)\n    x24 = canvas(x6, x13)\n    x25 = asobject(x23)\n    x26 = insert(x24, x25)\n    x27 = height(x26)\n    x28 = increment(x18)\n    x29 = interval(ZERO, x28, x12)\n    x30 = apply(tojvec, x29)\n    x31 = pair(x30, x10)\n    x32 = sfilter(x31, ONE)\n    x33 = compose(size, first)\n    x34 = order(x32, x33)\n    x35 = apply(last, x34)\n    x36 = mpapply(recolor, x35, x32)\n    O = paint(x16, x36)\n    return O"], [1.0, "def solve_bcb376ba(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_4ffeddb9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_bdcadf62(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_65f78d9a(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_6338f343(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_1091f27e(I):\n    x1 = mostcolor(I)\n    x2 = colorcount(I, x1)\n    x3 = height(I)\n    x4 = width(I)\n    x5 = multiply(x3, x4)\n    x6 = subtract(x5, x2)\n    O = upscale(I, x6)\n    return O"], [1.0, "def solve_4c266689(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_28419118(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_7abb41f0(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_76c3f8ce(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_90e6c29c(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_64c1c1ce(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_469c75f2(I):\n    x1 = height(I)\n    x2 = vsplit(I, x1)\n    x3 = apply(asobject, x2)\n    x4 = apply(hperiod, x3)\n    x5 = minimum(x4)\n    x6 = width(I)\n    x7 = hsplit(I, x6)\n    x8 = apply(asobject, x7)\n    x9 = apply(vperiod, x8)\n    x10 = minimum(x9)\n    x11 = matcher(hperiod, x5)\n    x12 = sfilter(x3, x11)\n    x13 = mapply(palette, x12)\n    x14 = matcher(vperiod, x10)\n    x15 = sfilter(x8, x14)\n    x16 = mapply(palette, x15)\n    x17 = palette(I)\n    x18 = combine(x13, x16)\n    x19 = rbind(contained, x18)\n    x20 = argmin(x17, x19)\n    x21 = asobject(I)\n    x22 = matcher(first, x20)\n    x23 = compose(flip, x22)\n    x24 = sfilter(x21, x23)\n    x25 = height(I)\n    x26 = divide(x25, x10)\n    x27 = increment(x26)\n    x28 = width(I)\n    x09 = divide(x28, x5)\n    x20 = increment(x29)\n    x21 = invert(x27)\n    x22 = interval(x21, x27, ONE)\n    x23 = apply(tojvec, x22)\n    x24 = lbind(shift, x24)\n    x25 = mapply(x24, x23)\n    O = paint(I, x25)\n    return O"], [1.0, "def solve_ce1bf59f(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    O = vperiod(x3)\n    return O"], [1.0, "def solve_a6da8000(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = increment(UNITY)\n    x4 = neighbors(x3)\n    x5 = delta(x3)\n    x6 = tophalf(I)\n    x7 = shift(x5, x6)\n    x8 = fill(I, ZERO, x7)\n    x9 = shape(x8)\n    x10 = maximum(x9)\n    x11 = lbind(shift, x8)\n    x12 = mapply(x11, x4)\n    O = fill(x8, x1, x12)\n    return O"], [1.0, "def solve_28fab0a5(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_eb1fb102(I):\n    x1 = rot270(I)\n    x2 = fork(equality, identity, rot90)\n    x3 = chain(flip, x2, x1)\n    x4 = sfilter(x1, x3)\n    x5 = fork(multiply, height, width)\n    x6 = argmax(x4, x5)\n    x7 = x6(I)\n    x8 = remove(x6, x7)\n    x9 = argmax(x8, x8)\n    x10 = lbind(chain, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x10, x11)\n    x13 = lbind(sfilter, x17)\n    x14 = chain(initset, x13, x12)\n    x15 = fork(upscale, identity, x14)\n    x16 = compose(rot90, x15)\n    x17 = power(x16, TWO)\n    x18 = x17(x6)\n    x19 = hconcat(x18, x17)\n    x20 = hmirror(x19)\n    x21 = vconcat(x19, x20)\n    x22 = vconcat(x21, x6)\n    x23 = x17(x22)\n    x24 = ofcolor(x23, ZERO)\n    x25 = asindices(x23)\n    x26 = outbox(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, x23)\n    x29 = mostcolor(x28)\n    x30 = color(x2)\n    x31 = matcher(first, x29)\n    x32 = compose(flip, x31)\n    x33 = sfilter(x1, x32)\n    x34 = sizefilter(x33, ONE)\n    x35 = merge(x34)\n    x36 = fill(x23, x30, x35)\n    x37 = paint(x36, x21)\n    O = x17(x37)\n    return O"], [1.0, "def solve_c9e2d240(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_89f8f38b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_a884a768(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_9c01849c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, mat, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [1.0, "def solve_e2924178(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_40f86e64(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_bf036372(I):\n    x1 = replace(I, SEVEN, FIVE)\n    x2 = ofcolor(I, THREE)\n    x3 = portrait(x2)\n    x4 = branch(x3, dmirror, identity)\n    x5 = x4(I)\n    x6 = decrement(x5)\n    x7 = hsplit(x6, THREE)\n    x8 = rbind(ofcolor, THREE)\n    x9 = apply(x8, x7)\n    x10 = leastcommon(x9)\n    x11 = matcher(x8, x10)\n    x12 = extract(x7, x11)\n    O = x4(x12)\n    return O"], [1.0, "def solve_6446b59d(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_5c338025(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, T)\n    x4 = merge(x3)\n    x5 = color(x4)\n    x6 = palette(x2)\n    x7 = remove(x5, x6)\n    x8 = lbind(colorcount, x4)\n    x9 = argmin(x7, x8)\n    x10 = ofcolor(x1, x9)\n    x11 = ofcolor(x2, x9)\n    x12 = combine(x10, x11)\n    x13 = mapply(neighbors, x12)\n    x14 = difference(x12, x13)\n    x15 = toobject(x14, x1)\n    x16 = apply(initset, x15)\n    x17 = rbind(gravitate, x17)\n    x18 = compose(crement, x17)\n    x19 = fork(shift, identity, x18)\n    x20 = mapply(x19, x15)\n    x21 = cover(x1, x20)\n    x22 = paint(x21, x02)\n    O = rot90(x22)\n    return O"], [1.0, "def solve_4b657b37(I):\n    x1 = branch(I, x2, ZERO)\n    x2 = branch(x1, x3, x5)\n    O = branch(x1, x4, x2)\n    return O"], [1.0, "def solve_1c512565(I):\n    x1 = rot180(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = x3(I)\n    x6 = shape(x4)\n    x7 = canvas(ZERO, x6)\n    x8 = ofcolor(x4, ZERO)\n    x9 =iers(x8)\n    x10 = intersection(x8, x9)\n    x11 = fill(x7, ZERO, x10)\n    O = x2(x11)\n    return O"], [1.0, "def solve_91e2daab(I):\n    x1 = asindices(I)\n    x2 = shape(I)\n    x3 = halve(x2)\n    x4 = rbind(shoot, x3)\n    x5 = compose(x4, last)\n    x6 = fork(recolor, first, x5)\n    x7 = mapply(x6, x1)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_8f945ce1(I):\n    x1 = faffalf(I)\n    x2 = equality(x1, I)\n    x3 = branch(x2, ONE, SEVEN)\n    O = canvas(x3, UNITY)\n    return O"], [1.0, "def solve_5e966667(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(toobject, I)\n    x4 = compose(first, delta)\n    x5 = rbind(colorcount, x1)\n    x6 = matcher(x5, TWO)\n    x7 = chain(x6, x3, dneighbors)\n    x8 = rbind(sfilter, x7)\n    x9 = chain(first, x8, toindices)\n    x10 = fork(subtract, x4, x9)\n    x11 = fork(shoot, x4, x10)\n    x12 = mapply(x11, x2)\n    x13 = fill(I, x1, x12)\n    x14 = mapply(delta, x2)\n    O = fill(x13, ZERO, x14)\n    return O"], [1.0, "def solve_c764df95(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_c356f8f6(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_fe49977b(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_1988e87c(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x8)\n    x11 = palette(x9)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x8, x13)\n    x15 = ofcolor(x10, x13)\n    x16 = difference(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [1.0, "def solve_4be9b6dc(I):\n    x1 = halve(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [1.0, "def solve_c27661f2(I):\n    x1 =287257462\n    x2 = frontiers(I)\n    x3 = merge(x2)\n    x4 = difference(x1, x3)\n    x5 = mostcolor(x4)\n    x6 = objects(I, T, F, F)\n    x7 = color(x3)\n    x8 = matcher(color, x7)\n    x9 = matcher(color, x5)\n    x10 = fork(either, x8, x9)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x6, x11)\n    x13 = merge(x12)\n    x14 = palette(x13)\n    x15 = lbind(toobject, x13)\n    x16 = lbind(colorcount, x13)\n    x17 = chain(x16, x15, dneighbors)\n    x18 = matcher(x17, TWO)\n    x19 = rbind(adjacent, x2)\n    x20 = rbind(adjacent, x11)\n    x21 = fork(both, x18, x20)\n    x22 = compose(x21, initset)\n    x23 = sfilter(x12, x18)\n    x24 = sfilter(x12, x22)\n    x25 = product(x23, x24)\n    x26 = fork(combine, vfrontier, hfrontier)\n    x27 = mapply(x26, x25)\n    x28 = mostcolor(I)\n    x29 = fill(I, x28, x27)\n    O = fill(x29, x8, x27)\n    return O"], [1.0, "def solve_9bbe6b7f(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_81671bb3(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_594fcdbe(I):\n    x1 = frontiers(I)\n    x2 = palette(I)\n    x3 = compose(maximum, shape)\n    x4 = lbind(apply, x3)\n    x5 = lbind(shift, x1)\n    x6 = lbind(ofcolor, I)\n    x7 = compose(x4, x5)\n    x8 = subgrid(x2, I)\n    x9 = objects(x8, T, F, T)\n    x10 = colorfilter(x9, TWO)\n    x11 = apply(x7, x10)\n    x12 = mapply(x11, x11)\n    x13 = mapply(x5, x12)\n    x14 = replace(x13, ONE, SIX)\n    O = fill(x14, THREE, x12)\n    return O"], [1.0, "def solve_f4e94f93(I):\n    x1 = astuple(SIX, THREE)\n    x2 = astuple(FOUR, FOUR)\n    x3 = astuple(ONE, x2)\n    x4 = initset(x3)\n    x5 = insert(x14, x4)\n    x6 = insert(x1, x5)\n    x7 = apply(x6, x6)\n    x8 = crop(I, ORIGIN, THREE_BY_THREE)\n    O = asindices(x8)\n    return O"], [1.0, "def solve_d48bfcea(I):\n    x1 = first(I)\n    x2 = last(I)\n    x3 = equality(x1, x2)\n    x4 = crop(I, ORIGIN, THREE_BY_THREE)\n    x5 = branch(x3, x2, x4)\n    x6 = vconcat(I, x5)\n    O = replace(x6, ONE, TWO)\n    return O"], [1.0, "def solve_98cd6245(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = fork(multiply, height, width)\n    x4 = x3(I)\n    x5 = astuple(ONE, x4)\n    x6 = mostcolor(I)\n    x7 = canvas(x6, x5)\n    x8 = backdrop(x7)\n    x9 = lbind(hsplit, x8)\n    x10 = matcher(x9, x4)\n    x11 = fork(combine, vfrontier, hfrontier)\n    x12 = compose(x11, x10)\n    x13 = rbind(ofcolor, ZERO)\n    x14 = rbind(mapply, x12)\n    x15 = lbind(lbind, shift)\n    x16 = chain(x13, x14, x15)\n    x17 = apply(x16, x19)\n    O = paint(x7, x17)\n    return O"], [1.0, "def solve_21b08718(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(equality, toindices, box)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = argmax(x3, x4)\n    x6 = mostcolor(I)\n    x7 = inbox(x5)\n    x8 = backdrop(x7)\n    x9 = toobject(x8, I)\n    x10 = matcher(first, x6)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x9, x11)\n    x13 = normalize(x12)\n    x14 = color(x13)\n    x15 = toindices(x13)\n    x16 = compose(toindices, normalize)\n    x17 = matcher(x16, x15)\n    x18 = mfilter(x1, x17)\n    O = fill(I, x14, x18)\n    return O"], [1.0, "def solve_fc0118f4(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    x5 = palette(x4)\n    x6 = intersection(x5, x2)\n    x7 = lbind(colorcount, x4)\n    x8 = argmax(x6, x7)\n    x9 = remove(x8, x6)\n    x10 = rbind(contained, x9)\n    x11 = compose(x10, color)\n    x12 = sfilter(x3, x11)\n    x13 = lbind(colorcount, x4)\n    x14 = argmax(x12, x13)\n    x15 = objects(x12, T, F, F)\n    x16 = colorfilter(x15, x14)\n    x17 = difference(x15, x16)\n    x18 = apply(leftmost, x17)\n    x19 = size(x18)\n    x20 = apply(uppermost, x17)\n    x21 = size(x20)\n    x22 = greater(x19, x21)\n    x23 = rbind(adjacent, x28)\n    x24 = rbind(adjacent, x22)\n    x25 = chain(x23, x24, last)\n    x26 = compose(x22, first)\n    x27 = fork(both, x25, x26)\n    x28 = sfilter(x18, x27)\n    x29 = compose(toindices, first)\n    x30 = lbind(mapply, x29)\n    x31 = chain(x30, x29, first)\n    x32 = fork(recolor, x31, x30)\n    x33 = mapply(x32, x18)\n    x34 = paint(x1, x33)\n    O = x38(x34)\n    return O"], [1.0, "def solve_5d582e24(I):\n    x1 = objects(I, T, F, T)\n    x2 = palette(I)\n    x3 = lbind(sfilter, x1)\n    x4 = rbind(compose, palette)\n    x5 = lbind(lbind, contained)\n    x6 = chain(x3, x4, x5)\n    x7 = compose(size, x6)\n    x8 = argmax(x2, x7)\n    x9 = rbind(colorcount, x8)\n    x10 = valmax(x2, x9)\n    x11 = matcher(x9, x10)\n    x12 = sfilter(x1, x11)\n    x13 = merge(x12)\n    x14 = palette(x13)\n    x15 = lbind(colorcount, x13)\n    x16 = argmin(x14, x15)\n    x17 = rbind(colorcount, x16)\n    x18 = argmax(x12, x17)\n    x19 = apply(ulcorner, x12)\n    x20 = lbind(shift, x18)\n    x21 = mapply(x20, x19)\n    x22 = paint(I, x21)\n    O = rot90(x22)\n    return O"], [1.0, "def solve_1ffb18e1(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_e9dc5f5d(I):\n    x1 = astuple(ONE, THREE)\n    x2 = size(I)\n    x3 = decrement(x2)\n    x4 = astuple(x3, ONE)\n    x5 = canvas(ZERO, x4)\n    x6 = tojvec(x3)\n    x7 = rbind(shoot, x6)\n    x8 = crement(x2)\n    x9 = lefthalf(x8)\n    x10 = insert(x7, x9)\n    x11 = width(I)\n    x12 = shoot(x4, DOWN)\n    x13 =tojvec(x12)\n    x14 = rbind(shoot, x13)\n    x15 = creine(x14)\n    x16 = insert(x7, x15)\n    x17 = mapply(x7, x11)\n    x18 = combine(x10, x17)\n    x19 = fill(x5, ZERO, x18)\n    O = replace(x19, ZERO, ONE)\n    return O"], [1.0, "def solve_5d37e618(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_4618d3f2(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_396f6c7c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_5e276d71(I):\n    x1 = rot35(I)\n    x2 = rbind(shoot, UP)\n    x3 = compose(x2, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    O = paint(x1, x5)\n    return O"], [1.0, "def solve_3ad9e0a5(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_4a12020f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = rbind(multiply, THREE)\n    x8 = apply(x7, x6)\n    O = rot180(x6)\n    return O"], [1.0, "def solve_a14b567d(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [1.0, "def solve_fe998a9f(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_268ab6ab(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x4)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x6)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x4)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x4)\n    x26 = x22(x6)\n    x27 = x25(x2)\n    x28 = paint(x18, x27)\n    x29 = paint(x28, x26)\n    x30 = paint(x29, x25)\n    O = paint(x30, x24)\n    return O"], [1.0, "def solve_df958280(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_3d08137f(I):\n    x1 =50005\n    x2 = fgpartition(I)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = difference(x1, x4)\n    x6 = objects(I, T, F, T)\n    x7 = colorfilter(x6, ZERO)\n    x8 = rbind(shoot, DOWN)\n    x9 = mapply(x8, x7)\n    x10 = double(TEN)\n    x11 = rbind(greater, x10)\n    x12 = compose(x11, size)\n    x13 = mapply(x12, x9)\n    x14 = fill(I, ZERO, x13)\n    x15 = replace(x14, ZERO, EIGHT)\n    O = fill(x15, dmirror, x15)\n    return O"], [1.0, "def solve_16d90b02(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_a1b1b80a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = connect(x3, x4)\n    x8 = connect(x3, x5)\n    x9 = combine(x7, x8)\n    O = leastcolor(x9)\n    return O"], [1.0, "def solve_84167e7e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_b177332f(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_d0f48e69(I):\n    x1 = rbind(shoot, UNITY)\n    x2 = compose(x1, center)\n    x3 = fork(recolor, color, x2)\n    x4 = mapply(x3, x1)\n    x5 = objects(I, T, F, T)\n    x6 = rbind(colorcount, SIX)\n    x7 = valmax(x5, x6)\n    x8 = matcher(x6, x7)\n    x9 = sfilter(x8, x8)\n    x10 = merge(x9)\n    x11 = cover(I, x10)\n    x12 = rbind(toobject, I)\n    x13 = chain(delta, x12, delta)\n    x14 = mapply(x13, x9)\n    O = paint(x11, x14)\n    return O"], [1.0, "def solve_1e51567c(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_11dc1aab(I):\n    x1 = ofcolor(I, ONE)\n    x2 = lbind(rbind, shoot)\n    x3 = lbind(mapply, x2)\n    x4 = rbind(shoot, UP)\n    x5 = rbind(shoot, DOWN)\n    x6 = fork(combine, x3, x5)\n    x7 = fork(intersection, x1, x6)\n    x8 = size(x1)\n    x9 = decrement(x8)\n    x10 = index(I, x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, LEFT, RIGHT)\n    x13 = compose(size, x12)\n    x14 = decrement(x13)\n    x15 = index(I, x14)\n    x16 = equality(x15, ZERO)\n    x17 = branch(x16,leftmost, uppermost)\n    x18 = x17(x14)\n    x19 = shift(x18, UNITY)\n    x20 = x17(x19)\n    x21 = first(x20)\n    x22 = last(x21)\n    x23 = x17(x22)\n    x24 = color(x23)\n    x25 = branch(x11, RIGHT, LEFT)\n    x26 = x25(x20)\n    x27 = initset(x26)\n    x28 = insert(x25, x27)\n    x29 = insert(x24, x28)\n    x30 = insert(x22, x29)\n    x31 =recbind(greater, x30)\n    x32 = compose(x31, ulcorner)\n    x33 = sfilter(x30, x32)\n    x34 = merge(x33)\n    x35 = cover(I, x34)\n    x36 = subgrid(x35, x35)\n    O = paint(x36, x33)\n    return O"], [1.0, "def solve_299ba4db(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = EIGHT(x4)\n    return O"], [1.0, "def solve_af3078d2(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_4dd02a86(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_d77aeb5b(I):\n    x1 = dmirror(I)\n    x2 = equality(x1, I)\n    x3 = compose(dedupe, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = last(x6)\n    x8 = first(x6)\n    x9 = last(x6)\n    x10 = switch(x7, x8, x9)\n    x11 = forward(x10)\n    x12 = replace(x11, ONE, x6)\n    x13 = ofcolor(x12, ONE)\n    x14 = combine(x13, x7)\n    x15 = fill(x12,428, x14)\n    x16 = ofcolor(x15, ONE)\n    x17 = mapply(neighbors, x16)\n    x18 = difference(x17, x15)\n    O = fill(x15, EIGHT, x18)\n    return O"], [1.0, "def solve_bfe83657(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_d799a856(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(merge, x3)\n    x5 = merge(x4)\n    x6 = toindices(x5)\n    x7 = rbind(shoot, UP_RIGHT)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    x10 = fill(I, EIGHT, x9)\n    x11 = hmirror(x10)\n    x12 = index(x11, ORIGIN)\n    x13 = shoot(ORIGIN, UNITY)\n    x14 = fill(x10, DOWN, x13)\n    x15 = indexcolors(x11)\n    x16 = apply(Example, x15)\n    x17 = remove(x16, x15)\n    x18 = lbind(mapply, x7)\n    x19 = chain(x18, positive, size)\n    x20 = branch(x17, x19, x15)\n    O = x19(x20)\n    return O"], [1.0, "def solve_b292fa38(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = initset(x1)\n    x5 = chain(numcolors, lefthalf, tophalf)\n    x6 = insert(x2, x4)\n    x7 = insert(x3, x6)\n    x8 = insert(x7, x5)\n    x9 = argmax(x8, x5)\n    x10 = cover(x1, x9)\n    O = paint(x10, x4)\n    return O"], [1.0, "def solve_f662032c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_860b98fc(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(greater, size, dedupe)\n    x3 = equality(x1, TWO)\n    x4 = branch(x3, height, width)\n    x5 = x4(I)\n    x6 = equality(ONE, x5)\n    x7 = branch(x6, vsplit, hsplit)\n    x8 = x7(I, TWO)\n    x9 = order(x8, numcolors)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = objects(x11, F, F, T)\n    x13 = merge(x12)\n    x14 = mostcolor(x13)\n    x15 = matcher(first, x14)\n    x16 = compose(flip, x15)\n    x17 = rbind(sfilter, x16)\n    x18 = mostcolor(x10)\n    x19 = lbind(recolor, x18)\n    x20 = rbind(sfilter, x15)\n    x21 = compose(toindices, x20)\n    x22 = chain(x19, x21, normalize)\n    x23 = objects(x11, T, F, T)\n    x24 = colorfilter(x23, x18)\n    x25 = rbind(bordering, x10)\n    x26 = compose(flip, x25)\n    x27 = mfilter(x24, x26)\n    x28 = paint(x11, x27)\n    x29 = replace(x28, x18, x137)\n    x30 = x22(x29)\n    x31 = x22(x30)\n    x32 = flip(x6)\n    x33 = branch(x32, invert, outbox)\n    x34 = branch(x32, subgrid, x33)\n    x35 = apply(x34, x32)\n    O = x17(x35)\n    return O"], [1.0, "def solve_0784a25f(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = compose(x2, x1)\n    x4 = fork(intersection, x1, x3)\n    x5 = compose(size, x4)\n    x6 = palette(I)\n    x7 = matcher(x5, ZERO)\n    x8 = sfilter(x6, x7)\n    x9 = totuple(x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = mapply(neighbors, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = ofcolor(I, x11)\n    x17 = mapply(neighbors, x16)\n    x18 = toobject(x17, I)\n    x19 = mostcolor(x18)\n    x20 = rbind(shoot, UNITY)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = fork(combine, x20, x21)\n    x23 = rbind(shoot, UP_RIGHT)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = fork(combine, x23, x24)\n    x26 = fork(combine, x22, x25)\n    x27 = ofcolor(I, x11)\n    x28 = ofcolor(I, x10)\n    x29 = combine(x27, x28)\n    x30 = mapply(x26, x29)\n    x31 = ofcolor(I, x15)\n    x32 = intersection(x31, x30)\n    x33 = ofcolor(I, x19)\n    x34 = intersection(x33, x30)\n    x35 = fill(I, x10, x32)\n    O = fill(x35, x11, x34)\n    return O"], [1.0, "def solve_07cfb384(I):\n    x1 = asobject(I)\n    x2 = lbind(shift, x1)\n    x3 = compose(x2, decrement)\n    x4 = mapply(x3, x1)\n    O = paint(I, x4)\n    return O"], [1.0, "def solve_90f29ed4(I):\n    x1 =41388428\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = solve(doubleneighbors, x3)\n    x5 = astuple(ONE, NINE)\n    x6 = canvas(ZERO, x5)\n    x7 = fill(x6, ONE, x4)\n    x8 = hsplit(x7, THREE)\n    O = merge(x8)\n    return O"], [1.0, "def solve_612c7ac5(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_09dc8890(I):\n    x1 = hconcat(I, I)\n    x2 = vconcat(x1, x1)\n    x3 = asindices(x2)\n    x4 = mostcolor(I)\n    x5 = ofcolor(x2, x4)\n    x6 = difference(x3, x5)\n    x7 = mapply(ineighbors, x6)\n    O = underfill(x2, EIGHT, x7)\n    return O"], [1.0, "def solve_59af1e5e(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_6d19cad6(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_a9ade526(I):\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, x1)\n    x3 = lbind(toobject, I)\n    x4 = chain(x2, x3, ZERO)\n    x5 = fork(both, x4, x5)\n    x6 = compose(5, x5)\n    x7 = fork(hmatching, x6, identity)\n    x8 = compose(NEG_ONE, x7)\n    x9 = lbind(apply, x8)\n    x10 = chain(even, x9, leastcolor)\n    x11 = lbind(sfilter, x1)\n    x12 = compose(dmirror, x11)\n    x13 = lbind(lbind, shift)\n    x14 = rbind(compose, x12)\n    x15 = lbind(lbind, occurrences)\n    x16 = chain(x13, x14, x15)\n    x17 = rbind(compose, x10)\n    x18 = lbind(lbind, occurrences)\n    x19 = chain(x17, x18, xin)\n    x20 = rbind(mapply, x10)\n    x21 = compose(x20, x7)\n    x22 = fork(compose, x21, x7)\n    x23 = pair(x15, x17)\n    x24 = mapply(x22, x23)\n    O = underfill(I, ONE, x24)\n    return O"], [1.0, "def solve_0acc32c5(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_86cf3b27(I):\n    x1 = asobject(I)\n    x2 = hperiod(x1)\n    x3 = height(x1)\n    x4 = lbind(multiply, x3)\n    x5 = height(I)\n    x6 = subtract(x3, x5)\n    x7 = rot90(I)\n    x8 = rot180(I)\n    x9 = astuple(x6, x7)\n    x10 = astuple(x8, x9)\n    x11 = papply(shift, x7, x10)\n    x12 = apply(hmirror, x11)\n    x13 = mapply(vmirror, x12)\n    x14 = astuple(x6, x13)\n    x15 = canvas(x4, x14)\n    x16 = paint(x15, x13)\n    O = rot270(x16)\n    return O"], [1.0, "def solve_244c4426(I):\n    x1 = lbind(greater, TWO)\n    x2 = compose(x1, size)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(merge, x3, identity)\n    x5 = apply(x4, I)\n    x6 = chain(identity, merge, hmirror)\n    x7 = apply(x6, x5)\n    x8 = merge(x7)\n    x9 = fill(I, FOUR, x8)\n    x10 = compose(hmirror, vmirror)\n    x11 = fork(combine, x10, x9)\n    x12 = apply(x11, x5)\n    O = fill(x9, TWO, x12)\n    return O"], [1.0, "def solve_1e92da8f(I):\n    x1 = hmirror(I)\n    x2 = papply(pair, x1, I)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    O = apply(x2, x6)\n    return O"], [1.0, "def solve_2ca75bd8(I):\n    x1 = ofcolor(I, ONE)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = ofcolor(I, x4)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = mfilter(x5, x7)\n    x9 = fill(I, TWO, x8)\n    x10 = ofcolor(I, x4)\n    O = fill(x9, FOUR, x10)\n    return O"], [1.0, "def solve_c5e07062(I):\n    x1 = astuple( SEVEN, FIVE)\n    x2 = canvas(ZERO, x1)\n    x3 = tojvec(SIX)\n    x4 = index(I, x3)\n    x5 = equality(x4, FOUR)\n    x6 = branch(x5, lefthalf, tophalf)\n    x7 = branch(x5, righthalf, bottomhalf)\n    x8 = x4(I)\n    x9 = x7(I)\n    x10 = shape(x8)\n    x11 = canvas(x8, x10)\n    x12 = intersection(x9, x11)\n    O = fill(x11, TWO, x12)\n    return O"], [1.0, "def solve_0960938f(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x11, x16)\n    x20 = ofcolor(x18, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, SIX, x21)\n    return O"], [1.0, "def solve_3be0c54b(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_8fc3afc9(I):\n    x1 = dmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = objects(x2, F, F, T)\n    x4 = argmin(x3, numcolors)\n    x5 = astuple(ONE, x4)\n    x6 = subgrid(x4, x5)\n    x7 = lefthalf(x6)\n    x8 = righthalf(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [1.0, "def solve_615572ce(I):\n    x1 = command36(I, EIGHT)\n    x2 = d037(x1)\n    x3 = apply(initset, x2)\n    x4 = rbind(rapply, I)\n    x5 = compose(first, x4)\n    x6 = compose(c59eb873, x5)\n    x7 = fork(recolor, x6, identity)\n    x8 = mapply(x7, x3)\n    x9 = palette(I)\n    x10 = remove(ZERO, x9)\n    x11 = other(x10, x8)\n    x12 = ofcolor(I, x11)\n    x13 = argmin(x12, last)\n    x14 = replace(I, x11, ZERO)\n    x15 = ofcolor(x14, x15)\n    x16 = subgrid(x15, x14)\n    x17 = mapply(x16, x16)\n    O = replace(x17, x11, ZERO)\n    return O"], [1.0, "def solve_2a6fb118(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_238d1110(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 = difference(x1, x2)\n    x9 = compose(normalize, toindices)\n    x10 = x9(x6)\n    x11 = x9(x7)\n    x12 = matcher(x9, x10)\n    x13 = matcher(x9, x11)\n    x14 = extract(x8, x12)\n    x15 = extract(x8, x13)\n    x16 = ulcorner(x6)\n    x17 = ulcorner(x7)\n    x18 = ulcorner(x14)\n    x19 = ulcorner(x15)\n    x20 = subtract(x16, x18)\n    x21 = subtract(x17, x19)\n    x22 = move(I, x14, x20)\n    O = move(x22, x15, x21)\n    return O"], [1.0, "def solve_be76cc93(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_b4eb0f69(I):\n    O = upscale(I, TWO)\n    return O"], [1.0, "def solve_dccf82fc(I):\n    x1 = fill(I, FOUR, x2)\n    x2 = astuple(TWO, FOUR)\n    x3 = size(x1)\n    x4 = order(x1, leftmost)\n    x5 = apply(color, x4)\n    x6 = rbind(canvas, x5)\n    x7 = apply(x6, x5)\n    x8 = merge(x7)\n    x9 = dmirror(x8)\n    x10 = subtract(NINE, x3)\n    x11 = astuple(x10, x4)\n    x12 = canvas(ZERO, x11)\n    x13 = hconcat(x9, x12)\n    x14 = hsplit(x13, TWO)\n    x15 = merge(x14)\n    x16 = crop(x15, ORIGIN, x2)\n    x17 = crop(x15, DOWN, x2)\n    x18 = crop(x15, TWO_BY_ZERO, x2)\n    x19 = vmirror(x17)\n    x20 = vconcat(x16, x19)\n    O = vconcat(x20, x18)\n    return O"], [1.0, "def solve_5aa066d6(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_0379e05a(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_650c1a9e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = width(I)\n    x5 = multiply(x4, x4)\n    x6 = intersection(x1, x5)\n    x7 = canvas(x3, x6)\n    x8 = fork(multiply, height, width)\n    x9 = lbind(shift, x2)\n    x10 = compose(x9, x8)\n    x11 = mapply(x10, x6)\n    O = fill(x7, TWO, x11)\n    return O"], [1.0, "def solve_6ba38a39(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_c6f6f14a(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_af881021(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_1271870d(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = compose(x2, x1)\n    x4 = fork(intersection, x1, x3)\n    x5 = compose(size, x4)\n    x6 = palette(I)\n    x7 = matcher(x5, ZERO)\n    x8 = sfilter(x6, x7)\n    x9 = totuple(x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = mapply(neighbors, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = ofcolor(I, x11)\n    x17 = mapply(neighbors, x16)\n    x18 = toobject(x17, I)\n    x19 = mostcolor(x18)\n    x20 = rbind(shoot, UNITY)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = fork(combine, x20, x21)\n    x23 = rbind(shoot, UP_RIGHT)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = fork(combine, x23, x24)\n    x26 = fork(combine, x22, x25)\n    x27 = ofcolor(I, x11)\n    x28 = ofcolor(I, x10)\n    x29 = combine(x27, x28)\n    x30 = mapply(x26, x29)\n    x31 = ofcolor(I, x15)\n    x32 = intersection(x31, x30)\n    x33 = ofcolor(I, x19)\n    x34 = intersection(x33, x30)\n    x35 = fill(I, x10, x32)\n    O = fill(x35, x11, x34)\n    return O"], [1.0, "def solve_3def0451(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_a9e577f8(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [1.0, "def solve_4ced8a9e(I):\n    x1 = matcher(identity, ZERO)\n    x2 = branch(x1, ONE, SEVEN)\n    O = x2(I)\n    return O"], [1.0, "def solve_c5b26daf(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = subgrid(x2, I)\n    x3 = shape(x2)\n    x4 = halve(x3)\n    x5 = rbind(multiply, x4)\n    x6 = rbind(divide, x3)\n    x7 = compose(x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = sfilter(x1, x8)\n    x10 = compose(increment, minimum)\n    x11 = chain(decrement,arymost, x10)\n    x12 = compose(x11, last)\n    x13 = fork(connect, x12, x5)\n    x14 = compose(last, first)\n    x15 = compose(last, x14)\n    x16 = fork(equality, x13, x15)\n    x17 = mfilter(x9, x16)\n    O = fill(x6, EIGHT, x17)\n    return O"], [1.0, "def solve_fe512e1d(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_7ec6cc2e(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_aa417b1f(I):\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = lbind(power, outbox)\n    x8 = chain(x7, halve, width)\n    x9 = initset(x8)\n    x10 = lbind(rapply, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = compose(backdrop, x12)\n    x14 = fork(difference, x13, toindices)\n    x15 = mapply(x14, x1)\n    x16 = mostcolor(I)\n    x17 = ofcolor(I, x16)\n    x18 = intersection(x15, x17)\n    O = fill(x6, THREE, x18)\n    return O"], [1.0, "def solve_dc59fb5e(I):\n    O = upscale(I, THREE)\n    return O"], [1.0, "def solve_e014b216(I):\n    x1 = ONE(I)\n    x2 = canvas(ZERO, THREE_BY_THREE)\n    x3 = asobject(x2)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, SIX, x6)\n    return O"], [1.0, "def solve_faa0e83c(I):\n    x1 = palette(I)\n    x2 = contained(ONE, x1)\n    x3 = branch(x2, ZERO, EIGHT)\n    x4 = canvas(x3, UNITY)\n    x5 = connect(ORIGIN, UNITY)\n    x6 = recolor(ONE, x5)\n    O = x3(x4)\n    return O"], [1.0, "def solve_b4b2f7d9(I):\n    x1 = astuple(SIX, FIVE)\n    x2 = canvas(ZERO, x1)\n    x3 = paint(x2, x2)\n    O = replace(x3, ONE, TWO)\n    return O"], [1.0, "def solve_6aba0774(I):\n    x1 = fgpartition(I)\n    x2 = valmax(x1, size)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, x2, x2)\n    x5 = shift(x4, UNITY)\n    x6 = merge(x1)\n    x7 = other(x1, x6)\n    x8 = equality(x2, FOUR)\n    x9 = shift(x8, UP_RIGHT)\n    x10 = paint(I, x9)\n    x11 = branch(x3, x2, x9)\n    x12 = cover(x10, x11)\n    x13 = branch(x8, x2, x9)\n    x14 = multiply(TEN, TEN)\n    x15 = branch(x41, x13, x14)\n    x16 = fork(combine, vfrontier, hfrontier)\n    x17 = x16(x15)\n    O = underfill(x9, x7, x17)\n    return O"], [1.0, "def solve_839039cf(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_efee02e0(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_c3f94ca3(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = cmirror(x4)\n    x6 = papply(pair, x4, x5)\n    x7 = apply(x3, x6)\n    x8 = vmirror(x7)\n    x9 = papply(pair, x7, x8)\n    x10 = apply(x3, x9)\n    x11 = hmirror(x10)\n    x12 = papply(pair, x11, x10)\n    x13 = apply(x3, x12)\n    x14 = vmirror(x13)\n    x15 = papply(pair, x13, x14)\n    x16 = apply(x3, x15)\n    x17 = hmirror(x16)\n    x18 = papply(pair, x16, x17)\n    x19 = apply(x3, x18)\n    x20 = vmirror(x19)\n    x21 = papply(pair, x19, x20)\n    x22 = apply(x3, x21)\n    x23 = vmirror(x22)\n    x24 = papply(pair, x21, x23)\n    x25 = apply(x3, x24)\n    x26 = shoot(ORIGIN, UNITY)\n    x27 = mapply(x26, x25)\n    O = fill(x1, ZERO, x27)\n    return O"], [1.0, "def solve_a15c64b7(I):\n    x1 = lbind(fork, subtract)\n    x2 = lbind(chain, ZERO)\n    x3 = lbind(x2, x1)\n    x4 = lbind(rbind, add)\n    x5 = chain(x4, x3, numcolors)\n    x6 = lbind(chain, x5)\n    x7 = rbind(x6, toindices)\n    x8 = lbind(rbind, extract)\n    x9 = compose(last, last)\n    x10 = chain(x8, x7, x9)\n    x11 = compose(first, last)\n    x12 = lbind(fork, greater)\n    x13 = compose(x12, x11)\n    x14 = lbind(fork, astuple)\n    x15 = compose(x14, x13)\n    x16 = rbind(sfilter, x15)\n    x17 = compose(x16, ulcorner)\n    x18 = compose(x16, urcorner)\n    x19 = compose(x16, shoot)\n    x20 = chain(x17, x18, x19)\n    x21 = compose(x16, llcorner)\n    x22 = compose(x16, lrcorner)\n    x23 = chain(x17, x21, x22)\n    x24 = rbind(mapply, x3)\n    x25 = chain(x17, x43, x24)\n    x26 = compose(x25, x23)\n    x27 = fork(recolor, x26, x20)\n    x28 = mapply(x27, x1)\n    O = paint(I, x28)\n    return O"], [1.0, "def solve_2d18b4dd(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_2d1f4f3c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_6a833f01(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_a6bbe9db(I):\n    x1 = rot180(I)\n    x2 = matcher(identity, ZERO)\n    x3 = rbind(sfilter, x2)\n    x4 = compose(size, x3)\n    x5 = apply(x4, x1)\n    x6 = merge(x5)\n    x7 = lbind(subtract, x6)\n    x8 = chain(increment, x7, size)\n    x9 = apply(x8, x1)\n    x10 = ZERO(x6)\n    x11 = lbind(subtract, x10)\n    x12 = chain(x11, x8, size)\n    x13 = rbind(sfilter, x12)\n    x14 = rbind(subgrid, I)\n    x15 = chain(asobject, x13, x14)\n    x16 = apply(x15, x9)\n    x17 = ZERO(x10)\n    x18 = lbind(subtract, x17)\n    x19 = chain(invert, x18, shift)\n    x20 = fork(shift, identity, x19)\n    x21 = mapply(x20, x16)\n    O = paint(x1, x21)\n    return O"], [1.0, "def solve_f6c4f2f2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = shape(I)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(I, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmin(x11, numcolors)\n    x13 = normalize(x12)\n    x14 = toindices(x13)\n    x15 = increment(x4)\n    x16 = increment(x15)\n    x17 = increment(x5)\n    x18 = increment(x17)\n    x19 = astuple(x16, x18)\n    x20 = lbind(shift, x14)\n    x21 = rbind(multiply, x19)\n    x22 = chain(x20, x21, last)\n    x23 = fork(recolor, first, x22)\n    x24 = normalize(x12)\n    x25 = mapply(x23, x24)\n    O = paint(x9, x25)\n    return O"], [1.0, "def solve_6ee84d4f(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_b09a1bcf(I):\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, x1)\n    x3 = compose(maximum, x2)\n    x4 = lbind(apply, x3)\n    x5 = chain(positive, size, x4)\n    x6 = lbind(sfilter, x3)\n    x7 = compose(x6, x3)\n    x8 = rbind(compose, x3)\n    x9 = lbind(lbind, contained)\n    x10 = chain(x8, x9, x7)\n    x11 = apply(x10, x5)\n    x12 = sfilter(x11, x7)\n    x13 = fork(hmatching, identity, vmirror)\n    x14 = mfilter(x12, x13)\n    x15 = mostcolor(I)\n    x16 = paint(I, x15)\n    x17 = objects(x16, T, F, T)\n    x18 = compose(backdrop, inbox)\n    x19 = apply(x18, x17)\n    x20 = mfilter(x19, x5)\n    O = fill(x16, EIGHT, x20)\n    return O"], [1.0, "def solve_38c09ef6(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = merge(x5)\n    x7 = palette(x6)\n    x8 = lbind(mfilter, x5)\n    x9 = lbind(matcher, x4)\n    x10 = compose(x8, x9)\n    x11 = fork(sfilter, identity, x10)\n    x12 = apply(x11, x7)\n    x13 = merge(x12)\n    x14 = lbind(colorcount, I)\n    x15 = argmin(x12, x14)\n    x16 = ofcolor(I, x15)\n    x17 = recolor(x15, x16)\n    x18 = compose(initset, x17)\n    x19 = fork(min, identity, x18)\n    x20 = ofcolor(I, x15)\n    x21 = rbind(shoot, UNITY)\n    x22 = DOWN(x21)\n    x23 = leftmost(x20)\n    x24 = height(I)\n    x25 = increment(x24)\n    x26 = interval(ZERO, x25, ONE)\n    x27 = apply(double, x26)\n    x28 = mapply(increment, x27)\n    x29 = apply(tojvec, x28)\n    x30 = prapply(shift, x27, x29)\n    x31 = mapply(x19, x30)\n    x32 = paint(I, x31)\n    x33 = biind(canvas, NEG_ONE)\n    x34 = rbind(apply, x33)\n    x35 = lbind(recolor, x15)\n    x36 = chain(x34, x35, x29)\n    x37 = mapply(x36, x34)\n    O = underpaint(x32, x37)\n    return O"], [1.0, "def solve_d4ef95a8(I):\n    x1 = ofcolor(I, TWO)\n    x2 = portrait(x1)\n    x3 = branch(x2, vsplit, hsplit)\n    x4 = x3(I, TWO)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = vmirror(x5)\n    x8 = vconcat(x7, x7)\n    x9 = hmirror(x8)\n    O = vconcat(x9, x8)\n    return O"], [1.0, "def solve_f46e8227(I):\n    x1 = trim(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(x2)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(x2)\n    x6 = lefthalf(x5)\n    x7 = bottomhalf(x2)\n    x8 = righthalf(x7)\n    x9 = palette(x4)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x4)\n    x13 = palette(x4)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x4)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x5)\n    x24 = x22(x6)\n    x25 = x22(x4)\n    x26 = x22(x6)\n    x27 = lefthalf(x18)\n    x28 = lefthalf(x27)\n    x29 = righthalf(x28)\n    x30 = righthalf(x29)\n    x31 = palette(x23)\n    x32 = palette(x24)\n    x33 = intersection(x31, x32)\n    x34 = first(x33)\n    x35 = shape(x4)\n    x36 = canvas(x35, x32)\n    x37 = intersection(x33, x32)\n    x38 = paint(x36, x37)\n    O = x22(x38)\n    return O"], [1.0, "def solve_4f29a2df(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_e0ad5289(I):\n    x1 = fork(equality, identity, dmirror)\n    x2 = compose(flip, x1)\n    O = extract(x1, x2)\n    return O"], [1.0, "def solve_fc18abc6(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = Fgpartition(I)\n    x4 = merge(x3)\n    x5 = cover(I, x4)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = leastcolor(I)\n    O = fill(x5, x7, x6)\n    return O"], [1.0, "def solve_841ba802(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_4cba1dbd(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_ed95fbb4(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_68ea083f(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = multiply(x4, x4)\n    x6 = canvas(x3, x5)\n    x7 = asobject(I)\n    x8 = shift(x7, UNITY)\n    O = paint(x6, x8)\n    return O"], [1.0, "def solve_ddc996f8(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.1, "def solve_8b1069cd(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 =1000(I)\n    x2 =5000(x1, x4)\n    x3 = compose(positive, size)\n    x4 = rbind(sfilter, x3)\n    x5 = chain(x2, x4, frontiers)\n    x6 = merge(x2)\n    x7 = contained(x6, x5)\n    x8 = height(x7)\n    x9 = width(x7)\n    x10 = rbind(multiply, x8)\n    x11 = power(x10, TWO)\n    x12 = compose(rot90, x11)\n    x13 = power(x12, FOUR)\n    x14 = x15(I)\n    x15 = x16(I)\n    x16 = matcher(first, x14)\n    x17 = compose(flip, x16)\n    x18 = sfilter(x15, x17)\n    x19 = lbind(ofcolor, x14)\n    x20 = compose(x19, asobject)\n    x21 = fork(subtract, x20, identity)\n    x22 = compose(first, x21)\n    x23 = fork(mapply, x22, identity)\n    x24 = chain(x19, x23, x14)\n    x25 =594color(x18, NEG_ONE)\n    x26 = lone(x25)\n    x27 = asindices(x18)\n    x28 = matcher(first, NEG_ONE)\n    x29 = rbind(sfilter, x28)\n    x30 = lbind(shift, x27)\n    x31 = chain(x29, x30, x29)\n    x32 = mapply(x31, x73)\n    x33 = replace(x16, NEG_ONE, ZERO)\n    x34 = dmirror(x32)\n    x35 = combine(x33, x34)\n    x36 = flip(x35)\n    x37 = asindices(x16)\n    x38 = toobject(x37, x16)\n    x39 = multiply(x38, UNITY)\n    x40 = rbind"], [1.1, "def solve_f112163f(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_2952bcf0(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = rot90(I)\n    x2 = apply(mostcommon, I)\n    x3 = hmirror(x1)\n    x4 =oe(x3, I)\n    x5 = merge(x4)\n    x6 = palette(x5)\n    x7 =5031982586\n    8713671684\n    3955068690\n    0764217343\n    5380956567\n    \"\"\"\n    x1 = asindices(x1)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = ofcolor(x3, x4)\n    x6 = vmirror(x5)\n    x7 = hmirror(x5)\n    x8 = astuple(x6, x7)\n    x9 = combine(x leftmost, x8)\n    x10 = hmirror(x7)\n    x11 = invert(x10)\n    x12 = increment(x11)\n    x13 = order(x9, x12)\n    x14 = difference(x9, x13)\n    x15 = toobject(x14, x13)\n    x16 = apply(increment, x15)\n    x17 = apply(tojvec, x16)\n    x18 = prapply(shift, x17, x9)\n    x19 = mapply(x18, x14)\n    x20 = ofcolor(x19, x4)\n    x21 = lbind(shift, x19)\n    x22 = mapply(x21, x20)\n    x23 = rightmost(x20)\n    x24 = lbind(shift, x20)\n    x25 = mapply(x24, x23)\n    x26 = ulcorner(x20)\n    x27 = lbind(shift, x27)\n    x28 = mapply(x27, x22)\n    x29 = sfilter(x24, x18)\n    x30 = sizefilter(x29, x28)\n    x31 = lbind(shift, x27)\n    x32 ="], [1.1, "def solve_75434d9a(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_a7ea8a26(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = compose(first, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = compose(last, last)\n    x8 = totuple(x2)\n    x9 = apply(x7, x8)\n    x10 = mostcommon(x9)\n    x11 = compose(first, last)\n    x12 = matcher(x11, x6)\n    x13 = sfilter(x2, x12)\n    x14 = compose(last, last)\n    x15 = matcher(x14, x10)\n    x16 = sfilter(x2, x15)\n    x17 = objects(I, F, T, T)\n    x18 = size(x17)\n    x19 = equality(x18, TWO)\n    x20 = mfilter(x17, hline)\n    x21 = mfilter(x17, vline)\n    x22 = branch(x19, x20, x13)\n    x23 = branch(x19, x21, x16)\n    x24 = width(x22)\n    x25 = lbind(multiply, x24)\n    x26 = width(I)\n    x27 = divide(x26, x24)\n    x28 = increment(x27)\n    x29 = interval(ZERO, x28, ONE)\n    x30 = apply(x25, x29)\n    x31 = apply(invert, x30)\n    x32 = combine(x30, x31)\n    x33 = apply(tojvec, x32)\n    x34 = lbind(shift, x22)\n    x35 = mapply(x34, x33)\n    x36 = height(x23)\n    x37 = lbind(multiply, x36)\n    x38 = height(I)\n    x39 = height(x22)\n    x40 = divide(x38, x39)\n    x41 = increment(x40)\n    x42 = interval"], [1.1, "def solve_bb1b5cc0(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = fork(multiply, height, width)\n    x2 = fgpartition(I)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = argmax(x4, x1)\n    x6 = outbox(x5)\n    x7 = corners(x6)\n    x8 = combine(x7, x5)\n    x9 = fill(I, x3, x8)\n    x10 = asobject(x5)\n    x11 = ofcolor(x10, ZERO)\n    x12 = difference(x10, x11)\n    x13 = rbind(contained, x12)\n    x14 = compose(x13, first)\n    x15 = sfilter(x11, x14)\n    x16 = difference(x11, x15)\n    x17 = compose(x13, first)\n    x18 = fork(multiply, x17, x16)\n    x19 = compose(x18, last)\n    x20 = fork(equality, toindices, x19)\n    x21 = fork(equality, toindices, x20)\n    x22 = fork(either, x20, x21)\n    x23 = rbind(sfilter, x22)\n    x24 = compose(x23, trim)\n    x25 = chain(x20, x22, x24)\n    x26 = compose(x25, asobject)\n    x27 = apply(x26, x15)\n    x28 = last(x27)\n    x29 = remove(x28, x27)\n    x30 = color(x28)\n    x31 = combine(x29, x30)\n    x32 =x23(x31)\n    x33 = asobject(x32)\n    x34 = apply(x33, x31)\n    x35 = prapply(shift, x29, x34)\n    x36 = mapply(x35, x43)\n    x37 = paint(x96, x36)\n    x38 = astuple(x31, x33)\n    x39 = x38(x37)\n    x40 = fill"], [1.1, "def solve_649fb1de(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =618\n    \"\"\"\n    x2 = lbind(subtract,    INE)\n    x3 = chain(even, x2, last)\n    x4 = rbind(branch, ZERO)\n    x5 = rbind(x4, x3)\n    x6 = chain(initset, x5, x4)\n    x7 = fork(rapply, x6, identity)\n    x8 = compose(first, x7)\n    x9 = rbind(branch, ONE)\n    x10 = rbind(x9, x8)\n    x11 = chain(initset, x10, x7)\n    x12 = fork(rapply, x11, identity)\n    x13 = compose(first, x12)\n    x14 = extract(x1, x13)\n    x15 = x14(I)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 =666(x16, x17)\n    x19 = merge(x18)\n    x20 = cover(x16, x19)\n    x21 = flip(x18)\n    x22 = branch(x21, x20, x19)\n    x23 = branch(x1, x22, x20)\n    x24 = multiply(xTEN, DOWN)\n    x25 = ulcorner(x28)\n    x26 = add(x25, x24)\n    x27 = power(x22, x26)\n    x28 = add(x25, x23)\n    x29 = shift(x19, x28)\n    x30 = x27(x29)\n    x31 = palette(x30)\n    x32 = lbind(shift, x30)\n    x33 = apply(x32, x31)\n    x34 = mapply(dneighbors, x33)\n    x35 = mapply(ineighbors, x34)\n    x36 = other(x61, x39)\n    x37 = colorfilter(x36, x39)\n    x38 = rbind(adjacent, xMas)\n    x39 = apply(x38, x37)\n"], [1.1, "def solve_1cea9ef6(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = argmin(x1, size)\n    x5 = shoot(x4, NEG_UNITY)\n    x6 = insert(x4, x5)\n    x7 = recolor(x3, x6)\n    x8 = frontiers(I)\n    x9 = sfilter(x8, vline)\n    x10 = size(x9)\n    x11 = positive(x10)\n    x12 = branch(x11, dmirror, identity)\n    x13 = x12(I)\n    x14 = x12(I)\n    x15 = ofcolor(x13, x3)\n    x16 = subgrid(x15, x13)\n    x17 = ZERO(x16)\n    x18 = shift(x15, x17)\n    x19 = ulcorner(x15)\n    x20 = urcorner(x15)\n    x21 = shoot(x19, NEG_UNITY)\n    x22 = shoot(x20,_LEFT)\n    x23 = combine(x21, x22)\n    x24 = shoot(x19, UP_RIGHT)\n    x25 = shoot(x20, DOWN_LEFT)\n    x26 = combine(x24, x25)\n    x27 = combine(x23, x26)\n    x28 = lbind(contained, x27)\n    x29 = chain(flip, x28, last)\n    x30 = cfilter(x11, x29)\n    x31 = branch(x11, height, width)\n    x32 = x31(I)\n    x33 = even(x32)\n    x34 = branch(x33, vline, hline)\n    x35 = x34(I)\n    x36 = astuple(x34, x35)\n    x37 = shift(x15, x36)\n    x38 = combine(x31, x37)\n    x39 = x30(x38)\n    x40 = shift(x19, x39)\n    x41 = combine("], [1.1, "def solve_aa93e0ce(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = positive(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_bd85689d(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_865d8377(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_9139b776(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_9ad6136f(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_0a25e854(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asobject(x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = astuple(x27, x25)\n    x29 = lbind(subtract, x28)\n    x30 = compose(x29, last)\n    x31 =173(x04)\n    x32 = rbind(ofcolor, ZERO)\n    x33 = fork(add, last, first)\n    x34 = chain(x31, x32, x33)\n    x35 = compose(x34, x30)\n    x36 = objects(x32, x26, F, T)\n    x37 = sfilter(x36, x35)\n    x38 = lbind(recolor, ONE)\n    x39 = compose(x38, outbox)\n    x40 = fork(combine, x34"], [1.1, "def solve_19c30321(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 =173(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = frontiers(x3)\n    x5 = sfilter(x4, hline)\n    x6 = size(x5)\n    x7 = increment(x6)\n    x8 = sfilter(x4, vline)\n    x9 = size(x8)\n    x10 = increment(x9)\n    x11 = height(x3)\n    x12 = decrement(x11)\n    x13 = to frontiers(x12)\n    x14 = sfilter(x13, vline)\n    x15 = size(x14)\n    x16 = increment(x15)\n    x17 = width(x3)\n    x18 = decrement(x17)\n    x19 = tophalf(x3)\n    x20 = increment(x19)\n    x21 = rbind(multiply, x20)\n    x22 = chain(tophalf, x21, initset)\n    x23 = fork(insert, dmirror, x22)\n    x24 = fork(insert, cmirror, x23)\n    x25 = fork(insert, hmirror, x24)\n    x26 = compose(x25, x20)\n    x27 = fork(insert, vmirror, x26)\n    x28 = fork(insert, x17, x27)\n    x29 = compose(x28, x21)\n    x30 = fork(insert, width, x29)\n    x31 = rbind(repeat, x3)\n    x32 = chain(toivec, x30, x31)\n    x33 = fork(shift, x23, x32)\n    x34 = canvas(ZERO, x11)\n    x35 = paint(x34, x3)\n    x36 = merge(x8)\n    x37 = cover(x35, x36)\n    x38 = shift(x36, x37)\n    x39 = paint(x34, x38)\n    x40 = shift(x33, x39)\n    x"], [1.1, "def solve_8698b8b8(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, T, T, F)\n    x6 = colorfilter(x5, x4)\n    x7 = fork(add, leftmost, uppermost)\n    x8 = argmin(x6, x7)\n    x9 = lbind(adjacent, x8)\n    x10 = rbind(add, x8)\n    x11 = totuple(x10)\n    x12 = sfilter(x11, x9)\n    x13 = mapply(neighbors, x12)\n    x14 = difference(x1, x12)\n    x15 = mapply(neighbors, x14)\n    x16 = apply(urcorner, x12)\n    x17 = size(x16)\n    x18 = equality(ONE, x17)\n    x19 = mfilter(x18, identity)\n    x20 = branch(x18, identity, dmirror)\n    x21 = x20(I)\n    x22 = fgpartition(x21)\n    x23 = merge(x22)\n    x24 = ONE(x23)\n    x25 =\u5b50(x24, x22)\n    x26 = width(x25)\n    x27 = lefthalf(x25)\n    x28 = tophalf(x27)\n    x29 = righthalf(x28)\n    x30 = palette(x29)\n    x31 = palette(x of)\n    x32 = combine(x30, x31)\n    x33 = intersection(x32, x22)\n    x34 = first(x33)\n    x35 = last(x33)\n    x36 = ofcolor(x26, x34)\n    x37 = ofcolor(x26, x35)\n    x38 = combine(x36, x37)\n    x39 = fill(x21, x34, x38)\n    x40 = ofcolor(x31, x34)\n    x41 = ofcolor(x31,"], [1.1, "def solve_41066c0d(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_621c090c(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = astuple(NINE, NINE)\n    x3 = canvas(ZERO, x2)\n    x4 = astuple(THREE, ORIGIN)\n    x5 = initset(x4)\n    x6 = insert(x3, x5)\n    x7 = merge(x1)\n    x8 = lbind(colorfilter, x6)\n    x9 = compose(first, x8)\n    x10 = compose(SIX, x9)\n    x11 = fork(paint, identity, x10)\n    x12 = x11(x5)\n    x13 = normalize(x12)\n    x14 = dmirror(x13)\n    x15 = increment(NINE)\n    x16 = insert(x14, x15)\n    x17 = lbind(rapply, x16)\n    x18 = compose(first, x17)\n    x19 = fork(paint, identity, x18)\n    x20 = x19(x5)\n    x21 = palette(x20)\n    x22 = lbind(ofcolor, x20)\n    x23 = compose(size, x22)\n    x24 = palette(x20)\n    x25 = contained(ONE, x24)\n    x26 = contained(TWO, x24)\n    x27 = branch(x25, UNITY, TWO_BY_TWO)\n    x28 = branch(x26, RIGHT, x27)\n    x29 = fork(combine, vfrontier, hfrontier)\n    x30 = x29(x28)\n    x31 = ofcolor(x20, TWO)\n    x32 = gravitate(x31, x30)\n    x33 =8(x32)\n    x34 = colorfilter(x1, TWO)\n    x35 = apply(x29, x34)\n    x36 = rbind(ZERO, x35)\n    x37 = apply(x36, x32)\n    x38 = rbind(bordering, x20)\n    x39 = mfilter(x37, x38)\n    x40 = fill"], [1.1, "def solve_05e521b4(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, ONE)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)"], [1.1, "def solve_a910c30d(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = power(c909, DOWN)\n    x5 = fork(equality, identity, x4)\n    x6 =230(x2)\n    x7 = frontiers(I)\n    x8 = sfilter(x7, x5)\n    x9 = merge(x8)\n    x10 = color(x9)\n    x11 = subgrid(x9, I)\n    x12 = frontiers(x11)\n    x13 = merge(x12)\n    x14 = shift(x13, NEG_UNITY)\n    x15 = ofcolor(x11, x10)\n    x16 = ofcolor(x11, x11)\n    x17 = combine(x15, x16)\n    x18 = mapply(x17, x12)\n    x19 = difference(x18, x15)\n    x20 =49mirror(x15)\n    x21 =49mirror(x15)\n    x22 = ofcolor(x11, x10)\n    x23 = leftmost(x22)\n    x24 = ofcolor(x11, x10)\n    x25 = leftmost(x24)\n    x26 = greater(x23, x25)\n    x27 = uppermost(x22)\n    x28 = equality(x27, x28)\n    x29 = hmatching(x28, x11)\n    x30 = branch(x29, identity, vmirror)\n    x31 = x30(x11)\n    x32 = ofcolor(x31, x10)\n    x33 = first(x32)\n    x34 = last(x31)\n    x35 = x33(x40)\n    x36 = ofcolor(x31, x10)\n    x37 =37(x36)\n    x38 = difference(x37, x31)\n    x39 = fill(x31, x10, x38)\n    x40 = ofcolor(x39, x10)\n    x41 = mapply(dneighbors, x40)\n    x"], [1.1, "def solve_2df6e1be(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = lbind(multiply, x11)\n    x13 = width(I)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = connect(x12, x15)\n    x17 = shape(I)\n    x18 = maximum(x17)\n    x19 = lbind(multiply, x18)\n    x20 = toivec(x18)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = toivec(x22)\n    x24 = connect(x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = decrement(x25)\n    x28 = tojvec(x27)\n    x29 = connect(x26, x28)\n    x30 = height(I)\n    x31 = decrement(x30)\n    x32 = toivec(x31)\n    x33 = connect(x29, x32)\n    x34 = width(I)\n    x35 = decrement(x34)\n    x36 = tojvec(x35)\n    x37 = connect(x33, x36)\n    x38 = height(I)\n    x39 = decrement(x38)\n    x40 = toivec(x39)\n    x41 = connect(x38, x40)\n    x42 = width(I)\n    x43 = decrement(x42)\n    x44 = tojvec(x43)\n    x45 = connect(x42, x44)\n    x46 = height(I)"], [1.1, "def solve_e9c2052f(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, lefthalf, tophalf)\n    x7 = branch(x5, righthalf, bottomhalf)\n    x8 = branch(x5, hconcat, vconcat)\n    x9 = x6(I)\n    x10 = x7(I)\n    x11 = index(x9, ORIGIN)\n    x12 = shape(x10)\n    x13 = decrement(x12)\n    x14 = index(x10, x13)\n    x15 = mostcolor(I)\n    x16 = mostcolor(I)\n    x17 = palette(I)\n    x18 = remove(x11, x17)\n    x19 = remove(x14, x18)\n    x20 = remove(x16, x19)\n    x21 = first(x20)\n    x22 = replace(x9, x21, x11)\n    x23 = branch(x5, asobject, x22)\n    x24 = x23(I)\n    x25 = astuple(x71, x19)\n    x26 = canvas(x25, x25)\n    x27 = paint(x26, x24)\n    x28 = objects(x27, T, F, T)\n    x29 = first(x28)\n    x30 = color(x29)\n    x31 = subgrid(x29, x30)\n    x32 = lefthalf(x61)\n    x33 = righthalf(x31)\n    x34 = shape(x33)\n    x35 = decrement(x34)\n    x36 = hmirror(x33)\n    x37 = vconcat(x36, x33)\n    x38 = objects(x37, T, F, T)\n    x39 = first(x38)\n    x40 = replace(x39, x21, x11)\n    O = hmirror(x"], [1.1, "def solve_4ba694f2(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = height(I)\n    x2 = decrement(x1)\n    x3 = tojvec(x2)\n    x4 = connect(ORIGIN, x3)\n    x5 = height(I)\n    x6 = decrement(x5)\n    x7 = toivec(x6)\n    x8 = connect(ORIGIN, x7)\n    x9 = width(I)\n    x10 = decrement(x9)\n    x11 = tojvec(x10)\n    x12 = shape(I)\n    x13 = decrement(x12)\n    x14 = connect(x11, x13)\n    x15 = height(I)\n    x16 = decrement(x15)\n    x17 = toivec(x16)\n    x18 = shape(I)\n    x19 = decrement(x18)\n    x20 = connect(x17, x19)\n    x21 = asindices(I)\n    x22 = box(x21)\n    x23 = toobject(x22, I)\n    x24 = mostcolor(x23)\n    x25 = matcher(color, x24)\n    x26 = compose(flip, x25)\n    x27 = rbind(sfilter, x26)\n    x28 = rbind(sizefilter, ONE)\n    x29 = rbind(objects, F)\n    x30 = rbind(x29, F)\n    x31 = rbind(x30, T)\n    x32 = rbind(subgrid, I)\n    x33 = chain(x27, x31, x32)\n    x34 = chain(size, x28, x33)\n    x35 = astuple(colors, ONE)\n    x36 = astuple(ONE, x22)\n    x37 = astuple(ONE, x23)\n    x38 = astuple(TWO, x34)\n    x39 = initset(x38)\n    x40 = insert(x36, x39)\n    x41 = insert(x47, x40)\n    x42 = pair(x42, x41)\n    x43 ="], [1.1, "def solve_d06cd310(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = double(TEN)\n    x2 = interval(ZERO, x1, ONE)\n    x3 = connect(ORIGIN, DOWN)\n    x4 = connect(ORIGIN, ZERO_BY_TWO)\n    x5 = combine(x3, x4)\n    x6 = astuple(NEG_TWO, TWO)\n    x7 = lbind(multiply, x6)\n    x8 = toivec(NEG_TWO)\n    x9 = apply(x7, x2)\n    x10 = rbind(subtract, TWO_BY_ZERO)\n    x11 = fork(ofcolor, identity, leastcolor)\n    x12 = chain(x10, center, x11)\n    x13 = rbind(mapply, x9)\n    x14 = lbind(lbind, shift)\n    x15 = lbind(shift, x5)\n    x16 = compose(x15, x12)\n    x17 = chain(x13, x14, x16)\n    x18 = lbind(recolor, FIVE)\n    x19 = compose(x18, x17)\n    x20 = fork(paint, identity, x19)\n    x21 = compose(rot180, x20)\n    x22 = fork(ofcolor, x21, leastcolor)\n    x23 = compose(center, x22)\n    x24 = fork(subtract, x23, x12)\n    x25 = fork(shift, x17, x24)\n    x26 = lbind(recolor, FIVE)\n    x27 = rbind(shift, x8)\n    x28 = chain(x26, x27, x25)\n    x29 = fork(paint, x21, x28)\n    x30 = compose(rot180, x29)\n    x31 = rbind(ofcolor, FIVE)\n    x32 = compose(x31, x30)\n    x33 = leastcolor(I)\n    x34 = ofcolor(I, x33)\n    x35 = mostcolor(I)\n    x36 = shape(I)\n    x37 = canvas(x35, x"], [1.1, "def solve_c4bc107a(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_4899322b(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, toindices)\n    x3 = difference(x1, x2)\n    x4 = size(x3)\n    x5 = positive(x4)\n    x6 = branch(x5, lefthalf, tophalf)\n    x7 = branch(x5, righthalf, bottomhalf)\n    x8 = branch(x5, hconcat, vconcat)\n    x9 = x6(I)\n    x10 = x7(I)\n    x11 = index(x9, ORIGIN)\n    x12 = shape(x10)\n    x13 = decrement(x12)\n    x14 = index(x10, x13)\n    x15 = mostcolor(I)\n    x16 = mostcolor(I)\n    x17 = palette(I)\n    x18 = remove(x11, x17)\n    x19 = remove(x14, x18)\n    x20 = remove(x16, x19)\n    x21 = first(x20)\n    x22 = last(x21)\n    x23 = ofcolor(x9, x22)\n    x24 = leftmost(x23)\n    x25 = ofcolor(x10, x22)\n    x26 = leftmost(x25)\n    x27 = greater(x24, x26)\n    x28 = uppermost(x23)\n    x29 = ofcolor(x10, x22)\n    x30 = uppermost(x29)\n    x31 = greater(x28, x30)\n    x32 = leftmost(x23)\n    x33 = interval(x32, x33, ONE)\n    x34 = matcher(first, x11)\n    x35 = matcher(first, x14)\n    x36 = sfilter(x34, x35)\n    x37 = apply(double, x36)\n    x38 = lbind(apply, maximum)\n    x39 = lbind(ofcolor, I)\n    x40 = compose(x38, x39)\n    x41 = rbind(intersection, x24)\n    x42 ="], [1.1, "def solve_8df6b189(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_018f2c78(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = lbind(remove, x1)\n    x3 = compose(first, x2)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = mapply(x3, x4)\n    x6 =23978259\n    7851115737\n    6519315530\n    9830561239\n    5352852971\n    \"\"\"\n    x1 = palette(I)\n    x2 = compose(last, last)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = totuple(x5)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = switch(I, x7, x8)\n    x10 = rot90(x9)\n    x11 = sfilter(x6, x4)\n    x12 = size(x11)\n    x13 = increment(x12)\n    x14 = divide(x13, x3)\n    x15 = width(I)\n    x16 = interval(ZERO, x15, ONE)\n    x17 = apply(tojvec, x16)\n    x18 = height(I)\n    x19 = lbind(shift, xI)\n    x20 = mapply(x19, x16)\n    x21 = astuple(x17, x20)\n    x22 = canvas(ZERO, x21)\n    x23 = asindices(x22)\n    x24 = shape(I)\n    x25 = canvas(ZERO, x24)\n    x26 = lbind(multiply, x24)\n    x27 = apply(x26, x23)\n    x28 = rbind(multiply, x14)\n    x29 = apply(x28, x27)\n    x30 = matcher(x26, x12)\n    x31 = argmax(x29, x30)\n    x32 = lbind(shift, x23)\n    x33 = mapply(x32, x27)\n    O = fill"], [1.1, "def solve_d1f369f1(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_90d1b867(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_330e00b4(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(sfilter, x3)\n    x6 = chain(x5, x4, color)\n    x7 = compose(maximum, shape)\n    x8 = fork(add, x7, x6)\n    x9 = compose(invert, x8)\n    x10 = order(x2, x9)\n    x11 = rbind(add, DOWN)\n    x12 = compose(x11, ulcorner)\n    x13 = fork(contained, x12, toindices)\n    x14 = rbind(add, RIGHT)\n    x15 = compose(x14, ulcorner)\n    x16 = fork(contained, x15, toindices)\n    x17 = fork(add, x13, x16)\n    x18 = rbind(argmax, x17)\n    x19 = compose(initset, identity)\n    x20 = fork(insert, vmirror, x19)\n    x21 = fork(insert, cmirror, x20)\n    x22 = fork(insert, hmirror, x21)\n    x23 = compose(x18, x22)\n    x24 = apply(x23, x10)\n    x25 = size(x2)\n    x26 = apply(size, x2)\n    x27 = contained(ONE, x26)\n    x28 = increment(x25)\n    x29 = branch(x27, x25, x28)\n    x30 = double(x29)\n    x31 = decrement(x30)\n    x32 = apply(normalize, x24)\n    x33 = interval(ZERO, x29, ONE)\n    x34 = pair(x33, x33)\n    x35 = mpapply(shift, x32, x34)\n    x36 = astuple(x31, x31)\n    x37 = canvas(x1, x36)\n    x38 = paint(x37, x35)\n    x39 ="], [1.1, "def solve_1a561f30(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = toindices(x1)\n    x3 = lbind(contained, ZERO)\n    x4 = compose(x3, hline)\n    x5 = rot(I)\n    x6 = lbind(contained, ZERO)\n    x7 = compose(x6, vline)\n    x8 = rbind(sfilter, x4)\n    x9 = compose(x8, asindices)\n    x10 = power(x9, TWO)\n    x11 = fork(gravitate, toindices, x10)\n    x12 = lbind(contained, ZERO)\n    x13 = compose(x12, leftmost)\n    x14 = lbind(compose, x11)\n    x15 = lbind(rbind, greater)\n    x16 = chain(x15, x14, x13)\n    x17 = fork(greater, x16, x12)\n    x18 = compose(x17, rot90)\n    x19 = fork(greater, x17, x13)\n    x20 = chain(x19, x17, x16)\n    x21 = fork(both, x18, x20)\n    x22 = fork(both, x14, x21)\n    x23 = compose(flip, x22)\n    x24 = sfilter(x1, x23)\n    x25 = fork(compose, x21, x22)\n    x26 = product(x24, x25)\n    x27 = fork(compose, toindices, x25)\n    x28 = fork(rbind, x27, x26)\n    x29 = fork(multiply, x27, x28)\n    x30 = compose(x29, first)\n    x31 = palette(I)\n    x32 = lbind(sfilter, x31)\n    x33 = lbind(compose, x82)\n    x34 = chain(x32, x33, x30)\n    x35 = lbind(ofcolor, I)\n    x36 = compose(x34, x35)\n    x37 =77(x34)\n    x38 = compose"], [1.1, "def solve_f810701d(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, box)\n    x3 = fork(multiply, height, width)\n    x4 = fork(equality, size, x3)\n    x5 = compose(flip, x4)\n    x6 = fork(both, x2, x5)\n    x7 = extract(x1, x6)\n    x8 = inbox(x7)\n    x9 = backdrop(x8)\n    x10 = toobject(x9, I)\n    x11 = remove(x10, x1)\n    x12 = remove(x7, x11)\n    x13 = argmin(x12, size)\n    x14 = combine(x13, x7)\n    x15 = backdrop(x14)\n    x16 = objects(x10, T, F, T)\n    x17 = color(x10)\n    x18 = fill(x17, x16, x15)\n    x19 = subgrid(x18, I)\n    x20 = argmin(x16, width)\n    x21 = ulcorner(x20)\n    x22 = llcorner(x20)\n    x23 = urcorner(x20)\n    x24 = shoot(x21, UNITY)\n    x25 = shoot(x22, DOWN_LEFT)\n    x26 = shoot(x24, UP_RIGHT)\n    x27 = shoot(x25, x22)\n    x28 = combine(x26, x27)\n    x29 = intersection(x28, x22)\n    x30 = fill(x17, x17, x29)\n    x31 = combine(x24, x22)\n    x32 = llcorner(x31)\n    x33 = rbind(subtract, x32)\n    x34 = chain(positive, size, x33)\n    x35 = sfilter(x24, x34)\n    x36 = height(x35)\n    x37 = equality(x36, ONE)\n    x38 = branch(x37, ZERO, x31)\n    O = move(x38, x33, x37)\n    "], [1.1, "def solve_2c2f30fa(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_bc464370(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(I)\n    x9 = fill(I, x8, x7)\n    x10 = sfilter(x7, hline)\n    x11 = size(x10)\n    x12 = increment(x11)\n    x13 = sfilter(x7, vline)\n    x14 = size(x13)\n    x15 = increment(x14)\n    x16 = divide(x12, x15)\n    x17 = asindices(x7)\n    x18 = center(x17)\n    x19 = multiply(x13, x12)\n    x20 = increment(x19)\n    x21 = asindices(I)\n    x22 = center(x21)\n    x23 = width(I)\n    x24 = decrement(x23)\n    x25 = tojvec(x24)\n    x26 = double(x12)\n    x27 = tojvec(x25)\n    x28 = connect(x26, x27)\n    x29 = center(x28)\n    x30 =\n    x29(x7)\n    x31 = asindices(I)\n    x32 = center(x31)\n    x33 = width(I)\n    x34 = halve(x33)\n    x35 = tojvec(x34)\n    x36 = height(I)\n    x37 = halve(x36)\n    x38 = connect(x35, x37)\n    x39 = fill(x19, x38, x32)\n    x40 = fill(x39, x08, x23)\n    x41 = ofcolor(x40, EIGHT)\n    x42 = size(x41)\n    x43 = equality(x42, ONE)\n    x44 = branch(x43, x40, x40)\n    x45 = connect(x42, x44"], [1.1, "def solve_701aa21e(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_1830846c(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = asindices(I)\n    x5 = apply(first, x4)\n    x6 = difference(x5, x3)\n    x7 = ofcolor(I, x1)\n    x8 = rbind(interval, ONE)\n    x9 = lbind(rbind, contained)\n    x10 = lbind(sfilter, x6)\n    x11 = rbind(matcher, ZERO)\n    x12 = chain(size, x10, x9)\n    x13 = lbind(sfilter, x7)\n    x14 = lbind(compose, x12)\n    x15 = chain(x13, x11, x14)\n    x16 = lbind(fork, x8)\n    x17 = compose(increment, minimum)\n    x18 = lbind(lbind, astuple)\n    x19 = lbind(chain, x17)\n    x20 = rbind(x19, first)\n    x21 = chain(x20, x18, first)\n    x22 = lbind(chain, maximum)\n    x23 = rbind(x22, first)\n    x24 = chain(x23, x18, first)\n    x25 = fork(x16, x21, x24)\n    x26 = compose(x15, x25)\n    x27 = apply(toivec, x3)\n    x28 = apply(x26, x27)\n    x29 = argmax(x28, width)\n    x30 = remove(x29, x28)\n    x31 = ulcorner(x29)\n    x32 = invert(x31)\n    x33 = shift(x29, x32)\n    x34 = asindices(I)\n    x35 = center(x34)\n    x36 = invert(x35)\n    x37 = shift(x34, x36)\n    x38 = width(I)\n    x39 = multiply(x38, x37)\n    x40 = tojvec(x39)"], [1.1, "def solve_f603102a(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = equality(x1, FOUR)\n    x3 = fork(equality, height, width)\n    x4 = extract(x2, x3)\n    x5 = other(x1, x4)\n    x6 = color(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = toindices(x11)\n    x13 = vmirror(x12)\n    x14 = hmirror(x12)\n    x15 = shoot(x13, UNITY)\n    x16 = shoot(x14, NEG_UNITY)\n    x17 = fill(I, x11, x15)\n    x18 = fill(x17, x10, x16)\n    x19 = ofcolor(x18, x6)\n    x20 = lowermost(x19)\n    x21 = matcher(first, x10)\n    x22 = compose(flip, x21)\n    x23 = rightmost(x19)\n    x24 = matcher(first, x10)\n    x25 = rightmost(x194)\n    x26 = matcher(first, x24)\n    x27 = leftmost(x194)\n    x28 = matcher(first, x25)\n    x29 = both(x22, x28)\n    x30 = branch(x29, x22, x25)\n    x31 = fill(x18, x11, x30)\n    x32 = ofcolor(x31, x6)\n    x33 = urcorner(x32)\n    x34 = shoot(x33, UP_RIGHT)\n    x35 = shoot(x34, DOWN_LEFT)\n    x36 = underfill(x31, x11, x35)\n    x37 = ofcolor(x36, x6)\n    x38 = compose(flip, x27)\n    x39 = rbind(sfilter, x38)"], [1.1, "def solve_b5325838(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_669b94eb(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x228, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_8980fc85(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = contained(ZERO, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(greater, TWO)\n    x9 = compose(x8, first)\n    x10 = color(x2)\n    x11 =y10000(x10)\n    x12 = insert(x8, x11)\n    x13 = merge(x12)\n    x14 = rot90(x13)\n    x15 = subtract(x4, TWO)\n    x16 = insert(x15, x4)\n    x17 = urcorner(x16)\n    x18 = shoot(x17, UNITY)\n    x19 = rbind(shoot, NEG_UNITY)\n    x20 = rbind(shoot, DOWN_LEFT)\n    x21 = rbind(shoot, UP_RIGHT)\n    x22 = rbind(shoot, DOWN_LEFT)\n    x23 = rbind(shoot, UNITY)\n    x24 = rbind(shoot, x15)\n    x25 = rbind(shoot, x14)\n    x26 = rbind(shoot, x25)\n    x27 = fork(combine, x22, x24)\n    x28 = fork(combine, x26, x27)\n    x29 = fork(combine, x27, x28)\n    x30 = compose(x9, x29)\n    x31 = difference(x1, x8)\n    x32 = extract(x31, x30)\n    x33 = x32(x32)\n    x34 = x6(x33)\n    x35 = height(x34)\n    x36 = width(x34)\n    x37 = interval(ZERO, x35, x36)\n    x38 = pair(x37, x37)\n    x39 = lbind(sfilter, x33)\n    x40 = rbind(compose, last)\n    x"], [1.1, "def solve_0f1a8bdf(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_00368803(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = astuple(x15, x17)\n    x19 = vupscale(x10, x18)\n    x20 = hupscale(x19, x17)\n    x21 = asobject(x20)\n    x22 = lbind(shift, x21)\n    x23 = neighbors(ORIGIN)\n    x24 = mapply(x22, x23)\n    x25 = paint(x5, x24)\n    x26 = objects(x25, T, T, T)\n    x27 = apply(uppermost, x26)\n    x28 = order(x27, identity)\n    x29 = apply(color, x28)\n    x30 = rbind(contained, x22)\n    x31 = compose(x30, palette)\n    x32 = rbind(sfilter, x31)\n    x33 = lbind(shift, x21)\n    x34 = chain(x32, x33, x25)\n    x35 = rbind(apply, x29)\n    x36 = lbind(lbind, shift)\n    x37 = compose(x35, x36)\n    x38 = lbind(rbind, combine)\n    x39 = chain(x35, x38, x37)\n    x40 = fork(sfilter, x34, x39)\n    "], [1.1, "def solve_a210a5a2(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_13ac0f79(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = chain(increment, merge, size)\n    x5 = chain(decrement, decrement, width)\n    x6 = fork(greater, x4, x5)\n    x7 = fork(both, x3, x6)\n    x8 = tojvec(TEN)\n    x9 = crop(I, x8, x7)\n    x10 = numcolors(x9)\n    x11 = equality(x10, TWO)\n    x12 = insert(x8, x11)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = insert(x13, x15)\n    x17 = height(x12)\n    x18 = decrement(x17)\n    x19 = lbind(multiply, x18)\n    x20 = add(x14, x19)\n    x21 = width(x12)\n    x22 = decrement(x21)\n    x23 = lbind(multiply, x22)\n    x24 = add(x14, x23)\n    x25 = repeat(x16, x11)\n    x26 = astuple(x25, x24)\n    x27 = add(x25, x26)\n    x28 = subtract(x24, x18)\n    x29 = astuple(x28, x27)\n    x30 = add(x29, x28)\n    x31 = crement(x30)\n    x32 = height(x12)\n    x33 = decrement(x32)\n    x34 = subtract(x33, x31)\n    x35 = astuple(x34, x31)\n    x36 = add(x35, x31)\n    x37 =repeat(x36, x11)\n    x38 = merge(x37)\n    x39 = cover(I, x38)\n    x40 = tojvec(x3)\n    x"], [1.1, "def solve_f623db8b(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(306, DOWN)\n    x7 = rbind(compose, initset)\n    x8 = lbind(rbind, sfilter)\n    x9 = chain(x6, leftmost, x8)\n    x10 = chain(uppermost, x7, x9)\n    x11 = fork(greater, x9, x10)\n    x12 = compose(x11, x5)\n    x13 = lbind(compose, x12)\n    x14 = lbind(rbind, sfilter)\n    x15 = chain(x13, x14, x11)\n    x16 = chain(uppermost, x7, x15)\n    x17 = fork(greater, x16, x12)\n    x18 = compose(x17, x5)\n    x19 = fork( quotur, x18, identity)\n    x20 = fork(equality, identity, x19)\n    x21 = compose(x20, x15)\n    x22 = rbind(compose, x21)\n    x23 = lbind(rbind, sfilter)\n    x24 = chain(x22, x23, x15)\n    x25 = chain(uppermost, x7, x15)\n    x26 = lbind(greater, x26)\n    x27 = compose(x26, x45)\n    x28 = chain(toivec, x27, x25)\n    x29 = lbind(lbind, shift)\n    x30 = compose(x29, x27)\n    x31 = fork(compose, x28, x30)\n    x32 = compose(cmirror, x31)\n    x33 = fork(mapply, x32, x17)\n    x34 = multiply(SIX, THREE)\n    x35 = astuple(x34, x34)\n    x36 = x35(I)\n    x37"], [1.1, "def solve_f62bf43a(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = apply(x12, x9)\n    x14 = dedupe(x13)\n    x15 = size(x14)\n    x16 = decrement(x15)\n    x17 = add(x16, x16)\n    x18 = compose(x11, x14)\n    x19 = x8(x18)\n    x20 = branch(x7, x19, height)\n    x21 = subtract(x17, x20)\n    x22 = decrement(x21)\n    x23 = add(x22, x20)\n    x24 = canvas(ZERO, x1)\n    x25 = asindices(x24)\n    x26 = box(x25)\n    x27 = mostcolor(I)\n    x28 = recolor(x27, x26)\n    x29 = double(x28)\n    x30 = interval(ZERO, x29, ONE)\n    x31 = asobject(x30)\n    x32 = shape(x31)\n    x33 = shift(x31, x32)\n    x34 = paint(x24, x33)\n    x35 = astuple(x shift, x34)\n    x36 = interval(ZERO, x25, ONE)\n    x37 = product(x36, x36)\n    x38 = rbind(multiply, x31)\n    x39 = apply(x38, x37)\n    x40 = lbind(shift, x33)\n    x41 = mapply(x40, x39)\n    O ="], [1.1, "def solve_86180c1a(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_ea229701(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = shape(I)\n    x2 = add(x1, DOWN)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = lbind(multiply, x4)\n    x6 = width(I)\n    x7 = subtract(x6, x3)\n    x8 = astuple(x7, x5)\n    x9 = connect(x3, x8)\n    x10 = recolor(ZERO, x9)\n    x11 = compose(first, last)\n    x12 = rbind(remove, x11)\n    x13 = compose(x12, first)\n    x14 = astuple(x10, x13)\n    x15 = mostcolor(I)\n    x16 = canvas(x15, x14)\n    x17 = paint(x16, x12)\n    x18 = size(x1)\n    x19 = interval(ZERO, x18, ONE)\n    x20 = pair(x19, x19)\n    x21 = width(I)\n    x22 = astuple(x21, x5)\n    x23 = repeat(ZERO, x22)\n    x24 = combine(x23, x20)\n    x25 = branch(x18, x24, ONE)\n    x26 = multiply(x25, x5)\n    x27 = invert(x26)\n    x28 = interval(ZERO, x27, ONE)\n    x29 = product(x28, x28)\n    x30 = order(x29, last)\n    x31 = apply(compose, x470)\n    x32 = lbind(extract, x31)\n    x33 = lbind(matcher, first)\n    x34 = compose(x33, first)\n    x35 = chain(last, x32, x34)\n    x36 = compose(last, last)\n    x37 = lbind(recolor, FIVE)\n    x38 = lbind(mapply, last)\n    x39 = compose(x38, x35)\n    x40 = fork(combine, x36, x39)\n    x41 = compose"], [1.1, "def solve_fc2d1034(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    x5 = palette(x4)\n    x6 = intersection(x5, x2)\n    x7 = colorfilter(x3, x5)\n    x8 = argmax(x7, size)\n    x9 = remove(x8, x7)\n    x10 = lbind(chain, positive)\n    x11 = lbind(x10, size)\n    x12 = lbind(lbind, shift)\n    x13 = lbind(lbind, intersection)\n    x14 = compose(x11, x12)\n    x15 = compose(x13, x13)\n    x16 = fork( x199, x14, x15)\n    x17 = fork(mapply, x16, x17)\n    x18 = astuple(SIX, x18)\n    x19 = x15(I)\n    x20 = cover(x19, x8)\n    x21 = dropping(x20, UNITY)\n    x22 = dmirror(x21)\n    x23 = papply(pair, x21, x22)\n    x24 = lbind(apply, maximum)\n    x25 = apply(x24, x23)\n    x26 = cmirror(x25)\n    x27 = papply(pair, x25, x26)\n    x28 = apply(x25, x27)\n    x29 =mirror(x28)\n    x30 = papply(pair, x28, x29)\n    x31 = apply(x24, x30)\n    x32 = llcorner(x28)\n    x33 = palette(x29)\n    x34 = lbind(ofcolor, x22)\n    x35 = compose(x34, x31)\n    x36 =726200(x35)\n    x37 =4438(x31, x36)\n    x38 = fork(recolor, x35, x37)\n    x39 = mapply(x38, x31)\n    O = paint("], [1.1, "def solve_81157fed(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_5221339b(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(compose, x8)\n    x13 = compose(x11, x12)\n    x14 = lbind(sfilter, x3)\n    x15 = chain(size, x14, x13)\n    x16 = itemmax(x3, x15)\n    x17 = objects(x7, T, F, T)\n    x18 = merge(x17)\n    x19 = palette(x18)\n    x20 = colorfilter(x17, x19)\n    x21 = chain(positive, size, x17)\n    x22 = rbind(shoot, UNITY)\n    x23 = rbind(shoot, NEG_UNITY)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = rbind(shoot, UP_RIGHT)\n    x26 = lbind(lbind, greater)\n    x27 = chain(x22, x24, x25)\n    x28 = rbind(shoot, UP_RIGHT)\n    x29 = rightmost(x16)\n    x30 = lbind(rbind, greater)\n    x31 = chain(x28, x30, x29)\n    x32 = lbind(recolor, x509)\n    x33 = rbind(shoot, x31)\n    x34 = rbind(shoot, x32)\n    x35 =fork(combine, x33, x34)\n    x36 = compose(x35, x27)\n    x37 = fork(paint, identity, x36)\n    x38 = rbind(shoot, x"], [1.1, "def solve_27a6a068(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_d74d08da(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(identity, dmirror)\n    x5 = astuple(cmirror, hmirror)\n    x6 = combine(x4, x5)\n    x7 = rbind(rapply, I)\n    x8 = compose(first, x7)\n    x9 = chain(x3, x8, initset)\n    x10 = extract(x6, x9)\n    x11 = x10(I)\n    x12 = mostcolor(I)\n    x13 = palette(I)\n    x14 = remove(x12, x13)\n    x15 = other(x14, TWO)\n    x16 = ofcolor(x11, x15)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, identity, vmirror)\n    x20 = x19(x11)\n    x21 = ofcolor(x20, x15)\n    x22 = ofcolor(x20, TWO)\n    x23 = apply(last, x22)\n    x24 = insert(ZERO, x23)\n    x25 = width(x20)\n    x26 = insert(x25, x24)\n    x27 = order(x26, identity)\n    x28 = last(x27)\n    x29 = remove(x28, x27)\n    x30 = first(x27)\n    x31 = remove(x30, x27)\n    x32 = pair(x29, x31)\n    x33 = size(x29)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = pair(x34, x32)\n    x36 = lbind(fork, connect)\n    x37 = compose(first, last)\n    x38 = chain(decrement, last, last)\n    x39 = lbind(lbind, add)\n    x40 = compose(x39, first)\n    x41 = lbind("], [1.1, "def solve_96fa9643(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = compose(leftmost, first)\n    x13 = compose(leftmost, last)\n    x14 = fork(equality, x12, x13)\n    x15 = compose(uppermost, first)\n    x16 = compose(uppermost, last)\n    x17 = fork(equality, x15, x16)\n    x18 = fork(either, x14, x17)\n    x19 = sfilter(x11, x18)\n    x20 = compose(color, first)\n    x21 = compose(center, first)\n    x22 = compose(center, last)\n    x23 = fork(connect, x21, x22)\n    x24 = fork(recolor, x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = matcher(last, ZERO)\n    x28 = decrement(x26)\n    x29 = matcher(last, x28)\n    x30 = fork(either, x27, x29)\n    x31 = matcher(first, ZERO)\n    x32 = decrement(x25)\n    x33 = matcher(first, x32)\n    x34 = fork(either, x31, x33)\n    x35 = toindices(x5)\n    x36 = sfilter(x35, x30)\n    x37 = equality(x35, x36)\n    x38 = mapply(x24, x19)\n    x39 = paint(I, x38)\n    x40 = branch(x37, x30, x34)\n    "], [1.1, "def solve_862378c3(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =238\n    729 relatively623\n    2990529281\n    3446ly2453\n    1437048410\n    \"\"\"\n    x2 = height(I)\n    x3 = halve(x2)\n    x4 = increment(x3)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = astuple(x4, x6)\n    x11 = canvas(x9, x10)\n    x12 =, toindices(x11)\n    x13 = normalize(x12)\n    x14 = toindices(x13)\n    x15 = remove(x9, x14)\n    x16 = lbind(intersection, x12)\n    x17 = chain(size, x16, toindices)\n    x18 = argmax(x15, x17)\n    x19 = ulcorner(x18)\n    x20 = matcher(first, x9)\n    x21 = sfilter(x18, x20)\n    x22 = lbind(shift, x12)\n    x23 = height(x12)\n    x24 = divide(x23, FOUR)\n    x25 = increment(x24)\n    x26 = width(x12)\n    x27 = divide(x25, FOUR)\n    x28 = increment(x27)\n    x29 = divide(x28, FOUR)\n    x30 =ensAgainst(x21, x13)\n    x31 = paddingapply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(tojvec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = lbind(fork, both)\n    x37 = lbind(index, I)\n    x38 = lbind(compose, x37)\n    x39 = lbind(lbind, shift)\n    x40 = compose(x38, x39)\n"], [1.1, "def solve_98d6c048(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_c03aebbc(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = asobject(I)\n    x2 = dmirror(I)\n    x3 = mostcolor(I)\n    x4 = matcher(first, x3)\n    x5 = compose(flip, x4)\n    x6 = sfilter(x1, x5)\n    x7 =227(x6)\n    x8 = mostcolor(I)\n    x9 = lbind(occurrences, I)\n    x10 = matcher(x9, x8)\n    x11 = compose(flip, x10)\n    x12 = fork(both, x3, x11)\n    x13 = sfilter(x6, x12)\n    x14 = combine(x7, x13)\n    x15 = increment(x14)\n    x16 = order(x1, last)\n    x17 = apply(first, x16)\n    x18 = last(x16)\n    x19 = decrement(x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = hsplit(I, x21)\n    x23 = astuple(ONE, THREE)\n    x24 = astuple(TWO, FOUR)\n    x25 = initset(x24)\n    x26 = insert(ORIGIN, x25)\n    x27 = insert(x20, x26)\n    x28 = insert(x25, x27)\n    x29 = insert(x28, x267)\n    x30 = ofcolor(x22, x4)\n    x31 = ofcolor(x22, TWO)\n    x32 = asindices(x22)\n    x33 = initset(x32)\n    x34 = insert(x27, x33)\n    x35 = lbind(hfrontier, x34)\n    x36 = compose(x35, center)\n    x37 = fork(recolor, color, x36)\n    x38 = mapply(x37, x30)\n    x39 = merge(x38)\n    x40 = recolor(x4, x39)\n    O = paint(x22, x40)"], [1.1, "def solve_f1bb13b7(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_aed2df05(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_104508f4(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x17, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = s5000(x28, x24)\n    x30 =388(x29, x16)\n    x31 = rbind(greater, x15)\n    x32 = compose(x31, last)\n    x33 =88(x32)\n    x34 = vmirror(x30)\n    x35 = x32(x34)\n    x36 = width(x16)\n    x37 = crop(x35, ORIGIN, x36)\n    x38 = chain(positive, decrement, size)\n    x39 = rbind(toobject, x38)\n    x40 = rbind(colorcount, x7)\n    x41 = chain(x39, x40"], [1.1, "def solve_44ad6801(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_308d5604(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(positive, size)\n    x3 = lbind(intersection, x2)\n    x4 = chain(x2, x1, x3)\n    x5 = compose(positive, size)\n    x6 = fork(either, x4, x5)\n    x7 = fork(both, x2, x6)\n    x8 = rbind(shoot, UNITY)\n    x9 = rbind(shoot, NEG_UNITY)\n    x10 = fork(combine, x8, x9)\n    x11 = rbind(shoot, UP_RIGHT)\n    x12 = rbind(shoot, DOWN_LEFT)\n    x13 = fork(combine, x11, x12)\n    x14 = fork(combine, x10, x13)\n    x15 = ofcolor(I, ONE)\n    x16 = intersection(x15, x15)\n    x17 = lbind(apply, color)\n    x18 = chain(x17, x16, x9)\n    x19 = lbind(lbind, intersection)\n    x20 = chain(x19, x18, x9)\n    x21 = compose(x2, x20)\n    x22 = fork(pair, x21, identity)\n    x23 = sfilter(x16, x22)\n    x24 = argmax(x23, size)\n    x25 = matcher(first, ONE)\n    x26 = compose(flip, x25)\n    x27 = sfilter(x24, x26)\n    x28 = lbind(colorcount, I)\n    x29 = argmin(x27, x28)\n    x30 = ofcolor(I, x22)\n    x31 = leftmost(x30)\n    x32 = width(I)\n    x33 = interval(x31, x32, ONE)\n    x34 = rightmost(x30)\n    x35 = decrement(x34)\n    x36 = lbind(multiply, x35)\n    x37 = apply(x36, x33)\n    x38 = mapply(vfrontier,"], [1.1, "def solve_960f2cc4(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, identity, dmirror)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = apply(first, x22)\n    x24 = lbind(sfilter, x21)\n    x25 = compose(first, last)\n    x26 = lbind(matcher, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x27, x23)\n    x29 = lbind(shift, x15)\n    x30 = chain(x29, toivec, uppermost)\n    x31 = matcher(first, x18)\n    x32 = rbind(sfilter, x31)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(toindices, x32, x30)\n    x36 = chain(x33, x34, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = compose(color, x37)\n    x39 = compose(x32, x30)\n    x40 = fork(recolor, x38, x39)\n    x41 = fork(other, palette,"], [1.1, "def solve_fc637d33(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    x5 = palette(x4)\n    x6 = intersection(x5, x2)\n    x7 = lbind(colorcount, x4)\n    x8 = argmax(x6, x7)\n    x9 = leastcolor(x8)\n    x10 = matcher(first, x8)\n    x11 =004(x2, x10)\n    x12 = argmin(x11, x9)\n    x13 = merge(x11)\n    x14 = cover(x13, x12)\n    x15 = matcher(first, x9)\n    x16 = compose(flip, x15)\n    x17 = rbind(sfilter, x16)\n    x18 = mostcolor(I)\n    x19 = lbind(colorcount, x4)\n    x20 = chain(flip, x18, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(dmirror, x21)\n    x23 = x22(x41)\n    x24 = dmirror(x23)\n    x25 = chain(x19, x34, x24)\n    x26 = lbind(rapply, x29)\n    x27 = compose(x26, first)\n    x28 = chain(first, x24, x27)\n    x29 = rbind(ofcolor, x18)\n    x30 = fork(recolor, x18, x28)\n    x31 = compose(x29, x30)\n    x32 = fork(paint, identity, x31)\n    x33 = rbind(add, DOWN)\n    x34 = chain(positive, size, x33)\n    x35 = rbind(mfilter, x34)\n    x36 = compose(x35, x32)\n    x37 = sfilter(x2, x36)\n    x38 = lbind(paint, x5)\n    x39 = chain(x38, asobject, x"], [1.1, "def solve_52b9f265(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_b3813f22(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = replace(I, FOUR, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = replace(x2, FOUR, ZERO)\n    x4 =7513(x3)\n    x5 = ulcorner(x4)\n    x6 = subgrid(x4, x5)\n    x7 = replace(x6, ONE, ZERO)\n    O = replace(x7, DOWN, ZERO)\n    return O"], [1.1, "def solve_84e52fe0(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 =73mirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [1.1, "def solve_102a4ec9(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices ofI)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [1.1, "def solve_c6840d89(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =180007fOUR)\n    x2 = subgrid(x1, I)\n    x3 = mostcolor(x2)\n    x4 = replace(x2, x3, ZERO)\n    x5 = leastcolor(x4)\n    x6 = ofcolor(x2, x5)\n    x7 = recolor(x3, x6)\n    O = replace(x4, x5, x7)\n    return O"], [1.1, "def solve_e594a22c(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = switch(I, THREE, FOUR)\n    x2 =1115(x1)\n    x3 = argmin(x2, lrcorner)\n    x4 = urcorner(x3)\n    x5 = shoot(x4, NEG_UNITY)\n    x6 = shoot(x4, UP_RIGHT)\n    x7 = combine(x5, x6)\n    x8 = llcorner(x3)\n    x9 = compose(x8, invert)\n    x10 = power(x9, TWO)\n    x11 = initset(x2)\n    x12 = insert(x3, x11)\n    x13 = insert(x10, x12)\n    x14 = toobject(x13, I)\n    x15 = mapply(x9, x14)\n    x16 = height(I)\n    x17 = width(I)\n    x18 = divide(x16, x17)\n    x19 =389(x18)\n    x20 = toindices(x3)\n    x21 = chain(ZERO, x20, x11)\n    x22 = lbind(contained, ZERO)\n    x23 = compose(x22, outbox)\n    x24 = fork(add, identity, x23)\n    x25 = compose(invert, x24)\n    x26 = order(x21, x25)\n    x27 = fork(insert, identity, x66)\n    x28 = fork(insert, identity, x25)\n    x29 = fork(insert, identity, x28)\n    x30 = fork(insert, identity, x29)\n    x31 = switch(I, THREE, FOUR)\n    x32 = x31(x26)\n    x33 = invert(x32)\n    x34 = shift(x31, x33)\n    x35 = shift(x34, LEFT)\n    x36 = paint(x39, x35)\n    O = x30(x36)\n    return O"], [1.1, "def solve_a01d8e1a(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = last(x2)\n    x5 =446(447, x4)\n    x6 = recolor(x1, x5)\n    O = underfill(I, x1, x6)\n    return O"], [1.1, "def solve_7ed869d4(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = fork(insert, identity, identity)\n    x6 = compose(insert, x5)\n    x7 = fork(insert, cmirror, x6)\n    x8 = fork(insert, dmirror, x7)\n    x9 = fork(insert,cmirror, x8)\n    x10 = fork(insert, hmirror, x9)\n    x11 = mapply(x10, x4)\n    x12 = merge(x1)\n    x13 = vsplit(x61, x12)\n    x14 = mapply(x11, x13)\n    x15 = output:\n    1111114841\n    1111145851\n    1472584620\n    1642734888\n    8154415238\n    \"\"\"\n    x1 = argmax(x14, size)\n    x2 = subgrid(x1, I)\n    O = trim(x2)\n    return O"], [1.1, "def solve_b8c1863d(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = apply(normalize, x2)\n    x4 = astuple(NINE, NINE)\n    x5 = canvas(F25fbde4(x4)\n    x6 = asindices(x5)\n    x7 = box(x6)\n    x8 = center(x6)\n    x9 = lbind(contained, ZERO)\n    x10 = rbind(subtract, x8)\n    x11 = compose(x9, x10)\n    x12 = chain(outbox, outbox, initset)\n    x13 = corners(x6)\n    x14 = mapply(x12, x13)\n    x15 = difference(x7, x14)\n    x16 = inbox(x7)\n    x17 = sfilter(x16, x11)\n    x18 = difference(x16, x17)\n    x19 = fill(x5, ONE, x15)\n    x20 = fill(x19, TWO, x18)\n    x21 = ofcolor(x20, ZERO)\n    O = fill(x20, FOUR, x21)\n    return O"], [1.1, "def solve_ea07c672(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = first(x3)\n    x5 = rbind(colorcount, ZERO)\n    x6 = rbind(toobject, I)\n    x7 = compose(x5, x6)\n    x8 = chain(x7, x4, dneighbors)\n    x9 = matcher(x8,4200x4)\n    x10 = sfilter(x2, x9)\n    x11 = difference(x2, x10)\n    x12 = papply(recolor, x11, x10)\n    x13 = mapply(x5, x12)\n    x14 = paint(I, x13)\n    x15 = subgrid(x4, x14)\n    O = trim(x15)\n    return O"], [1.1, "def solve_215f5bb4(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 =424(I)\n    x2 = rbind(multiply, THREE)\n    x3 = rbind(divide, THREE)\n    x4 = compose(x2, x3)\n    x5 = fork(equality, identity, x4)\n    x6 = compose(x5, last)\n    x7 = sfilter(x1, x6)\n    x8 = rbind(multiply, THREE)\n    x9 = rbind(divide, THREE)\n    x10 = compose(x8, x9)\n    x11 = fork(equality, identity, x10)\n    x12 = compose(x11, last)\n    x13 = extract(x7, x12)\n    x14 = extract(xr, x13)\n    x15 = ulcorner(x14)\n    x16 = subgrid(x14, I)\n    x17 = replace(x16, ZERO, x14)\n    x18 = asobject(x17)\n    x19 = shift(x18, x15)\n    O = paint(I, x19)\n    return O"], [1.1, "def solve_d7bc4b60(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = trim(I)\n    x2 = repeat(x1, ONE)\n    x3 = numcolors(x2)\n    x4 = equality(x3, THREE)\n    x5 = height(x1)\n    x6 = width(x1)\n    x7 = astuple(x5, x6)\n    x8 = add(d406, TWO)\n    x9 = compose(outbox, x8)\n    x10 =\n    x11 = apply(x9, x7)\n    x12 = initset(x5)\n    x13 =71(x6)\n    x14 = insert(x12, x13)\n    x15 = toobject(x14, x1)\n    x16 = toindices(x15)\n    x17 = lbind(intersection, x16)\n    x18 = lbind(shift, x15)\n    x19 = compose(x17, x18)\n    x20 = toindices(x15)\n    x21 = lbind(intersection, x20)\n    x22 = chain(x19, size, x21)\n    x23 = fork(shift, x19, x22)\n    x24 = compose(x5, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = rot180(x24)\n    x28 = apply(x26, x27)\n    x29 = apply(x25, x28)\n    x30 = fork(combine, x28, x29)\n    x31 = x30(x15)\n    x32 = decrement(x31)\n    x33 = lbind(astuple, x32)\n    x34 = lbind(shift, x15)\n    x35 = compose(x33, x34)\n    x36 = apply(x35, x29)\n    O = x30(x36)\n    return O"], [1.1, "def solve_837e299d(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 =173(I)\n    x2 =29c(I)\n    x3 = fgpartition(x2)\n    x4 = merge(x3)\n    x5 = rbind(shoot, DOWN)\n    x6 = compose(x5, last)\n    x7 = fork(recolor, first, x6)\n    x8 = mapply(x7, x4)\n    O = paint(x1, x8)\n    return O"], [1.1, "def solve_f79d2d32(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(replace, x2)\n    x4 = compose(color, x3)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(SIX, SIX)\n    x9 = astuple(EIGHT, x8)\n    x10 = connect(ORIGIN, x9)\n    x11 = initset(UNITY)\n    x12 = recolor(ZERO, x11)\n    x13 = sfilter(x10, x12)\n    x14 = upscale(x13, TWO)\n    x15 = branch(x14, ORIGIN, RIGHT)\n    x16 = mapply(x5, x13)\n    x17 = apply(double, x16)\n    x18 = insert(x16, x17)\n    x19 = width(x15)\n    x20 = insert(x19, x18)\n    x21 = ulcorner(x15)\n    x22 = ulcorner(x18)\n    x23 = subtract(x21, x22)\n    x24 = add(x23, x20)\n    x25 = crop(x15, x27, x24)\n    x26 = hupscale(x25, x20)\n    x27 = compose(last, last)\n    x28 =9259(ZERO, x27)\n    x29 = h59(x28)\n    x30 = insert(x27, x28)\n    x31 = crop(x30, x29, x20)\n    x32 = vupscale(x31, x20)\n    O = other(x23, x32)\n    return O"], [1.1, "def solve_e16148b2(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =7313636344\n    6973281190\n    3424891948\n    9458092097\n    0962975318\n    6899378059\n    6567395500\n    0069332464\n    37149656707\n    \"\"\"\n    x2 = solve_e9af63ed(I):\n    O = hmirror(I)\n    return O"], [1.1, "def solve_189dd23b(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(9172mirror)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, EIGHT, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [1.1, "def solve_7c870502(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, height, width)\n    x8 = argmin(x7, size)\n    x9 = palette(x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 =37(x311)\n    x13 = colorcount(I, x11)\n    x14 = colorfilter(x1, x12)\n    x15 = argmax(x14, size)\n    x16 = remove(x15, x14)\n    x17 = apply(first, x16)\n    x18 = rbind(sfilter, x15)\n    x19 = chain(merge, x18, last)\n    x20 = x19(x17)\n    x21 = ofcolor(x20, x11)\n    x22 = subgrid(x21, I)\n    x23 = toobject(x22, x20)\n    x24 = delta(x23)\n    x25 = mapply(x19, x24)\n    x26 =06(x25)\n    x27 = paint(x20, x26)\n    x28 = matcher(first, x11)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(first, center, x29)\n    x31 = subgrid(x25, x22)\n    x32 =663(x31, x30)\n    x33 = lbind(shift, x28)\n    x34 = mapply(x33, x32)\n    O = paint(x37, x34)\n    return O"], [1.1, "def solve_42ac3a77(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 =171(I)\n    x25 = mapply(x23, x24)\n    x26 = paint(I, x25)\n    x27 = width(x7)\n    x28 = subtract(x37, x27)\n    x29 =88 divide(x28, x172)\n    x30 = tojvec(x29)\n    x31 = shift(x22, x30)\n    x32 =71(x31)\n    x33 = invert(x32)\n    x34 = shift(x28, x33)\n    x35 = branch(x20, x24, x28)\n    x36 = double(x19)\n    x37 = add(x39, x36)\n    x38 = frontiers(x35)\n    x39 = merge(x38)\n    x40 = shift(x34, x39)\n    O = paint(x26, x40)\n    return O"], [1.1, "def solve_6a6559c8(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = matcher(first, x3)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = size(x7)\n    x9 = positive(x8)\n    x10 = branch(x9, hmirror, vmirror)\n    x11 = ofcolor(I, x3)\n    x12 = leftmost(x11)\n    x13 = leftmost(x12)\n    x14 = greater(x13, x12)\n    x15 = uppermost(x11)\n    x16 = leftmost(x15)\n    x17 = branch(x14, add, x16)\n    x18 = ofcolor(I, x3)\n    x19 = ofcolor(I, x3)\n    x20 = leftmost(x19)\n    x21 = leftmost(x20)\n    x22 = greater(x21, x02)\n    x23 = uppermost(x11)\n    x24 = uppermost(x11)\n    x25 = astuple(x23, x24)\n    x26 = add(TWO, x25)\n    x27 = branch(x22, UP, x26)\n    x28 = asindices(I)\n    x29 = x27(x28)\n    x30 = shape(I)\n    x31 = canvas(x3, x30)\n    x32 = lbind(3305, manhattan)\n    x33 =5330(I)\n    x34 = mapply(x32, x33)\n    O = fill(x39, x3, x34)\n    return O"], [1.1, "def solve_389926ea(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =1998(I)\n    x2 = mostcolor(I)\n    x3 =279(x1)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = mapply( shoot, x4)\n    x6 = recolor(2, x5)\n    O = matcher(first, x2)\n    return O"], [1.1, "def solve_46334900(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = rot180(I)\n    x2 = rbind(greater, ONE)\n    x3 = chain(x2, minimum, shape)\n    x4 = branch(x3, x1, x1)\n    x5 =775(x4)\n    x6 = crop(x5, ORIGIN, x5)\n    x7 =91190696(x6)\n    x8 = fork(recolor, color, x7)\n    x9 = mapply(x8, x6)\n    O = paint(x5, x9)\n    return O"], [1.1, "def solve_f15aa06f(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =655532277(I):\n    x2 =261755965\n    x3 =8604225,3397702380\n    x4 = solve(I, x1)\n    x5 = fork(combine, vfrontier, hfrontier)\n    x6 = compose(x5, x4)\n    x7 = mapply(x6, x4)\n    O = underfill(x7, ZERO, x3)\n    return O"], [1.1, "def solve_4cc6c304(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = rot90(I)\n    x2 = rotcompose(I, x1)\n    x3 = rot77(I)\n    x4 =ilt(x3, x2)\n    x5 =379(x4)\n    x6 = apply(x2, x4)\n    x7 = cmirror(x6)\n    x8 = papply(shift, x7, x5)\n    O = paint(x1, x8)\n    return O"], [1.1, "def solve_eaf44018(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =d0694d9fac9df40)\n    x2 = tophalf(x1)\n    x3 = numcolors(x2)\n    x4 = bottomhalf(x1)\n    x5 = numcolors(x4)\n    x6 = bottomhalf(x1)\n    x7 = numcolors(x6)\n    x8 = intersection(x3, x4)\n    x9 = fill(I, EIGHT, x8)\n    x10 = fill(x9, FOUR, x7)\n    O = fill(x10, SEVEN, x8)\n    return O"], [1.1, "def solve_94e66f20(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(709, x2)\n    x4 = lbind(toobject, I)\n    x5 = compose(x4, x3)\n    x6 = palette(I)\n    x7 = UNITY(x6)\n    x8 =8731336x7)\n    x9 = matcher(first, x8)\n    x10 = sfilter(x6, x9)\n    x11 = rbind(colorcount, x8)\n    x12 = argmax(x10, x11)\n    x13 = leastcolor(I)\n    x14 = remove(x12, x10)\n    x15 = argmax(x14, x13)\n    x16 = merge(x12)\n    x17 = fill(I, x13, x16)\n    x18 =argmin(x14, x13)\n    x19 = ulcorner(x18)\n    x20 = increment(x19)\n    x21 = rbind(subtract, x20)\n    x22 = chain(toivec, x21, invert)\n    x23 = fork( shift, identity, x22)\n    x24 = mapply(x23, x11)\n    O = paint(x17, x24)\n    return O"], [1.1, "def solve_eb781931(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    O = fork(combine, dneighbors, identity)\n    x1 = x2(I)\n    x2 = decrement(x1)\n    x3 = tojvec(x2)\n    x4 = rbind(shoot, x3)\n    x5 =17(x2)\n    x6 = equality(x1, x5)\n    x7 = branch(x6, identity, crement)\n    x8 = x7(x2)\n    x9 = double(x8)\n    x10 = tojvec(x9)\n    x11 = mostcolor(I)\n    x12 = shape(I)\n    x13 = canvas(x11, x12)\n    x14 = hconcat(x9, x13)\n    x15 = objects(x14, F, F, T)\n    x16 = argmax(x15, numcolors)\n    x17 = canvas(x6, x16)\n    x18 = normalize(x16)\n    x19 = remove(x16, x1)\n    x20 = toindices(x18)\n    x21 = lbind(intersection, x19)\n    x22 = chain(x21, toindices, x18)\n    x23 = chain(size, x17, x22)\n    x24 =19(x2)\n    x25 = objects(x14, T, F, T)\n    x26 = intersection(x24, x25)\n    x27 = argmax(x26, x23)\n    x28 = x27(x222)\n    O = fill(x17, x color, x28)\n    return O"], [1.1, "def solve_f7818187(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 =885(x10)\n    x12 = vmirror(I)\n    x13 = lbind(shift, x12)\n    x14 = compose(x13, tojvec)\n    x15 = rbind(canvas, UNITY)\n    x16 = apply(x15, x11)\n    x17 = rbind(argmax, numcolors)\n    x18 = apply(x17, x16)\n    x19 = merge(x18)\n    x20 = size(x19)\n    x21 = increment(x40)\n    x22 = rbind(006, x21)\n    x23 = argmin(x20, x22)\n    x24 = repeat(x23, ONE)\n    x25 = asobject(I)\n    x26 = chain(x37, merge, x25)\n    x27 = width(x26)\n    x28 = astuple(x27, x24)\n    x29 = canvas(ZERO, x28)\n    x30 = asobject(x29)\n    x31 = matcher(first, x9)\n    x32 = compose(flip, x31)\n    x33 = sfilter(x30, x32)\n    x34 = shape(I)\n    x35 = double(x34)\n    x36 = divide(x35, x33)\n    x37 = increment(x36)\n    x38 = canvas(ZERO, x37)\n    x39 = paint(x38, x34)\n    O = x14(x39)\n    return O"], [1.1, "def solve_1f08f7ca(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = rbind(O = replace(I, EIGHT, TWO)\n    x3 = compose(x2, vmirror)\n    x4 =,filter(x1, x3)\n    x5 = merge(x4)\n    O = paint(I, x5)\n    return O"], [1.1, "def solve_4e53814b(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 =0470220111, ONE)\n    x4 = rbind(subgrid, I)\n    x5 = apply(x4, x2)\n    x6 = rbind(colorcount, ZERO)\n    x7 = matcher(x6, EIGHT)\n    x8 =filter(x5, x7)\n    x9 = merge(x8)\n    O = cover(I, x9)\n    return O"], [1.1, "def solve_16586c49(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 =1998(I)\n    x2 = compose(delta, outbox)\n    x3 = mapply(x2, x1)\n    O = fill(x3, EIGHT, x3)\n    return O"], [1.1, "def solve_534ff426(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = Tb548a(I):\n    x2 = height(I)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [1.1, "def solve_d906852c(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =15(I)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(x3, ONE)\n    x5 = flip(x4)\n    x6 = branch(x5, lefthalf, tophalf)\n    x7 = branch(x5, righthalf, bottomhalf)\n    x8 = branch(x5, hconcat, vconcat)\n    x9 = x6(I)\n    x10 = x7(I)\n    x11 = index(x9, ORIGIN)\n    x12 = shape(x10)\n    x13 = decrement(x12)\n    x14 = index(x10, x13)\n    x15 = mostcolor(I)\n    x16 = mostcolor(I)\n    x17 = palette(I)\n    x18 = remove(x11, x17)\n    x19 = remove(x14, x18)\n    x20 = remove(x16, x19)\n    x21 = first(x20)\n    x22 = replace(x9, x21, x11)\n    x23 = branch(x5, dmirror, identity)\n    x24 = branch(x5, height, width)\n    x25 = x24(I)\n    x26 = astuple(ONE, x25)\n    x27 = canvas(x15, x26)\n    x28 = x23(x27)\n    x29 = replace(x10, x21, x14)\n    x30 = x8(x22, x28)\n    x31 = branch(x5, width, height)\n    x32 = x31(I)\n    x33 = even(x32)\n    x34 = branch(x33, x22, x30)\n    O = x8(x34, x29)\n    return O"], [1.1, "def solve_c73f04cc(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 =801(I)\n    x2 =806(I, TEN)\n    x3 =006(I, THREE)\n    x4 = power(outbox, TWO)\n    x5 = chain(backdrop, x4, x2)\n    x6 = apply(x5, x3)\n    O = fill(x1, EIGHT, x6)\n    return O"], [1.1, "def solve_b6f01a00(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =45(I)\n    x2 = replace(x1, EIGHT, ZERO)\n    x3 = objects(x2, T, F, T)\n    x4 = apply(normalize, x3)\n    x5 = astuple(ONE, THREE)\n    x6 = canvas(EIGHT, x5)\n    x7 = compose(toindices, normalize)\n    x8 = lbind(extract, x4)\n    x9 = rbind(compose, initset)\n    x10 = lbind(compose, flip)\n    x11 = chain(x8, x9, x10)\n    x12 = chain(x8, x9, x11)\n    x13 = fork(contained, toindices, x12)\n    x14 = rbind(shift, RIGHT)\n    x15 = compose(x14, x13)\n    x16 = fork(contained, toindices, x15)\n    x17 = fork(either, x15, x16)\n    x18 = rbind(argmax, rightmost)\n    x19 = compose(x18, x17)\n    x20 = fork(both, x15, x19)\n    x21 = fork(both, x17, x20)\n    x22 = fork( both, x15, x21)\n    x23 = fork(both, x17, x22)\n    x24 =9697069699\n    x25 = mapply(x21, x4)\n    x26 =9697069429(x25)\n    x27 = papply(pair, x25, x26)\n    x28 = difference(x27, x24)\n    O = fill(x6, ONE, x28)\n    return O"], [1.1, "def solve_13adc3e7(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(rbind,475)\n    x2 = compose(positive, size)\n    x3 = lbind(filter, x1)\n    x4 = rbind(sfilter, x2)\n    x5 = chain(x3, x4, frontiers)\n    x6 = chain(size, dedupe, first)\n    x7 = chain(size, dedupe, last)\n    x8 = fork(greater, x6, x7)\n    x9 = fork(both, x3, x8)\n    x10 = leastcolor(I)\n    x11 = palette(I)\n    x12 = remove(x10, x11)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = switch(I, x13, x14)\n    x16 = interval(650, SIX, ONE)\n    x17 = product(x16, x16)\n    x18 = initset( lbind)\n    x19 = lbind(matcher, first)\n    x20 = compose(x19, last)\n    x21 = lbind(sfilter, x17)\n    x22 = lbind(upscale, x10)\n    x23 = fork(mapply, x20, x22)\n    x24 = lbind(Example output:\n    0520225\n    1111111\n    0211111\n    1111111\n    29110211\n    1111111\n    0411404\n    0119109\n    1414507\n    \"\"\"\n    x1 = compose(positive, size)\n    x2 = lbind(sfilter, x17)\n    x3 = lbind(matcher, first)\n    x4 = chain(x3, x2, mostcolor)\n    x5 = fork(recolor, x23, x4)\n    x6 = mapply(x5, x18)\n    O = paint(x15, x6)\n    return O"], [1.1, "def solve_28f26c8e(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple( LEFT, UP)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(x4, x3)\n    x6 = combine(x3, x5)\n    x7 = fork(either, vline, hline)\n    x8 = x7(x6)\n    x9 = rbind(toobject, I)\n    x10 = chain(numcolors, x9, palette)\n    x11 = matcher(x10, TWO)\n    x12 = extract(x6, x11)\n    x13 =124colors(x12)\n    x14 = matcher(first, x12)\n    x15 = compose(flip, x14)\n    x16 = rbind(sfilter, x15)\n    x17 =12445(x13)\n    x18 =754(x17)\n    x19 = chain(size, x16, x18)\n    x20 = matcher(x19, ONE)\n    x21 = rbind(sfilter, x20)\n    x22 = chain(merge, x21, x16)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x23, x9)\n    O = paint(I, x24)\n    return O"], [1.1, "def solve_d1920951(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =61ba2dee(I):\n    x2 = crop(I, ORIGIN, THREE_BY_THREE)\n    O = switch(x2, EIGHT, x2)\n    return O"], [1.1, "def solve_e47471a6(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =143333(I)\n    x2 =9999(1111, ZERO)\n    x3 = rot90(I)\n    x4 = N090(NEG_ONE)\n    x5 = lefthalf(x1)\n    x6 = righthalf(x1)\n    x7 = branch(x4, x5, x6)\n    x8 = branch(x43, x7, x6)\n    O = x8(x4)\n    return O"], [1.1, "def solve_475fb778(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =173(I)\n    x2 = tophalf(x1)\n    x3 = numcolors(x2)\n    x4 = equality(x3, ONE)\n    x5 = bottomhalf(x1)\n    x6 = numcolors(x5)\n    x7 = equality(x6, ONE)\n    x8 = bottomhalf(x1)\n    x9 = numcolors(x8)\n    x10 = equality(x9, ONE)\n    x11 = hmirror(x2)\n    x12 = lefthalf(x11)\n    x13 = righthalf(x11)\n    x14 = vmirror(x13)\n    x15 = cellwise(x12, x14, ZERO)\n    x16 = replace(x15, ONE, TWO)\n    x17 = replace(x16, ONE, TWO)\n    x18 =54555555 replace(x17, ONE, TWO)\n    x19 =54555555(x18, x17)\n    O = replace(x19, ONE, TWO)\n    return O"], [1.1, "def solve_a3773fdc(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =531498cf0(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.1, "def solve_3a714cc3(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =8870914\n    5887542089\n    5497880446\n    6087416927\n    4be270ca9\n    \"\"\"\n    x2 = subgrid(x1, I)\n    x3 = replace(x2, ZERO, ZERO)\n    O = replace(x3, ONE, ZERO)\n    return O"], [1.1, "def solve_cd3f6f63(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    O =6aacharacter(I, T)\n    return O"], [1.1, "def solve_4225c37b(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =675(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = frontiers(I)\n    x5 = merge(x4)\n    x6 = toindices(x5)\n    x7 = index(x3, x6)\n    x8 = frontiers(x3)\n    x9 = sfilter(x8, hline)\n    x10 = size(x9)\n    x11 = increment(x10)\n    x12 = increment(x11)\n    x13 = tojvec(x12)\n    x14 = tojvec(x12)\n    x15 =0923411245\n    x16 =119(x13, x15)\n    x17 =197(x5)\n    x18 = cover(x3, x17)\n    x19 =2299(x17)\n    x20 = lbind(shift, x16)\n    x21 = palette(x19)\n    x22 = compose(x20, x21)\n    x23 = fork(combine, x20, x22)\n    x24 = palette(x23)\n    x25 = compose(x23, x24)\n    x26 = mapply(x25, x24)\n    x27 =363(x26)\n    O = replace(x18, x27, x ZERO)\n    return O"], [1.1, "def solve_95804035(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = shape(I)\n    x2 = subtract(x1, TWO)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = width(I)\n    x6 = partition(I)\n    x7 = matcher(color, ZERO)\n    x8 = decrement(x1)\n    x9 = tojvec(x8)\n    x10 = connect(x7, x9)\n    x11 = height(I)\n    x12 = width(I)\n    x13 = ofcolor(I, ZERO)\n    x14 = tojvec(x12)\n    x15 = connect(x13, x14)\n    x16 = vatching(x3)\n    x17 = shape(I)\n    x18 = subtract(x16, x17)\n    x19 = connect(x18, x3)\n    x20 = fill(I, x9, x19)\n    x21 = toobject(x20, I)\n    x22 =\n    \"\"\"\n    x1 = height(x21)\n    x2 = equality(x22, ONE)\n    x3 = shape(x chain(numcolors, canvas)\n    x4 = canvas(ZERO, x3)\n    x5 = ofcolor(x41, ZERO)\n    x6 = intersection(x5, x5)\n    O = fill(x4, EIGHT, x6)\n    return O"], [1.1, "def solve_b27aabbe(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = toindices(x2)\n    x4 = normalize(x2)\n    x5 = toindices(x2)\n    x6 = center(x4)\n    x7 = intersection(x5, x6)\n    x8 = fill(I, FOUR, x7)\n    x9 = astuple(ZERO, ORIGIN)\n    x10 = initset(x9)\n    x11 = insert(x10, x7)\n    x12 = insert(x11, x10)\n    x13 = tojvec(x12)\n    x14 = toivec(x13)\n    x15 = fill(x8, ZERO, x14)\n    x16 = fill(x15, FOUR, x13)\n    x17 = fill(x16, FOUR, x10)\n    x18 = objects(x17, T, T, T)\n    x19 = merge(x18)\n    x20 = cover(x17, x19)\n    x21 = paint(x20, x19)\n    x22 = astuple(x24, x12)\n    x23 = astuple(x24, x10)\n    x24 = fill(x21, FOUR, x23)\n    x25 = fill(x24, THREE, x12)\n    x26 = fill(x25, TWO, x12)\n    x27 = fill(x26, ONE, x12)\n    x28 = fill(x27, excludes, x12)\n    x29 = fill(x28, THREE, x12)\n    x30 =\n    3777777795\n    7777777729\n    7777777776\n    7777777777\n    7777777777\n    7777777777\n    \"\"\"\n    O = fill(x29, THREE, x10)\n    return O"], [1.1, "def solve_3489bafc(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(TWO, LEFT)\n    x3 = rbind(toobject, I)\n    x4 = compose(x3, vmirror)\n    x5 = rbind(toobject, I)\n    x6 = chain(x2, x5, x4)\n    x7 = rbind(colorcount, x ZERO)\n    x8 = argmax(x1, x7)\n    x9 = x6(x8)\n    x10 = shoot(x8, UNITY)\n    x11 = fill(I, x8, x10)\n    x12 = color(x11)\n    x13 = subgrid(x11, x12)\n    x14 = leastcolor(x13)\n    x15 = mostcolor(x13)\n    x16 = replace(x13, x14, x12)\n    x17 = replace(x16, x15, x13)\n    x18 = compress(x17)\n    x19 = width(x13)\n    x20 = halve(x19)\n    x21 = increment(x20)\n    x22 = width(x13)\n    x23 = halve(x22)\n    x24 = increment(x23)\n    x25 = astuple(x21, x24)\n    x26 = canvas(x15, x25)\n    x27 =THfeca(x20)\n    x28 = tojvec(x27)\n    x29 = matcher(first, x18)\n    x30 = sfilter(x1, x29)\n    x31 = shift(x30, UP)\n    x32 = fill(x26, x14, x31)\n    x33 = shift(x31, DOWN)\n    O = fill(x32, x18, x33)\n    return O"], [1.1, "def solve_c7210437(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =3805679(I)\n    x2 =9619265977\n    3401500923\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [1.1, "def solve_fe1501d9(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =445(I)\n    x2 = fork(combine, vfrontier, hfrontier)\n    x3 = compose(x2, x1)\n    x4 = mapply(x3, x9)\n    O = fill(I, THREE, x4)\n    return O"], [1.1, "def solve_272eced3(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 =3807456(I)\n    x2 = asindices(x1)\n    x3 = objects(I, T, F, F)\n    x4 = toindices(x3)\n    x5 = asindices(I)\n    x6 = corners(x5)\n    x7 = lbind(rbind, difference)\n    x8 = toindices(x7)\n    x9 = rbind(compose, initset)\n    x10 = lbind(rbind, contained)\n    x11 = chain(x9, x10, initset)\n    x12 = lbind(argmin, x5)\n    x13 = chain(first, x12, x11)\n    x14 = asindices(x1)\n    x15 = ofcolor(I, x4)\n    x16 = intersection(x15, x14)\n    x17 = fill(I, ZERO, x16)\n    x18 = fork(recolor, color, x14)\n    x19 = mapply(x18, x15)\n    O = paint(x17, x19)\n    return O"], [1.1, "def solve_dc1fa544(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x\n    x1 = other(x7, x8)\n    x2 = vmirror(x8)\n    x3 = hconcat(x2, x8)\n    x4 =45(x3)\n    x5 =87(x4)\n    x6 = color(x5)\n    x7 = palette(x3)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, x5)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = partition(x5)\n    x13 =885(x12)\n    x14 =External(x13)\n    x15 = invert(x14)\n    x16 = cover(I, x11)\n    x17 = shoot(x15, UNITY)\n    x18 = shoot(x15, NEG_UNITY)\n    x19 = shoot(x15, UP_RIGHT)\n    x20 = shoot(x15, DOWN_LEFT)\n    x21 = combine(x17, x20)\n    x22 = combine(x18, x21)\n    x23 = fork(combine, vfrontier, hfrontier)\n    x24 = compose(x23, center)\n    x25 = mapply(x24, x22)\n    O = fill(x16, x11, x25)\n    return O"], [1.1, "def solve_c795a5e3(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 =889(I)\n    x2 = shape(I)\n    x3 = partition(I)\n    x4 = argmax(x3, size)\n    x5 = canvas(FIVE, x2)\n    O = paint(x5, x4)\n    return O"], [1.1, "def solve_ac97ce59(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 =5521c2gravitate(I, x1)\n    x2 = compose(crement, x1)\n    x3 = order(x1, x2)\n    x4 = first(x3)\n    x5 = last(x3)\n    x6 = ofcolor(I, x4)\n    x7 = ofcolor(I, x5)\n    x8 = neighbors(ORIGIN)\n    x9 = intersection(x8, x7)\n    x10 = power(x2, FOUR)\n    x11 = x10(I)\n    x12 = tojvec(x11)\n    x13 = shift(x11, x12)\n    x14 = x10(I)\n    x15 = x5(x14)\n    x16 = combine(x13, x15)\n    x17 = mapply(x2, x16)\n    O = fill(I, FOUR, x17)\n    return O"]], "2037f2c7": [[0.5124660219282645, "def solve_aa6e98a2(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_4682ec67(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_46cd0e30(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_ed7aad60(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_463751f4(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5251570172671126, "def solve_4182867e(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = rbind(equality, x4)\n    x7 = argmin(x5, x6)\n    x8 = asindices(I)\n    x9 = ofcolor(I, x4)\n    x10 = difference(x8, x9)\n    x11 = fill(I, x7, x10)\n    x12 = frontiers(x11)\n    x13 = sfilter(x12, vline)\n    x14 = difference(x12, x13)\n    x15 = astuple(x14, x13)\n    x16 = apply(size, x15)\n    x17 = increment(x16)\n    O = canvas(x4, x17)\n    return O"], [0.5341705127937012, "def solve_b9e61308(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.5341705127937012, "def solve_802eed96(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = color(x3)\n    x5 = remove(ZERO, x1)\n    x6 = other(x5, x4)\n    O = canvas(x6, UNITY)\n    return O"], [0.5341705127937012, "def solve_b23ce719(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.5341705127937012, "def solve_e406cac2(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.5341705127937012, "def solve_22e7556c(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = branch(x2, ONE, SEVEN)\n    O = canvas(x3, UNITY)\n    return O"], [0.5341705127937012, "def solve_4b3b4369(I):\n    x1 = fgpartition(I)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = compose(flip, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    O = canvas(x5, UNITY)\n    return O"], [0.5437278100321579, "def solve_cad208c6(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = astuple(ONE, THREE)\n    x8 = size(x6)\n    x9 = order(x6, leftmost)\n    x10 = apply(color, x9)\n    x11 = rbind(canvas, UNITY)\n    x12 = apply(x11, x10)\n    x13 = merge(x12)\n    x14 = dmirror(x13)\n    x15 = subtract(NINE, x8)\n    x16 = astuple(ONE, x15)\n    x17 = mostcolor(I)\n    x18 = canvas(x17, x16)\n    x19 = hconcat(x14, x18)\n    x20 = hsplit(x19, THREE)\n    x21 = merge(x20)\n    x22 = crop(x21, ORIGIN, x7)\n    x23 = crop(x21, DOWN, x7)\n    x24 = crop(x21, TWO_BY_ZERO, x7)\n    x25 = vmirror(x23)\n    x26 = vconcat(x22, x25)\n    O = vconcat(x26, x24)\n    return O"], [0.5437278100321579, "def solve_cad91853(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = astuple(ONE, THREE)\n    x8 = size(x6)\n    x9 = order(x6, leftmost)\n    x10 = apply(color, x9)\n    x11 = rbind(canvas, UNITY)\n    x12 = apply(x11, x10)\n    x13 = merge(x12)\n    x14 = dmirror(x13)\n    x15 = subtract(NINE, x8)\n    x16 = astuple(ONE, x15)\n    x17 = mostcolor(I)\n    x18 = canvas(x17, x16)\n    x19 = hconcat(x14, x18)\n    x20 = hsplit(x19, THREE)\n    x21 = merge(x20)\n    x22 = crop(x21, ORIGIN, x7)\n    x23 = crop(x21, DOWN, x7)\n    x24 = crop(x21, TWO_BY_ZERO, x7)\n    x25 = vmirror(x23)\n    x26 = vconcat(x22, x25)\n    O = vconcat(x26, x24)\n    return O"], [0.5614714401904005, "def solve_a14b567d(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.5730284728096737, "def solve_f3e72b6a(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.5748260164859528, "def solve_73f4927b(I):\n    x1 = asindices(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(greater, TWO)\n    x4 = compose(x3, size)\n    x5 = sfilter(x2, x4)\n    x6 = totuple(x5)\n    x7 = apply(color, x6)\n    x8 = apply(center, x6)\n    x9 = pair(x7, x8)\n    x10 = fill(I, ZERO, x1)\n    x11 = paint(x10, x9)\n    x12 = rbind(greater, ONE)\n    x13 = compose(dedupe, totuple)\n    x14 = chain(x12, size, x13)\n    x15 = sfilter(x11, x14)\n    x16 = rot90(x15)\n    x17 = sfilter(x16, x14)\n    O = rot270(x17)\n    return O"], [0.5863202149434034, "def solve_8747436a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, T, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.5863747631863573, "def solve_48213163(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, T, T)\n    x3 = first(x2)\n    x4 = vline(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(x1)\n    x7 = objects(x6, T, T, T)\n    x8 = order(x7, uppermost)\n    x9 = apply(color, x8)\n    x10 = dedupe(x9)\n    x11 = size(x10)\n    x12 = rbind(repeat, x11)\n    x13 = apply(x12, x10)\n    O = x5(x13)\n    return O"], [0.5963048638279206, "def solve_7ac1be8f(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [0.5963048638279206, "def solve_b15c2fb9(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [0.5989431427144928, "def solve_14d734ef(I):\n    x1 = astuple(SIX, ONE)\n    x2 = crop(I, ORIGIN, x1)\n    x3 = hmirror(x2)\n    x4 = upscale(x3, THREE)\n    x5 = dmirror(x2)\n    x6 = hconcat(x5, x2)\n    O = upscale(x6, THREE)\n    return O"], [0.6076921592043171, "def solve_fa0a5507(I):\n    x1 = asindices(I)\n    x2 = toobject(x1, I)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = rbind(colorcount, TWO)\n    x9 = argmax(x7, x8)\n    O = subgrid(x9, I)\n    return O"], [0.6076921592043171, "def solve_edf2e540(I):\n    x1 = width(I)\n    x2 = astuple(NINE, x1)\n    x3 = canvas(ZERO, x2)\n    x4 = vconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = rbind(colorcount, TWO)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.6076921592043171, "def solve_ee531e12(I):\n    x1 = width(I)\n    x2 = astuple(NINE, x1)\n    x3 = canvas(ZERO, x2)\n    x4 = vconcat(I, x3)\n    x5 = objects(x4, F, T, T)\n    x6 = rbind(colorcount, TWO)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.6134163510818244, "def solve_af3ed0ae(I):\n    x1 = trim(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(x2)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(x2)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(x2)\n    x8 = lefthalf(x7)\n    x9 = palette(x4)\n    x10 = palette(x6)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x4)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x4)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.6194886937848373, "def solve_0d02d8f4(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.6194886937848373, "def solve_5c8f233d(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.6309126220053929, "def solve_b5240ed8(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_8c8a14d5(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_9114b9e5(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_d283af5c(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_9e682e8a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_19c63778(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_8e186af7(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_123b3dad(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.631933306897075, "def solve_c7dbe277(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.631933306897075, "def solve_574f486b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.652277101112151, "def solve_7eae5fef(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.6557151442133381, "def solve_75888707(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.6557151442133381, "def solve_e47c7452(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.6557151442133381, "def solve_41fa00c0(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.6557151442133381, "def solve_e14349cd(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.6557151442133381, "def solve_14b120b7(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.6557151442133381, "def solve_c375a6ee(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.6557151442133381, "def solve_99db25b8(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.6938245927181472, "def solve_084f10d2(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = subgrid(x20, I)\n    x22 = switch(x21, x18, x19)\n    x23 = replace(x22, x18, x4)\n    x24 = lbind(downscale, x23)\n    x25 = fork(upscale, x24, identity)\n    x26 = matcher(x25, x23)\n    x27 = shape(x23)\n    x28 = maximum(x27)\n    x29 = interval(ONE, x28, ONE)\n    x30 = sfilter(x29, x26)\n    x31 = maximum(x30)\n    O = downscale(x23, x31)\n    return O"], [0.7120344565700184, "def solve_12bf26e7(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.7120344565700184, "def solve_bbd72cce(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.7120344565700184, "def solve_8dcc0cf4(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.7120344565700184, "def solve_4ee717cb(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.7120344565700184, "def solve_86e9d730(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.7164645384977338, "def solve_2f205aff(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, vline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = combine(x15, x16)\n    x18 = intersection(x15, x16)\n    x19 = difference(x17, x18)\n    O = fill(x14, THREE, x19)\n    return O"], [0.7313689109828214, "def solve_24cfb778(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.7313689109828214, "def solve_1425901f(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.7313689109828214, "def solve_96367e9d(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.7356195315428602, "def solve_f3432e08(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x7, x16)\n    x20 = ofcolor(x8, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, THREE, x21)\n    return O"], [0.7356195315428602, "def solve_26ae7cbc(I):\n    x1 = hsplit(I, TWO)\n    x2 = apply(numcolors, x1)\n    x3 = equality(x2, TWO_BY_TWO)\n    x4 = branch(x3, hsplit, vsplit)\n    x5 = x4(I, TWO)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 = palette(x6)\n    x9 = palette(x7)\n    x10 = intersection(x8, x9)\n    x11 = first(x10)\n    x12 = palette(x6)\n    x13 = other(x12, x11)\n    x14 = palette(x7)\n    x15 = other(x14, x11)\n    x16 = shape(x6)\n    x17 = canvas(x11, x16)\n    x18 = ofcolor(x6, x13)\n    x19 = ofcolor(x7, x15)\n    x20 = combine(x18, x19)\n    O = fill(x17, SIX, x20)\n    return O"], [0.7513894621344644, "def solve_e69f26ec(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.7702738530895862, "def solve_ccb549cb(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_774620c3(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_e30533ef(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_71b9b227(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_507d7b13(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_0b7a725b(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_f93b0c11(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_377a47d0(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_2b3d5283(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_fc191c16(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    O = paint(x2, x4)\n    return O"], [0.7707492564922985, "def solve_24e6775d(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.7707492564922985, "def solve_89fb4590(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, T, T)\n    x4 = merge(x3)\n    O = paint(x2, x4)\n    return O"], [0.7946931652854432, "def solve_48e262cc(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.7946931652854432, "def solve_adaea082(I):\n    x1 = objects(I, T, F, T)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = mostcommon(x3)\n    x5 = canvas(x4, TWO_BY_TWO)\n    x6 = asobject(x5)\n    x7 = palette(I)\n    x8 = matcher(identity, x4)\n    x9 = argmin(x7, x8)\n    x10 = shape(I)\n    x11 = canvas(x9, x10)\n    x12 = lbind(shift, x6)\n    x13 = occurrences(I, x6)\n    x14 = mapply(x12, x13)\n    O = paint(x11, x14)\n    return O"], [0.8058042763965544, "def solve_687daf70(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.8058042763965544, "def solve_30e48a57(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.8141732132799135, "def solve_1b1c9fca(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.8141732132799135, "def solve_954eb638(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.8141732132799135, "def solve_d5b63ed1(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.8277590843976249, "def solve_7b9f301b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.8277590843976249, "def solve_1499f949(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.8277590843976249, "def solve_9467b2a4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.8277590843976249, "def solve_555fb7c6(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_95c35b68(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277875214971026, "def solve_e0cd8800(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.8277875214971026, "def solve_536c7915(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.829564622162508, "def solve_6f267caf(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.829564622162508, "def solve_ca4e52c9(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.8296258545422006, "def solve_c1096266(I):\n    O = trim(I)\n    return O"], [0.8296258545422006, "def solve_67736be5(I):\n    O = trim(I)\n    return O"], [0.8296258545422006, "def solve_b786f420(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, height)\n    x3 = subgrid(x2, I)\n    O = trim(x3)\n    return O"], [0.8318317421672301, "def solve_10288e4a(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, EIGHT, x6)\n    return O"], [0.8318317421672301, "def solve_5063e569(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, EIGHT, x6)\n    return O"], [0.8318317421672301, "def solve_99ad2cfe(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, EIGHT, x6)\n    return O"], [0.8335820541743321, "def solve_2863bdd1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = first(x2)\n    x4 = neighbors(x3)\n    x5 = mostcolor(I)\n    x6 = shape(I)\n    x7 = canvas(x5, x6)\n    x8 = initset(x3)\n    x9 = fill(x7, x1, x8)\n    O = fill(x9, TWO, x4)\n    return O"], [0.8376932799217021, "def solve_7382b409(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.838870195508736, "def solve_3e53b338(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, SIX)\n    x3 = compose(flip, x2)\n    x4 = mfilter(x1, x2)\n    x5 = mfilter(x1, x3)\n    x6 = fill(I, TWO, x4)\n    O = fill(x6, ONE, x5)\n    return O"], [0.8446243227863208, "def solve_a12e172f(I):\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.8530872511837071, "def solve_8c37c66c(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.8545767256547839, "def solve_4e55c917(I):\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = lefthalf(x4)\n    x6 = righthalf(x4)\n    x7 = rbind(order, identity)\n    x8 = apply(x7, x5)\n    x9 = apply(x7, x6)\n    x10 = hconcat(x8, x9)\n    O = x3(x10)\n    return O"], [0.8559241864624044, "def solve_60d37582(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.8559241864624044, "def solve_d5ed6f6a(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.8625466344449646, "def solve_836cc12d(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, TWO, x3)\n    return O"], [0.8626797193182597, "def solve_21b08718(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(equality, toindices, box)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = argmax(x3, x4)\n    x6 = mostcolor(I)\n    x7 = inbox(x5)\n    x8 = backdrop(x7)\n    x9 = toobject(x8, I)\n    x10 = matcher(first, x6)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x9, x11)\n    x13 = normalize(x12)\n    x14 = color(x13)\n    x15 = toindices(x13)\n    x16 = compose(toindices, normalize)\n    x17 = matcher(x16, x15)\n    x18 = mfilter(x1, x17)\n    O = fill(I, x14, x18)\n    return O"], [0.8626930547953181, "def solve_cbd1597b(I):\n    O = cmirror(I)\n    return O"], [0.8627265337429545, "def solve_a6007a60(I):\n    x1 = leastcolor(I)\n    x2 = height(I)\n    x3 = vsplit(I, x2)\n    x4 = lbind(recolor, TWO)\n    x5 = rbind(ofcolor, x1)\n    x6 = chain(x4, delta, x5)\n    x7 = fork(paint, identity, x6)\n    x8 = apply(x7, x3)\n    O = merge(x8)\n    return O"], [0.8630966423697286, "def solve_fc935b42(I):\n    x1 = fork(multiply, height, width)\n    x2 = partition(I)\n    x3 = argmax(x2, x1)\n    x4 = remove(x3, x2)\n    x5 = argmax(x4, x1)\n    x6 = other(x4, x5)\n    x7 = palette(I)\n    x8 = lrcorner(x5)\n    x9 = add(x8, UNITY)\n    x10 = llcorner(x5)\n    x11 = add(x10, DOWN_LEFT)\n    x12 = urcorner(x5)\n    x13 = add(x12, UP_RIGHT)\n    x14 = ulcorner(x5)\n    x15 = add(x14, NEG_UNITY)\n    x16 = shoot(x9, UNITY)\n    x17 = shoot(x11, DOWN_LEFT)\n    x18 = shoot(x13, UP_RIGHT)\n    x19 = shoot(x15, NEG_UNITY)\n    x20 = combine(x16, x17)\n    x21 = combine(x18, x19)\n    x22 = combine(x20, x21)\n    x23 = color(x6)\n    O = fill(I, x23, x22)\n    return O"], [0.8631105583205274, "def solve_20542bfc(I):\n    x1 = objects(I, F, F, T)\n    x2 = argmax(x1, numcolors)\n    x3 = remove(x2, x1)\n    x4 = normalize(x2)\n    x5 = apply(ulcorner, x3)\n    x6 = lbind(shift, x4)\n    x7 = mapply(x6, x5)\n    x8 = paint(I, x7)\n    O = cover(x8, x2)\n    return O"], [0.8631333933751663, "def solve_2ebdc1eb(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = chain(size, dedupe, first)\n    x9 = matcher(x8, ONE)\n    x10 = compose(first, cmirror)\n    x11 = chain(size, dedupe, x10)\n    x12 = matcher(x11, ONE)\n    x13 = fork(both, x9, x12)\n    x14 = rbind(rapply, I)\n    x15 = compose(initset, first)\n    x16 = chain(first, x14, x15)\n    x17 = compose(x13, x16)\n    x18 = extract(x7, x17)\n    x19 = first(x18)\n    x20 = last(x18)\n    x21 = x19(I)\n    x22 = width(x21)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = index(x21, x24)\n    x26 = asobject(x21)\n    x27 = matcher(first, x25)\n    x28 = compose(flip, x27)\n    x29 = sfilter(x26, x28)\n    x30 = hperiod(x29)\n    x31 = width(x21)\n    x32 = increment(x31)\n    x33 = interval(ZERO, x32, x30)\n    x34 = apply(tojvec, x33)\n    x35 = lbind(shift, x29)\n    x36 = mapply(x35, x34)\n    x37 = paint(x21, x36)\n    O = x20(x37)\n    return O"], [0.8631356100874941, "def solve_360099ce(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = recolor(ZERO, x2)\n    x4 = normalize(x3)\n    x5 = occurrences(I, x4)\n    x6 = toindices(x4)\n    x7 = lbind(shift, x6)\n    x8 = mapply(x7, x5)\n    O = fill(I, x1, x8)\n    return O"], [0.8632184800688373, "def solve_1695ac79(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.8634207638517514, "def solve_d1509c3e(I):\n    O = vmirror(I)\n    return O"], [0.8634207638517514, "def solve_74f08535(I):\n    O = vmirror(I)\n    return O"], [0.8634577218981633, "def solve_a9e577f8(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [0.8636023351419029, "def solve_fea2dd17(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = height(x2)\n    x4 = halve(x3)\n    x5 = width(x2)\n    x6 = halve(x5)\n    x7 = ulcorner(x2)\n    x8 = lrcorner(x2)\n    x9 = shape(I)\n    x10 = maximum(x9)\n    x11 = multiply(THREE, TEN)\n    x12 = interval(ZERO, x11, ONE)\n    x13 = rbind(multiply, x4)\n    x14 = apply(x13, x12)\n    x15 = rbind(multiply, x6)\n    x16 = apply(x15, x12)\n    x17 = pair(x14, x16)\n    x18 = rbind(add, x7)\n    x19 = apply(invert, x17)\n    x20 = apply(x18, x19)\n    x21 = rbind(add, x8)\n    x22 = apply(x21, x17)\n    x23 = pair(x20, x22)\n    x24 = mapply(box, x23)\n    O = fill(I, x1, x24)\n    return O"], [0.863678348633302, "def solve_8b036e59(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.863706518437685, "def solve_c9b36130(I):\n    O = dmirror(I)\n    return O"], [0.863706518437685, "def solve_c43ebc54(I):\n    O = dmirror(I)\n    return O"], [0.863706518437685, "def solve_d9741062(I):\n    O = dmirror(I)\n    return O"], [0.8637867634430995, "def solve_cff284a0(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = contained(ZERO, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, ZERO)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.8637867634430995, "def solve_0bfe2599(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.8637867634430995, "def solve_f83cfc9e(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.8637867634430995, "def solve_bca68728(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.8637867634430995, "def solve_c2a12f17(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.8637867634430995, "def solve_9370ba68(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.8637867634430995, "def solve_606449bf(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.8637867634430995, "def solve_f0c062e9(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.8638179923732853, "def solve_26ad5817(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = rbind(difference, x2)\n    x4 = rbind(greater, TWO)\n    x5 = chain(x4, size, x3)\n    x6 = compose(x5, dneighbors)\n    x7 = sfilter(x2, x6)\n    O = fill(I, ZERO, x7)\n    return O"], [0.8638701955087361, "def solve_b19d2edb(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.8638701955087361, "def solve_275a100d(I):\n    x1 = lbind(greater, TWO)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(toindices, x3)\n    x5 = rbind(shoot, RIGHT)\n    x6 = compose(x5, center)\n    x7 = fork(recolor, color, x6)\n    x8 = mapply(x7, x4)\n    O = underpaint(I, x8)\n    return O"], [0.8638701955087361, "def solve_29c981c4(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, TWO)\n    x3 = mfilter(x1, x2)\n    x4 = matcher(size, THREE)\n    x5 = mfilter(x1, x4)\n    x6 = matcher(size, FOUR)\n    x7 = mfilter(x1, x6)\n    x8 = fill(I, THREE, x3)\n    x9 = fill(x8, TWO, x5)\n    O = fill(x9, ONE, x7)\n    return O"], [0.8638701955087361, "def solve_a839b426(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.8638701955087361, "def solve_e31408cd(I):\n    x1 = switch(I, THREE, FOUR)\n    O = replace(x1, EIGHT, NINE)\n    return O"], [0.8638701955087361, "def solve_decdcc10(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.8638701955087361, "def solve_a2c595f8(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.8638701955087361, "def solve_21e98f9e(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.8638701955087361, "def solve_9a66bff6(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_bf8b1bf4(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_acf6bdf9(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.8638701955087361, "def solve_d7fccb94(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.8638701955087361, "def solve_cca89912(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.8638701955087361, "def solve_c1a0a3c6(I):\n    O = subgrid(I, I)\n    return O"], [0.8638701955087361, "def solve_810abb6b(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(greater, TWO)\n    x3 = chain(x2, minimum, shape)\n    x4 = fork(equality, toindices, box)\n    x5 = fork(both, x3, x4)\n    x6 = mfilter(x1, x5)\n    O = fill(I, SEVEN, x6)\n    return O"], [0.8638701955087361, "def solve_d54a664f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.8638701955087361, "def solve_1f533393(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = fill(I, x8, x32)\n    return O"], [0.8638701955087361, "def solve_4e71abd1(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = colorfilter(x2, x1)\n    x4 = rbind(toobject, I)\n    x5 = chain(leastcolor, x4, delta)\n    x6 = rbind(shift, UP)\n    x7 = compose(x6, delta)\n    x8 = rbind(mapply, x3)\n    x9 = compose(x8, x7)\n    x10 = fork(4344, x7, x9)\n    x11 = mapply(x10, x3)\n    O = fill(I, x1, x11)\n    return O"], [0.8638701955087361, "def solve_a527719e(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.8638701955087361, "def solve_21c80f55(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.8638701955087361, "def solve_c6f48df8(I):\n    O = replace(I, SEVEN, FIVE)\n    return O"], [0.8638701955087361, "def solve_bb7a076d(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.8638701955087361, "def solve_eb364f82(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_0c3b3abd(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_e2c11e11(I):\n    x1 = objects(I, F, F, T)\n    x2 = argmax(x1, numcolors)\n    x3 = astuple(TWO, FOUR)\n    x4 = rbind(contained, x3)\n    x5 = compose(x4, size)\n    x6 = rbind(sfilter, x5)\n    x7 = lbind(rbind, subtract)\n    x8 = lbind(occurrences, I)\n    x9 = lbind(lbind, shift)\n    x10 = compose(x7, ulcorner)\n    x11 = chain(x10, x6, normalize)\n    x12 = chain(x8, x6, normalize)\n    x13 = fork(apply, x11, x12)\n    x14 = compose(x9, normalize)\n    x15 = fork(mapply, x14, x13)\n    x16 = astuple(cmirror, dmirror)\n    x17 = astuple(hmirror, vmirror)\n    x18 = combine(x16, x17)\n    x19 = product(x18, x18)\n    x20 = fork(compose, first, last)\n    x21 = apply(x20, x19)\n    x22 = totuple(x21)\n    x23 = combine(x18, x22)\n    x24 = rapply(x23, x2)\n    x25 = mapply(x15, x24)\n    O = paint(I, x25)\n    return O"], [0.8638701955087361, "def solve_f042c2d5(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.8638701955087361, "def solve_b07a8d11(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.8638701955087361, "def solve_fc762d37(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.8638701955087361, "def solve_f6d76d02(I):\n    x1 = palette(I)\n    x2 = remove(FIVE, x1)\n    x3 = first(x2)\n    x4 = ofcolor(I, x3)\n    x5 = fill(I, ZERO, x4)\n    x6 = ofcolor(I, FIVE)\n    O = fill(x5, x3, x6)\n    return O"], [0.8638763240862932, "def solve_51a9ff61(I):\n    x1 = objects(I, T, F, T)\n    x2 = mapply(delta, x1)\n    O = fill(I, SEVEN, x2)\n    return O"], [0.8638891638983809, "def solve_c8d28a47(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.8638942227796885, "def solve_423c1d40(I):\n    x1 = leastcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = colorfilter(x2, x1)\n    x4 = merge(x3)\n    x5 = delta(x4)\n    x6 = first(x5)\n    x7 = neighbors(x6)\n    O = fill(I, FOUR, x7)\n    return O"], [0.8639438916538609, "def solve_a4074d76(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_6482a033(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8639438916538609, "def solve_c960a8fa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_51e90d18(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_40e9c8df(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8639438916538609, "def solve_2434f2c6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_34ac5d8e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8639438916538609, "def solve_13884eaa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8639438916538609, "def solve_7a598386(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8639438916538609, "def solve_24400ee6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8639438916538609, "def solve_646cb8a3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_e24c552d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8639438916538609, "def solve_4f193e82(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_6a1912f2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8639438916538609, "def solve_65654a3a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_f3e18066(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_eee644a0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8640253338383225, "def solve_ce587d0c(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_40070ff3(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_c25ac752(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_5331b04f(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_0556d0a8(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_ea483d50(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_c0586be1(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_4194c07f(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_459c45f7(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_a12a9fa9(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_58912951(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_29b8411f(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_05159e96(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8641376097298877, "def solve_523d9c55(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.8641376097298877, "def solve_5883616d(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind( sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.8641376097298877, "def solve_1d868504(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.8641376097298877, "def solve_761070fb(I):\n    O = rot180(I)\n    return O"], [0.8641453134548085, "def solve_62256d0a(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.8641474651177995, "def solve_16ca361e(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.8641474651177995, "def solve_2ee32888(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.8641474651177995, "def solve_7ae31051(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.8642721744821437, "def solve_49b55b5b(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(shoot, RIGHT)\n    x4 = compose(x3, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(x1, DOWN_LEFT)\n    x9 = initset(x8)\n    x10 = mostcolor(I)\n    x11 = recolor(x10, x9)\n    x12 = objects(x7, T, F, T)\n    x13 = insert(x11, x12)\n    x14 = order(x13, uppermost)\n    x15 = first(x14)\n    x16 = remove(x11, x14)\n    x17 = remove(x15, x14)\n    x18 = compose(lrcorner, first)\n    x19 = compose(lrcorner, last)\n    x20 = fork(connect, x18, x19)\n    x21 = compose(color, first)\n    x22 = fork(recolor, x21, x20)\n    x23 = pair(x16, x17)\n    x24 = mapply(x22, x23)\n    O = underpaint(x7, x24)\n    return O"], [0.8642976086802397, "def solve_70e537c0(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(shoot, DOWN)\n    x3 = compose(x2, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    O = paint(I, x5)\n    return O"], [0.8644669437834643, "def solve_9af89688(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.8654574970960377, "def solve_23df3883(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = rbind(multiply, THREE)\n    x6 = rbind(divide, THREE)\n    x7 = compose(x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = toindices(x4)\n    x10 = compose(x8, last)\n    x11 = sfilter(x9, x10)\n    O = fill(I, SIX, x11)\n    return O"], [0.8656237858337551, "def solve_a1a881f1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.8656237858337551, "def solve_b607ec74(I):\n    x1 = leastcolor(I)\n    x2 = mostcolor(I)\n    x3 = ofcolor(I, x1)\n    x4 = replace(I, x1, x2)\n    x5 = mapply(dneighbors, x3)\n    x6 = mapply(ineighbors, x3)\n    x7 = fill(x4, ONE, x5)\n    O = fill(x7, x1, x6)\n    return O"], [0.8656237858337551, "def solve_bdb11c07(I):\n    x1 = leastcolor(I)\n    x2 = mostcolor(I)\n    x3 = ofcolor(I, x1)\n    x4 = replace(I, x1, x2)\n    x5 = mapply(dneighbors, x3)\n    x6 = mapply(ineighbors, x3)\n    x7 = fill(x4, ONE, x5)\n    O = fill(x7, x1, x6)\n    return O"], [0.8672110874210567, "def solve_2a1df969(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.8684204478249318, "def solve_e4e70cb1(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, ONE, x6)\n    return O"], [0.8687415090376716, "def solve_10cf80c1(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_7cf868b9(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_0babfdda(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_6cc4f03e(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_81cb3365(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_165720ef(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_6ee59fd8(I):\n    x1 = crop(I, ORIGIN, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_c66b0680(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_6b2389c7(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_c7371453(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_6e11b024(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_7cfb6dd5(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.895840777338116, "def solve_2b688564(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, vmirror, hmirror)\n    x9 = x8(x6)\n    x10 = branch(x7, leftmost, uppermost)\n    x11 = branch(x7, tojvec, toivec)\n    x12 = x10(x5)\n    x13 = x10(x6)\n    x14 = greater(x12, x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = x11(x16)\n    x18 = shape(x6)\n    x19 = multiply(x17, x18)\n    x20 = shift(x9, x19)\n    x21 = fill(I, THREE, x3)\n    O = paint(x21, x20)\n    return O"], [0.895840777338116, "def solve_fd781b02(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, T, F, T)\n    x9 = colorfilter(x8, x4)\n    x10 = sizefilter(x9, ONE)\n    x11 = merge(x10)\n    O = fill(x6, TWO, x11)\n    return O"], [0.895840777338116, "def solve_4b3dbf01(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = lbind(power, outbox)\n    x8 = chain(x7, halve, width)\n    x9 = initset(x8)\n    x10 = lbind(rapply, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = compose(backdrop, x12)\n    x14 = fork(difference, x13, toindices)\n    x15 = mapply(x14, x1)\n    x16 = mostcolor(I)\n    x17 = ofcolor(I, x16)\n    x18 = intersection(x15, x17)\n    O = fill(x6, THREE, x18)\n    return O"], [0.895840777338116, "def solve_9bedaaf3(I):\n    x1 = index(I, ORIGIN)\n    x2 = objects(I, T, F, F)\n    x3 = fork(multiply, height, width)\n    x4 = fork(equality, size, x3)\n    x5 = chain(positive, decrement, size)\n    x6 = colorfilter(x2, x1)\n    x7 = fork(both, x4, x5)\n    x8 = sfilter(x6, x7)\n    x9 = merge(x8)\n    x10 = ofcolor(I, x1)\n    x11 = fill(I, FOUR, x10)\n    O = fill(x11, THREE, x9)\n    return O"], [1.0, "def solve_a57bb1ab(I):\n    x1 = objects(I, T, F, T)\n    x2 = lbind(index, I)\n    x3 = compose(x2, lrcorner)\n    x4 = astuple(NEG_TWO, NEG_TWO)\n    x5 = rbind(subtract, x4)\n    x6 = rbind(shoot, x4)\n    x7 = compose(x5, x6)\n    x8 = fork(recolor, x3, x7)\n    x9 = mapply(x8, x1)\n    O = paint(I, x9)\n    return O"], [1.0, "def solve_2559f642(I):\n    x1 = rbind(Sfilter, vline)\n    x2 = compose(x1, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shift(x4, DOWN)\n    x6 = fill(x3, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [1.0, "def solve_3dcfe43c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_3bdae9ce(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = lbind(shift, x4)\n    x6 = mapply(x5, x2)\n    O = fill(I, THREE, x6)\n    return O"], [1.0, "def solve_17ae3959(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_e6b6f71e(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = connect(x3, x4)\n    x8 = combine(x7, x6)\n    O = fill(x1, EIGHT, x8)\n    return O"], [1.0, "def solve_a24c1107(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_eb5c8386(I):\n    x1 = fork(combine, vfrontier, hfrontier)\n    x2 = compose(x1, center)\n    x3 = fork(recolor, color, x2)\n    x4 = mapply(x3, x1)\n    x5 = paint(I, x4)\n    x6 = interval(ZERO, FIVE, ONE)\n    x7 = apply(double, x6)\n    x8 = apply(increment, x7)\n    x9 = apply(tojvec, x8)\n    x10 = prapply(shift, x1, x9)\n    x11 = apply(asobject, x10)\n    x12 = lbind(shift, x11)\n    x13 = mapply(x12, x2)\n    O = paint(x5, x13)\n    return O"], [1.0, "def solve_727dc712(I):\n    x1 = lbind(recolor, EIGHT)\n    x2 = rbind(ofcolor, ZERO)\n    x3 = chain(x1, backdrop, x2)\n    x4 = fork(paint, identity, x3)\n    x5 = height(I)\n    x6 = vsplit(I, x5)\n    x7 = mapply(x4, x6)\n    x8 = ofcolor(x7, EIGHT)\n    x9 = dmirror(I)\n    x10 = width(I)\n    x11 = vsplit(x9, x10)\n    x12 = mapply(x11, x8)\n    x13 = fill(x12, ZERO, x11)\n    x14 = dmirror(x13)\n    x15 = ofcolor(x14, EIGHT)\n    x16 = mapply(x15, x15)\n    O = fill(x13, ZERO, x16)\n    return O"], [1.0, "def solve_f594a25c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_36f33f0c(I):\n    x1 = rot180(I)\n    x2 = rot270(I)\n    x3 = hconcat(I, x1)\n    x4 = hconcat(x3, x2)\n    O = vconcat(x4, x4)\n    return O"], [1.0, "def solve_4fe97998(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_5e0ff3e0(I):\n    x1 = vmirror(I)\n    O = hconcat(x1, I)\n    return O"], [1.0, "def solve_3ced58f2(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_37b12428(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_39e8e32b(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_c9eca4cf(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_f526a19c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_6ed2fc1c(I):\n    x1 = objects(I, T, F, T)\n    x2 = colorfilter(x1, ONE)\n    x3 = fork(subtract, first, last)\n    x4 = fork(multiply, sign, identity)\n    x5 = compose(x4, x3)\n    x6 = rbind(greater, TWO)\n    x7 = chain(x6, minimum, x5)\n    x8 = lbind(matcher, x7)\n    x9 = compose(x8, x3)\n    x10 = chain(sfilter, center, x9)\n    x11 = fork(shift, identity, x10)\n    x12 = mapply(x11, x2)\n    x13 = paint(I, x12)\n    x14 = canvas(ZERO, THREE_BY_THREE)\n    O = fill(x14, EIGHT, x2)\n    return O"], [1.0, "def solve_a5240307(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_8a691169(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = objects(x7, T, F, T)\n    x9 = colorfilter(x8, x6)\n    x10 = sizefilter(x9, ONE)\n    x11 = merge(x10)\n    x12 = argmax(x11, size)\n    x13 = subgrid(x12, x7)\n    x14 = width(x13)\n    x15 = divide(x14, x12)\n    x16 = downscale(x13, x15)\n    x17 = height(x16)\n    x18 = divide(x17, x12)\n    x19 = width(x12)\n    x20 = invert(x19)\n    x21 = interval(x20, x17, ONE)\n    x22 = prapply(shift, x7, x21)\n    x23 = merge(x22)\n    x24 = canvas(x6, x13)\n    x25 = asobject(x23)\n    x26 = insert(x24, x25)\n    x27 = height(x26)\n    x28 = increment(x18)\n    x29 = interval(ZERO, x28, x12)\n    x30 = apply(tojvec, x29)\n    x31 = pair(x30, x10)\n    x32 = sfilter(x31, ONE)\n    x33 = compose(size, first)\n    x34 = order(x32, x33)\n    x35 = apply(last, x34)\n    x36 = mpapply(recolor, x35, x32)\n    O = paint(x16, x36)\n    return O"], [1.0, "def solve_bcb376ba(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_4ffeddb9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_bdcadf62(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_65f78d9a(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_6338f343(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_1091f27e(I):\n    x1 = mostcolor(I)\n    x2 = colorcount(I, x1)\n    x3 = height(I)\n    x4 = width(I)\n    x5 = multiply(x3, x4)\n    x6 = subtract(x5, x2)\n    O = upscale(I, x6)\n    return O"], [1.0, "def solve_4c266689(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_28419118(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_7abb41f0(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_76c3f8ce(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_90e6c29c(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_64c1c1ce(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_f26a54c6(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_f8673ff6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_469c75f2(I):\n    x1 = height(I)\n    x2 = vsplit(I, x1)\n    x3 = apply(asobject, x2)\n    x4 = apply(hperiod, x3)\n    x5 = minimum(x4)\n    x6 = width(I)\n    x7 = hsplit(I, x6)\n    x8 = apply(asobject, x7)\n    x9 = apply(vperiod, x8)\n    x10 = minimum(x9)\n    x11 = matcher(hperiod, x5)\n    x12 = sfilter(x3, x11)\n    x13 = mapply(palette, x12)\n    x14 = matcher(vperiod, x10)\n    x15 = sfilter(x8, x14)\n    x16 = mapply(palette, x15)\n    x17 = palette(I)\n    x18 = combine(x13, x16)\n    x19 = rbind(contained, x18)\n    x20 = argmin(x17, x19)\n    x21 = asobject(I)\n    x22 = matcher(first, x20)\n    x23 = compose(flip, x22)\n    x24 = sfilter(x21, x23)\n    x25 = height(I)\n    x26 = divide(x25, x10)\n    x27 = increment(x26)\n    x28 = width(I)\n    x09 = divide(x28, x5)\n    x20 = increment(x29)\n    x21 = invert(x27)\n    x22 = interval(x21, x27, ONE)\n    x23 = apply(tojvec, x22)\n    x24 = lbind(shift, x24)\n    x25 = mapply(x24, x23)\n    O = paint(I, x25)\n    return O"], [1.0, "def solve_ce1bf59f(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    O = vperiod(x3)\n    return O"], [1.0, "def solve_a6da8000(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = increment(UNITY)\n    x4 = neighbors(x3)\n    x5 = delta(x3)\n    x6 = tophalf(I)\n    x7 = shift(x5, x6)\n    x8 = fill(I, ZERO, x7)\n    x9 = shape(x8)\n    x10 = maximum(x9)\n    x11 = lbind(shift, x8)\n    x12 = mapply(x11, x4)\n    O = fill(x8, x1, x12)\n    return O"], [1.0, "def solve_28fab0a5(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_eb1fb102(I):\n    x1 = rot270(I)\n    x2 = fork(equality, identity, rot90)\n    x3 = chain(flip, x2, x1)\n    x4 = sfilter(x1, x3)\n    x5 = fork(multiply, height, width)\n    x6 = argmax(x4, x5)\n    x7 = x6(I)\n    x8 = remove(x6, x7)\n    x9 = argmax(x8, x8)\n    x10 = lbind(chain, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x10, x11)\n    x13 = lbind(sfilter, x17)\n    x14 = chain(initset, x13, x12)\n    x15 = fork(upscale, identity, x14)\n    x16 = compose(rot90, x15)\n    x17 = power(x16, TWO)\n    x18 = x17(x6)\n    x19 = hconcat(x18, x17)\n    x20 = hmirror(x19)\n    x21 = vconcat(x19, x20)\n    x22 = vconcat(x21, x6)\n    x23 = x17(x22)\n    x24 = ofcolor(x23, ZERO)\n    x25 = asindices(x23)\n    x26 = outbox(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, x23)\n    x29 = mostcolor(x28)\n    x30 = color(x2)\n    x31 = matcher(first, x29)\n    x32 = compose(flip, x31)\n    x33 = sfilter(x1, x32)\n    x34 = sizefilter(x33, ONE)\n    x35 = merge(x34)\n    x36 = fill(x23, x30, x35)\n    x37 = paint(x36, x21)\n    O = x17(x37)\n    return O"], [1.0, "def solve_c9e2d240(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_89f8f38b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_a884a768(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_9c01849c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, mat, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [1.0, "def solve_e2924178(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_40f86e64(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_bf036372(I):\n    x1 = replace(I, SEVEN, FIVE)\n    x2 = ofcolor(I, THREE)\n    x3 = portrait(x2)\n    x4 = branch(x3, dmirror, identity)\n    x5 = x4(I)\n    x6 = decrement(x5)\n    x7 = hsplit(x6, THREE)\n    x8 = rbind(ofcolor, THREE)\n    x9 = apply(x8, x7)\n    x10 = leastcommon(x9)\n    x11 = matcher(x8, x10)\n    x12 = extract(x7, x11)\n    O = x4(x12)\n    return O"], [1.0, "def solve_7c43d454(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [1.0, "def solve_0c008612(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_6446b59d(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_5c338025(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, T)\n    x4 = merge(x3)\n    x5 = color(x4)\n    x6 = palette(x2)\n    x7 = remove(x5, x6)\n    x8 = lbind(colorcount, x4)\n    x9 = argmin(x7, x8)\n    x10 = ofcolor(x1, x9)\n    x11 = ofcolor(x2, x9)\n    x12 = combine(x10, x11)\n    x13 = mapply(neighbors, x12)\n    x14 = difference(x12, x13)\n    x15 = toobject(x14, x1)\n    x16 = apply(initset, x15)\n    x17 = rbind(gravitate, x17)\n    x18 = compose(crement, x17)\n    x19 = fork(shift, identity, x18)\n    x20 = mapply(x19, x15)\n    x21 = cover(x1, x20)\n    x22 = paint(x21, x02)\n    O = rot90(x22)\n    return O"], [1.0, "def solve_4b657b37(I):\n    x1 = branch(I, x2, ZERO)\n    x2 = branch(x1, x3, x5)\n    O = branch(x1, x4, x2)\n    return O"], [1.0, "def solve_1c512565(I):\n    x1 = rot180(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = x3(I)\n    x6 = shape(x4)\n    x7 = canvas(ZERO, x6)\n    x8 = ofcolor(x4, ZERO)\n    x9 =iers(x8)\n    x10 = intersection(x8, x9)\n    x11 = fill(x7, ZERO, x10)\n    O = x2(x11)\n    return O"], [1.0, "def solve_91e2daab(I):\n    x1 = asindices(I)\n    x2 = shape(I)\n    x3 = halve(x2)\n    x4 = rbind(shoot, x3)\n    x5 = compose(x4, last)\n    x6 = fork(recolor, first, x5)\n    x7 = mapply(x6, x1)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_8f945ce1(I):\n    x1 = faffalf(I)\n    x2 = equality(x1, I)\n    x3 = branch(x2, ONE, SEVEN)\n    O = canvas(x3, UNITY)\n    return O"], [1.0, "def solve_5e966667(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(toobject, I)\n    x4 = compose(first, delta)\n    x5 = rbind(colorcount, x1)\n    x6 = matcher(x5, TWO)\n    x7 = chain(x6, x3, dneighbors)\n    x8 = rbind(sfilter, x7)\n    x9 = chain(first, x8, toindices)\n    x10 = fork(subtract, x4, x9)\n    x11 = fork(shoot, x4, x10)\n    x12 = mapply(x11, x2)\n    x13 = fill(I, x1, x12)\n    x14 = mapply(delta, x2)\n    O = fill(x13, ZERO, x14)\n    return O"], [1.0, "def solve_c764df95(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_c356f8f6(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_fe49977b(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_1988e87c(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x8)\n    x11 = palette(x9)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x8, x13)\n    x15 = ofcolor(x10, x13)\n    x16 = difference(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [1.0, "def solve_4be9b6dc(I):\n    x1 = halve(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [1.0, "def solve_c27661f2(I):\n    x1 =287257462\n    x2 = frontiers(I)\n    x3 = merge(x2)\n    x4 = difference(x1, x3)\n    x5 = mostcolor(x4)\n    x6 = objects(I, T, F, F)\n    x7 = color(x3)\n    x8 = matcher(color, x7)\n    x9 = matcher(color, x5)\n    x10 = fork(either, x8, x9)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x6, x11)\n    x13 = merge(x12)\n    x14 = palette(x13)\n    x15 = lbind(toobject, x13)\n    x16 = lbind(colorcount, x13)\n    x17 = chain(x16, x15, dneighbors)\n    x18 = matcher(x17, TWO)\n    x19 = rbind(adjacent, x2)\n    x20 = rbind(adjacent, x11)\n    x21 = fork(both, x18, x20)\n    x22 = compose(x21, initset)\n    x23 = sfilter(x12, x18)\n    x24 = sfilter(x12, x22)\n    x25 = product(x23, x24)\n    x26 = fork(combine, vfrontier, hfrontier)\n    x27 = mapply(x26, x25)\n    x28 = mostcolor(I)\n    x29 = fill(I, x28, x27)\n    O = fill(x29, x8, x27)\n    return O"], [1.0, "def solve_64dd5476(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_9bbe6b7f(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_81671bb3(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_594fcdbe(I):\n    x1 = frontiers(I)\n    x2 = palette(I)\n    x3 = compose(maximum, shape)\n    x4 = lbind(apply, x3)\n    x5 = lbind(shift, x1)\n    x6 = lbind(ofcolor, I)\n    x7 = compose(x4, x5)\n    x8 = subgrid(x2, I)\n    x9 = objects(x8, T, F, T)\n    x10 = colorfilter(x9, TWO)\n    x11 = apply(x7, x10)\n    x12 = mapply(x11, x11)\n    x13 = mapply(x5, x12)\n    x14 = replace(x13, ONE, SIX)\n    O = fill(x14, THREE, x12)\n    return O"], [1.0, "def solve_86422e76(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [1.0, "def solve_08232941(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [1.0, "def solve_f4e94f93(I):\n    x1 = astuple(SIX, THREE)\n    x2 = astuple(FOUR, FOUR)\n    x3 = astuple(ONE, x2)\n    x4 = initset(x3)\n    x5 = insert(x14, x4)\n    x6 = insert(x1, x5)\n    x7 = apply(x6, x6)\n    x8 = crop(I, ORIGIN, THREE_BY_THREE)\n    O = asindices(x8)\n    return O"], [1.0, "def solve_d48bfcea(I):\n    x1 = first(I)\n    x2 = last(I)\n    x3 = equality(x1, x2)\n    x4 = crop(I, ORIGIN, THREE_BY_THREE)\n    x5 = branch(x3, x2, x4)\n    x6 = vconcat(I, x5)\n    O = replace(x6, ONE, TWO)\n    return O"], [1.0, "def solve_98cd6245(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = fork(multiply, height, width)\n    x4 = x3(I)\n    x5 = astuple(ONE, x4)\n    x6 = mostcolor(I)\n    x7 = canvas(x6, x5)\n    x8 = backdrop(x7)\n    x9 = lbind(hsplit, x8)\n    x10 = matcher(x9, x4)\n    x11 = fork(combine, vfrontier, hfrontier)\n    x12 = compose(x11, x10)\n    x13 = rbind(ofcolor, ZERO)\n    x14 = rbind(mapply, x12)\n    x15 = lbind(lbind, shift)\n    x16 = chain(x13, x14, x15)\n    x17 = apply(x16, x19)\n    O = paint(x7, x17)\n    return O"], [1.0, "def solve_30ed39b2(I):\n    x1 = first(I)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(ONE, x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = objects(x6, T, F, F)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x5(x10)\n    return O"], [1.0, "def solve_fc0118f4(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    x5 = palette(x4)\n    x6 = intersection(x5, x2)\n    x7 = lbind(colorcount, x4)\n    x8 = argmax(x6, x7)\n    x9 = remove(x8, x6)\n    x10 = rbind(contained, x9)\n    x11 = compose(x10, color)\n    x12 = sfilter(x3, x11)\n    x13 = lbind(colorcount, x4)\n    x14 = argmax(x12, x13)\n    x15 = objects(x12, T, F, F)\n    x16 = colorfilter(x15, x14)\n    x17 = difference(x15, x16)\n    x18 = apply(leftmost, x17)\n    x19 = size(x18)\n    x20 = apply(uppermost, x17)\n    x21 = size(x20)\n    x22 = greater(x19, x21)\n    x23 = rbind(adjacent, x28)\n    x24 = rbind(adjacent, x22)\n    x25 = chain(x23, x24, last)\n    x26 = compose(x22, first)\n    x27 = fork(both, x25, x26)\n    x28 = sfilter(x18, x27)\n    x29 = compose(toindices, first)\n    x30 = lbind(mapply, x29)\n    x31 = chain(x30, x29, first)\n    x32 = fork(recolor, x31, x30)\n    x33 = mapply(x32, x18)\n    x34 = paint(x1, x33)\n    O = x38(x34)\n    return O"], [1.0, "def solve_5d582e24(I):\n    x1 = objects(I, T, F, T)\n    x2 = palette(I)\n    x3 = lbind(sfilter, x1)\n    x4 = rbind(compose, palette)\n    x5 = lbind(lbind, contained)\n    x6 = chain(x3, x4, x5)\n    x7 = compose(size, x6)\n    x8 = argmax(x2, x7)\n    x9 = rbind(colorcount, x8)\n    x10 = valmax(x2, x9)\n    x11 = matcher(x9, x10)\n    x12 = sfilter(x1, x11)\n    x13 = merge(x12)\n    x14 = palette(x13)\n    x15 = lbind(colorcount, x13)\n    x16 = argmin(x14, x15)\n    x17 = rbind(colorcount, x16)\n    x18 = argmax(x12, x17)\n    x19 = apply(ulcorner, x12)\n    x20 = lbind(shift, x18)\n    x21 = mapply(x20, x19)\n    x22 = paint(I, x21)\n    O = rot90(x22)\n    return O"], [1.0, "def solve_1ffb18e1(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_e9dc5f5d(I):\n    x1 = astuple(ONE, THREE)\n    x2 = size(I)\n    x3 = decrement(x2)\n    x4 = astuple(x3, ONE)\n    x5 = canvas(ZERO, x4)\n    x6 = tojvec(x3)\n    x7 = rbind(shoot, x6)\n    x8 = crement(x2)\n    x9 = lefthalf(x8)\n    x10 = insert(x7, x9)\n    x11 = width(I)\n    x12 = shoot(x4, DOWN)\n    x13 =tojvec(x12)\n    x14 = rbind(shoot, x13)\n    x15 = creine(x14)\n    x16 = insert(x7, x15)\n    x17 = mapply(x7, x11)\n    x18 = combine(x10, x17)\n    x19 = fill(x5, ZERO, x18)\n    O = replace(x19, ZERO, ONE)\n    return O"], [1.0, "def solve_5d37e618(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_4618d3f2(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_396f6c7c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_5e276d71(I):\n    x1 = rot35(I)\n    x2 = rbind(shoot, UP)\n    x3 = compose(x2, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    O = paint(x1, x5)\n    return O"], [1.0, "def solve_3ad9e0a5(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_43d700f2(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [1.0, "def solve_4a12020f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = rbind(multiply, THREE)\n    x8 = apply(x7, x6)\n    O = rot180(x6)\n    return O"], [1.0, "def solve_7dd18b34(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_fe998a9f(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_268ab6ab(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x4)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x6)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x4)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x4)\n    x26 = x22(x6)\n    x27 = x25(x2)\n    x28 = paint(x18, x27)\n    x29 = paint(x28, x26)\n    x30 = paint(x29, x25)\n    O = paint(x30, x24)\n    return O"], [1.0, "def solve_df958280(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_3d08137f(I):\n    x1 =50005\n    x2 = fgpartition(I)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = difference(x1, x4)\n    x6 = objects(I, T, F, T)\n    x7 = colorfilter(x6, ZERO)\n    x8 = rbind(shoot, DOWN)\n    x9 = mapply(x8, x7)\n    x10 = double(TEN)\n    x11 = rbind(greater, x10)\n    x12 = compose(x11, size)\n    x13 = mapply(x12, x9)\n    x14 = fill(I, ZERO, x13)\n    x15 = replace(x14, ZERO, EIGHT)\n    O = fill(x15, dmirror, x15)\n    return O"], [1.0, "def solve_16d90b02(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_0d70e1aa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_a1b1b80a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = connect(x3, x4)\n    x8 = connect(x3, x5)\n    x9 = combine(x7, x8)\n    O = leastcolor(x9)\n    return O"], [1.0, "def solve_84167e7e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_b177332f(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_d0f48e69(I):\n    x1 = rbind(shoot, UNITY)\n    x2 = compose(x1, center)\n    x3 = fork(recolor, color, x2)\n    x4 = mapply(x3, x1)\n    x5 = objects(I, T, F, T)\n    x6 = rbind(colorcount, SIX)\n    x7 = valmax(x5, x6)\n    x8 = matcher(x6, x7)\n    x9 = sfilter(x8, x8)\n    x10 = merge(x9)\n    x11 = cover(I, x10)\n    x12 = rbind(toobject, I)\n    x13 = chain(delta, x12, delta)\n    x14 = mapply(x13, x9)\n    O = paint(x11, x14)\n    return O"], [1.0, "def solve_1e51567c(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_11dc1aab(I):\n    x1 = ofcolor(I, ONE)\n    x2 = lbind(rbind, shoot)\n    x3 = lbind(mapply, x2)\n    x4 = rbind(shoot, UP)\n    x5 = rbind(shoot, DOWN)\n    x6 = fork(combine, x3, x5)\n    x7 = fork(intersection, x1, x6)\n    x8 = size(x1)\n    x9 = decrement(x8)\n    x10 = index(I, x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, LEFT, RIGHT)\n    x13 = compose(size, x12)\n    x14 = decrement(x13)\n    x15 = index(I, x14)\n    x16 = equality(x15, ZERO)\n    x17 = branch(x16,leftmost, uppermost)\n    x18 = x17(x14)\n    x19 = shift(x18, UNITY)\n    x20 = x17(x19)\n    x21 = first(x20)\n    x22 = last(x21)\n    x23 = x17(x22)\n    x24 = color(x23)\n    x25 = branch(x11, RIGHT, LEFT)\n    x26 = x25(x20)\n    x27 = initset(x26)\n    x28 = insert(x25, x27)\n    x29 = insert(x24, x28)\n    x30 = insert(x22, x29)\n    x31 =recbind(greater, x30)\n    x32 = compose(x31, ulcorner)\n    x33 = sfilter(x30, x32)\n    x34 = merge(x33)\n    x35 = cover(I, x34)\n    x36 = subgrid(x35, x35)\n    O = paint(x36, x33)\n    return O"], [1.0, "def solve_299ba4db(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = EIGHT(x4)\n    return O"], [1.0, "def solve_af3078d2(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_4dd02a86(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_d77aeb5b(I):\n    x1 = dmirror(I)\n    x2 = equality(x1, I)\n    x3 = compose(dedupe, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = last(x6)\n    x8 = first(x6)\n    x9 = last(x6)\n    x10 = switch(x7, x8, x9)\n    x11 = forward(x10)\n    x12 = replace(x11, ONE, x6)\n    x13 = ofcolor(x12, ONE)\n    x14 = combine(x13, x7)\n    x15 = fill(x12,428, x14)\n    x16 = ofcolor(x15, ONE)\n    x17 = mapply(neighbors, x16)\n    x18 = difference(x17, x15)\n    O = fill(x15, EIGHT, x18)\n    return O"], [1.0, "def solve_bfe83657(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_d799a856(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(merge, x3)\n    x5 = merge(x4)\n    x6 = toindices(x5)\n    x7 = rbind(shoot, UP_RIGHT)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    x10 = fill(I, EIGHT, x9)\n    x11 = hmirror(x10)\n    x12 = index(x11, ORIGIN)\n    x13 = shoot(ORIGIN, UNITY)\n    x14 = fill(x10, DOWN, x13)\n    x15 = indexcolors(x11)\n    x16 = apply(Example, x15)\n    x17 = remove(x16, x15)\n    x18 = lbind(mapply, x7)\n    x19 = chain(x18, positive, size)\n    x20 = branch(x17, x19, x15)\n    O = x19(x20)\n    return O"], [1.0, "def solve_b292fa38(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = initset(x1)\n    x5 = chain(numcolors, lefthalf, tophalf)\n    x6 = insert(x2, x4)\n    x7 = insert(x3, x6)\n    x8 = insert(x7, x5)\n    x9 = argmax(x8, x5)\n    x10 = cover(x1, x9)\n    O = paint(x10, x4)\n    return O"], [1.0, "def solve_f662032c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_860b98fc(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(greater, size, dedupe)\n    x3 = equality(x1, TWO)\n    x4 = branch(x3, height, width)\n    x5 = x4(I)\n    x6 = equality(ONE, x5)\n    x7 = branch(x6, vsplit, hsplit)\n    x8 = x7(I, TWO)\n    x9 = order(x8, numcolors)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = objects(x11, F, F, T)\n    x13 = merge(x12)\n    x14 = mostcolor(x13)\n    x15 = matcher(first, x14)\n    x16 = compose(flip, x15)\n    x17 = rbind(sfilter, x16)\n    x18 = mostcolor(x10)\n    x19 = lbind(recolor, x18)\n    x20 = rbind(sfilter, x15)\n    x21 = compose(toindices, x20)\n    x22 = chain(x19, x21, normalize)\n    x23 = objects(x11, T, F, T)\n    x24 = colorfilter(x23, x18)\n    x25 = rbind(bordering, x10)\n    x26 = compose(flip, x25)\n    x27 = mfilter(x24, x26)\n    x28 = paint(x11, x27)\n    x29 = replace(x28, x18, x137)\n    x30 = x22(x29)\n    x31 = x22(x30)\n    x32 = flip(x6)\n    x33 = branch(x32, invert, outbox)\n    x34 = branch(x32, subgrid, x33)\n    x35 = apply(x34, x32)\n    O = x17(x35)\n    return O"], [1.0, "def solve_0784a25f(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = compose(x2, x1)\n    x4 = fork(intersection, x1, x3)\n    x5 = compose(size, x4)\n    x6 = palette(I)\n    x7 = matcher(x5, ZERO)\n    x8 = sfilter(x6, x7)\n    x9 = totuple(x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = mapply(neighbors, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = ofcolor(I, x11)\n    x17 = mapply(neighbors, x16)\n    x18 = toobject(x17, I)\n    x19 = mostcolor(x18)\n    x20 = rbind(shoot, UNITY)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = fork(combine, x20, x21)\n    x23 = rbind(shoot, UP_RIGHT)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = fork(combine, x23, x24)\n    x26 = fork(combine, x22, x25)\n    x27 = ofcolor(I, x11)\n    x28 = ofcolor(I, x10)\n    x29 = combine(x27, x28)\n    x30 = mapply(x26, x29)\n    x31 = ofcolor(I, x15)\n    x32 = intersection(x31, x30)\n    x33 = ofcolor(I, x19)\n    x34 = intersection(x33, x30)\n    x35 = fill(I, x10, x32)\n    O = fill(x35, x11, x34)\n    return O"], [1.0, "def solve_7a49e797(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_1f231c1c(I):\n    x1 = objects(I, T, F, T)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = lbind(sfilter, x3)\n    x5 = lbind(matcher, identity)\n    x6 = chain(size, x4, x5)\n    x7 = matcher(x6, ONE)\n    x8 = sfilter(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmax(x8, x9)\n    x11 = matcher(color, x10)\n    x12 = extract(x1, x11)\n    O = subgrid(x12, I)\n    return O"], [1.0, "def solve_07cfb384(I):\n    x1 = asobject(I)\n    x2 = lbind(shift, x1)\n    x3 = compose(x2, decrement)\n    x4 = mapply(x3, x1)\n    O = paint(I, x4)\n    return O"], [1.0, "def solve_90f29ed4(I):\n    x1 =41388428\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = solve(doubleneighbors, x3)\n    x5 = astuple(ONE, NINE)\n    x6 = canvas(ZERO, x5)\n    x7 = fill(x6, ONE, x4)\n    x8 = hsplit(x7, THREE)\n    O = merge(x8)\n    return O"], [1.0, "def solve_612c7ac5(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_09dc8890(I):\n    x1 = hconcat(I, I)\n    x2 = vconcat(x1, x1)\n    x3 = asindices(x2)\n    x4 = mostcolor(I)\n    x5 = ofcolor(x2, x4)\n    x6 = difference(x3, x5)\n    x7 = mapply(ineighbors, x6)\n    O = underfill(x2, EIGHT, x7)\n    return O"], [1.0, "def solve_59af1e5e(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_6d19cad6(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_a9ade526(I):\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, x1)\n    x3 = lbind(toobject, I)\n    x4 = chain(x2, x3, ZERO)\n    x5 = fork(both, x4, x5)\n    x6 = compose(5, x5)\n    x7 = fork(hmatching, x6, identity)\n    x8 = compose(NEG_ONE, x7)\n    x9 = lbind(apply, x8)\n    x10 = chain(even, x9, leastcolor)\n    x11 = lbind(sfilter, x1)\n    x12 = compose(dmirror, x11)\n    x13 = lbind(lbind, shift)\n    x14 = rbind(compose, x12)\n    x15 = lbind(lbind, occurrences)\n    x16 = chain(x13, x14, x15)\n    x17 = rbind(compose, x10)\n    x18 = lbind(lbind, occurrences)\n    x19 = chain(x17, x18, xin)\n    x20 = rbind(mapply, x10)\n    x21 = compose(x20, x7)\n    x22 = fork(compose, x21, x7)\n    x23 = pair(x15, x17)\n    x24 = mapply(x22, x23)\n    O = underfill(I, ONE, x24)\n    return O"], [1.0, "def solve_0acc32c5(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_86cf3b27(I):\n    x1 = asobject(I)\n    x2 = hperiod(x1)\n    x3 = height(x1)\n    x4 = lbind(multiply, x3)\n    x5 = height(I)\n    x6 = subtract(x3, x5)\n    x7 = rot90(I)\n    x8 = rot180(I)\n    x9 = astuple(x6, x7)\n    x10 = astuple(x8, x9)\n    x11 = papply(shift, x7, x10)\n    x12 = apply(hmirror, x11)\n    x13 = mapply(vmirror, x12)\n    x14 = astuple(x6, x13)\n    x15 = canvas(x4, x14)\n    x16 = paint(x15, x13)\n    O = rot270(x16)\n    return O"], [1.0, "def solve_244c4426(I):\n    x1 = lbind(greater, TWO)\n    x2 = compose(x1, size)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(merge, x3, identity)\n    x5 = apply(x4, I)\n    x6 = chain(identity, merge, hmirror)\n    x7 = apply(x6, x5)\n    x8 = merge(x7)\n    x9 = fill(I, FOUR, x8)\n    x10 = compose(hmirror, vmirror)\n    x11 = fork(combine, x10, x9)\n    x12 = apply(x11, x5)\n    O = fill(x9, TWO, x12)\n    return O"], [1.0, "def solve_1e92da8f(I):\n    x1 = hmirror(I)\n    x2 = papply(pair, x1, I)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    O = apply(x2, x6)\n    return O"], [1.0, "def solve_2ca75bd8(I):\n    x1 = ofcolor(I, ONE)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = ofcolor(I, x4)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = mfilter(x5, x7)\n    x9 = fill(I, TWO, x8)\n    x10 = ofcolor(I, x4)\n    O = fill(x9, FOUR, x10)\n    return O"], [1.0, "def solve_c5e07062(I):\n    x1 = astuple( SEVEN, FIVE)\n    x2 = canvas(ZERO, x1)\n    x3 = tojvec(SIX)\n    x4 = index(I, x3)\n    x5 = equality(x4, FOUR)\n    x6 = branch(x5, lefthalf, tophalf)\n    x7 = branch(x5, righthalf, bottomhalf)\n    x8 = x4(I)\n    x9 = x7(I)\n    x10 = shape(x8)\n    x11 = canvas(x8, x10)\n    x12 = intersection(x9, x11)\n    O = fill(x11, TWO, x12)\n    return O"], [1.0, "def solve_d8171682(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_0960938f(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x11, x16)\n    x20 = ofcolor(x18, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, SIX, x21)\n    return O"], [1.0, "def solve_3be0c54b(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_099d4c3d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_8fc3afc9(I):\n    x1 = dmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = objects(x2, F, F, T)\n    x4 = argmin(x3, numcolors)\n    x5 = astuple(ONE, x4)\n    x6 = subgrid(x4, x5)\n    x7 = lefthalf(x6)\n    x8 = righthalf(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [1.0, "def solve_615572ce(I):\n    x1 = command36(I, EIGHT)\n    x2 = d037(x1)\n    x3 = apply(initset, x2)\n    x4 = rbind(rapply, I)\n    x5 = compose(first, x4)\n    x6 = compose(c59eb873, x5)\n    x7 = fork(recolor, x6, identity)\n    x8 = mapply(x7, x3)\n    x9 = palette(I)\n    x10 = remove(ZERO, x9)\n    x11 = other(x10, x8)\n    x12 = ofcolor(I, x11)\n    x13 = argmin(x12, last)\n    x14 = replace(I, x11, ZERO)\n    x15 = ofcolor(x14, x15)\n    x16 = subgrid(x15, x14)\n    x17 = mapply(x16, x16)\n    O = replace(x17, x11, ZERO)\n    return O"], [1.0, "def solve_2a6fb118(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_238d1110(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 = difference(x1, x2)\n    x9 = compose(normalize, toindices)\n    x10 = x9(x6)\n    x11 = x9(x7)\n    x12 = matcher(x9, x10)\n    x13 = matcher(x9, x11)\n    x14 = extract(x8, x12)\n    x15 = extract(x8, x13)\n    x16 = ulcorner(x6)\n    x17 = ulcorner(x7)\n    x18 = ulcorner(x14)\n    x19 = ulcorner(x15)\n    x20 = subtract(x16, x18)\n    x21 = subtract(x17, x19)\n    x22 = move(I, x14, x20)\n    O = move(x22, x15, x21)\n    return O"], [1.0, "def solve_be76cc93(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_b4eb0f69(I):\n    O = upscale(I, TWO)\n    return O"], [1.0, "def solve_dccf82fc(I):\n    x1 = fill(I, FOUR, x2)\n    x2 = astuple(TWO, FOUR)\n    x3 = size(x1)\n    x4 = order(x1, leftmost)\n    x5 = apply(color, x4)\n    x6 = rbind(canvas, x5)\n    x7 = apply(x6, x5)\n    x8 = merge(x7)\n    x9 = dmirror(x8)\n    x10 = subtract(NINE, x3)\n    x11 = astuple(x10, x4)\n    x12 = canvas(ZERO, x11)\n    x13 = hconcat(x9, x12)\n    x14 = hsplit(x13, TWO)\n    x15 = merge(x14)\n    x16 = crop(x15, ORIGIN, x2)\n    x17 = crop(x15, DOWN, x2)\n    x18 = crop(x15, TWO_BY_ZERO, x2)\n    x19 = vmirror(x17)\n    x20 = vconcat(x16, x19)\n    O = vconcat(x20, x18)\n    return O"], [1.0, "def solve_5aa066d6(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_0379e05a(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_650c1a9e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = width(I)\n    x5 = multiply(x4, x4)\n    x6 = intersection(x1, x5)\n    x7 = canvas(x3, x6)\n    x8 = fork(multiply, height, width)\n    x9 = lbind(shift, x2)\n    x10 = compose(x9, x8)\n    x11 = mapply(x10, x6)\n    O = fill(x7, TWO, x11)\n    return O"], [1.0, "def solve_6ba38a39(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_c6f6f14a(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_af881021(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_1271870d(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = compose(x2, x1)\n    x4 = fork(intersection, x1, x3)\n    x5 = compose(size, x4)\n    x6 = palette(I)\n    x7 = matcher(x5, ZERO)\n    x8 = sfilter(x6, x7)\n    x9 = totuple(x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = mapply(neighbors, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = ofcolor(I, x11)\n    x17 = mapply(neighbors, x16)\n    x18 = toobject(x17, I)\n    x19 = mostcolor(x18)\n    x20 = rbind(shoot, UNITY)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = fork(combine, x20, x21)\n    x23 = rbind(shoot, UP_RIGHT)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = fork(combine, x23, x24)\n    x26 = fork(combine, x22, x25)\n    x27 = ofcolor(I, x11)\n    x28 = ofcolor(I, x10)\n    x29 = combine(x27, x28)\n    x30 = mapply(x26, x29)\n    x31 = ofcolor(I, x15)\n    x32 = intersection(x31, x30)\n    x33 = ofcolor(I, x19)\n    x34 = intersection(x33, x30)\n    x35 = fill(I, x10, x32)\n    O = fill(x35, x11, x34)\n    return O"], [1.0, "def solve_3def0451(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_4ced8a9e(I):\n    x1 = matcher(identity, ZERO)\n    x2 = branch(x1, ONE, SEVEN)\n    O = x2(I)\n    return O"], [1.0, "def solve_c5b26daf(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = subgrid(x2, I)\n    x3 = shape(x2)\n    x4 = halve(x3)\n    x5 = rbind(multiply, x4)\n    x6 = rbind(divide, x3)\n    x7 = compose(x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = sfilter(x1, x8)\n    x10 = compose(increment, minimum)\n    x11 = chain(decrement,arymost, x10)\n    x12 = compose(x11, last)\n    x13 = fork(connect, x12, x5)\n    x14 = compose(last, first)\n    x15 = compose(last, x14)\n    x16 = fork(equality, x13, x15)\n    x17 = mfilter(x9, x16)\n    O = fill(x6, EIGHT, x17)\n    return O"], [1.0, "def solve_fe512e1d(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_7ec6cc2e(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_9d7960c4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_aa417b1f(I):\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = lbind(power, outbox)\n    x8 = chain(x7, halve, width)\n    x9 = initset(x8)\n    x10 = lbind(rapply, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = compose(backdrop, x12)\n    x14 = fork(difference, x13, toindices)\n    x15 = mapply(x14, x1)\n    x16 = mostcolor(I)\n    x17 = ofcolor(I, x16)\n    x18 = intersection(x15, x17)\n    O = fill(x6, THREE, x18)\n    return O"], [1.0, "def solve_dc59fb5e(I):\n    O = upscale(I, THREE)\n    return O"], [1.0, "def solve_e014b216(I):\n    x1 = ONE(I)\n    x2 = canvas(ZERO, THREE_BY_THREE)\n    x3 = asobject(x2)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, SIX, x6)\n    return O"], [1.0, "def solve_faa0e83c(I):\n    x1 = palette(I)\n    x2 = contained(ONE, x1)\n    x3 = branch(x2, ZERO, EIGHT)\n    x4 = canvas(x3, UNITY)\n    x5 = connect(ORIGIN, UNITY)\n    x6 = recolor(ONE, x5)\n    O = x3(x4)\n    return O"], [1.0, "def solve_b4b2f7d9(I):\n    x1 = astuple(SIX, FIVE)\n    x2 = canvas(ZERO, x1)\n    x3 = paint(x2, x2)\n    O = replace(x3, ONE, TWO)\n    return O"], [1.0, "def solve_6aba0774(I):\n    x1 = fgpartition(I)\n    x2 = valmax(x1, size)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, x2, x2)\n    x5 = shift(x4, UNITY)\n    x6 = merge(x1)\n    x7 = other(x1, x6)\n    x8 = equality(x2, FOUR)\n    x9 = shift(x8, UP_RIGHT)\n    x10 = paint(I, x9)\n    x11 = branch(x3, x2, x9)\n    x12 = cover(x10, x11)\n    x13 = branch(x8, x2, x9)\n    x14 = multiply(TEN, TEN)\n    x15 = branch(x41, x13, x14)\n    x16 = fork(combine, vfrontier, hfrontier)\n    x17 = x16(x15)\n    O = underfill(x9, x7, x17)\n    return O"], [1.0, "def solve_839039cf(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_efee02e0(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_c3f94ca3(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = cmirror(x4)\n    x6 = papply(pair, x4, x5)\n    x7 = apply(x3, x6)\n    x8 = vmirror(x7)\n    x9 = papply(pair, x7, x8)\n    x10 = apply(x3, x9)\n    x11 = hmirror(x10)\n    x12 = papply(pair, x11, x10)\n    x13 = apply(x3, x12)\n    x14 = vmirror(x13)\n    x15 = papply(pair, x13, x14)\n    x16 = apply(x3, x15)\n    x17 = hmirror(x16)\n    x18 = papply(pair, x16, x17)\n    x19 = apply(x3, x18)\n    x20 = vmirror(x19)\n    x21 = papply(pair, x19, x20)\n    x22 = apply(x3, x21)\n    x23 = vmirror(x22)\n    x24 = papply(pair, x21, x23)\n    x25 = apply(x3, x24)\n    x26 = shoot(ORIGIN, UNITY)\n    x27 = mapply(x26, x25)\n    O = fill(x1, ZERO, x27)\n    return O"], [1.0, "def solve_a15c64b7(I):\n    x1 = lbind(fork, subtract)\n    x2 = lbind(chain, ZERO)\n    x3 = lbind(x2, x1)\n    x4 = lbind(rbind, add)\n    x5 = chain(x4, x3, numcolors)\n    x6 = lbind(chain, x5)\n    x7 = rbind(x6, toindices)\n    x8 = lbind(rbind, extract)\n    x9 = compose(last, last)\n    x10 = chain(x8, x7, x9)\n    x11 = compose(first, last)\n    x12 = lbind(fork, greater)\n    x13 = compose(x12, x11)\n    x14 = lbind(fork, astuple)\n    x15 = compose(x14, x13)\n    x16 = rbind(sfilter, x15)\n    x17 = compose(x16, ulcorner)\n    x18 = compose(x16, urcorner)\n    x19 = compose(x16, shoot)\n    x20 = chain(x17, x18, x19)\n    x21 = compose(x16, llcorner)\n    x22 = compose(x16, lrcorner)\n    x23 = chain(x17, x21, x22)\n    x24 = rbind(mapply, x3)\n    x25 = chain(x17, x43, x24)\n    x26 = compose(x25, x23)\n    x27 = fork(recolor, x26, x20)\n    x28 = mapply(x27, x1)\n    O = paint(I, x28)\n    return O"], [1.0, "def solve_2d18b4dd(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_2d1f4f3c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_6a833f01(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_a6bbe9db(I):\n    x1 = rot180(I)\n    x2 = matcher(identity, ZERO)\n    x3 = rbind(sfilter, x2)\n    x4 = compose(size, x3)\n    x5 = apply(x4, x1)\n    x6 = merge(x5)\n    x7 = lbind(subtract, x6)\n    x8 = chain(increment, x7, size)\n    x9 = apply(x8, x1)\n    x10 = ZERO(x6)\n    x11 = lbind(subtract, x10)\n    x12 = chain(x11, x8, size)\n    x13 = rbind(sfilter, x12)\n    x14 = rbind(subgrid, I)\n    x15 = chain(asobject, x13, x14)\n    x16 = apply(x15, x9)\n    x17 = ZERO(x10)\n    x18 = lbind(subtract, x17)\n    x19 = chain(invert, x18, shift)\n    x20 = fork(shift, identity, x19)\n    x21 = mapply(x20, x16)\n    O = paint(x1, x21)\n    return O"], [1.0, "def solve_f6c4f2f2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = shape(I)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(I, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmin(x11, numcolors)\n    x13 = normalize(x12)\n    x14 = toindices(x13)\n    x15 = increment(x4)\n    x16 = increment(x15)\n    x17 = increment(x5)\n    x18 = increment(x17)\n    x19 = astuple(x16, x18)\n    x20 = lbind(shift, x14)\n    x21 = rbind(multiply, x19)\n    x22 = chain(x20, x21, last)\n    x23 = fork(recolor, first, x22)\n    x24 = normalize(x12)\n    x25 = mapply(x23, x24)\n    O = paint(x9, x25)\n    return O"], [1.0, "def solve_6ee84d4f(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_b09a1bcf(I):\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, x1)\n    x3 = compose(maximum, x2)\n    x4 = lbind(apply, x3)\n    x5 = chain(positive, size, x4)\n    x6 = lbind(sfilter, x3)\n    x7 = compose(x6, x3)\n    x8 = rbind(compose, x3)\n    x9 = lbind(lbind, contained)\n    x10 = chain(x8, x9, x7)\n    x11 = apply(x10, x5)\n    x12 = sfilter(x11, x7)\n    x13 = fork(hmatching, identity, vmirror)\n    x14 = mfilter(x12, x13)\n    x15 = mostcolor(I)\n    x16 = paint(I, x15)\n    x17 = objects(x16, T, F, T)\n    x18 = compose(backdrop, inbox)\n    x19 = apply(x18, x17)\n    x20 = mfilter(x19, x5)\n    O = fill(x16, EIGHT, x20)\n    return O"], [1.0, "def solve_38c09ef6(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = merge(x5)\n    x7 = palette(x6)\n    x8 = lbind(mfilter, x5)\n    x9 = lbind(matcher, x4)\n    x10 = compose(x8, x9)\n    x11 = fork(sfilter, identity, x10)\n    x12 = apply(x11, x7)\n    x13 = merge(x12)\n    x14 = lbind(colorcount, I)\n    x15 = argmin(x12, x14)\n    x16 = ofcolor(I, x15)\n    x17 = recolor(x15, x16)\n    x18 = compose(initset, x17)\n    x19 = fork(min, identity, x18)\n    x20 = ofcolor(I, x15)\n    x21 = rbind(shoot, UNITY)\n    x22 = DOWN(x21)\n    x23 = leftmost(x20)\n    x24 = height(I)\n    x25 = increment(x24)\n    x26 = interval(ZERO, x25, ONE)\n    x27 = apply(double, x26)\n    x28 = mapply(increment, x27)\n    x29 = apply(tojvec, x28)\n    x30 = prapply(shift, x27, x29)\n    x31 = mapply(x19, x30)\n    x32 = paint(I, x31)\n    x33 = biind(canvas, NEG_ONE)\n    x34 = rbind(apply, x33)\n    x35 = lbind(recolor, x15)\n    x36 = chain(x34, x35, x29)\n    x37 = mapply(x36, x34)\n    O = underpaint(x32, x37)\n    return O"], [1.0, "def solve_d4ef95a8(I):\n    x1 = ofcolor(I, TWO)\n    x2 = portrait(x1)\n    x3 = branch(x2, vsplit, hsplit)\n    x4 = x3(I, TWO)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = vmirror(x5)\n    x8 = vconcat(x7, x7)\n    x9 = hmirror(x8)\n    O = vconcat(x9, x8)\n    return O"], [1.0, "def solve_f46e8227(I):\n    x1 = trim(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(x2)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(x2)\n    x6 = lefthalf(x5)\n    x7 = bottomhalf(x2)\n    x8 = righthalf(x7)\n    x9 = palette(x4)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x4)\n    x13 = palette(x4)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x4)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x5)\n    x24 = x22(x6)\n    x25 = x22(x4)\n    x26 = x22(x6)\n    x27 = lefthalf(x18)\n    x28 = lefthalf(x27)\n    x29 = righthalf(x28)\n    x30 = righthalf(x29)\n    x31 = palette(x23)\n    x32 = palette(x24)\n    x33 = intersection(x31, x32)\n    x34 = first(x33)\n    x35 = shape(x4)\n    x36 = canvas(x35, x32)\n    x37 = intersection(x33, x32)\n    x38 = paint(x36, x37)\n    O = x22(x38)\n    return O"], [1.0, "def solve_4f29a2df(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_e0ad5289(I):\n    x1 = fork(equality, identity, dmirror)\n    x2 = compose(flip, x1)\n    O = extract(x1, x2)\n    return O"], [1.0, "def solve_fc18abc6(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = Fgpartition(I)\n    x4 = merge(x3)\n    x5 = cover(I, x4)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = leastcolor(I)\n    O = fill(x5, x7, x6)\n    return O"], [1.0, "def solve_841ba802(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_4cba1dbd(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_ed95fbb4(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_68ea083f(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = multiply(x4, x4)\n    x6 = canvas(x3, x5)\n    x7 = asobject(I)\n    x8 = shift(x7, UNITY)\n    O = paint(x6, x8)\n    return O"], [1.0, "def solve_ddc996f8(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.1, "def solve_8b1069cd(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 =1000(I)\n    x2 =5000(x1, x4)\n    x3 = compose(positive, size)\n    x4 = rbind(sfilter, x3)\n    x5 = chain(x2, x4, frontiers)\n    x6 = merge(x2)\n    x7 = contained(x6, x5)\n    x8 = height(x7)\n    x9 = width(x7)\n    x10 = rbind(multiply, x8)\n    x11 = power(x10, TWO)\n    x12 = compose(rot90, x11)\n    x13 = power(x12, FOUR)\n    x14 = x15(I)\n    x15 = x16(I)\n    x16 = matcher(first, x14)\n    x17 = compose(flip, x16)\n    x18 = sfilter(x15, x17)\n    x19 = lbind(ofcolor, x14)\n    x20 = compose(x19, asobject)\n    x21 = fork(subtract, x20, identity)\n    x22 = compose(first, x21)\n    x23 = fork(mapply, x22, identity)\n    x24 = chain(x19, x23, x14)\n    x25 =594color(x18, NEG_ONE)\n    x26 = lone(x25)\n    x27 = asindices(x18)\n    x28 = matcher(first, NEG_ONE)\n    x29 = rbind(sfilter, x28)\n    x30 = lbind(shift, x27)\n    x31 = chain(x29, x30, x29)\n    x32 = mapply(x31, x73)\n    x33 = replace(x16, NEG_ONE, ZERO)\n    x34 = dmirror(x32)\n    x35 = combine(x33, x34)\n    x36 = flip(x35)\n    x37 = asindices(x16)\n    x38 = toobject(x37, x16)\n    x39 = multiply(x38, UNITY)\n    x40 = rbind"], [1.1, "def solve_f112163f(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_2952bcf0(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = rot90(I)\n    x2 = apply(mostcommon, I)\n    x3 = hmirror(x1)\n    x4 =oe(x3, I)\n    x5 = merge(x4)\n    x6 = palette(x5)\n    x7 =5031982586\n    8713671684\n    3955068690\n    0764217343\n    5380956567\n    \"\"\"\n    x1 = asindices(x1)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = ofcolor(x3, x4)\n    x6 = vmirror(x5)\n    x7 = hmirror(x5)\n    x8 = astuple(x6, x7)\n    x9 = combine(x leftmost, x8)\n    x10 = hmirror(x7)\n    x11 = invert(x10)\n    x12 = increment(x11)\n    x13 = order(x9, x12)\n    x14 = difference(x9, x13)\n    x15 = toobject(x14, x13)\n    x16 = apply(increment, x15)\n    x17 = apply(tojvec, x16)\n    x18 = prapply(shift, x17, x9)\n    x19 = mapply(x18, x14)\n    x20 = ofcolor(x19, x4)\n    x21 = lbind(shift, x19)\n    x22 = mapply(x21, x20)\n    x23 = rightmost(x20)\n    x24 = lbind(shift, x20)\n    x25 = mapply(x24, x23)\n    x26 = ulcorner(x20)\n    x27 = lbind(shift, x27)\n    x28 = mapply(x27, x22)\n    x29 = sfilter(x24, x18)\n    x30 = sizefilter(x29, x28)\n    x31 = lbind(shift, x27)\n    x32 ="], [1.1, "def solve_75434d9a(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_a7ea8a26(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = compose(first, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = compose(last, last)\n    x8 = totuple(x2)\n    x9 = apply(x7, x8)\n    x10 = mostcommon(x9)\n    x11 = compose(first, last)\n    x12 = matcher(x11, x6)\n    x13 = sfilter(x2, x12)\n    x14 = compose(last, last)\n    x15 = matcher(x14, x10)\n    x16 = sfilter(x2, x15)\n    x17 = objects(I, F, T, T)\n    x18 = size(x17)\n    x19 = equality(x18, TWO)\n    x20 = mfilter(x17, hline)\n    x21 = mfilter(x17, vline)\n    x22 = branch(x19, x20, x13)\n    x23 = branch(x19, x21, x16)\n    x24 = width(x22)\n    x25 = lbind(multiply, x24)\n    x26 = width(I)\n    x27 = divide(x26, x24)\n    x28 = increment(x27)\n    x29 = interval(ZERO, x28, ONE)\n    x30 = apply(x25, x29)\n    x31 = apply(invert, x30)\n    x32 = combine(x30, x31)\n    x33 = apply(tojvec, x32)\n    x34 = lbind(shift, x22)\n    x35 = mapply(x34, x33)\n    x36 = height(x23)\n    x37 = lbind(multiply, x36)\n    x38 = height(I)\n    x39 = height(x22)\n    x40 = divide(x38, x39)\n    x41 = increment(x40)\n    x42 = interval"], [1.1, "def solve_bb1b5cc0(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = fork(multiply, height, width)\n    x2 = fgpartition(I)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = argmax(x4, x1)\n    x6 = outbox(x5)\n    x7 = corners(x6)\n    x8 = combine(x7, x5)\n    x9 = fill(I, x3, x8)\n    x10 = asobject(x5)\n    x11 = ofcolor(x10, ZERO)\n    x12 = difference(x10, x11)\n    x13 = rbind(contained, x12)\n    x14 = compose(x13, first)\n    x15 = sfilter(x11, x14)\n    x16 = difference(x11, x15)\n    x17 = compose(x13, first)\n    x18 = fork(multiply, x17, x16)\n    x19 = compose(x18, last)\n    x20 = fork(equality, toindices, x19)\n    x21 = fork(equality, toindices, x20)\n    x22 = fork(either, x20, x21)\n    x23 = rbind(sfilter, x22)\n    x24 = compose(x23, trim)\n    x25 = chain(x20, x22, x24)\n    x26 = compose(x25, asobject)\n    x27 = apply(x26, x15)\n    x28 = last(x27)\n    x29 = remove(x28, x27)\n    x30 = color(x28)\n    x31 = combine(x29, x30)\n    x32 =x23(x31)\n    x33 = asobject(x32)\n    x34 = apply(x33, x31)\n    x35 = prapply(shift, x29, x34)\n    x36 = mapply(x35, x43)\n    x37 = paint(x96, x36)\n    x38 = astuple(x31, x33)\n    x39 = x38(x37)\n    x40 = fill"], [1.1, "def solve_649fb1de(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =618\n    \"\"\"\n    x2 = lbind(subtract,    INE)\n    x3 = chain(even, x2, last)\n    x4 = rbind(branch, ZERO)\n    x5 = rbind(x4, x3)\n    x6 = chain(initset, x5, x4)\n    x7 = fork(rapply, x6, identity)\n    x8 = compose(first, x7)\n    x9 = rbind(branch, ONE)\n    x10 = rbind(x9, x8)\n    x11 = chain(initset, x10, x7)\n    x12 = fork(rapply, x11, identity)\n    x13 = compose(first, x12)\n    x14 = extract(x1, x13)\n    x15 = x14(I)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 =666(x16, x17)\n    x19 = merge(x18)\n    x20 = cover(x16, x19)\n    x21 = flip(x18)\n    x22 = branch(x21, x20, x19)\n    x23 = branch(x1, x22, x20)\n    x24 = multiply(xTEN, DOWN)\n    x25 = ulcorner(x28)\n    x26 = add(x25, x24)\n    x27 = power(x22, x26)\n    x28 = add(x25, x23)\n    x29 = shift(x19, x28)\n    x30 = x27(x29)\n    x31 = palette(x30)\n    x32 = lbind(shift, x30)\n    x33 = apply(x32, x31)\n    x34 = mapply(dneighbors, x33)\n    x35 = mapply(ineighbors, x34)\n    x36 = other(x61, x39)\n    x37 = colorfilter(x36, x39)\n    x38 = rbind(adjacent, xMas)\n    x39 = apply(x38, x37)\n"], [1.1, "def solve_1cea9ef6(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = argmin(x1, size)\n    x5 = shoot(x4, NEG_UNITY)\n    x6 = insert(x4, x5)\n    x7 = recolor(x3, x6)\n    x8 = frontiers(I)\n    x9 = sfilter(x8, vline)\n    x10 = size(x9)\n    x11 = positive(x10)\n    x12 = branch(x11, dmirror, identity)\n    x13 = x12(I)\n    x14 = x12(I)\n    x15 = ofcolor(x13, x3)\n    x16 = subgrid(x15, x13)\n    x17 = ZERO(x16)\n    x18 = shift(x15, x17)\n    x19 = ulcorner(x15)\n    x20 = urcorner(x15)\n    x21 = shoot(x19, NEG_UNITY)\n    x22 = shoot(x20,_LEFT)\n    x23 = combine(x21, x22)\n    x24 = shoot(x19, UP_RIGHT)\n    x25 = shoot(x20, DOWN_LEFT)\n    x26 = combine(x24, x25)\n    x27 = combine(x23, x26)\n    x28 = lbind(contained, x27)\n    x29 = chain(flip, x28, last)\n    x30 = cfilter(x11, x29)\n    x31 = branch(x11, height, width)\n    x32 = x31(I)\n    x33 = even(x32)\n    x34 = branch(x33, vline, hline)\n    x35 = x34(I)\n    x36 = astuple(x34, x35)\n    x37 = shift(x15, x36)\n    x38 = combine(x31, x37)\n    x39 = x30(x38)\n    x40 = shift(x19, x39)\n    x41 = combine("], [1.1, "def solve_aa93e0ce(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = positive(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_bd85689d(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_865d8377(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_9139b776(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_9ad6136f(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_0a25e854(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asobject(x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = astuple(x27, x25)\n    x29 = lbind(subtract, x28)\n    x30 = compose(x29, last)\n    x31 =173(x04)\n    x32 = rbind(ofcolor, ZERO)\n    x33 = fork(add, last, first)\n    x34 = chain(x31, x32, x33)\n    x35 = compose(x34, x30)\n    x36 = objects(x32, x26, F, T)\n    x37 = sfilter(x36, x35)\n    x38 = lbind(recolor, ONE)\n    x39 = compose(x38, outbox)\n    x40 = fork(combine, x34"], [1.1, "def solve_19c30321(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 =173(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = frontiers(x3)\n    x5 = sfilter(x4, hline)\n    x6 = size(x5)\n    x7 = increment(x6)\n    x8 = sfilter(x4, vline)\n    x9 = size(x8)\n    x10 = increment(x9)\n    x11 = height(x3)\n    x12 = decrement(x11)\n    x13 = to frontiers(x12)\n    x14 = sfilter(x13, vline)\n    x15 = size(x14)\n    x16 = increment(x15)\n    x17 = width(x3)\n    x18 = decrement(x17)\n    x19 = tophalf(x3)\n    x20 = increment(x19)\n    x21 = rbind(multiply, x20)\n    x22 = chain(tophalf, x21, initset)\n    x23 = fork(insert, dmirror, x22)\n    x24 = fork(insert, cmirror, x23)\n    x25 = fork(insert, hmirror, x24)\n    x26 = compose(x25, x20)\n    x27 = fork(insert, vmirror, x26)\n    x28 = fork(insert, x17, x27)\n    x29 = compose(x28, x21)\n    x30 = fork(insert, width, x29)\n    x31 = rbind(repeat, x3)\n    x32 = chain(toivec, x30, x31)\n    x33 = fork(shift, x23, x32)\n    x34 = canvas(ZERO, x11)\n    x35 = paint(x34, x3)\n    x36 = merge(x8)\n    x37 = cover(x35, x36)\n    x38 = shift(x36, x37)\n    x39 = paint(x34, x38)\n    x40 = shift(x33, x39)\n    x"], [1.1, "def solve_8698b8b8(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, T, T, F)\n    x6 = colorfilter(x5, x4)\n    x7 = fork(add, leftmost, uppermost)\n    x8 = argmin(x6, x7)\n    x9 = lbind(adjacent, x8)\n    x10 = rbind(add, x8)\n    x11 = totuple(x10)\n    x12 = sfilter(x11, x9)\n    x13 = mapply(neighbors, x12)\n    x14 = difference(x1, x12)\n    x15 = mapply(neighbors, x14)\n    x16 = apply(urcorner, x12)\n    x17 = size(x16)\n    x18 = equality(ONE, x17)\n    x19 = mfilter(x18, identity)\n    x20 = branch(x18, identity, dmirror)\n    x21 = x20(I)\n    x22 = fgpartition(x21)\n    x23 = merge(x22)\n    x24 = ONE(x23)\n    x25 =\u5b50(x24, x22)\n    x26 = width(x25)\n    x27 = lefthalf(x25)\n    x28 = tophalf(x27)\n    x29 = righthalf(x28)\n    x30 = palette(x29)\n    x31 = palette(x of)\n    x32 = combine(x30, x31)\n    x33 = intersection(x32, x22)\n    x34 = first(x33)\n    x35 = last(x33)\n    x36 = ofcolor(x26, x34)\n    x37 = ofcolor(x26, x35)\n    x38 = combine(x36, x37)\n    x39 = fill(x21, x34, x38)\n    x40 = ofcolor(x31, x34)\n    x41 = ofcolor(x31,"], [1.1, "def solve_41066c0d(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_621c090c(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = astuple(NINE, NINE)\n    x3 = canvas(ZERO, x2)\n    x4 = astuple(THREE, ORIGIN)\n    x5 = initset(x4)\n    x6 = insert(x3, x5)\n    x7 = merge(x1)\n    x8 = lbind(colorfilter, x6)\n    x9 = compose(first, x8)\n    x10 = compose(SIX, x9)\n    x11 = fork(paint, identity, x10)\n    x12 = x11(x5)\n    x13 = normalize(x12)\n    x14 = dmirror(x13)\n    x15 = increment(NINE)\n    x16 = insert(x14, x15)\n    x17 = lbind(rapply, x16)\n    x18 = compose(first, x17)\n    x19 = fork(paint, identity, x18)\n    x20 = x19(x5)\n    x21 = palette(x20)\n    x22 = lbind(ofcolor, x20)\n    x23 = compose(size, x22)\n    x24 = palette(x20)\n    x25 = contained(ONE, x24)\n    x26 = contained(TWO, x24)\n    x27 = branch(x25, UNITY, TWO_BY_TWO)\n    x28 = branch(x26, RIGHT, x27)\n    x29 = fork(combine, vfrontier, hfrontier)\n    x30 = x29(x28)\n    x31 = ofcolor(x20, TWO)\n    x32 = gravitate(x31, x30)\n    x33 =8(x32)\n    x34 = colorfilter(x1, TWO)\n    x35 = apply(x29, x34)\n    x36 = rbind(ZERO, x35)\n    x37 = apply(x36, x32)\n    x38 = rbind(bordering, x20)\n    x39 = mfilter(x37, x38)\n    x40 = fill"], [1.1, "def solve_05e521b4(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, ONE)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)"], [1.1, "def solve_a910c30d(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = power(c909, DOWN)\n    x5 = fork(equality, identity, x4)\n    x6 =230(x2)\n    x7 = frontiers(I)\n    x8 = sfilter(x7, x5)\n    x9 = merge(x8)\n    x10 = color(x9)\n    x11 = subgrid(x9, I)\n    x12 = frontiers(x11)\n    x13 = merge(x12)\n    x14 = shift(x13, NEG_UNITY)\n    x15 = ofcolor(x11, x10)\n    x16 = ofcolor(x11, x11)\n    x17 = combine(x15, x16)\n    x18 = mapply(x17, x12)\n    x19 = difference(x18, x15)\n    x20 =49mirror(x15)\n    x21 =49mirror(x15)\n    x22 = ofcolor(x11, x10)\n    x23 = leftmost(x22)\n    x24 = ofcolor(x11, x10)\n    x25 = leftmost(x24)\n    x26 = greater(x23, x25)\n    x27 = uppermost(x22)\n    x28 = equality(x27, x28)\n    x29 = hmatching(x28, x11)\n    x30 = branch(x29, identity, vmirror)\n    x31 = x30(x11)\n    x32 = ofcolor(x31, x10)\n    x33 = first(x32)\n    x34 = last(x31)\n    x35 = x33(x40)\n    x36 = ofcolor(x31, x10)\n    x37 =37(x36)\n    x38 = difference(x37, x31)\n    x39 = fill(x31, x10, x38)\n    x40 = ofcolor(x39, x10)\n    x41 = mapply(dneighbors, x40)\n    x"], [1.1, "def solve_2df6e1be(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = lbind(multiply, x11)\n    x13 = width(I)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = connect(x12, x15)\n    x17 = shape(I)\n    x18 = maximum(x17)\n    x19 = lbind(multiply, x18)\n    x20 = toivec(x18)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = toivec(x22)\n    x24 = connect(x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = decrement(x25)\n    x28 = tojvec(x27)\n    x29 = connect(x26, x28)\n    x30 = height(I)\n    x31 = decrement(x30)\n    x32 = toivec(x31)\n    x33 = connect(x29, x32)\n    x34 = width(I)\n    x35 = decrement(x34)\n    x36 = tojvec(x35)\n    x37 = connect(x33, x36)\n    x38 = height(I)\n    x39 = decrement(x38)\n    x40 = toivec(x39)\n    x41 = connect(x38, x40)\n    x42 = width(I)\n    x43 = decrement(x42)\n    x44 = tojvec(x43)\n    x45 = connect(x42, x44)\n    x46 = height(I)"], [1.1, "def solve_e9c2052f(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, lefthalf, tophalf)\n    x7 = branch(x5, righthalf, bottomhalf)\n    x8 = branch(x5, hconcat, vconcat)\n    x9 = x6(I)\n    x10 = x7(I)\n    x11 = index(x9, ORIGIN)\n    x12 = shape(x10)\n    x13 = decrement(x12)\n    x14 = index(x10, x13)\n    x15 = mostcolor(I)\n    x16 = mostcolor(I)\n    x17 = palette(I)\n    x18 = remove(x11, x17)\n    x19 = remove(x14, x18)\n    x20 = remove(x16, x19)\n    x21 = first(x20)\n    x22 = replace(x9, x21, x11)\n    x23 = branch(x5, asobject, x22)\n    x24 = x23(I)\n    x25 = astuple(x71, x19)\n    x26 = canvas(x25, x25)\n    x27 = paint(x26, x24)\n    x28 = objects(x27, T, F, T)\n    x29 = first(x28)\n    x30 = color(x29)\n    x31 = subgrid(x29, x30)\n    x32 = lefthalf(x61)\n    x33 = righthalf(x31)\n    x34 = shape(x33)\n    x35 = decrement(x34)\n    x36 = hmirror(x33)\n    x37 = vconcat(x36, x33)\n    x38 = objects(x37, T, F, T)\n    x39 = first(x38)\n    x40 = replace(x39, x21, x11)\n    O = hmirror(x"], [1.1, "def solve_4ba694f2(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = height(I)\n    x2 = decrement(x1)\n    x3 = tojvec(x2)\n    x4 = connect(ORIGIN, x3)\n    x5 = height(I)\n    x6 = decrement(x5)\n    x7 = toivec(x6)\n    x8 = connect(ORIGIN, x7)\n    x9 = width(I)\n    x10 = decrement(x9)\n    x11 = tojvec(x10)\n    x12 = shape(I)\n    x13 = decrement(x12)\n    x14 = connect(x11, x13)\n    x15 = height(I)\n    x16 = decrement(x15)\n    x17 = toivec(x16)\n    x18 = shape(I)\n    x19 = decrement(x18)\n    x20 = connect(x17, x19)\n    x21 = asindices(I)\n    x22 = box(x21)\n    x23 = toobject(x22, I)\n    x24 = mostcolor(x23)\n    x25 = matcher(color, x24)\n    x26 = compose(flip, x25)\n    x27 = rbind(sfilter, x26)\n    x28 = rbind(sizefilter, ONE)\n    x29 = rbind(objects, F)\n    x30 = rbind(x29, F)\n    x31 = rbind(x30, T)\n    x32 = rbind(subgrid, I)\n    x33 = chain(x27, x31, x32)\n    x34 = chain(size, x28, x33)\n    x35 = astuple(colors, ONE)\n    x36 = astuple(ONE, x22)\n    x37 = astuple(ONE, x23)\n    x38 = astuple(TWO, x34)\n    x39 = initset(x38)\n    x40 = insert(x36, x39)\n    x41 = insert(x47, x40)\n    x42 = pair(x42, x41)\n    x43 ="], [1.1, "def solve_d06cd310(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = double(TEN)\n    x2 = interval(ZERO, x1, ONE)\n    x3 = connect(ORIGIN, DOWN)\n    x4 = connect(ORIGIN, ZERO_BY_TWO)\n    x5 = combine(x3, x4)\n    x6 = astuple(NEG_TWO, TWO)\n    x7 = lbind(multiply, x6)\n    x8 = toivec(NEG_TWO)\n    x9 = apply(x7, x2)\n    x10 = rbind(subtract, TWO_BY_ZERO)\n    x11 = fork(ofcolor, identity, leastcolor)\n    x12 = chain(x10, center, x11)\n    x13 = rbind(mapply, x9)\n    x14 = lbind(lbind, shift)\n    x15 = lbind(shift, x5)\n    x16 = compose(x15, x12)\n    x17 = chain(x13, x14, x16)\n    x18 = lbind(recolor, FIVE)\n    x19 = compose(x18, x17)\n    x20 = fork(paint, identity, x19)\n    x21 = compose(rot180, x20)\n    x22 = fork(ofcolor, x21, leastcolor)\n    x23 = compose(center, x22)\n    x24 = fork(subtract, x23, x12)\n    x25 = fork(shift, x17, x24)\n    x26 = lbind(recolor, FIVE)\n    x27 = rbind(shift, x8)\n    x28 = chain(x26, x27, x25)\n    x29 = fork(paint, x21, x28)\n    x30 = compose(rot180, x29)\n    x31 = rbind(ofcolor, FIVE)\n    x32 = compose(x31, x30)\n    x33 = leastcolor(I)\n    x34 = ofcolor(I, x33)\n    x35 = mostcolor(I)\n    x36 = shape(I)\n    x37 = canvas(x35, x"], [1.1, "def solve_c4bc107a(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_4899322b(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, toindices)\n    x3 = difference(x1, x2)\n    x4 = size(x3)\n    x5 = positive(x4)\n    x6 = branch(x5, lefthalf, tophalf)\n    x7 = branch(x5, righthalf, bottomhalf)\n    x8 = branch(x5, hconcat, vconcat)\n    x9 = x6(I)\n    x10 = x7(I)\n    x11 = index(x9, ORIGIN)\n    x12 = shape(x10)\n    x13 = decrement(x12)\n    x14 = index(x10, x13)\n    x15 = mostcolor(I)\n    x16 = mostcolor(I)\n    x17 = palette(I)\n    x18 = remove(x11, x17)\n    x19 = remove(x14, x18)\n    x20 = remove(x16, x19)\n    x21 = first(x20)\n    x22 = last(x21)\n    x23 = ofcolor(x9, x22)\n    x24 = leftmost(x23)\n    x25 = ofcolor(x10, x22)\n    x26 = leftmost(x25)\n    x27 = greater(x24, x26)\n    x28 = uppermost(x23)\n    x29 = ofcolor(x10, x22)\n    x30 = uppermost(x29)\n    x31 = greater(x28, x30)\n    x32 = leftmost(x23)\n    x33 = interval(x32, x33, ONE)\n    x34 = matcher(first, x11)\n    x35 = matcher(first, x14)\n    x36 = sfilter(x34, x35)\n    x37 = apply(double, x36)\n    x38 = lbind(apply, maximum)\n    x39 = lbind(ofcolor, I)\n    x40 = compose(x38, x39)\n    x41 = rbind(intersection, x24)\n    x42 ="], [1.1, "def solve_8df6b189(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_018f2c78(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = lbind(remove, x1)\n    x3 = compose(first, x2)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = mapply(x3, x4)\n    x6 =23978259\n    7851115737\n    6519315530\n    9830561239\n    5352852971\n    \"\"\"\n    x1 = palette(I)\n    x2 = compose(last, last)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = totuple(x5)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = switch(I, x7, x8)\n    x10 = rot90(x9)\n    x11 = sfilter(x6, x4)\n    x12 = size(x11)\n    x13 = increment(x12)\n    x14 = divide(x13, x3)\n    x15 = width(I)\n    x16 = interval(ZERO, x15, ONE)\n    x17 = apply(tojvec, x16)\n    x18 = height(I)\n    x19 = lbind(shift, xI)\n    x20 = mapply(x19, x16)\n    x21 = astuple(x17, x20)\n    x22 = canvas(ZERO, x21)\n    x23 = asindices(x22)\n    x24 = shape(I)\n    x25 = canvas(ZERO, x24)\n    x26 = lbind(multiply, x24)\n    x27 = apply(x26, x23)\n    x28 = rbind(multiply, x14)\n    x29 = apply(x28, x27)\n    x30 = matcher(x26, x12)\n    x31 = argmax(x29, x30)\n    x32 = lbind(shift, x23)\n    x33 = mapply(x32, x27)\n    O = fill"], [1.1, "def solve_d1f369f1(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_90d1b867(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_330e00b4(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(sfilter, x3)\n    x6 = chain(x5, x4, color)\n    x7 = compose(maximum, shape)\n    x8 = fork(add, x7, x6)\n    x9 = compose(invert, x8)\n    x10 = order(x2, x9)\n    x11 = rbind(add, DOWN)\n    x12 = compose(x11, ulcorner)\n    x13 = fork(contained, x12, toindices)\n    x14 = rbind(add, RIGHT)\n    x15 = compose(x14, ulcorner)\n    x16 = fork(contained, x15, toindices)\n    x17 = fork(add, x13, x16)\n    x18 = rbind(argmax, x17)\n    x19 = compose(initset, identity)\n    x20 = fork(insert, vmirror, x19)\n    x21 = fork(insert, cmirror, x20)\n    x22 = fork(insert, hmirror, x21)\n    x23 = compose(x18, x22)\n    x24 = apply(x23, x10)\n    x25 = size(x2)\n    x26 = apply(size, x2)\n    x27 = contained(ONE, x26)\n    x28 = increment(x25)\n    x29 = branch(x27, x25, x28)\n    x30 = double(x29)\n    x31 = decrement(x30)\n    x32 = apply(normalize, x24)\n    x33 = interval(ZERO, x29, ONE)\n    x34 = pair(x33, x33)\n    x35 = mpapply(shift, x32, x34)\n    x36 = astuple(x31, x31)\n    x37 = canvas(x1, x36)\n    x38 = paint(x37, x35)\n    x39 ="], [1.1, "def solve_1a561f30(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = toindices(x1)\n    x3 = lbind(contained, ZERO)\n    x4 = compose(x3, hline)\n    x5 = rot(I)\n    x6 = lbind(contained, ZERO)\n    x7 = compose(x6, vline)\n    x8 = rbind(sfilter, x4)\n    x9 = compose(x8, asindices)\n    x10 = power(x9, TWO)\n    x11 = fork(gravitate, toindices, x10)\n    x12 = lbind(contained, ZERO)\n    x13 = compose(x12, leftmost)\n    x14 = lbind(compose, x11)\n    x15 = lbind(rbind, greater)\n    x16 = chain(x15, x14, x13)\n    x17 = fork(greater, x16, x12)\n    x18 = compose(x17, rot90)\n    x19 = fork(greater, x17, x13)\n    x20 = chain(x19, x17, x16)\n    x21 = fork(both, x18, x20)\n    x22 = fork(both, x14, x21)\n    x23 = compose(flip, x22)\n    x24 = sfilter(x1, x23)\n    x25 = fork(compose, x21, x22)\n    x26 = product(x24, x25)\n    x27 = fork(compose, toindices, x25)\n    x28 = fork(rbind, x27, x26)\n    x29 = fork(multiply, x27, x28)\n    x30 = compose(x29, first)\n    x31 = palette(I)\n    x32 = lbind(sfilter, x31)\n    x33 = lbind(compose, x82)\n    x34 = chain(x32, x33, x30)\n    x35 = lbind(ofcolor, I)\n    x36 = compose(x34, x35)\n    x37 =77(x34)\n    x38 = compose"], [1.1, "def solve_f810701d(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, box)\n    x3 = fork(multiply, height, width)\n    x4 = fork(equality, size, x3)\n    x5 = compose(flip, x4)\n    x6 = fork(both, x2, x5)\n    x7 = extract(x1, x6)\n    x8 = inbox(x7)\n    x9 = backdrop(x8)\n    x10 = toobject(x9, I)\n    x11 = remove(x10, x1)\n    x12 = remove(x7, x11)\n    x13 = argmin(x12, size)\n    x14 = combine(x13, x7)\n    x15 = backdrop(x14)\n    x16 = objects(x10, T, F, T)\n    x17 = color(x10)\n    x18 = fill(x17, x16, x15)\n    x19 = subgrid(x18, I)\n    x20 = argmin(x16, width)\n    x21 = ulcorner(x20)\n    x22 = llcorner(x20)\n    x23 = urcorner(x20)\n    x24 = shoot(x21, UNITY)\n    x25 = shoot(x22, DOWN_LEFT)\n    x26 = shoot(x24, UP_RIGHT)\n    x27 = shoot(x25, x22)\n    x28 = combine(x26, x27)\n    x29 = intersection(x28, x22)\n    x30 = fill(x17, x17, x29)\n    x31 = combine(x24, x22)\n    x32 = llcorner(x31)\n    x33 = rbind(subtract, x32)\n    x34 = chain(positive, size, x33)\n    x35 = sfilter(x24, x34)\n    x36 = height(x35)\n    x37 = equality(x36, ONE)\n    x38 = branch(x37, ZERO, x31)\n    O = move(x38, x33, x37)\n    "], [1.1, "def solve_2c2f30fa(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_bc464370(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(I)\n    x9 = fill(I, x8, x7)\n    x10 = sfilter(x7, hline)\n    x11 = size(x10)\n    x12 = increment(x11)\n    x13 = sfilter(x7, vline)\n    x14 = size(x13)\n    x15 = increment(x14)\n    x16 = divide(x12, x15)\n    x17 = asindices(x7)\n    x18 = center(x17)\n    x19 = multiply(x13, x12)\n    x20 = increment(x19)\n    x21 = asindices(I)\n    x22 = center(x21)\n    x23 = width(I)\n    x24 = decrement(x23)\n    x25 = tojvec(x24)\n    x26 = double(x12)\n    x27 = tojvec(x25)\n    x28 = connect(x26, x27)\n    x29 = center(x28)\n    x30 =\n    x29(x7)\n    x31 = asindices(I)\n    x32 = center(x31)\n    x33 = width(I)\n    x34 = halve(x33)\n    x35 = tojvec(x34)\n    x36 = height(I)\n    x37 = halve(x36)\n    x38 = connect(x35, x37)\n    x39 = fill(x19, x38, x32)\n    x40 = fill(x39, x08, x23)\n    x41 = ofcolor(x40, EIGHT)\n    x42 = size(x41)\n    x43 = equality(x42, ONE)\n    x44 = branch(x43, x40, x40)\n    x45 = connect(x42, x44"], [1.1, "def solve_701aa21e(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_1830846c(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = asindices(I)\n    x5 = apply(first, x4)\n    x6 = difference(x5, x3)\n    x7 = ofcolor(I, x1)\n    x8 = rbind(interval, ONE)\n    x9 = lbind(rbind, contained)\n    x10 = lbind(sfilter, x6)\n    x11 = rbind(matcher, ZERO)\n    x12 = chain(size, x10, x9)\n    x13 = lbind(sfilter, x7)\n    x14 = lbind(compose, x12)\n    x15 = chain(x13, x11, x14)\n    x16 = lbind(fork, x8)\n    x17 = compose(increment, minimum)\n    x18 = lbind(lbind, astuple)\n    x19 = lbind(chain, x17)\n    x20 = rbind(x19, first)\n    x21 = chain(x20, x18, first)\n    x22 = lbind(chain, maximum)\n    x23 = rbind(x22, first)\n    x24 = chain(x23, x18, first)\n    x25 = fork(x16, x21, x24)\n    x26 = compose(x15, x25)\n    x27 = apply(toivec, x3)\n    x28 = apply(x26, x27)\n    x29 = argmax(x28, width)\n    x30 = remove(x29, x28)\n    x31 = ulcorner(x29)\n    x32 = invert(x31)\n    x33 = shift(x29, x32)\n    x34 = asindices(I)\n    x35 = center(x34)\n    x36 = invert(x35)\n    x37 = shift(x34, x36)\n    x38 = width(I)\n    x39 = multiply(x38, x37)\n    x40 = tojvec(x39)"], [1.1, "def solve_f603102a(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = equality(x1, FOUR)\n    x3 = fork(equality, height, width)\n    x4 = extract(x2, x3)\n    x5 = other(x1, x4)\n    x6 = color(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = toindices(x11)\n    x13 = vmirror(x12)\n    x14 = hmirror(x12)\n    x15 = shoot(x13, UNITY)\n    x16 = shoot(x14, NEG_UNITY)\n    x17 = fill(I, x11, x15)\n    x18 = fill(x17, x10, x16)\n    x19 = ofcolor(x18, x6)\n    x20 = lowermost(x19)\n    x21 = matcher(first, x10)\n    x22 = compose(flip, x21)\n    x23 = rightmost(x19)\n    x24 = matcher(first, x10)\n    x25 = rightmost(x194)\n    x26 = matcher(first, x24)\n    x27 = leftmost(x194)\n    x28 = matcher(first, x25)\n    x29 = both(x22, x28)\n    x30 = branch(x29, x22, x25)\n    x31 = fill(x18, x11, x30)\n    x32 = ofcolor(x31, x6)\n    x33 = urcorner(x32)\n    x34 = shoot(x33, UP_RIGHT)\n    x35 = shoot(x34, DOWN_LEFT)\n    x36 = underfill(x31, x11, x35)\n    x37 = ofcolor(x36, x6)\n    x38 = compose(flip, x27)\n    x39 = rbind(sfilter, x38)"], [1.1, "def solve_b5325838(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_669b94eb(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x228, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_8980fc85(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = contained(ZERO, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(greater, TWO)\n    x9 = compose(x8, first)\n    x10 = color(x2)\n    x11 =y10000(x10)\n    x12 = insert(x8, x11)\n    x13 = merge(x12)\n    x14 = rot90(x13)\n    x15 = subtract(x4, TWO)\n    x16 = insert(x15, x4)\n    x17 = urcorner(x16)\n    x18 = shoot(x17, UNITY)\n    x19 = rbind(shoot, NEG_UNITY)\n    x20 = rbind(shoot, DOWN_LEFT)\n    x21 = rbind(shoot, UP_RIGHT)\n    x22 = rbind(shoot, DOWN_LEFT)\n    x23 = rbind(shoot, UNITY)\n    x24 = rbind(shoot, x15)\n    x25 = rbind(shoot, x14)\n    x26 = rbind(shoot, x25)\n    x27 = fork(combine, x22, x24)\n    x28 = fork(combine, x26, x27)\n    x29 = fork(combine, x27, x28)\n    x30 = compose(x9, x29)\n    x31 = difference(x1, x8)\n    x32 = extract(x31, x30)\n    x33 = x32(x32)\n    x34 = x6(x33)\n    x35 = height(x34)\n    x36 = width(x34)\n    x37 = interval(ZERO, x35, x36)\n    x38 = pair(x37, x37)\n    x39 = lbind(sfilter, x33)\n    x40 = rbind(compose, last)\n    x"], [1.1, "def solve_0f1a8bdf(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_00368803(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = astuple(x15, x17)\n    x19 = vupscale(x10, x18)\n    x20 = hupscale(x19, x17)\n    x21 = asobject(x20)\n    x22 = lbind(shift, x21)\n    x23 = neighbors(ORIGIN)\n    x24 = mapply(x22, x23)\n    x25 = paint(x5, x24)\n    x26 = objects(x25, T, T, T)\n    x27 = apply(uppermost, x26)\n    x28 = order(x27, identity)\n    x29 = apply(color, x28)\n    x30 = rbind(contained, x22)\n    x31 = compose(x30, palette)\n    x32 = rbind(sfilter, x31)\n    x33 = lbind(shift, x21)\n    x34 = chain(x32, x33, x25)\n    x35 = rbind(apply, x29)\n    x36 = lbind(lbind, shift)\n    x37 = compose(x35, x36)\n    x38 = lbind(rbind, combine)\n    x39 = chain(x35, x38, x37)\n    x40 = fork(sfilter, x34, x39)\n    "], [1.1, "def solve_a210a5a2(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_13ac0f79(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = chain(increment, merge, size)\n    x5 = chain(decrement, decrement, width)\n    x6 = fork(greater, x4, x5)\n    x7 = fork(both, x3, x6)\n    x8 = tojvec(TEN)\n    x9 = crop(I, x8, x7)\n    x10 = numcolors(x9)\n    x11 = equality(x10, TWO)\n    x12 = insert(x8, x11)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = insert(x13, x15)\n    x17 = height(x12)\n    x18 = decrement(x17)\n    x19 = lbind(multiply, x18)\n    x20 = add(x14, x19)\n    x21 = width(x12)\n    x22 = decrement(x21)\n    x23 = lbind(multiply, x22)\n    x24 = add(x14, x23)\n    x25 = repeat(x16, x11)\n    x26 = astuple(x25, x24)\n    x27 = add(x25, x26)\n    x28 = subtract(x24, x18)\n    x29 = astuple(x28, x27)\n    x30 = add(x29, x28)\n    x31 = crement(x30)\n    x32 = height(x12)\n    x33 = decrement(x32)\n    x34 = subtract(x33, x31)\n    x35 = astuple(x34, x31)\n    x36 = add(x35, x31)\n    x37 =repeat(x36, x11)\n    x38 = merge(x37)\n    x39 = cover(I, x38)\n    x40 = tojvec(x3)\n    x"], [1.1, "def solve_f623db8b(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(306, DOWN)\n    x7 = rbind(compose, initset)\n    x8 = lbind(rbind, sfilter)\n    x9 = chain(x6, leftmost, x8)\n    x10 = chain(uppermost, x7, x9)\n    x11 = fork(greater, x9, x10)\n    x12 = compose(x11, x5)\n    x13 = lbind(compose, x12)\n    x14 = lbind(rbind, sfilter)\n    x15 = chain(x13, x14, x11)\n    x16 = chain(uppermost, x7, x15)\n    x17 = fork(greater, x16, x12)\n    x18 = compose(x17, x5)\n    x19 = fork( quotur, x18, identity)\n    x20 = fork(equality, identity, x19)\n    x21 = compose(x20, x15)\n    x22 = rbind(compose, x21)\n    x23 = lbind(rbind, sfilter)\n    x24 = chain(x22, x23, x15)\n    x25 = chain(uppermost, x7, x15)\n    x26 = lbind(greater, x26)\n    x27 = compose(x26, x45)\n    x28 = chain(toivec, x27, x25)\n    x29 = lbind(lbind, shift)\n    x30 = compose(x29, x27)\n    x31 = fork(compose, x28, x30)\n    x32 = compose(cmirror, x31)\n    x33 = fork(mapply, x32, x17)\n    x34 = multiply(SIX, THREE)\n    x35 = astuple(x34, x34)\n    x36 = x35(I)\n    x37"], [1.1, "def solve_f62bf43a(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = apply(x12, x9)\n    x14 = dedupe(x13)\n    x15 = size(x14)\n    x16 = decrement(x15)\n    x17 = add(x16, x16)\n    x18 = compose(x11, x14)\n    x19 = x8(x18)\n    x20 = branch(x7, x19, height)\n    x21 = subtract(x17, x20)\n    x22 = decrement(x21)\n    x23 = add(x22, x20)\n    x24 = canvas(ZERO, x1)\n    x25 = asindices(x24)\n    x26 = box(x25)\n    x27 = mostcolor(I)\n    x28 = recolor(x27, x26)\n    x29 = double(x28)\n    x30 = interval(ZERO, x29, ONE)\n    x31 = asobject(x30)\n    x32 = shape(x31)\n    x33 = shift(x31, x32)\n    x34 = paint(x24, x33)\n    x35 = astuple(x shift, x34)\n    x36 = interval(ZERO, x25, ONE)\n    x37 = product(x36, x36)\n    x38 = rbind(multiply, x31)\n    x39 = apply(x38, x37)\n    x40 = lbind(shift, x33)\n    x41 = mapply(x40, x39)\n    O ="], [1.1, "def solve_86180c1a(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_ea229701(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = shape(I)\n    x2 = add(x1, DOWN)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = lbind(multiply, x4)\n    x6 = width(I)\n    x7 = subtract(x6, x3)\n    x8 = astuple(x7, x5)\n    x9 = connect(x3, x8)\n    x10 = recolor(ZERO, x9)\n    x11 = compose(first, last)\n    x12 = rbind(remove, x11)\n    x13 = compose(x12, first)\n    x14 = astuple(x10, x13)\n    x15 = mostcolor(I)\n    x16 = canvas(x15, x14)\n    x17 = paint(x16, x12)\n    x18 = size(x1)\n    x19 = interval(ZERO, x18, ONE)\n    x20 = pair(x19, x19)\n    x21 = width(I)\n    x22 = astuple(x21, x5)\n    x23 = repeat(ZERO, x22)\n    x24 = combine(x23, x20)\n    x25 = branch(x18, x24, ONE)\n    x26 = multiply(x25, x5)\n    x27 = invert(x26)\n    x28 = interval(ZERO, x27, ONE)\n    x29 = product(x28, x28)\n    x30 = order(x29, last)\n    x31 = apply(compose, x470)\n    x32 = lbind(extract, x31)\n    x33 = lbind(matcher, first)\n    x34 = compose(x33, first)\n    x35 = chain(last, x32, x34)\n    x36 = compose(last, last)\n    x37 = lbind(recolor, FIVE)\n    x38 = lbind(mapply, last)\n    x39 = compose(x38, x35)\n    x40 = fork(combine, x36, x39)\n    x41 = compose"], [1.1, "def solve_fc2d1034(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    x5 = palette(x4)\n    x6 = intersection(x5, x2)\n    x7 = colorfilter(x3, x5)\n    x8 = argmax(x7, size)\n    x9 = remove(x8, x7)\n    x10 = lbind(chain, positive)\n    x11 = lbind(x10, size)\n    x12 = lbind(lbind, shift)\n    x13 = lbind(lbind, intersection)\n    x14 = compose(x11, x12)\n    x15 = compose(x13, x13)\n    x16 = fork( x199, x14, x15)\n    x17 = fork(mapply, x16, x17)\n    x18 = astuple(SIX, x18)\n    x19 = x15(I)\n    x20 = cover(x19, x8)\n    x21 = dropping(x20, UNITY)\n    x22 = dmirror(x21)\n    x23 = papply(pair, x21, x22)\n    x24 = lbind(apply, maximum)\n    x25 = apply(x24, x23)\n    x26 = cmirror(x25)\n    x27 = papply(pair, x25, x26)\n    x28 = apply(x25, x27)\n    x29 =mirror(x28)\n    x30 = papply(pair, x28, x29)\n    x31 = apply(x24, x30)\n    x32 = llcorner(x28)\n    x33 = palette(x29)\n    x34 = lbind(ofcolor, x22)\n    x35 = compose(x34, x31)\n    x36 =726200(x35)\n    x37 =4438(x31, x36)\n    x38 = fork(recolor, x35, x37)\n    x39 = mapply(x38, x31)\n    O = paint("], [1.1, "def solve_81157fed(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_5221339b(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(compose, x8)\n    x13 = compose(x11, x12)\n    x14 = lbind(sfilter, x3)\n    x15 = chain(size, x14, x13)\n    x16 = itemmax(x3, x15)\n    x17 = objects(x7, T, F, T)\n    x18 = merge(x17)\n    x19 = palette(x18)\n    x20 = colorfilter(x17, x19)\n    x21 = chain(positive, size, x17)\n    x22 = rbind(shoot, UNITY)\n    x23 = rbind(shoot, NEG_UNITY)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = rbind(shoot, UP_RIGHT)\n    x26 = lbind(lbind, greater)\n    x27 = chain(x22, x24, x25)\n    x28 = rbind(shoot, UP_RIGHT)\n    x29 = rightmost(x16)\n    x30 = lbind(rbind, greater)\n    x31 = chain(x28, x30, x29)\n    x32 = lbind(recolor, x509)\n    x33 = rbind(shoot, x31)\n    x34 = rbind(shoot, x32)\n    x35 =fork(combine, x33, x34)\n    x36 = compose(x35, x27)\n    x37 = fork(paint, identity, x36)\n    x38 = rbind(shoot, x"], [1.1, "def solve_27a6a068(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_d74d08da(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(identity, dmirror)\n    x5 = astuple(cmirror, hmirror)\n    x6 = combine(x4, x5)\n    x7 = rbind(rapply, I)\n    x8 = compose(first, x7)\n    x9 = chain(x3, x8, initset)\n    x10 = extract(x6, x9)\n    x11 = x10(I)\n    x12 = mostcolor(I)\n    x13 = palette(I)\n    x14 = remove(x12, x13)\n    x15 = other(x14, TWO)\n    x16 = ofcolor(x11, x15)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, identity, vmirror)\n    x20 = x19(x11)\n    x21 = ofcolor(x20, x15)\n    x22 = ofcolor(x20, TWO)\n    x23 = apply(last, x22)\n    x24 = insert(ZERO, x23)\n    x25 = width(x20)\n    x26 = insert(x25, x24)\n    x27 = order(x26, identity)\n    x28 = last(x27)\n    x29 = remove(x28, x27)\n    x30 = first(x27)\n    x31 = remove(x30, x27)\n    x32 = pair(x29, x31)\n    x33 = size(x29)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = pair(x34, x32)\n    x36 = lbind(fork, connect)\n    x37 = compose(first, last)\n    x38 = chain(decrement, last, last)\n    x39 = lbind(lbind, add)\n    x40 = compose(x39, first)\n    x41 = lbind("], [1.1, "def solve_96fa9643(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = compose(leftmost, first)\n    x13 = compose(leftmost, last)\n    x14 = fork(equality, x12, x13)\n    x15 = compose(uppermost, first)\n    x16 = compose(uppermost, last)\n    x17 = fork(equality, x15, x16)\n    x18 = fork(either, x14, x17)\n    x19 = sfilter(x11, x18)\n    x20 = compose(color, first)\n    x21 = compose(center, first)\n    x22 = compose(center, last)\n    x23 = fork(connect, x21, x22)\n    x24 = fork(recolor, x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = matcher(last, ZERO)\n    x28 = decrement(x26)\n    x29 = matcher(last, x28)\n    x30 = fork(either, x27, x29)\n    x31 = matcher(first, ZERO)\n    x32 = decrement(x25)\n    x33 = matcher(first, x32)\n    x34 = fork(either, x31, x33)\n    x35 = toindices(x5)\n    x36 = sfilter(x35, x30)\n    x37 = equality(x35, x36)\n    x38 = mapply(x24, x19)\n    x39 = paint(I, x38)\n    x40 = branch(x37, x30, x34)\n    "], [1.1, "def solve_862378c3(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =238\n    729 relatively623\n    2990529281\n    3446ly2453\n    1437048410\n    \"\"\"\n    x2 = height(I)\n    x3 = halve(x2)\n    x4 = increment(x3)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = astuple(x4, x6)\n    x11 = canvas(x9, x10)\n    x12 =, toindices(x11)\n    x13 = normalize(x12)\n    x14 = toindices(x13)\n    x15 = remove(x9, x14)\n    x16 = lbind(intersection, x12)\n    x17 = chain(size, x16, toindices)\n    x18 = argmax(x15, x17)\n    x19 = ulcorner(x18)\n    x20 = matcher(first, x9)\n    x21 = sfilter(x18, x20)\n    x22 = lbind(shift, x12)\n    x23 = height(x12)\n    x24 = divide(x23, FOUR)\n    x25 = increment(x24)\n    x26 = width(x12)\n    x27 = divide(x25, FOUR)\n    x28 = increment(x27)\n    x29 = divide(x28, FOUR)\n    x30 =ensAgainst(x21, x13)\n    x31 = paddingapply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(tojvec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = lbind(fork, both)\n    x37 = lbind(index, I)\n    x38 = lbind(compose, x37)\n    x39 = lbind(lbind, shift)\n    x40 = compose(x38, x39)\n"], [1.1, "def solve_98d6c048(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_c03aebbc(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = asobject(I)\n    x2 = dmirror(I)\n    x3 = mostcolor(I)\n    x4 = matcher(first, x3)\n    x5 = compose(flip, x4)\n    x6 = sfilter(x1, x5)\n    x7 =227(x6)\n    x8 = mostcolor(I)\n    x9 = lbind(occurrences, I)\n    x10 = matcher(x9, x8)\n    x11 = compose(flip, x10)\n    x12 = fork(both, x3, x11)\n    x13 = sfilter(x6, x12)\n    x14 = combine(x7, x13)\n    x15 = increment(x14)\n    x16 = order(x1, last)\n    x17 = apply(first, x16)\n    x18 = last(x16)\n    x19 = decrement(x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = hsplit(I, x21)\n    x23 = astuple(ONE, THREE)\n    x24 = astuple(TWO, FOUR)\n    x25 = initset(x24)\n    x26 = insert(ORIGIN, x25)\n    x27 = insert(x20, x26)\n    x28 = insert(x25, x27)\n    x29 = insert(x28, x267)\n    x30 = ofcolor(x22, x4)\n    x31 = ofcolor(x22, TWO)\n    x32 = asindices(x22)\n    x33 = initset(x32)\n    x34 = insert(x27, x33)\n    x35 = lbind(hfrontier, x34)\n    x36 = compose(x35, center)\n    x37 = fork(recolor, color, x36)\n    x38 = mapply(x37, x30)\n    x39 = merge(x38)\n    x40 = recolor(x4, x39)\n    O = paint(x22, x40)"], [1.1, "def solve_f1bb13b7(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_aed2df05(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_104508f4(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x17, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = s5000(x28, x24)\n    x30 =388(x29, x16)\n    x31 = rbind(greater, x15)\n    x32 = compose(x31, last)\n    x33 =88(x32)\n    x34 = vmirror(x30)\n    x35 = x32(x34)\n    x36 = width(x16)\n    x37 = crop(x35, ORIGIN, x36)\n    x38 = chain(positive, decrement, size)\n    x39 = rbind(toobject, x38)\n    x40 = rbind(colorcount, x7)\n    x41 = chain(x39, x40"], [1.1, "def solve_44ad6801(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_308d5604(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(positive, size)\n    x3 = lbind(intersection, x2)\n    x4 = chain(x2, x1, x3)\n    x5 = compose(positive, size)\n    x6 = fork(either, x4, x5)\n    x7 = fork(both, x2, x6)\n    x8 = rbind(shoot, UNITY)\n    x9 = rbind(shoot, NEG_UNITY)\n    x10 = fork(combine, x8, x9)\n    x11 = rbind(shoot, UP_RIGHT)\n    x12 = rbind(shoot, DOWN_LEFT)\n    x13 = fork(combine, x11, x12)\n    x14 = fork(combine, x10, x13)\n    x15 = ofcolor(I, ONE)\n    x16 = intersection(x15, x15)\n    x17 = lbind(apply, color)\n    x18 = chain(x17, x16, x9)\n    x19 = lbind(lbind, intersection)\n    x20 = chain(x19, x18, x9)\n    x21 = compose(x2, x20)\n    x22 = fork(pair, x21, identity)\n    x23 = sfilter(x16, x22)\n    x24 = argmax(x23, size)\n    x25 = matcher(first, ONE)\n    x26 = compose(flip, x25)\n    x27 = sfilter(x24, x26)\n    x28 = lbind(colorcount, I)\n    x29 = argmin(x27, x28)\n    x30 = ofcolor(I, x22)\n    x31 = leftmost(x30)\n    x32 = width(I)\n    x33 = interval(x31, x32, ONE)\n    x34 = rightmost(x30)\n    x35 = decrement(x34)\n    x36 = lbind(multiply, x35)\n    x37 = apply(x36, x33)\n    x38 = mapply(vfrontier,"], [1.1, "def solve_960f2cc4(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, identity, dmirror)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = apply(first, x22)\n    x24 = lbind(sfilter, x21)\n    x25 = compose(first, last)\n    x26 = lbind(matcher, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x27, x23)\n    x29 = lbind(shift, x15)\n    x30 = chain(x29, toivec, uppermost)\n    x31 = matcher(first, x18)\n    x32 = rbind(sfilter, x31)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(toindices, x32, x30)\n    x36 = chain(x33, x34, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = compose(color, x37)\n    x39 = compose(x32, x30)\n    x40 = fork(recolor, x38, x39)\n    x41 = fork(other, palette,"], [1.1, "def solve_fc637d33(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    x5 = palette(x4)\n    x6 = intersection(x5, x2)\n    x7 = lbind(colorcount, x4)\n    x8 = argmax(x6, x7)\n    x9 = leastcolor(x8)\n    x10 = matcher(first, x8)\n    x11 =004(x2, x10)\n    x12 = argmin(x11, x9)\n    x13 = merge(x11)\n    x14 = cover(x13, x12)\n    x15 = matcher(first, x9)\n    x16 = compose(flip, x15)\n    x17 = rbind(sfilter, x16)\n    x18 = mostcolor(I)\n    x19 = lbind(colorcount, x4)\n    x20 = chain(flip, x18, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(dmirror, x21)\n    x23 = x22(x41)\n    x24 = dmirror(x23)\n    x25 = chain(x19, x34, x24)\n    x26 = lbind(rapply, x29)\n    x27 = compose(x26, first)\n    x28 = chain(first, x24, x27)\n    x29 = rbind(ofcolor, x18)\n    x30 = fork(recolor, x18, x28)\n    x31 = compose(x29, x30)\n    x32 = fork(paint, identity, x31)\n    x33 = rbind(add, DOWN)\n    x34 = chain(positive, size, x33)\n    x35 = rbind(mfilter, x34)\n    x36 = compose(x35, x32)\n    x37 = sfilter(x2, x36)\n    x38 = lbind(paint, x5)\n    x39 = chain(x38, asobject, x"], [1.1, "def solve_52b9f265(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_b3813f22(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = replace(I, FOUR, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = replace(x2, FOUR, ZERO)\n    x4 =7513(x3)\n    x5 = ulcorner(x4)\n    x6 = subgrid(x4, x5)\n    x7 = replace(x6, ONE, ZERO)\n    O = replace(x7, DOWN, ZERO)\n    return O"], [1.1, "def solve_84e52fe0(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 =73mirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [1.1, "def solve_102a4ec9(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices ofI)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [1.1, "def solve_c6840d89(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =180007fOUR)\n    x2 = subgrid(x1, I)\n    x3 = mostcolor(x2)\n    x4 = replace(x2, x3, ZERO)\n    x5 = leastcolor(x4)\n    x6 = ofcolor(x2, x5)\n    x7 = recolor(x3, x6)\n    O = replace(x4, x5, x7)\n    return O"], [1.1, "def solve_e594a22c(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = switch(I, THREE, FOUR)\n    x2 =1115(x1)\n    x3 = argmin(x2, lrcorner)\n    x4 = urcorner(x3)\n    x5 = shoot(x4, NEG_UNITY)\n    x6 = shoot(x4, UP_RIGHT)\n    x7 = combine(x5, x6)\n    x8 = llcorner(x3)\n    x9 = compose(x8, invert)\n    x10 = power(x9, TWO)\n    x11 = initset(x2)\n    x12 = insert(x3, x11)\n    x13 = insert(x10, x12)\n    x14 = toobject(x13, I)\n    x15 = mapply(x9, x14)\n    x16 = height(I)\n    x17 = width(I)\n    x18 = divide(x16, x17)\n    x19 =389(x18)\n    x20 = toindices(x3)\n    x21 = chain(ZERO, x20, x11)\n    x22 = lbind(contained, ZERO)\n    x23 = compose(x22, outbox)\n    x24 = fork(add, identity, x23)\n    x25 = compose(invert, x24)\n    x26 = order(x21, x25)\n    x27 = fork(insert, identity, x66)\n    x28 = fork(insert, identity, x25)\n    x29 = fork(insert, identity, x28)\n    x30 = fork(insert, identity, x29)\n    x31 = switch(I, THREE, FOUR)\n    x32 = x31(x26)\n    x33 = invert(x32)\n    x34 = shift(x31, x33)\n    x35 = shift(x34, LEFT)\n    x36 = paint(x39, x35)\n    O = x30(x36)\n    return O"], [1.1, "def solve_a01d8e1a(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = last(x2)\n    x5 =446(447, x4)\n    x6 = recolor(x1, x5)\n    O = underfill(I, x1, x6)\n    return O"], [1.1, "def solve_7ed869d4(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = fork(insert, identity, identity)\n    x6 = compose(insert, x5)\n    x7 = fork(insert, cmirror, x6)\n    x8 = fork(insert, dmirror, x7)\n    x9 = fork(insert,cmirror, x8)\n    x10 = fork(insert, hmirror, x9)\n    x11 = mapply(x10, x4)\n    x12 = merge(x1)\n    x13 = vsplit(x61, x12)\n    x14 = mapply(x11, x13)\n    x15 = output:\n    1111114841\n    1111145851\n    1472584620\n    1642734888\n    8154415238\n    \"\"\"\n    x1 = argmax(x14, size)\n    x2 = subgrid(x1, I)\n    O = trim(x2)\n    return O"], [1.1, "def solve_b8c1863d(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = apply(normalize, x2)\n    x4 = astuple(NINE, NINE)\n    x5 = canvas(F25fbde4(x4)\n    x6 = asindices(x5)\n    x7 = box(x6)\n    x8 = center(x6)\n    x9 = lbind(contained, ZERO)\n    x10 = rbind(subtract, x8)\n    x11 = compose(x9, x10)\n    x12 = chain(outbox, outbox, initset)\n    x13 = corners(x6)\n    x14 = mapply(x12, x13)\n    x15 = difference(x7, x14)\n    x16 = inbox(x7)\n    x17 = sfilter(x16, x11)\n    x18 = difference(x16, x17)\n    x19 = fill(x5, ONE, x15)\n    x20 = fill(x19, TWO, x18)\n    x21 = ofcolor(x20, ZERO)\n    O = fill(x20, FOUR, x21)\n    return O"], [1.1, "def solve_ea07c672(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = first(x3)\n    x5 = rbind(colorcount, ZERO)\n    x6 = rbind(toobject, I)\n    x7 = compose(x5, x6)\n    x8 = chain(x7, x4, dneighbors)\n    x9 = matcher(x8,4200x4)\n    x10 = sfilter(x2, x9)\n    x11 = difference(x2, x10)\n    x12 = papply(recolor, x11, x10)\n    x13 = mapply(x5, x12)\n    x14 = paint(I, x13)\n    x15 = subgrid(x4, x14)\n    O = trim(x15)\n    return O"], [1.1, "def solve_215f5bb4(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 =424(I)\n    x2 = rbind(multiply, THREE)\n    x3 = rbind(divide, THREE)\n    x4 = compose(x2, x3)\n    x5 = fork(equality, identity, x4)\n    x6 = compose(x5, last)\n    x7 = sfilter(x1, x6)\n    x8 = rbind(multiply, THREE)\n    x9 = rbind(divide, THREE)\n    x10 = compose(x8, x9)\n    x11 = fork(equality, identity, x10)\n    x12 = compose(x11, last)\n    x13 = extract(x7, x12)\n    x14 = extract(xr, x13)\n    x15 = ulcorner(x14)\n    x16 = subgrid(x14, I)\n    x17 = replace(x16, ZERO, x14)\n    x18 = asobject(x17)\n    x19 = shift(x18, x15)\n    O = paint(I, x19)\n    return O"], [1.1, "def solve_d7bc4b60(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = trim(I)\n    x2 = repeat(x1, ONE)\n    x3 = numcolors(x2)\n    x4 = equality(x3, THREE)\n    x5 = height(x1)\n    x6 = width(x1)\n    x7 = astuple(x5, x6)\n    x8 = add(d406, TWO)\n    x9 = compose(outbox, x8)\n    x10 =\n    x11 = apply(x9, x7)\n    x12 = initset(x5)\n    x13 =71(x6)\n    x14 = insert(x12, x13)\n    x15 = toobject(x14, x1)\n    x16 = toindices(x15)\n    x17 = lbind(intersection, x16)\n    x18 = lbind(shift, x15)\n    x19 = compose(x17, x18)\n    x20 = toindices(x15)\n    x21 = lbind(intersection, x20)\n    x22 = chain(x19, size, x21)\n    x23 = fork(shift, x19, x22)\n    x24 = compose(x5, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = rot180(x24)\n    x28 = apply(x26, x27)\n    x29 = apply(x25, x28)\n    x30 = fork(combine, x28, x29)\n    x31 = x30(x15)\n    x32 = decrement(x31)\n    x33 = lbind(astuple, x32)\n    x34 = lbind(shift, x15)\n    x35 = compose(x33, x34)\n    x36 = apply(x35, x29)\n    O = x30(x36)\n    return O"], [1.1, "def solve_837e299d(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 =173(I)\n    x2 =29c(I)\n    x3 = fgpartition(x2)\n    x4 = merge(x3)\n    x5 = rbind(shoot, DOWN)\n    x6 = compose(x5, last)\n    x7 = fork(recolor, first, x6)\n    x8 = mapply(x7, x4)\n    O = paint(x1, x8)\n    return O"], [1.1, "def solve_f79d2d32(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(replace, x2)\n    x4 = compose(color, x3)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(SIX, SIX)\n    x9 = astuple(EIGHT, x8)\n    x10 = connect(ORIGIN, x9)\n    x11 = initset(UNITY)\n    x12 = recolor(ZERO, x11)\n    x13 = sfilter(x10, x12)\n    x14 = upscale(x13, TWO)\n    x15 = branch(x14, ORIGIN, RIGHT)\n    x16 = mapply(x5, x13)\n    x17 = apply(double, x16)\n    x18 = insert(x16, x17)\n    x19 = width(x15)\n    x20 = insert(x19, x18)\n    x21 = ulcorner(x15)\n    x22 = ulcorner(x18)\n    x23 = subtract(x21, x22)\n    x24 = add(x23, x20)\n    x25 = crop(x15, x27, x24)\n    x26 = hupscale(x25, x20)\n    x27 = compose(last, last)\n    x28 =9259(ZERO, x27)\n    x29 = h59(x28)\n    x30 = insert(x27, x28)\n    x31 = crop(x30, x29, x20)\n    x32 = vupscale(x31, x20)\n    O = other(x23, x32)\n    return O"], [1.1, "def solve_e16148b2(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =7313636344\n    6973281190\n    3424891948\n    9458092097\n    0962975318\n    6899378059\n    6567395500\n    0069332464\n    37149656707\n    \"\"\"\n    x2 = solve_e9af63ed(I):\n    O = hmirror(I)\n    return O"], [1.1, "def solve_189dd23b(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(9172mirror)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, EIGHT, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [1.1, "def solve_7c870502(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, height, width)\n    x8 = argmin(x7, size)\n    x9 = palette(x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 =37(x311)\n    x13 = colorcount(I, x11)\n    x14 = colorfilter(x1, x12)\n    x15 = argmax(x14, size)\n    x16 = remove(x15, x14)\n    x17 = apply(first, x16)\n    x18 = rbind(sfilter, x15)\n    x19 = chain(merge, x18, last)\n    x20 = x19(x17)\n    x21 = ofcolor(x20, x11)\n    x22 = subgrid(x21, I)\n    x23 = toobject(x22, x20)\n    x24 = delta(x23)\n    x25 = mapply(x19, x24)\n    x26 =06(x25)\n    x27 = paint(x20, x26)\n    x28 = matcher(first, x11)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(first, center, x29)\n    x31 = subgrid(x25, x22)\n    x32 =663(x31, x30)\n    x33 = lbind(shift, x28)\n    x34 = mapply(x33, x32)\n    O = paint(x37, x34)\n    return O"], [1.1, "def solve_42ac3a77(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 =171(I)\n    x25 = mapply(x23, x24)\n    x26 = paint(I, x25)\n    x27 = width(x7)\n    x28 = subtract(x37, x27)\n    x29 =88 divide(x28, x172)\n    x30 = tojvec(x29)\n    x31 = shift(x22, x30)\n    x32 =71(x31)\n    x33 = invert(x32)\n    x34 = shift(x28, x33)\n    x35 = branch(x20, x24, x28)\n    x36 = double(x19)\n    x37 = add(x39, x36)\n    x38 = frontiers(x35)\n    x39 = merge(x38)\n    x40 = shift(x34, x39)\n    O = paint(x26, x40)\n    return O"], [1.1, "def solve_6a6559c8(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = matcher(first, x3)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = size(x7)\n    x9 = positive(x8)\n    x10 = branch(x9, hmirror, vmirror)\n    x11 = ofcolor(I, x3)\n    x12 = leftmost(x11)\n    x13 = leftmost(x12)\n    x14 = greater(x13, x12)\n    x15 = uppermost(x11)\n    x16 = leftmost(x15)\n    x17 = branch(x14, add, x16)\n    x18 = ofcolor(I, x3)\n    x19 = ofcolor(I, x3)\n    x20 = leftmost(x19)\n    x21 = leftmost(x20)\n    x22 = greater(x21, x02)\n    x23 = uppermost(x11)\n    x24 = uppermost(x11)\n    x25 = astuple(x23, x24)\n    x26 = add(TWO, x25)\n    x27 = branch(x22, UP, x26)\n    x28 = asindices(I)\n    x29 = x27(x28)\n    x30 = shape(I)\n    x31 = canvas(x3, x30)\n    x32 = lbind(3305, manhattan)\n    x33 =5330(I)\n    x34 = mapply(x32, x33)\n    O = fill(x39, x3, x34)\n    return O"], [1.1, "def solve_389926ea(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =1998(I)\n    x2 = mostcolor(I)\n    x3 =279(x1)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = mapply( shoot, x4)\n    x6 = recolor(2, x5)\n    O = matcher(first, x2)\n    return O"], [1.1, "def solve_46334900(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = rot180(I)\n    x2 = rbind(greater, ONE)\n    x3 = chain(x2, minimum, shape)\n    x4 = branch(x3, x1, x1)\n    x5 =775(x4)\n    x6 = crop(x5, ORIGIN, x5)\n    x7 =91190696(x6)\n    x8 = fork(recolor, color, x7)\n    x9 = mapply(x8, x6)\n    O = paint(x5, x9)\n    return O"], [1.1, "def solve_f15aa06f(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =655532277(I):\n    x2 =261755965\n    x3 =8604225,3397702380\n    x4 = solve(I, x1)\n    x5 = fork(combine, vfrontier, hfrontier)\n    x6 = compose(x5, x4)\n    x7 = mapply(x6, x4)\n    O = underfill(x7, ZERO, x3)\n    return O"], [1.1, "def solve_4cc6c304(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = rot90(I)\n    x2 = rotcompose(I, x1)\n    x3 = rot77(I)\n    x4 =ilt(x3, x2)\n    x5 =379(x4)\n    x6 = apply(x2, x4)\n    x7 = cmirror(x6)\n    x8 = papply(shift, x7, x5)\n    O = paint(x1, x8)\n    return O"], [1.1, "def solve_eaf44018(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =d0694d9fac9df40)\n    x2 = tophalf(x1)\n    x3 = numcolors(x2)\n    x4 = bottomhalf(x1)\n    x5 = numcolors(x4)\n    x6 = bottomhalf(x1)\n    x7 = numcolors(x6)\n    x8 = intersection(x3, x4)\n    x9 = fill(I, EIGHT, x8)\n    x10 = fill(x9, FOUR, x7)\n    O = fill(x10, SEVEN, x8)\n    return O"], [1.1, "def solve_94e66f20(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(709, x2)\n    x4 = lbind(toobject, I)\n    x5 = compose(x4, x3)\n    x6 = palette(I)\n    x7 = UNITY(x6)\n    x8 =8731336x7)\n    x9 = matcher(first, x8)\n    x10 = sfilter(x6, x9)\n    x11 = rbind(colorcount, x8)\n    x12 = argmax(x10, x11)\n    x13 = leastcolor(I)\n    x14 = remove(x12, x10)\n    x15 = argmax(x14, x13)\n    x16 = merge(x12)\n    x17 = fill(I, x13, x16)\n    x18 =argmin(x14, x13)\n    x19 = ulcorner(x18)\n    x20 = increment(x19)\n    x21 = rbind(subtract, x20)\n    x22 = chain(toivec, x21, invert)\n    x23 = fork( shift, identity, x22)\n    x24 = mapply(x23, x11)\n    O = paint(x17, x24)\n    return O"], [1.1, "def solve_eb781931(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    O = fork(combine, dneighbors, identity)\n    x1 = x2(I)\n    x2 = decrement(x1)\n    x3 = tojvec(x2)\n    x4 = rbind(shoot, x3)\n    x5 =17(x2)\n    x6 = equality(x1, x5)\n    x7 = branch(x6, identity, crement)\n    x8 = x7(x2)\n    x9 = double(x8)\n    x10 = tojvec(x9)\n    x11 = mostcolor(I)\n    x12 = shape(I)\n    x13 = canvas(x11, x12)\n    x14 = hconcat(x9, x13)\n    x15 = objects(x14, F, F, T)\n    x16 = argmax(x15, numcolors)\n    x17 = canvas(x6, x16)\n    x18 = normalize(x16)\n    x19 = remove(x16, x1)\n    x20 = toindices(x18)\n    x21 = lbind(intersection, x19)\n    x22 = chain(x21, toindices, x18)\n    x23 = chain(size, x17, x22)\n    x24 =19(x2)\n    x25 = objects(x14, T, F, T)\n    x26 = intersection(x24, x25)\n    x27 = argmax(x26, x23)\n    x28 = x27(x222)\n    O = fill(x17, x color, x28)\n    return O"], [1.1, "def solve_f7818187(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 =885(x10)\n    x12 = vmirror(I)\n    x13 = lbind(shift, x12)\n    x14 = compose(x13, tojvec)\n    x15 = rbind(canvas, UNITY)\n    x16 = apply(x15, x11)\n    x17 = rbind(argmax, numcolors)\n    x18 = apply(x17, x16)\n    x19 = merge(x18)\n    x20 = size(x19)\n    x21 = increment(x40)\n    x22 = rbind(006, x21)\n    x23 = argmin(x20, x22)\n    x24 = repeat(x23, ONE)\n    x25 = asobject(I)\n    x26 = chain(x37, merge, x25)\n    x27 = width(x26)\n    x28 = astuple(x27, x24)\n    x29 = canvas(ZERO, x28)\n    x30 = asobject(x29)\n    x31 = matcher(first, x9)\n    x32 = compose(flip, x31)\n    x33 = sfilter(x30, x32)\n    x34 = shape(I)\n    x35 = double(x34)\n    x36 = divide(x35, x33)\n    x37 = increment(x36)\n    x38 = canvas(ZERO, x37)\n    x39 = paint(x38, x34)\n    O = x14(x39)\n    return O"], [1.1, "def solve_1f08f7ca(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = rbind(O = replace(I, EIGHT, TWO)\n    x3 = compose(x2, vmirror)\n    x4 =,filter(x1, x3)\n    x5 = merge(x4)\n    O = paint(I, x5)\n    return O"], [1.1, "def solve_4e53814b(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 =0470220111, ONE)\n    x4 = rbind(subgrid, I)\n    x5 = apply(x4, x2)\n    x6 = rbind(colorcount, ZERO)\n    x7 = matcher(x6, EIGHT)\n    x8 =filter(x5, x7)\n    x9 = merge(x8)\n    O = cover(I, x9)\n    return O"], [1.1, "def solve_16586c49(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 =1998(I)\n    x2 = compose(delta, outbox)\n    x3 = mapply(x2, x1)\n    O = fill(x3, EIGHT, x3)\n    return O"], [1.1, "def solve_534ff426(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 = Tb548a(I):\n    x2 = height(I)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [1.1, "def solve_d906852c(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =15(I)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(x3, ONE)\n    x5 = flip(x4)\n    x6 = branch(x5, lefthalf, tophalf)\n    x7 = branch(x5, righthalf, bottomhalf)\n    x8 = branch(x5, hconcat, vconcat)\n    x9 = x6(I)\n    x10 = x7(I)\n    x11 = index(x9, ORIGIN)\n    x12 = shape(x10)\n    x13 = decrement(x12)\n    x14 = index(x10, x13)\n    x15 = mostcolor(I)\n    x16 = mostcolor(I)\n    x17 = palette(I)\n    x18 = remove(x11, x17)\n    x19 = remove(x14, x18)\n    x20 = remove(x16, x19)\n    x21 = first(x20)\n    x22 = replace(x9, x21, x11)\n    x23 = branch(x5, dmirror, identity)\n    x24 = branch(x5, height, width)\n    x25 = x24(I)\n    x26 = astuple(ONE, x25)\n    x27 = canvas(x15, x26)\n    x28 = x23(x27)\n    x29 = replace(x10, x21, x14)\n    x30 = x8(x22, x28)\n    x31 = branch(x5, width, height)\n    x32 = x31(I)\n    x33 = even(x32)\n    x34 = branch(x33, x22, x30)\n    O = x8(x34, x29)\n    return O"], [1.1, "def solve_c73f04cc(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    x1 =801(I)\n    x2 =806(I, TEN)\n    x3 =006(I, THREE)\n    x4 = power(outbox, TWO)\n    x5 = chain(backdrop, x4, x2)\n    x6 = apply(x5, x3)\n    O = fill(x1, EIGHT, x6)\n    return O"], [1.1, "def solve_b6f01a00(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =45(I)\n    x2 = replace(x1, EIGHT, ZERO)\n    x3 = objects(x2, T, F, T)\n    x4 = apply(normalize, x3)\n    x5 = astuple(ONE, THREE)\n    x6 = canvas(EIGHT, x5)\n    x7 = compose(toindices, normalize)\n    x8 = lbind(extract, x4)\n    x9 = rbind(compose, initset)\n    x10 = lbind(compose, flip)\n    x11 = chain(x8, x9, x10)\n    x12 = chain(x8, x9, x11)\n    x13 = fork(contained, toindices, x12)\n    x14 = rbind(shift, RIGHT)\n    x15 = compose(x14, x13)\n    x16 = fork(contained, toindices, x15)\n    x17 = fork(either, x15, x16)\n    x18 = rbind(argmax, rightmost)\n    x19 = compose(x18, x17)\n    x20 = fork(both, x15, x19)\n    x21 = fork(both, x17, x20)\n    x22 = fork( both, x15, x21)\n    x23 = fork(both, x17, x22)\n    x24 =9697069699\n    x25 = mapply(x21, x4)\n    x26 =9697069429(x25)\n    x27 = papply(pair, x25, x26)\n    x28 = difference(x27, x24)\n    O = fill(x6, ONE, x28)\n    return O"], [1.1, "def solve_13adc3e7(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = lbind(rbind,475)\n    x2 = compose(positive, size)\n    x3 = lbind(filter, x1)\n    x4 = rbind(sfilter, x2)\n    x5 = chain(x3, x4, frontiers)\n    x6 = chain(size, dedupe, first)\n    x7 = chain(size, dedupe, last)\n    x8 = fork(greater, x6, x7)\n    x9 = fork(both, x3, x8)\n    x10 = leastcolor(I)\n    x11 = palette(I)\n    x12 = remove(x10, x11)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = switch(I, x13, x14)\n    x16 = interval(650, SIX, ONE)\n    x17 = product(x16, x16)\n    x18 = initset( lbind)\n    x19 = lbind(matcher, first)\n    x20 = compose(x19, last)\n    x21 = lbind(sfilter, x17)\n    x22 = lbind(upscale, x10)\n    x23 = fork(mapply, x20, x22)\n    x24 = lbind(Example output:\n    0520225\n    1111111\n    0211111\n    1111111\n    29110211\n    1111111\n    0411404\n    0119109\n    1414507\n    \"\"\"\n    x1 = compose(positive, size)\n    x2 = lbind(sfilter, x17)\n    x3 = lbind(matcher, first)\n    x4 = chain(x3, x2, mostcolor)\n    x5 = fork(recolor, x23, x4)\n    x6 = mapply(x5, x18)\n    O = paint(x15, x6)\n    return O"], [1.1, "def solve_28f26c8e(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple( LEFT, UP)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(x4, x3)\n    x6 = combine(x3, x5)\n    x7 = fork(either, vline, hline)\n    x8 = x7(x6)\n    x9 = rbind(toobject, I)\n    x10 = chain(numcolors, x9, palette)\n    x11 = matcher(x10, TWO)\n    x12 = extract(x6, x11)\n    x13 =124colors(x12)\n    x14 = matcher(first, x12)\n    x15 = compose(flip, x14)\n    x16 = rbind(sfilter, x15)\n    x17 =12445(x13)\n    x18 =754(x17)\n    x19 = chain(size, x16, x18)\n    x20 = matcher(x19, ONE)\n    x21 = rbind(sfilter, x20)\n    x22 = chain(merge, x21, x16)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x23, x9)\n    O = paint(I, x24)\n    return O"], [1.1, "def solve_d1920951(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =61ba2dee(I):\n    x2 = crop(I, ORIGIN, THREE_BY_THREE)\n    O = switch(x2, EIGHT, x2)\n    return O"], [1.1, "def solve_e47471a6(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =143333(I)\n    x2 =9999(1111, ZERO)\n    x3 = rot90(I)\n    x4 = N090(NEG_ONE)\n    x5 = lefthalf(x1)\n    x6 = righthalf(x1)\n    x7 = branch(x4, x5, x6)\n    x8 = branch(x43, x7, x6)\n    O = x8(x4)\n    return O"], [1.1, "def solve_475fb778(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =173(I)\n    x2 = tophalf(x1)\n    x3 = numcolors(x2)\n    x4 = equality(x3, ONE)\n    x5 = bottomhalf(x1)\n    x6 = numcolors(x5)\n    x7 = equality(x6, ONE)\n    x8 = bottomhalf(x1)\n    x9 = numcolors(x8)\n    x10 = equality(x9, ONE)\n    x11 = hmirror(x2)\n    x12 = lefthalf(x11)\n    x13 = righthalf(x11)\n    x14 = vmirror(x13)\n    x15 = cellwise(x12, x14, ZERO)\n    x16 = replace(x15, ONE, TWO)\n    x17 = replace(x16, ONE, TWO)\n    x18 =54555555 replace(x17, ONE, TWO)\n    x19 =54555555(x18, x17)\n    O = replace(x19, ONE, TWO)\n    return O"], [1.1, "def solve_a3773fdc(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =531498cf0(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.1, "def solve_3a714cc3(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =8870914\n    5887542089\n    5497880446\n    6087416927\n    4be270ca9\n    \"\"\"\n    x2 = subgrid(x1, I)\n    x3 = replace(x2, ZERO, ZERO)\n    O = replace(x3, ONE, ZERO)\n    return O"], [1.1, "def solve_cd3f6f63(I):\n    \"\"\"\n    Example input:\n    2339488566\n    5008487029\n    3098252233\n    5649269524\n    2523314107\n    3177200748\n    1300935459\n    9338520597\n    8739231105\n    9307251048\n    Example output:\n    2867239914\n    5298152104\n    9720512543\n    8859470204\n    4570935524\n    2545139506\n    4216944379\n    2066332531\n    3716019938\n    4217022713\n    \"\"\"\n    O =6aacharacter(I, T)\n    return O"], [1.1, "def solve_4225c37b(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =675(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = frontiers(I)\n    x5 = merge(x4)\n    x6 = toindices(x5)\n    x7 = index(x3, x6)\n    x8 = frontiers(x3)\n    x9 = sfilter(x8, hline)\n    x10 = size(x9)\n    x11 = increment(x10)\n    x12 = increment(x11)\n    x13 = tojvec(x12)\n    x14 = tojvec(x12)\n    x15 =0923411245\n    x16 =119(x13, x15)\n    x17 =197(x5)\n    x18 = cover(x3, x17)\n    x19 =2299(x17)\n    x20 = lbind(shift, x16)\n    x21 = palette(x19)\n    x22 = compose(x20, x21)\n    x23 = fork(combine, x20, x22)\n    x24 = palette(x23)\n    x25 = compose(x23, x24)\n    x26 = mapply(x25, x24)\n    x27 =363(x26)\n    O = replace(x18, x27, x ZERO)\n    return O"], [1.1, "def solve_95804035(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 = shape(I)\n    x2 = subtract(x1, TWO)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = width(I)\n    x6 = partition(I)\n    x7 = matcher(color, ZERO)\n    x8 = decrement(x1)\n    x9 = tojvec(x8)\n    x10 = connect(x7, x9)\n    x11 = height(I)\n    x12 = width(I)\n    x13 = ofcolor(I, ZERO)\n    x14 = tojvec(x12)\n    x15 = connect(x13, x14)\n    x16 = vatching(x3)\n    x17 = shape(I)\n    x18 = subtract(x16, x17)\n    x19 = connect(x18, x3)\n    x20 = fill(I, x9, x19)\n    x21 = toobject(x20, I)\n    x22 =\n    \"\"\"\n    x1 = height(x21)\n    x2 = equality(x22, ONE)\n    x3 = shape(x chain(numcolors, canvas)\n    x4 = canvas(ZERO, x3)\n    x5 = ofcolor(x41, ZERO)\n    x6 = intersection(x5, x5)\n    O = fill(x4, EIGHT, x6)\n    return O"], [1.1, "def solve_b27aabbe(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = toindices(x2)\n    x4 = normalize(x2)\n    x5 = toindices(x2)\n    x6 = center(x4)\n    x7 = intersection(x5, x6)\n    x8 = fill(I, FOUR, x7)\n    x9 = astuple(ZERO, ORIGIN)\n    x10 = initset(x9)\n    x11 = insert(x10, x7)\n    x12 = insert(x11, x10)\n    x13 = tojvec(x12)\n    x14 = toivec(x13)\n    x15 = fill(x8, ZERO, x14)\n    x16 = fill(x15, FOUR, x13)\n    x17 = fill(x16, FOUR, x10)\n    x18 = objects(x17, T, T, T)\n    x19 = merge(x18)\n    x20 = cover(x17, x19)\n    x21 = paint(x20, x19)\n    x22 = astuple(x24, x12)\n    x23 = astuple(x24, x10)\n    x24 = fill(x21, FOUR, x23)\n    x25 = fill(x24, THREE, x12)\n    x26 = fill(x25, TWO, x12)\n    x27 = fill(x26, ONE, x12)\n    x28 = fill(x27, excludes, x12)\n    x29 = fill(x28, THREE, x12)\n    x30 =\n    3777777795\n    7777777729\n    7777777776\n    7777777777\n    7777777777\n    7777777777\n    \"\"\"\n    O = fill(x29, THREE, x10)\n    return O"], [1.1, "def solve_3489bafc(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(TWO, LEFT)\n    x3 = rbind(toobject, I)\n    x4 = compose(x3, vmirror)\n    x5 = rbind(toobject, I)\n    x6 = chain(x2, x5, x4)\n    x7 = rbind(colorcount, x ZERO)\n    x8 = argmax(x1, x7)\n    x9 = x6(x8)\n    x10 = shoot(x8, UNITY)\n    x11 = fill(I, x8, x10)\n    x12 = color(x11)\n    x13 = subgrid(x11, x12)\n    x14 = leastcolor(x13)\n    x15 = mostcolor(x13)\n    x16 = replace(x13, x14, x12)\n    x17 = replace(x16, x15, x13)\n    x18 = compress(x17)\n    x19 = width(x13)\n    x20 = halve(x19)\n    x21 = increment(x20)\n    x22 = width(x13)\n    x23 = halve(x22)\n    x24 = increment(x23)\n    x25 = astuple(x21, x24)\n    x26 = canvas(x15, x25)\n    x27 =THfeca(x20)\n    x28 = tojvec(x27)\n    x29 = matcher(first, x18)\n    x30 = sfilter(x1, x29)\n    x31 = shift(x30, UP)\n    x32 = fill(x26, x14, x31)\n    x33 = shift(x31, DOWN)\n    O = fill(x32, x18, x33)\n    return O"], [1.1, "def solve_c7210437(I):\n    \"\"\"\n    Example input:\n    8479582010\n    1943438367\n    3887830135\n    4365241331\n    6944349252\n    4286521519\n    6911499288\n    3808560338\n    0512192386\n    2532165499\n    Example output:\n    4440871572\n    3470524893\n    0694810421\n    6192686332\n    8126623095\n    3757042040\n    6171410319\n    5337433765\n    1702300385\n    0412093131\n    \"\"\"\n    x1 =3805679(I)\n    x2 =9619265977\n    3401500923\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [1.1, "def solve_fe1501d9(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 =445(I)\n    x2 = fork(combine, vfrontier, hfrontier)\n    x3 = compose(x2, x1)\n    x4 = mapply(x3, x9)\n    O = fill(I, THREE, x4)\n    return O"], [1.1, "def solve_272eced3(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 =3807456(I)\n    x2 = asindices(x1)\n    x3 = objects(I, T, F, F)\n    x4 = toindices(x3)\n    x5 = asindices(I)\n    x6 = corners(x5)\n    x7 = lbind(rbind, difference)\n    x8 = toindices(x7)\n    x9 = rbind(compose, initset)\n    x10 = lbind(rbind, contained)\n    x11 = chain(x9, x10, initset)\n    x12 = lbind(argmin, x5)\n    x13 = chain(first, x12, x11)\n    x14 = asindices(x1)\n    x15 = ofcolor(I, x4)\n    x16 = intersection(x15, x14)\n    x17 = fill(I, ZERO, x16)\n    x18 = fork(recolor, color, x14)\n    x19 = mapply(x18, x15)\n    O = paint(x17, x19)\n    return O"], [1.1, "def solve_dc1fa544(I):\n    \"\"\"\n    Example input:\n    1553101134\n    4154351998\n    4510909288\n    0700532368\n    8414382998\n    1906392434\n    3464232030\n    9969572933\n    1973119234\n    2472644002\n    Example output:\n    4212370281\n    2270654227\n    4739855252\n    9593943315\n    6683293890\n    6386765636\n    8518465399\n    3361060167\n    9873195612\n    3551392904\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x\n    x1 = other(x7, x8)\n    x2 = vmirror(x8)\n    x3 = hconcat(x2, x8)\n    x4 =45(x3)\n    x5 =87(x4)\n    x6 = color(x5)\n    x7 = palette(x3)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, x5)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = partition(x5)\n    x13 =885(x12)\n    x14 =External(x13)\n    x15 = invert(x14)\n    x16 = cover(I, x11)\n    x17 = shoot(x15, UNITY)\n    x18 = shoot(x15, NEG_UNITY)\n    x19 = shoot(x15, UP_RIGHT)\n    x20 = shoot(x15, DOWN_LEFT)\n    x21 = combine(x17, x20)\n    x22 = combine(x18, x21)\n    x23 = fork(combine, vfrontier, hfrontier)\n    x24 = compose(x23, center)\n    x25 = mapply(x24, x22)\n    O = fill(x16, x11, x25)\n    return O"], [1.1, "def solve_c795a5e3(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 =889(I)\n    x2 = shape(I)\n    x3 = partition(I)\n    x4 = argmax(x3, size)\n    x5 = canvas(FIVE, x2)\n    O = paint(x5, x4)\n    return O"], [1.1, "def solve_ac97ce59(I):\n    \"\"\"\n    Example input:\n    1735881192\n    2979563976\n    0471511300\n    1600825090\n    9713671684\n    3955068567\n    0764219348\n    3280974029\n    4858151223\n    8732528262\n    Example output:\n    2096220854\n    5680919120\n    8756056590\n    1480813071\n    7393473693\n    5040964105\n    7513659457\n    0040846634\n    1332997590\n    2776590215\n    \"\"\"\n    x1 =5521c2gravitate(I, x1)\n    x2 = compose(crement, x1)\n    x3 = order(x1, x2)\n    x4 = first(x3)\n    x5 = last(x3)\n    x6 = ofcolor(I, x4)\n    x7 = ofcolor(I, x5)\n    x8 = neighbors(ORIGIN)\n    x9 = intersection(x8, x7)\n    x10 = power(x2, FOUR)\n    x11 = x10(I)\n    x12 = tojvec(x11)\n    x13 = shift(x11, x12)\n    x14 = x10(I)\n    x15 = x5(x14)\n    x16 = combine(x13, x15)\n    x17 = mapply(x2, x16)\n    O = fill(I, FOUR, x17)\n    return O"]]}