{"d56f2372": [[0.3036604937115673, "def solve_2fdca11c(I):\n    x1 = trim(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.32625362023912746, "def solve_f0cd5bf1(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = subgrid(x20, I)\n    x22 = switch(x21, x18, x19)\n    x23 = replace(x22, x18, x4)\n    x24 = lbind(downscale, x23)\n    x25 = fork(upscale, x24, identity)\n    x26 = matcher(x25, x23)\n    x27 = shape(x23)\n    x28 = maximum(x27)\n    x29 = interval(ONE, x28, ONE)\n    x30 = sfilter(x29, x26)\n    x31 = maximum(x30)\n    O = downscale(x23, x31)\n    return O"], [0.32625362023912746, "def solve_3680622d(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = subgrid(x20, I)\n    x22 = switch(x21, x18, x19)\n    x23 = replace(x22, x18, x4)\n    x24 = lbind(downscale, x23)\n    x25 = fork(upscale, x24, identity)\n    x26 = matcher(x25, x23)\n    x27 = shape(x23)\n    x28 = maximum(x27)\n    x29 = interval(ONE, x28, ONE)\n    x30 = sfilter(x29, x26)\n    x31 = maximum(x30)\n    O = downscale(x23, x31)\n    return O"], [0.3346827117477524, "def solve_1739f3e6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_8f188ec6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_7f2902c5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_144aadf8(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_c3395140(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_fd100e8c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_ccf8472b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_1164ac75(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_e4d5d1af(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_5f203451(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.41699831998382725, "def solve_ea8ba0d2(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.41699831998382725, "def solve_455e7882(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.41699831998382725, "def solve_594890e3(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.41699831998382725, "def solve_133e65d4(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.41699831998382725, "def solve_19345a78(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.4559751358985313, "def solve_d0dce391(I):\n    x1 = palette(I)\n    x2 = contained(ONE, x1)\n    x3 = contained(TWO, x1)\n    x4 = branch(x2, UNITY, TWO_BY_TWO)\n    x5 = branch(x3, RIGHT, x4)\n    x6 = fork(combine, vfrontier, hfrontier)\n    x7 = x6(x5)\n    x8 = canvas(ZERO, THREE_BY_THREE)\n    O = fill(x8, FIVE, x7)\n    return O"], [0.47145600561542583, "def solve_38b2c1c4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.4725027588082295, "def solve_8ac5361d(I):\n    x1 = crop(I, ORIGIN, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.4725027588082295, "def solve_5e58c2dd(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.4744327528950218, "def solve_112c94e5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, F, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.47691676185236953, "def solve_4fc70cae(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.47691676185236953, "def solve_b8c8f475(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.4784421882465361, "def solve_3876b872(I):\n    x1 = palette(I)\n    x2 = remove(ONE, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = canvas(x4, THREE_BY_THREE)\n    x6 = colorcount(I, ONE)\n    x7 = decrement(x6)\n    x8 = tojvec(x7)\n    x9 = connect(ORIGIN, x8)\n    x10 = fill(x5, TWO, x9)\n    x11 = initset(UNITY)\n    x12 = equality(x6, FOUR)\n    x13 = branch(x12, x11, x9)\n    O = fill(x10, TWO, x13)\n    return O"], [0.4954775600294643, "def solve_8828c713(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = objects(x1, F, T, T)\n    x3 = first(x2)\n    x4 = vline(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(x1)\n    x7 = objects(x6, T, F, T)\n    x8 = order(x7, uppermost)\n    x9 = apply(color, x8)\n    x10 = dedupe(x9)\n    x11 = size(x10)\n    x12 = rbind(repeat, x11)\n    x13 = apply(x12, x10)\n    O = x5(x13)\n    return O"], [0.49704719435154215, "def solve_5eca2ef1(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_b63bd108(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_4bb7f7d8(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_a5bd8a1b(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_5ecc5d00(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_50edfa6d(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_dc3eba65(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_de6ada43(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5056030890741036, "def solve_73b121be(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.5056030890741036, "def solve_73d1bb26(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.506446800261393, "def solve_733ae75f(I):\n    x1 = trim(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(x2)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(x2)\n    x6 = lefthalf(x5)\n    x7 = bottomhalf(x2)\n    x8 = righthalf(x7)\n    x9 = palette(x4)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x6)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(I)\n    x18 = halve(x17)\n    x19 = canvas(x16, x18)\n    x20 = matcher(first, x16)\n    x21 = compose(flip, x20)\n    x22 = rbind(sfilter, x21)\n    x23 = compose(x22, asobject)\n    x24 = x23(x2)\n    x25 = x23(x2)\n    x26 = x23(x5)\n    x27 = x23(x6)\n    x28 = paint(x19, x27)\n    x29 = paint(x28, x26)\n    x30 = paint(x29, x25)\n    O = paint(x30, x24)\n    return O"], [0.5130794983512649, "def solve_4822fe14(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = rbind(equality, x4)\n    x7 = argmin(x5, x6)\n    x8 = asindices(I)\n    x9 = ofcolor(I, x4)\n    x10 = difference(x8, x9)\n    x11 = fill(I, x7, x10)\n    x12 = frontiers(x11)\n    x13 = sfilter(x12, vline)\n    x14 = difference(x12, x13)\n    x15 = astuple(x14, x13)\n    x16 = apply(size, x15)\n    x17 = increment(x16)\n    O = canvas(x4, x17)\n    return O"], [0.5130794983512649, "def solve_90bda675(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = rbind(equality, x4)\n    x7 = argmin(x5, x6)\n    x8 = asindices(I)\n    x9 = ofcolor(I, x4)\n    x10 = difference(x8, x9)\n    x11 = fill(I, x7, x10)\n    x12 = frontiers(x11)\n    x13 = sfilter(x12, vline)\n    x14 = difference(x12, x13)\n    x15 = astuple(x14, x13)\n    x16 = apply(size, x15)\n    x17 = increment(x16)\n    O = canvas(x4, x17)\n    return O"], [0.5585024261811583, "def solve_e2894090(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5585024261811583, "def solve_f328e5a3(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5585024261811583, "def solve_1bfa5f6f(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5585024261811583, "def solve_074019f0(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5585024261811583, "def solve_2362b36a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5585024261811583, "def solve_a678d957(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = lefthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = righthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5585024261811583, "def solve_1a1b6825(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5652441058672942, "def solve_d6ac3668(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.5652441058672942, "def solve_57cab5d4(I):\n    x1 = objects(I, T, F, T)\n    x2 = valmax(x1, size)\n    x3 = equality(x2, ONE)\n    x4 = equality(x2, TWO)\n    x5 = branch(x3, TWO, ONE)\n    x6 = branch(x4, THREE, x5)\n    x7 = branch(x4, SEVEN, x6)\n    O = canvas(x7, UNITY)\n    return O"], [0.5652441058672942, "def solve_a1072c08(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14,x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.5652441058672942, "def solve_d735ceac(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = color(x3)\n    x5 = remove(ZERO, x1)\n    x6 = other(x5, x4)\n    O = canvas(x6, UNITY)\n    return O"], [0.5652441058672942, "def solve_bf1e8789(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.5652441058672942, "def solve_d86fc22a(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.5652441058672942, "def solve_ac582031(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.5666180912766607, "def solve_f198e5f0(I):\n    x1 = height(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = width(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [0.597602058740802, "def solve_0d28e489(I):\n    x1 = index(I, ORIGIN)\n    x2 = width(I)\n    x3 = halve(x2)\n    x4 = astuple(x3, x2)\n    x5 = canvas(x1, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = compose(x6, last)\n    x8 = fork(recolor, first, x7)\n    x9 = asobject(I)\n    x10 = mapply(x8, x9)\n    O = paint(x5, x10)\n    return O"], [0.5985774392006277, "def solve_67bde86d(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.5985774392006277, "def solve_674435c5(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.5985774392006277, "def solve_55f079e7(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.6181018953185965, "def solve_e38a93e3(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_8b29b504(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_932f29d0(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_39f43a80(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_d8c3e6fd(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_6f204069(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_92771b2e(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_2969f457(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_8beb79b4(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_9d28e95c(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_0f28f83b(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_35a05590(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_80c8d9f2(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_133c5f5f(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_8b3c0e7e(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_9e842b8d(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_2c5f438a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_9d7b5f71(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_0e20c981(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_0e0151cf(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_2e6aabc3(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_859d01f3(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6195255835046275, "def solve_79d908ce(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = objects(I, T, F, T)\n    x5 = totuple(x4)\n    x6 = apply(color, x5)\n    x7 = lbind(sfilter, x6)\n    x8 = lbind(matcher, identity)\n    x9 = chain(size, x7, x8)\n    x10 = valmax(x3, x9)\n    x11 = matcher(x9, x10)\n    x12 = sfilter(x3, x11)\n    x13 = lbind(colorcount, I)\n    x14 = argmin(x12, x13)\n    x15 = ofcolor(I, x14)\n    x16 = recolor(x14, x15)\n    x17 = apply(initset, x16)\n    x18 = remove(x16, x1)\n    x19 = lbind(argmin, x17)\n    x20 = lbind(rbind, manhattan)\n    x21 = compose(x19, x20)\n    x22 = fork(combine, identity, x21)\n    x23 = apply(x22, x18)\n    x24 = matcher(first, x14)\n    x25 = rbind(sfilter, x24)\n    x26 = chain(invert, ulcorner, x25)\n    x27 = fork(shift, identity, x26)\n    x28 = mapply(x27, x23)\n    x29 = normalize(x28)\n    x30 = shape(x29)\n    x31 = canvas(ZERO, x30)\n    O = paint(x31, x29)\n    return O"], [0.6206220158679393, "def solve_cf168828(I):\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [0.6215666154221785, "def solve_53b8c701(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = width(I)\n    x5 = astuple(TEN, x4)\n    x6 = canvas(x3, x5)\n    x7 = interval(ONE, SEVEN, ONE)\n    x8 = invert(TEN)\n    x9 = interval(x8, TEN, ONE)\n    x10 = product(x7, x9)\n    x11 = remove(ORIGIN, x10)\n    x12 = lbind(intersection, x2)\n    x13 = lbind(shift, x2)\n    x14 = compose(x12, x13)\n    x15 = toindices(x2)\n    x16 = lbind(intersection, x15)\n    x17 = lbind(shift, x15)\n    x18 = compose(x16, x17)\n    x19 = compose(size, x14)\n    x20 = compose(size, x18)\n    x21 = fork(equality, x19, x20)\n    x22 = chain(positive, size, x14)\n    x23 = fork(both, x21, x22)\n    x24 = sfilter(x11, x23)\n    x25 = compose(size, x14)\n    x26 = valmax(x24, x25)\n    x27 = compose(size, x14)\n    x28 = matcher(x27, x26)\n    x29 = sfilter(x24, x28)\n    x30 = fork(multiply, first, last)\n    x31 = argmax(x29, x30)\n    x32 = interval(ZERO, TEN, ONE)\n    x33 = lbind(shift, x2)\n    x34 = lbind(multiply, x31)\n    x35 = compose(x33, x34)\n    x36 = mapply(x35, x32)\n    O = paint(x6, x36)\n    return O"], [0.6291436647232063, "def solve_e5047fc3(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.6291436647232063, "def solve_19b78d0e(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_e3525e06(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_234d92b1(I):\n    x1 = dmirror(I)\n    x2 = merge(x1)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_29b70b6f(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_7b1ddecf(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_f2c355ba(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_2b3a5f0c(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_32ba8af4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_d1e1fb82(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.6307531254528715, "def solve_53830926(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x7, x16)\n    x20 = ofcolor(x8, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, THREE, x21)\n    return O"], [0.6307531254528715, "def solve_d4bcbfb2(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x7, x16)\n    x20 = ofcolor(x8, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, THREE, x21)\n    return O"], [0.6411654239156103, "def solve_07e505e0(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [0.6572952903476961, "def solve_dfae6211(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = objects(x3, T, F, T)\n    x5 = merge(x4)\n    O = paint(x1, x5)\n    return O"], [0.6602138625163511, "def solve_11ed16f3(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.6602138625163511, "def solve_e34220f7(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6602138625163511, "def solve_64f482e8(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6602138625163511, "def solve_789869e9(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6602138625163511, "def solve_3d07e1c0(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6662146786568869, "def solve_f3bc96b5(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, vline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = combine(x15, x16)\n    x18 = intersection(x15, x16)\n    x19 = difference(x17, x18)\n    O = fill(x14, THREE, x19)\n    return O"], [0.6674861298852472, "def solve_7b76dcc3(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = mostcolor(I)\n    O = replace(x3, x4, ZERO)\n    return O"], [0.6674861298852472, "def solve_b3740c24(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = mostcolor(I)\n    O = replace(x3, x4, ZERO)\n    return O"], [0.6708942370394477, "def solve_9608d62b(I):\n    x1 = hsplit(I, THREE)\n    x2 = first(x1)\n    x3 = remove(x2, x1)\n    x4 = first(x3)\n    x5 = last(x3)\n    x6 = ofcolor(x4, NINE)\n    x7 = ofcolor(x2, FOUR)\n    x8 = fill(x5, NINE, x6)\n    O = fill(x8, FOUR, x7)\n    return O"], [0.6978401405853463, "def solve_c8371624(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.6978401405853463, "def solve_b3613949(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.6978401405853463, "def solve_8f288431(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.6978401405853463, "def solve_d8a8aaf0(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.6978401405853463, "def solve_e90e7f75(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.6978401405853463, "def solve_fe864351(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.6978401405853463, "def solve_9f2c215d(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.7046776153928492, "def solve_7371de38(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.7046776153928492, "def solve_73dd08fd(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, x1, I)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.7115991669622229, "def solve_c3dfde69(I):\n    x1 = asindices(I)\n    x2 = dmirror(I)\n    x3 = invert(NINE)\n    x4 = papply(pair, I, x2)\n    x5 = lbind(apply, maximum)\n    x6 = apply(x5, x4)\n    x7 = ofcolor(x6, ZERO)\n    x8 = difference(x1, x7)\n    x9 = toobject(x8, x6)\n    x10 = interval(x3, NINE, ONE)\n    x11 = interval(NINE, x3, NEG_ONE)\n    x12 = pair(x10, x11)\n    x13 = lbind(shift, x9)\n    x14 = mapply(x13, x12)\n    O = paint(x6, x14)\n    return O"], [0.7209610573661548, "def solve_1518ceaa(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.7209610573661548, "def solve_1177e324(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.7220296100651739, "def solve_aa5d6398(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(add, height, width)\n    x3 = compose(decrement, x2)\n    x4 = fork(equality, x3, size)\n    x5 = fork(difference, toindices, box)\n    x6 = compose(size, x5)\n    x7 = matcher(x6, ZERO)\n    x8 = sfilter(x1, x4)\n    x9 = difference(x1, x8)\n    x10 = sfilter(x9, x7)\n    x11 = merge(x1)\n    x12 = fill(I, TWO, x11)\n    x13 = merge(x8)\n    x14 = fill(x12, ONE, x13)\n    x15 = merge(x10)\n    O = fill(x14, SIX, x15)\n    return O"], [0.7253714992428528, "def solve_3c989a69(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.7265166129217103, "def solve_296383e7(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.7265166129217103, "def solve_122e3247(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.7265166129217103, "def solve_52ed5e42(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.728594866783758, "def solve_4fbc27bb(I):\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = merge(x1)\n    x7 = color(x6)\n    x8 = shape(I)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(I, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmin(x11, numcolors)\n    x13 = normalize(x12)\n    x14 = toindices(x13)\n    x15 = increment(x4)\n    x16 = increment(x15)\n    x17 = increment(x5)\n    x18 = increment(x17)\n    x19 = astuple(x16, x18)\n    x20 = lbind(shift, x14)\n    x21 = rbind(multiply, x19)\n    x22 = chain(x20, x21, last)\n    x23 = fork(recolor, first, x22)\n    x24 = normalize(x12)\n    x25 = mapply(x23, x24)\n    O = paint(x9, x25)\n    return O"], [0.7328950067132097, "def solve_b3a43dd6(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.7348261017318624, "def solve_20e19bdd(I):\n    x1 = leastcolor(I)\n    x2 = mostcolor(I)\n    x3 = ofcolor(I, x1)\n    x4 = replace(I, x1, x2)\n    x5 = mapply(dneighbors, x3)\n    x6 = mapply(ineighbors, x3)\n    x7 = fill(x4, ONE, x5)\n    O = fill(x7, x1, x6)\n    return O"], [0.7361102977736663, "def solve_07926c0a(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = astuple(SIX, THREE)\n    x6 = astuple(FOUR, EIGHT)\n    x7 = astuple(ONE, TWO)\n    x8 = initset(x5)\n    x9 = insert(x6, x8)\n    x10 = insert(x7, x9)\n    x11 = mapply(x4, x10)\n    O = paint(I, x11)\n    return O"], [0.7361102977736663, "def solve_9ce7a383(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = astuple(SIX, THREE)\n    x6 = astuple(FOUR, EIGHT)\n    x7 = astuple(ONE, TWO)\n    x8 = initset(x5)\n    x9 = insert(x6, x8)\n    x10 = insert(x7, x9)\n    x11 = mapply(x4, x10)\n    O = paint(I, x11)\n    return O"], [0.7361102977736663, "def solve_923575f8(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = astuple(SIX, THREE)\n    x6 = astuple(FOUR, EIGHT)\n    x7 = astuple(ONE, TWO)\n    x8 = initset(x5)\n    x9 = insert(x6, x8)\n    x10 = insert(x7, x9)\n    x11 = mapply(x4, x10)\n    O = paint(I, x11)\n    return O"], [0.739303980806378, "def solve_d524434e(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot180(x3)\n    return O"], [0.739396261410893, "def solve_2b217e60(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.739396261410893, "def solve_6d15cfe0(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, THREE, x3)\n    return O"], [0.739396261410893, "def solve_3a9385f7(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.7408381713528028, "def solve_08b66da5(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [0.7408381713528028, "def solve_0c46a86b(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [0.7408381713528028, "def solve_17da7258(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [0.7410390952301974, "def solve_478c19c1(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.7410390952301974, "def solve_528704f2(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.7410606318002912, "def solve_b6ebc576(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = height(x2)\n    x4 = height(I)\n    x5 = interval(ZERO, x4, x3)\n    x6 = lbind(shift, x2)\n    x7 = compose(x6, toivec)\n    x8 = compose(x7, invert)\n    x9 = fork(combine, x7, x8)\n    x10 = mapply(x9, x5)\n    O = paint(I, x10)\n    return O"], [0.7410974414427098, "def solve_27cae5c9(I):\n    x1 = objects(I, T, F, F)\n    x2 = sizefilter(x1, ONE)\n    x3 = compose(neighbors, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x2)\n    x6 = paint(I, x5)\n    x7 = replace(x6, ONE, SIX)\n    x8 = replace(x7, TWO, SEVEN)\n    x9 = replace(x8, THREE, EIGHT)\n    O = replace(x9, FOUR, NINE)\n    return O"], [0.7411341780448716, "def solve_d66e843d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7411341780448716, "def solve_42d965a8(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7411341780448716, "def solve_b3052bd5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7411341780448716, "def solve_c2251fc1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7411341780448716, "def solve_95310504(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7411341780448716, "def solve_334b0c94(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7411341780448716, "def solve_5424ab54(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7414217191724711, "def solve_f6e9e1f3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7414654147115858, "def solve_b0544453(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7414654147115858, "def solve_0c27658e(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_24218d5b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_0af3fcba(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_ab4ac2ec(I):\n    x1 = initset(ORIGIN)\n    x2 = mostcolor(I)\n    x3 = recolor(x2, x1)\n    x4 = upscale(x3, TWO)\n    x5 = occurrences(I, x4)\n    x6 = lbind(shift, x4)\n    x7 = mapply(x6, x5)\n    O = fill(I, x2, x7)\n    return O"], [0.7414654147115858, "def solve_b257b053(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, FIVE)\n    x3 = compose(backdrop, inbox)\n    x4 = mapply(x3, x2)\n    O = fill(I, TWO, x4)\n    return O"], [0.7414654147115858, "def solve_550ef4ec(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_a4c6b97f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7414654147115858, "def solve_106facec(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, F, F, T)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.7414654147115858, "def solve_c2b166bd(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = subgrid(x2, I)\n    return O"], [0.7414654147115858, "def solve_4e13b567(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(objects, F)\n    x4 = rbind(x3, F)\n    x5 = rbind(x4, T)\n    x6 = lbind(canvas, x1)\n    x7 = compose(x6, shape)\n    x8 = fork(paint, x7, normalize)\n    x9 = compose(x5, x8)\n    x10 = fork(colorfilter, x9, color)\n    x11 = rbind(shift, RIGHT)\n    x12 = rbind(argmax, rightmost)\n    x13 = compose(x12, x10)\n    x14 = fork(remove, x13, x10)\n    x15 = chain(x11, merge, x14)\n    x16 = rbind(argmax, rightmost)\n    x17 = compose(x16, x10)\n    x18 = fork(combine, x17, x15)\n    x19 = fork(shift, x18, ulcorner)\n    x20 = merge(x2)\n    x21 = fill(I, x1, x20)\n    x22 = mapply(x19, x2)\n    O = paint(x21, x22)\n    return O"], [0.7415879821341823, "def solve_bececf5c(I):\n    x1 = asobject(I)\n    x2 = shape(I)\n    x3 = decrement(x2)\n    x4 = index(I, x3)\n    x5 = double(x2)\n    x6 = canvas(x4, x5)\n    x7 = paint(x6, x1)\n    x8 = objects(x7, F, F, T)\n    x9 = first(x8)\n    x10 = shift(x9, LEFT)\n    x11 = vperiod(x10)\n    x12 = hperiod(x10)\n    x13 = neighbors(ORIGIN)\n    x14 = lbind(mapply, neighbors)\n    x15 = power(x14, TWO)\n    x16 = x15(x13)\n    x17 = astuple(x11, x12)\n    x18 = lbind(multiply, x17)\n    x19 = apply(x18, x16)\n    x20 = lbind(shift, x10)\n    x21 = mapply(x20, x19)\n    O = paint(I, x21)\n    return O"], [0.7417579528548929, "def solve_253fda4b(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = prapply(connect, x2, x2)\n    x4 = rbind(greater, ONE)\n    x5 = compose(x4, size)\n    x6 = sfilter(x3, x5)\n    x7 = fork(either, vline, hline)\n    x8 = mfilter(x6, x7)\n    x9 = fill(I, THREE, x8)\n    x10 = leastcolor(I)\n    O = fill(x9, x10, x2)\n    return O"], [0.7418642138333315, "def solve_eb81c715(I):\n    O = switch(I, EIGHT, TWO)\n    return O"], [0.7419294883893283, "def solve_0562bfae(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_f75f3c35(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_00fa8610(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_f7794dd4(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_f497ff22(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x7 = rbind(shoot, UNITY)\n    x8 = rbind(shoot, NEG_UNITY)\n    x9 = fork(combine, x7, x8)\n    x10 = fork(combine, x5, x9)\n    x11 = index(I, x2)\n    x12 = x10(x2)\n    O = fill(I, x11, x12)\n    return O"], [0.7419294883893283, "def solve_c582b6d3(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_45400bf2(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_9466a878(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_5b9e2bb1(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_ff584b8b(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_45da82ec(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_11520515(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork( combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7420260064287781, "def solve_7f22adbe(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.7420260064287781, "def solve_3ab62eee(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.7426909638249383, "def solve_256aaa98(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7426909638249383, "def solve_fabbfa31(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7426909638249383, "def solve_ff55b20e(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7426909638249383, "def solve_facf1b7e(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7426909638249383, "def solve_dfcaedb7(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7428561853443109, "def solve_b6b6ff95(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = argmax(x1, x2)\n    x5 = remove(x3, x1)\n    x6 = other(x5, x4)\n    x7 = subgrid(x6, I)\n    x8 = frontiers(x7)\n    x9 = sfilter(x8, hline)\n    x10 = size(x9)\n    x11 = positive(x10)\n    x12 = branch(x11, dmirror, identity)\n    x13 = x12(I)\n    x14 = color(x6)\n    x15 = ofcolor(x13, x14)\n    x16 = subgrid(x15, x13)\n    x17 = trim(x16)\n    x18 = lefthalf(x17)\n    x19 = vmirror(x18)\n    x20 = asobject(x19)\n    x21 = righthalf(x17)\n    x22 = vmirror(x21)\n    x23 = asobject(x22)\n    x24 = color(x4)\n    x25 = inbox(x15)\n    x26 = backdrop(x25)\n    x27 = fill(x13, x24, x26)\n    x28 = urcorner(x15)\n    x29 = add(x28, UNITY)\n    x30 = shift(x23, x29)\n    x31 = ulcorner(x15)\n    x32 = width(x20)\n    x33 = invert(x32)\n    x34 = tojvec(x33)\n    x35 = add(DOWN, x34)\n    x36 = add(x31, x35)\n    x37 = shift(x20, x36)\n    x38 = combine(x30, x37)\n    x39 = paint(x27, x38)\n    O = x12(x39)\n    return O"], [0.7429519914166027, "def solve_fc9bef9f(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, TWO)\n    x3 = colorfilter(x1, ONE)\n    x4 = lbind(recolor, TWO)\n    x5 = rbind(shoot, UNITY)\n    x6 = chain(x4, x5, lrcorner)\n    x7 = lbind(recolor, ONE)\n    x8 = rbind(shoot, NEG_UNITY)\n    x9 = chain(x7, x8, ulcorner)\n    x10 = mapply(x6, x2)\n    x11 = mapply(x9, x3)\n    x12 = combine(x10, x11)\n    O = paint(I, x12)\n    return O"], [0.7435915732269925, "def solve_69282a7c(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = astuple(x1, ONE)\n    x8 = astuple(ONE, x2)\n    x9 = decrement(x1)\n    x10 = decrement(x2)\n    x11 = toivec(x10)\n    x12 = tojvec(x9)\n    x13 = crop(I, x11, x8)\n    x14 = crop(I, x12, x7)\n    x15 = asobject(x14)\n    x16 = asobject(x13)\n    x17 = vperiod(x15)\n    x18 = hperiod(x16)\n    x19 = astuple(x17, x18)\n    x20 = lbind(multiply, x19)\n    x21 = neighbors(ORIGIN)\n    x22 = mapply(neighbors, x21)\n    x23 = apply(x20, x22)\n    x24 = lbind(shift, x6)\n    x25 = mapply(x24, x23)\n    O = paint(I, x25)\n    return O"], [0.7435915732269925, "def solve_eb241a5b(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = astuple(x1, ONE)\n    x8 = astuple(ONE, x2)\n    x9 = decrement(x1)\n    x10 = decrement(x2)\n    x11 = toivec(x10)\n    x12 = tojvec(x9)\n    x13 = crop(I, x11, x8)\n    x14 = crop(I, x12, x7)\n    x15 = asobject(x14)\n    x16 = asobject(x13)\n    x17 = vperiod(x15)\n    x18 = hperiod(x16)\n    x19 = astuple(x17, x18)\n    x20 = lbind(multiply, x19)\n    x21 = neighbors(ORIGIN)\n    x22 = mapply(neighbors, x21)\n    x23 = apply(x20, x22)\n    x24 = lbind(shift, x6)\n    x25 = mapply(x24, x23)\n    O = paint(I, x25)\n    return O"], [0.744309578111282, "def solve_d0d2f0b1(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.744309578111282, "def solve_29872a4a(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.744309578111282, "def solve_fef5ae9a(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.744309578111282, "def solve_2ece6a78(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.744309578111282, "def solve_f86b12a1(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.7448399954168033, "def solve_8d1b1cb9(I):\n    x1 = vmirror(I)\n    x2 = fgpartition(x1)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = compose(double, halve)\n    x6 = fork(equality, identity, x5)\n    x7 = compose(x6, last)\n    x8 = sfilter(x4, x7)\n    x9 = fill(x1, THREE, x8)\n    O = vmirror(x9)\n    return O"], [0.7454216969955122, "def solve_f8cb861b(I):\n    x1 = objects(I, T, F, T)\n    x2 = compose(backdrop, inbox)\n    x3 = mapply(x2, x1)\n    O = fill(I, EIGHT, x3)\n    return O"], [0.7454776898542618, "def solve_a9f96576(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.7454776898542618, "def solve_a21dad91(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.746036831698095, "def solve_7e389fdd(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.746036831698095, "def solve_f6ff28da(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.7462669862994846, "def solve_e3124d15(I):\n    O = dmirror(I)\n    return O"], [0.7462669862994846, "def solve_c25ee63a(I):\n    O = dmirror(I)\n    return O"], [0.7462669862994846, "def solve_6940f0a4(I):\n    O = dmirror(I)\n    return O"], [0.7462669862994846, "def solve_71c903a3(I):\n    O = dmirror(I)\n    return O"], [0.7464740545096182, "def solve_b64861e5(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_95181f6b(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_735b8a84(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_003b87bb(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_85b95619(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7471075059718015, "def solve_41d498ec(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7471075059718015, "def solve_397c9726(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7474257038308011, "def solve_067ac743(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = rbind(colorcount, ZERO)\n    x3 = lbind(toobject, x1)\n    x4 = compose(x2, x3)\n    x5 = vmirror(I)\n    x6 = hmirror(I)\n    x7 = astuple(x5, x6)\n    x8 = argmin(x7, x4)\n    O = subgrid(x1, x8)\n    return O"], [0.7476233794761621, "def solve_ed253900(I):\n    O = rot180(I)\n    return O"], [0.7476233794761621, "def solve_edc1c9f4(I):\n    O = rot180(I)\n    return O"], [0.7479313014802748, "def solve_01d8ab5d(I):\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7480983828045926, "def solve_e73b6a09(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, last)\n    x5 = fork(recolor, first, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [0.7481170341881848, "def solve_60276051(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7481170341881848, "def solve_4a44dff8(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7482565735643151, "def solve_5cf51ca1(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_6de94bc4(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_140a88ad(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_63874e74(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_6f15edbf(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7484974551407092, "def solve_fb4a3764(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, center)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.7487022635082722, "def solve_31038701(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.7487022635082722, "def solve_f9ccb293(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.7487022635082722, "def solve_a72b0dc1(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.7487022635082722, "def solve_3641dfe6(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.7487035816092084, "def solve_c1c595ec(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.7491103860227947, "def solve_d19cb2a0(I):\n    O = rot270(I)\n    return O"], [0.7491103860227947, "def solve_17c0ebcc(I):\n    O = rot270(I)\n    return O"], [0.7491103860227947, "def solve_edec0ea8(I):\n    O = rot270(I)\n    return O"], [0.7493770004739405, "def solve_b85676d0(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = lbind(recolor, EIGHT)\n    x4 = rbind(ofcolor, x1)\n    x5 = chain(x3, backdrop, x4)\n    x6 = fork(paint, identity, x5)\n    x7 = height(I)\n    x8 = vsplit(I, x7)\n    x9 = mapply(x6, x8)\n    x10 = ofcolor(x9, EIGHT)\n    x11 = dmirror(I)\n    x12 = width(I)\n    x13 = vsplit(x11, x12)\n    x14 = mapply(x6, x13)\n    x15 = dmirror(x14)\n    x16 = ofcolor(x15, EIGHT)\n    x17 = combine(x10, x16)\n    x18 = difference(x17, x2)\n    O = fill(I, EIGHT, x18)\n    return O"], [0.7498499462550435, "def solve_a9048e75(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.7498499462550435, "def solve_b684326d(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.7498499462550435, "def solve_1e0a117f(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.7498847791973963, "def solve_bcf60a28(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.7501495720184375, "def solve_ecb54769(I):\n    O = rot90(I)\n    return O"], [0.7513616932305588, "def solve_4ce1ebb8(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.7516087933992682, "def solve_5361a62a(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.7518753424364076, "def solve_91fadd8d(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7518753424364076, "def solve_75cf0440(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7518753424364076, "def solve_5c8463d7(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7518753424364076, "def solve_6f51c6e6(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7518753424364076, "def solve_6f8cc053(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7518753424364076, "def solve_6c96af8c(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7518753424364076, "def solve_22e8cd1b(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7518753424364076, "def solve_834dcd23(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7518753424364076, "def solve_6f0d7949(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7518753424364076, "def solve_d0c0cc4f(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7545087439926136, "def solve_b7ff2750(I):\n    x1 = objects(I, T, F, T)\n    x2 = palette(I)\n    x3 = mostcolor(I)\n    x4 = remove(x3, x2)\n    x5 = lbind(other, x4)\n    x6 = compose(x5, color)\n    x7 = fork(recolor, x6, outbox)\n    x8 = mapply(x7, x1)\n    x9 = mapply(toindices, x1)\n    x10 = box(x9)\n    x11 = difference(x10, x9)\n    x12 = lbind(argmin, x9)\n    x13 = rbind(compose, initset)\n    x14 = lbind(rbind, manhattan)\n    x15 = chain(x13, x14, initset)\n    x16 = chain(initset, x12, x15)\n    x17 = fork(manhattan, initset, x16)\n    x18 = compose(even, x17)\n    x19 = sfilter(x11, x18)\n    x20 = paint(I, x8)\n    O = fill(x20, FIVE, x19)\n    return O"], [0.7545626265317441, "def solve_d51258c7(I):\n    O = switch(I, FIVE, EIGHT)\n    return O"], [0.7575851656207293, "def solve_509b225a(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = chain(palette, trim, x2)\n    x4 = lbind(contained, THREE)\n    x5 = chain(flip, x4, x3)\n    x6 = mfilter(x1, x5)\n    O = fill(I, FOUR, x6)\n    return O"], [0.7598499462550435, "def solve_77de7638(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.770283578319142, "def solve_121f3043(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.770283578319142, "def solve_54eb9b0f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.770283578319142, "def solve_87d2e36c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7790633012367362, "def solve_49e20542(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7790633012367362, "def solve_9531120e(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7790633012367362, "def solve_954958bb(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7790633012367362, "def solve_c0117211(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x19 = shift(x6, RIGHT)\n    x20 = paint(x8, x19)\n    x21 = shift(x6, UP)\n    x22 = paint(x20, x21)\n    x23 = shift(x6, DOWN)\n    x24 = paint(x22, x23)\n    O = paint(x24, x6)\n    return O"], [0.7790633012367362, "def solve_5963fa73(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7790633012367362, "def solve_13e624fc(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7790633012367362, "def solve_f788d2fb(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7829819910175547, "def solve_f0b995f3(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.7978578277067191, "def solve_6bf26ddb(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = prapply(connect, x1, x1)\n    x3 = rbind(greater, ONE)\n    x4 = compose(x3, size)\n    x5 = sfilter(x2, x4)\n    x6 = fork(either, vline, hline)\n    x7 = mfilter(x5, x6)\n    x8 = fill(I, THREE, x7)\n    O = fill(x8, EIGHT, x1)\n    return O"], [1.0, "def solve_94486b7e(I):\n    O = subgrid(x1, I)\n    return O"], [1.0, "def solve_1dbefc2e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = shape(I)\n    x13 = canvas(x11, x12)\n    x14 = hconcat(I, x13)\n    x15 = objects(x14, F, F, T)\n    x16 = argmin(x15, numcolors)\n    x17 = ofcolor(x16, x7)\n    x18 = mapply(x17, x17)\n    O = fill(x18, x7, x18)\n    return O"], [1.0, "def solve_0d42538d(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(objects, F)\n    x4 = compose(x3, palette)\n    x5 = fork(recolor, x4, identity)\n    x6 = apply(x5, x2)\n    x7 = order(x6, identity)\n    x8 = last(x7)\n    x9 = remove(x8, x7)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = mapply(neighbors, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = ofcolor(I, x11)\n    x17 = mapply(neighbors, x16)\n    x18 = toobject(x17, I)\n    x19 = mostcolor(x18)\n    x20 = rbind(shoot, UNITY)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = fork(combine, x20, x21)\n    x23 = rbind(shoot, UP_RIGHT)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = fork(combine, x23, x24)\n    x26 = fork(combine, x22, x25)\n    x27 = height(I)\n    x28 = astuple(x27, x)\n    x29 = canvas(x11, x28)\n    x30 = fill(x29, x10, x21)\n    x31 = ofcolor(I, x10)\n    x32 = colorfilter(x31, x11)\n    x33 = rbind(adjacent, x32)\n    x34 = mfilter(x32, x33)\n    x35 = mapply(x24, x34)\n    O = fill(x30, ONE, x35)\n    return O"], [1.0, "def solve_9dc45f5a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_d6717fa8(I):\n    x1 = mostcolor(I)\n    x2 =flip(I, x1)\n    x3 = compose(dmirror, dedupe)\n    x4 = fork(combine, x3, x2)\n    x5 = apply(x4, x2)\n    x6 = merge(x5)\n    x7 = lbind(shift, x6)\n    x8 = mapply(x7, x5)\n    O = fill(I, x1, x8)\n    return O"], [1.0, "def solve_a3c6dd54(I):\n    x1 = ofcolor(I, TWO)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = asindices(x4)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = intersection(x5, x6)\n    x8 = fill(x4, EIGHT, x7)\n    x9 = hmirror(x8)\n    x10 = vmirror(x9)\n    x11 = fgpartition(x4)\n    x12 = merge(x11)\n    x13 = paint(x5, x12)\n    x14 = subgrid(x1, x13)\n    O = x3(x14)\n    return O"], [1.0, "def solve_69c8ab9f(I):\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = astuple(x2, x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = rbind(shoot, UP)\n    x8 = mapply(x7, x3)\n    x9 = combine(x6, x8)\n    x10 = fill(x6, ONE, x9)\n    x11 = hmirror(x10)\n    O = vconcat(x110, x11)\n    return O"], [1.0, "def solve_7fe948e3(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_611dcf26(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = size(x4)\n    x6 = width(I)\n    x7 = multiply(x6, x5)\n    x8 = multiply(UNITY, x7)\n    x9 = canvas(ZERO, x8)\n    x10 = multiply(x6, x5)\n    x11 = decrement(x10)\n    x12 = lbind(astuple, x11)\n    x13 = rbind(shoot, UP_RIGHT)\n    x14 = compose(last, last)\n    x15 = chain(x13, x12, x14)\n    x16 = fork(recolor, first, x15)\n    x17 = mapply(x16, x4)\n    O = paint(x9, x17)\n    return O"], [1.0, "def solve_bd4649c3(I):\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = rbind(shoot, UP)\n    x9 = mapply(x8, x7)\n    O = fill(I, x10, x9)\n    return O"], [1.0, "def solve_3b02d314(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_0bb5ee89(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_36209a08(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = normalize(x2)\n    x4 = ulcorner(x2)\n    x5 = subtract(x4, x2)\n    x6 = shape(x2)\n    x7 = add(x6, TWO_BY_ZERO)\n    O = crop(I, x5, x7)\n    return O"], [1.0, "def solve_6d5a5b9e(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_c1346812(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [1.0, "def solve_63df7b8e(I):\n    x1 = asobject(I)\n    x2 = frontiers(I)\n    x3 = merge(x2)\n    x4 = difference(x1, x3)\n    x5 = mostcolor(x4)\n    x6 = objects(I, T, F, F)\n    x7 = color(x3)\n    x8 = matcher(color, x7)\n    x9 = matcher(color, x5)\n    x10 = fork(astuple, x8, x9)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x6, x11)\n    x13 = merge(x12)\n    x14 = palette(x13)\n    x15 = lbind(mfilter, x12)\n    x16 = lbind(matcher, color)\n    x17 = compose(x15, x16)\n    x18 = apply(x17, x14)\n    x19 = fork(either, vline, hline)\n    x20 = lbind(prapply, connect)\n    x21 = fork(x20, identity, identity)\n    x22 = apply(x21, x18)\n    x23 = rbind(sfilter, x19)\n    x24 = chain(merge, x23, x22)\n    x25 = fork(recolor, color, x24)\n    x26 = mapply(x25, x24)\n    x27 = paint(I, x26)\n    O = paint(x27, x3)\n    return O"], [1.0, "def solve_4e65a342(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, le662)\n    x6 = branch(x4, bottomhalf, rIGHT)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [1.0, "def solve_fca4e4b1(I):\n    x1 = hconcat(I, I)\n    x2 = vconcat(x1, x1)\n    x3 = asindices(x2)\n    x4 = mostcolor(I)\n    x5 = ofcolor(x2, x4)\n    x6 = difference(x3, x5)\n    x7 = mapply(ineighbors, x6)\n    O = underfill(x2, EIGHT, x7)\n    return O"], [1.0, "def solve_2a8560d4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = rbind(remove, x1)\n    x4 = rbind(remove, x2)\n    x5 = compose(x3, x4)\n    x6 = compose(x5, color)\n    x7 = fork(combine, identity, x6)\n    x8 = apply(x7, x1)\n    O = pair(x8, x8)\n    return O"], [1.0, "def solve_fadd1d31(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_f524ec6a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_5aac3c20(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_51a51c36(I):\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, shape)\n    x3 = sfilter(I, x2)\n    x4 = lbind(apply, numcolors)\n    x5 = chain(x4, first, shape)\n    x6 = objects(x3, T, F, F)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = matcher(first, x8)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x2, x10)\n    x12 = lbind(recolor, x8)\n    x13 = compose(x12, dmirror)\n    x14 = fork(combine, x13, x13)\n    x15 = objects(x11, x14, Faint)\n    x16 = paint(x15, x11)\n    x17 = order(x16, identity)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = color(x18)\n    x21 = palette(x18)\n    x22 = remove(x8, x21)\n    x23 = other(x22, x20)\n    x24 = rbind(colorcount, x20)\n    x25 = argmin(x12, x24)\n    x26 = first(x25)\n    x27 = other(x25, x26)\n    x28 = sfilter(x24, x27)\n    x29 = size(x28)\n    x30 = positive(x29)\n    x31 = branch(x30, x22, x25)\n    x32 = x31(x3333)\n    x33 = x31(x39)\n    x34 = ofcolor(x33, x20)\n    x35 = andmirror(x34)\n    x36 = ofcolor(x33, x22)\n    x37 = intersection(x35, x36)\n    x38 = mapply(x28, x37)\n    O = paint(x32, x38)\n    return O"], [1.0, "def solve_6fbe61ea(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_bb1cc91f(I):\n    x1 = index(I, ORIGIN)\n    x2 = width(I)\n    x3 = halve(x2)\n    x4 = astuple(x3, x2)\n    x5 = canvas(x1, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = compose(x6, last)\n    x8 = fork(recolor, first, x7)\n    x509 = asobject(I)\n    x10 = mapply(x8, x9)\n    O = paint(x5, x10)\n    return O"], [1.0, "def solve_b4faadb6(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_8bf7d21d(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_42763990(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = compose(x5, color)\n    x7 = compose(double, x4)\n    x8 = lbind(prapply, manhattan)\n    x9 = fork(x8, identity, identity)\n    x10 = lbind(remove, ZERO)\n    x11 = compose(x10, x9)\n    x12 = rbind(branch, NEG_TWO)\n    x13 = fork(x12, positive, decrement)\n    x14 = chain(x13, maximum, x11)\n    x15 = fork(contained, x44, x14)\n    x16 = compose(x15, x6)\n    x17 = sfilter(x2, x16)\n    x18 = fork(add, leftmost, rightmost)\n    x19 = chain(toivec, invert, x18)\n    x20 = fork(shift, x17, x19)\n    x21 = compose(x5, x20)\n    x22 = fork(difference, x21, box)\n    x23 = fork(recolor, x21, x22)\n    x24 = mapply(x23, x4)\n    O = paint(I, x24)\n    return O"], [1.0, "def solve_3cf864c0(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_4a1a6288(I):\n    x1 =906934455\n    O = subgrid(x1, I)\n    return O"], [1.0, "def solve_cc89f781(I):\n    x1 = index(I, ORIGIN)\n    x2 = equality(x1, THREE)\n    x3 = height(I)\n    x4 = decrement(x3)\n    x5 = toivec(x4)\n    x6 = branch(x2, x5, ORIGIN)\n    x7 = equality(x1, TWO)\n    x8 = shape(I)\n    x9 = decrement(x8)\n    x10 = width(I)\n    x11 = decrement(x10)\n    x12 = tojvec(x11)\n    x13 = branch(x7, x9, x12)\n    x14 = branch(x7, x9, x13)\n    x15 = astuple(x6, x13)\n    x16 = astuple(x14, x13)\n    x17 = portrait(x16)\n    x18 = branch(x17, x9, x13)\n    x19 = canvas(x8, x15)\n    x20 = matcher(first, FOUR)\n    x21 = compose(flip, x20)\n    x22 = rbind(sfilter, x21)\n    x23 = compose(x22, asobject)\n    x24 = apply(x23, x19)\n    x25 = difference(x24, x24)\n    O = fill(x19, FOUR, x25)\n    return O"], [1.0, "def solve_3e4336b1(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_486b1415(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_2e4f6375(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = size(x9)\n    x11 = equality(x10, ONE)\n    x12 = branch(x11, dmirror, identity)\n    x13 = x12(I)\n    x14 = last(x13)\n    x15 = mostcolor(x14)\n    x16 = trim(x14)\n    x17 = last(x16)\n    x18 = repeat(x17, ONE)\n    x19 = x12(x18)\n    x20 = branch(x11, height, width)\n    x21 = x20(x19)\n    x22 = astuple(ONE, x21)\n    x23 = multiply(x22, x37)\n    x24 = decrement(x23)\n    x25 = branch(x11, identity, vmirror)\n    x26 = x25(x12)\n    x27 = crop(x26, ORIGIN, x22)\n    x28 = last(x27)\n    x29 = remove(x28, x27)\n    x30 = first(x29)\n    x31 = last(x27)\n    x32 = lefthalf(x31)\n    x33 = righthalf(x32)\n    x34 = asobject(x33)\n    x35 = righthalf(x34)\n    x36 = vmirror(x35)\n    x37 = shift(x36, UNITY)\n    O = paint(x22, x37)\n    return O"], [1.0, "def solve_ff7ea9c3(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_223f72f2(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = compose(x5, color)\n    x7 = compose(double, x4)\n    x8 = rbind(apply, x7)\n    x9 = lbind(lbind, gravitate)\n    x10 = compose(x8, x9)\n    x11 = fork(sfilter, identity, x10)\n    x12 = chain(size, x8, x11)\n    x13 = matcher(x12, TWO)\n    x14 = colorfilter(x1, TWO)\n    x15 = difference(x1, x14)\n    x16 = compose(normalize, first)\n    x17 = chain(ulcorner, x16, x12)\n    x18 = fork(shift, identity, x17)\n    x19 = normalize(x15)\n    x20 = matcher(x18, x19)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x1, x21)\n    x23 = argmax(x22, size)\n    x24 = color(x23)\n    x25 = toindices(x23)\n    x26 = objects(I, T, F, T)\n    x27 = rbind(shift, x24)\n    x28 = compose(x27, toindices)\n    x29 = fork(recolor, x28, identity)\n    x30 = mapply(x29, x26)\n    O = paint(I, x30)\n    return O"], [1.0, "def solve_363203bf(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, d687)\n    x9 = compose(flip, x8)\n    x10 = extract(x7, x9)\n    O = x10(I)\n    return O"], [1.0, "def solve_3cac3f7e(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_53925e3f(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_2e2dcf42(I):\n    x1 = height(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = interval(x4, x5, FOUR)\n    x7 = repeat(x6, ONE)\n    x8 = merge(x7)\n    O = fill(I, ZERO, x8)\n    return O"], [1.0, "def solve_591311fb(I):\n    x1 = shape(I)\n    x2 = contained(ONE, x1)\n    x3 = branch(x2, T, F, T)\n    O = canvas(x3, UNITY)\n    return O"], [1.0, "def solve_44a40ef0(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = branch(x2, ONE, SEVEN)\n    O = canvas(x3, FIVE)\n    return O"], [1.0, "def solve_07d532b2(I):\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = order(x1, x2)\n    x4 = lbind(apply, last)\n    x5 = chain(x4, mostcolor, x2)\n    x6 = fork(recolor, x5, x2)\n    x7 = mapply(x6, x3)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_ca14f3bf(I):\n    x1 = asobject(I)\n    x2 = shift(x1,3333)\n    O = paint(I, x2)\n    return O"], [1.0, "def solve_e80ff72a(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = size(x4)\n    x6 = width(I)\n    x7 = multiply(x6, x5)\n    x8 = multiply(UNITY, x7)\n    x9 = canvas(ZERO, x8)\n    x10 = multiply(x6, x5)\n    x11 = decrement(x10)\n    x12 = lbind(astuple, x11)\n    x13 = rbind(shoot, UP_RIGHT)\n    x14 = compose(last, last)\n    x15 = chain(x13, x12, x14)\n    x16 = fork(recolor, first, x15)\n    x17 = mapply(x16, x4)\n    O = paint(x9, x17)\n    return O"], [1.0, "def solve_80446397(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_65c4b6e2(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_0f25b3e5(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_caddcd22(I):\n    x1 = lbind(add, DOWN)\n    x2 = compose(x1, size)\n    x3 = fork(equality, toindices, x2)\n    x4 = rbind(add, RIGHT)\n    x5 = compose(x4, width)\n    x6 = fork(equality, toindices, x5)\n    x7 = fork(add, size, x6)\n    x8 = compose(x3, x7)\n    x9 = extract(x1, x8)\n    x10 = fork(insert, vupscale, toindices)\n    x11 = compose(x10, initset)\n    x12 = fork(insert, product, x11)\n    x13 = fork(intersection, x12, backdrop)\n    x14 = mapply(x13, x9)\n    O = fill(I, ZERO, x14)\n    return O"], [1.0, "def solve_ae48ed92(I):\n    x1 = branch(I, x2, x3)\n    x2 = x1(I)\n    x3 = decrement(x2)\n    x4 = tojvec(x3)\n    x5 = shoot(x4, DOWN_LEFT)\n    x6 = intersection(x5, x2)\n    x7 = fill(I, THREE, x6)\n    x8 = objects(x7, T, F, F)\n    x9 = fork(combine, vfrontier, hfrontier)\n    x10 = mapply(x9, x8)\n    O = fill(x7, FOUR, x10)\n    return O"], [1.0, "def solve_8e8005c4(I):\n    x1 = vmirror(I)\n    x2 = matcher(identity, ZERO)\n    x3 = rbind(sfilter, x2)\n    x4 = compose(size, x3)\n    x5 = apply(x4, x1)\n    x6 = dedupe(x5)\n    x7 = rot90(x6)\n    x8 = dedupe(x7)\n    x9 = rot270(x8)\n    x10 = hconcat(x7, x4)\n    x11 = hconcat(x9, x4)\n    O = vconcat(x10, x11)\n    return O"], [1.0, "def solve_62eebec0(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_d26aa7ae(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = objects(x1, T, F, F)\n    x4 = power(normalize, THREE)\n    x5 = fork(add, height, width)\n    x6 = x5(x4)\n    x7 = astuple(ONE, x6)\n    x8 = mostcolor(I)\n    x9 = canvas(x8, x7)\n    x10 = asobject(x1)\n    x11 = paint(x9, x10)\n    x12 = rot90(x11)\n    x13 = rot180(x11)\n    x14 = rot270(x11)\n    x15 = hconcat(x12, x4)\n    x16 = hconcat(x13, x8)\n    x17 = vconcat(x15, x9)\n    x18 = vconcat(x16, x10)\n    O = rot90(x18)\n    return O"], [1.0, "def solve_f408d12c(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = UNITY(x2)\n    x4 = shoot(x3, UP_RIGHT)\n    x5 = shoot(x3, UNITY)\n    x6 = recolor(x1, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = mapply(x7, x4)\n    x9 = underfill(I, x1, x8)\n    x10 = objects(x9, T, F, T)\n    x11 = colorfilter(x10, x1)\n    x12 = rbind(bordering, I)\n    x13 = mfilter(x11, x12)\n    O = mfilter(x11, x1)\n    return O"], [1.0, "def solve_63f12f42(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_d974ba31(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [1.0, "def solve_4acce88b(I):\n    x1 = mostcolor(I)\n    x2 = replace(I, x1, ZERO)\n    x3 = apply(d23, x2)\n    x4 = branch(x3, x2, x2)\n    x5 = x4(x4)\n    x6 = dmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = lbind(apply, maximum)\n    x9 = apply(x8, x7)\n    x10 = cmirror(x9)\n    x11 = papply(pair, x9, x10)\n    x12 = apply(x11, x7)\n    x13 = hmirror(x12)\n    x14 = papply(pair, x12, x13)\n    x15 = apply(x8, x14)\n    x16 =vdmirror(x15)\n    x17 = papply(pair, x15, x16)\n    x18 = apply(x8, x17)\n    x19 = hmirror(x18)\n    O = papply(pair, x18, x19)\n    return O"], [1.0, "def solve_fe0401ac(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_f57764ab(I):\n    x1 = asindices(I)\n    x2 = objects(I, T, F, F)\n    x3 = fork(multiply, sign, identity)\n    x4 = lbind(apply, x3)\n    x5 = chain(even, maximum, x4)\n    x6 = lbind(sfilter, x1)\n    x7 = fork(add, first, last)\n    x8 = rbind(remove, x2)\n    x9 = compose(center, last)\n    x10 = fork(subtract, first, x9)\n    x11 = compose(x5, x10)\n    x12 = lbind(rbind, equality)\n    x13 = lbind(argmin, x2)\n    x14 = chain(x7, x4, x10)\n    x15 = lbind(lbind, astuple)\n    x16 = lbind(rbind, astuple)\n    x17 = lbind(compose, x11)\n    x18 = lbind(compose, x14)\n    x19 = compose(x18, x15)\n    x20 = compose(x18, x16)\n    x21 = compose(x13, x19)\n    x22 = rbind(compose, x21)\n    x23 = lbind(lbind, valmin)\n    x24 = rbind(compose, x19)\n    x25 = chain(x24, x23, x8)\n    x26 = lbind(fork, greater)\n    x27 = fork(x26, x25, x20)\n    x28 = chain(x6, x17, x16)\n    x29 = chain(x6, x22, x12)\n    x30 = fork(intersection, x28, x29)\n    x31 = compose(x6, x27)\n    x32 = fork(intersection, x30, x31)\n    x33 = fork(recolor, color, x32)\n    x34 = mapply(x33, x2)\n    O = paint(I, x34)\n    return O"], [1.0, "def solve_71bf8673(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = dmirror(I)\n    x5 = hconcat(x4, I)\n    x6 = hmirror(x5)\n    x7 = vconcat(x5, x6)\n    x8 = vconcat(x7, x7)\n    O = compress(x8)\n    return O"], [1.0, "def solve_f9bb9db6(I):\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, size)\n    x3 = rbind(compose, asobject)\n    x4 = lbind(rbind, sfilter)\n    x5 = chain(x4, x3, x2)\n    x6 = lbind(apply, multiply)\n    x7 = chain(x6, toivec, x5)\n    x8 = fork(add, identity, x7)\n    x9 = fork(222, x8, identity)\n    x10 = compose(x7, x9)\n    x11 = power(x10, FOUR)\n    x12 = x11(I)\n    x13 = objects(x12, T, F, F)\n    x14 = colorfilter(x13, ZERO)\n    x15 = rbind(bordering, I)\n    x16 = compose(flip, x15)\n    x17 = mfilter(x14, x16)\n    x18 = hperiod(x17)\n    x19 = rbind(multiply, THREE)\n    x20 = apply(x19, x15)\n    x21 = rbind(multiply, FOUR)\n    x22 = apply(x21, x15)\n    x23 = merge(x2)\n    x24 = lbind(hperiod, x23)\n    x25 = apply(x24, x15)\n    x26 = lbind(shift, x17)\n    x27 = mapply(x26, x25)\n    x28 = apply(x27, x22)\n    O = fill(x12, FOUR, x28)\n    return O"], [1.0, "def solve_9375d687(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, lefthalf, tophalf)\n    x9 = branch(x7, righthalf, bottomhalf)\n    x10 = branch(x7, hconcat, vconcat)\n    x11 = x9(I)\n    x12 = x10(I)\n    x13 = color(x11)\n    x14 = color(x12)\n    x15 = palette(x11)\n    x16 = remove(x13, x15)\n    x17 = palette(x12)\n    x18 = remove(x16, x17)\n    x19 = merge(x18)\n    x20 = palette(x11)\n    x21 = other(x20, x19)\n    x22 = palette(x12)\n    x23 = other(x22, x19)\n    x24 = colorcount(x11, x13)\n    x25 = colorcount(x12, x13)\n    x26 = greater(x24, x25)\n    x27 = branch(x26, identity, vmirror)\n    x28 = x27(x11)\n    x29 = ofcolor(x28, x13)\n    x30 = subgrid(x29, x28)\n    x31 = x27(x30)\n    x32 = replace(x31, x13, x24)\n    O = x27(x32)\n    return O"], [1.0, "def solve_37b573ad(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_1b49b1b4(I):\n    x1 = normalize(I)\n    x2 = rot90(x1)\n    x3 = rot180(x1)\n    x4 = rot270(x1)\n    x5 = hconcat(x2, x4)\n    x6 = hconcat(x3, x5)\n    O = vconcat(x6, x1)\n    return O"], [1.0, "def solve_2d0479a8(I):\n    x1 = partition(I)\n    x2 = mostcolor(I)\n    x3 = ofcolor(I, x2)\n    x4 = switch(I, THREE, FOUR)\n    x5 = mapply(dneighbors, x1)\n    x6 = mapply(ineighbors, x1)\n    x7 = fill(x4, SIX, x5)\n    O = fill(x7, FOUR, x6)\n    return O"], [1.0, "def solve_7527d7e2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_232c4c96(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_ba5ca3b4(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(vfrontier, x2)\n    x4 = underfill(I, EIGHT, x3)\n    x5 = hconcat(x4, x4)\n    O = vconcat(x5, x5)\n    return O"], [1.0, "def solve_11ea01f1(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_cfe2fe7c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_703585f6(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x3 = minimum(x3)\n    x4 = divide(x4, x3)\n    x5 = x2(I, x4)\n    x6 = interval(ONE, x5, ONE)\n    x7 = multiply(x3, x6)\n    x8 = rbind(apply, x7)\n    x9 = lbind(mostcolor, I)\n    x10 = compose(x8, x9)\n    x11 = numcolors(I)\n    x12 = matcher(x10, x11)\n    x13 = sfilter(x2, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x6)\n    O = paint(I, x15)\n    return O"], [1.0, "def solve_301ad0f6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(ORIGIN, x17)\n    x24 = rbind(x23, x22)\n    x25 = divide(x27, x22)\n    x26 =Esfilter(x12, x25)\n    x27 = rbind(multiply, x15)\n    x28 = apply(x27, x26)\n    x29 = rbind(toobject, I)\n    x30 = lbind(shift, I)\n    x31 = mapply(x30, x29)\n    x32 = apply(x27, x26)\n    x33 = cover(I, x21)\n    x34 = fill(x32, x3, x33)\n    x35 = shift(x31, x24)\n    x36 = ofcolor(x35, x7)\n    O = fill(x34, x3, x36)\n    return O"], [1.0, "def solve_1f24bd4f(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_6fa34b4a(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_ee6c52c5(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_eb191d2e(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = decrement(x1)\n    x4 = astuple(x3, x2)\n    x5 = crop(I, ORIGIN, x4)\n    x6 = hmirror(x5)\n    x7 = vconcat(I, x6)\n    x8 = double(x3)\n    x9 = astuple(x8, x2)\n    x10 = crop(x7, DOWN, x9)\n    O = vconcat(x7, x10)\n    return O"], [1.0, "def solve_74516643(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = fork(equality, toindices, backdrop)\n    x5 = mfilter(x3, x4)\n    x6 = color(I)\n    x7 = fill(I, x6, x5)\n    O = fill(x7, ONE, x13)\n    return O"], [1.0, "def solve_ebdb7d81(I):\n    x1 = compose(first, last)\n    x2 = order(x1, sign)\n    x3 = apply(mostcommon, x2)\n    x4 = size(x3)\n    x5 = interval(ZERO, x4, ONE)\n    x6 = apply(tojvec, x5)\n    x7 = mpapply(shift, x3, x6)\n    x8 = canvas(ZERO, x4)\n    x9 = paint(x8, x7)\n    O = rot90(x9)\n    return O"], [1.0, "def solve_2f46560c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_e1442946(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x9)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x24, x23)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_790638c0(I):\n    x1 = rot270(I)\n    x2 = matcher(identity, ZERO)\n    x3 = rbind(sfilter, x2)\n    x4 = compose(flip, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = apply(x5, x1)\n    x7 = rbind(repeat, x6)\n    x8 = apply(x7, x4)\n    O = cmirror(x8)\n    return O"], [1.0, "def solve_fd464682(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_73b52bce(I):\n    x1 = palette(I)\n    x2 = intersection(x1, x1)\n    x3 = colorcount(I, ZERO)\n    x4 = outbox(x3)\n    x5 = intersection(x2, x4)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 = ofcolor(I, x6)\n    x9 = ofcolor(I, x7)\n    x10 = rbind(shoot, UNITY)\n    x11 = rbind(shoot, NEG_UNITY)\n    x12 = rbind(shoot, DOWN_LEFT)\n    x13 = rbind(shoot, UP_RIGHT)\n    x14 = fork(combine, x10, x11)\n    x15 = fork(combine, x12, x13)\n    x16 = fork(combine, x14, x15)\n    x17 = rbind(shoot, UNITY)\n    x18 = rbind(shoot, NEG_UNITY)\n    x19 = rbind(shoot, DOWN_LEFT)\n    x20 = rbind(shoot, UP_RIGHT)\n    x21 = fork(combine, x17, x20)\n    x22 = fork(combine, x18, x21)\n    x23 = fork(combine, initset, x22)\n    x24 = fork(rapply, x23, identity)\n    x25 = compose(first, x24)\n    x26 = mapply(x25, x6)\n    x27 = fill(I, x6, x26)\n    x28 = intersection(x8, x27)\n    O = fill(x22, x13, x28)\n    return O"], [1.0, "def solve_c815806e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = hsplit(I, x2)\n    x4 = shape(x3)\n    x5 = apply(size, x4)\n    x6 = argmax(x5, x2)\n    O = canvas(x6, x4)\n    return O"], [1.0, "def solve_033d3e06(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_26bc98a3(I):\n    x1 = warped(I, TEN)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [1.0, "def solve_b472da60(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, DOWN)\n    x4 = mapply(I, x3)\n    x5 = fill(I, x1, x4)\n    x6 = mapply(size, x3)\n    x7 = fill(x5, x1, x6)\n    O = replace(x7, x1, x1)\n    return O"], [1.0, "def solve_5ce3dba3(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_c4828f9e(I):\n    x1 = shape(I)\n    x2 = divide(x1, THREE)\n    x3 = first(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = last(x5)\n    x7 = shift(x6, x3)\n    O = paint(x4, x7)\n    return O"], [1.0, "def solve_fc592e6e(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    x5 = color(x4)\n    x6 = palette(x1)\n    x7 = other(x6, x5)\n    x8 = neighbors(UNITY)\n    O = initset(x17)\n    return O"], [1.0, "def solve_13ffe7f5(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_33a70dd8(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_4c531e60(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_7a4e1a69(I):\n    x1 = asindices(I)\n    x2 = backdrop(x1)\n    O = toobject(x2, I)\n    return O"], [1.0, "def solve_25dc8acb(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_13c4a6a0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = interval(ERO, FIVE, ONE)\n    x8 = downscale(x6, x4)\n    x9 = lbind(shift, x8)\n    x10 = mapply(x9, x7)\n    O = fill(x5, FIVE, x10)\n    return O"], [1.0, "def solve_40c0af53(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_57eafea6(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = fork(multiply, height, width)\n    x7 = width(I)\n    x8 = rbind(repeat, x7)\n    x9 = width(I)\n    x10 = subtract(x8, x9)\n    x11 = normalize(x5)\n    x12 = multiply(x4, x11)\n    x13 = shift(x15, x12)\n    x14 = dmirror(x13)\n    x15 = objects(x14, T, F, T)\n    x16 = apply(toindices, x15)\n    x17 = ofcolor(x16, x1)\n    x18 = mapply(vfrontier, x17)\n    x19 = mapply(hfrontier, x17)\n    x20 = toindices(x13)\n    x21 = box(x20)\n    x22 = difference(x19, x21)\n    x23 = x17(x22)\n    x24 = color(x3)\n    x25 = palette(x23)\n    x26 = other(x25, x24)\n    x27 = subgrid(x23, I)\n    x28 = ofcolor(x27, x26)\n    x29 = fill(x27, x26, x28)\n    O = replace(x29, x26, x1)\n    return O"], [1.0, "def solve_e23c7ee1(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_5f3e61cd(I):\n    x1 = shape(I)\n    x2 = ofcolor(I, TWO)\n    x3 = mapply(vfrontier, x2)\n    x4 = underfill(I, ZERO, x3)\n    x5 = hconcat(x4, x4)\n    O = vconcat(x5, x5)\n    return O"], [1.0, "def solve_79fc7726(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_d0cff705(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_31e4653b(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_32798bd7(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [1.0, "def solve_07514628(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = fork(equality, toindices, identity)\n    x5 = sfilter(x3, x4)\n    x6 = mapply(dneighbors, x5)\n    x7 = index(I, ORIGIN)\n    x8 = subgrid(x7, I)\n    x9 = trim(x8)\n    O = replace(x9, ONE, x7)\n    return O"], [1.0, "def solve_f3f7575b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, identity,93)\n    x3 = branch(x1, decrement, height)\n    x4 = x3(I)\n    x5 = astuple(ONE, x4)\n    x6 = x2(I)\n    x7 = crop(x6, ORIGIN, x5)\n    x8 = apply(dedupe, x7)\n    O = x2(x8)\n    return O"], [1.0, "def solve_d6a1b95a(I):\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = rbind(shoot, UP)\n    x5 = mapply(x4, x3)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = merge(x6)\n    x8 =shift(x7, UP)\n    x9 = fill(I, THREE, x3)\n    O = fill(x9, FOUR, x8)\n    return O"], [1.0, "def solve_3ece3cce(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_badfee06(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_24930bab(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_fea790c1(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_692d317e(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_87e2a8b7(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_880cbfb3(I):\n    x1 = asobject(I)\n    x2 = height(I)\n    x3 = decrement(x2)\n    x4 = astuple(x3, ONE)\n    x5 = halve(x4)\n    x6 = width(I)\n    x7 = halve(x6)\n    x8 = ulcorner(x7)\n    x9 = rbind(shoot, x8)\n    x10 = mapply(x9, x5)\n    x11 = canvas(ZERO, x4)\n    O = fill(x11, FOUR, x10)\n    return O"], [1.0, "def solve_c00ab3e7(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_1941e2ac(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = matcher(color, x4)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x2, x6)\n    x8 = sizefilter(x7, ONE)\n    x9 = merge(x8)\n    x10 = fill(I, x4, x9)\n    x11 = merge(x8)\n    x12 = fill(x10, TWO, x11)\n    x13 = merge(x8)\n    x14 = fill(x12, ONE, x13)\n    x15 = compress(x14)\n    O = fill(x15, FOUR, x9)\n    return O"], [1.0, "def solve_f542ce7e(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = objects(I, T, F, T)\n    x5 = lbind(colorfilter, x4)\n    x6 = compose(size, x5)\n    x7 = matcher(x6, TWO)\n    x8 = colorfilter(x4, TWO)\n    x9 = rbind(adjacent, x8)\n    x10 = mfilter(x8, x9)\n    x11 = objects(I, T, F, T)\n    x12 = sfilter(x11, x7)\n    x13 = merge(x12)\n    x14 = rbind(adjacent, x13)\n    x15 = mfilter(x14, x7)\n    x16 = sfilter(x13, x15)\n    x17 = shape(x16)\n    x18 = subtract(x17, x16)\n    x19 = canvas(ZERO, x18)\n    x20 = paint(x19, x16)\n    O = subgrid(x20, I)\n    return O"], [1.0, "def solve_0cc2558a(I):\n    x1 = matcher(first, THREE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x2, x1)\n    x4 = dmirror(x3)\n    x5 = fork(combine, vfrontier, hfrontier)\n    x6 = compose(x5, x4)\n    x7 = mapply(x6, x4)\n    O = underfill(x7, ONE, x3)\n    return O"], [1.0, "def solve_bc32aca2(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x11 = canvas(x8, x9)\n    x12 = asindices(x11)\n    x13 = toobject(x12, I)\n    x14 = increment(x5)\n    x15 = increment(xx4)\n    x16 = divide(x14, x15)\n    x17 = rbind(multiply, x16)\n    x18 = apply(x17, x13)\n    x19 = rbind(toobject, I)\n    x20 = chain(x19, backdrop, x17)\n    x21 = apply(x20, x18)\n    x22 = matcher(x21, I)\n    x23 = rbind(adjacent, x12)\n    x24 = rbind(adjacent, x25)\n    x25 = fork(both, x23, x24)\n    x26 = compose(x22, x25)\n    x27 = sfilter(x2, x26)\n    O = fill(x11, x8, x27)\n    return O"], [1.0, "def solve_9205ff9d(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP)\n    x4 = rbind(shoot, DOWN)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = canvas(x10, x1)\n    x12 = astuple(dmirror, ORIGIN)\n    x13 = astuple(cmirror, x11)\n    x14 = combine(x12, x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x16, x16)\n    x18 = index(I, x2)\n    x19 = lbind(power, x18)\n    x20 = chain(first, x19, first)\n    x21 = compose(last, last)\n    x22 = fork(subtract, x21, x20)\n    x23 = compose(invert, x22)\n    x24 = fork(shoot, x22, x23)\n    x25 = fork(intersection, x24, x20)\n    x26 = chain(decrement, size, x25)\n    x27 = fork(shoot, x26, x24)\n    x28 = fork(combine, x27, x25)\n    x29 = compose(toivec, x28)\n    x30 = fork(shoot, x29, x27)\n    x31 = fork(combine, x27, x30)\n    x32 = mapply(x31, x17)\n    x33 = fill(I, EIGHT, x32)\n    x34 = mapply(x33, x19)\n    O = paint(x34, x32)\n    return O"], [1.0, "def solve_590defda(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained,25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_3ba0e11b(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_63afc717(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_a78dd068(I):\n    x1 = Fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [1.0, "def solve_9abd57e7(I):\n    x1 = height(I)\n    x2 = decrement(x1)\n    x3 = decrement(x2)\n    x4 = toivec(x3)\n    x5 = tojvec(x2)\n    x6 = add(x4, x5)\n    x7 = add(x3, x6)\n    x8 = fill(I, ZERO, x7)\n    x9 = canvas(ZERO, x1)\n    x10 = asobject(x9)\n    x11 = occurrences(x8, x10)\n    x12 = lbind(shift, x10)\n    x13 = mapply(x12, x11)\n    O = fill(x8, ONE, x13)\n    return O"], [1.0, "def solve_9579716b(I):\n    x1 = mostcolor(I)\n    x2 = hconcat(I, I)\n    x3 = upscale(I, THREE)\n    x4 = ofcolor(x3, x1)\n    x5 = asindices(x3)\n    x6 = difference(x5, x4)\n    x7 = hconcat(x2, I)\n    x8 = vconcat(x7, x7)\n    x9 = vconcat(x8, x7)\n    O = fill(x9, ZERO, x6)\n    return O"], [1.0, "def solve_122330dc(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, Righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [1.0, "def solve_63be3dc8(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_10f211ce(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_5e38dc5f(I):\n    x1 = ofcolor(I, TWO)\n    x2 = matcher(first, ZERO)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(invert, center, x3)\n    x5 = fork(shift, identity, x4)\n    x6 = canvas(ZERO, THREE_BY_THREE)\n    x7 = asindices(x6)\n    x8 = matcher(first, ZERO)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    x11 = initset(x1)\n    x12 = box(x11)\n    x13 = lbind(toobject, x12)\n    x14 = compose(x4, x13)\n    x15 = toindices(x14)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x10)\n    O = fill(x6, EIGHT, x17)\n    return O"], [1.0, "def solve_5d49d081(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_66174c0c(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_634f8d80(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_3279bf68(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_2a4b191d(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_e681058e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = sfilter(x1, hline)\n    x5 = size(x4)\n    x6 = positive(x5)\n    x7 = branch(x6, identity, dmirror)\n    x8 = x7(I)\n    x9 = rbind(subgrid, x8)\n    x10 = matcher(color, x3)\n    x11 = compose(flip, x10)\n    x12 = partition(x8)\n    x13 = sfilter(x12, x11)\n    x14 = argmax(x13, size)\n    x15 = product(x14, x14)\n    x16 = apply(color, x15)\n    x17 = canvas(x3, x14)\n    x18 = paint(x17, x16)\n    x19 = fork(remove, last, identity)\n    x20 = compose(hmirror, x19)\n    x21 = fork(vconcat, identity, x20)\n    x22 = apply(x21, x15)\n    x23 = merge(x22)\n    O = x7(x23)\n    return O"], [1.0, "def solve_d9eef308(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_393222e3(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_714271e9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = combine(x8, x9)\n    x13 = merge(x11)\n    x14 = fill(I, x3, x13)\n    x15 = paint(x14, x9)\n    O = x15(x15)\n    return O"], [1.0, "def solve_673778eb(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(lbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [1.0, "def solve_24ee4042(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_32fd83ab(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = partition(I)\n    x7 = fork(multiply, height, width)\n    x8 = fork(equality, size, x7)\n    x9 = sfilter(x6, x8)\n    x10 = argmax(x9, size)\n    x11 = difference(x5, x10)\n    x12 = apply(initset, x11)\n    x13 = rbind(hmatching, x10)\n    x14 = rbind(vmatching, x10)\n    x15 = fork(either, x13, x14)\n    x16 = Sfilter(x12, x15)\n    x17 = rbind(gravitate, x10)\n    x18 = fork(add, center, x17)\n    x19 = fork(connect, center, x18)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x16)\n    O = paint(I, x21)\n    return O"], [1.1, "def solve_43776383(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(compose, flip)\n    x3 = lbind(matcher, first)\n    x4 = compose(x2, x3)\n    x5 = lbind(compose, asobject)\n    x6 = lbind(rbind, sfilter)\n    x7 = compose(x5, x6)\n    x8 = lbind(rbind,colorcount)\n    x9 = fork(equality, x7, x8)\n    x10 = compose(x9, initset)\n    x11 = fork(indices, x7, x10)\n    x12 = compose(size, x11)\n    x13 = matcher(x12, ZERO)\n    x14 = partition(I)\n    x15 = sfilter(x14, x13)\n    x16 = argmax(x15, size)\n    x17 = remove(x16, x15)\n    x18 = lbind(chain, first)\n    x19 = lbind(rbind,\ufffdrapply)\n    x20 = lbind(lbind, initset)\n    x21 = lbind(rbind,rapply)\n    x22 = compose(x21, frontiers)\n    x23 = chain(x18, x22, last)\n    x24 = lbind(colorbind,irrelval)\n    x25 = chain(x24, color, x23)\n    x26 = matcher(x25, ZERO)\n    x27 = fork(O = fork(both, x23, x26)\n    x28 = fork(combine, x25, x27)\n    x29 = fork(shift, x28, ulcorner)\n    x30 = fork(intersection, x29, last)\n    x31 = chain(x15, x30, first)\n    x32 = size(x15)\n    x33 = equality(x32, ZERO)\n    x34 = branch(x33, x31, x29)\n    x35 = bright(x16, x34)\n    x36 =614(x35)\n    x37 = paint(I, x36)\n    O = subgrid("], [1.1, "def solve_104cb5af(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_ae30e868(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = matcher(size, SIX)\n    x2 = equality(ineighbors, x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = asindices(x4)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = intersection(x6, x5)\n    x8 = lrcorner(x7)\n    x9 = shoot(x8, DOWN_LEFT)\n    x10 = intersection(x9, x5)\n    x11 = combine(x7, x10)\n    x12 = llcorner(x11)\n    x13 = remove(x12, x11)\n    x14 = lbind(shift, x13)\n    x15 = height(x11)\n    x16 = height(x10)\n    x17 = divide(x15, x16)\n    x18 = increment(x17)\n    x19 = width(x11)\n    x20 = astuple(x18, x19)\n    x21 = crop(x4, ORIGIN, x20)\n    x22 = hupscale(x21, x18)\n    x23 = dmirror(x22)\n    x24 = shape(x23)\n    x25 = canvas(ZERO, x24)\n    x26 = ulcorner(x25)\n    x27 =rbind(shoot, x26)\n    x28 = mapply(x27, x3)\n    x29 = combine(x24, x28)\n    x30 = urcorner(x29)\n    x31 = remove(x30, x29)\n    x32 = lbind(shift, x31)\n    x33 = height(x11)\n    x34 = decrement(x33)\n    x35 = toivec(x34)\n    x36 = height(x11)\n    x37 = tojvec(x36)\n    x38 = add(x35, x37)\n    x39 = height(x11)\n    x40 = increment(x39)\n    x41 = astuple(x38, x40)\n    x42 ="], [1.1, "def solve_2974bfca(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, ONE)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)"], [1.1, "def solve_d1195071(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(both, x29, x30)\n    x34 = fork(both, x31, x32)\n    x35 = fork(both, x33, x34)\n    x36 = compose(x"], [1.1, "def solve_87600c64(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = argmax(x1, size)\n    x3 = remove(x2, x1)\n    x4 = merge(x3)\n    x5 = subgrid(x4, I)\n    x6 = chain(color, merge, lefthalf)\n    x7 = x6(x5)\n    x8 = rbind(colorcount, ZERO)\n    x9 = argmin(x2, x8)\n    x10 = rbind(colorcount, x9)\n    x11 = chain(x9, x10, palette)\n    x12 = lbind(contained, x7)\n    x13 = chain(x12, palette, x11)\n    x14 = compose(flip, x13)\n    x15 = extract(x12, x14)\n    x16 = ulcorner(x15)\n    x17 = lrcorner(x15)\n    x18 = height(x15)\n    x19 = divide(x18, x17)\n    x20 = increment(x19)\n    x21 = width(x15)\n    x22 = divide(x21, x22)\n    x23 = increment(x22)\n    x24 = invert(x23)\n    x25 = tojvec(x24)\n    x26 = asobject(x25)\n    x27 = height(x5)\n    x28 = increment(x27)\n    x29 = interval(x26, x28, ONE)\n    x30 = product(x29, x29)\n    x31 = matcher(first, x9)\n    x32 = compose(flip, x31)\n    x33 = sfilter(x30, x32)\n    x34 = fill(x5, x19, x33)\n    x35 = lbind(shift, x323)\n    x36 = fork(recolor, x35, identity)\n    x37 = mapply(x36, x22)\n    x38 = paint(x34, x37)\n    x39 = double(x conveniently)\n    x40 = invert(x39)\n    x41 = increment(x40)"], [1.1, "def solve_0a816e83(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_c3b6ab67(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_4a0be8d7(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25ff2445\n    x26 =499ling(x24)\n    x27 = objects(x3, T, F, F)\n    x28 = colorfilter(x27, ZERO)\n    x29 = rbind(toobject, x3)\n    x30 = chain(x29, backdrop, delta)\n    x31 = mapply(x30, x28)\n    x32 = combine(x24, x31)\n    x33 = rbind(adjacent, x32)\n    x34 = urcorner(x4)\n    x35 = sfilter(x4, x33)\n    x36 = Airport(x35, x4)\n    x37 = mapply(x19, x36)\n    x38 = combine(x34, x37)\n    x39 = paint(x3, x38)\n    O = x2(x39)\n"], [1.1, "def solve_71a7ca4e(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = argmax(x3, x4)\n    x6 = color(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmax(x8, x9)\n    x11 = remove(x10, x8)\n    x12 = lbind(ofcolor, I)\n    x13 = mapply(x12, x11)\n    x14 = subgrid(x13, I)\n    x15 = objects(x14, T, F, F)\n    x16 = colorfilter(x15, x6)\n    x17 = initset(x10)\n    x18 = insert(x6, x17)\n    x19 = lbind(intersection, x18)\n    x20 = chain(positive, size, x19)\n    x21 = chain(positive, decrement, size)\n    x22 = fork(either, x20, x21)\n    x23 = rbind(toobject, x14)\n    x24 = compose(corners, outbox)\n    x25 = chain(palette, x23, x24)\n    x26 = rbind(branch, x6)\n    x27 = chain(flip, x22, x25)\n    x28 = compose(first, x25)\n    x29 = fork(x26, x27, x28)\n    x30 = apply(uppermost, x16)\n    x31 = order(x30, identity)\n    x32 = lbind(apply, x29)\n    x33 = rbind(order, leftmost)\n    x34 = lbind(sfilter, x16)\n    x35 = lbind(matcher, uppermost)\n    x36 = compose(x34, x35)\n    x37 = chain(x32, x33, x36)\n    O = apply(x37"], [1.1, "def solve_d7e25281(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = lrcorner(x4)\n    x41 = index(x3, x40)"], [1.1, "def solve_323267c5(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_279cd42f(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_a5120804(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = box(x2)\n    x5 = astuple(TEN, FOUR)\n    x6 = canvas(x3, x5)\n    x7 = interval(ONE, SIX, ONE)\n    x8 = invert(TEN)\n    x9 = interval(x8, TEN, ONE)\n    x10 = product(x7, x9)\n    x11 = remove(ORIGIN, x10)\n    x12 = lbind(intersection, x4)\n    x13 = lbind(shift, x2)\n    x14 = compose(x12, x13)\n    x15 = toindices(x2)\n    x16 = lbind(intersection, x15)\n    x17 = lbind(shift, x1)\n    x18 = compose(x16, x17)\n    x19 = compose(size, x14)\n    x20 = compose(size, x18)\n    x21 = fork(equality, x19, x20)\n    x22 = chain(positive, size, x14)\n    x23 = fork(both, x21, x22)\n    x24 = sfilter(x11, x23)\n    x25 = compose(size, x14)\n    x26 = valmax(x24, x25)\n    x27 = compose(size, x14)\n    x28 = matcher(x27, x26)\n    x29 = sfilter(x24, x28)\n    x30 = fork(multiply, first, last)\n    x31 = argmax(x29, x30)\n    x32 = interval(ZERO, TEN, ONE)\n    x33 = lbind(shift, x2)\n    x34 = multiply(TEN, UNITY)\n    x35 = interval(x32, x34, invert)\n    x36 = sfilter(x32, x35)\n    x37 = apply(x33, x36)\n    x38 = mapply(x37, x000)\n    x39 = paint(I, x38"], [1.1, "def solve_c192b683(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, FIVE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = argmin(x8, numcolors)\n    x10 = normalize(x9)\n    x11 = toindices(x10)\n    x12 = increment(x width)\n    x13 = tojvec(x12)\n    x14 = shift(x11, x13)\n    x15 = argmin(x11, x13)\n    x16 = x15(I)\n    x17 = remove(x10, x1)\n    x18 = other(x17, x16)\n    x19 = color(x18)\n    x20 = lbind(shift, x18)\n    x21 = rbind(difference, x76)\n    x22 = chain(size, x20, x21)\n    x23 = matcher(x22, ZERO)\n    x24 = sfilter(x16, x23)\n    x25 = difference(x16, x24)\n    x26 = sfilter(x25, x23)\n    x27 = recolor(x10, x26)\n    x28 = lbind(shift, x14)\n    x29 = lbind(insert, x14)\n    x30 = rbind(intersection, x21)\n    x31 = chain(size, x29, x30)\n    x32 = argmax(x27, x31)\n    x33 = lbind(shift, x33)\n    x34 = lbind(insert, x33)\n    x35 = rbind(intersection, x32)\n    x36 = chain(size, x34, x35)\n    x37 = sfilter(x32, x36)\n    x38 = fork(recolor, x19, x37)\n    x39 = fork(colorcount, x18, x38)\n"], [1.1, "def solve_c12d8cb8(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =889(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, ONE, x3)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x8, x18)\n    x20 = lbind(colorcount, x7)\n    x21 = argmin(x19, x20)\n    x22 = rbind(colorcount, x21)\n    x23 = rbind(toobject, x7)\n    x24 = compose(x22, x23)\n    x25 = chain(x delta, x24, decrement)\n    x26 =55754(x25)\n    x27 = objects(x26, T, F, T)\n    x28 = rbind(colorcount, x21)\n    x29 = valmax(x27, x28)\n    x30 = rbind(toobject, x7)\n    x31 = chain(x29, x30, color)\n    x32 = x31(x1600)\n    x33 = x31(x16)\n    x34 = rbind(colorcount, x21)\n    x35 = valmax(x32, x34)\n    x36 = x35(x29)\n    x37 = equality(x36, x31)\n    x38 = astuple(ONE, x37)\n    x39 = canvas(x18, x38)\n    x40 = asobject("], [1.1, "def solve_c0cac043(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_5d7095a7(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = astuple(color, TWO)\n    x2 = astuple(TWO, ONE)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = sfilter(x32, x35)\n    x37 =neighbors(x36)\n    x38 = mapply(neighbors, x37)\n    x39 =O = fill(x31, THREE, x38"], [1.1, "def solve_327d4bcf(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale11(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O ="], [1.1, "def solve_5510e157(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = rbind(objects,)\n    x3 = rbind(x2, F)\n    x4 = rbind(x3, F)\n    x5 = lbind(d687, x4)\n    x6 = lbind(rbind, colorcount)\n    x7 = compose(x6, x5)\n    x8 = rbind(canvas, UNITY)\n    x9 = compose(x8, x7)\n    x10 = fork(hconcat, identity, x9)\n    x11 = compose(x8, x10)\n    x12 = lbind(contained, ZERO)\n    x13 = chain(flip, x12, x11)\n    x14 = compose(positive, size)\n    x15 = lbind(rbind, sfilter)\n    x16 = fork(both, x13, x15)\n    x17 = rbind(toobject, I)\n    x18 = chain(x14, x17, x16)\n    x19 = compose(x12, x18)\n    x20 = fork(equality, identity, x19)\n    x21 = compose(x20, last)\n    x22 = ofcolor(I, ZERO)\n    x23 = sfilter(x22, x12)\n    x24 = argmax(x23, x28)\n    x25 = other(x23, x24)\n    x26 = last(x23)\n    x27 = compose(first, last)\n    x28 =    x27(x26)\n    x29 = fill(I, x25, x28)\n    x30 = ofcolor(x29, x25)\n    x31 = ulcorner(x30)\n    x32 = shoot(x31, UNITY)\n    x33 = lrcorner(x30)\n    x34 = shoot(x33, NEG_UNITY)\n    x35 = urcorner(x30)\n    x36 = shoot(x35, UP_RIGHT)\n    x37 = llcorner(x30)\n    x38 = shoot(x37, DOWN_LEFT)\n    x39 = combine(x32"], [1.1, "def solve_8854ff72(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = compose(size, dedupe)\n    x3 = x2(x1)\n    x4 = positive(x3)\n    x5 = branch(x4, height, width)\n    x6 = x5(I)\n    x7 = canvas(x4, x6)\n    x8 = matcher(identity, ZERO)\n    x9 = rbind(sfilter, x8)\n    x10 = compose(first, last)\n    x11 =rbind(sfilter, x10)\n    x12 = compose(x9, x11)\n    x13 = fork(size, x12,leftmost)\n    x14 = matcher(x13, ZERO)\n    x15 = uppermost(x7)\n    x16 = leftmost(x7)\n    x17 = fork( greater, x15, x16)\n    x18 = uppermost(x7)\n    x19 = matcher(x18, ZERO)\n    x20 = rightmost(x7)\n    x21 = leftmost(x7)\n    x22 = fork( greater, x20, x21)\n    x23 = uppermost(x7)\n    x24 = matcher(x23, ZERO)\n    x25 = lrcorner(x7)\n    x26 = ulcorner(x7)\n    x27 = fork(connect, x25, x26)\n    x28 = subgrid(x27, I)\n    x29 = palette(x28)\n    x30 = sfilter(x29, x24)\n    x31 = lbind(colorcount, x28)\n    x32 = argmax(x30, x31)\n    x33 = remove(x32, x30)\n    x34 = rbind(contained, x33)\n    x35 = argmin(x34, size)\n    x36 = x35(x28)\n    x37 = palette(x35)\n    x38 = remove(x36, x35)\n    x39 = lbind(colorcount, x28)\n    x40 = argmin(x38, x39)\n    x41 = rbind(color"], [1.1, "def solve_7a5f57a2(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x352, x32)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18, x"], [1.1, "def solve_e7f52bb2(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_3690af8a(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_8ba81066(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x04, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_7753107b(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = initset(ORIGIN)\n    x5 = lbind(rapply, x4)\n    x6 = compose(first, x5)\n    x7 = chain(x10, x4, x6)\n    x8 = fork(difference, x7, toindices)\n    x9 = matcher(x8, ZERO)\n    x10 = fork(both, x9, x7)\n    x11 = extract(x3, x10)\n    x12 = ONE(x11)\n    x13 = height(x12)\n    x14 = decrement(x13)\n    x15 = mostcolor(I)\n    x16 =astuple(x14, x15)\n    x17 = repeat(x16, ONE)\n    x18 = toindices(x17)\n    x19 = asindices(I)\n    x20 = box(x19)\n    x21 = NEG_UNITY(x20)\n    x22 = toindices(x21)\n    x23 = asindices(I)\n    x24 = corners(x23)\n    x25 = DOWN(x24)\n    x26 = astuple(x14, x15)\n    x27 = astuple(x25, x26)\n    x28 = combine(x28, x27)\n    x29 = rbind(toobject, I)\n    x30 = chain(numcolors, x29, x22)\n    x31 = matcher(x30, ONE)\n    x32 = astuple(x24, x15)\n    x33 = astuple(x31, x32)\n    x34 = combine(x33, x41)\n    x35 = argmax(x34, size)\n    x36 = matcher(first, x35)\n    x37 = compose(flip, x36)\n    x38 = sfilter(x1, x37)\n    x39 =535(x38)\n    x40 = multiply(x19, x39)\n"], [1.1, "def solve_0874b1eb(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_f2c578eb(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_1799e69a(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = apply(lowermost, x6)\n    x8 = maximum(x7)\n    x9 = width(I)\n    x10 = astuple(x9, x6)\n    x11 = add(x10, TWO)\n    x12 = interval(x8, x11, ONE)\n    x13 = prapply(shift, x7, x12)\n    x14 = lbind(canvas, x1)\n    x15 = compose(x14, toindices)\n    x16 = fork(paint, x15, x15)\n    x17 = compose(x16, lefthalf)\n    x18 = righthalf(I)\n    x19 = compose(x18, righthalf)\n    x20 = righthalf(I)\n    x21 = compose(x20, palette)\n    x22 = lbind(recolor, x1)\n    x23 = compose(x22, palette)\n    x24 = rbind(paint, x18)\n    x25 = chain(x24, x23, x8)\n    x26 = x25(x20)\n    x27 = x25(x21)\n    x28 = fork(combine, vfrontier, hfrontier)\n    x29 = fork(combine, rbind, TEN)\n    x30 = rbind(occurrences, x22)\n    x31 = compose(x30, x28)\n    x32 = apply(x31, x3)\n    x33 = rbind(valmax, numcolors)\n    x34 = chain(x33, x32, x23)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = x36(x69)\n    x38 = invert(x37)\n    x39 = cover(I, x"], [1.1, "def solve_401601cb(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = shape(I)\n    x13 = canvas(x11, x12)\n    x14 = hconcat(I, x13)\n    x15 = objects(x14, F, F, T)\n    x16 = argmin(x15, size)\n    x17 = subgrid(x16, x14)\n    x18 = remove(x16, x15)\n    x19 = lbind(colorcount, x18)\n    x20 = argmin(x12, x19)\n    x21 = rightmost(x16)\n    x22 = positive(x21)\n    x23 = vmirror(x22)\n    x24 = papply(pair, x17, x23)\n    x25 = lbind(apply, maximum)\n    x26 = size(x24)\n    x27 = increment(x26)\n    x28 = tojvec(x27)\n    x29 = leftmost(x16)\n    x30 = rightmost(x16)\n    x31 = ofcolor(x14, x29)\n    x32 = ofcolor(x20, x30)\n    x33 = combine(x31, x32)\n    x34 = combine(x33, x36)\n    x35 = height(x14)\n    x36 = height(x20)\n    x37 = interval(FOUR, x35, x36)\n    x38 = lbind(compose, flip)\n    x39 = lbind(matcher, first)\n    x40 = compose(x38, x39)\n    x41 = rbind(compose, asobject)\n    "], [1.1, "def solve_034cc5b5(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = connect(ORIGIN, DOWN)\n    x4 = connect(ORIGIN, ZERO_BY_TWO)\n    x5 = combine(x3, x4)\n    x6 = height(I)\n    x7 = equality(x6, TWO)\n    x8 = height(I)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x5, x9)\n    x11 = lbind(apply, last)\n    x12 = compose(x11, first)\n    x13 = chain(positive, positive, x12)\n    x14 = lbind(interval, ZERO)\n    x15 = rbind(x14, ONE)\n    x16 = rbind(sfilter, x13)\n    x17 = compose(x15, last)\n    x18 = fork(pair, x17, x8)\n    x19 = chain(x13, x16, x18)\n    x20 = rbind(branch, identity)\n    x21 = rbind(x20, x19)\n    x22 = chain(size, dedupe, x21)\n    x23 = lbind(equality, ONE)\n    x24 = chain(x22, x23, x19)\n    x25 = compose(initset, x24)\n    x26 = fork(rapply, x25, x22)\n    x27 = compose(first, x26)\n    x28 = extract(x10, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(x30)\n    x32 = palette(x31)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(404, x33)\n    x35 = ofcolor(x31, ONE)\n    x36 =    6000dederence(x35)\n    x37 = product(x36, x36)\n    x38 = fork(equality, identity, vmirror)\n    x39 = apply(x38, x37)\n    x40 = insert"], [1.1, "def solve_03a7b060(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_7df75ef6(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_43342523(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = rbind(compose, x30)\n    x37 = lbind(compose, x30)\n    x38 = lbind(lbind, subtract)\n    x39 = compose(x37, x38)\n    x40 = lbind(compose, x33)\n    x41 = compose(x39, x40)\n    x42 = fork(sfilter, x35"], [1.1, "def solve_32b51cdb(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, last)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, first)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, x10)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, x12)\n    x15 = rbind(shift, ZERO_BY_TWO)\n    x16 = compose(x15, x14)\n    x17 = rbind(shift,12chain)\n    x18 = compose(x17, first)\n    x19 = lbind(recolor, ZERO)\n    x20 = compose(x19, ulcorner)\n    x21 = fork(combine, x18, x20)\n    x22 = chain(x5, first, x21)\n    x23 = fork(paint, identity, x22)\n    x24 = chain(x5, first, x18)\n    x25 = fork(multiply, identity, x24)\n    x26 = chain(x5, last, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = fork(add, x23, x27)\n    x29 = fork(add, x28, x28)\n    x30 = compose(last, x29)\n    x31 = rbind(argmin, x30)\n    x32 = lbind( Recreurrences, x9)\n    x33 = compose(first, x32)\n    x34 = fork(add, x33, x29)\n    x35 = compose(x31, x34)\n    x36 = fork(65935, first, x35)"], [1.1, "def solve_10bcf21a(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_f96999e7(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_afdda1c5(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_67d7471b(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 =Rbind(colorcount, x10)\n    x12 = normalize(I)\n    x13 =91(x11)\n    x14 = color(x12)\n    x15 = remove(x3, x8)\n    x16 = apply(first, x15)\n    x17 = last(x15)\n    x18 = objects(x6, T, T, T)\n    x19 = colorfilter(x18, x14)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = interval(ZERO, x21, ONE)\n    x23 = asobject(x22)\n    x24 = rbind(first, x10)\n    x25 = apply(x24, x23)\n    x26 = astuple(x21, x25)\n    x27 = x26(x23)\n    x28 = x26(x24)\n    x29 = x28(x27)\n    x30 = x28(x24)\n    x31 = x29(x canvas)\n    x32 = fill(x31, x11, x27)\n    x33 = fill(x32, x10, x27)\n    x34 = fill(x33, x14, x20)\n    x35 = fill(x34, x13, x29)\n    x36 = ofcolor(x35, x10)\n    x37 = rbind(contained, x36)\n    x38 = compose(x37, ulcorner)\n    x39 = sfilter(x43, x38)\n    x40 = shape(x39)\n    x41 = subtract(x40, DOWN)\n    x42 = canvas(x"], [1.1, "def solve_c9621d7e(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_421f7fa5(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_1cc3a4ac(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = chain(rot90, x24, x27)\n    x29 = power(x28, FOUR)\n    x30 = compose(first, x29)\n    x31 = multiply(TEN, THREE)\n    x32 = power(x30, x31)\n    x33 = fork(astuple, x29, x32)\n    x34 = size(x467)\n    x35 = power(x33, x34)\n    x36 = astuple(x35, x27)\n    x37 = lbind(canvas, x35)\n    x38 = lbind(prapply, x37)\n    x39"], [1.1, "def solve_4c68eff4(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_d4df188a(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = rbind(ofcolor, ZERO)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = remove(ORIGIN, x1)\n    x5 = lbind(argmin, x4)\n    x6 = lbind(lbind, manhattan)\n    x7 = compose(x5, x6)\n    x8 = compose(x3, x7)\n    x9 = lowermost(x7)\n    x10 = rightmost(x7)\n    x11 = matcher(x8, x9)\n    x12 = leftmost(x7)\n    x13 = matcher(x8, x12)\n    x14 = uppermost(x7)\n    x15 =rightmost(x7)\n    x16 = matcher(x14, x15)\n    x17 = uppermost(x7)\n    x18 = matcher(x17, x16)\n    x19 = rightmost(x7)\n    x20 = matcher(x19, x18)\n    x21 = leftmost(x7)\n    x22 = matcher(x21, x15)\n    x23 = leftmost(x7)\n    x24 = matcher(x23, x12)\n    x25 = rightmost(x7)\n    x26 = matcher(x25, x15)\n    x27 = fork(add, x26, x7)\n    x28 = fork(add, x27, x14)\n    x29 = fork(add, x28, x20)\n    x30 = fork(add, x29, x21)\n    x31 = palette(I)\n    x32 = lbind(sfilter, x31)\n    x33 = lbind(matcher, identity)\n    x34 = compose(x33, x30)\n    x35 = chain(size, x32, x34)\n    x36 = ofcolor(I, ZERO)\n    x37 = palette(I)\n    x38 = repeat(x16, x38)\n    x39 =\n     leftmost(x39)\n    x40 = trim(I)\n    "], [1.1, "def solve_3b0afb7f(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_28e252af(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = rbind(order, leftmost)\n    x4 = chain(x3, toindices, x2)\n    x5 = lbind(contained, x1)\n    x6 = compose(x5, x4)\n    x7 = fork(223(x6, fork, identity)\n    x8 = extract(x1, x7)\n    x9 = x5(x8)\n    x10 = branch(x9, identity, dmirror)\n    x11 = x10(x1)\n    x12 = replace(x11, EIGHT, x9)\n    x13 = x10(x2)\n    x14 = branch(x13, identity, vmirror)\n    x15 = x14(x13)\n    x16 = trim(x15)\n    x17 = mostcolor(x16)\n    x18 = repeat(x16, ONE)\n    x19 = mapply(d43, x18)\n    x20 = x14(x19)\n    x21 = replace(x20, EIGHT, x17)\n    x22 = x10(x21)\n    x23 = replace(x22, righthalf, x17)\n    x24 = replace(x23,nah to, x17)\n    x25 = dmirror(x24)\n    x26 = width(x22)\n    x27 = add(x26, DOWN)\n    x28 = dmirror(x25)\n    x29 = add(x28, x26)\n    x30 = invert(x29)\n    x31 = width(x22)\n    x32 = increment(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = asobject(x22)\n    x35 = ZERO(x34)\n    x36 = ofcolor(x10, x17)\n    x37 = shift(x36, last)\n    x38 = paint(x12, x37)\n    x39 = double(x30)\n    x40 = downscale(x38, x39)\n    x41 = interval"], [1.1, "def solve_15884ee1(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, ONE)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)"], [1.1, "def solve_fb219415(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = lbind(colorfilter, x1)\n    x5 = compose(size, x4)\n    x6 = matcher(x5, TWO)\n    x7 = asindices(I)\n    x8 = box(x7)\n    x9 = rbind(difference, x8)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(size, x9, x10)\n    x12 = matcher(x11, ZERO)\n    x13 = rbind(greater, ONE)\n    x14 = lbind(apply, size)\n    x15 = lbind(colorfilter, x1)\n    x16 = compose(x14, x15)\n    x17 = chain(x13, minimum, x16)\n    x18 = fork(both, x12, x17)\n    x19 = fork(both, x6, x18)\n    x20 = extract(x3, x19)\n    x21 = other(x3, x20)\n    x22 = ofcolor(I, x21)\n    x23 = colorfilter(x1, x20)\n    x24 = rbind(vmatching, x22)\n    x25 = rbind(hmatching, x22)\n    x26 = fork(either, x24, x25)\n    x27 = extract(x23, x26)\n    x28 = other(x23, x27)\n    x29 = rbind(gravitate, x27)\n    x30 = compose(x29, initset)\n    x31 = fork(add, identity, x30)\n    x32 = fork(connect, identity, x31)\n    x33 = mapply(x32, x22)\n    x34 = fill(I, x21, x33)\n    x35 = fill(x34, FOUR, x22)\n    x36 = ofcolor(I, x20)\n    x37 = apply(first, x36)\n    x38 = size(x37)\n    x39 = apply"], [1.1, "def solve_a2d4c73b(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(identity, dmirror)\n    x5 = astuple(cmirror, hmirror)\n    x6 = combine(x4, x5)\n    x7 = rbind(rapply, I)\n    x8 = compose(first, x7)\n    x9 = chain(x3, x8, initset)\n    x10 = extract(x6, x9)\n    x11 = x10(I)\n    x12 = mostcolor(I)\n    x13 = palette(I)\n    x14 = remove(x12, x13)\n    x15 = other(x14, TWO)\n    x16 = ofcolor(x11, x15)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, identity, vmirror)\n    x20 = x19(x11)\n    x21 = ofcolor(x20, x15)\n    x22 = ofcolor(x20, TWO)\n    x23 = apply(last, x22)\n    x24 = insert(ZERO, x23)\n    x25 = width(x20)\n    x26 = insert(x25, x24)\n    x27 = order(x26, identity)\n    x28 = last(x27)\n    x29 = remove(x28, x27)\n    x30 = first(x27)\n    x31 = remove(x30, x27)\n    x32 = pair(x29, x31)\n    x33 = size(x29)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = pair(x34, x32)\n    x36 = lbind(fork, connect)\n    x37 = compose(first, last)\n    x38 = chain(decrement, last, last)\n    x39 = lbind(lbind, add)\n    x40 = compose(x39, first)\n    x41 = lbind("], [1.1, "def solve_263f7412(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = rapply(x30, x2)\n    x32 = first(x31)\n    x33 = last(x31)\n    x34 =    x32(I)\n    x35 = dmirror(x34)\n    x36 = dedupe(x35)\n    x37 = chain"], [1.1, "def solve_ffe9c7f9(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, size)\n    x3 =323(I)\n    x4 = sfilter(x3, x2)\n    x5 = fork(apply, vfrontier, hfrontier)\n    x6 = sfilter(x4, x2)\n    x7 = fork(intersection, x5, x6)\n    x8 = chain(size, x7, x8)\n    x9 = matcher(x8, ZERO)\n    x10 = matcher(TWO, ONE)\n    x11 = sfilter(x4, x9)\n    x12 = sfilter(x4, x10)\n    x13 = merge(x11)\n    x14 = fill(I, TWO, x13)\n    x15 = merge(x12)\n    x16 = width(x15)\n    x17 = ulcorner(x15)\n    x18 =27(x16)\n    x19 = subtract(x17, x18)\n    x20 = increment(x19)\n    x21 = width(x20)\n    x22 = subtract(x17, x21)\n    x23 = RIGHT(x20, x22)\n    x24 = sfilter(x4, x23)\n    x25 = chain(first, last, first)\n    x26 = totuple(x24)\n    x27 = apply(x25, x26)\n    x28 = combine(x28, x27)\n    x29 = lbind(colorcount, x14)\n    x30 = argmax(x29, x28)\n    x31 = remove(x30, x30)\n    x32 = first(x31)\n    x33 = ofcolor(x32, x32)\n    x34 = shift(x33, x323)\n    x35 = combine(x28, x34)\n    x36 = recolor(x32, x35)\n    x37 = shift(x33, x327)\n    x38 = occurrences(x38, x37)\n    x39 = mapply(toindices, x38)\n    x40 = lbind(mapply, x5)\n"], [1.1, "def solve_19ce1e47(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = compose(leftmost, first)\n    x13 = compose(leftmost, last)\n    x14 = fork(equality, x12, x13)\n    x15 = compose(uppermost, first)\n    x16 = compose(uppermost, last)\n    x17 = fork(equality, x15, x16)\n    x18 = fork(either, x14, x17)\n    x19 = sfilter(x11, x18)\n    x20 = compose(color, first)\n    x21 = compose(center, first)\n    x22 = compose(center, last)\n    x23 = fork(connect, x21, x22)\n    x24 = fork(recolor, x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = matcher(last, ZERO)\n    x28 = decrement(x26)\n    x29 = matcher(last, x28)\n    x30 = fork(either, x27, x29)\n    x31 = matcher(first, ZERO)\n    x32 = decrement(x25)\n    x33 = matcher(first, x32)\n    x34 = fork(either, x31, x33)\n    x35 = toindices(x5)\n    x36 = sfilter(x35, x30)\n    x37 = equality(x35, x36)\n    x38 = mapply(x24, x19)\n    x39 = paint(I, x38)\n    x40 = branch(x37, x30, x34)\n    "], [1.1, "def solve_3da22d9e(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = colorfilter(x2, x1)\n    x4 = rbind(bordering, I)\n    x5 = compose(flip, x4)\n    x6 = mfilter(x3, x5)\n    x7 = outbox(x6)\n    x8 = subgrid(x7, I)\n    x9 = trim(x8)\n    x10 = palette(x9)\n    x11 = matcher(identity, x1)\n    x12 = argmin(x10, x11)\n    x13 = trim(x8)\n    x14 = ofcolor(x13, x12)\n    x15 = shift(x14, UNITY)\n    x16 = matcher(first, x12)\n    x17 = rbind(sfilter, x16)\n    x18 = compose(flip, x17)\n    x19 = rbind(sfilter, x18)\n    x20 = chain(normalize, x17, x19)\n    x21 = mostcolor(x10)\n    x22 = ofcolor(x8, x21)\n    x23 = combine(x15, x22)\n    x24 = fill(x8, x12, x23)\n    x25 = difference(x19, x22)\n    x26 = ofcolor(x24, x25)\n    x27 = asindices(x24)\n    x28 = ofcolor(x24, x12)\n    x29 = leftmost(x28)\n    x30 = invert(x29)\n    x31 = shift(x27, x30)\n    x32 = lbind(shift, x28)\n    x33 = apply(x32, x31)\n    x34 = mapply(x24, x33)\n    x35 = fill(x24, x12, x34)\n    x36 = lbind(shift, x29)\n    x37 = mapply(x36, x31)\n    x38 = shift(x37, x32)\n    x39 = combine(x35, x38)\n    O = fill"], [1.1, "def solve_52642045(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_27032fba(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(add, x28, x33)\n    x34 = argmax(x1, x33)\n    x35 = x30(x34)\n    x36 = x30(x36)\n    "], [1.1, "def solve_627a25f5(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_7e4a9a9c(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 =42568b91\n    70446868723\n    2872536926\n    3797228669\n    2973625214\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 =42568b91000\n    70886868723\n    2872536926\n    3797228669\n    2973625214\n    0658658066\n    0281869366\n    09600060591\n    1763502461\n    \"\"\"\n    x1 = canvas(x3, THREE_BY_THREE)\n    x2 = toobject(x1, I)\n    x3 = asobject(x2)\n    x4 = vmirror(x3)\n    x5 = hline(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = asobject(x7)\n    x9 = matcher(first, x3)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = sfilter(x8, x9)\n    x13 = height(x12)\n    x14 = width(x12)\n    x15 = divide(x13, x14)\n    x16 = astuple(x15, x13)\n    x17 = mostcolor(I)\n    x18 = canvas(x17, x16)\n    x19 = multiply(x18, x509)\n    x20 = canvas(x17, x19)\n    x21 = asobject(x20)\n    x22 = frontiers(x21)\n    x23 = merge(x22)\n    x24 = paint(x18, x23)\n    x25 = objects(x24, F, F, T)\n    x26 = first(x25)\n    x27 = mostcolor(x26)"], [1.1, "def solve_d7342afd(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(identity, dmirror)\n    x5 = astuple(cmirror, hmirror)\n    x6 = combine(x4, x5)\n    x7 = rbind(rapply, I)\n    x8 = compose(first, x7)\n    x9 = chain(x3, x8, initset)\n    x10 = extract(x6, x9)\n    x11 = x10(I)\n    x12 = mostcolor(I)\n    x13 = palette(I)\n    x14 = remove(x12, x13)\n    x15 = other(x14, FIVE)\n    x16 = ofcolor(x11, x15)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, identity, vmirror)\n    x20 = x19(x11)\n    x21 = ofcolor(x20, x15)\n    x22 = ofcolor(x20, FIVE)\n    x23 = intersection(x21, x22)\n    x24 = fill(x20, TWO, x23)\n    x25 = lbind(contained, x15)\n    x26 = compose(first, last)\n    x27 = sfilter(x22, x26)\n    x28 = difference(x22, x27)\n    x29 = fill(x24, TWO, x288)\n    x30 = objects(x29, T, F, T)\n    x31 = colorfilter(x30, TWO)\n    x32 = difference(x30, x31)\n    x33 = first(x32)\n    x34 = power(outbox, TWO)\n    x35 = compose(first, last)\n    x36 = fork(equality, identity, x35)\n    x37 = compose(last, first)\n    x38 = fork(equality, identity, x37)\n    x39 = sfilter(x33, x38)\n    x40"], [1.1, "def solve_e252e7c4(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_a0293036(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = add(UNITY, UNITY)\n    x3 =insert(UNITY, x2)\n    x4 = merge(x3)\n    x5 = dmirror(x4)\n    x6 = invert(NEG_TWO)\n    x7 = shift(x5, x6)\n    x8 = astuple(NEG_TWO, ONE)\n    x9 = hmirror(x8)\n    x10 = vmirror(x9)\n    x11 = insert(x10, x8)\n    x12 = invert(x11)\n    x13 = shift(x13, x12)\n    x14 = combine(x7, x13)\n    x15 = I(x14)\n    x16 = combine(x7, x13)\n    x17 = I(x16)\n    x18 = palette(x15)\n    x19 = lbind(colorcount, x15)\n    x20 = compose(x19, color)\n    x21 = argmin(x18, x20)\n    x22 = rbind(colorcount, x21)\n    x23 = apply(x22, x16)\n    x24 = maximum(x23)\n    x25 = increment(x24)\n    x26 = interval(ONE, x25, ONE)\n    x27 = apply(x26, x24)\n    x28 = astuple(x24, x27)\n    x29 = lbind(canvas, x1)\n    x30 = lbind(occurrences, x5)\n    x31 = rbind(rapply, x22)\n    x32 = compose(initset, x31)\n    x33 = chain(first, x31, x32)\n    x34 = rbind(rapply, x22)\n    x35 = compose(initset, x35)\n    x36 = chain(first, x34, x35)\n    x37 = matcher(x33, x21)\n    x38 = fork(both, x37, x25)\n    x39 = compose(flip, x38)\n    x40 = extract(x27"], [1.1, "def solve_5269d9dc(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_3eef444f(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = chain(x4, x5, color)\n    x7 = compose(maximum, shape)\n    x8 = fork(add, x7, x6)\n    x9 = compose(invert, x8)\n    x10 = order(x2, x9)\n    x11 = rbind(add, DOWN)\n    x12 = compose(x11, ulcorner)\n    x13 = fork(contained, x12, toindices)\n    x14 = rbind(add, RIGHT)\n    x15 = compose(x14, ulcorner)\n    x16 = fork(contained, x15, toindices)\n    x17 = fork(add, x13, x16)\n    x18 = rbind(argmax, x17)\n    x19 = compose(initset, identity)\n    x20 = fork(insert, vmirror, x19)\n    x21 = fork(insert, cmirror, x20)\n    x22 = fork(insert, hmirror, x21)\n    x23 = compose(x18, x22)\n    x24 = apply(x23, x10)\n    x25 = size(x2)\n    x26 = apply(size, x2)\n    x27 = contained(ONE, x26)\n    x28 = increment(x25)\n    x29 = branch(x27, x25, x28)\n    x30 = double(x29)\n    x31 = decrement(x30)\n    x32 = apply(normalize, x24)\n    x33 = interval(ZERO, x29, ONE)\n    x34 = pair(x33, x33)\n    x35 = mpapply(shift, x32, x34)\n    x36 = astuple(x31, x31)\n    x37 = canvas(x1, x36)\n    x38 = paint(x37, x35)\n    x39 ="], [1.1, "def solve_6dc31a12(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = size(x1)\n    x5 = positive(x4)\n    x6 = branch(x5, hsplit, vsplit)\n    x7 = x6(I, TWO)\n    x8 = first(x7)\n    x9 = last(x7)\n    x10 = palette(x8)\n    x11 = matcher(identity, x9)\n    x12 = palette(x8)\n    x13 = sfilter(x10, x11)\n    x14 = size(x13)\n    x15 = positive(x14)\n    x16 = branch(x15, identity, dmirror)\n    x17 = x16(x6)\n    x18 = first(x17)\n    x19 = flip(x15)\n    x20 = hmirror(x18)\n    x21 = palette(x20)\n    x22 = lbind(colorcount, x20)\n    x23 = compose(x22, argmin)\n    x24 = rbind(colorcount, x3)\n    x25 = chain(x24, positive, x23)\n    x26 = lbind(ofcolor, x18)\n    x27 =88(x25, x20)\n    x28 = ZERO(x27)\n    x29 = lbind(subtract, x28)\n    x30 = compose(x29, last)\n    x31 = fork(argmin, x30, x21)\n    x32 = x31(x6)\n    x33 = x30(x32)\n    x34 = ofcolor(x33, x3)\n    x35 = gravitate(x34, x32)\n    x36 = x31(x35)\n    x37 = x30(x36)\n    x38 = crop(x37, x4, xitset)\n    x39 = lbind(argmin, x38)\n    x40 = lbind(rbind, manhattan)\n    x41 = compose(x39, x40)\n    x42 = fork(remove, x41"], [1.1, "def solve_839a7b8a(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18, x"], [1.1, "def solve_0a5cd984(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_b920fc30(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind"], [1.1, "def solve_685f3cdc(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = leastcolor(I)\n    x9 = rbind(ofcolor, x8)\n    x10 = rbind(rapply, I)\n    x11 = chain(first, x10, initset)\n    x12 = chain(hline, x9, x11)\n    x13 = rbind(ofcolor, x8)\n    x14 = rbind(rapply, I)\n    x15 = chain(first, x14, initset)\n    x16 = chain(leftmost, x13, x15)\n    x17 = matcher(x16, ZERO)\n    x18 = fork(both, x12, x17)\n    x19 = compose(x18, first)\n    x20 = extract(x7, x19)\n    x21 = first(x20)\n    x22 = last(x20)\n    x23 = x21(I)\n    x24 = ofcolor(x23, x8)\n    x25 = argmax(x24, last)\n    x26 = add(x25, UP_RIGHT)\n    x27 = shoot(x26, UP_RIGHT)\n    x28 = add(x25, DOWN_LEFT)\n    x29 = shoot(x28, DOWN_LEFT)\n    x30 = rbind(shoot, LEFT)\n    x31 = mapply(x30, x27)\n    x32 = rbind(shoot, LEFT)\n    x33 = mapply(x32, x29)\n    x34 = width(x23)\n    x35 = invert(x34)\n    x36 = tojvec(x35)\n    x37 = shift(x31, x36)\n    x38 = combine(x31, x37)\n    x39 ="], [1.1, "def solve_d65a73a7(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = height(I)\n    x9 = astuple(x8, ONE)\n    x10 = canvas(THREE, x9)\n    x11 = hconcat(x10, I)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = identity(DOWN)\n    x17 = connect(ORIGIN, x15)\n    x18 = fill(x11, THREE, x17)\n    x19 = identity(x13)\n    x20 = identity(x12)\n    x21 = identity(x12)\n    x22 = identity(F)\n    x23 = identity(ZERO)\n    x24 = compose(first, first)\n    x25 = chain(first, last, x24)\n    x26 = compose(first, first)\n    x27 = chain(last, last, x26)\n    x28 = chain(first, first, first)\n    x29 = chain(first, last, last)\n    x30 = chain(first, first, last)\n    x31 = chain(last, first, last)\n    x32 = compose(decrement, x25)\n    x33 = compose(decrement, x27)\n    x34 = fork(astuple, x32, x33)\n    x35 = compose(decrement, x27)\n    x36 = fork(multiply, x30, x35)\n    x37 = fork(add, x29, x36)\n    x38 = compose(decrement, x28)\n    x39 = fork(multiply, x30, x38)\n    x40 = fork(add, x29, x39)\n    x41 ="], [1.1, "def solve_bd288950(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = width(I)\n    x2 = decrement(x1)\n    x3 = tojvec(x2)\n    x4 = connect(ORIGIN, x3)\n    x5 = height(I)\n    x6 = decrement(x5)\n    x7 = toivec(x6)\n    x8 = connect(ORIGIN, x7)\n    x9 = width(I)\n    x10 = decrement(x9)\n    x11 = tojvec(x10)\n    x12 = shape(I)\n    x13 = decrement(x12)\n    x14 = connect(x11, x13)\n    x15 = height(I)\n    x16 = decrement(x15)\n    x17 = toivec(x16)\n    x18 = shape(I)\n    x19 = decrement(x18)\n    x20 = connect(x17, x19)\n    x21 = asindices(I)\n    x22 = box(x21)\n    x23 = toobject(x22, I)\n    x24 = mostcolor(x23)\n    x25 = matcher(color, x24)\n    x26 = compose(flip, x25)\n    x27 = rbind(sfilter, x26)\n    x28 = rbind(sizefilter, ONE)\n    x29 = rbind(objects, F)\n    x30 = rbind(x29, F)\n    x31 = rbind(x30, T)\n    x32 = rbind(subgrid, I)\n    x33 = chain(x27, x31, x32)\n    x34 = chain(size, x28, x33)\n    x35 = astuple(x4, x8)\n    x36 = astuple(x14, x20)\n    x37 = combine(x35, x36)\n    x38 = argmax(x37, x34)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, initset)\n    x41 = ofcolor(I, x24)\n    x42 = difference(x38, x41)\n"], [1.1, "def solve_2c656666(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, corners)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = fgpartition(I)\n    x6 = merge(x5)\n    x7 = backdrop(x4)\n    x8 = toobject(x7, I)\n    x9 = difference(x6, x8)\n    x10 = mostcolor(I)\n    x11 = inbox(x4)\n    x12 = backdrop(x11)\n    x13 = toobject(x12, I)\n    x14 = matcher(first, x10)\n    x15 = compose(flip, x14)\n    x16 = sfilter(x13, x15)\n    x17 = subgrid(x9, I)\n    x18 = palette(x16)\n    x19 = order(x18, identity)\n    x20 = lbind(colorcount, x16)\n    x21 = apply(x20, x19)\n    x22 = lbind(colorcount, x9)\n    x23 = apply(x22, x19)\n    x24 = pair(x21, x23)\n    x25 = fork(divide, first, last)\n    x26 = apply(x25, x24)\n    x27 = mostcommon(x26)\n    x28 = lbind(colorcount, x16)\n    x29 = lbind(colorcount, x9)\n    x30 = fork(divide, x28, x29)\n    x31 = matcher(x30, x27)\n    x32 = palette(x9)\n    x33 = sfilter(x32, x31)\n    x34 = rbind(contained, x33)\n    x35 = compose(x34, first)\n    x36 = sfilter(x16, x35)\n    x37 = sfilter(x9, x35)\n    x38 = height(x36)\n    x39 = height(x37)\n    x40 = divide(x38, x39)\n    x41 = width(x36)\n    x42"], [1.1, "def solve_9ea6762b(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_cf8d240f(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_4690cbcb(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = trim(I)\n    x2 = decrement(x1)\n    x3 = tojvec(x2)\n    x4 = connect(ORIGIN, x3)\n    x5 = height(I)\n    x6 = decrement(x5)\n    x7 = toivec(x6)\n    x8 = connect(ORIGIN, x7)\n    x9 = width(I)\n    x10 = decrement(x9)\n    x11 = tojvec(x10)\n    x12 =677(x8)\n    x13 = shape(I)\n    x14 = decrement(x13)\n    x15 = connect(x12, x14)\n    x16 = rbind(multiply, TWO)\n    x17 = apply(x16, x10)\n    x18 = rbind(multiply, FOUR)\n    x19 = apply(x18, x15)\n    x20 = asindices(x1)\n    x21 = ofcolor(I, ZERO)\n    x22 = difference(x20, x21)\n    x23 = rbind(multiply, THREE)\n    x24 = apply(x23, x22)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = astuple(x26, x18)\n    x28 = rbind(multiply, x27)\n    x29 = apply(x28, x26)\n    x30 = rbind(hmatching, x27)\n    x31 = rbind(vmatching, x27)\n    x32 = fork(either, x30, x31)\n    x33 = compose(x32, initset)\n    x34 = ofcolor(I, FIVE)\n    x35 = sfilter(x34, x33)\n    x36 = height(I)\n    x37 = equality(x36, FOUR)\n    x38 = insert(x33, x37)\n    x39 = THREE(x38, x34)\n    x40 = contained(x39, x35)\n    x41 = branch(x40, height, width)\n    x42"], [1.1, "def solve_dd6157f5(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(x32, x38, first)\n    x40 = matcher(x39, x20)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_6598a996(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = fork(connect, ulcorner, lrcorner)\n    x2 = x1(I)\n    x3 = shape(x2)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = subtract(x4, x5)\n    x7 = mostcolor(I)\n    x8 = shape(x2)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x5, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, insert)\n    x16 = lbind(power, inbox)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x4)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x22)\n    x24 = uppermost(x12)\n    x25 = lbind(chain, x24)\n    x26 = lbind(rbind, add)\n    x27 = compose(x26, x13)\n    x28 = lbind(compose, x24)\n    x29 = fork(rapply, x27, x28)\n    x30 = compose(x15, x29)\n    x31 = fork(contained, x23, x30)\n    x32 = compose(invert, x251)\n    x33 = fork(add, x31, x32)\n    x34 = fork(add, x33, x309)\n    x35 = fork(halve, x34, x29)\n    x36 = compose(85556, x27)\n    x37 = fork(86, lrcorner, x36)\n    x38 = compose(toivec, x37"], [1.1, "def solve_31566156(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 =795(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = lbind(chain, positive)\n    x6 = lbind(x5, size)\n    x7 = rbind(compose, backdrop)\n    x8 = lbind(lbind, intersection)\n    x9 = chain(x6, x7, x8)\n    x10 = chain(x9, backdrop, outbox)\n    x11 = lbind(sfilter, x4)\n    x12 = compose(x11, x10)\n    x13 = chain(positive, size, x12)\n    x14 = sfilter(x4, x13)\n    x15 = compose(merge, x12)\n    x16 = apply(x15, x14)\n    x17 = rbind(subgrid, I)\n    x18 = apply(x17, x16)\n    x19 = merge(x16)\n    x20 = palette(x19)\n    x21 = lbind(colorcount, x19)\n    x22 = argmin(x20, x21)\n    x23 = rbind(colorcount, x22)\n    O = argmax(x18, x23)\n    return O"], [1.1, "def solve_7a7784dc(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = replace(I, x1, ZERO)\n    x3 = apply(normalize, x2)\n    x4 = asindices(x3)\n    x5 = NEG_UNITY(x4)\n    x6 = dmirror(x5)\n    x7 = invert(x6)\n    x8 =777652(x3, x7)\n    x9 = shift(x8, x5)\n    O = paint(x2, x9)\n    return O"], [1.1, "def solve_cd53d13c(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = asobject(I)\n    x2 = lbind(shift, x1)\n    x3 = compose(x2, llcorner)\n    x4 = rbind(shift, urcorner)\n    x5 = compose(x4, urcorner)\n    x6 = chain(x3, x5, x4)\n    x7 =11(x6)\n    x8 = height(I)\n    x9 = width(I)\n    x10 = compose(last, last)\n    x11 = subtract(x10, x9)\n    x12 = decrement(x11)\n    x13 = multiply(x12, TWO)\n    x14 = add(x13, x11)\n    x15 = height(I)\n    x16 = subtract(x15, x12)\n    x17 = decrement(x16)\n    x18 = apply(x12, x14)\n    x19 = astuple(x17, x18)\n    x20 = canvas(ZERO, x19)\n    x21 = asobject(x20)\n    x22 = occurrences(I, x21)\n    x23 = mapply(x2, x22)\n    O = fill(x20, ONE, x23)\n    return O"], [1.1, "def solve_2b65b451(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = size(x5)\n    x7 = positive(x6)\n    x8 = bottomhalf(x5)\n    x9 = lefthalf(x8)\n    x10 = branch(x7, x9, x6)\n    x11 = branch(x7,)*9, x10)\n    x12 = delta(x11)\n    x13 = decrement(x12)\n    x14 = uppermost(x11)\n    x15 = remove(x14, x11)\n    x16 = lbind(position, x11)\n    x17 = lbind(shoot, x13)\n    x18 = compose(x16, x17)\n    x19 = fork(intersection, x18, identity)\n    x20 = lowermost(x5)\n    x21 = rbind(multiply, x20)\n    x22 = chain(size, x21, toindices)\n    x23 = argmax(x15, x22)\n    x24 = shape(I)\n    x25 = canvas(x24, x24)\n    x26 = lbind(shift, x11)\n    x27 = mapply(x26, x23)\n    O = paint(x25, x27)\n    return O"], [1.1, "def solve_8f1e439b(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 =7766(I)\n    x4 =66(73)\n    x5 = fork(both, x3, x4)\n    x6 = extract(x2, x5)\n    x7 = other(x6, x1)\n    x8 =171(x7)\n    x9 = multiply(TEN, TEN)\n    x10 = power(outbox, x9)\n    x11 = first(x8)\n    x12 = invert(x11)\n    x13 = shift(x11, x12)\n    x14 = shift(x13, x11)\n    x15 = toindices(x14)\n    x16 = lbind(shift, x15)\n    x17 = rbind(difference, x15)\n    x18 = chain(size, x16, x17)\n    x19 = argmax(x15, x18)\n    x20 = double(x31)\n    x21 = apply(x16, x20)\n    x22 = interval(x21, ONE, ONE)\n    x23 = difference(x21, x22)\n    x24 = apply(x16, x23)\n    x25 = astuple(x24, x15)\n    x26 = canvas(x1, x25)\n    x27 = asindices(x26)\n    x28 = apply(x16, x27)\n    x29 = lbind(argmin, x28)\n    x30 = lbind(shift, x13)\n    x31 = mapply(x30, x29)\n    O = fill(x26, x1, x31)\n    return O"], [1.1, "def solve_5dae2a90(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 =Example output:\n    4446633648\n    1334663362\n    4444463944\n    3344444393\n    4344444401\n    4334443444\n    6484463334\n    6644444446\n    0404486644\n    1154344466\n    \"\"\"\n    x1 = hsplit(I, TWO)\n    O = first(x1)\n    return O"], [1.1, "def solve_b8f7d131(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = extract(x2, x4)\n    x6 =0000(I, x5)\n    x7 = shape(I)\n    x8 = canvas(ZERO, x7)\n    x9 = colorfilter(x2, x1)\n    x10 =\n    maxcolor(I)\n    x11 = shape(I)\n    x12 = decrement(x11)\n    x13 = lbind(astuple, x12)\n    x14 = apply(x13, x9)\n    x15 = rbind(shoot, UNITY)\n    x16 = mapply(x15, x14)\n    x17 = fill(x8, x10, x16)\n    O = fill(x17, x1, x2)\n    return O"], [1.1, "def solve_5ebef8c6(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = matcher(color, ZERO)\n    x5 =423(x3)\n    x6 = sfilter(x3, x4)\n    x7 = difference(x3, x6)\n    x8 = merge(x7)\n    x9 = width(x8)\n    x10 = matcher(color, ZERO)\n    x11 =411(x10)\n    x12 = sfilter(x8, x11)\n    x13 = combine(x6, x12)\n    x14 = merge(x12)\n    x15 = fill(I, THREE, x14)\n    x16 = merge(x12)\n    x17 = fill(x15, ONE, x16)\n    O = replace(x17, ZERO, ONE)\n    return O"], [1.1, "def solve_f0ea7130(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = shape(I)\n    x2 = add(x1, DOWN)\n    x3 = crop(I, ORIGIN, x2)\n    x4 = decrement(x1)\n    x5 = tojvec(x4)\n    x6 = crop(I, x5, x2)\n    x7 = double(x3)\n    x8 = add(x7, TWO)\n    x9 = crop(I, x8, x2)\n    x10 = asobject(x9)\n    x11 =77101ecdecrement\n    x12 = argmin(x10, x11)\n    x13 = mostcolor(x12)\n    x14 = asindices(x12)\n    x15 = astuple(x13, x14)\n    x16 = ulcorner(x12)\n    x17 = rbind(shoot, x16)\n    x18 = mapply(x17, x15)\n    x19 = underfill(I, x13, x18)\n    x20 = objects(x19, T, F, T)\n    x21 = colorfilter(x20, x13)\n    x22 = rbind(bordering, I)\n    x23 = mfilter(x21, x22)\n    O = cover(x19, x23)\n    return O"], [1.1, "def solve_c9412091(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = astuple(FOUR, FOUR)\n    x2 = crop(I, ORIGIN, x1)\n    x3 = TWO_BY_TWO)\n    x4 = asobject(x2)\n    x5 = rbind(multiply, UNITY)\n    x6 = apply(x5, x4)\n    x7 = asobject(x6)\n    x8 = UNITY(x1)\n    x9 = NEG_UNITY)\n    x10 = shift(x7, x9)\n    x11 = paint(I, x10)\n    x12 = toindices(x7)\n    x13 = lbind(shift, x12)\n    x14 = mapply(x13, x6)\n    O = fill(x11, TWO, x14)\n    return O"], [1.1, "def solve_e4a63964(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 =36fcc3(I, ORIGIN)\n    x2 = decrement(x1)\n    x3 = papply(astuple, x2, x4)\n    x4 = lbind(shift, x3)\n    x5 = mapply(x4, x2)\n    O = paint(I, x5)\n    return O"], [1.1, "def solve_d5cc1f65(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = compose(x2, trim)\n    x4 = apply(x3, x1)\n    x5 = lbind(contained, x4)\n    x6 = compose(x5, flip)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(contained, x7)\n    x9 = compose(x8, vsplit)\n    x10 = sfilter(x7, x9)\n    x11 = merge(x10)\n    x12 = lbind(contained, x11)\n    x13 = compose(x12, vmirror)\n    x14 = sfilter(x7, x13)\n    x15 = compose(size, x7)\n    x16 = size(x14)\n    x17 = greater(x15, x16)\n    x18 = subgrid(x14, I)\n    x19 = trim(x18)\n    x20 = lefthalf(x19)\n    x21 = righthalf(x19)\n    x22 = vmirror(x21)\n    x23 = objects(x20, T, F, T)\n    x24 = merge(x23)\n    x25 =422(x24)\n    x26 = cellwise(x25, x20, x08)\n    x27 = order(x26, identity)\n    x28 = first(x27)\n    x29 = last(x27)\n    x30 = x28(x20)\n    x31 = flip(x30)\n    x32 = replace(x20, x24, x7)\n    x33 = replace(x32, x24, x9)\n    x34 = branch(x31, x33, x24)\n    O = x15(x34, x39)\n    return O"], [1.1, "def solve_a520631b(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = totuple(x2)\n    x4 = apply(color, x3)\n    x5 = mostcommon(x4)\n    x6 =467618(UNITY)\n    x7 = canvas(x5, UNITY)\n    O = paint(x7, x6)\n    return O"], [1.1, "def solve_d115a417(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 =96(I, identity)\n    x2 =44(x1, identity)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, lefthalf, tophalf)\n    x5 = x4(I)\n    x6 = bottomhalf(I)\n    x7 = index(x5, ORIGIN)\n    x8 = palette(x6)\n    x9 = palette(x7)\n    x10 = intersection(x8, x9)\n    x11 = remove(x7, x10)\n    x12 = palette(x6)\n    x13 = other(x12, x11)\n    x14 = palette(x6)\n    x15 = other(x14, x13)\n    x16 = intersection(x15, x13)\n    x17 = ofcolor(x5, x13)\n    x18 = ofcolor(x6, x13)\n    x19 = combine(x17, x18)\n    x20 = fill(x5, x13, x19)\n    O = x4(x20)\n    return O"], [1.1, "def solve_2de33c8d(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(UP, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = fork(combine, initset,000000\n    x9 = compose(x8, first)\n    x10 = compose(x8, last)\n    x11 = fork(difference, x9, x10)\n    x12 = compose(x11, toindices)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = matcher(first, x15)\n    x18 = compose(flip, x17)\n    x19 = sfilter(x15, x18)\n    x20 = dmirror(x19)\n    x21 = subtract(x16, x20)\n    x22 = branch(x21, hsplit, vsplit)\n    x23 = merge(x22)\n    x24 = sfilter(x22, x23)\n    x25 = dmirror(x24)\n    x26 = shape(x25)\n    x27 = add(x26, TWO_BY_ZERO)\n    x28 = canvas(ZERO, x27)\n    x29 = asobject(x28)\n    x30 = shift(x29, UNITY)\n    O = paint(x26, x30)\n    return O"], [1.1, "def solve_ce575692(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 =725312 ofsubtract(NINE, ZERO)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [1.1, "def solve_49a2feb2(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = sizefilter(x2, ONE)\n    x4 = apply(size, x3)\n    x5 = dedupe(x4)\n    x6 = objects(I, T, F, F)\n    x7 = merge(x6)\n    x8 = size(x7)\n    x9 = equality(x1, x8)\n    x10 = branch(x9, height, width)\n    x11 = x10(x7)\n    x12 = x10(x8)\n    x13 = subtract(x11, x12)\n    x14 = shift(x5, x13)\n    x15 = other(x1, x14)\n    x16 = x10(x10)\n    x17 = color(x15)\n    x18 = hmirror(I)\n    x19 = cover(I, x18)\n    x20 = objects(x19, T, F, T)\n    x21 = apply(toindices, x20)\n    x22 = fork(either, x21, box)\n    x23 = sfilter(x4, x22)\n    x24 = manhattan(x23, x35)\n    x25 = palette(x23)\n    x26 =recolor(x25, x24)\n    x27 = argmin(x26, x24)\n    x28 = other(x25, x27)\n    x29 = color(x28)\n    x30 = mmirror(x28)\n    x31 = recolor(x28, x30)\n    x32 = combine(x27, x31)\n    x33 = paint(x19, x32)\n    x34 = ofcolor(x33, x29)\n    x35 =441\n     gravitate(x34, x31)\n    x36 = shift(x34, x35)\n    x37 = shift(x36, x34)\n    x38 = combine(x34, x37)\n    x39 = paint(x33, x38)\n    O = x10(x39)\n    return O"], [1.1, "def solve_d11b4a3e(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = rbind(remove, TWO)\n    x2 = compose(x1, last)\n    x3 = rbind(multiply, THREE)\n    x4 = compose(x3, x2)\n    x5 = fork(equality, identity, x4)\n    x6 = compose(x5, first)\n    x7 = extract(x1, x6)\n    x8 = last(x7)\n    x9 = first(x8)\n    x10 = last(x7)\n    x11 = x2(x9)\n    x12 = x2(x10)\n    x13 =9999(first, x11)\n    x14 =9999(first, x12)\n    x15 = cover(I, x11)\n    x16 = fill(x15, ONE, x13)\n    x17 = fill(x16, TWO, x14)\n    O = x2(x17)\n    return O"], [1.1, "def solve_ab2533b2(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = toivec(x1)\n    x5 = crop(I, ORIGIN, x4)\n    x6 =2295587375 asobject(x5)\n    x7 = palette(I)\n    x8 = matcher(identity, x4)\n    x9 = argmin(x7, x8)\n    x10 = asindices(I)\n    x11 = ofobject(x10, I)\n    x12 = difference(x10, x11)\n    x13 = ofcolor(I, x9)\n    x14 = rbind(interval, ONE)\n    x15 = rbind(x14, FOUR)\n    x16 = rbind(sfilter, x15)\n    x17 = lbind(occurrences, I)\n    x18 = lbind(lbind, shift)\n    x19 = compose(x17, x18)\n    x20 = lbind(recolor, x9)\n    x21 = rbind(mapply, x19)\n    x22 = rbind(occurrences, x16)\n    x23 = compose(x22, x18)\n    x24 = fork(apply, x23, x19)\n    x25 = fork(combine, x12, x24)\n    x26 =apply(x25, x3)\n    x27 = ofcolor(I, x9)\n    x28 = mapply(toindices, x27)\n    x29 = fill(I, x9, x28)\n    x30 = mapply(x25, x3)\n    x31 = fill(x29, x10, x30)\n    O = replace(x31, x4, SIX)\n    return O"], [1.1, "def solve_a4a355a4(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 =33333(I)\n    x2 =4213175300\n    4213171351\n    4292302363\n    6932577355\n    7360476287\n    3277069433\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = ofcolor(I, ONE)\n    x3 = lowermost(x2)\n    x4 = lbind(subtract, x3)\n    x5 = chain(toivec, x4, lowermost)\n    x6 = fork(shift, identity, x5)\n    x7 = merge(x1)\n    x8 = cover(I, x7)\n    x9 = mapply(x6, x1)\n    O = paint(x8, x9)\n    return O"], [1.1, "def solve_8e3746e4(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 =637585(I)\n    x2 = mostcolor(I)\n    x3 = lefthalf(x1)\n    x4 = righthalf(x1)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(x3)\n    x8 = x6(x3)\n    x9 = shape(x3)\n    x10 = palette(x3)\n    x11 = palette(x3)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x13, x13)\n    x15 = ofcolor(x13, x6)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [1.1, "def solve_832f21a1(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = cover(I, x2)\n    x4 = apply(normalize, x1)\n    x5 = chain(size, dedupe, flip)\n    x6 = argmax(x4, x5)\n    x7 = repeat(x6, ONE)\n    x8 = merge(x7)\n    x9 = repeat(x6, ONE)\n    x10 = compose(increment, height)\n    x11 = chain(greater, maximum, x10)\n    x12 = compose(x11, asobject)\n    x13 =7777(x12)\n    x14 = upscale(x13, TWO)\n    x15 = shift(x14, TWO_BY_TWO)\n    x16 = paint(x3, x15)\n    x17 = toindices(x15)\n    x18 = lbind(contained,ZERO)\n    x19 = compose(x18, last)\n    x20 = sfilter(x17, x19)\n    x21 =64(x20)\n    x22 = shift(x21, UNITY)\n    O = paint(x16, x22)\n    return O"], [1.1, "def solve_ec52659b(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 =Example output:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9210880830\n    2048742800\n    3626664135\n    8001913937\n    \"\"\"\n    x2 = objects(I, T, F, T)\n    x3 = colorfilter(x2, ZERO)\n    x4 = difference(x2, x3)\n    x5 = merge(x4)\n    x6 = rbind(shoot, DOWN)\n    x7 = mapply(x6, x5)\n    x8 = fill(I, ONE, x7)\n    x9 = mapply(x6, x3)\n    O = fill(x8, TWO, x9)\n    return O"], [1.1, "def solve_054db099(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(ORIGIN, DOWN_LEFT)\n    x5 = rbind(multiply, x4)\n    x6 = apply(x5, x3)\n    x7 =89700cd78\n    x8 = rightmost(x7)\n    x9 = lbind(shift, x8)\n    x10 = mapply(x9, x6)\n    O = paint(I, x10)\n    return O"], [1.1, "def solve_c34ac857(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 =\u2026izet(TWO)\n    x4 = initset(TWO)\n    x5 = recolor(TWO, x3)\n    x6 = recolor(THREE, x2)\n    x7 = insert(x5, x6)\n    x8 = insert(x7, x5)\n    x9 = fill(I, TWO, x8)\n    O = fill(x9, UNITY, x7)\n    return O"], [1.1, "def solve_9fb1c023(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = lefthalf(x1)\n    x4 = righthalf(x1)\n    x5 = tophalf(x4)\n    x6 = righthalf(x4)\n    x7 = bottomhalf(x6)\n    x8 = index(x3, ORIGIN)\n    x9 = palette(x3)\n    x10 =6042(x9)\n    x11 = palette(x3)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = recolor(x13, x1)\n    x16 = recolor(x14, x11)\n    x17 = combine(x15, x16)\n    x18 = combine(x15, x16)\n    x19 = recolor(x17, x1)\n    x20 = occurrences(x4, x17)\n    x21 = outbox(x20)\n    x22 = ofcolor(x3, x13)\n    x23 = urcorner(x22)\n    x24 = ofcolor(x3, x14)\n    x25 = intersection(x23, x24)\n    x26 = first(x25)\n    x27 = shape(I)\n    x28 = canvas(x8, x27)\n    O = fill(x28, x13, x26)\n    return O"], [1.1, "def solve_0c490705(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, positive, branch)\n    x6 = branch(x4, mostcolor, x5)\n    x7 = canvas(x6, UNITY)\n    x8 = add(NEG_UNITY, NEG_UNITY)\n    x9 = shape(I)\n    x10 = maximum(x9)\n    x11 = lbind(multiply, x10)\n    x12 = chain(x11, maximum, initset)\n    x13 = compose(x12, x7)\n    x14 = lbind(intersection, x13)\n    x15 = compose(size, x14)\n    x16 = argmax(x6, x15)\n    x17 = objects(x6, T, F, T)\n    x18 = color(x16)\n    x19 = lbind(recolor, x18)\n    x20 = rbind(argmax, rightmost)\n    x21 = chain(x20, x19, x9)\n    x22 =lbind(apply, x21)\n    x23 = fork(toindices, x22, x17)\n    x24 = fork(mapply, x23, x19)\n    x25 = mostcolor(I)\n    x26 = ofcolor(I, x25)\n    x27 =9 asindices(I)\n    x28 = objects(x6, T, F, T)\n    x29 = rbind(argmax, x27)\n    x30 = fork(recolor, color, x29)\n    x31 = mapply(x30, x28)\n    x32 = paint(x7, x31)\n    x33 = mapply(x27, x34)\n    O = paint(x32, x33)\n    return O"], [1.1, "def solve_d010946c(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = rbind(ofcolor, ORIGIN)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = lefthalf(I)\n    x5 = righthalf(I)\n    x6 = leftmost(x1)\n    x7 =114(x6)\n    x8 = tojvec(x7)\n    x9 = add(x8, THREE)\n    x10 = shift(x4, x9)\n    x11 = fill(I, ZERO, x10)\n    x12 = merge(x11)\n    O = fill(x11, FOUR, x12)\n    return O"], [1.1, "def solve_fc36ca3c(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = occurrences(x1, x2)\n    x4 = leastcolor(x1)\n    x5 = palette(x1)\n    x6 = repeat(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = leastcolor(x1)\n    x9 = palette(x1)\n    x10 = remove(x8, x9)\n    x11 = remove(x8, x10)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = ofcolor(x13, x12)\n    x15 = astuple(x14, x13)\n    x16 = ulcorner(x12)\n    x17 = crop(x15, x16, x15)\n    x18 = asobject(x17)\n    x19 = hperiod(x18)\n    x20 = height(I)\n    x21 = astuple(x20, x13)\n    x22 = ulcorner(x5)\n    x23 = crop(x22, ORIGIN, x22)\n    x24 = hperiod(x23)\n    x25 = astuple(x24, x14)\n    x26 = increment(x25)\n    x27 = interval(ONE, x26, ONE)\n    x28 = product(x27, x27)\n    x29 = lbind(multiply, x ONE)\n    x30 = apply(x29, x28)\n    x31 = lbind(shift, x18)\n    x32 = mapply(x31, x30)\n    x33 = paint(x17, x32)\n    x34 = rot90(x33)\n    x35 =    020(I)\n    x36 =\n    0233358330(x35)\n    x37 = rot270(x36)\n    x38 = papply(shift, x32, x37)\n    x39 = apply(x21, x38)\n    O = paint(x33, x39)\n    return O"], [1.1, "def solve_be366381(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 =444449713834)\n    x2 =4771231458\n    x3 = shape(I)\n    x4 = decrement(x3)\n    x5 = index(I, x4)\n    x6 = equality(x5, FOUR)\n    x7 = branch(x6, UP, RIGHT)\n    x8 = canvas(x7, x4)\n    x9 = equality(x1, TWO)\n    x10 = branch(x9, RIGHT, DOWN)\n    x11 = branch(x10, LEFT, RIGHT)\n    x12 = greater(x11, TWO)\n    x13 = branch(x12,phalf, lefthalf)\n    x14 = branch(x12, numcolors,(x13)\n    x15 = branch(x12,33, FOUR)\n    x16 = x15(I)\n    x17 = mostcolor(x16)\n    x18 = shape(I)\n    x19 = canvas(x17, x18)\n    x20 = hconcat(x16, x19)\n    x21 = objects(x20, F, F, T)\n    x22 = argmax(x21, numcolors)\n    x23 = asindices(x22)\n    x24 = matcher(first, x17)\n    x25 = sfilter(x23, x24)\n    x26 = difference(x23, x25)\n    x27 = mostcolor(x26)\n    x28 = color(x22)\n    x29 = fill(x20, x27, x28)\n    x30 = ulcorner(x22)\n    x31 = width(x22)\n    x32 = divide(x30, x31)\n    x33 = increment(x32)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = merge(x41)\n    x36 = cover(x29, x35)\n    x37 = lbind(shift, x22)\n    x38 = mapply(x37, x34)\n    O = paint(x32, x38)\n    return O"], [1.1, "def solve_d00beb1d(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = rbind(shoot, UNITY)\n    x2 = rbind(add, UNITY)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = chain(decrement, last, x2)\n    x6 = fork(multiply, astuple, x5)\n    x7 = fork(equality, identity, x6)\n    x8 =223(TEN)\n    x9 = branch(x8, initset, x5)\n    x10 = insert(x9, I)\n    x11 = branch(x7, width, height)\n    x12 = apply(x11, x10)\n    x13 = difference(x10, x12)\n    x14 = mapply(x4, x13)\n    x15 = paint(I, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = apply(toindices, x16)\n    x18 = fork(either, x15, x17)\n    x19 = x18(x1)\n    O = paint(x15, x19)\n    return O"], [1.1, "def solve_2ed6b6dd(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = rot270(I)\n    x2 = height(x1)\n    x3 = rot90(I)\n    x4 = matcher(size, ZERO)\n    x5 = rbind(ofcolor, ZERO)\n    x6 = compose(flip, x4)\n    x7 = extract(x3, x6)\n    x8 = outbox(x7)\n    x9 = width(x1)\n    x10 = ofcolor(x, x9)\n    x11 = leftmost(x10)\n    x12 = ZERO(x11)\n    x13 = toobject(x12, x1)\n    x14 = color(x13)\n    x15 =14(x13)\n    x16 = shift(x8, x9)\n    x17 = shift(x8, x14)\n    x18 = paint(x15, x16)\n    O = paint(x18, x17)\n    return O"]], "1e97544e": [[0.05090373268510345, "def solve_5cf51ca1(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_6de94bc4(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_140a88ad(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_63874e74(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_6f15edbf(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.052301372264443736, "def solve_7f22adbe(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.052301372264443736, "def solve_3ab62eee(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.05978427658322649, "def solve_69282a7c(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = astuple(x1, ONE)\n    x8 = astuple(ONE, x2)\n    x9 = decrement(x1)\n    x10 = decrement(x2)\n    x11 = toivec(x10)\n    x12 = tojvec(x9)\n    x13 = crop(I, x11, x8)\n    x14 = crop(I, x12, x7)\n    x15 = asobject(x14)\n    x16 = asobject(x13)\n    x17 = vperiod(x15)\n    x18 = hperiod(x16)\n    x19 = astuple(x17, x18)\n    x20 = lbind(multiply, x19)\n    x21 = neighbors(ORIGIN)\n    x22 = mapply(neighbors, x21)\n    x23 = apply(x20, x22)\n    x24 = lbind(shift, x6)\n    x25 = mapply(x24, x23)\n    O = paint(I, x25)\n    return O"], [0.05978427658322649, "def solve_eb241a5b(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = astuple(x1, ONE)\n    x8 = astuple(ONE, x2)\n    x9 = decrement(x1)\n    x10 = decrement(x2)\n    x11 = toivec(x10)\n    x12 = tojvec(x9)\n    x13 = crop(I, x11, x8)\n    x14 = crop(I, x12, x7)\n    x15 = asobject(x14)\n    x16 = asobject(x13)\n    x17 = vperiod(x15)\n    x18 = hperiod(x16)\n    x19 = astuple(x17, x18)\n    x20 = lbind(multiply, x19)\n    x21 = neighbors(ORIGIN)\n    x22 = mapply(neighbors, x21)\n    x23 = apply(x20, x22)\n    x24 = lbind(shift, x6)\n    x25 = mapply(x24, x23)\n    O = paint(I, x25)\n    return O"], [0.06555616266185658, "def solve_0c27658e(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_24218d5b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_0af3fcba(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_ab4ac2ec(I):\n    x1 = initset(ORIGIN)\n    x2 = mostcolor(I)\n    x3 = recolor(x2, x1)\n    x4 = upscale(x3, TWO)\n    x5 = occurrences(I, x4)\n    x6 = lbind(shift, x4)\n    x7 = mapply(x6, x5)\n    O = fill(I, x2, x7)\n    return O"], [0.06555616266185658, "def solve_b6ebc576(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = height(x2)\n    x4 = height(I)\n    x5 = interval(ZERO, x4, x3)\n    x6 = lbind(shift, x2)\n    x7 = compose(x6, toivec)\n    x8 = compose(x7, invert)\n    x9 = fork(combine, x7, x8)\n    x10 = mapply(x9, x5)\n    O = paint(I, x10)\n    return O"], [0.06555616266185658, "def solve_478c19c1(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.06555616266185658, "def solve_550ef4ec(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_106facec(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, F, F, T)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.06555616266185658, "def solve_528704f2(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.06555616266185658, "def solve_4e13b567(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(objects, F)\n    x4 = rbind(x3, F)\n    x5 = rbind(x4, T)\n    x6 = lbind(canvas, x1)\n    x7 = compose(x6, shape)\n    x8 = fork(paint, x7, normalize)\n    x9 = compose(x5, x8)\n    x10 = fork(colorfilter, x9, color)\n    x11 = rbind(shift, RIGHT)\n    x12 = rbind(argmax, rightmost)\n    x13 = compose(x12, x10)\n    x14 = fork(remove, x13, x10)\n    x15 = chain(x11, merge, x14)\n    x16 = rbind(argmax, rightmost)\n    x17 = compose(x16, x10)\n    x18 = fork(combine, x17, x15)\n    x19 = fork(shift, x18, ulcorner)\n    x20 = merge(x2)\n    x21 = fill(I, x1, x20)\n    x22 = mapply(x19, x2)\n    O = paint(x21, x22)\n    return O"], [0.06884741415180903, "def solve_6bf26ddb(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = prapply(connect, x1, x1)\n    x3 = rbind(greater, ONE)\n    x4 = compose(x3, size)\n    x5 = sfilter(x2, x4)\n    x6 = fork(either, vline, hline)\n    x7 = mfilter(x5, x6)\n    x8 = fill(I, THREE, x7)\n    O = fill(x8, EIGHT, x1)\n    return O"], [0.06959741552663885, "def solve_7e389fdd(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.06959741552663885, "def solve_f6ff28da(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.0702135574591548, "def solve_b0544453(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.0702135574591548, "def solve_a4c6b97f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.07641808482315048, "def solve_e38a93e3(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_8b29b504(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_932f29d0(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_39f43a80(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_d8c3e6fd(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_6f204069(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_92771b2e(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_2969f457(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_8beb79b4(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_9d28e95c(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_0f28f83b(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_35a05590(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_80c8d9f2(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_133c5f5f(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_8b3c0e7e(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_9e842b8d(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_2c5f438a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_9d7b5f71(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_0e20c981(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_0e0151cf(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_2e6aabc3(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_859d01f3(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07909280166991962, "def solve_c1c595ec(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.08283557492092357, "def solve_a9048e75(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.08461342024137491, "def solve_fc9bef9f(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, TWO)\n    x3 = colorfilter(x1, ONE)\n    x4 = lbind(recolor, TWO)\n    x5 = rbind(shoot, UNITY)\n    x6 = chain(x4, x5, lrcorner)\n    x7 = lbind(recolor, ONE)\n    x8 = rbind(shoot, NEG_UNITY)\n    x9 = chain(x7, x8, ulcorner)\n    x10 = mapply(x6, x2)\n    x11 = mapply(x9, x3)\n    x12 = combine(x10, x11)\n    O = paint(I, x12)\n    return O"], [0.0868238750835419, "def solve_0562bfae(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_f75f3c35(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_00fa8610(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_f7794dd4(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_f497ff22(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x7 = rbind(shoot, UNITY)\n    x8 = rbind(shoot, NEG_UNITY)\n    x9 = fork(combine, x7, x8)\n    x10 = fork(combine, x5, x9)\n    x11 = index(I, x2)\n    x12 = x10(x2)\n    O = fill(I, x11, x12)\n    return O"], [0.0868238750835419, "def solve_c582b6d3(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_45400bf2(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_9466a878(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_5b9e2bb1(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_ff584b8b(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_45da82ec(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_11520515(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork( combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08755545985583944, "def solve_f6e9e1f3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.09320112108071621, "def solve_d974ba31(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [0.09320112108071621, "def solve_32798bd7(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [0.09577613189738625, "def solve_b684326d(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.09577613189738625, "def solve_1e0a117f(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.10940340166655955, "def solve_253fda4b(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = prapply(connect, x2, x2)\n    x4 = rbind(greater, ONE)\n    x5 = compose(x4, size)\n    x6 = sfilter(x3, x5)\n    x7 = fork(either, vline, hline)\n    x8 = mfilter(x6, x7)\n    x9 = fill(I, THREE, x8)\n    x10 = leastcolor(I)\n    O = fill(x9, x10, x2)\n    return O"], [0.11410495726315961, "def solve_b3a43dd6(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.11873730483078786, "def solve_42d965a8(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.11873730483078786, "def solve_c2251fc1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.11873730483078786, "def solve_334b0c94(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.11873730483078786, "def solve_5424ab54(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.11888660581291065, "def solve_b257b053(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, FIVE)\n    x3 = compose(backdrop, inbox)\n    x4 = mapply(x3, x2)\n    O = fill(I, TWO, x4)\n    return O"], [0.12169800916884342, "def solve_7371de38(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.12169800916884342, "def solve_73dd08fd(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, x1, I)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.1239852807263826, "def solve_91fadd8d(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.1239852807263826, "def solve_75cf0440(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.1239852807263826, "def solve_5c8463d7(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.1239852807263826, "def solve_6f51c6e6(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.1239852807263826, "def solve_6f8cc053(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.1239852807263826, "def solve_6c96af8c(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.1239852807263826, "def solve_22e8cd1b(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.1239852807263826, "def solve_834dcd23(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.1239852807263826, "def solve_6f0d7949(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.1239852807263826, "def solve_d0c0cc4f(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.12547429398211177, "def solve_01d8ab5d(I):\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.12583356972621706, "def solve_20e19bdd(I):\n    x1 = leastcolor(I)\n    x2 = mostcolor(I)\n    x3 = ofcolor(I, x1)\n    x4 = replace(I, x1, x2)\n    x5 = mapply(dneighbors, x3)\n    x6 = mapply(ineighbors, x3)\n    x7 = fill(x4, ONE, x5)\n    O = fill(x7, x1, x6)\n    return O"], [0.12706715242232244, "def solve_e73b6a09(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, last)\n    x5 = fork(recolor, first, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [0.1291415585217549, "def solve_b85676d0(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = lbind(recolor, EIGHT)\n    x4 = rbind(ofcolor, x1)\n    x5 = chain(x3, backdrop, x4)\n    x6 = fork(paint, identity, x5)\n    x7 = height(I)\n    x8 = vsplit(I, x7)\n    x9 = mapply(x6, x8)\n    x10 = ofcolor(x9, EIGHT)\n    x11 = dmirror(I)\n    x12 = width(I)\n    x13 = vsplit(x11, x12)\n    x14 = mapply(x6, x13)\n    x15 = dmirror(x14)\n    x16 = ofcolor(x15, EIGHT)\n    x17 = combine(x10, x16)\n    x18 = difference(x17, x2)\n    O = fill(I, EIGHT, x18)\n    return O"], [0.13134103434345124, "def solve_2b217e60(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.13134103434345124, "def solve_3a9385f7(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.1316993167720556, "def solve_bcf60a28(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.13508938916939192, "def solve_7b76dcc3(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = mostcolor(I)\n    O = replace(x3, x4, ZERO)\n    return O"], [0.13508938916939192, "def solve_b3740c24(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = mostcolor(I)\n    O = replace(x3, x4, ZERO)\n    return O"], [0.13610097936044, "def solve_d51258c7(I):\n    O = switch(I, FIVE, EIGHT)\n    return O"], [0.1391543174866792, "def solve_8d1b1cb9(I):\n    x1 = vmirror(I)\n    x2 = fgpartition(x1)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = compose(double, halve)\n    x6 = fork(equality, identity, x5)\n    x7 = compose(x6, last)\n    x8 = sfilter(x4, x7)\n    x9 = fill(x1, THREE, x8)\n    O = vmirror(x9)\n    return O"], [0.14169822982995706, "def solve_6d15cfe0(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, THREE, x3)\n    return O"], [0.14343122109904335, "def solve_a9f96576(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.14343122109904335, "def solve_a21dad91(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.14368355297075183, "def solve_eb81c715(I):\n    O = switch(I, EIGHT, TWO)\n    return O"], [0.14616952830534066, "def solve_d66e843d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.14616952830534066, "def solve_b3052bd5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.14616952830534066, "def solve_95310504(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.15595293774320831, "def solve_bececf5c(I):\n    x1 = asobject(I)\n    x2 = shape(I)\n    x3 = decrement(x2)\n    x4 = index(I, x3)\n    x5 = double(x2)\n    x6 = canvas(x4, x5)\n    x7 = paint(x6, x1)\n    x8 = objects(x7, F, F, T)\n    x9 = first(x8)\n    x10 = shift(x9, LEFT)\n    x11 = vperiod(x10)\n    x12 = hperiod(x10)\n    x13 = neighbors(ORIGIN)\n    x14 = lbind(mapply, neighbors)\n    x15 = power(x14, TWO)\n    x16 = x15(x13)\n    x17 = astuple(x11, x12)\n    x18 = lbind(multiply, x17)\n    x19 = apply(x18, x16)\n    x20 = lbind(shift, x10)\n    x21 = mapply(x20, x19)\n    O = paint(I, x21)\n    return O"], [0.15924388832696912, "def solve_60276051(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.15924388832696912, "def solve_4a44dff8(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.16903724504454612, "def solve_256aaa98(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.16903724504454612, "def solve_fabbfa31(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.16903724504454612, "def solve_ff55b20e(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.16903724504454612, "def solve_facf1b7e(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.16903724504454612, "def solve_dfcaedb7(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.1773065582183363, "def solve_ea8ba0d2(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.1773065582183363, "def solve_455e7882(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.1773065582183363, "def solve_594890e3(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.1773065582183363, "def solve_133e65d4(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.1773065582183363, "def solve_19345a78(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.17772191094295955, "def solve_c3dfde69(I):\n    x1 = asindices(I)\n    x2 = dmirror(I)\n    x3 = invert(NINE)\n    x4 = papply(pair, I, x2)\n    x5 = lbind(apply, maximum)\n    x6 = apply(x5, x4)\n    x7 = ofcolor(x6, ZERO)\n    x8 = difference(x1, x7)\n    x9 = toobject(x8, x6)\n    x10 = interval(x3, NINE, ONE)\n    x11 = interval(NINE, x3, NEG_ONE)\n    x12 = pair(x10, x11)\n    x13 = lbind(shift, x9)\n    x14 = mapply(x13, x12)\n    O = paint(x6, x14)\n    return O"], [0.18335650834767755, "def solve_77de7638(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.19082520987900767, "def solve_fb4a3764(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, center)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.1968197311802683, "def solve_b6b6ff95(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = argmax(x1, x2)\n    x5 = remove(x3, x1)\n    x6 = other(x5, x4)\n    x7 = subgrid(x6, I)\n    x8 = frontiers(x7)\n    x9 = sfilter(x8, hline)\n    x10 = size(x9)\n    x11 = positive(x10)\n    x12 = branch(x11, dmirror, identity)\n    x13 = x12(I)\n    x14 = color(x6)\n    x15 = ofcolor(x13, x14)\n    x16 = subgrid(x15, x13)\n    x17 = trim(x16)\n    x18 = lefthalf(x17)\n    x19 = vmirror(x18)\n    x20 = asobject(x19)\n    x21 = righthalf(x17)\n    x22 = vmirror(x21)\n    x23 = asobject(x22)\n    x24 = color(x4)\n    x25 = inbox(x15)\n    x26 = backdrop(x25)\n    x27 = fill(x13, x24, x26)\n    x28 = urcorner(x15)\n    x29 = add(x28, UNITY)\n    x30 = shift(x23, x29)\n    x31 = ulcorner(x15)\n    x32 = width(x20)\n    x33 = invert(x32)\n    x34 = tojvec(x33)\n    x35 = add(DOWN, x34)\n    x36 = add(x31, x35)\n    x37 = shift(x20, x36)\n    x38 = combine(x30, x37)\n    x39 = paint(x27, x38)\n    O = x12(x39)\n    return O"], [0.20306126840468763, "def solve_e3124d15(I):\n    O = dmirror(I)\n    return O"], [0.20306126840468763, "def solve_c25ee63a(I):\n    O = dmirror(I)\n    return O"], [0.20306126840468763, "def solve_6940f0a4(I):\n    O = dmirror(I)\n    return O"], [0.20306126840468763, "def solve_71c903a3(I):\n    O = dmirror(I)\n    return O"], [0.20919525218074, "def solve_4ce1ebb8(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.20940552136163237, "def solve_ecb54769(I):\n    O = rot90(I)\n    return O"], [0.20955539093771366, "def solve_d19cb2a0(I):\n    O = rot270(I)\n    return O"], [0.20955539093771366, "def solve_17c0ebcc(I):\n    O = rot270(I)\n    return O"], [0.20955539093771366, "def solve_edec0ea8(I):\n    O = rot270(I)\n    return O"], [0.21174973638101943, "def solve_d524434e(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot180(x3)\n    return O"], [0.21391916164730382, "def solve_d0d2f0b1(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.21391916164730382, "def solve_29872a4a(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.21391916164730382, "def solve_fef5ae9a(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.21391916164730382, "def solve_2ece6a78(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.21391916164730382, "def solve_f86b12a1(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.21725528374412337, "def solve_f8cb861b(I):\n    x1 = objects(I, T, F, T)\n    x2 = compose(backdrop, inbox)\n    x3 = mapply(x2, x1)\n    O = fill(I, EIGHT, x3)\n    return O"], [0.21904040042169512, "def solve_ed253900(I):\n    O = rot180(I)\n    return O"], [0.21904040042169512, "def solve_edc1c9f4(I):\n    O = rot180(I)\n    return O"], [0.21924101368423873, "def solve_07926c0a(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = astuple(SIX, THREE)\n    x6 = astuple(FOUR, EIGHT)\n    x7 = astuple(ONE, TWO)\n    x8 = initset(x5)\n    x9 = insert(x6, x8)\n    x10 = insert(x7, x9)\n    x11 = mapply(x4, x10)\n    O = paint(I, x11)\n    return O"], [0.21924101368423873, "def solve_9ce7a383(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = astuple(SIX, THREE)\n    x6 = astuple(FOUR, EIGHT)\n    x7 = astuple(ONE, TWO)\n    x8 = initset(x5)\n    x9 = insert(x6, x8)\n    x10 = insert(x7, x9)\n    x11 = mapply(x4, x10)\n    O = paint(I, x11)\n    return O"], [0.21924101368423873, "def solve_923575f8(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = astuple(SIX, THREE)\n    x6 = astuple(FOUR, EIGHT)\n    x7 = astuple(ONE, TWO)\n    x8 = initset(x5)\n    x9 = insert(x6, x8)\n    x10 = insert(x7, x9)\n    x11 = mapply(x4, x10)\n    O = paint(I, x11)\n    return O"], [0.22840986411980327, "def solve_f0b995f3(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.2537260279414613, "def solve_19b78d0e(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_e3525e06(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_234d92b1(I):\n    x1 = dmirror(I)\n    x2 = merge(x1)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_29b70b6f(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_7b1ddecf(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_f2c355ba(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_2b3a5f0c(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_32ba8af4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.25570919672274256, "def solve_e5047fc3(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.25570919672274256, "def solve_d1e1fb82(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.2686091447400782, "def solve_aa5d6398(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(add, height, width)\n    x3 = compose(decrement, x2)\n    x4 = fork(equality, x3, size)\n    x5 = fork(difference, toindices, box)\n    x6 = compose(size, x5)\n    x7 = matcher(x6, ZERO)\n    x8 = sfilter(x1, x4)\n    x9 = difference(x1, x8)\n    x10 = sfilter(x9, x7)\n    x11 = merge(x1)\n    x12 = fill(I, TWO, x11)\n    x13 = merge(x8)\n    x14 = fill(x12, ONE, x13)\n    x15 = merge(x10)\n    O = fill(x14, SIX, x15)\n    return O"], [0.2704028721250951, "def solve_c8371624(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.2704028721250951, "def solve_b3613949(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.2704028721250951, "def solve_8f288431(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.2704028721250951, "def solve_d8a8aaf0(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.2704028721250951, "def solve_e90e7f75(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.2704028721250951, "def solve_fe864351(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.2704028721250951, "def solve_9f2c215d(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.29118241282602314, "def solve_49e20542(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.29118241282602314, "def solve_9531120e(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.29118241282602314, "def solve_954958bb(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.29118241282602314, "def solve_c0117211(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x19 = shift(x6, RIGHT)\n    x20 = paint(x8, x19)\n    x21 = shift(x6, UP)\n    x22 = paint(x20, x21)\n    x23 = shift(x6, DOWN)\n    x24 = paint(x22, x23)\n    O = paint(x24, x6)\n    return O"], [0.29118241282602314, "def solve_5963fa73(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.29118241282602314, "def solve_13e624fc(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.29118241282602314, "def solve_f788d2fb(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.2939412085601452, "def solve_27cae5c9(I):\n    x1 = objects(I, T, F, F)\n    x2 = sizefilter(x1, ONE)\n    x3 = compose(neighbors, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x2)\n    x6 = paint(I, x5)\n    x7 = replace(x6, ONE, SIX)\n    x8 = replace(x7, TWO, SEVEN)\n    x9 = replace(x8, THREE, EIGHT)\n    O = replace(x9, FOUR, NINE)\n    return O"], [0.29493888612223423, "def solve_296383e7(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.29493888612223423, "def solve_122e3247(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.29493888612223423, "def solve_52ed5e42(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.2969700117912533, "def solve_f0cd5bf1(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = subgrid(x20, I)\n    x22 = switch(x21, x18, x19)\n    x23 = replace(x22, x18, x4)\n    x24 = lbind(downscale, x23)\n    x25 = fork(upscale, x24, identity)\n    x26 = matcher(x25, x23)\n    x27 = shape(x23)\n    x28 = maximum(x27)\n    x29 = interval(ONE, x28, ONE)\n    x30 = sfilter(x29, x26)\n    x31 = maximum(x30)\n    O = downscale(x23, x31)\n    return O"], [0.2969700117912533, "def solve_3680622d(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = subgrid(x20, I)\n    x22 = switch(x21, x18, x19)\n    x23 = replace(x22, x18, x4)\n    x24 = lbind(downscale, x23)\n    x25 = fork(upscale, x24, identity)\n    x26 = matcher(x25, x23)\n    x27 = shape(x23)\n    x28 = maximum(x27)\n    x29 = interval(ONE, x28, ONE)\n    x30 = sfilter(x29, x26)\n    x31 = maximum(x30)\n    O = downscale(x23, x31)\n    return O"], [0.3063136421137608, "def solve_31038701(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.3063136421137608, "def solve_f9ccb293(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.3063136421137608, "def solve_a72b0dc1(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.3063136421137608, "def solve_3641dfe6(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.3082441023536176, "def solve_5361a62a(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.31011174594270147, "def solve_121f3043(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.31011174594270147, "def solve_54eb9b0f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.31011174594270147, "def solve_87d2e36c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.3104501482052144, "def solve_b64861e5(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_95181f6b(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_735b8a84(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_003b87bb(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_85b95619(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.31313111917950626, "def solve_0d28e489(I):\n    x1 = index(I, ORIGIN)\n    x2 = width(I)\n    x3 = halve(x2)\n    x4 = astuple(x3, x2)\n    x5 = canvas(x1, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = compose(x6, last)\n    x8 = fork(recolor, first, x7)\n    x9 = asobject(I)\n    x10 = mapply(x8, x9)\n    O = paint(x5, x10)\n    return O"], [0.31422062482196794, "def solve_067ac743(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = rbind(colorcount, ZERO)\n    x3 = lbind(toobject, x1)\n    x4 = compose(x2, x3)\n    x5 = vmirror(I)\n    x6 = hmirror(I)\n    x7 = astuple(x5, x6)\n    x8 = argmin(x7, x4)\n    O = subgrid(x1, x8)\n    return O"], [0.3204614475119984, "def solve_c1346812(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [0.32475919959996397, "def solve_509b225a(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = chain(palette, trim, x2)\n    x4 = lbind(contained, THREE)\n    x5 = chain(flip, x4, x3)\n    x6 = mfilter(x1, x5)\n    O = fill(I, FOUR, x6)\n    return O"], [0.33050933843814106, "def solve_dfae6211(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = objects(x3, T, F, T)\n    x5 = merge(x4)\n    O = paint(x1, x5)\n    return O"], [0.33873283589633685, "def solve_41d498ec(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.33873283589633685, "def solve_397c9726(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.35141156925547073, "def solve_9608d62b(I):\n    x1 = hsplit(I, THREE)\n    x2 = first(x1)\n    x3 = remove(x2, x1)\n    x4 = first(x3)\n    x5 = last(x3)\n    x6 = ofcolor(x4, NINE)\n    x7 = ofcolor(x2, FOUR)\n    x8 = fill(x5, NINE, x6)\n    O = fill(x8, FOUR, x7)\n    return O"], [0.35285797856791773, "def solve_1518ceaa(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.35285797856791773, "def solve_1177e324(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.35754184445555537, "def solve_b7ff2750(I):\n    x1 = objects(I, T, F, T)\n    x2 = palette(I)\n    x3 = mostcolor(I)\n    x4 = remove(x3, x2)\n    x5 = lbind(other, x4)\n    x6 = compose(x5, color)\n    x7 = fork(recolor, x6, outbox)\n    x8 = mapply(x7, x1)\n    x9 = mapply(toindices, x1)\n    x10 = box(x9)\n    x11 = difference(x10, x9)\n    x12 = lbind(argmin, x9)\n    x13 = rbind(compose, initset)\n    x14 = lbind(rbind, manhattan)\n    x15 = chain(x13, x14, initset)\n    x16 = chain(initset, x12, x15)\n    x17 = fork(manhattan, initset, x16)\n    x18 = compose(even, x17)\n    x19 = sfilter(x11, x18)\n    x20 = paint(I, x8)\n    O = fill(x20, FIVE, x19)\n    return O"], [0.40995162868139406, "def solve_e2894090(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.40995162868139406, "def solve_f328e5a3(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.40995162868139406, "def solve_074019f0(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.40995162868139406, "def solve_2362b36a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.4170310435194296, "def solve_1bfa5f6f(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.4170310435194296, "def solve_1a1b6825(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.4231949243417133, "def solve_38b2c1c4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.42546238642129053, "def solve_a678d957(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = lefthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = righthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.4434463684463685, "def solve_733ae75f(I):\n    x1 = trim(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(x2)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(x2)\n    x6 = lefthalf(x5)\n    x7 = bottomhalf(x2)\n    x8 = righthalf(x7)\n    x9 = palette(x4)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x6)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(I)\n    x18 = halve(x17)\n    x19 = canvas(x16, x18)\n    x20 = matcher(first, x16)\n    x21 = compose(flip, x20)\n    x22 = rbind(sfilter, x21)\n    x23 = compose(x22, asobject)\n    x24 = x23(x2)\n    x25 = x23(x2)\n    x26 = x23(x5)\n    x27 = x23(x6)\n    x28 = paint(x19, x27)\n    x29 = paint(x28, x26)\n    x30 = paint(x29, x25)\n    O = paint(x30, x24)\n    return O"], [0.48123001957418393, "def solve_f3bc96b5(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, vline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = combine(x15, x16)\n    x18 = intersection(x15, x16)\n    x19 = difference(x17, x18)\n    O = fill(x14, THREE, x19)\n    return O"], [0.48269935405826175, "def solve_53830926(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x7, x16)\n    x20 = ofcolor(x8, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, THREE, x21)\n    return O"], [0.48269935405826175, "def solve_d4bcbfb2(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x7, x16)\n    x20 = ofcolor(x8, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, THREE, x21)\n    return O"], [0.5033734845047396, "def solve_8ac5361d(I):\n    x1 = crop(I, ORIGIN, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.5033734845047396, "def solve_5e58c2dd(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.5064013204664738, "def solve_f198e5f0(I):\n    x1 = height(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = width(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [0.5064013204664738, "def solve_cf168828(I):\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [0.5371132714255592, "def solve_4fc70cae(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.5371132714255592, "def solve_b8c8f475(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.5586554186554187, "def solve_11ed16f3(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.5586554186554187, "def solve_e34220f7(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.5586554186554187, "def solve_64f482e8(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.5586554186554187, "def solve_789869e9(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.5586554186554187, "def solve_3d07e1c0(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.5626770845663153, "def solve_8828c713(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = objects(x1, F, T, T)\n    x3 = first(x2)\n    x4 = vline(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(x1)\n    x7 = objects(x6, T, F, T)\n    x8 = order(x7, uppermost)\n    x9 = apply(color, x8)\n    x10 = dedupe(x9)\n    x11 = size(x10)\n    x12 = rbind(repeat, x11)\n    x13 = apply(x12, x10)\n    O = x5(x13)\n    return O"], [0.5682644504342618, "def solve_c2b166bd(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = subgrid(x2, I)\n    return O"], [0.6185357460219338, "def solve_4822fe14(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = rbind(equality, x4)\n    x7 = argmin(x5, x6)\n    x8 = asindices(I)\n    x9 = ofcolor(I, x4)\n    x10 = difference(x8, x9)\n    x11 = fill(I, x7, x10)\n    x12 = frontiers(x11)\n    x13 = sfilter(x12, vline)\n    x14 = difference(x12, x13)\n    x15 = astuple(x14, x13)\n    x16 = apply(size, x15)\n    x17 = increment(x16)\n    O = canvas(x4, x17)\n    return O"], [0.6185357460219338, "def solve_90bda675(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = rbind(equality, x4)\n    x7 = argmin(x5, x6)\n    x8 = asindices(I)\n    x9 = ofcolor(I, x4)\n    x10 = difference(x8, x9)\n    x11 = fill(I, x7, x10)\n    x12 = frontiers(x11)\n    x13 = sfilter(x12, vline)\n    x14 = difference(x12, x13)\n    x15 = astuple(x14, x13)\n    x16 = apply(size, x15)\n    x17 = increment(x16)\n    O = canvas(x4, x17)\n    return O"], [0.676359162253017, "def solve_2fdca11c(I):\n    x1 = trim(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_5eca2ef1(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_b63bd108(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_4bb7f7d8(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_a5bd8a1b(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_5ecc5d00(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_50edfa6d(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_dc3eba65(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_de6ada43(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6912337662337663, "def solve_3c989a69(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.704578360372753, "def solve_3876b872(I):\n    x1 = palette(I)\n    x2 = remove(ONE, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = canvas(x4, THREE_BY_THREE)\n    x6 = colorcount(I, ONE)\n    x7 = decrement(x6)\n    x8 = tojvec(x7)\n    x9 = connect(ORIGIN, x8)\n    x10 = fill(x5, TWO, x9)\n    x11 = initset(UNITY)\n    x12 = equality(x6, FOUR)\n    x13 = branch(x12, x11, x9)\n    O = fill(x10, TWO, x13)\n    return O"], [0.7378747641671847, "def solve_d0dce391(I):\n    x1 = palette(I)\n    x2 = contained(ONE, x1)\n    x3 = contained(TWO, x1)\n    x4 = branch(x2, UNITY, TWO_BY_TWO)\n    x5 = branch(x3, RIGHT, x4)\n    x6 = fork(combine, vfrontier, hfrontier)\n    x7 = x6(x5)\n    x8 = canvas(ZERO, THREE_BY_THREE)\n    O = fill(x8, FIVE, x7)\n    return O"], [0.7635281385281386, "def solve_73b121be(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.7635281385281386, "def solve_73d1bb26(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.7710317460317461, "def solve_57cab5d4(I):\n    x1 = objects(I, T, F, T)\n    x2 = valmax(x1, size)\n    x3 = equality(x2, ONE)\n    x4 = equality(x2, TWO)\n    x5 = branch(x3, TWO, ONE)\n    x6 = branch(x4, THREE, x5)\n    x7 = branch(x4, SEVEN, x6)\n    O = canvas(x7, UNITY)\n    return O"], [0.7710317460317461, "def solve_d735ceac(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = color(x3)\n    x5 = remove(ZERO, x1)\n    x6 = other(x5, x4)\n    O = canvas(x6, UNITY)\n    return O"], [0.7821428571428571, "def solve_67bde86d(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.7821428571428571, "def solve_674435c5(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.7821428571428571, "def solve_55f079e7(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.8704545454545455, "def solve_112c94e5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, F, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [1.0, "def solve_1739f3e6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_94486b7e(I):\n    O = subgrid(x1, I)\n    return O"], [1.0, "def solve_1dbefc2e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = shape(I)\n    x13 = canvas(x11, x12)\n    x14 = hconcat(I, x13)\n    x15 = objects(x14, F, F, T)\n    x16 = argmin(x15, numcolors)\n    x17 = ofcolor(x16, x7)\n    x18 = mapply(x17, x17)\n    O = fill(x18, x7, x18)\n    return O"], [1.0, "def solve_0d42538d(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(objects, F)\n    x4 = compose(x3, palette)\n    x5 = fork(recolor, x4, identity)\n    x6 = apply(x5, x2)\n    x7 = order(x6, identity)\n    x8 = last(x7)\n    x9 = remove(x8, x7)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = mapply(neighbors, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = ofcolor(I, x11)\n    x17 = mapply(neighbors, x16)\n    x18 = toobject(x17, I)\n    x19 = mostcolor(x18)\n    x20 = rbind(shoot, UNITY)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = fork(combine, x20, x21)\n    x23 = rbind(shoot, UP_RIGHT)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = fork(combine, x23, x24)\n    x26 = fork(combine, x22, x25)\n    x27 = height(I)\n    x28 = astuple(x27, x)\n    x29 = canvas(x11, x28)\n    x30 = fill(x29, x10, x21)\n    x31 = ofcolor(I, x10)\n    x32 = colorfilter(x31, x11)\n    x33 = rbind(adjacent, x32)\n    x34 = mfilter(x32, x33)\n    x35 = mapply(x24, x34)\n    O = fill(x30, ONE, x35)\n    return O"], [1.0, "def solve_d6ac3668(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [1.0, "def solve_9dc45f5a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_d6717fa8(I):\n    x1 = mostcolor(I)\n    x2 =flip(I, x1)\n    x3 = compose(dmirror, dedupe)\n    x4 = fork(combine, x3, x2)\n    x5 = apply(x4, x2)\n    x6 = merge(x5)\n    x7 = lbind(shift, x6)\n    x8 = mapply(x7, x5)\n    O = fill(I, x1, x8)\n    return O"], [1.0, "def solve_a3c6dd54(I):\n    x1 = ofcolor(I, TWO)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = asindices(x4)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = intersection(x5, x6)\n    x8 = fill(x4, EIGHT, x7)\n    x9 = hmirror(x8)\n    x10 = vmirror(x9)\n    x11 = fgpartition(x4)\n    x12 = merge(x11)\n    x13 = paint(x5, x12)\n    x14 = subgrid(x1, x13)\n    O = x3(x14)\n    return O"], [1.0, "def solve_69c8ab9f(I):\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = astuple(x2, x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = rbind(shoot, UP)\n    x8 = mapply(x7, x3)\n    x9 = combine(x6, x8)\n    x10 = fill(x6, ONE, x9)\n    x11 = hmirror(x10)\n    O = vconcat(x110, x11)\n    return O"], [1.0, "def solve_7fe948e3(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_611dcf26(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = size(x4)\n    x6 = width(I)\n    x7 = multiply(x6, x5)\n    x8 = multiply(UNITY, x7)\n    x9 = canvas(ZERO, x8)\n    x10 = multiply(x6, x5)\n    x11 = decrement(x10)\n    x12 = lbind(astuple, x11)\n    x13 = rbind(shoot, UP_RIGHT)\n    x14 = compose(last, last)\n    x15 = chain(x13, x12, x14)\n    x16 = fork(recolor, first, x15)\n    x17 = mapply(x16, x4)\n    O = paint(x9, x17)\n    return O"], [1.0, "def solve_bd4649c3(I):\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = rbind(shoot, UP)\n    x9 = mapply(x8, x7)\n    O = fill(I, x10, x9)\n    return O"], [1.0, "def solve_3b02d314(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_0bb5ee89(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_08b66da5(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [1.0, "def solve_36209a08(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = normalize(x2)\n    x4 = ulcorner(x2)\n    x5 = subtract(x4, x2)\n    x6 = shape(x2)\n    x7 = add(x6, TWO_BY_ZERO)\n    O = crop(I, x5, x7)\n    return O"], [1.0, "def solve_6d5a5b9e(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_a1072c08(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14,x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [1.0, "def solve_63df7b8e(I):\n    x1 = asobject(I)\n    x2 = frontiers(I)\n    x3 = merge(x2)\n    x4 = difference(x1, x3)\n    x5 = mostcolor(x4)\n    x6 = objects(I, T, F, F)\n    x7 = color(x3)\n    x8 = matcher(color, x7)\n    x9 = matcher(color, x5)\n    x10 = fork(astuple, x8, x9)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x6, x11)\n    x13 = merge(x12)\n    x14 = palette(x13)\n    x15 = lbind(mfilter, x12)\n    x16 = lbind(matcher, color)\n    x17 = compose(x15, x16)\n    x18 = apply(x17, x14)\n    x19 = fork(either, vline, hline)\n    x20 = lbind(prapply, connect)\n    x21 = fork(x20, identity, identity)\n    x22 = apply(x21, x18)\n    x23 = rbind(sfilter, x19)\n    x24 = chain(merge, x23, x22)\n    x25 = fork(recolor, color, x24)\n    x26 = mapply(x25, x24)\n    x27 = paint(I, x26)\n    O = paint(x27, x3)\n    return O"], [1.0, "def solve_8f188ec6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_4e65a342(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, le662)\n    x6 = branch(x4, bottomhalf, rIGHT)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [1.0, "def solve_7f2902c5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_fca4e4b1(I):\n    x1 = hconcat(I, I)\n    x2 = vconcat(x1, x1)\n    x3 = asindices(x2)\n    x4 = mostcolor(I)\n    x5 = ofcolor(x2, x4)\n    x6 = difference(x3, x5)\n    x7 = mapply(ineighbors, x6)\n    O = underfill(x2, EIGHT, x7)\n    return O"], [1.0, "def solve_2a8560d4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = rbind(remove, x1)\n    x4 = rbind(remove, x2)\n    x5 = compose(x3, x4)\n    x6 = compose(x5, color)\n    x7 = fork(combine, identity, x6)\n    x8 = apply(x7, x1)\n    O = pair(x8, x8)\n    return O"], [1.0, "def solve_fadd1d31(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_f524ec6a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_5aac3c20(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_51a51c36(I):\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, shape)\n    x3 = sfilter(I, x2)\n    x4 = lbind(apply, numcolors)\n    x5 = chain(x4, first, shape)\n    x6 = objects(x3, T, F, F)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = matcher(first, x8)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x2, x10)\n    x12 = lbind(recolor, x8)\n    x13 = compose(x12, dmirror)\n    x14 = fork(combine, x13, x13)\n    x15 = objects(x11, x14, Faint)\n    x16 = paint(x15, x11)\n    x17 = order(x16, identity)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = color(x18)\n    x21 = palette(x18)\n    x22 = remove(x8, x21)\n    x23 = other(x22, x20)\n    x24 = rbind(colorcount, x20)\n    x25 = argmin(x12, x24)\n    x26 = first(x25)\n    x27 = other(x25, x26)\n    x28 = sfilter(x24, x27)\n    x29 = size(x28)\n    x30 = positive(x29)\n    x31 = branch(x30, x22, x25)\n    x32 = x31(x3333)\n    x33 = x31(x39)\n    x34 = ofcolor(x33, x20)\n    x35 = andmirror(x34)\n    x36 = ofcolor(x33, x22)\n    x37 = intersection(x35, x36)\n    x38 = mapply(x28, x37)\n    O = paint(x32, x38)\n    return O"], [1.0, "def solve_0c46a86b(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [1.0, "def solve_6fbe61ea(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_bb1cc91f(I):\n    x1 = index(I, ORIGIN)\n    x2 = width(I)\n    x3 = halve(x2)\n    x4 = astuple(x3, x2)\n    x5 = canvas(x1, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = compose(x6, last)\n    x8 = fork(recolor, first, x7)\n    x509 = asobject(I)\n    x10 = mapply(x8, x9)\n    O = paint(x5, x10)\n    return O"], [1.0, "def solve_b4faadb6(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_8bf7d21d(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_42763990(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = compose(x5, color)\n    x7 = compose(double, x4)\n    x8 = lbind(prapply, manhattan)\n    x9 = fork(x8, identity, identity)\n    x10 = lbind(remove, ZERO)\n    x11 = compose(x10, x9)\n    x12 = rbind(branch, NEG_TWO)\n    x13 = fork(x12, positive, decrement)\n    x14 = chain(x13, maximum, x11)\n    x15 = fork(contained, x44, x14)\n    x16 = compose(x15, x6)\n    x17 = sfilter(x2, x16)\n    x18 = fork(add, leftmost, rightmost)\n    x19 = chain(toivec, invert, x18)\n    x20 = fork(shift, x17, x19)\n    x21 = compose(x5, x20)\n    x22 = fork(difference, x21, box)\n    x23 = fork(recolor, x21, x22)\n    x24 = mapply(x23, x4)\n    O = paint(I, x24)\n    return O"], [1.0, "def solve_3cf864c0(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_4a1a6288(I):\n    x1 =906934455\n    O = subgrid(x1, I)\n    return O"], [1.0, "def solve_cc89f781(I):\n    x1 = index(I, ORIGIN)\n    x2 = equality(x1, THREE)\n    x3 = height(I)\n    x4 = decrement(x3)\n    x5 = toivec(x4)\n    x6 = branch(x2, x5, ORIGIN)\n    x7 = equality(x1, TWO)\n    x8 = shape(I)\n    x9 = decrement(x8)\n    x10 = width(I)\n    x11 = decrement(x10)\n    x12 = tojvec(x11)\n    x13 = branch(x7, x9, x12)\n    x14 = branch(x7, x9, x13)\n    x15 = astuple(x6, x13)\n    x16 = astuple(x14, x13)\n    x17 = portrait(x16)\n    x18 = branch(x17, x9, x13)\n    x19 = canvas(x8, x15)\n    x20 = matcher(first, FOUR)\n    x21 = compose(flip, x20)\n    x22 = rbind(sfilter, x21)\n    x23 = compose(x22, asobject)\n    x24 = apply(x23, x19)\n    x25 = difference(x24, x24)\n    O = fill(x19, FOUR, x25)\n    return O"], [1.0, "def solve_3e4336b1(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_486b1415(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_2e4f6375(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = size(x9)\n    x11 = equality(x10, ONE)\n    x12 = branch(x11, dmirror, identity)\n    x13 = x12(I)\n    x14 = last(x13)\n    x15 = mostcolor(x14)\n    x16 = trim(x14)\n    x17 = last(x16)\n    x18 = repeat(x17, ONE)\n    x19 = x12(x18)\n    x20 = branch(x11, height, width)\n    x21 = x20(x19)\n    x22 = astuple(ONE, x21)\n    x23 = multiply(x22, x37)\n    x24 = decrement(x23)\n    x25 = branch(x11, identity, vmirror)\n    x26 = x25(x12)\n    x27 = crop(x26, ORIGIN, x22)\n    x28 = last(x27)\n    x29 = remove(x28, x27)\n    x30 = first(x29)\n    x31 = last(x27)\n    x32 = lefthalf(x31)\n    x33 = righthalf(x32)\n    x34 = asobject(x33)\n    x35 = righthalf(x34)\n    x36 = vmirror(x35)\n    x37 = shift(x36, UNITY)\n    O = paint(x22, x37)\n    return O"], [1.0, "def solve_ff7ea9c3(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_223f72f2(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = compose(x5, color)\n    x7 = compose(double, x4)\n    x8 = rbind(apply, x7)\n    x9 = lbind(lbind, gravitate)\n    x10 = compose(x8, x9)\n    x11 = fork(sfilter, identity, x10)\n    x12 = chain(size, x8, x11)\n    x13 = matcher(x12, TWO)\n    x14 = colorfilter(x1, TWO)\n    x15 = difference(x1, x14)\n    x16 = compose(normalize, first)\n    x17 = chain(ulcorner, x16, x12)\n    x18 = fork(shift, identity, x17)\n    x19 = normalize(x15)\n    x20 = matcher(x18, x19)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x1, x21)\n    x23 = argmax(x22, size)\n    x24 = color(x23)\n    x25 = toindices(x23)\n    x26 = objects(I, T, F, T)\n    x27 = rbind(shift, x24)\n    x28 = compose(x27, toindices)\n    x29 = fork(recolor, x28, identity)\n    x30 = mapply(x29, x26)\n    O = paint(I, x30)\n    return O"], [1.0, "def solve_363203bf(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, d687)\n    x9 = compose(flip, x8)\n    x10 = extract(x7, x9)\n    O = x10(I)\n    return O"], [1.0, "def solve_3cac3f7e(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_53925e3f(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_2e2dcf42(I):\n    x1 = height(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = interval(x4, x5, FOUR)\n    x7 = repeat(x6, ONE)\n    x8 = merge(x7)\n    O = fill(I, ZERO, x8)\n    return O"], [1.0, "def solve_591311fb(I):\n    x1 = shape(I)\n    x2 = contained(ONE, x1)\n    x3 = branch(x2, T, F, T)\n    O = canvas(x3, UNITY)\n    return O"], [1.0, "def solve_44a40ef0(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = branch(x2, ONE, SEVEN)\n    O = canvas(x3, FIVE)\n    return O"], [1.0, "def solve_07d532b2(I):\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = order(x1, x2)\n    x4 = lbind(apply, last)\n    x5 = chain(x4, mostcolor, x2)\n    x6 = fork(recolor, x5, x2)\n    x7 = mapply(x6, x3)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_79d908ce(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = objects(I, T, F, T)\n    x5 = totuple(x4)\n    x6 = apply(color, x5)\n    x7 = lbind(sfilter, x6)\n    x8 = lbind(matcher, identity)\n    x9 = chain(size, x7, x8)\n    x10 = valmax(x3, x9)\n    x11 = matcher(x9, x10)\n    x12 = sfilter(x3, x11)\n    x13 = lbind(colorcount, I)\n    x14 = argmin(x12, x13)\n    x15 = ofcolor(I, x14)\n    x16 = recolor(x14, x15)\n    x17 = apply(initset, x16)\n    x18 = remove(x16, x1)\n    x19 = lbind(argmin, x17)\n    x20 = lbind(rbind, manhattan)\n    x21 = compose(x19, x20)\n    x22 = fork(combine, identity, x21)\n    x23 = apply(x22, x18)\n    x24 = matcher(first, x14)\n    x25 = rbind(sfilter, x24)\n    x26 = chain(invert, ulcorner, x25)\n    x27 = fork(shift, identity, x26)\n    x28 = mapply(x27, x23)\n    x29 = normalize(x28)\n    x30 = shape(x29)\n    x31 = canvas(ZERO, x30)\n    O = paint(x31, x29)\n    return O"], [1.0, "def solve_ca14f3bf(I):\n    x1 = asobject(I)\n    x2 = shift(x1,3333)\n    O = paint(I, x2)\n    return O"], [1.0, "def solve_e80ff72a(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = size(x4)\n    x6 = width(I)\n    x7 = multiply(x6, x5)\n    x8 = multiply(UNITY, x7)\n    x9 = canvas(ZERO, x8)\n    x10 = multiply(x6, x5)\n    x11 = decrement(x10)\n    x12 = lbind(astuple, x11)\n    x13 = rbind(shoot, UP_RIGHT)\n    x14 = compose(last, last)\n    x15 = chain(x13, x12, x14)\n    x16 = fork(recolor, first, x15)\n    x17 = mapply(x16, x4)\n    O = paint(x9, x17)\n    return O"], [1.0, "def solve_80446397(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_65c4b6e2(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_0f25b3e5(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_caddcd22(I):\n    x1 = lbind(add, DOWN)\n    x2 = compose(x1, size)\n    x3 = fork(equality, toindices, x2)\n    x4 = rbind(add, RIGHT)\n    x5 = compose(x4, width)\n    x6 = fork(equality, toindices, x5)\n    x7 = fork(add, size, x6)\n    x8 = compose(x3, x7)\n    x9 = extract(x1, x8)\n    x10 = fork(insert, vupscale, toindices)\n    x11 = compose(x10, initset)\n    x12 = fork(insert, product, x11)\n    x13 = fork(intersection, x12, backdrop)\n    x14 = mapply(x13, x9)\n    O = fill(I, ZERO, x14)\n    return O"], [1.0, "def solve_ae48ed92(I):\n    x1 = branch(I, x2, x3)\n    x2 = x1(I)\n    x3 = decrement(x2)\n    x4 = tojvec(x3)\n    x5 = shoot(x4, DOWN_LEFT)\n    x6 = intersection(x5, x2)\n    x7 = fill(I, THREE, x6)\n    x8 = objects(x7, T, F, F)\n    x9 = fork(combine, vfrontier, hfrontier)\n    x10 = mapply(x9, x8)\n    O = fill(x7, FOUR, x10)\n    return O"], [1.0, "def solve_8e8005c4(I):\n    x1 = vmirror(I)\n    x2 = matcher(identity, ZERO)\n    x3 = rbind(sfilter, x2)\n    x4 = compose(size, x3)\n    x5 = apply(x4, x1)\n    x6 = dedupe(x5)\n    x7 = rot90(x6)\n    x8 = dedupe(x7)\n    x9 = rot270(x8)\n    x10 = hconcat(x7, x4)\n    x11 = hconcat(x9, x4)\n    O = vconcat(x10, x11)\n    return O"], [1.0, "def solve_62eebec0(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_d26aa7ae(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = objects(x1, T, F, F)\n    x4 = power(normalize, THREE)\n    x5 = fork(add, height, width)\n    x6 = x5(x4)\n    x7 = astuple(ONE, x6)\n    x8 = mostcolor(I)\n    x9 = canvas(x8, x7)\n    x10 = asobject(x1)\n    x11 = paint(x9, x10)\n    x12 = rot90(x11)\n    x13 = rot180(x11)\n    x14 = rot270(x11)\n    x15 = hconcat(x12, x4)\n    x16 = hconcat(x13, x8)\n    x17 = vconcat(x15, x9)\n    x18 = vconcat(x16, x10)\n    O = rot90(x18)\n    return O"], [1.0, "def solve_144aadf8(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_f408d12c(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = UNITY(x2)\n    x4 = shoot(x3, UP_RIGHT)\n    x5 = shoot(x3, UNITY)\n    x6 = recolor(x1, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = mapply(x7, x4)\n    x9 = underfill(I, x1, x8)\n    x10 = objects(x9, T, F, T)\n    x11 = colorfilter(x10, x1)\n    x12 = rbind(bordering, I)\n    x13 = mfilter(x11, x12)\n    O = mfilter(x11, x1)\n    return O"], [1.0, "def solve_63f12f42(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_4acce88b(I):\n    x1 = mostcolor(I)\n    x2 = replace(I, x1, ZERO)\n    x3 = apply(d23, x2)\n    x4 = branch(x3, x2, x2)\n    x5 = x4(x4)\n    x6 = dmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = lbind(apply, maximum)\n    x9 = apply(x8, x7)\n    x10 = cmirror(x9)\n    x11 = papply(pair, x9, x10)\n    x12 = apply(x11, x7)\n    x13 = hmirror(x12)\n    x14 = papply(pair, x12, x13)\n    x15 = apply(x8, x14)\n    x16 =vdmirror(x15)\n    x17 = papply(pair, x15, x16)\n    x18 = apply(x8, x17)\n    x19 = hmirror(x18)\n    O = papply(pair, x18, x19)\n    return O"], [1.0, "def solve_fe0401ac(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_f57764ab(I):\n    x1 = asindices(I)\n    x2 = objects(I, T, F, F)\n    x3 = fork(multiply, sign, identity)\n    x4 = lbind(apply, x3)\n    x5 = chain(even, maximum, x4)\n    x6 = lbind(sfilter, x1)\n    x7 = fork(add, first, last)\n    x8 = rbind(remove, x2)\n    x9 = compose(center, last)\n    x10 = fork(subtract, first, x9)\n    x11 = compose(x5, x10)\n    x12 = lbind(rbind, equality)\n    x13 = lbind(argmin, x2)\n    x14 = chain(x7, x4, x10)\n    x15 = lbind(lbind, astuple)\n    x16 = lbind(rbind, astuple)\n    x17 = lbind(compose, x11)\n    x18 = lbind(compose, x14)\n    x19 = compose(x18, x15)\n    x20 = compose(x18, x16)\n    x21 = compose(x13, x19)\n    x22 = rbind(compose, x21)\n    x23 = lbind(lbind, valmin)\n    x24 = rbind(compose, x19)\n    x25 = chain(x24, x23, x8)\n    x26 = lbind(fork, greater)\n    x27 = fork(x26, x25, x20)\n    x28 = chain(x6, x17, x16)\n    x29 = chain(x6, x22, x12)\n    x30 = fork(intersection, x28, x29)\n    x31 = compose(x6, x27)\n    x32 = fork(intersection, x30, x31)\n    x33 = fork(recolor, color, x32)\n    x34 = mapply(x33, x2)\n    O = paint(I, x34)\n    return O"], [1.0, "def solve_71bf8673(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = dmirror(I)\n    x5 = hconcat(x4, I)\n    x6 = hmirror(x5)\n    x7 = vconcat(x5, x6)\n    x8 = vconcat(x7, x7)\n    O = compress(x8)\n    return O"], [1.0, "def solve_f9bb9db6(I):\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, size)\n    x3 = rbind(compose, asobject)\n    x4 = lbind(rbind, sfilter)\n    x5 = chain(x4, x3, x2)\n    x6 = lbind(apply, multiply)\n    x7 = chain(x6, toivec, x5)\n    x8 = fork(add, identity, x7)\n    x9 = fork(222, x8, identity)\n    x10 = compose(x7, x9)\n    x11 = power(x10, FOUR)\n    x12 = x11(I)\n    x13 = objects(x12, T, F, F)\n    x14 = colorfilter(x13, ZERO)\n    x15 = rbind(bordering, I)\n    x16 = compose(flip, x15)\n    x17 = mfilter(x14, x16)\n    x18 = hperiod(x17)\n    x19 = rbind(multiply, THREE)\n    x20 = apply(x19, x15)\n    x21 = rbind(multiply, FOUR)\n    x22 = apply(x21, x15)\n    x23 = merge(x2)\n    x24 = lbind(hperiod, x23)\n    x25 = apply(x24, x15)\n    x26 = lbind(shift, x17)\n    x27 = mapply(x26, x25)\n    x28 = apply(x27, x22)\n    O = fill(x12, FOUR, x28)\n    return O"], [1.0, "def solve_9375d687(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, lefthalf, tophalf)\n    x9 = branch(x7, righthalf, bottomhalf)\n    x10 = branch(x7, hconcat, vconcat)\n    x11 = x9(I)\n    x12 = x10(I)\n    x13 = color(x11)\n    x14 = color(x12)\n    x15 = palette(x11)\n    x16 = remove(x13, x15)\n    x17 = palette(x12)\n    x18 = remove(x16, x17)\n    x19 = merge(x18)\n    x20 = palette(x11)\n    x21 = other(x20, x19)\n    x22 = palette(x12)\n    x23 = other(x22, x19)\n    x24 = colorcount(x11, x13)\n    x25 = colorcount(x12, x13)\n    x26 = greater(x24, x25)\n    x27 = branch(x26, identity, vmirror)\n    x28 = x27(x11)\n    x29 = ofcolor(x28, x13)\n    x30 = subgrid(x29, x28)\n    x31 = x27(x30)\n    x32 = replace(x31, x13, x24)\n    O = x27(x32)\n    return O"], [1.0, "def solve_37b573ad(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_1b49b1b4(I):\n    x1 = normalize(I)\n    x2 = rot90(x1)\n    x3 = rot180(x1)\n    x4 = rot270(x1)\n    x5 = hconcat(x2, x4)\n    x6 = hconcat(x3, x5)\n    O = vconcat(x6, x1)\n    return O"], [1.0, "def solve_2d0479a8(I):\n    x1 = partition(I)\n    x2 = mostcolor(I)\n    x3 = ofcolor(I, x2)\n    x4 = switch(I, THREE, FOUR)\n    x5 = mapply(dneighbors, x1)\n    x6 = mapply(ineighbors, x1)\n    x7 = fill(x4, SIX, x5)\n    O = fill(x7, FOUR, x6)\n    return O"], [1.0, "def solve_7527d7e2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_c3395140(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_232c4c96(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_ba5ca3b4(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(vfrontier, x2)\n    x4 = underfill(I, EIGHT, x3)\n    x5 = hconcat(x4, x4)\n    O = vconcat(x5, x5)\n    return O"], [1.0, "def solve_11ea01f1(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_cfe2fe7c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_703585f6(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x3 = minimum(x3)\n    x4 = divide(x4, x3)\n    x5 = x2(I, x4)\n    x6 = interval(ONE, x5, ONE)\n    x7 = multiply(x3, x6)\n    x8 = rbind(apply, x7)\n    x9 = lbind(mostcolor, I)\n    x10 = compose(x8, x9)\n    x11 = numcolors(I)\n    x12 = matcher(x10, x11)\n    x13 = sfilter(x2, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x6)\n    O = paint(I, x15)\n    return O"], [1.0, "def solve_301ad0f6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(ORIGIN, x17)\n    x24 = rbind(x23, x22)\n    x25 = divide(x27, x22)\n    x26 =Esfilter(x12, x25)\n    x27 = rbind(multiply, x15)\n    x28 = apply(x27, x26)\n    x29 = rbind(toobject, I)\n    x30 = lbind(shift, I)\n    x31 = mapply(x30, x29)\n    x32 = apply(x27, x26)\n    x33 = cover(I, x21)\n    x34 = fill(x32, x3, x33)\n    x35 = shift(x31, x24)\n    x36 = ofcolor(x35, x7)\n    O = fill(x34, x3, x36)\n    return O"], [1.0, "def solve_1f24bd4f(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_6fa34b4a(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_ee6c52c5(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_eb191d2e(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = decrement(x1)\n    x4 = astuple(x3, x2)\n    x5 = crop(I, ORIGIN, x4)\n    x6 = hmirror(x5)\n    x7 = vconcat(I, x6)\n    x8 = double(x3)\n    x9 = astuple(x8, x2)\n    x10 = crop(x7, DOWN, x9)\n    O = vconcat(x7, x10)\n    return O"], [1.0, "def solve_74516643(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = fork(equality, toindices, backdrop)\n    x5 = mfilter(x3, x4)\n    x6 = color(I)\n    x7 = fill(I, x6, x5)\n    O = fill(x7, ONE, x13)\n    return O"], [1.0, "def solve_ebdb7d81(I):\n    x1 = compose(first, last)\n    x2 = order(x1, sign)\n    x3 = apply(mostcommon, x2)\n    x4 = size(x3)\n    x5 = interval(ZERO, x4, ONE)\n    x6 = apply(tojvec, x5)\n    x7 = mpapply(shift, x3, x6)\n    x8 = canvas(ZERO, x4)\n    x9 = paint(x8, x7)\n    O = rot90(x9)\n    return O"], [1.0, "def solve_2f46560c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_fd100e8c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_e1442946(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x9)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x24, x23)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_790638c0(I):\n    x1 = rot270(I)\n    x2 = matcher(identity, ZERO)\n    x3 = rbind(sfilter, x2)\n    x4 = compose(flip, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = apply(x5, x1)\n    x7 = rbind(repeat, x6)\n    x8 = apply(x7, x4)\n    O = cmirror(x8)\n    return O"], [1.0, "def solve_fd464682(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_ccf8472b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_73b52bce(I):\n    x1 = palette(I)\n    x2 = intersection(x1, x1)\n    x3 = colorcount(I, ZERO)\n    x4 = outbox(x3)\n    x5 = intersection(x2, x4)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 = ofcolor(I, x6)\n    x9 = ofcolor(I, x7)\n    x10 = rbind(shoot, UNITY)\n    x11 = rbind(shoot, NEG_UNITY)\n    x12 = rbind(shoot, DOWN_LEFT)\n    x13 = rbind(shoot, UP_RIGHT)\n    x14 = fork(combine, x10, x11)\n    x15 = fork(combine, x12, x13)\n    x16 = fork(combine, x14, x15)\n    x17 = rbind(shoot, UNITY)\n    x18 = rbind(shoot, NEG_UNITY)\n    x19 = rbind(shoot, DOWN_LEFT)\n    x20 = rbind(shoot, UP_RIGHT)\n    x21 = fork(combine, x17, x20)\n    x22 = fork(combine, x18, x21)\n    x23 = fork(combine, initset, x22)\n    x24 = fork(rapply, x23, identity)\n    x25 = compose(first, x24)\n    x26 = mapply(x25, x6)\n    x27 = fill(I, x6, x26)\n    x28 = intersection(x8, x27)\n    O = fill(x22, x13, x28)\n    return O"], [1.0, "def solve_c815806e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = hsplit(I, x2)\n    x4 = shape(x3)\n    x5 = apply(size, x4)\n    x6 = argmax(x5, x2)\n    O = canvas(x6, x4)\n    return O"], [1.0, "def solve_033d3e06(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_bf1e8789(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [1.0, "def solve_26bc98a3(I):\n    x1 = warped(I, TEN)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [1.0, "def solve_b472da60(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, DOWN)\n    x4 = mapply(I, x3)\n    x5 = fill(I, x1, x4)\n    x6 = mapply(size, x3)\n    x7 = fill(x5, x1, x6)\n    O = replace(x7, x1, x1)\n    return O"], [1.0, "def solve_5ce3dba3(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_c4828f9e(I):\n    x1 = shape(I)\n    x2 = divide(x1, THREE)\n    x3 = first(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = last(x5)\n    x7 = shift(x6, x3)\n    O = paint(x4, x7)\n    return O"], [1.0, "def solve_fc592e6e(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    x5 = color(x4)\n    x6 = palette(x1)\n    x7 = other(x6, x5)\n    x8 = neighbors(UNITY)\n    O = initset(x17)\n    return O"], [1.0, "def solve_13ffe7f5(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_1164ac75(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_33a70dd8(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_4c531e60(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_7a4e1a69(I):\n    x1 = asindices(I)\n    x2 = backdrop(x1)\n    O = toobject(x2, I)\n    return O"], [1.0, "def solve_25dc8acb(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_13c4a6a0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = interval(ERO, FIVE, ONE)\n    x8 = downscale(x6, x4)\n    x9 = lbind(shift, x8)\n    x10 = mapply(x9, x7)\n    O = fill(x5, FIVE, x10)\n    return O"], [1.0, "def solve_40c0af53(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_57eafea6(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = fork(multiply, height, width)\n    x7 = width(I)\n    x8 = rbind(repeat, x7)\n    x9 = width(I)\n    x10 = subtract(x8, x9)\n    x11 = normalize(x5)\n    x12 = multiply(x4, x11)\n    x13 = shift(x15, x12)\n    x14 = dmirror(x13)\n    x15 = objects(x14, T, F, T)\n    x16 = apply(toindices, x15)\n    x17 = ofcolor(x16, x1)\n    x18 = mapply(vfrontier, x17)\n    x19 = mapply(hfrontier, x17)\n    x20 = toindices(x13)\n    x21 = box(x20)\n    x22 = difference(x19, x21)\n    x23 = x17(x22)\n    x24 = color(x3)\n    x25 = palette(x23)\n    x26 = other(x25, x24)\n    x27 = subgrid(x23, I)\n    x28 = ofcolor(x27, x26)\n    x29 = fill(x27, x26, x28)\n    O = replace(x29, x26, x1)\n    return O"], [1.0, "def solve_e23c7ee1(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_53b8c701(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = width(I)\n    x5 = astuple(TEN, x4)\n    x6 = canvas(x3, x5)\n    x7 = interval(ONE, SEVEN, ONE)\n    x8 = invert(TEN)\n    x9 = interval(x8, TEN, ONE)\n    x10 = product(x7, x9)\n    x11 = remove(ORIGIN, x10)\n    x12 = lbind(intersection, x2)\n    x13 = lbind(shift, x2)\n    x14 = compose(x12, x13)\n    x15 = toindices(x2)\n    x16 = lbind(intersection, x15)\n    x17 = lbind(shift, x15)\n    x18 = compose(x16, x17)\n    x19 = compose(size, x14)\n    x20 = compose(size, x18)\n    x21 = fork(equality, x19, x20)\n    x22 = chain(positive, size, x14)\n    x23 = fork(both, x21, x22)\n    x24 = sfilter(x11, x23)\n    x25 = compose(size, x14)\n    x26 = valmax(x24, x25)\n    x27 = compose(size, x14)\n    x28 = matcher(x27, x26)\n    x29 = sfilter(x24, x28)\n    x30 = fork(multiply, first, last)\n    x31 = argmax(x29, x30)\n    x32 = interval(ZERO, TEN, ONE)\n    x33 = lbind(shift, x2)\n    x34 = lbind(multiply, x31)\n    x35 = compose(x33, x34)\n    x36 = mapply(x35, x32)\n    O = paint(x6, x36)\n    return O"], [1.0, "def solve_5f3e61cd(I):\n    x1 = shape(I)\n    x2 = ofcolor(I, TWO)\n    x3 = mapply(vfrontier, x2)\n    x4 = underfill(I, ZERO, x3)\n    x5 = hconcat(x4, x4)\n    O = vconcat(x5, x5)\n    return O"], [1.0, "def solve_79fc7726(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_d0cff705(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_31e4653b(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_07514628(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = fork(equality, toindices, identity)\n    x5 = sfilter(x3, x4)\n    x6 = mapply(dneighbors, x5)\n    x7 = index(I, ORIGIN)\n    x8 = subgrid(x7, I)\n    x9 = trim(x8)\n    O = replace(x9, ONE, x7)\n    return O"], [1.0, "def solve_4fbc27bb(I):\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = merge(x1)\n    x7 = color(x6)\n    x8 = shape(I)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(I, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmin(x11, numcolors)\n    x13 = normalize(x12)\n    x14 = toindices(x13)\n    x15 = increment(x4)\n    x16 = increment(x15)\n    x17 = increment(x5)\n    x18 = increment(x17)\n    x19 = astuple(x16, x18)\n    x20 = lbind(shift, x14)\n    x21 = rbind(multiply, x19)\n    x22 = chain(x20, x21, last)\n    x23 = fork(recolor, first, x22)\n    x24 = normalize(x12)\n    x25 = mapply(x23, x24)\n    O = paint(x9, x25)\n    return O"], [1.0, "def solve_f3f7575b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, identity,93)\n    x3 = branch(x1, decrement, height)\n    x4 = x3(I)\n    x5 = astuple(ONE, x4)\n    x6 = x2(I)\n    x7 = crop(x6, ORIGIN, x5)\n    x8 = apply(dedupe, x7)\n    O = x2(x8)\n    return O"], [1.0, "def solve_d6a1b95a(I):\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = rbind(shoot, UP)\n    x5 = mapply(x4, x3)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = merge(x6)\n    x8 =shift(x7, UP)\n    x9 = fill(I, THREE, x3)\n    O = fill(x9, FOUR, x8)\n    return O"], [1.0, "def solve_3ece3cce(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_07e505e0(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [1.0, "def solve_d86fc22a(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [1.0, "def solve_badfee06(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_24930bab(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_fea790c1(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_692d317e(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_87e2a8b7(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_880cbfb3(I):\n    x1 = asobject(I)\n    x2 = height(I)\n    x3 = decrement(x2)\n    x4 = astuple(x3, ONE)\n    x5 = halve(x4)\n    x6 = width(I)\n    x7 = halve(x6)\n    x8 = ulcorner(x7)\n    x9 = rbind(shoot, x8)\n    x10 = mapply(x9, x5)\n    x11 = canvas(ZERO, x4)\n    O = fill(x11, FOUR, x10)\n    return O"], [1.0, "def solve_c00ab3e7(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_1941e2ac(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = matcher(color, x4)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x2, x6)\n    x8 = sizefilter(x7, ONE)\n    x9 = merge(x8)\n    x10 = fill(I, x4, x9)\n    x11 = merge(x8)\n    x12 = fill(x10, TWO, x11)\n    x13 = merge(x8)\n    x14 = fill(x12, ONE, x13)\n    x15 = compress(x14)\n    O = fill(x15, FOUR, x9)\n    return O"], [1.0, "def solve_f542ce7e(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = objects(I, T, F, T)\n    x5 = lbind(colorfilter, x4)\n    x6 = compose(size, x5)\n    x7 = matcher(x6, TWO)\n    x8 = colorfilter(x4, TWO)\n    x9 = rbind(adjacent, x8)\n    x10 = mfilter(x8, x9)\n    x11 = objects(I, T, F, T)\n    x12 = sfilter(x11, x7)\n    x13 = merge(x12)\n    x14 = rbind(adjacent, x13)\n    x15 = mfilter(x14, x7)\n    x16 = sfilter(x13, x15)\n    x17 = shape(x16)\n    x18 = subtract(x17, x16)\n    x19 = canvas(ZERO, x18)\n    x20 = paint(x19, x16)\n    O = subgrid(x20, I)\n    return O"], [1.0, "def solve_0cc2558a(I):\n    x1 = matcher(first, THREE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x2, x1)\n    x4 = dmirror(x3)\n    x5 = fork(combine, vfrontier, hfrontier)\n    x6 = compose(x5, x4)\n    x7 = mapply(x6, x4)\n    O = underfill(x7, ONE, x3)\n    return O"], [1.0, "def solve_bc32aca2(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x11 = canvas(x8, x9)\n    x12 = asindices(x11)\n    x13 = toobject(x12, I)\n    x14 = increment(x5)\n    x15 = increment(xx4)\n    x16 = divide(x14, x15)\n    x17 = rbind(multiply, x16)\n    x18 = apply(x17, x13)\n    x19 = rbind(toobject, I)\n    x20 = chain(x19, backdrop, x17)\n    x21 = apply(x20, x18)\n    x22 = matcher(x21, I)\n    x23 = rbind(adjacent, x12)\n    x24 = rbind(adjacent, x25)\n    x25 = fork(both, x23, x24)\n    x26 = compose(x22, x25)\n    x27 = sfilter(x2, x26)\n    O = fill(x11, x8, x27)\n    return O"], [1.0, "def solve_e4d5d1af(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_9205ff9d(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP)\n    x4 = rbind(shoot, DOWN)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = canvas(x10, x1)\n    x12 = astuple(dmirror, ORIGIN)\n    x13 = astuple(cmirror, x11)\n    x14 = combine(x12, x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x16, x16)\n    x18 = index(I, x2)\n    x19 = lbind(power, x18)\n    x20 = chain(first, x19, first)\n    x21 = compose(last, last)\n    x22 = fork(subtract, x21, x20)\n    x23 = compose(invert, x22)\n    x24 = fork(shoot, x22, x23)\n    x25 = fork(intersection, x24, x20)\n    x26 = chain(decrement, size, x25)\n    x27 = fork(shoot, x26, x24)\n    x28 = fork(combine, x27, x25)\n    x29 = compose(toivec, x28)\n    x30 = fork(shoot, x29, x27)\n    x31 = fork(combine, x27, x30)\n    x32 = mapply(x31, x17)\n    x33 = fill(I, EIGHT, x32)\n    x34 = mapply(x33, x19)\n    O = paint(x34, x32)\n    return O"], [1.0, "def solve_ac582031(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [1.0, "def solve_590defda(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained,25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_3ba0e11b(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_63afc717(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_a78dd068(I):\n    x1 = Fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [1.0, "def solve_9abd57e7(I):\n    x1 = height(I)\n    x2 = decrement(x1)\n    x3 = decrement(x2)\n    x4 = toivec(x3)\n    x5 = tojvec(x2)\n    x6 = add(x4, x5)\n    x7 = add(x3, x6)\n    x8 = fill(I, ZERO, x7)\n    x9 = canvas(ZERO, x1)\n    x10 = asobject(x9)\n    x11 = occurrences(x8, x10)\n    x12 = lbind(shift, x10)\n    x13 = mapply(x12, x11)\n    O = fill(x8, ONE, x13)\n    return O"], [1.0, "def solve_9579716b(I):\n    x1 = mostcolor(I)\n    x2 = hconcat(I, I)\n    x3 = upscale(I, THREE)\n    x4 = ofcolor(x3, x1)\n    x5 = asindices(x3)\n    x6 = difference(x5, x4)\n    x7 = hconcat(x2, I)\n    x8 = vconcat(x7, x7)\n    x9 = vconcat(x8, x7)\n    O = fill(x9, ZERO, x6)\n    return O"], [1.0, "def solve_122330dc(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, Righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [1.0, "def solve_63be3dc8(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_10f211ce(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_5e38dc5f(I):\n    x1 = ofcolor(I, TWO)\n    x2 = matcher(first, ZERO)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(invert, center, x3)\n    x5 = fork(shift, identity, x4)\n    x6 = canvas(ZERO, THREE_BY_THREE)\n    x7 = asindices(x6)\n    x8 = matcher(first, ZERO)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    x11 = initset(x1)\n    x12 = box(x11)\n    x13 = lbind(toobject, x12)\n    x14 = compose(x4, x13)\n    x15 = toindices(x14)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x10)\n    O = fill(x6, EIGHT, x17)\n    return O"], [1.0, "def solve_5d49d081(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_66174c0c(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_634f8d80(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_3279bf68(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_2a4b191d(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_17da7258(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [1.0, "def solve_5f203451(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_e681058e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = sfilter(x1, hline)\n    x5 = size(x4)\n    x6 = positive(x5)\n    x7 = branch(x6, identity, dmirror)\n    x8 = x7(I)\n    x9 = rbind(subgrid, x8)\n    x10 = matcher(color, x3)\n    x11 = compose(flip, x10)\n    x12 = partition(x8)\n    x13 = sfilter(x12, x11)\n    x14 = argmax(x13, size)\n    x15 = product(x14, x14)\n    x16 = apply(color, x15)\n    x17 = canvas(x3, x14)\n    x18 = paint(x17, x16)\n    x19 = fork(remove, last, identity)\n    x20 = compose(hmirror, x19)\n    x21 = fork(vconcat, identity, x20)\n    x22 = apply(x21, x15)\n    x23 = merge(x22)\n    O = x7(x23)\n    return O"], [1.0, "def solve_d9eef308(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_393222e3(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_714271e9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = combine(x8, x9)\n    x13 = merge(x11)\n    x14 = fill(I, x3, x13)\n    x15 = paint(x14, x9)\n    O = x15(x15)\n    return O"], [1.0, "def solve_673778eb(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(lbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [1.0, "def solve_24ee4042(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_32fd83ab(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = partition(I)\n    x7 = fork(multiply, height, width)\n    x8 = fork(equality, size, x7)\n    x9 = sfilter(x6, x8)\n    x10 = argmax(x9, size)\n    x11 = difference(x5, x10)\n    x12 = apply(initset, x11)\n    x13 = rbind(hmatching, x10)\n    x14 = rbind(vmatching, x10)\n    x15 = fork(either, x13, x14)\n    x16 = Sfilter(x12, x15)\n    x17 = rbind(gravitate, x10)\n    x18 = fork(add, center, x17)\n    x19 = fork(connect, center, x18)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x16)\n    O = paint(I, x21)\n    return O"], [1.1, "def solve_43776383(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(compose, flip)\n    x3 = lbind(matcher, first)\n    x4 = compose(x2, x3)\n    x5 = lbind(compose, asobject)\n    x6 = lbind(rbind, sfilter)\n    x7 = compose(x5, x6)\n    x8 = lbind(rbind,colorcount)\n    x9 = fork(equality, x7, x8)\n    x10 = compose(x9, initset)\n    x11 = fork(indices, x7, x10)\n    x12 = compose(size, x11)\n    x13 = matcher(x12, ZERO)\n    x14 = partition(I)\n    x15 = sfilter(x14, x13)\n    x16 = argmax(x15, size)\n    x17 = remove(x16, x15)\n    x18 = lbind(chain, first)\n    x19 = lbind(rbind,\ufffdrapply)\n    x20 = lbind(lbind, initset)\n    x21 = lbind(rbind,rapply)\n    x22 = compose(x21, frontiers)\n    x23 = chain(x18, x22, last)\n    x24 = lbind(colorbind,irrelval)\n    x25 = chain(x24, color, x23)\n    x26 = matcher(x25, ZERO)\n    x27 = fork(O = fork(both, x23, x26)\n    x28 = fork(combine, x25, x27)\n    x29 = fork(shift, x28, ulcorner)\n    x30 = fork(intersection, x29, last)\n    x31 = chain(x15, x30, first)\n    x32 = size(x15)\n    x33 = equality(x32, ZERO)\n    x34 = branch(x33, x31, x29)\n    x35 = bright(x16, x34)\n    x36 =614(x35)\n    x37 = paint(I, x36)\n    O = subgrid("], [1.1, "def solve_104cb5af(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_ae30e868(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = matcher(size, SIX)\n    x2 = equality(ineighbors, x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = asindices(x4)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = intersection(x6, x5)\n    x8 = lrcorner(x7)\n    x9 = shoot(x8, DOWN_LEFT)\n    x10 = intersection(x9, x5)\n    x11 = combine(x7, x10)\n    x12 = llcorner(x11)\n    x13 = remove(x12, x11)\n    x14 = lbind(shift, x13)\n    x15 = height(x11)\n    x16 = height(x10)\n    x17 = divide(x15, x16)\n    x18 = increment(x17)\n    x19 = width(x11)\n    x20 = astuple(x18, x19)\n    x21 = crop(x4, ORIGIN, x20)\n    x22 = hupscale(x21, x18)\n    x23 = dmirror(x22)\n    x24 = shape(x23)\n    x25 = canvas(ZERO, x24)\n    x26 = ulcorner(x25)\n    x27 =rbind(shoot, x26)\n    x28 = mapply(x27, x3)\n    x29 = combine(x24, x28)\n    x30 = urcorner(x29)\n    x31 = remove(x30, x29)\n    x32 = lbind(shift, x31)\n    x33 = height(x11)\n    x34 = decrement(x33)\n    x35 = toivec(x34)\n    x36 = height(x11)\n    x37 = tojvec(x36)\n    x38 = add(x35, x37)\n    x39 = height(x11)\n    x40 = increment(x39)\n    x41 = astuple(x38, x40)\n    x42 ="], [1.1, "def solve_2974bfca(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, ONE)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)"], [1.1, "def solve_d1195071(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(both, x29, x30)\n    x34 = fork(both, x31, x32)\n    x35 = fork(both, x33, x34)\n    x36 = compose(x"], [1.1, "def solve_87600c64(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = argmax(x1, size)\n    x3 = remove(x2, x1)\n    x4 = merge(x3)\n    x5 = subgrid(x4, I)\n    x6 = chain(color, merge, lefthalf)\n    x7 = x6(x5)\n    x8 = rbind(colorcount, ZERO)\n    x9 = argmin(x2, x8)\n    x10 = rbind(colorcount, x9)\n    x11 = chain(x9, x10, palette)\n    x12 = lbind(contained, x7)\n    x13 = chain(x12, palette, x11)\n    x14 = compose(flip, x13)\n    x15 = extract(x12, x14)\n    x16 = ulcorner(x15)\n    x17 = lrcorner(x15)\n    x18 = height(x15)\n    x19 = divide(x18, x17)\n    x20 = increment(x19)\n    x21 = width(x15)\n    x22 = divide(x21, x22)\n    x23 = increment(x22)\n    x24 = invert(x23)\n    x25 = tojvec(x24)\n    x26 = asobject(x25)\n    x27 = height(x5)\n    x28 = increment(x27)\n    x29 = interval(x26, x28, ONE)\n    x30 = product(x29, x29)\n    x31 = matcher(first, x9)\n    x32 = compose(flip, x31)\n    x33 = sfilter(x30, x32)\n    x34 = fill(x5, x19, x33)\n    x35 = lbind(shift, x323)\n    x36 = fork(recolor, x35, identity)\n    x37 = mapply(x36, x22)\n    x38 = paint(x34, x37)\n    x39 = double(x conveniently)\n    x40 = invert(x39)\n    x41 = increment(x40)"], [1.1, "def solve_0a816e83(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_c3b6ab67(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_4a0be8d7(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25ff2445\n    x26 =499ling(x24)\n    x27 = objects(x3, T, F, F)\n    x28 = colorfilter(x27, ZERO)\n    x29 = rbind(toobject, x3)\n    x30 = chain(x29, backdrop, delta)\n    x31 = mapply(x30, x28)\n    x32 = combine(x24, x31)\n    x33 = rbind(adjacent, x32)\n    x34 = urcorner(x4)\n    x35 = sfilter(x4, x33)\n    x36 = Airport(x35, x4)\n    x37 = mapply(x19, x36)\n    x38 = combine(x34, x37)\n    x39 = paint(x3, x38)\n    O = x2(x39)\n"], [1.1, "def solve_71a7ca4e(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = argmax(x3, x4)\n    x6 = color(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmax(x8, x9)\n    x11 = remove(x10, x8)\n    x12 = lbind(ofcolor, I)\n    x13 = mapply(x12, x11)\n    x14 = subgrid(x13, I)\n    x15 = objects(x14, T, F, F)\n    x16 = colorfilter(x15, x6)\n    x17 = initset(x10)\n    x18 = insert(x6, x17)\n    x19 = lbind(intersection, x18)\n    x20 = chain(positive, size, x19)\n    x21 = chain(positive, decrement, size)\n    x22 = fork(either, x20, x21)\n    x23 = rbind(toobject, x14)\n    x24 = compose(corners, outbox)\n    x25 = chain(palette, x23, x24)\n    x26 = rbind(branch, x6)\n    x27 = chain(flip, x22, x25)\n    x28 = compose(first, x25)\n    x29 = fork(x26, x27, x28)\n    x30 = apply(uppermost, x16)\n    x31 = order(x30, identity)\n    x32 = lbind(apply, x29)\n    x33 = rbind(order, leftmost)\n    x34 = lbind(sfilter, x16)\n    x35 = lbind(matcher, uppermost)\n    x36 = compose(x34, x35)\n    x37 = chain(x32, x33, x36)\n    O = apply(x37"], [1.1, "def solve_d7e25281(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = lrcorner(x4)\n    x41 = index(x3, x40)"], [1.1, "def solve_323267c5(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_279cd42f(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_a5120804(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = box(x2)\n    x5 = astuple(TEN, FOUR)\n    x6 = canvas(x3, x5)\n    x7 = interval(ONE, SIX, ONE)\n    x8 = invert(TEN)\n    x9 = interval(x8, TEN, ONE)\n    x10 = product(x7, x9)\n    x11 = remove(ORIGIN, x10)\n    x12 = lbind(intersection, x4)\n    x13 = lbind(shift, x2)\n    x14 = compose(x12, x13)\n    x15 = toindices(x2)\n    x16 = lbind(intersection, x15)\n    x17 = lbind(shift, x1)\n    x18 = compose(x16, x17)\n    x19 = compose(size, x14)\n    x20 = compose(size, x18)\n    x21 = fork(equality, x19, x20)\n    x22 = chain(positive, size, x14)\n    x23 = fork(both, x21, x22)\n    x24 = sfilter(x11, x23)\n    x25 = compose(size, x14)\n    x26 = valmax(x24, x25)\n    x27 = compose(size, x14)\n    x28 = matcher(x27, x26)\n    x29 = sfilter(x24, x28)\n    x30 = fork(multiply, first, last)\n    x31 = argmax(x29, x30)\n    x32 = interval(ZERO, TEN, ONE)\n    x33 = lbind(shift, x2)\n    x34 = multiply(TEN, UNITY)\n    x35 = interval(x32, x34, invert)\n    x36 = sfilter(x32, x35)\n    x37 = apply(x33, x36)\n    x38 = mapply(x37, x000)\n    x39 = paint(I, x38"], [1.1, "def solve_c192b683(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, FIVE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = argmin(x8, numcolors)\n    x10 = normalize(x9)\n    x11 = toindices(x10)\n    x12 = increment(x width)\n    x13 = tojvec(x12)\n    x14 = shift(x11, x13)\n    x15 = argmin(x11, x13)\n    x16 = x15(I)\n    x17 = remove(x10, x1)\n    x18 = other(x17, x16)\n    x19 = color(x18)\n    x20 = lbind(shift, x18)\n    x21 = rbind(difference, x76)\n    x22 = chain(size, x20, x21)\n    x23 = matcher(x22, ZERO)\n    x24 = sfilter(x16, x23)\n    x25 = difference(x16, x24)\n    x26 = sfilter(x25, x23)\n    x27 = recolor(x10, x26)\n    x28 = lbind(shift, x14)\n    x29 = lbind(insert, x14)\n    x30 = rbind(intersection, x21)\n    x31 = chain(size, x29, x30)\n    x32 = argmax(x27, x31)\n    x33 = lbind(shift, x33)\n    x34 = lbind(insert, x33)\n    x35 = rbind(intersection, x32)\n    x36 = chain(size, x34, x35)\n    x37 = sfilter(x32, x36)\n    x38 = fork(recolor, x19, x37)\n    x39 = fork(colorcount, x18, x38)\n"], [1.1, "def solve_c12d8cb8(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =889(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, ONE, x3)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x8, x18)\n    x20 = lbind(colorcount, x7)\n    x21 = argmin(x19, x20)\n    x22 = rbind(colorcount, x21)\n    x23 = rbind(toobject, x7)\n    x24 = compose(x22, x23)\n    x25 = chain(x delta, x24, decrement)\n    x26 =55754(x25)\n    x27 = objects(x26, T, F, T)\n    x28 = rbind(colorcount, x21)\n    x29 = valmax(x27, x28)\n    x30 = rbind(toobject, x7)\n    x31 = chain(x29, x30, color)\n    x32 = x31(x1600)\n    x33 = x31(x16)\n    x34 = rbind(colorcount, x21)\n    x35 = valmax(x32, x34)\n    x36 = x35(x29)\n    x37 = equality(x36, x31)\n    x38 = astuple(ONE, x37)\n    x39 = canvas(x18, x38)\n    x40 = asobject("], [1.1, "def solve_c0cac043(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_5d7095a7(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = astuple(color, TWO)\n    x2 = astuple(TWO, ONE)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = sfilter(x32, x35)\n    x37 =neighbors(x36)\n    x38 = mapply(neighbors, x37)\n    x39 =O = fill(x31, THREE, x38"], [1.1, "def solve_327d4bcf(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale11(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O ="], [1.1, "def solve_5510e157(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = rbind(objects,)\n    x3 = rbind(x2, F)\n    x4 = rbind(x3, F)\n    x5 = lbind(d687, x4)\n    x6 = lbind(rbind, colorcount)\n    x7 = compose(x6, x5)\n    x8 = rbind(canvas, UNITY)\n    x9 = compose(x8, x7)\n    x10 = fork(hconcat, identity, x9)\n    x11 = compose(x8, x10)\n    x12 = lbind(contained, ZERO)\n    x13 = chain(flip, x12, x11)\n    x14 = compose(positive, size)\n    x15 = lbind(rbind, sfilter)\n    x16 = fork(both, x13, x15)\n    x17 = rbind(toobject, I)\n    x18 = chain(x14, x17, x16)\n    x19 = compose(x12, x18)\n    x20 = fork(equality, identity, x19)\n    x21 = compose(x20, last)\n    x22 = ofcolor(I, ZERO)\n    x23 = sfilter(x22, x12)\n    x24 = argmax(x23, x28)\n    x25 = other(x23, x24)\n    x26 = last(x23)\n    x27 = compose(first, last)\n    x28 =    x27(x26)\n    x29 = fill(I, x25, x28)\n    x30 = ofcolor(x29, x25)\n    x31 = ulcorner(x30)\n    x32 = shoot(x31, UNITY)\n    x33 = lrcorner(x30)\n    x34 = shoot(x33, NEG_UNITY)\n    x35 = urcorner(x30)\n    x36 = shoot(x35, UP_RIGHT)\n    x37 = llcorner(x30)\n    x38 = shoot(x37, DOWN_LEFT)\n    x39 = combine(x32"], [1.1, "def solve_8854ff72(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = compose(size, dedupe)\n    x3 = x2(x1)\n    x4 = positive(x3)\n    x5 = branch(x4, height, width)\n    x6 = x5(I)\n    x7 = canvas(x4, x6)\n    x8 = matcher(identity, ZERO)\n    x9 = rbind(sfilter, x8)\n    x10 = compose(first, last)\n    x11 =rbind(sfilter, x10)\n    x12 = compose(x9, x11)\n    x13 = fork(size, x12,leftmost)\n    x14 = matcher(x13, ZERO)\n    x15 = uppermost(x7)\n    x16 = leftmost(x7)\n    x17 = fork( greater, x15, x16)\n    x18 = uppermost(x7)\n    x19 = matcher(x18, ZERO)\n    x20 = rightmost(x7)\n    x21 = leftmost(x7)\n    x22 = fork( greater, x20, x21)\n    x23 = uppermost(x7)\n    x24 = matcher(x23, ZERO)\n    x25 = lrcorner(x7)\n    x26 = ulcorner(x7)\n    x27 = fork(connect, x25, x26)\n    x28 = subgrid(x27, I)\n    x29 = palette(x28)\n    x30 = sfilter(x29, x24)\n    x31 = lbind(colorcount, x28)\n    x32 = argmax(x30, x31)\n    x33 = remove(x32, x30)\n    x34 = rbind(contained, x33)\n    x35 = argmin(x34, size)\n    x36 = x35(x28)\n    x37 = palette(x35)\n    x38 = remove(x36, x35)\n    x39 = lbind(colorcount, x28)\n    x40 = argmin(x38, x39)\n    x41 = rbind(color"], [1.1, "def solve_7a5f57a2(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x352, x32)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18, x"], [1.1, "def solve_e7f52bb2(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_3690af8a(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_8ba81066(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x04, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_7753107b(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = initset(ORIGIN)\n    x5 = lbind(rapply, x4)\n    x6 = compose(first, x5)\n    x7 = chain(x10, x4, x6)\n    x8 = fork(difference, x7, toindices)\n    x9 = matcher(x8, ZERO)\n    x10 = fork(both, x9, x7)\n    x11 = extract(x3, x10)\n    x12 = ONE(x11)\n    x13 = height(x12)\n    x14 = decrement(x13)\n    x15 = mostcolor(I)\n    x16 =astuple(x14, x15)\n    x17 = repeat(x16, ONE)\n    x18 = toindices(x17)\n    x19 = asindices(I)\n    x20 = box(x19)\n    x21 = NEG_UNITY(x20)\n    x22 = toindices(x21)\n    x23 = asindices(I)\n    x24 = corners(x23)\n    x25 = DOWN(x24)\n    x26 = astuple(x14, x15)\n    x27 = astuple(x25, x26)\n    x28 = combine(x28, x27)\n    x29 = rbind(toobject, I)\n    x30 = chain(numcolors, x29, x22)\n    x31 = matcher(x30, ONE)\n    x32 = astuple(x24, x15)\n    x33 = astuple(x31, x32)\n    x34 = combine(x33, x41)\n    x35 = argmax(x34, size)\n    x36 = matcher(first, x35)\n    x37 = compose(flip, x36)\n    x38 = sfilter(x1, x37)\n    x39 =535(x38)\n    x40 = multiply(x19, x39)\n"], [1.1, "def solve_0874b1eb(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_f2c578eb(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_1799e69a(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = apply(lowermost, x6)\n    x8 = maximum(x7)\n    x9 = width(I)\n    x10 = astuple(x9, x6)\n    x11 = add(x10, TWO)\n    x12 = interval(x8, x11, ONE)\n    x13 = prapply(shift, x7, x12)\n    x14 = lbind(canvas, x1)\n    x15 = compose(x14, toindices)\n    x16 = fork(paint, x15, x15)\n    x17 = compose(x16, lefthalf)\n    x18 = righthalf(I)\n    x19 = compose(x18, righthalf)\n    x20 = righthalf(I)\n    x21 = compose(x20, palette)\n    x22 = lbind(recolor, x1)\n    x23 = compose(x22, palette)\n    x24 = rbind(paint, x18)\n    x25 = chain(x24, x23, x8)\n    x26 = x25(x20)\n    x27 = x25(x21)\n    x28 = fork(combine, vfrontier, hfrontier)\n    x29 = fork(combine, rbind, TEN)\n    x30 = rbind(occurrences, x22)\n    x31 = compose(x30, x28)\n    x32 = apply(x31, x3)\n    x33 = rbind(valmax, numcolors)\n    x34 = chain(x33, x32, x23)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = x36(x69)\n    x38 = invert(x37)\n    x39 = cover(I, x"], [1.1, "def solve_401601cb(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = shape(I)\n    x13 = canvas(x11, x12)\n    x14 = hconcat(I, x13)\n    x15 = objects(x14, F, F, T)\n    x16 = argmin(x15, size)\n    x17 = subgrid(x16, x14)\n    x18 = remove(x16, x15)\n    x19 = lbind(colorcount, x18)\n    x20 = argmin(x12, x19)\n    x21 = rightmost(x16)\n    x22 = positive(x21)\n    x23 = vmirror(x22)\n    x24 = papply(pair, x17, x23)\n    x25 = lbind(apply, maximum)\n    x26 = size(x24)\n    x27 = increment(x26)\n    x28 = tojvec(x27)\n    x29 = leftmost(x16)\n    x30 = rightmost(x16)\n    x31 = ofcolor(x14, x29)\n    x32 = ofcolor(x20, x30)\n    x33 = combine(x31, x32)\n    x34 = combine(x33, x36)\n    x35 = height(x14)\n    x36 = height(x20)\n    x37 = interval(FOUR, x35, x36)\n    x38 = lbind(compose, flip)\n    x39 = lbind(matcher, first)\n    x40 = compose(x38, x39)\n    x41 = rbind(compose, asobject)\n    "], [1.1, "def solve_034cc5b5(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = connect(ORIGIN, DOWN)\n    x4 = connect(ORIGIN, ZERO_BY_TWO)\n    x5 = combine(x3, x4)\n    x6 = height(I)\n    x7 = equality(x6, TWO)\n    x8 = height(I)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x5, x9)\n    x11 = lbind(apply, last)\n    x12 = compose(x11, first)\n    x13 = chain(positive, positive, x12)\n    x14 = lbind(interval, ZERO)\n    x15 = rbind(x14, ONE)\n    x16 = rbind(sfilter, x13)\n    x17 = compose(x15, last)\n    x18 = fork(pair, x17, x8)\n    x19 = chain(x13, x16, x18)\n    x20 = rbind(branch, identity)\n    x21 = rbind(x20, x19)\n    x22 = chain(size, dedupe, x21)\n    x23 = lbind(equality, ONE)\n    x24 = chain(x22, x23, x19)\n    x25 = compose(initset, x24)\n    x26 = fork(rapply, x25, x22)\n    x27 = compose(first, x26)\n    x28 = extract(x10, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(x30)\n    x32 = palette(x31)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(404, x33)\n    x35 = ofcolor(x31, ONE)\n    x36 =    6000dederence(x35)\n    x37 = product(x36, x36)\n    x38 = fork(equality, identity, vmirror)\n    x39 = apply(x38, x37)\n    x40 = insert"], [1.1, "def solve_03a7b060(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_7df75ef6(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_43342523(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = rbind(compose, x30)\n    x37 = lbind(compose, x30)\n    x38 = lbind(lbind, subtract)\n    x39 = compose(x37, x38)\n    x40 = lbind(compose, x33)\n    x41 = compose(x39, x40)\n    x42 = fork(sfilter, x35"], [1.1, "def solve_32b51cdb(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, last)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, first)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, x10)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, x12)\n    x15 = rbind(shift, ZERO_BY_TWO)\n    x16 = compose(x15, x14)\n    x17 = rbind(shift,12chain)\n    x18 = compose(x17, first)\n    x19 = lbind(recolor, ZERO)\n    x20 = compose(x19, ulcorner)\n    x21 = fork(combine, x18, x20)\n    x22 = chain(x5, first, x21)\n    x23 = fork(paint, identity, x22)\n    x24 = chain(x5, first, x18)\n    x25 = fork(multiply, identity, x24)\n    x26 = chain(x5, last, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = fork(add, x23, x27)\n    x29 = fork(add, x28, x28)\n    x30 = compose(last, x29)\n    x31 = rbind(argmin, x30)\n    x32 = lbind( Recreurrences, x9)\n    x33 = compose(first, x32)\n    x34 = fork(add, x33, x29)\n    x35 = compose(x31, x34)\n    x36 = fork(65935, first, x35)"], [1.1, "def solve_10bcf21a(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_f96999e7(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_afdda1c5(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_67d7471b(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 =Rbind(colorcount, x10)\n    x12 = normalize(I)\n    x13 =91(x11)\n    x14 = color(x12)\n    x15 = remove(x3, x8)\n    x16 = apply(first, x15)\n    x17 = last(x15)\n    x18 = objects(x6, T, T, T)\n    x19 = colorfilter(x18, x14)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = interval(ZERO, x21, ONE)\n    x23 = asobject(x22)\n    x24 = rbind(first, x10)\n    x25 = apply(x24, x23)\n    x26 = astuple(x21, x25)\n    x27 = x26(x23)\n    x28 = x26(x24)\n    x29 = x28(x27)\n    x30 = x28(x24)\n    x31 = x29(x canvas)\n    x32 = fill(x31, x11, x27)\n    x33 = fill(x32, x10, x27)\n    x34 = fill(x33, x14, x20)\n    x35 = fill(x34, x13, x29)\n    x36 = ofcolor(x35, x10)\n    x37 = rbind(contained, x36)\n    x38 = compose(x37, ulcorner)\n    x39 = sfilter(x43, x38)\n    x40 = shape(x39)\n    x41 = subtract(x40, DOWN)\n    x42 = canvas(x"], [1.1, "def solve_c9621d7e(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_421f7fa5(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_1cc3a4ac(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = chain(rot90, x24, x27)\n    x29 = power(x28, FOUR)\n    x30 = compose(first, x29)\n    x31 = multiply(TEN, THREE)\n    x32 = power(x30, x31)\n    x33 = fork(astuple, x29, x32)\n    x34 = size(x467)\n    x35 = power(x33, x34)\n    x36 = astuple(x35, x27)\n    x37 = lbind(canvas, x35)\n    x38 = lbind(prapply, x37)\n    x39"], [1.1, "def solve_4c68eff4(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_d4df188a(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = rbind(ofcolor, ZERO)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = remove(ORIGIN, x1)\n    x5 = lbind(argmin, x4)\n    x6 = lbind(lbind, manhattan)\n    x7 = compose(x5, x6)\n    x8 = compose(x3, x7)\n    x9 = lowermost(x7)\n    x10 = rightmost(x7)\n    x11 = matcher(x8, x9)\n    x12 = leftmost(x7)\n    x13 = matcher(x8, x12)\n    x14 = uppermost(x7)\n    x15 =rightmost(x7)\n    x16 = matcher(x14, x15)\n    x17 = uppermost(x7)\n    x18 = matcher(x17, x16)\n    x19 = rightmost(x7)\n    x20 = matcher(x19, x18)\n    x21 = leftmost(x7)\n    x22 = matcher(x21, x15)\n    x23 = leftmost(x7)\n    x24 = matcher(x23, x12)\n    x25 = rightmost(x7)\n    x26 = matcher(x25, x15)\n    x27 = fork(add, x26, x7)\n    x28 = fork(add, x27, x14)\n    x29 = fork(add, x28, x20)\n    x30 = fork(add, x29, x21)\n    x31 = palette(I)\n    x32 = lbind(sfilter, x31)\n    x33 = lbind(matcher, identity)\n    x34 = compose(x33, x30)\n    x35 = chain(size, x32, x34)\n    x36 = ofcolor(I, ZERO)\n    x37 = palette(I)\n    x38 = repeat(x16, x38)\n    x39 =\n     leftmost(x39)\n    x40 = trim(I)\n    "], [1.1, "def solve_3b0afb7f(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_28e252af(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = rbind(order, leftmost)\n    x4 = chain(x3, toindices, x2)\n    x5 = lbind(contained, x1)\n    x6 = compose(x5, x4)\n    x7 = fork(223(x6, fork, identity)\n    x8 = extract(x1, x7)\n    x9 = x5(x8)\n    x10 = branch(x9, identity, dmirror)\n    x11 = x10(x1)\n    x12 = replace(x11, EIGHT, x9)\n    x13 = x10(x2)\n    x14 = branch(x13, identity, vmirror)\n    x15 = x14(x13)\n    x16 = trim(x15)\n    x17 = mostcolor(x16)\n    x18 = repeat(x16, ONE)\n    x19 = mapply(d43, x18)\n    x20 = x14(x19)\n    x21 = replace(x20, EIGHT, x17)\n    x22 = x10(x21)\n    x23 = replace(x22, righthalf, x17)\n    x24 = replace(x23,nah to, x17)\n    x25 = dmirror(x24)\n    x26 = width(x22)\n    x27 = add(x26, DOWN)\n    x28 = dmirror(x25)\n    x29 = add(x28, x26)\n    x30 = invert(x29)\n    x31 = width(x22)\n    x32 = increment(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = asobject(x22)\n    x35 = ZERO(x34)\n    x36 = ofcolor(x10, x17)\n    x37 = shift(x36, last)\n    x38 = paint(x12, x37)\n    x39 = double(x30)\n    x40 = downscale(x38, x39)\n    x41 = interval"], [1.1, "def solve_15884ee1(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, ONE)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)"], [1.1, "def solve_fb219415(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = lbind(colorfilter, x1)\n    x5 = compose(size, x4)\n    x6 = matcher(x5, TWO)\n    x7 = asindices(I)\n    x8 = box(x7)\n    x9 = rbind(difference, x8)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(size, x9, x10)\n    x12 = matcher(x11, ZERO)\n    x13 = rbind(greater, ONE)\n    x14 = lbind(apply, size)\n    x15 = lbind(colorfilter, x1)\n    x16 = compose(x14, x15)\n    x17 = chain(x13, minimum, x16)\n    x18 = fork(both, x12, x17)\n    x19 = fork(both, x6, x18)\n    x20 = extract(x3, x19)\n    x21 = other(x3, x20)\n    x22 = ofcolor(I, x21)\n    x23 = colorfilter(x1, x20)\n    x24 = rbind(vmatching, x22)\n    x25 = rbind(hmatching, x22)\n    x26 = fork(either, x24, x25)\n    x27 = extract(x23, x26)\n    x28 = other(x23, x27)\n    x29 = rbind(gravitate, x27)\n    x30 = compose(x29, initset)\n    x31 = fork(add, identity, x30)\n    x32 = fork(connect, identity, x31)\n    x33 = mapply(x32, x22)\n    x34 = fill(I, x21, x33)\n    x35 = fill(x34, FOUR, x22)\n    x36 = ofcolor(I, x20)\n    x37 = apply(first, x36)\n    x38 = size(x37)\n    x39 = apply"], [1.1, "def solve_a2d4c73b(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(identity, dmirror)\n    x5 = astuple(cmirror, hmirror)\n    x6 = combine(x4, x5)\n    x7 = rbind(rapply, I)\n    x8 = compose(first, x7)\n    x9 = chain(x3, x8, initset)\n    x10 = extract(x6, x9)\n    x11 = x10(I)\n    x12 = mostcolor(I)\n    x13 = palette(I)\n    x14 = remove(x12, x13)\n    x15 = other(x14, TWO)\n    x16 = ofcolor(x11, x15)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, identity, vmirror)\n    x20 = x19(x11)\n    x21 = ofcolor(x20, x15)\n    x22 = ofcolor(x20, TWO)\n    x23 = apply(last, x22)\n    x24 = insert(ZERO, x23)\n    x25 = width(x20)\n    x26 = insert(x25, x24)\n    x27 = order(x26, identity)\n    x28 = last(x27)\n    x29 = remove(x28, x27)\n    x30 = first(x27)\n    x31 = remove(x30, x27)\n    x32 = pair(x29, x31)\n    x33 = size(x29)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = pair(x34, x32)\n    x36 = lbind(fork, connect)\n    x37 = compose(first, last)\n    x38 = chain(decrement, last, last)\n    x39 = lbind(lbind, add)\n    x40 = compose(x39, first)\n    x41 = lbind("], [1.1, "def solve_263f7412(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = rapply(x30, x2)\n    x32 = first(x31)\n    x33 = last(x31)\n    x34 =    x32(I)\n    x35 = dmirror(x34)\n    x36 = dedupe(x35)\n    x37 = chain"], [1.1, "def solve_ffe9c7f9(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, size)\n    x3 =323(I)\n    x4 = sfilter(x3, x2)\n    x5 = fork(apply, vfrontier, hfrontier)\n    x6 = sfilter(x4, x2)\n    x7 = fork(intersection, x5, x6)\n    x8 = chain(size, x7, x8)\n    x9 = matcher(x8, ZERO)\n    x10 = matcher(TWO, ONE)\n    x11 = sfilter(x4, x9)\n    x12 = sfilter(x4, x10)\n    x13 = merge(x11)\n    x14 = fill(I, TWO, x13)\n    x15 = merge(x12)\n    x16 = width(x15)\n    x17 = ulcorner(x15)\n    x18 =27(x16)\n    x19 = subtract(x17, x18)\n    x20 = increment(x19)\n    x21 = width(x20)\n    x22 = subtract(x17, x21)\n    x23 = RIGHT(x20, x22)\n    x24 = sfilter(x4, x23)\n    x25 = chain(first, last, first)\n    x26 = totuple(x24)\n    x27 = apply(x25, x26)\n    x28 = combine(x28, x27)\n    x29 = lbind(colorcount, x14)\n    x30 = argmax(x29, x28)\n    x31 = remove(x30, x30)\n    x32 = first(x31)\n    x33 = ofcolor(x32, x32)\n    x34 = shift(x33, x323)\n    x35 = combine(x28, x34)\n    x36 = recolor(x32, x35)\n    x37 = shift(x33, x327)\n    x38 = occurrences(x38, x37)\n    x39 = mapply(toindices, x38)\n    x40 = lbind(mapply, x5)\n"], [1.1, "def solve_19ce1e47(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = compose(leftmost, first)\n    x13 = compose(leftmost, last)\n    x14 = fork(equality, x12, x13)\n    x15 = compose(uppermost, first)\n    x16 = compose(uppermost, last)\n    x17 = fork(equality, x15, x16)\n    x18 = fork(either, x14, x17)\n    x19 = sfilter(x11, x18)\n    x20 = compose(color, first)\n    x21 = compose(center, first)\n    x22 = compose(center, last)\n    x23 = fork(connect, x21, x22)\n    x24 = fork(recolor, x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = matcher(last, ZERO)\n    x28 = decrement(x26)\n    x29 = matcher(last, x28)\n    x30 = fork(either, x27, x29)\n    x31 = matcher(first, ZERO)\n    x32 = decrement(x25)\n    x33 = matcher(first, x32)\n    x34 = fork(either, x31, x33)\n    x35 = toindices(x5)\n    x36 = sfilter(x35, x30)\n    x37 = equality(x35, x36)\n    x38 = mapply(x24, x19)\n    x39 = paint(I, x38)\n    x40 = branch(x37, x30, x34)\n    "], [1.1, "def solve_3da22d9e(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = colorfilter(x2, x1)\n    x4 = rbind(bordering, I)\n    x5 = compose(flip, x4)\n    x6 = mfilter(x3, x5)\n    x7 = outbox(x6)\n    x8 = subgrid(x7, I)\n    x9 = trim(x8)\n    x10 = palette(x9)\n    x11 = matcher(identity, x1)\n    x12 = argmin(x10, x11)\n    x13 = trim(x8)\n    x14 = ofcolor(x13, x12)\n    x15 = shift(x14, UNITY)\n    x16 = matcher(first, x12)\n    x17 = rbind(sfilter, x16)\n    x18 = compose(flip, x17)\n    x19 = rbind(sfilter, x18)\n    x20 = chain(normalize, x17, x19)\n    x21 = mostcolor(x10)\n    x22 = ofcolor(x8, x21)\n    x23 = combine(x15, x22)\n    x24 = fill(x8, x12, x23)\n    x25 = difference(x19, x22)\n    x26 = ofcolor(x24, x25)\n    x27 = asindices(x24)\n    x28 = ofcolor(x24, x12)\n    x29 = leftmost(x28)\n    x30 = invert(x29)\n    x31 = shift(x27, x30)\n    x32 = lbind(shift, x28)\n    x33 = apply(x32, x31)\n    x34 = mapply(x24, x33)\n    x35 = fill(x24, x12, x34)\n    x36 = lbind(shift, x29)\n    x37 = mapply(x36, x31)\n    x38 = shift(x37, x32)\n    x39 = combine(x35, x38)\n    O = fill"], [1.1, "def solve_52642045(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_27032fba(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(add, x28, x33)\n    x34 = argmax(x1, x33)\n    x35 = x30(x34)\n    x36 = x30(x36)\n    "], [1.1, "def solve_627a25f5(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_7e4a9a9c(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 =42568b91\n    70446868723\n    2872536926\n    3797228669\n    2973625214\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 =42568b91000\n    70886868723\n    2872536926\n    3797228669\n    2973625214\n    0658658066\n    0281869366\n    09600060591\n    1763502461\n    \"\"\"\n    x1 = canvas(x3, THREE_BY_THREE)\n    x2 = toobject(x1, I)\n    x3 = asobject(x2)\n    x4 = vmirror(x3)\n    x5 = hline(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = asobject(x7)\n    x9 = matcher(first, x3)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = sfilter(x8, x9)\n    x13 = height(x12)\n    x14 = width(x12)\n    x15 = divide(x13, x14)\n    x16 = astuple(x15, x13)\n    x17 = mostcolor(I)\n    x18 = canvas(x17, x16)\n    x19 = multiply(x18, x509)\n    x20 = canvas(x17, x19)\n    x21 = asobject(x20)\n    x22 = frontiers(x21)\n    x23 = merge(x22)\n    x24 = paint(x18, x23)\n    x25 = objects(x24, F, F, T)\n    x26 = first(x25)\n    x27 = mostcolor(x26)"], [1.1, "def solve_d7342afd(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(identity, dmirror)\n    x5 = astuple(cmirror, hmirror)\n    x6 = combine(x4, x5)\n    x7 = rbind(rapply, I)\n    x8 = compose(first, x7)\n    x9 = chain(x3, x8, initset)\n    x10 = extract(x6, x9)\n    x11 = x10(I)\n    x12 = mostcolor(I)\n    x13 = palette(I)\n    x14 = remove(x12, x13)\n    x15 = other(x14, FIVE)\n    x16 = ofcolor(x11, x15)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, identity, vmirror)\n    x20 = x19(x11)\n    x21 = ofcolor(x20, x15)\n    x22 = ofcolor(x20, FIVE)\n    x23 = intersection(x21, x22)\n    x24 = fill(x20, TWO, x23)\n    x25 = lbind(contained, x15)\n    x26 = compose(first, last)\n    x27 = sfilter(x22, x26)\n    x28 = difference(x22, x27)\n    x29 = fill(x24, TWO, x288)\n    x30 = objects(x29, T, F, T)\n    x31 = colorfilter(x30, TWO)\n    x32 = difference(x30, x31)\n    x33 = first(x32)\n    x34 = power(outbox, TWO)\n    x35 = compose(first, last)\n    x36 = fork(equality, identity, x35)\n    x37 = compose(last, first)\n    x38 = fork(equality, identity, x37)\n    x39 = sfilter(x33, x38)\n    x40"], [1.1, "def solve_e252e7c4(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_a0293036(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = add(UNITY, UNITY)\n    x3 =insert(UNITY, x2)\n    x4 = merge(x3)\n    x5 = dmirror(x4)\n    x6 = invert(NEG_TWO)\n    x7 = shift(x5, x6)\n    x8 = astuple(NEG_TWO, ONE)\n    x9 = hmirror(x8)\n    x10 = vmirror(x9)\n    x11 = insert(x10, x8)\n    x12 = invert(x11)\n    x13 = shift(x13, x12)\n    x14 = combine(x7, x13)\n    x15 = I(x14)\n    x16 = combine(x7, x13)\n    x17 = I(x16)\n    x18 = palette(x15)\n    x19 = lbind(colorcount, x15)\n    x20 = compose(x19, color)\n    x21 = argmin(x18, x20)\n    x22 = rbind(colorcount, x21)\n    x23 = apply(x22, x16)\n    x24 = maximum(x23)\n    x25 = increment(x24)\n    x26 = interval(ONE, x25, ONE)\n    x27 = apply(x26, x24)\n    x28 = astuple(x24, x27)\n    x29 = lbind(canvas, x1)\n    x30 = lbind(occurrences, x5)\n    x31 = rbind(rapply, x22)\n    x32 = compose(initset, x31)\n    x33 = chain(first, x31, x32)\n    x34 = rbind(rapply, x22)\n    x35 = compose(initset, x35)\n    x36 = chain(first, x34, x35)\n    x37 = matcher(x33, x21)\n    x38 = fork(both, x37, x25)\n    x39 = compose(flip, x38)\n    x40 = extract(x27"], [1.1, "def solve_5269d9dc(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_3eef444f(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = chain(x4, x5, color)\n    x7 = compose(maximum, shape)\n    x8 = fork(add, x7, x6)\n    x9 = compose(invert, x8)\n    x10 = order(x2, x9)\n    x11 = rbind(add, DOWN)\n    x12 = compose(x11, ulcorner)\n    x13 = fork(contained, x12, toindices)\n    x14 = rbind(add, RIGHT)\n    x15 = compose(x14, ulcorner)\n    x16 = fork(contained, x15, toindices)\n    x17 = fork(add, x13, x16)\n    x18 = rbind(argmax, x17)\n    x19 = compose(initset, identity)\n    x20 = fork(insert, vmirror, x19)\n    x21 = fork(insert, cmirror, x20)\n    x22 = fork(insert, hmirror, x21)\n    x23 = compose(x18, x22)\n    x24 = apply(x23, x10)\n    x25 = size(x2)\n    x26 = apply(size, x2)\n    x27 = contained(ONE, x26)\n    x28 = increment(x25)\n    x29 = branch(x27, x25, x28)\n    x30 = double(x29)\n    x31 = decrement(x30)\n    x32 = apply(normalize, x24)\n    x33 = interval(ZERO, x29, ONE)\n    x34 = pair(x33, x33)\n    x35 = mpapply(shift, x32, x34)\n    x36 = astuple(x31, x31)\n    x37 = canvas(x1, x36)\n    x38 = paint(x37, x35)\n    x39 ="], [1.1, "def solve_6dc31a12(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = size(x1)\n    x5 = positive(x4)\n    x6 = branch(x5, hsplit, vsplit)\n    x7 = x6(I, TWO)\n    x8 = first(x7)\n    x9 = last(x7)\n    x10 = palette(x8)\n    x11 = matcher(identity, x9)\n    x12 = palette(x8)\n    x13 = sfilter(x10, x11)\n    x14 = size(x13)\n    x15 = positive(x14)\n    x16 = branch(x15, identity, dmirror)\n    x17 = x16(x6)\n    x18 = first(x17)\n    x19 = flip(x15)\n    x20 = hmirror(x18)\n    x21 = palette(x20)\n    x22 = lbind(colorcount, x20)\n    x23 = compose(x22, argmin)\n    x24 = rbind(colorcount, x3)\n    x25 = chain(x24, positive, x23)\n    x26 = lbind(ofcolor, x18)\n    x27 =88(x25, x20)\n    x28 = ZERO(x27)\n    x29 = lbind(subtract, x28)\n    x30 = compose(x29, last)\n    x31 = fork(argmin, x30, x21)\n    x32 = x31(x6)\n    x33 = x30(x32)\n    x34 = ofcolor(x33, x3)\n    x35 = gravitate(x34, x32)\n    x36 = x31(x35)\n    x37 = x30(x36)\n    x38 = crop(x37, x4, xitset)\n    x39 = lbind(argmin, x38)\n    x40 = lbind(rbind, manhattan)\n    x41 = compose(x39, x40)\n    x42 = fork(remove, x41"], [1.1, "def solve_839a7b8a(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18, x"], [1.1, "def solve_0a5cd984(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_b920fc30(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind"], [1.1, "def solve_685f3cdc(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = leastcolor(I)\n    x9 = rbind(ofcolor, x8)\n    x10 = rbind(rapply, I)\n    x11 = chain(first, x10, initset)\n    x12 = chain(hline, x9, x11)\n    x13 = rbind(ofcolor, x8)\n    x14 = rbind(rapply, I)\n    x15 = chain(first, x14, initset)\n    x16 = chain(leftmost, x13, x15)\n    x17 = matcher(x16, ZERO)\n    x18 = fork(both, x12, x17)\n    x19 = compose(x18, first)\n    x20 = extract(x7, x19)\n    x21 = first(x20)\n    x22 = last(x20)\n    x23 = x21(I)\n    x24 = ofcolor(x23, x8)\n    x25 = argmax(x24, last)\n    x26 = add(x25, UP_RIGHT)\n    x27 = shoot(x26, UP_RIGHT)\n    x28 = add(x25, DOWN_LEFT)\n    x29 = shoot(x28, DOWN_LEFT)\n    x30 = rbind(shoot, LEFT)\n    x31 = mapply(x30, x27)\n    x32 = rbind(shoot, LEFT)\n    x33 = mapply(x32, x29)\n    x34 = width(x23)\n    x35 = invert(x34)\n    x36 = tojvec(x35)\n    x37 = shift(x31, x36)\n    x38 = combine(x31, x37)\n    x39 ="], [1.1, "def solve_d65a73a7(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = height(I)\n    x9 = astuple(x8, ONE)\n    x10 = canvas(THREE, x9)\n    x11 = hconcat(x10, I)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = identity(DOWN)\n    x17 = connect(ORIGIN, x15)\n    x18 = fill(x11, THREE, x17)\n    x19 = identity(x13)\n    x20 = identity(x12)\n    x21 = identity(x12)\n    x22 = identity(F)\n    x23 = identity(ZERO)\n    x24 = compose(first, first)\n    x25 = chain(first, last, x24)\n    x26 = compose(first, first)\n    x27 = chain(last, last, x26)\n    x28 = chain(first, first, first)\n    x29 = chain(first, last, last)\n    x30 = chain(first, first, last)\n    x31 = chain(last, first, last)\n    x32 = compose(decrement, x25)\n    x33 = compose(decrement, x27)\n    x34 = fork(astuple, x32, x33)\n    x35 = compose(decrement, x27)\n    x36 = fork(multiply, x30, x35)\n    x37 = fork(add, x29, x36)\n    x38 = compose(decrement, x28)\n    x39 = fork(multiply, x30, x38)\n    x40 = fork(add, x29, x39)\n    x41 ="], [1.1, "def solve_bd288950(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = width(I)\n    x2 = decrement(x1)\n    x3 = tojvec(x2)\n    x4 = connect(ORIGIN, x3)\n    x5 = height(I)\n    x6 = decrement(x5)\n    x7 = toivec(x6)\n    x8 = connect(ORIGIN, x7)\n    x9 = width(I)\n    x10 = decrement(x9)\n    x11 = tojvec(x10)\n    x12 = shape(I)\n    x13 = decrement(x12)\n    x14 = connect(x11, x13)\n    x15 = height(I)\n    x16 = decrement(x15)\n    x17 = toivec(x16)\n    x18 = shape(I)\n    x19 = decrement(x18)\n    x20 = connect(x17, x19)\n    x21 = asindices(I)\n    x22 = box(x21)\n    x23 = toobject(x22, I)\n    x24 = mostcolor(x23)\n    x25 = matcher(color, x24)\n    x26 = compose(flip, x25)\n    x27 = rbind(sfilter, x26)\n    x28 = rbind(sizefilter, ONE)\n    x29 = rbind(objects, F)\n    x30 = rbind(x29, F)\n    x31 = rbind(x30, T)\n    x32 = rbind(subgrid, I)\n    x33 = chain(x27, x31, x32)\n    x34 = chain(size, x28, x33)\n    x35 = astuple(x4, x8)\n    x36 = astuple(x14, x20)\n    x37 = combine(x35, x36)\n    x38 = argmax(x37, x34)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, initset)\n    x41 = ofcolor(I, x24)\n    x42 = difference(x38, x41)\n"], [1.1, "def solve_2c656666(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, corners)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = fgpartition(I)\n    x6 = merge(x5)\n    x7 = backdrop(x4)\n    x8 = toobject(x7, I)\n    x9 = difference(x6, x8)\n    x10 = mostcolor(I)\n    x11 = inbox(x4)\n    x12 = backdrop(x11)\n    x13 = toobject(x12, I)\n    x14 = matcher(first, x10)\n    x15 = compose(flip, x14)\n    x16 = sfilter(x13, x15)\n    x17 = subgrid(x9, I)\n    x18 = palette(x16)\n    x19 = order(x18, identity)\n    x20 = lbind(colorcount, x16)\n    x21 = apply(x20, x19)\n    x22 = lbind(colorcount, x9)\n    x23 = apply(x22, x19)\n    x24 = pair(x21, x23)\n    x25 = fork(divide, first, last)\n    x26 = apply(x25, x24)\n    x27 = mostcommon(x26)\n    x28 = lbind(colorcount, x16)\n    x29 = lbind(colorcount, x9)\n    x30 = fork(divide, x28, x29)\n    x31 = matcher(x30, x27)\n    x32 = palette(x9)\n    x33 = sfilter(x32, x31)\n    x34 = rbind(contained, x33)\n    x35 = compose(x34, first)\n    x36 = sfilter(x16, x35)\n    x37 = sfilter(x9, x35)\n    x38 = height(x36)\n    x39 = height(x37)\n    x40 = divide(x38, x39)\n    x41 = width(x36)\n    x42"], [1.1, "def solve_9ea6762b(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_cf8d240f(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_4690cbcb(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = trim(I)\n    x2 = decrement(x1)\n    x3 = tojvec(x2)\n    x4 = connect(ORIGIN, x3)\n    x5 = height(I)\n    x6 = decrement(x5)\n    x7 = toivec(x6)\n    x8 = connect(ORIGIN, x7)\n    x9 = width(I)\n    x10 = decrement(x9)\n    x11 = tojvec(x10)\n    x12 =677(x8)\n    x13 = shape(I)\n    x14 = decrement(x13)\n    x15 = connect(x12, x14)\n    x16 = rbind(multiply, TWO)\n    x17 = apply(x16, x10)\n    x18 = rbind(multiply, FOUR)\n    x19 = apply(x18, x15)\n    x20 = asindices(x1)\n    x21 = ofcolor(I, ZERO)\n    x22 = difference(x20, x21)\n    x23 = rbind(multiply, THREE)\n    x24 = apply(x23, x22)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = astuple(x26, x18)\n    x28 = rbind(multiply, x27)\n    x29 = apply(x28, x26)\n    x30 = rbind(hmatching, x27)\n    x31 = rbind(vmatching, x27)\n    x32 = fork(either, x30, x31)\n    x33 = compose(x32, initset)\n    x34 = ofcolor(I, FIVE)\n    x35 = sfilter(x34, x33)\n    x36 = height(I)\n    x37 = equality(x36, FOUR)\n    x38 = insert(x33, x37)\n    x39 = THREE(x38, x34)\n    x40 = contained(x39, x35)\n    x41 = branch(x40, height, width)\n    x42"], [1.1, "def solve_dd6157f5(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(x32, x38, first)\n    x40 = matcher(x39, x20)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_6598a996(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = fork(connect, ulcorner, lrcorner)\n    x2 = x1(I)\n    x3 = shape(x2)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = subtract(x4, x5)\n    x7 = mostcolor(I)\n    x8 = shape(x2)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x5, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, insert)\n    x16 = lbind(power, inbox)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x4)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x22)\n    x24 = uppermost(x12)\n    x25 = lbind(chain, x24)\n    x26 = lbind(rbind, add)\n    x27 = compose(x26, x13)\n    x28 = lbind(compose, x24)\n    x29 = fork(rapply, x27, x28)\n    x30 = compose(x15, x29)\n    x31 = fork(contained, x23, x30)\n    x32 = compose(invert, x251)\n    x33 = fork(add, x31, x32)\n    x34 = fork(add, x33, x309)\n    x35 = fork(halve, x34, x29)\n    x36 = compose(85556, x27)\n    x37 = fork(86, lrcorner, x36)\n    x38 = compose(toivec, x37"], [1.1, "def solve_31566156(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 =795(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = lbind(chain, positive)\n    x6 = lbind(x5, size)\n    x7 = rbind(compose, backdrop)\n    x8 = lbind(lbind, intersection)\n    x9 = chain(x6, x7, x8)\n    x10 = chain(x9, backdrop, outbox)\n    x11 = lbind(sfilter, x4)\n    x12 = compose(x11, x10)\n    x13 = chain(positive, size, x12)\n    x14 = sfilter(x4, x13)\n    x15 = compose(merge, x12)\n    x16 = apply(x15, x14)\n    x17 = rbind(subgrid, I)\n    x18 = apply(x17, x16)\n    x19 = merge(x16)\n    x20 = palette(x19)\n    x21 = lbind(colorcount, x19)\n    x22 = argmin(x20, x21)\n    x23 = rbind(colorcount, x22)\n    O = argmax(x18, x23)\n    return O"], [1.1, "def solve_7a7784dc(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = replace(I, x1, ZERO)\n    x3 = apply(normalize, x2)\n    x4 = asindices(x3)\n    x5 = NEG_UNITY(x4)\n    x6 = dmirror(x5)\n    x7 = invert(x6)\n    x8 =777652(x3, x7)\n    x9 = shift(x8, x5)\n    O = paint(x2, x9)\n    return O"], [1.1, "def solve_cd53d13c(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = asobject(I)\n    x2 = lbind(shift, x1)\n    x3 = compose(x2, llcorner)\n    x4 = rbind(shift, urcorner)\n    x5 = compose(x4, urcorner)\n    x6 = chain(x3, x5, x4)\n    x7 =11(x6)\n    x8 = height(I)\n    x9 = width(I)\n    x10 = compose(last, last)\n    x11 = subtract(x10, x9)\n    x12 = decrement(x11)\n    x13 = multiply(x12, TWO)\n    x14 = add(x13, x11)\n    x15 = height(I)\n    x16 = subtract(x15, x12)\n    x17 = decrement(x16)\n    x18 = apply(x12, x14)\n    x19 = astuple(x17, x18)\n    x20 = canvas(ZERO, x19)\n    x21 = asobject(x20)\n    x22 = occurrences(I, x21)\n    x23 = mapply(x2, x22)\n    O = fill(x20, ONE, x23)\n    return O"], [1.1, "def solve_2b65b451(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = size(x5)\n    x7 = positive(x6)\n    x8 = bottomhalf(x5)\n    x9 = lefthalf(x8)\n    x10 = branch(x7, x9, x6)\n    x11 = branch(x7,)*9, x10)\n    x12 = delta(x11)\n    x13 = decrement(x12)\n    x14 = uppermost(x11)\n    x15 = remove(x14, x11)\n    x16 = lbind(position, x11)\n    x17 = lbind(shoot, x13)\n    x18 = compose(x16, x17)\n    x19 = fork(intersection, x18, identity)\n    x20 = lowermost(x5)\n    x21 = rbind(multiply, x20)\n    x22 = chain(size, x21, toindices)\n    x23 = argmax(x15, x22)\n    x24 = shape(I)\n    x25 = canvas(x24, x24)\n    x26 = lbind(shift, x11)\n    x27 = mapply(x26, x23)\n    O = paint(x25, x27)\n    return O"], [1.1, "def solve_8f1e439b(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 =7766(I)\n    x4 =66(73)\n    x5 = fork(both, x3, x4)\n    x6 = extract(x2, x5)\n    x7 = other(x6, x1)\n    x8 =171(x7)\n    x9 = multiply(TEN, TEN)\n    x10 = power(outbox, x9)\n    x11 = first(x8)\n    x12 = invert(x11)\n    x13 = shift(x11, x12)\n    x14 = shift(x13, x11)\n    x15 = toindices(x14)\n    x16 = lbind(shift, x15)\n    x17 = rbind(difference, x15)\n    x18 = chain(size, x16, x17)\n    x19 = argmax(x15, x18)\n    x20 = double(x31)\n    x21 = apply(x16, x20)\n    x22 = interval(x21, ONE, ONE)\n    x23 = difference(x21, x22)\n    x24 = apply(x16, x23)\n    x25 = astuple(x24, x15)\n    x26 = canvas(x1, x25)\n    x27 = asindices(x26)\n    x28 = apply(x16, x27)\n    x29 = lbind(argmin, x28)\n    x30 = lbind(shift, x13)\n    x31 = mapply(x30, x29)\n    O = fill(x26, x1, x31)\n    return O"], [1.1, "def solve_5dae2a90(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 =Example output:\n    4446633648\n    1334663362\n    4444463944\n    3344444393\n    4344444401\n    4334443444\n    6484463334\n    6644444446\n    0404486644\n    1154344466\n    \"\"\"\n    x1 = hsplit(I, TWO)\n    O = first(x1)\n    return O"], [1.1, "def solve_b8f7d131(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = extract(x2, x4)\n    x6 =0000(I, x5)\n    x7 = shape(I)\n    x8 = canvas(ZERO, x7)\n    x9 = colorfilter(x2, x1)\n    x10 =\n    maxcolor(I)\n    x11 = shape(I)\n    x12 = decrement(x11)\n    x13 = lbind(astuple, x12)\n    x14 = apply(x13, x9)\n    x15 = rbind(shoot, UNITY)\n    x16 = mapply(x15, x14)\n    x17 = fill(x8, x10, x16)\n    O = fill(x17, x1, x2)\n    return O"], [1.1, "def solve_5ebef8c6(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = matcher(color, ZERO)\n    x5 =423(x3)\n    x6 = sfilter(x3, x4)\n    x7 = difference(x3, x6)\n    x8 = merge(x7)\n    x9 = width(x8)\n    x10 = matcher(color, ZERO)\n    x11 =411(x10)\n    x12 = sfilter(x8, x11)\n    x13 = combine(x6, x12)\n    x14 = merge(x12)\n    x15 = fill(I, THREE, x14)\n    x16 = merge(x12)\n    x17 = fill(x15, ONE, x16)\n    O = replace(x17, ZERO, ONE)\n    return O"], [1.1, "def solve_f0ea7130(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = shape(I)\n    x2 = add(x1, DOWN)\n    x3 = crop(I, ORIGIN, x2)\n    x4 = decrement(x1)\n    x5 = tojvec(x4)\n    x6 = crop(I, x5, x2)\n    x7 = double(x3)\n    x8 = add(x7, TWO)\n    x9 = crop(I, x8, x2)\n    x10 = asobject(x9)\n    x11 =77101ecdecrement\n    x12 = argmin(x10, x11)\n    x13 = mostcolor(x12)\n    x14 = asindices(x12)\n    x15 = astuple(x13, x14)\n    x16 = ulcorner(x12)\n    x17 = rbind(shoot, x16)\n    x18 = mapply(x17, x15)\n    x19 = underfill(I, x13, x18)\n    x20 = objects(x19, T, F, T)\n    x21 = colorfilter(x20, x13)\n    x22 = rbind(bordering, I)\n    x23 = mfilter(x21, x22)\n    O = cover(x19, x23)\n    return O"], [1.1, "def solve_c9412091(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = astuple(FOUR, FOUR)\n    x2 = crop(I, ORIGIN, x1)\n    x3 = TWO_BY_TWO)\n    x4 = asobject(x2)\n    x5 = rbind(multiply, UNITY)\n    x6 = apply(x5, x4)\n    x7 = asobject(x6)\n    x8 = UNITY(x1)\n    x9 = NEG_UNITY)\n    x10 = shift(x7, x9)\n    x11 = paint(I, x10)\n    x12 = toindices(x7)\n    x13 = lbind(shift, x12)\n    x14 = mapply(x13, x6)\n    O = fill(x11, TWO, x14)\n    return O"], [1.1, "def solve_e4a63964(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 =36fcc3(I, ORIGIN)\n    x2 = decrement(x1)\n    x3 = papply(astuple, x2, x4)\n    x4 = lbind(shift, x3)\n    x5 = mapply(x4, x2)\n    O = paint(I, x5)\n    return O"], [1.1, "def solve_d5cc1f65(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = compose(x2, trim)\n    x4 = apply(x3, x1)\n    x5 = lbind(contained, x4)\n    x6 = compose(x5, flip)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(contained, x7)\n    x9 = compose(x8, vsplit)\n    x10 = sfilter(x7, x9)\n    x11 = merge(x10)\n    x12 = lbind(contained, x11)\n    x13 = compose(x12, vmirror)\n    x14 = sfilter(x7, x13)\n    x15 = compose(size, x7)\n    x16 = size(x14)\n    x17 = greater(x15, x16)\n    x18 = subgrid(x14, I)\n    x19 = trim(x18)\n    x20 = lefthalf(x19)\n    x21 = righthalf(x19)\n    x22 = vmirror(x21)\n    x23 = objects(x20, T, F, T)\n    x24 = merge(x23)\n    x25 =422(x24)\n    x26 = cellwise(x25, x20, x08)\n    x27 = order(x26, identity)\n    x28 = first(x27)\n    x29 = last(x27)\n    x30 = x28(x20)\n    x31 = flip(x30)\n    x32 = replace(x20, x24, x7)\n    x33 = replace(x32, x24, x9)\n    x34 = branch(x31, x33, x24)\n    O = x15(x34, x39)\n    return O"], [1.1, "def solve_a520631b(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = totuple(x2)\n    x4 = apply(color, x3)\n    x5 = mostcommon(x4)\n    x6 =467618(UNITY)\n    x7 = canvas(x5, UNITY)\n    O = paint(x7, x6)\n    return O"], [1.1, "def solve_d115a417(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 =96(I, identity)\n    x2 =44(x1, identity)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, lefthalf, tophalf)\n    x5 = x4(I)\n    x6 = bottomhalf(I)\n    x7 = index(x5, ORIGIN)\n    x8 = palette(x6)\n    x9 = palette(x7)\n    x10 = intersection(x8, x9)\n    x11 = remove(x7, x10)\n    x12 = palette(x6)\n    x13 = other(x12, x11)\n    x14 = palette(x6)\n    x15 = other(x14, x13)\n    x16 = intersection(x15, x13)\n    x17 = ofcolor(x5, x13)\n    x18 = ofcolor(x6, x13)\n    x19 = combine(x17, x18)\n    x20 = fill(x5, x13, x19)\n    O = x4(x20)\n    return O"], [1.1, "def solve_2de33c8d(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(UP, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = fork(combine, initset,000000\n    x9 = compose(x8, first)\n    x10 = compose(x8, last)\n    x11 = fork(difference, x9, x10)\n    x12 = compose(x11, toindices)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = matcher(first, x15)\n    x18 = compose(flip, x17)\n    x19 = sfilter(x15, x18)\n    x20 = dmirror(x19)\n    x21 = subtract(x16, x20)\n    x22 = branch(x21, hsplit, vsplit)\n    x23 = merge(x22)\n    x24 = sfilter(x22, x23)\n    x25 = dmirror(x24)\n    x26 = shape(x25)\n    x27 = add(x26, TWO_BY_ZERO)\n    x28 = canvas(ZERO, x27)\n    x29 = asobject(x28)\n    x30 = shift(x29, UNITY)\n    O = paint(x26, x30)\n    return O"], [1.1, "def solve_ce575692(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 =725312 ofsubtract(NINE, ZERO)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [1.1, "def solve_49a2feb2(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = sizefilter(x2, ONE)\n    x4 = apply(size, x3)\n    x5 = dedupe(x4)\n    x6 = objects(I, T, F, F)\n    x7 = merge(x6)\n    x8 = size(x7)\n    x9 = equality(x1, x8)\n    x10 = branch(x9, height, width)\n    x11 = x10(x7)\n    x12 = x10(x8)\n    x13 = subtract(x11, x12)\n    x14 = shift(x5, x13)\n    x15 = other(x1, x14)\n    x16 = x10(x10)\n    x17 = color(x15)\n    x18 = hmirror(I)\n    x19 = cover(I, x18)\n    x20 = objects(x19, T, F, T)\n    x21 = apply(toindices, x20)\n    x22 = fork(either, x21, box)\n    x23 = sfilter(x4, x22)\n    x24 = manhattan(x23, x35)\n    x25 = palette(x23)\n    x26 =recolor(x25, x24)\n    x27 = argmin(x26, x24)\n    x28 = other(x25, x27)\n    x29 = color(x28)\n    x30 = mmirror(x28)\n    x31 = recolor(x28, x30)\n    x32 = combine(x27, x31)\n    x33 = paint(x19, x32)\n    x34 = ofcolor(x33, x29)\n    x35 =441\n     gravitate(x34, x31)\n    x36 = shift(x34, x35)\n    x37 = shift(x36, x34)\n    x38 = combine(x34, x37)\n    x39 = paint(x33, x38)\n    O = x10(x39)\n    return O"], [1.1, "def solve_d11b4a3e(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = rbind(remove, TWO)\n    x2 = compose(x1, last)\n    x3 = rbind(multiply, THREE)\n    x4 = compose(x3, x2)\n    x5 = fork(equality, identity, x4)\n    x6 = compose(x5, first)\n    x7 = extract(x1, x6)\n    x8 = last(x7)\n    x9 = first(x8)\n    x10 = last(x7)\n    x11 = x2(x9)\n    x12 = x2(x10)\n    x13 =9999(first, x11)\n    x14 =9999(first, x12)\n    x15 = cover(I, x11)\n    x16 = fill(x15, ONE, x13)\n    x17 = fill(x16, TWO, x14)\n    O = x2(x17)\n    return O"], [1.1, "def solve_ab2533b2(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = toivec(x1)\n    x5 = crop(I, ORIGIN, x4)\n    x6 =2295587375 asobject(x5)\n    x7 = palette(I)\n    x8 = matcher(identity, x4)\n    x9 = argmin(x7, x8)\n    x10 = asindices(I)\n    x11 = ofobject(x10, I)\n    x12 = difference(x10, x11)\n    x13 = ofcolor(I, x9)\n    x14 = rbind(interval, ONE)\n    x15 = rbind(x14, FOUR)\n    x16 = rbind(sfilter, x15)\n    x17 = lbind(occurrences, I)\n    x18 = lbind(lbind, shift)\n    x19 = compose(x17, x18)\n    x20 = lbind(recolor, x9)\n    x21 = rbind(mapply, x19)\n    x22 = rbind(occurrences, x16)\n    x23 = compose(x22, x18)\n    x24 = fork(apply, x23, x19)\n    x25 = fork(combine, x12, x24)\n    x26 =apply(x25, x3)\n    x27 = ofcolor(I, x9)\n    x28 = mapply(toindices, x27)\n    x29 = fill(I, x9, x28)\n    x30 = mapply(x25, x3)\n    x31 = fill(x29, x10, x30)\n    O = replace(x31, x4, SIX)\n    return O"], [1.1, "def solve_a4a355a4(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 =33333(I)\n    x2 =4213175300\n    4213171351\n    4292302363\n    6932577355\n    7360476287\n    3277069433\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = ofcolor(I, ONE)\n    x3 = lowermost(x2)\n    x4 = lbind(subtract, x3)\n    x5 = chain(toivec, x4, lowermost)\n    x6 = fork(shift, identity, x5)\n    x7 = merge(x1)\n    x8 = cover(I, x7)\n    x9 = mapply(x6, x1)\n    O = paint(x8, x9)\n    return O"], [1.1, "def solve_8e3746e4(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 =637585(I)\n    x2 = mostcolor(I)\n    x3 = lefthalf(x1)\n    x4 = righthalf(x1)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(x3)\n    x8 = x6(x3)\n    x9 = shape(x3)\n    x10 = palette(x3)\n    x11 = palette(x3)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x13, x13)\n    x15 = ofcolor(x13, x6)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [1.1, "def solve_832f21a1(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = cover(I, x2)\n    x4 = apply(normalize, x1)\n    x5 = chain(size, dedupe, flip)\n    x6 = argmax(x4, x5)\n    x7 = repeat(x6, ONE)\n    x8 = merge(x7)\n    x9 = repeat(x6, ONE)\n    x10 = compose(increment, height)\n    x11 = chain(greater, maximum, x10)\n    x12 = compose(x11, asobject)\n    x13 =7777(x12)\n    x14 = upscale(x13, TWO)\n    x15 = shift(x14, TWO_BY_TWO)\n    x16 = paint(x3, x15)\n    x17 = toindices(x15)\n    x18 = lbind(contained,ZERO)\n    x19 = compose(x18, last)\n    x20 = sfilter(x17, x19)\n    x21 =64(x20)\n    x22 = shift(x21, UNITY)\n    O = paint(x16, x22)\n    return O"], [1.1, "def solve_ec52659b(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 =Example output:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9210880830\n    2048742800\n    3626664135\n    8001913937\n    \"\"\"\n    x2 = objects(I, T, F, T)\n    x3 = colorfilter(x2, ZERO)\n    x4 = difference(x2, x3)\n    x5 = merge(x4)\n    x6 = rbind(shoot, DOWN)\n    x7 = mapply(x6, x5)\n    x8 = fill(I, ONE, x7)\n    x9 = mapply(x6, x3)\n    O = fill(x8, TWO, x9)\n    return O"], [1.1, "def solve_054db099(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(ORIGIN, DOWN_LEFT)\n    x5 = rbind(multiply, x4)\n    x6 = apply(x5, x3)\n    x7 =89700cd78\n    x8 = rightmost(x7)\n    x9 = lbind(shift, x8)\n    x10 = mapply(x9, x6)\n    O = paint(I, x10)\n    return O"], [1.1, "def solve_c34ac857(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 =\u2026izet(TWO)\n    x4 = initset(TWO)\n    x5 = recolor(TWO, x3)\n    x6 = recolor(THREE, x2)\n    x7 = insert(x5, x6)\n    x8 = insert(x7, x5)\n    x9 = fill(I, TWO, x8)\n    O = fill(x9, UNITY, x7)\n    return O"], [1.1, "def solve_9fb1c023(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = lefthalf(x1)\n    x4 = righthalf(x1)\n    x5 = tophalf(x4)\n    x6 = righthalf(x4)\n    x7 = bottomhalf(x6)\n    x8 = index(x3, ORIGIN)\n    x9 = palette(x3)\n    x10 =6042(x9)\n    x11 = palette(x3)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = recolor(x13, x1)\n    x16 = recolor(x14, x11)\n    x17 = combine(x15, x16)\n    x18 = combine(x15, x16)\n    x19 = recolor(x17, x1)\n    x20 = occurrences(x4, x17)\n    x21 = outbox(x20)\n    x22 = ofcolor(x3, x13)\n    x23 = urcorner(x22)\n    x24 = ofcolor(x3, x14)\n    x25 = intersection(x23, x24)\n    x26 = first(x25)\n    x27 = shape(I)\n    x28 = canvas(x8, x27)\n    O = fill(x28, x13, x26)\n    return O"], [1.1, "def solve_0c490705(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, positive, branch)\n    x6 = branch(x4, mostcolor, x5)\n    x7 = canvas(x6, UNITY)\n    x8 = add(NEG_UNITY, NEG_UNITY)\n    x9 = shape(I)\n    x10 = maximum(x9)\n    x11 = lbind(multiply, x10)\n    x12 = chain(x11, maximum, initset)\n    x13 = compose(x12, x7)\n    x14 = lbind(intersection, x13)\n    x15 = compose(size, x14)\n    x16 = argmax(x6, x15)\n    x17 = objects(x6, T, F, T)\n    x18 = color(x16)\n    x19 = lbind(recolor, x18)\n    x20 = rbind(argmax, rightmost)\n    x21 = chain(x20, x19, x9)\n    x22 =lbind(apply, x21)\n    x23 = fork(toindices, x22, x17)\n    x24 = fork(mapply, x23, x19)\n    x25 = mostcolor(I)\n    x26 = ofcolor(I, x25)\n    x27 =9 asindices(I)\n    x28 = objects(x6, T, F, T)\n    x29 = rbind(argmax, x27)\n    x30 = fork(recolor, color, x29)\n    x31 = mapply(x30, x28)\n    x32 = paint(x7, x31)\n    x33 = mapply(x27, x34)\n    O = paint(x32, x33)\n    return O"], [1.1, "def solve_d010946c(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = rbind(ofcolor, ORIGIN)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = lefthalf(I)\n    x5 = righthalf(I)\n    x6 = leftmost(x1)\n    x7 =114(x6)\n    x8 = tojvec(x7)\n    x9 = add(x8, THREE)\n    x10 = shift(x4, x9)\n    x11 = fill(I, ZERO, x10)\n    x12 = merge(x11)\n    O = fill(x11, FOUR, x12)\n    return O"], [1.1, "def solve_fc36ca3c(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = occurrences(x1, x2)\n    x4 = leastcolor(x1)\n    x5 = palette(x1)\n    x6 = repeat(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = leastcolor(x1)\n    x9 = palette(x1)\n    x10 = remove(x8, x9)\n    x11 = remove(x8, x10)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = ofcolor(x13, x12)\n    x15 = astuple(x14, x13)\n    x16 = ulcorner(x12)\n    x17 = crop(x15, x16, x15)\n    x18 = asobject(x17)\n    x19 = hperiod(x18)\n    x20 = height(I)\n    x21 = astuple(x20, x13)\n    x22 = ulcorner(x5)\n    x23 = crop(x22, ORIGIN, x22)\n    x24 = hperiod(x23)\n    x25 = astuple(x24, x14)\n    x26 = increment(x25)\n    x27 = interval(ONE, x26, ONE)\n    x28 = product(x27, x27)\n    x29 = lbind(multiply, x ONE)\n    x30 = apply(x29, x28)\n    x31 = lbind(shift, x18)\n    x32 = mapply(x31, x30)\n    x33 = paint(x17, x32)\n    x34 = rot90(x33)\n    x35 =    020(I)\n    x36 =\n    0233358330(x35)\n    x37 = rot270(x36)\n    x38 = papply(shift, x32, x37)\n    x39 = apply(x21, x38)\n    O = paint(x33, x39)\n    return O"], [1.1, "def solve_be366381(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 =444449713834)\n    x2 =4771231458\n    x3 = shape(I)\n    x4 = decrement(x3)\n    x5 = index(I, x4)\n    x6 = equality(x5, FOUR)\n    x7 = branch(x6, UP, RIGHT)\n    x8 = canvas(x7, x4)\n    x9 = equality(x1, TWO)\n    x10 = branch(x9, RIGHT, DOWN)\n    x11 = branch(x10, LEFT, RIGHT)\n    x12 = greater(x11, TWO)\n    x13 = branch(x12,phalf, lefthalf)\n    x14 = branch(x12, numcolors,(x13)\n    x15 = branch(x12,33, FOUR)\n    x16 = x15(I)\n    x17 = mostcolor(x16)\n    x18 = shape(I)\n    x19 = canvas(x17, x18)\n    x20 = hconcat(x16, x19)\n    x21 = objects(x20, F, F, T)\n    x22 = argmax(x21, numcolors)\n    x23 = asindices(x22)\n    x24 = matcher(first, x17)\n    x25 = sfilter(x23, x24)\n    x26 = difference(x23, x25)\n    x27 = mostcolor(x26)\n    x28 = color(x22)\n    x29 = fill(x20, x27, x28)\n    x30 = ulcorner(x22)\n    x31 = width(x22)\n    x32 = divide(x30, x31)\n    x33 = increment(x32)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = merge(x41)\n    x36 = cover(x29, x35)\n    x37 = lbind(shift, x22)\n    x38 = mapply(x37, x34)\n    O = paint(x32, x38)\n    return O"], [1.1, "def solve_d00beb1d(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = rbind(shoot, UNITY)\n    x2 = rbind(add, UNITY)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = chain(decrement, last, x2)\n    x6 = fork(multiply, astuple, x5)\n    x7 = fork(equality, identity, x6)\n    x8 =223(TEN)\n    x9 = branch(x8, initset, x5)\n    x10 = insert(x9, I)\n    x11 = branch(x7, width, height)\n    x12 = apply(x11, x10)\n    x13 = difference(x10, x12)\n    x14 = mapply(x4, x13)\n    x15 = paint(I, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = apply(toindices, x16)\n    x18 = fork(either, x15, x17)\n    x19 = x18(x1)\n    O = paint(x15, x19)\n    return O"], [1.1, "def solve_2ed6b6dd(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = rot270(I)\n    x2 = height(x1)\n    x3 = rot90(I)\n    x4 = matcher(size, ZERO)\n    x5 = rbind(ofcolor, ZERO)\n    x6 = compose(flip, x4)\n    x7 = extract(x3, x6)\n    x8 = outbox(x7)\n    x9 = width(x1)\n    x10 = ofcolor(x, x9)\n    x11 = leftmost(x10)\n    x12 = ZERO(x11)\n    x13 = toobject(x12, x1)\n    x14 = color(x13)\n    x15 =14(x13)\n    x16 = shift(x8, x9)\n    x17 = shift(x8, x14)\n    x18 = paint(x15, x16)\n    O = paint(x18, x17)\n    return O"]], "3490cc26": [[0.08173484697705038, "def solve_b0544453(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.08173484697705038, "def solve_0c27658e(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_24218d5b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_0af3fcba(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_2b217e60(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.08173484697705038, "def solve_6d15cfe0(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, THREE, x3)\n    return O"], [0.08173484697705038, "def solve_253fda4b(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = prapply(connect, x2, x2)\n    x4 = rbind(greater, ONE)\n    x5 = compose(x4, size)\n    x6 = sfilter(x3, x5)\n    x7 = fork(either, vline, hline)\n    x8 = mfilter(x6, x7)\n    x9 = fill(I, THREE, x8)\n    x10 = leastcolor(I)\n    O = fill(x9, x10, x2)\n    return O"], [0.08173484697705038, "def solve_ab4ac2ec(I):\n    x1 = initset(ORIGIN)\n    x2 = mostcolor(I)\n    x3 = recolor(x2, x1)\n    x4 = upscale(x3, TWO)\n    x5 = occurrences(I, x4)\n    x6 = lbind(shift, x4)\n    x7 = mapply(x6, x5)\n    O = fill(I, x2, x7)\n    return O"], [0.08173484697705038, "def solve_bcf60a28(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.08173484697705038, "def solve_b257b053(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, FIVE)\n    x3 = compose(backdrop, inbox)\n    x4 = mapply(x3, x2)\n    O = fill(I, TWO, x4)\n    return O"], [0.08173484697705038, "def solve_b85676d0(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = lbind(recolor, EIGHT)\n    x4 = rbind(ofcolor, x1)\n    x5 = chain(x3, backdrop, x4)\n    x6 = fork(paint, identity, x5)\n    x7 = height(I)\n    x8 = vsplit(I, x7)\n    x9 = mapply(x6, x8)\n    x10 = ofcolor(x9, EIGHT)\n    x11 = dmirror(I)\n    x12 = width(I)\n    x13 = vsplit(x11, x12)\n    x14 = mapply(x6, x13)\n    x15 = dmirror(x14)\n    x16 = ofcolor(x15, EIGHT)\n    x17 = combine(x10, x16)\n    x18 = difference(x17, x2)\n    O = fill(I, EIGHT, x18)\n    return O"], [0.08173484697705038, "def solve_3a9385f7(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.08173484697705038, "def solve_550ef4ec(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_7f22adbe(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.08173484697705038, "def solve_a4c6b97f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.08173484697705038, "def solve_106facec(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, F, F, T)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.08173484697705038, "def solve_3ab62eee(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.08173484697705038, "def solve_c2b166bd(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = subgrid(x2, I)\n    return O"], [0.08173484697705038, "def solve_4e13b567(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(objects, F)\n    x4 = rbind(x3, F)\n    x5 = rbind(x4, T)\n    x6 = lbind(canvas, x1)\n    x7 = compose(x6, shape)\n    x8 = fork(paint, x7, normalize)\n    x9 = compose(x5, x8)\n    x10 = fork(colorfilter, x9, color)\n    x11 = rbind(shift, RIGHT)\n    x12 = rbind(argmax, rightmost)\n    x13 = compose(x12, x10)\n    x14 = fork(remove, x13, x10)\n    x15 = chain(x11, merge, x14)\n    x16 = rbind(argmax, rightmost)\n    x17 = compose(x16, x10)\n    x18 = fork(combine, x17, x15)\n    x19 = fork(shift, x18, ulcorner)\n    x20 = merge(x2)\n    x21 = fill(I, x1, x20)\n    x22 = mapply(x19, x2)\n    O = paint(x21, x22)\n    return O"], [0.08318632736744225, "def solve_0562bfae(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_f75f3c35(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_00fa8610(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_f7794dd4(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_f497ff22(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x7 = rbind(shoot, UNITY)\n    x8 = rbind(shoot, NEG_UNITY)\n    x9 = fork(combine, x7, x8)\n    x10 = fork(combine, x5, x9)\n    x11 = index(I, x2)\n    x12 = x10(x2)\n    O = fill(I, x11, x12)\n    return O"], [0.08318632736744225, "def solve_c582b6d3(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_45400bf2(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_9466a878(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_5b9e2bb1(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_ff584b8b(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_45da82ec(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_11520515(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork( combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08468134728045976, "def solve_27cae5c9(I):\n    x1 = objects(I, T, F, F)\n    x2 = sizefilter(x1, ONE)\n    x3 = compose(neighbors, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x2)\n    x6 = paint(I, x5)\n    x7 = replace(x6, ONE, SIX)\n    x8 = replace(x7, TWO, SEVEN)\n    x9 = replace(x8, THREE, EIGHT)\n    O = replace(x9, FOUR, NINE)\n    return O"], [0.09977289344345569, "def solve_eb81c715(I):\n    O = switch(I, EIGHT, TWO)\n    return O"], [0.12098612632347573, "def solve_8d1b1cb9(I):\n    x1 = vmirror(I)\n    x2 = fgpartition(x1)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = compose(double, halve)\n    x6 = fork(equality, identity, x5)\n    x7 = compose(x6, last)\n    x8 = sfilter(x4, x7)\n    x9 = fill(x1, THREE, x8)\n    O = vmirror(x9)\n    return O"], [0.12483891379991693, "def solve_fc9bef9f(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, TWO)\n    x3 = colorfilter(x1, ONE)\n    x4 = lbind(recolor, TWO)\n    x5 = rbind(shoot, UNITY)\n    x6 = chain(x4, x5, lrcorner)\n    x7 = lbind(recolor, ONE)\n    x8 = rbind(shoot, NEG_UNITY)\n    x9 = chain(x7, x8, ulcorner)\n    x10 = mapply(x6, x2)\n    x11 = mapply(x9, x3)\n    x12 = combine(x10, x11)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_f8cb861b(I):\n    x1 = objects(I, T, F, T)\n    x2 = compose(backdrop, inbox)\n    x3 = mapply(x2, x1)\n    O = fill(I, EIGHT, x3)\n    return O"], [0.13468134728045977, "def solve_d66e843d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_42d965a8(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_f6e9e1f3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_b3052bd5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_60276051(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13468134728045977, "def solve_c2251fc1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_95310504(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_334b0c94(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_5424ab54(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_4a44dff8(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13811265931525568, "def solve_fb4a3764(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, center)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.14098233381512817, "def solve_20e19bdd(I):\n    x1 = leastcolor(I)\n    x2 = mostcolor(I)\n    x3 = ofcolor(I, x1)\n    x4 = replace(I, x1, x2)\n    x5 = mapply(dneighbors, x3)\n    x6 = mapply(ineighbors, x3)\n    x7 = fill(x4, ONE, x5)\n    O = fill(x7, x1, x6)\n    return O"], [0.14633502634498852, "def solve_478c19c1(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.14633502634498852, "def solve_528704f2(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.15201967101125663, "def solve_b6b6ff95(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = argmax(x1, x2)\n    x5 = remove(x3, x1)\n    x6 = other(x5, x4)\n    x7 = subgrid(x6, I)\n    x8 = frontiers(x7)\n    x9 = sfilter(x8, hline)\n    x10 = size(x9)\n    x11 = positive(x10)\n    x12 = branch(x11, dmirror, identity)\n    x13 = x12(I)\n    x14 = color(x6)\n    x15 = ofcolor(x13, x14)\n    x16 = subgrid(x15, x13)\n    x17 = trim(x16)\n    x18 = lefthalf(x17)\n    x19 = vmirror(x18)\n    x20 = asobject(x19)\n    x21 = righthalf(x17)\n    x22 = vmirror(x21)\n    x23 = asobject(x22)\n    x24 = color(x4)\n    x25 = inbox(x15)\n    x26 = backdrop(x25)\n    x27 = fill(x13, x24, x26)\n    x28 = urcorner(x15)\n    x29 = add(x28, UNITY)\n    x30 = shift(x23, x29)\n    x31 = ulcorner(x15)\n    x32 = width(x20)\n    x33 = invert(x32)\n    x34 = tojvec(x33)\n    x35 = add(DOWN, x34)\n    x36 = add(x31, x35)\n    x37 = shift(x20, x36)\n    x38 = combine(x30, x37)\n    x39 = paint(x27, x38)\n    O = x12(x39)\n    return O"], [0.167039853263387, "def solve_d51258c7(I):\n    O = switch(I, FIVE, EIGHT)\n    return O"], [0.168463732206312, "def solve_d0d2f0b1(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.168463732206312, "def solve_29872a4a(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.168463732206312, "def solve_fef5ae9a(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.168463732206312, "def solve_2ece6a78(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.168463732206312, "def solve_f86b12a1(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.1697728934434557, "def solve_121f3043(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.1697728934434557, "def solve_54eb9b0f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.1697728934434557, "def solve_87d2e36c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.17098233381512817, "def solve_b3a43dd6(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.17676372824140774, "def solve_69282a7c(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = astuple(x1, ONE)\n    x8 = astuple(ONE, x2)\n    x9 = decrement(x1)\n    x10 = decrement(x2)\n    x11 = toivec(x10)\n    x12 = tojvec(x9)\n    x13 = crop(I, x11, x8)\n    x14 = crop(I, x12, x7)\n    x15 = asobject(x14)\n    x16 = asobject(x13)\n    x17 = vperiod(x15)\n    x18 = hperiod(x16)\n    x19 = astuple(x17, x18)\n    x20 = lbind(multiply, x19)\n    x21 = neighbors(ORIGIN)\n    x22 = mapply(neighbors, x21)\n    x23 = apply(x20, x22)\n    x24 = lbind(shift, x6)\n    x25 = mapply(x24, x23)\n    O = paint(I, x25)\n    return O"], [0.17676372824140774, "def solve_eb241a5b(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = astuple(x1, ONE)\n    x8 = astuple(ONE, x2)\n    x9 = decrement(x1)\n    x10 = decrement(x2)\n    x11 = toivec(x10)\n    x12 = tojvec(x9)\n    x13 = crop(I, x11, x8)\n    x14 = crop(I, x12, x7)\n    x15 = asobject(x14)\n    x16 = asobject(x13)\n    x17 = vperiod(x15)\n    x18 = hperiod(x16)\n    x19 = astuple(x17, x18)\n    x20 = lbind(multiply, x19)\n    x21 = neighbors(ORIGIN)\n    x22 = mapply(neighbors, x21)\n    x23 = apply(x20, x22)\n    x24 = lbind(shift, x6)\n    x25 = mapply(x24, x23)\n    O = paint(I, x25)\n    return O"], [0.1816725678756399, "def solve_b6ebc576(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = height(x2)\n    x4 = height(I)\n    x5 = interval(ZERO, x4, x3)\n    x6 = lbind(shift, x2)\n    x7 = compose(x6, toivec)\n    x8 = compose(x7, invert)\n    x9 = fork(combine, x7, x8)\n    x10 = mapply(x9, x5)\n    O = paint(I, x10)\n    return O"], [0.19326297813860446, "def solve_a9f96576(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.19326297813860446, "def solve_a21dad91(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.19986952115995066, "def solve_31038701(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.19986952115995066, "def solve_f9ccb293(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.19986952115995066, "def solve_a72b0dc1(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.19986952115995066, "def solve_3641dfe6(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.20252763457609518, "def solve_256aaa98(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.20252763457609518, "def solve_fabbfa31(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.20252763457609518, "def solve_ff55b20e(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.20252763457609518, "def solve_facf1b7e(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.20252763457609518, "def solve_dfcaedb7(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.20977289344345568, "def solve_b64861e5(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_95181f6b(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_509b225a(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = chain(palette, trim, x2)\n    x4 = lbind(contained, THREE)\n    x5 = chain(flip, x4, x3)\n    x6 = mfilter(x1, x5)\n    O = fill(I, FOUR, x6)\n    return O"], [0.20977289344345568, "def solve_735b8a84(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_003b87bb(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_41d498ec(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_aa5d6398(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(add, height, width)\n    x3 = compose(decrement, x2)\n    x4 = fork(equality, x3, size)\n    x5 = fork(difference, toindices, box)\n    x6 = compose(size, x5)\n    x7 = matcher(x6, ZERO)\n    x8 = sfilter(x1, x4)\n    x9 = difference(x1, x8)\n    x10 = sfilter(x9, x7)\n    x11 = merge(x1)\n    x12 = fill(I, TWO, x11)\n    x13 = merge(x8)\n    x14 = fill(x12, ONE, x13)\n    x15 = merge(x10)\n    O = fill(x14, SIX, x15)\n    return O"], [0.20977289344345568, "def solve_397c9726(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_85b95619(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.2164395601101224, "def solve_f0b995f3(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.22208695827893984, "def solve_5361a62a(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.22284967714703272, "def solve_bececf5c(I):\n    x1 = asobject(I)\n    x2 = shape(I)\n    x3 = decrement(x2)\n    x4 = index(I, x3)\n    x5 = double(x2)\n    x6 = canvas(x4, x5)\n    x7 = paint(x6, x1)\n    x8 = objects(x7, F, F, T)\n    x9 = first(x8)\n    x10 = shift(x9, LEFT)\n    x11 = vperiod(x10)\n    x12 = hperiod(x10)\n    x13 = neighbors(ORIGIN)\n    x14 = lbind(mapply, neighbors)\n    x15 = power(x14, TWO)\n    x16 = x15(x13)\n    x17 = astuple(x11, x12)\n    x18 = lbind(multiply, x17)\n    x19 = apply(x18, x16)\n    x20 = lbind(shift, x10)\n    x21 = mapply(x20, x19)\n    O = paint(I, x21)\n    return O"], [0.24440527968330814, "def solve_7371de38(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.24440527968330814, "def solve_73dd08fd(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, x1, I)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.2464702263154948, "def solve_067ac743(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = rbind(colorcount, ZERO)\n    x3 = lbind(toobject, x1)\n    x4 = compose(x2, x3)\n    x5 = vmirror(I)\n    x6 = hmirror(I)\n    x7 = astuple(x5, x6)\n    x8 = argmin(x7, x4)\n    O = subgrid(x1, x8)\n    return O"], [0.2473346261417366, "def solve_3c989a69(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.253858380731812, "def solve_e73b6a09(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, last)\n    x5 = fork(recolor, first, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [0.25543417203130403, "def solve_a9048e75(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.25586824336349373, "def solve_b684326d(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.25586824336349373, "def solve_1e0a117f(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.2609101882868059, "def solve_d524434e(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot180(x3)\n    return O"], [0.2730213103674518, "def solve_ed253900(I):\n    O = rot180(I)\n    return O"], [0.2730213103674518, "def solve_edc1c9f4(I):\n    O = rot180(I)\n    return O"], [0.2735505434325868, "def solve_296383e7(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.2735505434325868, "def solve_122e3247(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.2735505434325868, "def solve_52ed5e42(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.2781097602204145, "def solve_e5047fc3(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.2781097602204145, "def solve_d1e1fb82(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.28046050168233005, "def solve_b7ff2750(I):\n    x1 = objects(I, T, F, T)\n    x2 = palette(I)\n    x3 = mostcolor(I)\n    x4 = remove(x3, x2)\n    x5 = lbind(other, x4)\n    x6 = compose(x5, color)\n    x7 = fork(recolor, x6, outbox)\n    x8 = mapply(x7, x1)\n    x9 = mapply(toindices, x1)\n    x10 = box(x9)\n    x11 = difference(x10, x9)\n    x12 = lbind(argmin, x9)\n    x13 = rbind(compose, initset)\n    x14 = lbind(rbind, manhattan)\n    x15 = chain(x13, x14, initset)\n    x16 = chain(initset, x12, x15)\n    x17 = fork(manhattan, initset, x16)\n    x18 = compose(even, x17)\n    x19 = sfilter(x11, x18)\n    x20 = paint(I, x8)\n    O = fill(x20, FIVE, x19)\n    return O"], [0.28257229929506134, "def solve_91fadd8d(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.28257229929506134, "def solve_75cf0440(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.28257229929506134, "def solve_5c8463d7(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.28257229929506134, "def solve_6f51c6e6(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.28257229929506134, "def solve_6f8cc053(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.28257229929506134, "def solve_6c96af8c(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.28257229929506134, "def solve_22e8cd1b(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.28257229929506134, "def solve_834dcd23(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.28257229929506134, "def solve_6f0d7949(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.28257229929506134, "def solve_d0c0cc4f(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.28271352439090625, "def solve_49e20542(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.28271352439090625, "def solve_9531120e(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.28271352439090625, "def solve_954958bb(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.28271352439090625, "def solve_c0117211(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x19 = shift(x6, RIGHT)\n    x20 = paint(x8, x19)\n    x21 = shift(x6, UP)\n    x22 = paint(x20, x21)\n    x23 = shift(x6, DOWN)\n    x24 = paint(x22, x23)\n    O = paint(x24, x6)\n    return O"], [0.28271352439090625, "def solve_5963fa73(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.28271352439090625, "def solve_13e624fc(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.28271352439090625, "def solve_f788d2fb(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.2912996173225872, "def solve_19b78d0e(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_e3525e06(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_234d92b1(I):\n    x1 = dmirror(I)\n    x2 = merge(x1)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_29b70b6f(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_7b1ddecf(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_f2c355ba(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_2b3a5f0c(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_32ba8af4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.31572456964802403, "def solve_dfae6211(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = objects(x3, T, F, T)\n    x5 = merge(x4)\n    O = paint(x1, x5)\n    return O"], [0.3315011728051802, "def solve_c8371624(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.3315011728051802, "def solve_b3613949(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.3315011728051802, "def solve_8f288431(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.3315011728051802, "def solve_d8a8aaf0(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.3315011728051802, "def solve_e90e7f75(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.3315011728051802, "def solve_fe864351(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.3315011728051802, "def solve_9f2c215d(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.3404843869423544, "def solve_4fbc27bb(I):\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = merge(x1)\n    x7 = color(x6)\n    x8 = shape(I)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(I, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmin(x11, numcolors)\n    x13 = normalize(x12)\n    x14 = toindices(x13)\n    x15 = increment(x4)\n    x16 = increment(x15)\n    x17 = increment(x5)\n    x18 = increment(x17)\n    x19 = astuple(x16, x18)\n    x20 = lbind(shift, x14)\n    x21 = rbind(multiply, x19)\n    x22 = chain(x20, x21, last)\n    x23 = fork(recolor, first, x22)\n    x24 = normalize(x12)\n    x25 = mapply(x23, x24)\n    O = paint(x9, x25)\n    return O"], [0.36791347770439387, "def solve_e3124d15(I):\n    O = dmirror(I)\n    return O"], [0.36791347770439387, "def solve_c25ee63a(I):\n    O = dmirror(I)\n    return O"], [0.36791347770439387, "def solve_6940f0a4(I):\n    O = dmirror(I)\n    return O"], [0.36791347770439387, "def solve_71c903a3(I):\n    O = dmirror(I)\n    return O"], [0.3702111384573228, "def solve_07926c0a(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = astuple(SIX, THREE)\n    x6 = astuple(FOUR, EIGHT)\n    x7 = astuple(ONE, TWO)\n    x8 = initset(x5)\n    x9 = insert(x6, x8)\n    x10 = insert(x7, x9)\n    x11 = mapply(x4, x10)\n    O = paint(I, x11)\n    return O"], [0.3702111384573228, "def solve_9ce7a383(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = astuple(SIX, THREE)\n    x6 = astuple(FOUR, EIGHT)\n    x7 = astuple(ONE, TWO)\n    x8 = initset(x5)\n    x9 = insert(x6, x8)\n    x10 = insert(x7, x9)\n    x11 = mapply(x4, x10)\n    O = paint(I, x11)\n    return O"], [0.3702111384573228, "def solve_923575f8(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = astuple(SIX, THREE)\n    x6 = astuple(FOUR, EIGHT)\n    x7 = astuple(ONE, TWO)\n    x8 = initset(x5)\n    x9 = insert(x6, x8)\n    x10 = insert(x7, x9)\n    x11 = mapply(x4, x10)\n    O = paint(I, x11)\n    return O"], [0.3717660024843291, "def solve_ecb54769(I):\n    O = rot90(I)\n    return O"], [0.37804512752039743, "def solve_01d8ab5d(I):\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.3807233128441688, "def solve_d19cb2a0(I):\n    O = rot270(I)\n    return O"], [0.3807233128441688, "def solve_17c0ebcc(I):\n    O = rot270(I)\n    return O"], [0.3807233128441688, "def solve_edec0ea8(I):\n    O = rot270(I)\n    return O"], [0.38969952784619355, "def solve_4ce1ebb8(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.39714205122608487, "def solve_53b8c701(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = width(I)\n    x5 = astuple(TEN, x4)\n    x6 = canvas(x3, x5)\n    x7 = interval(ONE, SEVEN, ONE)\n    x8 = invert(TEN)\n    x9 = interval(x8, TEN, ONE)\n    x10 = product(x7, x9)\n    x11 = remove(ORIGIN, x10)\n    x12 = lbind(intersection, x2)\n    x13 = lbind(shift, x2)\n    x14 = compose(x12, x13)\n    x15 = toindices(x2)\n    x16 = lbind(intersection, x15)\n    x17 = lbind(shift, x15)\n    x18 = compose(x16, x17)\n    x19 = compose(size, x14)\n    x20 = compose(size, x18)\n    x21 = fork(equality, x19, x20)\n    x22 = chain(positive, size, x14)\n    x23 = fork(both, x21, x22)\n    x24 = sfilter(x11, x23)\n    x25 = compose(size, x14)\n    x26 = valmax(x24, x25)\n    x27 = compose(size, x14)\n    x28 = matcher(x27, x26)\n    x29 = sfilter(x24, x28)\n    x30 = fork(multiply, first, last)\n    x31 = argmax(x29, x30)\n    x32 = interval(ZERO, TEN, ONE)\n    x33 = lbind(shift, x2)\n    x34 = lbind(multiply, x31)\n    x35 = compose(x33, x34)\n    x36 = mapply(x35, x32)\n    O = paint(x6, x36)\n    return O"], [0.39935003301945604, "def solve_c3dfde69(I):\n    x1 = asindices(I)\n    x2 = dmirror(I)\n    x3 = invert(NINE)\n    x4 = papply(pair, I, x2)\n    x5 = lbind(apply, maximum)\n    x6 = apply(x5, x4)\n    x7 = ofcolor(x6, ZERO)\n    x8 = difference(x1, x7)\n    x9 = toobject(x8, x6)\n    x10 = interval(x3, NINE, ONE)\n    x11 = interval(NINE, x3, NEG_ONE)\n    x12 = pair(x10, x11)\n    x13 = lbind(shift, x9)\n    x14 = mapply(x13, x12)\n    O = paint(x6, x14)\n    return O"], [0.3997728934434557, "def solve_77de7638(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.3997728934434557, "def solve_1518ceaa(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.3997728934434557, "def solve_1177e324(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.4121180954681841, "def solve_7e389fdd(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.4121180954681841, "def solve_f6ff28da(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.4221658498666133, "def solve_c1c595ec(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.422860611640019, "def solve_0d28e489(I):\n    x1 = index(I, ORIGIN)\n    x2 = width(I)\n    x3 = halve(x2)\n    x4 = astuple(x3, x2)\n    x5 = canvas(x1, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = compose(x6, last)\n    x8 = fork(recolor, first, x7)\n    x9 = asobject(I)\n    x10 = mapply(x8, x9)\n    O = paint(x5, x10)\n    return O"], [0.44421029663584294, "def solve_5cf51ca1(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_6de94bc4(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_140a88ad(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_63874e74(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_6f15edbf(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.469992675486797, "def solve_f3bc96b5(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, vline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = combine(x15, x16)\n    x18 = intersection(x15, x16)\n    x19 = difference(x17, x18)\n    O = fill(x14, THREE, x19)\n    return O"], [0.477399406494354, "def solve_7b76dcc3(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = mostcolor(I)\n    O = replace(x3, x4, ZERO)\n    return O"], [0.477399406494354, "def solve_b3740c24(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = mostcolor(I)\n    O = replace(x3, x4, ZERO)\n    return O"], [0.5235791174015115, "def solve_e2894090(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5235791174015115, "def solve_f328e5a3(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5235791174015115, "def solve_1bfa5f6f(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5235791174015115, "def solve_074019f0(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5235791174015115, "def solve_2362b36a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5235791174015115, "def solve_a678d957(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = lefthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = righthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5235791174015115, "def solve_1a1b6825(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5311442307692307, "def solve_6bf26ddb(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = prapply(connect, x1, x1)\n    x3 = rbind(greater, ONE)\n    x4 = compose(x3, size)\n    x5 = sfilter(x2, x4)\n    x6 = fork(either, vline, hline)\n    x7 = mfilter(x5, x6)\n    x8 = fill(I, THREE, x7)\n    O = fill(x8, EIGHT, x1)\n    return O"], [0.5336172007998716, "def solve_9608d62b(I):\n    x1 = hsplit(I, THREE)\n    x2 = first(x1)\n    x3 = remove(x2, x1)\n    x4 = first(x3)\n    x5 = last(x3)\n    x6 = ofcolor(x4, NINE)\n    x7 = ofcolor(x2, FOUR)\n    x8 = fill(x5, NINE, x6)\n    O = fill(x8, FOUR, x7)\n    return O"], [0.5641693586048402, "def solve_38b2c1c4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.5648229277707709, "def solve_f0cd5bf1(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = subgrid(x20, I)\n    x22 = switch(x21, x18, x19)\n    x23 = replace(x22, x18, x4)\n    x24 = lbind(downscale, x23)\n    x25 = fork(upscale, x24, identity)\n    x26 = matcher(x25, x23)\n    x27 = shape(x23)\n    x28 = maximum(x27)\n    x29 = interval(ONE, x28, ONE)\n    x30 = sfilter(x29, x26)\n    x31 = maximum(x30)\n    O = downscale(x23, x31)\n    return O"], [0.5648229277707709, "def solve_3680622d(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = subgrid(x20, I)\n    x22 = switch(x21, x18, x19)\n    x23 = replace(x22, x18, x4)\n    x24 = lbind(downscale, x23)\n    x25 = fork(upscale, x24, identity)\n    x26 = matcher(x25, x23)\n    x27 = shape(x23)\n    x28 = maximum(x27)\n    x29 = interval(ONE, x28, ONE)\n    x30 = sfilter(x29, x26)\n    x31 = maximum(x30)\n    O = downscale(x23, x31)\n    return O"], [0.5759273085746962, "def solve_733ae75f(I):\n    x1 = trim(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(x2)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(x2)\n    x6 = lefthalf(x5)\n    x7 = bottomhalf(x2)\n    x8 = righthalf(x7)\n    x9 = palette(x4)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x6)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(I)\n    x18 = halve(x17)\n    x19 = canvas(x16, x18)\n    x20 = matcher(first, x16)\n    x21 = compose(flip, x20)\n    x22 = rbind(sfilter, x21)\n    x23 = compose(x22, asobject)\n    x24 = x23(x2)\n    x25 = x23(x2)\n    x26 = x23(x5)\n    x27 = x23(x6)\n    x28 = paint(x19, x27)\n    x29 = paint(x28, x26)\n    x30 = paint(x29, x25)\n    O = paint(x30, x24)\n    return O"], [0.6014849716551933, "def solve_4822fe14(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = rbind(equality, x4)\n    x7 = argmin(x5, x6)\n    x8 = asindices(I)\n    x9 = ofcolor(I, x4)\n    x10 = difference(x8, x9)\n    x11 = fill(I, x7, x10)\n    x12 = frontiers(x11)\n    x13 = sfilter(x12, vline)\n    x14 = difference(x12, x13)\n    x15 = astuple(x14, x13)\n    x16 = apply(size, x15)\n    x17 = increment(x16)\n    O = canvas(x4, x17)\n    return O"], [0.6014849716551933, "def solve_90bda675(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = rbind(equality, x4)\n    x7 = argmin(x5, x6)\n    x8 = asindices(I)\n    x9 = ofcolor(I, x4)\n    x10 = difference(x8, x9)\n    x11 = fill(I, x7, x10)\n    x12 = frontiers(x11)\n    x13 = sfilter(x12, vline)\n    x14 = difference(x12, x13)\n    x15 = astuple(x14, x13)\n    x16 = apply(size, x15)\n    x17 = increment(x16)\n    O = canvas(x4, x17)\n    return O"], [0.641276367065674, "def solve_73b121be(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.641276367065674, "def solve_73d1bb26(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.6460408141864922, "def solve_11ed16f3(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.6460408141864922, "def solve_e34220f7(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6460408141864922, "def solve_64f482e8(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6460408141864922, "def solve_789869e9(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6460408141864922, "def solve_3d07e1c0(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6947586846156356, "def solve_8ac5361d(I):\n    x1 = crop(I, ORIGIN, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.6947586846156356, "def solve_5e58c2dd(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.6968040052377024, "def solve_4fc70cae(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.6968040052377024, "def solve_b8c8f475(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.7540848163604722, "def solve_07e505e0(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [0.7825046979697893, "def solve_79d908ce(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = objects(I, T, F, T)\n    x5 = totuple(x4)\n    x6 = apply(color, x5)\n    x7 = lbind(sfilter, x6)\n    x8 = lbind(matcher, identity)\n    x9 = chain(size, x7, x8)\n    x10 = valmax(x3, x9)\n    x11 = matcher(x9, x10)\n    x12 = sfilter(x3, x11)\n    x13 = lbind(colorcount, I)\n    x14 = argmin(x12, x13)\n    x15 = ofcolor(I, x14)\n    x16 = recolor(x14, x15)\n    x17 = apply(initset, x16)\n    x18 = remove(x16, x1)\n    x19 = lbind(argmin, x17)\n    x20 = lbind(rbind, manhattan)\n    x21 = compose(x19, x20)\n    x22 = fork(combine, identity, x21)\n    x23 = apply(x22, x18)\n    x24 = matcher(first, x14)\n    x25 = rbind(sfilter, x24)\n    x26 = chain(invert, ulcorner, x25)\n    x27 = fork(shift, identity, x26)\n    x28 = mapply(x27, x23)\n    x29 = normalize(x28)\n    x30 = shape(x29)\n    x31 = canvas(ZERO, x30)\n    O = paint(x31, x29)\n    return O"], [0.7915392052312495, "def solve_e38a93e3(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_8b29b504(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_932f29d0(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_39f43a80(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_d8c3e6fd(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_6f204069(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_92771b2e(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_2969f457(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_8beb79b4(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_9d28e95c(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_0f28f83b(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_35a05590(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_80c8d9f2(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_133c5f5f(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_8b3c0e7e(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_9e842b8d(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_2c5f438a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_9d7b5f71(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_0e20c981(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_0e0151cf(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_2e6aabc3(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_859d01f3(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.8582958787484758, "def solve_2fdca11c(I):\n    x1 = trim(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.8585740049506482, "def solve_3876b872(I):\n    x1 = palette(I)\n    x2 = remove(ONE, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = canvas(x4, THREE_BY_THREE)\n    x6 = colorcount(I, ONE)\n    x7 = decrement(x6)\n    x8 = tojvec(x7)\n    x9 = connect(ORIGIN, x8)\n    x10 = fill(x5, TWO, x9)\n    x11 = initset(UNITY)\n    x12 = equality(x6, FOUR)\n    x13 = branch(x12, x11, x9)\n    O = fill(x10, TWO, x13)\n    return O"], [0.868349128540305, "def solve_8828c713(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = objects(x1, F, T, T)\n    x3 = first(x2)\n    x4 = vline(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(x1)\n    x7 = objects(x6, T, F, T)\n    x8 = order(x7, uppermost)\n    x9 = apply(color, x8)\n    x10 = dedupe(x9)\n    x11 = size(x10)\n    x12 = rbind(repeat, x11)\n    x13 = apply(x12, x10)\n    O = x5(x13)\n    return O"], [0.9001514323097631, "def solve_d0dce391(I):\n    x1 = palette(I)\n    x2 = contained(ONE, x1)\n    x3 = contained(TWO, x1)\n    x4 = branch(x2, UNITY, TWO_BY_TWO)\n    x5 = branch(x3, RIGHT, x4)\n    x6 = fork(combine, vfrontier, hfrontier)\n    x7 = x6(x5)\n    x8 = canvas(ZERO, THREE_BY_THREE)\n    O = fill(x8, FIVE, x7)\n    return O"], [0.9081403808721191, "def solve_5eca2ef1(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_b63bd108(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_4bb7f7d8(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_a5bd8a1b(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_5ecc5d00(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_50edfa6d(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_dc3eba65(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_de6ada43(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9182807290875006, "def solve_1739f3e6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_8f188ec6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_7f2902c5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_112c94e5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, F, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.9182807290875006, "def solve_144aadf8(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_c3395140(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_fd100e8c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_ccf8472b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_1164ac75(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_e4d5d1af(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_5f203451(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9183491285403049, "def solve_ea8ba0d2(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.9183491285403049, "def solve_455e7882(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.9183491285403049, "def solve_594890e3(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.9183491285403049, "def solve_133e65d4(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.9183491285403049, "def solve_19345a78(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.95, "def solve_d6ac3668(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.95, "def solve_a1072c08(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14,x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.95, "def solve_67bde86d(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.95, "def solve_d735ceac(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = color(x3)\n    x5 = remove(ZERO, x1)\n    x6 = other(x5, x4)\n    O = canvas(x6, UNITY)\n    return O"], [0.95, "def solve_674435c5(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.95, "def solve_bf1e8789(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.95, "def solve_55f079e7(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.95, "def solve_d86fc22a(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.95, "def solve_ac582031(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [1.0, "def solve_94486b7e(I):\n    O = subgrid(x1, I)\n    return O"], [1.0, "def solve_1dbefc2e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = shape(I)\n    x13 = canvas(x11, x12)\n    x14 = hconcat(I, x13)\n    x15 = objects(x14, F, F, T)\n    x16 = argmin(x15, numcolors)\n    x17 = ofcolor(x16, x7)\n    x18 = mapply(x17, x17)\n    O = fill(x18, x7, x18)\n    return O"], [1.0, "def solve_0d42538d(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(objects, F)\n    x4 = compose(x3, palette)\n    x5 = fork(recolor, x4, identity)\n    x6 = apply(x5, x2)\n    x7 = order(x6, identity)\n    x8 = last(x7)\n    x9 = remove(x8, x7)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = mapply(neighbors, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = ofcolor(I, x11)\n    x17 = mapply(neighbors, x16)\n    x18 = toobject(x17, I)\n    x19 = mostcolor(x18)\n    x20 = rbind(shoot, UNITY)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = fork(combine, x20, x21)\n    x23 = rbind(shoot, UP_RIGHT)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = fork(combine, x23, x24)\n    x26 = fork(combine, x22, x25)\n    x27 = height(I)\n    x28 = astuple(x27, x)\n    x29 = canvas(x11, x28)\n    x30 = fill(x29, x10, x21)\n    x31 = ofcolor(I, x10)\n    x32 = colorfilter(x31, x11)\n    x33 = rbind(adjacent, x32)\n    x34 = mfilter(x32, x33)\n    x35 = mapply(x24, x34)\n    O = fill(x30, ONE, x35)\n    return O"], [1.0, "def solve_9dc45f5a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_f198e5f0(I):\n    x1 = height(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = width(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [1.0, "def solve_d6717fa8(I):\n    x1 = mostcolor(I)\n    x2 =flip(I, x1)\n    x3 = compose(dmirror, dedupe)\n    x4 = fork(combine, x3, x2)\n    x5 = apply(x4, x2)\n    x6 = merge(x5)\n    x7 = lbind(shift, x6)\n    x8 = mapply(x7, x5)\n    O = fill(I, x1, x8)\n    return O"], [1.0, "def solve_a3c6dd54(I):\n    x1 = ofcolor(I, TWO)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = asindices(x4)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = intersection(x5, x6)\n    x8 = fill(x4, EIGHT, x7)\n    x9 = hmirror(x8)\n    x10 = vmirror(x9)\n    x11 = fgpartition(x4)\n    x12 = merge(x11)\n    x13 = paint(x5, x12)\n    x14 = subgrid(x1, x13)\n    O = x3(x14)\n    return O"], [1.0, "def solve_69c8ab9f(I):\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = astuple(x2, x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = rbind(shoot, UP)\n    x8 = mapply(x7, x3)\n    x9 = combine(x6, x8)\n    x10 = fill(x6, ONE, x9)\n    x11 = hmirror(x10)\n    O = vconcat(x110, x11)\n    return O"], [1.0, "def solve_57cab5d4(I):\n    x1 = objects(I, T, F, T)\n    x2 = valmax(x1, size)\n    x3 = equality(x2, ONE)\n    x4 = equality(x2, TWO)\n    x5 = branch(x3, TWO, ONE)\n    x6 = branch(x4, THREE, x5)\n    x7 = branch(x4, SEVEN, x6)\n    O = canvas(x7, UNITY)\n    return O"], [1.0, "def solve_7fe948e3(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_611dcf26(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = size(x4)\n    x6 = width(I)\n    x7 = multiply(x6, x5)\n    x8 = multiply(UNITY, x7)\n    x9 = canvas(ZERO, x8)\n    x10 = multiply(x6, x5)\n    x11 = decrement(x10)\n    x12 = lbind(astuple, x11)\n    x13 = rbind(shoot, UP_RIGHT)\n    x14 = compose(last, last)\n    x15 = chain(x13, x12, x14)\n    x16 = fork(recolor, first, x15)\n    x17 = mapply(x16, x4)\n    O = paint(x9, x17)\n    return O"], [1.0, "def solve_bd4649c3(I):\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = rbind(shoot, UP)\n    x9 = mapply(x8, x7)\n    O = fill(I, x10, x9)\n    return O"], [1.0, "def solve_3b02d314(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_0bb5ee89(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_08b66da5(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [1.0, "def solve_36209a08(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = normalize(x2)\n    x4 = ulcorner(x2)\n    x5 = subtract(x4, x2)\n    x6 = shape(x2)\n    x7 = add(x6, TWO_BY_ZERO)\n    O = crop(I, x5, x7)\n    return O"], [1.0, "def solve_6d5a5b9e(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_c1346812(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [1.0, "def solve_63df7b8e(I):\n    x1 = asobject(I)\n    x2 = frontiers(I)\n    x3 = merge(x2)\n    x4 = difference(x1, x3)\n    x5 = mostcolor(x4)\n    x6 = objects(I, T, F, F)\n    x7 = color(x3)\n    x8 = matcher(color, x7)\n    x9 = matcher(color, x5)\n    x10 = fork(astuple, x8, x9)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x6, x11)\n    x13 = merge(x12)\n    x14 = palette(x13)\n    x15 = lbind(mfilter, x12)\n    x16 = lbind(matcher, color)\n    x17 = compose(x15, x16)\n    x18 = apply(x17, x14)\n    x19 = fork(either, vline, hline)\n    x20 = lbind(prapply, connect)\n    x21 = fork(x20, identity, identity)\n    x22 = apply(x21, x18)\n    x23 = rbind(sfilter, x19)\n    x24 = chain(merge, x23, x22)\n    x25 = fork(recolor, color, x24)\n    x26 = mapply(x25, x24)\n    x27 = paint(I, x26)\n    O = paint(x27, x3)\n    return O"], [1.0, "def solve_4e65a342(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, le662)\n    x6 = branch(x4, bottomhalf, rIGHT)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [1.0, "def solve_fca4e4b1(I):\n    x1 = hconcat(I, I)\n    x2 = vconcat(x1, x1)\n    x3 = asindices(x2)\n    x4 = mostcolor(I)\n    x5 = ofcolor(x2, x4)\n    x6 = difference(x3, x5)\n    x7 = mapply(ineighbors, x6)\n    O = underfill(x2, EIGHT, x7)\n    return O"], [1.0, "def solve_2a8560d4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = rbind(remove, x1)\n    x4 = rbind(remove, x2)\n    x5 = compose(x3, x4)\n    x6 = compose(x5, color)\n    x7 = fork(combine, identity, x6)\n    x8 = apply(x7, x1)\n    O = pair(x8, x8)\n    return O"], [1.0, "def solve_fadd1d31(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_f524ec6a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_5aac3c20(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_51a51c36(I):\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, shape)\n    x3 = sfilter(I, x2)\n    x4 = lbind(apply, numcolors)\n    x5 = chain(x4, first, shape)\n    x6 = objects(x3, T, F, F)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = matcher(first, x8)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x2, x10)\n    x12 = lbind(recolor, x8)\n    x13 = compose(x12, dmirror)\n    x14 = fork(combine, x13, x13)\n    x15 = objects(x11, x14, Faint)\n    x16 = paint(x15, x11)\n    x17 = order(x16, identity)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = color(x18)\n    x21 = palette(x18)\n    x22 = remove(x8, x21)\n    x23 = other(x22, x20)\n    x24 = rbind(colorcount, x20)\n    x25 = argmin(x12, x24)\n    x26 = first(x25)\n    x27 = other(x25, x26)\n    x28 = sfilter(x24, x27)\n    x29 = size(x28)\n    x30 = positive(x29)\n    x31 = branch(x30, x22, x25)\n    x32 = x31(x3333)\n    x33 = x31(x39)\n    x34 = ofcolor(x33, x20)\n    x35 = andmirror(x34)\n    x36 = ofcolor(x33, x22)\n    x37 = intersection(x35, x36)\n    x38 = mapply(x28, x37)\n    O = paint(x32, x38)\n    return O"], [1.0, "def solve_0c46a86b(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [1.0, "def solve_6fbe61ea(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_bb1cc91f(I):\n    x1 = index(I, ORIGIN)\n    x2 = width(I)\n    x3 = halve(x2)\n    x4 = astuple(x3, x2)\n    x5 = canvas(x1, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = compose(x6, last)\n    x8 = fork(recolor, first, x7)\n    x509 = asobject(I)\n    x10 = mapply(x8, x9)\n    O = paint(x5, x10)\n    return O"], [1.0, "def solve_b4faadb6(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_8bf7d21d(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_42763990(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = compose(x5, color)\n    x7 = compose(double, x4)\n    x8 = lbind(prapply, manhattan)\n    x9 = fork(x8, identity, identity)\n    x10 = lbind(remove, ZERO)\n    x11 = compose(x10, x9)\n    x12 = rbind(branch, NEG_TWO)\n    x13 = fork(x12, positive, decrement)\n    x14 = chain(x13, maximum, x11)\n    x15 = fork(contained, x44, x14)\n    x16 = compose(x15, x6)\n    x17 = sfilter(x2, x16)\n    x18 = fork(add, leftmost, rightmost)\n    x19 = chain(toivec, invert, x18)\n    x20 = fork(shift, x17, x19)\n    x21 = compose(x5, x20)\n    x22 = fork(difference, x21, box)\n    x23 = fork(recolor, x21, x22)\n    x24 = mapply(x23, x4)\n    O = paint(I, x24)\n    return O"], [1.0, "def solve_3cf864c0(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_4a1a6288(I):\n    x1 =906934455\n    O = subgrid(x1, I)\n    return O"], [1.0, "def solve_cc89f781(I):\n    x1 = index(I, ORIGIN)\n    x2 = equality(x1, THREE)\n    x3 = height(I)\n    x4 = decrement(x3)\n    x5 = toivec(x4)\n    x6 = branch(x2, x5, ORIGIN)\n    x7 = equality(x1, TWO)\n    x8 = shape(I)\n    x9 = decrement(x8)\n    x10 = width(I)\n    x11 = decrement(x10)\n    x12 = tojvec(x11)\n    x13 = branch(x7, x9, x12)\n    x14 = branch(x7, x9, x13)\n    x15 = astuple(x6, x13)\n    x16 = astuple(x14, x13)\n    x17 = portrait(x16)\n    x18 = branch(x17, x9, x13)\n    x19 = canvas(x8, x15)\n    x20 = matcher(first, FOUR)\n    x21 = compose(flip, x20)\n    x22 = rbind(sfilter, x21)\n    x23 = compose(x22, asobject)\n    x24 = apply(x23, x19)\n    x25 = difference(x24, x24)\n    O = fill(x19, FOUR, x25)\n    return O"], [1.0, "def solve_3e4336b1(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_486b1415(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_2e4f6375(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = size(x9)\n    x11 = equality(x10, ONE)\n    x12 = branch(x11, dmirror, identity)\n    x13 = x12(I)\n    x14 = last(x13)\n    x15 = mostcolor(x14)\n    x16 = trim(x14)\n    x17 = last(x16)\n    x18 = repeat(x17, ONE)\n    x19 = x12(x18)\n    x20 = branch(x11, height, width)\n    x21 = x20(x19)\n    x22 = astuple(ONE, x21)\n    x23 = multiply(x22, x37)\n    x24 = decrement(x23)\n    x25 = branch(x11, identity, vmirror)\n    x26 = x25(x12)\n    x27 = crop(x26, ORIGIN, x22)\n    x28 = last(x27)\n    x29 = remove(x28, x27)\n    x30 = first(x29)\n    x31 = last(x27)\n    x32 = lefthalf(x31)\n    x33 = righthalf(x32)\n    x34 = asobject(x33)\n    x35 = righthalf(x34)\n    x36 = vmirror(x35)\n    x37 = shift(x36, UNITY)\n    O = paint(x22, x37)\n    return O"], [1.0, "def solve_ff7ea9c3(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_223f72f2(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = compose(x5, color)\n    x7 = compose(double, x4)\n    x8 = rbind(apply, x7)\n    x9 = lbind(lbind, gravitate)\n    x10 = compose(x8, x9)\n    x11 = fork(sfilter, identity, x10)\n    x12 = chain(size, x8, x11)\n    x13 = matcher(x12, TWO)\n    x14 = colorfilter(x1, TWO)\n    x15 = difference(x1, x14)\n    x16 = compose(normalize, first)\n    x17 = chain(ulcorner, x16, x12)\n    x18 = fork(shift, identity, x17)\n    x19 = normalize(x15)\n    x20 = matcher(x18, x19)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x1, x21)\n    x23 = argmax(x22, size)\n    x24 = color(x23)\n    x25 = toindices(x23)\n    x26 = objects(I, T, F, T)\n    x27 = rbind(shift, x24)\n    x28 = compose(x27, toindices)\n    x29 = fork(recolor, x28, identity)\n    x30 = mapply(x29, x26)\n    O = paint(I, x30)\n    return O"], [1.0, "def solve_363203bf(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, d687)\n    x9 = compose(flip, x8)\n    x10 = extract(x7, x9)\n    O = x10(I)\n    return O"], [1.0, "def solve_3cac3f7e(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_53925e3f(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_2e2dcf42(I):\n    x1 = height(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = interval(x4, x5, FOUR)\n    x7 = repeat(x6, ONE)\n    x8 = merge(x7)\n    O = fill(I, ZERO, x8)\n    return O"], [1.0, "def solve_591311fb(I):\n    x1 = shape(I)\n    x2 = contained(ONE, x1)\n    x3 = branch(x2, T, F, T)\n    O = canvas(x3, UNITY)\n    return O"], [1.0, "def solve_44a40ef0(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = branch(x2, ONE, SEVEN)\n    O = canvas(x3, FIVE)\n    return O"], [1.0, "def solve_07d532b2(I):\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = order(x1, x2)\n    x4 = lbind(apply, last)\n    x5 = chain(x4, mostcolor, x2)\n    x6 = fork(recolor, x5, x2)\n    x7 = mapply(x6, x3)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_ca14f3bf(I):\n    x1 = asobject(I)\n    x2 = shift(x1,3333)\n    O = paint(I, x2)\n    return O"], [1.0, "def solve_e80ff72a(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = size(x4)\n    x6 = width(I)\n    x7 = multiply(x6, x5)\n    x8 = multiply(UNITY, x7)\n    x9 = canvas(ZERO, x8)\n    x10 = multiply(x6, x5)\n    x11 = decrement(x10)\n    x12 = lbind(astuple, x11)\n    x13 = rbind(shoot, UP_RIGHT)\n    x14 = compose(last, last)\n    x15 = chain(x13, x12, x14)\n    x16 = fork(recolor, first, x15)\n    x17 = mapply(x16, x4)\n    O = paint(x9, x17)\n    return O"], [1.0, "def solve_80446397(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_65c4b6e2(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_0f25b3e5(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_caddcd22(I):\n    x1 = lbind(add, DOWN)\n    x2 = compose(x1, size)\n    x3 = fork(equality, toindices, x2)\n    x4 = rbind(add, RIGHT)\n    x5 = compose(x4, width)\n    x6 = fork(equality, toindices, x5)\n    x7 = fork(add, size, x6)\n    x8 = compose(x3, x7)\n    x9 = extract(x1, x8)\n    x10 = fork(insert, vupscale, toindices)\n    x11 = compose(x10, initset)\n    x12 = fork(insert, product, x11)\n    x13 = fork(intersection, x12, backdrop)\n    x14 = mapply(x13, x9)\n    O = fill(I, ZERO, x14)\n    return O"], [1.0, "def solve_ae48ed92(I):\n    x1 = branch(I, x2, x3)\n    x2 = x1(I)\n    x3 = decrement(x2)\n    x4 = tojvec(x3)\n    x5 = shoot(x4, DOWN_LEFT)\n    x6 = intersection(x5, x2)\n    x7 = fill(I, THREE, x6)\n    x8 = objects(x7, T, F, F)\n    x9 = fork(combine, vfrontier, hfrontier)\n    x10 = mapply(x9, x8)\n    O = fill(x7, FOUR, x10)\n    return O"], [1.0, "def solve_8e8005c4(I):\n    x1 = vmirror(I)\n    x2 = matcher(identity, ZERO)\n    x3 = rbind(sfilter, x2)\n    x4 = compose(size, x3)\n    x5 = apply(x4, x1)\n    x6 = dedupe(x5)\n    x7 = rot90(x6)\n    x8 = dedupe(x7)\n    x9 = rot270(x8)\n    x10 = hconcat(x7, x4)\n    x11 = hconcat(x9, x4)\n    O = vconcat(x10, x11)\n    return O"], [1.0, "def solve_62eebec0(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_d26aa7ae(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = objects(x1, T, F, F)\n    x4 = power(normalize, THREE)\n    x5 = fork(add, height, width)\n    x6 = x5(x4)\n    x7 = astuple(ONE, x6)\n    x8 = mostcolor(I)\n    x9 = canvas(x8, x7)\n    x10 = asobject(x1)\n    x11 = paint(x9, x10)\n    x12 = rot90(x11)\n    x13 = rot180(x11)\n    x14 = rot270(x11)\n    x15 = hconcat(x12, x4)\n    x16 = hconcat(x13, x8)\n    x17 = vconcat(x15, x9)\n    x18 = vconcat(x16, x10)\n    O = rot90(x18)\n    return O"], [1.0, "def solve_f408d12c(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = UNITY(x2)\n    x4 = shoot(x3, UP_RIGHT)\n    x5 = shoot(x3, UNITY)\n    x6 = recolor(x1, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = mapply(x7, x4)\n    x9 = underfill(I, x1, x8)\n    x10 = objects(x9, T, F, T)\n    x11 = colorfilter(x10, x1)\n    x12 = rbind(bordering, I)\n    x13 = mfilter(x11, x12)\n    O = mfilter(x11, x1)\n    return O"], [1.0, "def solve_63f12f42(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_d974ba31(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [1.0, "def solve_4acce88b(I):\n    x1 = mostcolor(I)\n    x2 = replace(I, x1, ZERO)\n    x3 = apply(d23, x2)\n    x4 = branch(x3, x2, x2)\n    x5 = x4(x4)\n    x6 = dmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = lbind(apply, maximum)\n    x9 = apply(x8, x7)\n    x10 = cmirror(x9)\n    x11 = papply(pair, x9, x10)\n    x12 = apply(x11, x7)\n    x13 = hmirror(x12)\n    x14 = papply(pair, x12, x13)\n    x15 = apply(x8, x14)\n    x16 =vdmirror(x15)\n    x17 = papply(pair, x15, x16)\n    x18 = apply(x8, x17)\n    x19 = hmirror(x18)\n    O = papply(pair, x18, x19)\n    return O"], [1.0, "def solve_fe0401ac(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_f57764ab(I):\n    x1 = asindices(I)\n    x2 = objects(I, T, F, F)\n    x3 = fork(multiply, sign, identity)\n    x4 = lbind(apply, x3)\n    x5 = chain(even, maximum, x4)\n    x6 = lbind(sfilter, x1)\n    x7 = fork(add, first, last)\n    x8 = rbind(remove, x2)\n    x9 = compose(center, last)\n    x10 = fork(subtract, first, x9)\n    x11 = compose(x5, x10)\n    x12 = lbind(rbind, equality)\n    x13 = lbind(argmin, x2)\n    x14 = chain(x7, x4, x10)\n    x15 = lbind(lbind, astuple)\n    x16 = lbind(rbind, astuple)\n    x17 = lbind(compose, x11)\n    x18 = lbind(compose, x14)\n    x19 = compose(x18, x15)\n    x20 = compose(x18, x16)\n    x21 = compose(x13, x19)\n    x22 = rbind(compose, x21)\n    x23 = lbind(lbind, valmin)\n    x24 = rbind(compose, x19)\n    x25 = chain(x24, x23, x8)\n    x26 = lbind(fork, greater)\n    x27 = fork(x26, x25, x20)\n    x28 = chain(x6, x17, x16)\n    x29 = chain(x6, x22, x12)\n    x30 = fork(intersection, x28, x29)\n    x31 = compose(x6, x27)\n    x32 = fork(intersection, x30, x31)\n    x33 = fork(recolor, color, x32)\n    x34 = mapply(x33, x2)\n    O = paint(I, x34)\n    return O"], [1.0, "def solve_71bf8673(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = dmirror(I)\n    x5 = hconcat(x4, I)\n    x6 = hmirror(x5)\n    x7 = vconcat(x5, x6)\n    x8 = vconcat(x7, x7)\n    O = compress(x8)\n    return O"], [1.0, "def solve_f9bb9db6(I):\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, size)\n    x3 = rbind(compose, asobject)\n    x4 = lbind(rbind, sfilter)\n    x5 = chain(x4, x3, x2)\n    x6 = lbind(apply, multiply)\n    x7 = chain(x6, toivec, x5)\n    x8 = fork(add, identity, x7)\n    x9 = fork(222, x8, identity)\n    x10 = compose(x7, x9)\n    x11 = power(x10, FOUR)\n    x12 = x11(I)\n    x13 = objects(x12, T, F, F)\n    x14 = colorfilter(x13, ZERO)\n    x15 = rbind(bordering, I)\n    x16 = compose(flip, x15)\n    x17 = mfilter(x14, x16)\n    x18 = hperiod(x17)\n    x19 = rbind(multiply, THREE)\n    x20 = apply(x19, x15)\n    x21 = rbind(multiply, FOUR)\n    x22 = apply(x21, x15)\n    x23 = merge(x2)\n    x24 = lbind(hperiod, x23)\n    x25 = apply(x24, x15)\n    x26 = lbind(shift, x17)\n    x27 = mapply(x26, x25)\n    x28 = apply(x27, x22)\n    O = fill(x12, FOUR, x28)\n    return O"], [1.0, "def solve_9375d687(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, lefthalf, tophalf)\n    x9 = branch(x7, righthalf, bottomhalf)\n    x10 = branch(x7, hconcat, vconcat)\n    x11 = x9(I)\n    x12 = x10(I)\n    x13 = color(x11)\n    x14 = color(x12)\n    x15 = palette(x11)\n    x16 = remove(x13, x15)\n    x17 = palette(x12)\n    x18 = remove(x16, x17)\n    x19 = merge(x18)\n    x20 = palette(x11)\n    x21 = other(x20, x19)\n    x22 = palette(x12)\n    x23 = other(x22, x19)\n    x24 = colorcount(x11, x13)\n    x25 = colorcount(x12, x13)\n    x26 = greater(x24, x25)\n    x27 = branch(x26, identity, vmirror)\n    x28 = x27(x11)\n    x29 = ofcolor(x28, x13)\n    x30 = subgrid(x29, x28)\n    x31 = x27(x30)\n    x32 = replace(x31, x13, x24)\n    O = x27(x32)\n    return O"], [1.0, "def solve_37b573ad(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_1b49b1b4(I):\n    x1 = normalize(I)\n    x2 = rot90(x1)\n    x3 = rot180(x1)\n    x4 = rot270(x1)\n    x5 = hconcat(x2, x4)\n    x6 = hconcat(x3, x5)\n    O = vconcat(x6, x1)\n    return O"], [1.0, "def solve_2d0479a8(I):\n    x1 = partition(I)\n    x2 = mostcolor(I)\n    x3 = ofcolor(I, x2)\n    x4 = switch(I, THREE, FOUR)\n    x5 = mapply(dneighbors, x1)\n    x6 = mapply(ineighbors, x1)\n    x7 = fill(x4, SIX, x5)\n    O = fill(x7, FOUR, x6)\n    return O"], [1.0, "def solve_7527d7e2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_232c4c96(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_ba5ca3b4(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(vfrontier, x2)\n    x4 = underfill(I, EIGHT, x3)\n    x5 = hconcat(x4, x4)\n    O = vconcat(x5, x5)\n    return O"], [1.0, "def solve_11ea01f1(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_cfe2fe7c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_703585f6(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x3 = minimum(x3)\n    x4 = divide(x4, x3)\n    x5 = x2(I, x4)\n    x6 = interval(ONE, x5, ONE)\n    x7 = multiply(x3, x6)\n    x8 = rbind(apply, x7)\n    x9 = lbind(mostcolor, I)\n    x10 = compose(x8, x9)\n    x11 = numcolors(I)\n    x12 = matcher(x10, x11)\n    x13 = sfilter(x2, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x6)\n    O = paint(I, x15)\n    return O"], [1.0, "def solve_301ad0f6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(ORIGIN, x17)\n    x24 = rbind(x23, x22)\n    x25 = divide(x27, x22)\n    x26 =Esfilter(x12, x25)\n    x27 = rbind(multiply, x15)\n    x28 = apply(x27, x26)\n    x29 = rbind(toobject, I)\n    x30 = lbind(shift, I)\n    x31 = mapply(x30, x29)\n    x32 = apply(x27, x26)\n    x33 = cover(I, x21)\n    x34 = fill(x32, x3, x33)\n    x35 = shift(x31, x24)\n    x36 = ofcolor(x35, x7)\n    O = fill(x34, x3, x36)\n    return O"], [1.0, "def solve_1f24bd4f(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_6fa34b4a(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_ee6c52c5(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_eb191d2e(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = decrement(x1)\n    x4 = astuple(x3, x2)\n    x5 = crop(I, ORIGIN, x4)\n    x6 = hmirror(x5)\n    x7 = vconcat(I, x6)\n    x8 = double(x3)\n    x9 = astuple(x8, x2)\n    x10 = crop(x7, DOWN, x9)\n    O = vconcat(x7, x10)\n    return O"], [1.0, "def solve_cf168828(I):\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [1.0, "def solve_74516643(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = fork(equality, toindices, backdrop)\n    x5 = mfilter(x3, x4)\n    x6 = color(I)\n    x7 = fill(I, x6, x5)\n    O = fill(x7, ONE, x13)\n    return O"], [1.0, "def solve_ebdb7d81(I):\n    x1 = compose(first, last)\n    x2 = order(x1, sign)\n    x3 = apply(mostcommon, x2)\n    x4 = size(x3)\n    x5 = interval(ZERO, x4, ONE)\n    x6 = apply(tojvec, x5)\n    x7 = mpapply(shift, x3, x6)\n    x8 = canvas(ZERO, x4)\n    x9 = paint(x8, x7)\n    O = rot90(x9)\n    return O"], [1.0, "def solve_2f46560c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_e1442946(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x9)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x24, x23)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_790638c0(I):\n    x1 = rot270(I)\n    x2 = matcher(identity, ZERO)\n    x3 = rbind(sfilter, x2)\n    x4 = compose(flip, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = apply(x5, x1)\n    x7 = rbind(repeat, x6)\n    x8 = apply(x7, x4)\n    O = cmirror(x8)\n    return O"], [1.0, "def solve_fd464682(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_73b52bce(I):\n    x1 = palette(I)\n    x2 = intersection(x1, x1)\n    x3 = colorcount(I, ZERO)\n    x4 = outbox(x3)\n    x5 = intersection(x2, x4)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 = ofcolor(I, x6)\n    x9 = ofcolor(I, x7)\n    x10 = rbind(shoot, UNITY)\n    x11 = rbind(shoot, NEG_UNITY)\n    x12 = rbind(shoot, DOWN_LEFT)\n    x13 = rbind(shoot, UP_RIGHT)\n    x14 = fork(combine, x10, x11)\n    x15 = fork(combine, x12, x13)\n    x16 = fork(combine, x14, x15)\n    x17 = rbind(shoot, UNITY)\n    x18 = rbind(shoot, NEG_UNITY)\n    x19 = rbind(shoot, DOWN_LEFT)\n    x20 = rbind(shoot, UP_RIGHT)\n    x21 = fork(combine, x17, x20)\n    x22 = fork(combine, x18, x21)\n    x23 = fork(combine, initset, x22)\n    x24 = fork(rapply, x23, identity)\n    x25 = compose(first, x24)\n    x26 = mapply(x25, x6)\n    x27 = fill(I, x6, x26)\n    x28 = intersection(x8, x27)\n    O = fill(x22, x13, x28)\n    return O"], [1.0, "def solve_c815806e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = hsplit(I, x2)\n    x4 = shape(x3)\n    x5 = apply(size, x4)\n    x6 = argmax(x5, x2)\n    O = canvas(x6, x4)\n    return O"], [1.0, "def solve_033d3e06(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_26bc98a3(I):\n    x1 = warped(I, TEN)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [1.0, "def solve_b472da60(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, DOWN)\n    x4 = mapply(I, x3)\n    x5 = fill(I, x1, x4)\n    x6 = mapply(size, x3)\n    x7 = fill(x5, x1, x6)\n    O = replace(x7, x1, x1)\n    return O"], [1.0, "def solve_5ce3dba3(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_c4828f9e(I):\n    x1 = shape(I)\n    x2 = divide(x1, THREE)\n    x3 = first(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = last(x5)\n    x7 = shift(x6, x3)\n    O = paint(x4, x7)\n    return O"], [1.0, "def solve_fc592e6e(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    x5 = color(x4)\n    x6 = palette(x1)\n    x7 = other(x6, x5)\n    x8 = neighbors(UNITY)\n    O = initset(x17)\n    return O"], [1.0, "def solve_53830926(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x7, x16)\n    x20 = ofcolor(x8, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, THREE, x21)\n    return O"], [1.0, "def solve_13ffe7f5(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_33a70dd8(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_4c531e60(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_7a4e1a69(I):\n    x1 = asindices(I)\n    x2 = backdrop(x1)\n    O = toobject(x2, I)\n    return O"], [1.0, "def solve_25dc8acb(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_13c4a6a0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = interval(ERO, FIVE, ONE)\n    x8 = downscale(x6, x4)\n    x9 = lbind(shift, x8)\n    x10 = mapply(x9, x7)\n    O = fill(x5, FIVE, x10)\n    return O"], [1.0, "def solve_40c0af53(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_57eafea6(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = fork(multiply, height, width)\n    x7 = width(I)\n    x8 = rbind(repeat, x7)\n    x9 = width(I)\n    x10 = subtract(x8, x9)\n    x11 = normalize(x5)\n    x12 = multiply(x4, x11)\n    x13 = shift(x15, x12)\n    x14 = dmirror(x13)\n    x15 = objects(x14, T, F, T)\n    x16 = apply(toindices, x15)\n    x17 = ofcolor(x16, x1)\n    x18 = mapply(vfrontier, x17)\n    x19 = mapply(hfrontier, x17)\n    x20 = toindices(x13)\n    x21 = box(x20)\n    x22 = difference(x19, x21)\n    x23 = x17(x22)\n    x24 = color(x3)\n    x25 = palette(x23)\n    x26 = other(x25, x24)\n    x27 = subgrid(x23, I)\n    x28 = ofcolor(x27, x26)\n    x29 = fill(x27, x26, x28)\n    O = replace(x29, x26, x1)\n    return O"], [1.0, "def solve_e23c7ee1(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_d4bcbfb2(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x7, x16)\n    x20 = ofcolor(x8, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, THREE, x21)\n    return O"], [1.0, "def solve_5f3e61cd(I):\n    x1 = shape(I)\n    x2 = ofcolor(I, TWO)\n    x3 = mapply(vfrontier, x2)\n    x4 = underfill(I, ZERO, x3)\n    x5 = hconcat(x4, x4)\n    O = vconcat(x5, x5)\n    return O"], [1.0, "def solve_79fc7726(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_d0cff705(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_31e4653b(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_32798bd7(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [1.0, "def solve_07514628(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = fork(equality, toindices, identity)\n    x5 = sfilter(x3, x4)\n    x6 = mapply(dneighbors, x5)\n    x7 = index(I, ORIGIN)\n    x8 = subgrid(x7, I)\n    x9 = trim(x8)\n    O = replace(x9, ONE, x7)\n    return O"], [1.0, "def solve_f3f7575b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, identity,93)\n    x3 = branch(x1, decrement, height)\n    x4 = x3(I)\n    x5 = astuple(ONE, x4)\n    x6 = x2(I)\n    x7 = crop(x6, ORIGIN, x5)\n    x8 = apply(dedupe, x7)\n    O = x2(x8)\n    return O"], [1.0, "def solve_d6a1b95a(I):\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = rbind(shoot, UP)\n    x5 = mapply(x4, x3)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = merge(x6)\n    x8 =shift(x7, UP)\n    x9 = fill(I, THREE, x3)\n    O = fill(x9, FOUR, x8)\n    return O"], [1.0, "def solve_3ece3cce(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_badfee06(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_24930bab(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_fea790c1(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_692d317e(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_87e2a8b7(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_880cbfb3(I):\n    x1 = asobject(I)\n    x2 = height(I)\n    x3 = decrement(x2)\n    x4 = astuple(x3, ONE)\n    x5 = halve(x4)\n    x6 = width(I)\n    x7 = halve(x6)\n    x8 = ulcorner(x7)\n    x9 = rbind(shoot, x8)\n    x10 = mapply(x9, x5)\n    x11 = canvas(ZERO, x4)\n    O = fill(x11, FOUR, x10)\n    return O"], [1.0, "def solve_c00ab3e7(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_1941e2ac(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = matcher(color, x4)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x2, x6)\n    x8 = sizefilter(x7, ONE)\n    x9 = merge(x8)\n    x10 = fill(I, x4, x9)\n    x11 = merge(x8)\n    x12 = fill(x10, TWO, x11)\n    x13 = merge(x8)\n    x14 = fill(x12, ONE, x13)\n    x15 = compress(x14)\n    O = fill(x15, FOUR, x9)\n    return O"], [1.0, "def solve_f542ce7e(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = objects(I, T, F, T)\n    x5 = lbind(colorfilter, x4)\n    x6 = compose(size, x5)\n    x7 = matcher(x6, TWO)\n    x8 = colorfilter(x4, TWO)\n    x9 = rbind(adjacent, x8)\n    x10 = mfilter(x8, x9)\n    x11 = objects(I, T, F, T)\n    x12 = sfilter(x11, x7)\n    x13 = merge(x12)\n    x14 = rbind(adjacent, x13)\n    x15 = mfilter(x14, x7)\n    x16 = sfilter(x13, x15)\n    x17 = shape(x16)\n    x18 = subtract(x17, x16)\n    x19 = canvas(ZERO, x18)\n    x20 = paint(x19, x16)\n    O = subgrid(x20, I)\n    return O"], [1.0, "def solve_0cc2558a(I):\n    x1 = matcher(first, THREE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x2, x1)\n    x4 = dmirror(x3)\n    x5 = fork(combine, vfrontier, hfrontier)\n    x6 = compose(x5, x4)\n    x7 = mapply(x6, x4)\n    O = underfill(x7, ONE, x3)\n    return O"], [1.0, "def solve_bc32aca2(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x11 = canvas(x8, x9)\n    x12 = asindices(x11)\n    x13 = toobject(x12, I)\n    x14 = increment(x5)\n    x15 = increment(xx4)\n    x16 = divide(x14, x15)\n    x17 = rbind(multiply, x16)\n    x18 = apply(x17, x13)\n    x19 = rbind(toobject, I)\n    x20 = chain(x19, backdrop, x17)\n    x21 = apply(x20, x18)\n    x22 = matcher(x21, I)\n    x23 = rbind(adjacent, x12)\n    x24 = rbind(adjacent, x25)\n    x25 = fork(both, x23, x24)\n    x26 = compose(x22, x25)\n    x27 = sfilter(x2, x26)\n    O = fill(x11, x8, x27)\n    return O"], [1.0, "def solve_9205ff9d(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP)\n    x4 = rbind(shoot, DOWN)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = canvas(x10, x1)\n    x12 = astuple(dmirror, ORIGIN)\n    x13 = astuple(cmirror, x11)\n    x14 = combine(x12, x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x16, x16)\n    x18 = index(I, x2)\n    x19 = lbind(power, x18)\n    x20 = chain(first, x19, first)\n    x21 = compose(last, last)\n    x22 = fork(subtract, x21, x20)\n    x23 = compose(invert, x22)\n    x24 = fork(shoot, x22, x23)\n    x25 = fork(intersection, x24, x20)\n    x26 = chain(decrement, size, x25)\n    x27 = fork(shoot, x26, x24)\n    x28 = fork(combine, x27, x25)\n    x29 = compose(toivec, x28)\n    x30 = fork(shoot, x29, x27)\n    x31 = fork(combine, x27, x30)\n    x32 = mapply(x31, x17)\n    x33 = fill(I, EIGHT, x32)\n    x34 = mapply(x33, x19)\n    O = paint(x34, x32)\n    return O"], [1.0, "def solve_590defda(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained,25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_3ba0e11b(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_63afc717(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_a78dd068(I):\n    x1 = Fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [1.0, "def solve_9abd57e7(I):\n    x1 = height(I)\n    x2 = decrement(x1)\n    x3 = decrement(x2)\n    x4 = toivec(x3)\n    x5 = tojvec(x2)\n    x6 = add(x4, x5)\n    x7 = add(x3, x6)\n    x8 = fill(I, ZERO, x7)\n    x9 = canvas(ZERO, x1)\n    x10 = asobject(x9)\n    x11 = occurrences(x8, x10)\n    x12 = lbind(shift, x10)\n    x13 = mapply(x12, x11)\n    O = fill(x8, ONE, x13)\n    return O"], [1.0, "def solve_9579716b(I):\n    x1 = mostcolor(I)\n    x2 = hconcat(I, I)\n    x3 = upscale(I, THREE)\n    x4 = ofcolor(x3, x1)\n    x5 = asindices(x3)\n    x6 = difference(x5, x4)\n    x7 = hconcat(x2, I)\n    x8 = vconcat(x7, x7)\n    x9 = vconcat(x8, x7)\n    O = fill(x9, ZERO, x6)\n    return O"], [1.0, "def solve_122330dc(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, Righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [1.0, "def solve_63be3dc8(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_10f211ce(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_5e38dc5f(I):\n    x1 = ofcolor(I, TWO)\n    x2 = matcher(first, ZERO)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(invert, center, x3)\n    x5 = fork(shift, identity, x4)\n    x6 = canvas(ZERO, THREE_BY_THREE)\n    x7 = asindices(x6)\n    x8 = matcher(first, ZERO)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    x11 = initset(x1)\n    x12 = box(x11)\n    x13 = lbind(toobject, x12)\n    x14 = compose(x4, x13)\n    x15 = toindices(x14)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x10)\n    O = fill(x6, EIGHT, x17)\n    return O"], [1.0, "def solve_5d49d081(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_66174c0c(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_634f8d80(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_3279bf68(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_2a4b191d(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_17da7258(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [1.0, "def solve_e681058e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = sfilter(x1, hline)\n    x5 = size(x4)\n    x6 = positive(x5)\n    x7 = branch(x6, identity, dmirror)\n    x8 = x7(I)\n    x9 = rbind(subgrid, x8)\n    x10 = matcher(color, x3)\n    x11 = compose(flip, x10)\n    x12 = partition(x8)\n    x13 = sfilter(x12, x11)\n    x14 = argmax(x13, size)\n    x15 = product(x14, x14)\n    x16 = apply(color, x15)\n    x17 = canvas(x3, x14)\n    x18 = paint(x17, x16)\n    x19 = fork(remove, last, identity)\n    x20 = compose(hmirror, x19)\n    x21 = fork(vconcat, identity, x20)\n    x22 = apply(x21, x15)\n    x23 = merge(x22)\n    O = x7(x23)\n    return O"], [1.0, "def solve_d9eef308(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_393222e3(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_714271e9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = combine(x8, x9)\n    x13 = merge(x11)\n    x14 = fill(I, x3, x13)\n    x15 = paint(x14, x9)\n    O = x15(x15)\n    return O"], [1.0, "def solve_673778eb(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(lbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [1.0, "def solve_24ee4042(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_32fd83ab(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = partition(I)\n    x7 = fork(multiply, height, width)\n    x8 = fork(equality, size, x7)\n    x9 = sfilter(x6, x8)\n    x10 = argmax(x9, size)\n    x11 = difference(x5, x10)\n    x12 = apply(initset, x11)\n    x13 = rbind(hmatching, x10)\n    x14 = rbind(vmatching, x10)\n    x15 = fork(either, x13, x14)\n    x16 = Sfilter(x12, x15)\n    x17 = rbind(gravitate, x10)\n    x18 = fork(add, center, x17)\n    x19 = fork(connect, center, x18)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x16)\n    O = paint(I, x21)\n    return O"], [1.1, "def solve_43776383(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(compose, flip)\n    x3 = lbind(matcher, first)\n    x4 = compose(x2, x3)\n    x5 = lbind(compose, asobject)\n    x6 = lbind(rbind, sfilter)\n    x7 = compose(x5, x6)\n    x8 = lbind(rbind,colorcount)\n    x9 = fork(equality, x7, x8)\n    x10 = compose(x9, initset)\n    x11 = fork(indices, x7, x10)\n    x12 = compose(size, x11)\n    x13 = matcher(x12, ZERO)\n    x14 = partition(I)\n    x15 = sfilter(x14, x13)\n    x16 = argmax(x15, size)\n    x17 = remove(x16, x15)\n    x18 = lbind(chain, first)\n    x19 = lbind(rbind,\ufffdrapply)\n    x20 = lbind(lbind, initset)\n    x21 = lbind(rbind,rapply)\n    x22 = compose(x21, frontiers)\n    x23 = chain(x18, x22, last)\n    x24 = lbind(colorbind,irrelval)\n    x25 = chain(x24, color, x23)\n    x26 = matcher(x25, ZERO)\n    x27 = fork(O = fork(both, x23, x26)\n    x28 = fork(combine, x25, x27)\n    x29 = fork(shift, x28, ulcorner)\n    x30 = fork(intersection, x29, last)\n    x31 = chain(x15, x30, first)\n    x32 = size(x15)\n    x33 = equality(x32, ZERO)\n    x34 = branch(x33, x31, x29)\n    x35 = bright(x16, x34)\n    x36 =614(x35)\n    x37 = paint(I, x36)\n    O = subgrid("], [1.1, "def solve_104cb5af(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_ae30e868(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = matcher(size, SIX)\n    x2 = equality(ineighbors, x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = asindices(x4)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = intersection(x6, x5)\n    x8 = lrcorner(x7)\n    x9 = shoot(x8, DOWN_LEFT)\n    x10 = intersection(x9, x5)\n    x11 = combine(x7, x10)\n    x12 = llcorner(x11)\n    x13 = remove(x12, x11)\n    x14 = lbind(shift, x13)\n    x15 = height(x11)\n    x16 = height(x10)\n    x17 = divide(x15, x16)\n    x18 = increment(x17)\n    x19 = width(x11)\n    x20 = astuple(x18, x19)\n    x21 = crop(x4, ORIGIN, x20)\n    x22 = hupscale(x21, x18)\n    x23 = dmirror(x22)\n    x24 = shape(x23)\n    x25 = canvas(ZERO, x24)\n    x26 = ulcorner(x25)\n    x27 =rbind(shoot, x26)\n    x28 = mapply(x27, x3)\n    x29 = combine(x24, x28)\n    x30 = urcorner(x29)\n    x31 = remove(x30, x29)\n    x32 = lbind(shift, x31)\n    x33 = height(x11)\n    x34 = decrement(x33)\n    x35 = toivec(x34)\n    x36 = height(x11)\n    x37 = tojvec(x36)\n    x38 = add(x35, x37)\n    x39 = height(x11)\n    x40 = increment(x39)\n    x41 = astuple(x38, x40)\n    x42 ="], [1.1, "def solve_2974bfca(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, ONE)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)"], [1.1, "def solve_d1195071(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(both, x29, x30)\n    x34 = fork(both, x31, x32)\n    x35 = fork(both, x33, x34)\n    x36 = compose(x"], [1.1, "def solve_87600c64(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = argmax(x1, size)\n    x3 = remove(x2, x1)\n    x4 = merge(x3)\n    x5 = subgrid(x4, I)\n    x6 = chain(color, merge, lefthalf)\n    x7 = x6(x5)\n    x8 = rbind(colorcount, ZERO)\n    x9 = argmin(x2, x8)\n    x10 = rbind(colorcount, x9)\n    x11 = chain(x9, x10, palette)\n    x12 = lbind(contained, x7)\n    x13 = chain(x12, palette, x11)\n    x14 = compose(flip, x13)\n    x15 = extract(x12, x14)\n    x16 = ulcorner(x15)\n    x17 = lrcorner(x15)\n    x18 = height(x15)\n    x19 = divide(x18, x17)\n    x20 = increment(x19)\n    x21 = width(x15)\n    x22 = divide(x21, x22)\n    x23 = increment(x22)\n    x24 = invert(x23)\n    x25 = tojvec(x24)\n    x26 = asobject(x25)\n    x27 = height(x5)\n    x28 = increment(x27)\n    x29 = interval(x26, x28, ONE)\n    x30 = product(x29, x29)\n    x31 = matcher(first, x9)\n    x32 = compose(flip, x31)\n    x33 = sfilter(x30, x32)\n    x34 = fill(x5, x19, x33)\n    x35 = lbind(shift, x323)\n    x36 = fork(recolor, x35, identity)\n    x37 = mapply(x36, x22)\n    x38 = paint(x34, x37)\n    x39 = double(x conveniently)\n    x40 = invert(x39)\n    x41 = increment(x40)"], [1.1, "def solve_0a816e83(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_c3b6ab67(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_4a0be8d7(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25ff2445\n    x26 =499ling(x24)\n    x27 = objects(x3, T, F, F)\n    x28 = colorfilter(x27, ZERO)\n    x29 = rbind(toobject, x3)\n    x30 = chain(x29, backdrop, delta)\n    x31 = mapply(x30, x28)\n    x32 = combine(x24, x31)\n    x33 = rbind(adjacent, x32)\n    x34 = urcorner(x4)\n    x35 = sfilter(x4, x33)\n    x36 = Airport(x35, x4)\n    x37 = mapply(x19, x36)\n    x38 = combine(x34, x37)\n    x39 = paint(x3, x38)\n    O = x2(x39)\n"], [1.1, "def solve_71a7ca4e(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = argmax(x3, x4)\n    x6 = color(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmax(x8, x9)\n    x11 = remove(x10, x8)\n    x12 = lbind(ofcolor, I)\n    x13 = mapply(x12, x11)\n    x14 = subgrid(x13, I)\n    x15 = objects(x14, T, F, F)\n    x16 = colorfilter(x15, x6)\n    x17 = initset(x10)\n    x18 = insert(x6, x17)\n    x19 = lbind(intersection, x18)\n    x20 = chain(positive, size, x19)\n    x21 = chain(positive, decrement, size)\n    x22 = fork(either, x20, x21)\n    x23 = rbind(toobject, x14)\n    x24 = compose(corners, outbox)\n    x25 = chain(palette, x23, x24)\n    x26 = rbind(branch, x6)\n    x27 = chain(flip, x22, x25)\n    x28 = compose(first, x25)\n    x29 = fork(x26, x27, x28)\n    x30 = apply(uppermost, x16)\n    x31 = order(x30, identity)\n    x32 = lbind(apply, x29)\n    x33 = rbind(order, leftmost)\n    x34 = lbind(sfilter, x16)\n    x35 = lbind(matcher, uppermost)\n    x36 = compose(x34, x35)\n    x37 = chain(x32, x33, x36)\n    O = apply(x37"], [1.1, "def solve_d7e25281(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = lrcorner(x4)\n    x41 = index(x3, x40)"], [1.1, "def solve_323267c5(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_279cd42f(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_a5120804(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = box(x2)\n    x5 = astuple(TEN, FOUR)\n    x6 = canvas(x3, x5)\n    x7 = interval(ONE, SIX, ONE)\n    x8 = invert(TEN)\n    x9 = interval(x8, TEN, ONE)\n    x10 = product(x7, x9)\n    x11 = remove(ORIGIN, x10)\n    x12 = lbind(intersection, x4)\n    x13 = lbind(shift, x2)\n    x14 = compose(x12, x13)\n    x15 = toindices(x2)\n    x16 = lbind(intersection, x15)\n    x17 = lbind(shift, x1)\n    x18 = compose(x16, x17)\n    x19 = compose(size, x14)\n    x20 = compose(size, x18)\n    x21 = fork(equality, x19, x20)\n    x22 = chain(positive, size, x14)\n    x23 = fork(both, x21, x22)\n    x24 = sfilter(x11, x23)\n    x25 = compose(size, x14)\n    x26 = valmax(x24, x25)\n    x27 = compose(size, x14)\n    x28 = matcher(x27, x26)\n    x29 = sfilter(x24, x28)\n    x30 = fork(multiply, first, last)\n    x31 = argmax(x29, x30)\n    x32 = interval(ZERO, TEN, ONE)\n    x33 = lbind(shift, x2)\n    x34 = multiply(TEN, UNITY)\n    x35 = interval(x32, x34, invert)\n    x36 = sfilter(x32, x35)\n    x37 = apply(x33, x36)\n    x38 = mapply(x37, x000)\n    x39 = paint(I, x38"], [1.1, "def solve_c192b683(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, FIVE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = argmin(x8, numcolors)\n    x10 = normalize(x9)\n    x11 = toindices(x10)\n    x12 = increment(x width)\n    x13 = tojvec(x12)\n    x14 = shift(x11, x13)\n    x15 = argmin(x11, x13)\n    x16 = x15(I)\n    x17 = remove(x10, x1)\n    x18 = other(x17, x16)\n    x19 = color(x18)\n    x20 = lbind(shift, x18)\n    x21 = rbind(difference, x76)\n    x22 = chain(size, x20, x21)\n    x23 = matcher(x22, ZERO)\n    x24 = sfilter(x16, x23)\n    x25 = difference(x16, x24)\n    x26 = sfilter(x25, x23)\n    x27 = recolor(x10, x26)\n    x28 = lbind(shift, x14)\n    x29 = lbind(insert, x14)\n    x30 = rbind(intersection, x21)\n    x31 = chain(size, x29, x30)\n    x32 = argmax(x27, x31)\n    x33 = lbind(shift, x33)\n    x34 = lbind(insert, x33)\n    x35 = rbind(intersection, x32)\n    x36 = chain(size, x34, x35)\n    x37 = sfilter(x32, x36)\n    x38 = fork(recolor, x19, x37)\n    x39 = fork(colorcount, x18, x38)\n"], [1.1, "def solve_c12d8cb8(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =889(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, ONE, x3)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x8, x18)\n    x20 = lbind(colorcount, x7)\n    x21 = argmin(x19, x20)\n    x22 = rbind(colorcount, x21)\n    x23 = rbind(toobject, x7)\n    x24 = compose(x22, x23)\n    x25 = chain(x delta, x24, decrement)\n    x26 =55754(x25)\n    x27 = objects(x26, T, F, T)\n    x28 = rbind(colorcount, x21)\n    x29 = valmax(x27, x28)\n    x30 = rbind(toobject, x7)\n    x31 = chain(x29, x30, color)\n    x32 = x31(x1600)\n    x33 = x31(x16)\n    x34 = rbind(colorcount, x21)\n    x35 = valmax(x32, x34)\n    x36 = x35(x29)\n    x37 = equality(x36, x31)\n    x38 = astuple(ONE, x37)\n    x39 = canvas(x18, x38)\n    x40 = asobject("], [1.1, "def solve_c0cac043(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_5d7095a7(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = astuple(color, TWO)\n    x2 = astuple(TWO, ONE)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = sfilter(x32, x35)\n    x37 =neighbors(x36)\n    x38 = mapply(neighbors, x37)\n    x39 =O = fill(x31, THREE, x38"], [1.1, "def solve_327d4bcf(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale11(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O ="], [1.1, "def solve_5510e157(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = rbind(objects,)\n    x3 = rbind(x2, F)\n    x4 = rbind(x3, F)\n    x5 = lbind(d687, x4)\n    x6 = lbind(rbind, colorcount)\n    x7 = compose(x6, x5)\n    x8 = rbind(canvas, UNITY)\n    x9 = compose(x8, x7)\n    x10 = fork(hconcat, identity, x9)\n    x11 = compose(x8, x10)\n    x12 = lbind(contained, ZERO)\n    x13 = chain(flip, x12, x11)\n    x14 = compose(positive, size)\n    x15 = lbind(rbind, sfilter)\n    x16 = fork(both, x13, x15)\n    x17 = rbind(toobject, I)\n    x18 = chain(x14, x17, x16)\n    x19 = compose(x12, x18)\n    x20 = fork(equality, identity, x19)\n    x21 = compose(x20, last)\n    x22 = ofcolor(I, ZERO)\n    x23 = sfilter(x22, x12)\n    x24 = argmax(x23, x28)\n    x25 = other(x23, x24)\n    x26 = last(x23)\n    x27 = compose(first, last)\n    x28 =    x27(x26)\n    x29 = fill(I, x25, x28)\n    x30 = ofcolor(x29, x25)\n    x31 = ulcorner(x30)\n    x32 = shoot(x31, UNITY)\n    x33 = lrcorner(x30)\n    x34 = shoot(x33, NEG_UNITY)\n    x35 = urcorner(x30)\n    x36 = shoot(x35, UP_RIGHT)\n    x37 = llcorner(x30)\n    x38 = shoot(x37, DOWN_LEFT)\n    x39 = combine(x32"], [1.1, "def solve_8854ff72(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = compose(size, dedupe)\n    x3 = x2(x1)\n    x4 = positive(x3)\n    x5 = branch(x4, height, width)\n    x6 = x5(I)\n    x7 = canvas(x4, x6)\n    x8 = matcher(identity, ZERO)\n    x9 = rbind(sfilter, x8)\n    x10 = compose(first, last)\n    x11 =rbind(sfilter, x10)\n    x12 = compose(x9, x11)\n    x13 = fork(size, x12,leftmost)\n    x14 = matcher(x13, ZERO)\n    x15 = uppermost(x7)\n    x16 = leftmost(x7)\n    x17 = fork( greater, x15, x16)\n    x18 = uppermost(x7)\n    x19 = matcher(x18, ZERO)\n    x20 = rightmost(x7)\n    x21 = leftmost(x7)\n    x22 = fork( greater, x20, x21)\n    x23 = uppermost(x7)\n    x24 = matcher(x23, ZERO)\n    x25 = lrcorner(x7)\n    x26 = ulcorner(x7)\n    x27 = fork(connect, x25, x26)\n    x28 = subgrid(x27, I)\n    x29 = palette(x28)\n    x30 = sfilter(x29, x24)\n    x31 = lbind(colorcount, x28)\n    x32 = argmax(x30, x31)\n    x33 = remove(x32, x30)\n    x34 = rbind(contained, x33)\n    x35 = argmin(x34, size)\n    x36 = x35(x28)\n    x37 = palette(x35)\n    x38 = remove(x36, x35)\n    x39 = lbind(colorcount, x28)\n    x40 = argmin(x38, x39)\n    x41 = rbind(color"], [1.1, "def solve_7a5f57a2(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x352, x32)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18, x"], [1.1, "def solve_e7f52bb2(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_3690af8a(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_8ba81066(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x04, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_7753107b(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = initset(ORIGIN)\n    x5 = lbind(rapply, x4)\n    x6 = compose(first, x5)\n    x7 = chain(x10, x4, x6)\n    x8 = fork(difference, x7, toindices)\n    x9 = matcher(x8, ZERO)\n    x10 = fork(both, x9, x7)\n    x11 = extract(x3, x10)\n    x12 = ONE(x11)\n    x13 = height(x12)\n    x14 = decrement(x13)\n    x15 = mostcolor(I)\n    x16 =astuple(x14, x15)\n    x17 = repeat(x16, ONE)\n    x18 = toindices(x17)\n    x19 = asindices(I)\n    x20 = box(x19)\n    x21 = NEG_UNITY(x20)\n    x22 = toindices(x21)\n    x23 = asindices(I)\n    x24 = corners(x23)\n    x25 = DOWN(x24)\n    x26 = astuple(x14, x15)\n    x27 = astuple(x25, x26)\n    x28 = combine(x28, x27)\n    x29 = rbind(toobject, I)\n    x30 = chain(numcolors, x29, x22)\n    x31 = matcher(x30, ONE)\n    x32 = astuple(x24, x15)\n    x33 = astuple(x31, x32)\n    x34 = combine(x33, x41)\n    x35 = argmax(x34, size)\n    x36 = matcher(first, x35)\n    x37 = compose(flip, x36)\n    x38 = sfilter(x1, x37)\n    x39 =535(x38)\n    x40 = multiply(x19, x39)\n"], [1.1, "def solve_0874b1eb(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_f2c578eb(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_1799e69a(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = apply(lowermost, x6)\n    x8 = maximum(x7)\n    x9 = width(I)\n    x10 = astuple(x9, x6)\n    x11 = add(x10, TWO)\n    x12 = interval(x8, x11, ONE)\n    x13 = prapply(shift, x7, x12)\n    x14 = lbind(canvas, x1)\n    x15 = compose(x14, toindices)\n    x16 = fork(paint, x15, x15)\n    x17 = compose(x16, lefthalf)\n    x18 = righthalf(I)\n    x19 = compose(x18, righthalf)\n    x20 = righthalf(I)\n    x21 = compose(x20, palette)\n    x22 = lbind(recolor, x1)\n    x23 = compose(x22, palette)\n    x24 = rbind(paint, x18)\n    x25 = chain(x24, x23, x8)\n    x26 = x25(x20)\n    x27 = x25(x21)\n    x28 = fork(combine, vfrontier, hfrontier)\n    x29 = fork(combine, rbind, TEN)\n    x30 = rbind(occurrences, x22)\n    x31 = compose(x30, x28)\n    x32 = apply(x31, x3)\n    x33 = rbind(valmax, numcolors)\n    x34 = chain(x33, x32, x23)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = x36(x69)\n    x38 = invert(x37)\n    x39 = cover(I, x"], [1.1, "def solve_401601cb(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = shape(I)\n    x13 = canvas(x11, x12)\n    x14 = hconcat(I, x13)\n    x15 = objects(x14, F, F, T)\n    x16 = argmin(x15, size)\n    x17 = subgrid(x16, x14)\n    x18 = remove(x16, x15)\n    x19 = lbind(colorcount, x18)\n    x20 = argmin(x12, x19)\n    x21 = rightmost(x16)\n    x22 = positive(x21)\n    x23 = vmirror(x22)\n    x24 = papply(pair, x17, x23)\n    x25 = lbind(apply, maximum)\n    x26 = size(x24)\n    x27 = increment(x26)\n    x28 = tojvec(x27)\n    x29 = leftmost(x16)\n    x30 = rightmost(x16)\n    x31 = ofcolor(x14, x29)\n    x32 = ofcolor(x20, x30)\n    x33 = combine(x31, x32)\n    x34 = combine(x33, x36)\n    x35 = height(x14)\n    x36 = height(x20)\n    x37 = interval(FOUR, x35, x36)\n    x38 = lbind(compose, flip)\n    x39 = lbind(matcher, first)\n    x40 = compose(x38, x39)\n    x41 = rbind(compose, asobject)\n    "], [1.1, "def solve_034cc5b5(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = connect(ORIGIN, DOWN)\n    x4 = connect(ORIGIN, ZERO_BY_TWO)\n    x5 = combine(x3, x4)\n    x6 = height(I)\n    x7 = equality(x6, TWO)\n    x8 = height(I)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x5, x9)\n    x11 = lbind(apply, last)\n    x12 = compose(x11, first)\n    x13 = chain(positive, positive, x12)\n    x14 = lbind(interval, ZERO)\n    x15 = rbind(x14, ONE)\n    x16 = rbind(sfilter, x13)\n    x17 = compose(x15, last)\n    x18 = fork(pair, x17, x8)\n    x19 = chain(x13, x16, x18)\n    x20 = rbind(branch, identity)\n    x21 = rbind(x20, x19)\n    x22 = chain(size, dedupe, x21)\n    x23 = lbind(equality, ONE)\n    x24 = chain(x22, x23, x19)\n    x25 = compose(initset, x24)\n    x26 = fork(rapply, x25, x22)\n    x27 = compose(first, x26)\n    x28 = extract(x10, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(x30)\n    x32 = palette(x31)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(404, x33)\n    x35 = ofcolor(x31, ONE)\n    x36 =    6000dederence(x35)\n    x37 = product(x36, x36)\n    x38 = fork(equality, identity, vmirror)\n    x39 = apply(x38, x37)\n    x40 = insert"], [1.1, "def solve_03a7b060(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_7df75ef6(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_43342523(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = rbind(compose, x30)\n    x37 = lbind(compose, x30)\n    x38 = lbind(lbind, subtract)\n    x39 = compose(x37, x38)\n    x40 = lbind(compose, x33)\n    x41 = compose(x39, x40)\n    x42 = fork(sfilter, x35"], [1.1, "def solve_32b51cdb(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, last)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, first)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, x10)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, x12)\n    x15 = rbind(shift, ZERO_BY_TWO)\n    x16 = compose(x15, x14)\n    x17 = rbind(shift,12chain)\n    x18 = compose(x17, first)\n    x19 = lbind(recolor, ZERO)\n    x20 = compose(x19, ulcorner)\n    x21 = fork(combine, x18, x20)\n    x22 = chain(x5, first, x21)\n    x23 = fork(paint, identity, x22)\n    x24 = chain(x5, first, x18)\n    x25 = fork(multiply, identity, x24)\n    x26 = chain(x5, last, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = fork(add, x23, x27)\n    x29 = fork(add, x28, x28)\n    x30 = compose(last, x29)\n    x31 = rbind(argmin, x30)\n    x32 = lbind( Recreurrences, x9)\n    x33 = compose(first, x32)\n    x34 = fork(add, x33, x29)\n    x35 = compose(x31, x34)\n    x36 = fork(65935, first, x35)"], [1.1, "def solve_10bcf21a(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_f96999e7(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_afdda1c5(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_67d7471b(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 =Rbind(colorcount, x10)\n    x12 = normalize(I)\n    x13 =91(x11)\n    x14 = color(x12)\n    x15 = remove(x3, x8)\n    x16 = apply(first, x15)\n    x17 = last(x15)\n    x18 = objects(x6, T, T, T)\n    x19 = colorfilter(x18, x14)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = interval(ZERO, x21, ONE)\n    x23 = asobject(x22)\n    x24 = rbind(first, x10)\n    x25 = apply(x24, x23)\n    x26 = astuple(x21, x25)\n    x27 = x26(x23)\n    x28 = x26(x24)\n    x29 = x28(x27)\n    x30 = x28(x24)\n    x31 = x29(x canvas)\n    x32 = fill(x31, x11, x27)\n    x33 = fill(x32, x10, x27)\n    x34 = fill(x33, x14, x20)\n    x35 = fill(x34, x13, x29)\n    x36 = ofcolor(x35, x10)\n    x37 = rbind(contained, x36)\n    x38 = compose(x37, ulcorner)\n    x39 = sfilter(x43, x38)\n    x40 = shape(x39)\n    x41 = subtract(x40, DOWN)\n    x42 = canvas(x"], [1.1, "def solve_c9621d7e(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_421f7fa5(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_1cc3a4ac(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = chain(rot90, x24, x27)\n    x29 = power(x28, FOUR)\n    x30 = compose(first, x29)\n    x31 = multiply(TEN, THREE)\n    x32 = power(x30, x31)\n    x33 = fork(astuple, x29, x32)\n    x34 = size(x467)\n    x35 = power(x33, x34)\n    x36 = astuple(x35, x27)\n    x37 = lbind(canvas, x35)\n    x38 = lbind(prapply, x37)\n    x39"], [1.1, "def solve_4c68eff4(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_d4df188a(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = rbind(ofcolor, ZERO)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = remove(ORIGIN, x1)\n    x5 = lbind(argmin, x4)\n    x6 = lbind(lbind, manhattan)\n    x7 = compose(x5, x6)\n    x8 = compose(x3, x7)\n    x9 = lowermost(x7)\n    x10 = rightmost(x7)\n    x11 = matcher(x8, x9)\n    x12 = leftmost(x7)\n    x13 = matcher(x8, x12)\n    x14 = uppermost(x7)\n    x15 =rightmost(x7)\n    x16 = matcher(x14, x15)\n    x17 = uppermost(x7)\n    x18 = matcher(x17, x16)\n    x19 = rightmost(x7)\n    x20 = matcher(x19, x18)\n    x21 = leftmost(x7)\n    x22 = matcher(x21, x15)\n    x23 = leftmost(x7)\n    x24 = matcher(x23, x12)\n    x25 = rightmost(x7)\n    x26 = matcher(x25, x15)\n    x27 = fork(add, x26, x7)\n    x28 = fork(add, x27, x14)\n    x29 = fork(add, x28, x20)\n    x30 = fork(add, x29, x21)\n    x31 = palette(I)\n    x32 = lbind(sfilter, x31)\n    x33 = lbind(matcher, identity)\n    x34 = compose(x33, x30)\n    x35 = chain(size, x32, x34)\n    x36 = ofcolor(I, ZERO)\n    x37 = palette(I)\n    x38 = repeat(x16, x38)\n    x39 =\n     leftmost(x39)\n    x40 = trim(I)\n    "], [1.1, "def solve_3b0afb7f(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_28e252af(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = rbind(order, leftmost)\n    x4 = chain(x3, toindices, x2)\n    x5 = lbind(contained, x1)\n    x6 = compose(x5, x4)\n    x7 = fork(223(x6, fork, identity)\n    x8 = extract(x1, x7)\n    x9 = x5(x8)\n    x10 = branch(x9, identity, dmirror)\n    x11 = x10(x1)\n    x12 = replace(x11, EIGHT, x9)\n    x13 = x10(x2)\n    x14 = branch(x13, identity, vmirror)\n    x15 = x14(x13)\n    x16 = trim(x15)\n    x17 = mostcolor(x16)\n    x18 = repeat(x16, ONE)\n    x19 = mapply(d43, x18)\n    x20 = x14(x19)\n    x21 = replace(x20, EIGHT, x17)\n    x22 = x10(x21)\n    x23 = replace(x22, righthalf, x17)\n    x24 = replace(x23,nah to, x17)\n    x25 = dmirror(x24)\n    x26 = width(x22)\n    x27 = add(x26, DOWN)\n    x28 = dmirror(x25)\n    x29 = add(x28, x26)\n    x30 = invert(x29)\n    x31 = width(x22)\n    x32 = increment(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = asobject(x22)\n    x35 = ZERO(x34)\n    x36 = ofcolor(x10, x17)\n    x37 = shift(x36, last)\n    x38 = paint(x12, x37)\n    x39 = double(x30)\n    x40 = downscale(x38, x39)\n    x41 = interval"], [1.1, "def solve_15884ee1(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, ONE)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)"], [1.1, "def solve_fb219415(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = lbind(colorfilter, x1)\n    x5 = compose(size, x4)\n    x6 = matcher(x5, TWO)\n    x7 = asindices(I)\n    x8 = box(x7)\n    x9 = rbind(difference, x8)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(size, x9, x10)\n    x12 = matcher(x11, ZERO)\n    x13 = rbind(greater, ONE)\n    x14 = lbind(apply, size)\n    x15 = lbind(colorfilter, x1)\n    x16 = compose(x14, x15)\n    x17 = chain(x13, minimum, x16)\n    x18 = fork(both, x12, x17)\n    x19 = fork(both, x6, x18)\n    x20 = extract(x3, x19)\n    x21 = other(x3, x20)\n    x22 = ofcolor(I, x21)\n    x23 = colorfilter(x1, x20)\n    x24 = rbind(vmatching, x22)\n    x25 = rbind(hmatching, x22)\n    x26 = fork(either, x24, x25)\n    x27 = extract(x23, x26)\n    x28 = other(x23, x27)\n    x29 = rbind(gravitate, x27)\n    x30 = compose(x29, initset)\n    x31 = fork(add, identity, x30)\n    x32 = fork(connect, identity, x31)\n    x33 = mapply(x32, x22)\n    x34 = fill(I, x21, x33)\n    x35 = fill(x34, FOUR, x22)\n    x36 = ofcolor(I, x20)\n    x37 = apply(first, x36)\n    x38 = size(x37)\n    x39 = apply"], [1.1, "def solve_a2d4c73b(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(identity, dmirror)\n    x5 = astuple(cmirror, hmirror)\n    x6 = combine(x4, x5)\n    x7 = rbind(rapply, I)\n    x8 = compose(first, x7)\n    x9 = chain(x3, x8, initset)\n    x10 = extract(x6, x9)\n    x11 = x10(I)\n    x12 = mostcolor(I)\n    x13 = palette(I)\n    x14 = remove(x12, x13)\n    x15 = other(x14, TWO)\n    x16 = ofcolor(x11, x15)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, identity, vmirror)\n    x20 = x19(x11)\n    x21 = ofcolor(x20, x15)\n    x22 = ofcolor(x20, TWO)\n    x23 = apply(last, x22)\n    x24 = insert(ZERO, x23)\n    x25 = width(x20)\n    x26 = insert(x25, x24)\n    x27 = order(x26, identity)\n    x28 = last(x27)\n    x29 = remove(x28, x27)\n    x30 = first(x27)\n    x31 = remove(x30, x27)\n    x32 = pair(x29, x31)\n    x33 = size(x29)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = pair(x34, x32)\n    x36 = lbind(fork, connect)\n    x37 = compose(first, last)\n    x38 = chain(decrement, last, last)\n    x39 = lbind(lbind, add)\n    x40 = compose(x39, first)\n    x41 = lbind("], [1.1, "def solve_263f7412(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = rapply(x30, x2)\n    x32 = first(x31)\n    x33 = last(x31)\n    x34 =    x32(I)\n    x35 = dmirror(x34)\n    x36 = dedupe(x35)\n    x37 = chain"], [1.1, "def solve_ffe9c7f9(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, size)\n    x3 =323(I)\n    x4 = sfilter(x3, x2)\n    x5 = fork(apply, vfrontier, hfrontier)\n    x6 = sfilter(x4, x2)\n    x7 = fork(intersection, x5, x6)\n    x8 = chain(size, x7, x8)\n    x9 = matcher(x8, ZERO)\n    x10 = matcher(TWO, ONE)\n    x11 = sfilter(x4, x9)\n    x12 = sfilter(x4, x10)\n    x13 = merge(x11)\n    x14 = fill(I, TWO, x13)\n    x15 = merge(x12)\n    x16 = width(x15)\n    x17 = ulcorner(x15)\n    x18 =27(x16)\n    x19 = subtract(x17, x18)\n    x20 = increment(x19)\n    x21 = width(x20)\n    x22 = subtract(x17, x21)\n    x23 = RIGHT(x20, x22)\n    x24 = sfilter(x4, x23)\n    x25 = chain(first, last, first)\n    x26 = totuple(x24)\n    x27 = apply(x25, x26)\n    x28 = combine(x28, x27)\n    x29 = lbind(colorcount, x14)\n    x30 = argmax(x29, x28)\n    x31 = remove(x30, x30)\n    x32 = first(x31)\n    x33 = ofcolor(x32, x32)\n    x34 = shift(x33, x323)\n    x35 = combine(x28, x34)\n    x36 = recolor(x32, x35)\n    x37 = shift(x33, x327)\n    x38 = occurrences(x38, x37)\n    x39 = mapply(toindices, x38)\n    x40 = lbind(mapply, x5)\n"], [1.1, "def solve_19ce1e47(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = compose(leftmost, first)\n    x13 = compose(leftmost, last)\n    x14 = fork(equality, x12, x13)\n    x15 = compose(uppermost, first)\n    x16 = compose(uppermost, last)\n    x17 = fork(equality, x15, x16)\n    x18 = fork(either, x14, x17)\n    x19 = sfilter(x11, x18)\n    x20 = compose(color, first)\n    x21 = compose(center, first)\n    x22 = compose(center, last)\n    x23 = fork(connect, x21, x22)\n    x24 = fork(recolor, x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = matcher(last, ZERO)\n    x28 = decrement(x26)\n    x29 = matcher(last, x28)\n    x30 = fork(either, x27, x29)\n    x31 = matcher(first, ZERO)\n    x32 = decrement(x25)\n    x33 = matcher(first, x32)\n    x34 = fork(either, x31, x33)\n    x35 = toindices(x5)\n    x36 = sfilter(x35, x30)\n    x37 = equality(x35, x36)\n    x38 = mapply(x24, x19)\n    x39 = paint(I, x38)\n    x40 = branch(x37, x30, x34)\n    "], [1.1, "def solve_3da22d9e(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = colorfilter(x2, x1)\n    x4 = rbind(bordering, I)\n    x5 = compose(flip, x4)\n    x6 = mfilter(x3, x5)\n    x7 = outbox(x6)\n    x8 = subgrid(x7, I)\n    x9 = trim(x8)\n    x10 = palette(x9)\n    x11 = matcher(identity, x1)\n    x12 = argmin(x10, x11)\n    x13 = trim(x8)\n    x14 = ofcolor(x13, x12)\n    x15 = shift(x14, UNITY)\n    x16 = matcher(first, x12)\n    x17 = rbind(sfilter, x16)\n    x18 = compose(flip, x17)\n    x19 = rbind(sfilter, x18)\n    x20 = chain(normalize, x17, x19)\n    x21 = mostcolor(x10)\n    x22 = ofcolor(x8, x21)\n    x23 = combine(x15, x22)\n    x24 = fill(x8, x12, x23)\n    x25 = difference(x19, x22)\n    x26 = ofcolor(x24, x25)\n    x27 = asindices(x24)\n    x28 = ofcolor(x24, x12)\n    x29 = leftmost(x28)\n    x30 = invert(x29)\n    x31 = shift(x27, x30)\n    x32 = lbind(shift, x28)\n    x33 = apply(x32, x31)\n    x34 = mapply(x24, x33)\n    x35 = fill(x24, x12, x34)\n    x36 = lbind(shift, x29)\n    x37 = mapply(x36, x31)\n    x38 = shift(x37, x32)\n    x39 = combine(x35, x38)\n    O = fill"], [1.1, "def solve_52642045(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_27032fba(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(add, x28, x33)\n    x34 = argmax(x1, x33)\n    x35 = x30(x34)\n    x36 = x30(x36)\n    "], [1.1, "def solve_627a25f5(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_7e4a9a9c(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 =42568b91\n    70446868723\n    2872536926\n    3797228669\n    2973625214\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 =42568b91000\n    70886868723\n    2872536926\n    3797228669\n    2973625214\n    0658658066\n    0281869366\n    09600060591\n    1763502461\n    \"\"\"\n    x1 = canvas(x3, THREE_BY_THREE)\n    x2 = toobject(x1, I)\n    x3 = asobject(x2)\n    x4 = vmirror(x3)\n    x5 = hline(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = asobject(x7)\n    x9 = matcher(first, x3)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = sfilter(x8, x9)\n    x13 = height(x12)\n    x14 = width(x12)\n    x15 = divide(x13, x14)\n    x16 = astuple(x15, x13)\n    x17 = mostcolor(I)\n    x18 = canvas(x17, x16)\n    x19 = multiply(x18, x509)\n    x20 = canvas(x17, x19)\n    x21 = asobject(x20)\n    x22 = frontiers(x21)\n    x23 = merge(x22)\n    x24 = paint(x18, x23)\n    x25 = objects(x24, F, F, T)\n    x26 = first(x25)\n    x27 = mostcolor(x26)"], [1.1, "def solve_d7342afd(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(identity, dmirror)\n    x5 = astuple(cmirror, hmirror)\n    x6 = combine(x4, x5)\n    x7 = rbind(rapply, I)\n    x8 = compose(first, x7)\n    x9 = chain(x3, x8, initset)\n    x10 = extract(x6, x9)\n    x11 = x10(I)\n    x12 = mostcolor(I)\n    x13 = palette(I)\n    x14 = remove(x12, x13)\n    x15 = other(x14, FIVE)\n    x16 = ofcolor(x11, x15)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, identity, vmirror)\n    x20 = x19(x11)\n    x21 = ofcolor(x20, x15)\n    x22 = ofcolor(x20, FIVE)\n    x23 = intersection(x21, x22)\n    x24 = fill(x20, TWO, x23)\n    x25 = lbind(contained, x15)\n    x26 = compose(first, last)\n    x27 = sfilter(x22, x26)\n    x28 = difference(x22, x27)\n    x29 = fill(x24, TWO, x288)\n    x30 = objects(x29, T, F, T)\n    x31 = colorfilter(x30, TWO)\n    x32 = difference(x30, x31)\n    x33 = first(x32)\n    x34 = power(outbox, TWO)\n    x35 = compose(first, last)\n    x36 = fork(equality, identity, x35)\n    x37 = compose(last, first)\n    x38 = fork(equality, identity, x37)\n    x39 = sfilter(x33, x38)\n    x40"], [1.1, "def solve_e252e7c4(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_a0293036(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = add(UNITY, UNITY)\n    x3 =insert(UNITY, x2)\n    x4 = merge(x3)\n    x5 = dmirror(x4)\n    x6 = invert(NEG_TWO)\n    x7 = shift(x5, x6)\n    x8 = astuple(NEG_TWO, ONE)\n    x9 = hmirror(x8)\n    x10 = vmirror(x9)\n    x11 = insert(x10, x8)\n    x12 = invert(x11)\n    x13 = shift(x13, x12)\n    x14 = combine(x7, x13)\n    x15 = I(x14)\n    x16 = combine(x7, x13)\n    x17 = I(x16)\n    x18 = palette(x15)\n    x19 = lbind(colorcount, x15)\n    x20 = compose(x19, color)\n    x21 = argmin(x18, x20)\n    x22 = rbind(colorcount, x21)\n    x23 = apply(x22, x16)\n    x24 = maximum(x23)\n    x25 = increment(x24)\n    x26 = interval(ONE, x25, ONE)\n    x27 = apply(x26, x24)\n    x28 = astuple(x24, x27)\n    x29 = lbind(canvas, x1)\n    x30 = lbind(occurrences, x5)\n    x31 = rbind(rapply, x22)\n    x32 = compose(initset, x31)\n    x33 = chain(first, x31, x32)\n    x34 = rbind(rapply, x22)\n    x35 = compose(initset, x35)\n    x36 = chain(first, x34, x35)\n    x37 = matcher(x33, x21)\n    x38 = fork(both, x37, x25)\n    x39 = compose(flip, x38)\n    x40 = extract(x27"], [1.1, "def solve_5269d9dc(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_3eef444f(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = chain(x4, x5, color)\n    x7 = compose(maximum, shape)\n    x8 = fork(add, x7, x6)\n    x9 = compose(invert, x8)\n    x10 = order(x2, x9)\n    x11 = rbind(add, DOWN)\n    x12 = compose(x11, ulcorner)\n    x13 = fork(contained, x12, toindices)\n    x14 = rbind(add, RIGHT)\n    x15 = compose(x14, ulcorner)\n    x16 = fork(contained, x15, toindices)\n    x17 = fork(add, x13, x16)\n    x18 = rbind(argmax, x17)\n    x19 = compose(initset, identity)\n    x20 = fork(insert, vmirror, x19)\n    x21 = fork(insert, cmirror, x20)\n    x22 = fork(insert, hmirror, x21)\n    x23 = compose(x18, x22)\n    x24 = apply(x23, x10)\n    x25 = size(x2)\n    x26 = apply(size, x2)\n    x27 = contained(ONE, x26)\n    x28 = increment(x25)\n    x29 = branch(x27, x25, x28)\n    x30 = double(x29)\n    x31 = decrement(x30)\n    x32 = apply(normalize, x24)\n    x33 = interval(ZERO, x29, ONE)\n    x34 = pair(x33, x33)\n    x35 = mpapply(shift, x32, x34)\n    x36 = astuple(x31, x31)\n    x37 = canvas(x1, x36)\n    x38 = paint(x37, x35)\n    x39 ="], [1.1, "def solve_6dc31a12(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = size(x1)\n    x5 = positive(x4)\n    x6 = branch(x5, hsplit, vsplit)\n    x7 = x6(I, TWO)\n    x8 = first(x7)\n    x9 = last(x7)\n    x10 = palette(x8)\n    x11 = matcher(identity, x9)\n    x12 = palette(x8)\n    x13 = sfilter(x10, x11)\n    x14 = size(x13)\n    x15 = positive(x14)\n    x16 = branch(x15, identity, dmirror)\n    x17 = x16(x6)\n    x18 = first(x17)\n    x19 = flip(x15)\n    x20 = hmirror(x18)\n    x21 = palette(x20)\n    x22 = lbind(colorcount, x20)\n    x23 = compose(x22, argmin)\n    x24 = rbind(colorcount, x3)\n    x25 = chain(x24, positive, x23)\n    x26 = lbind(ofcolor, x18)\n    x27 =88(x25, x20)\n    x28 = ZERO(x27)\n    x29 = lbind(subtract, x28)\n    x30 = compose(x29, last)\n    x31 = fork(argmin, x30, x21)\n    x32 = x31(x6)\n    x33 = x30(x32)\n    x34 = ofcolor(x33, x3)\n    x35 = gravitate(x34, x32)\n    x36 = x31(x35)\n    x37 = x30(x36)\n    x38 = crop(x37, x4, xitset)\n    x39 = lbind(argmin, x38)\n    x40 = lbind(rbind, manhattan)\n    x41 = compose(x39, x40)\n    x42 = fork(remove, x41"], [1.1, "def solve_839a7b8a(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18, x"], [1.1, "def solve_0a5cd984(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_b920fc30(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind"], [1.1, "def solve_685f3cdc(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = leastcolor(I)\n    x9 = rbind(ofcolor, x8)\n    x10 = rbind(rapply, I)\n    x11 = chain(first, x10, initset)\n    x12 = chain(hline, x9, x11)\n    x13 = rbind(ofcolor, x8)\n    x14 = rbind(rapply, I)\n    x15 = chain(first, x14, initset)\n    x16 = chain(leftmost, x13, x15)\n    x17 = matcher(x16, ZERO)\n    x18 = fork(both, x12, x17)\n    x19 = compose(x18, first)\n    x20 = extract(x7, x19)\n    x21 = first(x20)\n    x22 = last(x20)\n    x23 = x21(I)\n    x24 = ofcolor(x23, x8)\n    x25 = argmax(x24, last)\n    x26 = add(x25, UP_RIGHT)\n    x27 = shoot(x26, UP_RIGHT)\n    x28 = add(x25, DOWN_LEFT)\n    x29 = shoot(x28, DOWN_LEFT)\n    x30 = rbind(shoot, LEFT)\n    x31 = mapply(x30, x27)\n    x32 = rbind(shoot, LEFT)\n    x33 = mapply(x32, x29)\n    x34 = width(x23)\n    x35 = invert(x34)\n    x36 = tojvec(x35)\n    x37 = shift(x31, x36)\n    x38 = combine(x31, x37)\n    x39 ="], [1.1, "def solve_d65a73a7(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = height(I)\n    x9 = astuple(x8, ONE)\n    x10 = canvas(THREE, x9)\n    x11 = hconcat(x10, I)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = identity(DOWN)\n    x17 = connect(ORIGIN, x15)\n    x18 = fill(x11, THREE, x17)\n    x19 = identity(x13)\n    x20 = identity(x12)\n    x21 = identity(x12)\n    x22 = identity(F)\n    x23 = identity(ZERO)\n    x24 = compose(first, first)\n    x25 = chain(first, last, x24)\n    x26 = compose(first, first)\n    x27 = chain(last, last, x26)\n    x28 = chain(first, first, first)\n    x29 = chain(first, last, last)\n    x30 = chain(first, first, last)\n    x31 = chain(last, first, last)\n    x32 = compose(decrement, x25)\n    x33 = compose(decrement, x27)\n    x34 = fork(astuple, x32, x33)\n    x35 = compose(decrement, x27)\n    x36 = fork(multiply, x30, x35)\n    x37 = fork(add, x29, x36)\n    x38 = compose(decrement, x28)\n    x39 = fork(multiply, x30, x38)\n    x40 = fork(add, x29, x39)\n    x41 ="], [1.1, "def solve_bd288950(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = width(I)\n    x2 = decrement(x1)\n    x3 = tojvec(x2)\n    x4 = connect(ORIGIN, x3)\n    x5 = height(I)\n    x6 = decrement(x5)\n    x7 = toivec(x6)\n    x8 = connect(ORIGIN, x7)\n    x9 = width(I)\n    x10 = decrement(x9)\n    x11 = tojvec(x10)\n    x12 = shape(I)\n    x13 = decrement(x12)\n    x14 = connect(x11, x13)\n    x15 = height(I)\n    x16 = decrement(x15)\n    x17 = toivec(x16)\n    x18 = shape(I)\n    x19 = decrement(x18)\n    x20 = connect(x17, x19)\n    x21 = asindices(I)\n    x22 = box(x21)\n    x23 = toobject(x22, I)\n    x24 = mostcolor(x23)\n    x25 = matcher(color, x24)\n    x26 = compose(flip, x25)\n    x27 = rbind(sfilter, x26)\n    x28 = rbind(sizefilter, ONE)\n    x29 = rbind(objects, F)\n    x30 = rbind(x29, F)\n    x31 = rbind(x30, T)\n    x32 = rbind(subgrid, I)\n    x33 = chain(x27, x31, x32)\n    x34 = chain(size, x28, x33)\n    x35 = astuple(x4, x8)\n    x36 = astuple(x14, x20)\n    x37 = combine(x35, x36)\n    x38 = argmax(x37, x34)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, initset)\n    x41 = ofcolor(I, x24)\n    x42 = difference(x38, x41)\n"], [1.1, "def solve_2c656666(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, corners)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = fgpartition(I)\n    x6 = merge(x5)\n    x7 = backdrop(x4)\n    x8 = toobject(x7, I)\n    x9 = difference(x6, x8)\n    x10 = mostcolor(I)\n    x11 = inbox(x4)\n    x12 = backdrop(x11)\n    x13 = toobject(x12, I)\n    x14 = matcher(first, x10)\n    x15 = compose(flip, x14)\n    x16 = sfilter(x13, x15)\n    x17 = subgrid(x9, I)\n    x18 = palette(x16)\n    x19 = order(x18, identity)\n    x20 = lbind(colorcount, x16)\n    x21 = apply(x20, x19)\n    x22 = lbind(colorcount, x9)\n    x23 = apply(x22, x19)\n    x24 = pair(x21, x23)\n    x25 = fork(divide, first, last)\n    x26 = apply(x25, x24)\n    x27 = mostcommon(x26)\n    x28 = lbind(colorcount, x16)\n    x29 = lbind(colorcount, x9)\n    x30 = fork(divide, x28, x29)\n    x31 = matcher(x30, x27)\n    x32 = palette(x9)\n    x33 = sfilter(x32, x31)\n    x34 = rbind(contained, x33)\n    x35 = compose(x34, first)\n    x36 = sfilter(x16, x35)\n    x37 = sfilter(x9, x35)\n    x38 = height(x36)\n    x39 = height(x37)\n    x40 = divide(x38, x39)\n    x41 = width(x36)\n    x42"], [1.1, "def solve_9ea6762b(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_cf8d240f(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_4690cbcb(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = trim(I)\n    x2 = decrement(x1)\n    x3 = tojvec(x2)\n    x4 = connect(ORIGIN, x3)\n    x5 = height(I)\n    x6 = decrement(x5)\n    x7 = toivec(x6)\n    x8 = connect(ORIGIN, x7)\n    x9 = width(I)\n    x10 = decrement(x9)\n    x11 = tojvec(x10)\n    x12 =677(x8)\n    x13 = shape(I)\n    x14 = decrement(x13)\n    x15 = connect(x12, x14)\n    x16 = rbind(multiply, TWO)\n    x17 = apply(x16, x10)\n    x18 = rbind(multiply, FOUR)\n    x19 = apply(x18, x15)\n    x20 = asindices(x1)\n    x21 = ofcolor(I, ZERO)\n    x22 = difference(x20, x21)\n    x23 = rbind(multiply, THREE)\n    x24 = apply(x23, x22)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = astuple(x26, x18)\n    x28 = rbind(multiply, x27)\n    x29 = apply(x28, x26)\n    x30 = rbind(hmatching, x27)\n    x31 = rbind(vmatching, x27)\n    x32 = fork(either, x30, x31)\n    x33 = compose(x32, initset)\n    x34 = ofcolor(I, FIVE)\n    x35 = sfilter(x34, x33)\n    x36 = height(I)\n    x37 = equality(x36, FOUR)\n    x38 = insert(x33, x37)\n    x39 = THREE(x38, x34)\n    x40 = contained(x39, x35)\n    x41 = branch(x40, height, width)\n    x42"], [1.1, "def solve_dd6157f5(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(x32, x38, first)\n    x40 = matcher(x39, x20)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_6598a996(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = fork(connect, ulcorner, lrcorner)\n    x2 = x1(I)\n    x3 = shape(x2)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = subtract(x4, x5)\n    x7 = mostcolor(I)\n    x8 = shape(x2)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x5, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, insert)\n    x16 = lbind(power, inbox)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x4)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x22)\n    x24 = uppermost(x12)\n    x25 = lbind(chain, x24)\n    x26 = lbind(rbind, add)\n    x27 = compose(x26, x13)\n    x28 = lbind(compose, x24)\n    x29 = fork(rapply, x27, x28)\n    x30 = compose(x15, x29)\n    x31 = fork(contained, x23, x30)\n    x32 = compose(invert, x251)\n    x33 = fork(add, x31, x32)\n    x34 = fork(add, x33, x309)\n    x35 = fork(halve, x34, x29)\n    x36 = compose(85556, x27)\n    x37 = fork(86, lrcorner, x36)\n    x38 = compose(toivec, x37"], [1.1, "def solve_31566156(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 =795(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = lbind(chain, positive)\n    x6 = lbind(x5, size)\n    x7 = rbind(compose, backdrop)\n    x8 = lbind(lbind, intersection)\n    x9 = chain(x6, x7, x8)\n    x10 = chain(x9, backdrop, outbox)\n    x11 = lbind(sfilter, x4)\n    x12 = compose(x11, x10)\n    x13 = chain(positive, size, x12)\n    x14 = sfilter(x4, x13)\n    x15 = compose(merge, x12)\n    x16 = apply(x15, x14)\n    x17 = rbind(subgrid, I)\n    x18 = apply(x17, x16)\n    x19 = merge(x16)\n    x20 = palette(x19)\n    x21 = lbind(colorcount, x19)\n    x22 = argmin(x20, x21)\n    x23 = rbind(colorcount, x22)\n    O = argmax(x18, x23)\n    return O"], [1.1, "def solve_7a7784dc(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = replace(I, x1, ZERO)\n    x3 = apply(normalize, x2)\n    x4 = asindices(x3)\n    x5 = NEG_UNITY(x4)\n    x6 = dmirror(x5)\n    x7 = invert(x6)\n    x8 =777652(x3, x7)\n    x9 = shift(x8, x5)\n    O = paint(x2, x9)\n    return O"], [1.1, "def solve_cd53d13c(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = asobject(I)\n    x2 = lbind(shift, x1)\n    x3 = compose(x2, llcorner)\n    x4 = rbind(shift, urcorner)\n    x5 = compose(x4, urcorner)\n    x6 = chain(x3, x5, x4)\n    x7 =11(x6)\n    x8 = height(I)\n    x9 = width(I)\n    x10 = compose(last, last)\n    x11 = subtract(x10, x9)\n    x12 = decrement(x11)\n    x13 = multiply(x12, TWO)\n    x14 = add(x13, x11)\n    x15 = height(I)\n    x16 = subtract(x15, x12)\n    x17 = decrement(x16)\n    x18 = apply(x12, x14)\n    x19 = astuple(x17, x18)\n    x20 = canvas(ZERO, x19)\n    x21 = asobject(x20)\n    x22 = occurrences(I, x21)\n    x23 = mapply(x2, x22)\n    O = fill(x20, ONE, x23)\n    return O"], [1.1, "def solve_2b65b451(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = size(x5)\n    x7 = positive(x6)\n    x8 = bottomhalf(x5)\n    x9 = lefthalf(x8)\n    x10 = branch(x7, x9, x6)\n    x11 = branch(x7,)*9, x10)\n    x12 = delta(x11)\n    x13 = decrement(x12)\n    x14 = uppermost(x11)\n    x15 = remove(x14, x11)\n    x16 = lbind(position, x11)\n    x17 = lbind(shoot, x13)\n    x18 = compose(x16, x17)\n    x19 = fork(intersection, x18, identity)\n    x20 = lowermost(x5)\n    x21 = rbind(multiply, x20)\n    x22 = chain(size, x21, toindices)\n    x23 = argmax(x15, x22)\n    x24 = shape(I)\n    x25 = canvas(x24, x24)\n    x26 = lbind(shift, x11)\n    x27 = mapply(x26, x23)\n    O = paint(x25, x27)\n    return O"], [1.1, "def solve_8f1e439b(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 =7766(I)\n    x4 =66(73)\n    x5 = fork(both, x3, x4)\n    x6 = extract(x2, x5)\n    x7 = other(x6, x1)\n    x8 =171(x7)\n    x9 = multiply(TEN, TEN)\n    x10 = power(outbox, x9)\n    x11 = first(x8)\n    x12 = invert(x11)\n    x13 = shift(x11, x12)\n    x14 = shift(x13, x11)\n    x15 = toindices(x14)\n    x16 = lbind(shift, x15)\n    x17 = rbind(difference, x15)\n    x18 = chain(size, x16, x17)\n    x19 = argmax(x15, x18)\n    x20 = double(x31)\n    x21 = apply(x16, x20)\n    x22 = interval(x21, ONE, ONE)\n    x23 = difference(x21, x22)\n    x24 = apply(x16, x23)\n    x25 = astuple(x24, x15)\n    x26 = canvas(x1, x25)\n    x27 = asindices(x26)\n    x28 = apply(x16, x27)\n    x29 = lbind(argmin, x28)\n    x30 = lbind(shift, x13)\n    x31 = mapply(x30, x29)\n    O = fill(x26, x1, x31)\n    return O"], [1.1, "def solve_5dae2a90(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 =Example output:\n    4446633648\n    1334663362\n    4444463944\n    3344444393\n    4344444401\n    4334443444\n    6484463334\n    6644444446\n    0404486644\n    1154344466\n    \"\"\"\n    x1 = hsplit(I, TWO)\n    O = first(x1)\n    return O"], [1.1, "def solve_b8f7d131(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = extract(x2, x4)\n    x6 =0000(I, x5)\n    x7 = shape(I)\n    x8 = canvas(ZERO, x7)\n    x9 = colorfilter(x2, x1)\n    x10 =\n    maxcolor(I)\n    x11 = shape(I)\n    x12 = decrement(x11)\n    x13 = lbind(astuple, x12)\n    x14 = apply(x13, x9)\n    x15 = rbind(shoot, UNITY)\n    x16 = mapply(x15, x14)\n    x17 = fill(x8, x10, x16)\n    O = fill(x17, x1, x2)\n    return O"], [1.1, "def solve_5ebef8c6(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = matcher(color, ZERO)\n    x5 =423(x3)\n    x6 = sfilter(x3, x4)\n    x7 = difference(x3, x6)\n    x8 = merge(x7)\n    x9 = width(x8)\n    x10 = matcher(color, ZERO)\n    x11 =411(x10)\n    x12 = sfilter(x8, x11)\n    x13 = combine(x6, x12)\n    x14 = merge(x12)\n    x15 = fill(I, THREE, x14)\n    x16 = merge(x12)\n    x17 = fill(x15, ONE, x16)\n    O = replace(x17, ZERO, ONE)\n    return O"], [1.1, "def solve_f0ea7130(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = shape(I)\n    x2 = add(x1, DOWN)\n    x3 = crop(I, ORIGIN, x2)\n    x4 = decrement(x1)\n    x5 = tojvec(x4)\n    x6 = crop(I, x5, x2)\n    x7 = double(x3)\n    x8 = add(x7, TWO)\n    x9 = crop(I, x8, x2)\n    x10 = asobject(x9)\n    x11 =77101ecdecrement\n    x12 = argmin(x10, x11)\n    x13 = mostcolor(x12)\n    x14 = asindices(x12)\n    x15 = astuple(x13, x14)\n    x16 = ulcorner(x12)\n    x17 = rbind(shoot, x16)\n    x18 = mapply(x17, x15)\n    x19 = underfill(I, x13, x18)\n    x20 = objects(x19, T, F, T)\n    x21 = colorfilter(x20, x13)\n    x22 = rbind(bordering, I)\n    x23 = mfilter(x21, x22)\n    O = cover(x19, x23)\n    return O"], [1.1, "def solve_c9412091(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = astuple(FOUR, FOUR)\n    x2 = crop(I, ORIGIN, x1)\n    x3 = TWO_BY_TWO)\n    x4 = asobject(x2)\n    x5 = rbind(multiply, UNITY)\n    x6 = apply(x5, x4)\n    x7 = asobject(x6)\n    x8 = UNITY(x1)\n    x9 = NEG_UNITY)\n    x10 = shift(x7, x9)\n    x11 = paint(I, x10)\n    x12 = toindices(x7)\n    x13 = lbind(shift, x12)\n    x14 = mapply(x13, x6)\n    O = fill(x11, TWO, x14)\n    return O"], [1.1, "def solve_e4a63964(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 =36fcc3(I, ORIGIN)\n    x2 = decrement(x1)\n    x3 = papply(astuple, x2, x4)\n    x4 = lbind(shift, x3)\n    x5 = mapply(x4, x2)\n    O = paint(I, x5)\n    return O"], [1.1, "def solve_d5cc1f65(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = compose(x2, trim)\n    x4 = apply(x3, x1)\n    x5 = lbind(contained, x4)\n    x6 = compose(x5, flip)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(contained, x7)\n    x9 = compose(x8, vsplit)\n    x10 = sfilter(x7, x9)\n    x11 = merge(x10)\n    x12 = lbind(contained, x11)\n    x13 = compose(x12, vmirror)\n    x14 = sfilter(x7, x13)\n    x15 = compose(size, x7)\n    x16 = size(x14)\n    x17 = greater(x15, x16)\n    x18 = subgrid(x14, I)\n    x19 = trim(x18)\n    x20 = lefthalf(x19)\n    x21 = righthalf(x19)\n    x22 = vmirror(x21)\n    x23 = objects(x20, T, F, T)\n    x24 = merge(x23)\n    x25 =422(x24)\n    x26 = cellwise(x25, x20, x08)\n    x27 = order(x26, identity)\n    x28 = first(x27)\n    x29 = last(x27)\n    x30 = x28(x20)\n    x31 = flip(x30)\n    x32 = replace(x20, x24, x7)\n    x33 = replace(x32, x24, x9)\n    x34 = branch(x31, x33, x24)\n    O = x15(x34, x39)\n    return O"], [1.1, "def solve_a520631b(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = totuple(x2)\n    x4 = apply(color, x3)\n    x5 = mostcommon(x4)\n    x6 =467618(UNITY)\n    x7 = canvas(x5, UNITY)\n    O = paint(x7, x6)\n    return O"], [1.1, "def solve_d115a417(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 =96(I, identity)\n    x2 =44(x1, identity)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, lefthalf, tophalf)\n    x5 = x4(I)\n    x6 = bottomhalf(I)\n    x7 = index(x5, ORIGIN)\n    x8 = palette(x6)\n    x9 = palette(x7)\n    x10 = intersection(x8, x9)\n    x11 = remove(x7, x10)\n    x12 = palette(x6)\n    x13 = other(x12, x11)\n    x14 = palette(x6)\n    x15 = other(x14, x13)\n    x16 = intersection(x15, x13)\n    x17 = ofcolor(x5, x13)\n    x18 = ofcolor(x6, x13)\n    x19 = combine(x17, x18)\n    x20 = fill(x5, x13, x19)\n    O = x4(x20)\n    return O"], [1.1, "def solve_2de33c8d(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(UP, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = fork(combine, initset,000000\n    x9 = compose(x8, first)\n    x10 = compose(x8, last)\n    x11 = fork(difference, x9, x10)\n    x12 = compose(x11, toindices)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = matcher(first, x15)\n    x18 = compose(flip, x17)\n    x19 = sfilter(x15, x18)\n    x20 = dmirror(x19)\n    x21 = subtract(x16, x20)\n    x22 = branch(x21, hsplit, vsplit)\n    x23 = merge(x22)\n    x24 = sfilter(x22, x23)\n    x25 = dmirror(x24)\n    x26 = shape(x25)\n    x27 = add(x26, TWO_BY_ZERO)\n    x28 = canvas(ZERO, x27)\n    x29 = asobject(x28)\n    x30 = shift(x29, UNITY)\n    O = paint(x26, x30)\n    return O"], [1.1, "def solve_ce575692(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 =725312 ofsubtract(NINE, ZERO)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [1.1, "def solve_49a2feb2(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = sizefilter(x2, ONE)\n    x4 = apply(size, x3)\n    x5 = dedupe(x4)\n    x6 = objects(I, T, F, F)\n    x7 = merge(x6)\n    x8 = size(x7)\n    x9 = equality(x1, x8)\n    x10 = branch(x9, height, width)\n    x11 = x10(x7)\n    x12 = x10(x8)\n    x13 = subtract(x11, x12)\n    x14 = shift(x5, x13)\n    x15 = other(x1, x14)\n    x16 = x10(x10)\n    x17 = color(x15)\n    x18 = hmirror(I)\n    x19 = cover(I, x18)\n    x20 = objects(x19, T, F, T)\n    x21 = apply(toindices, x20)\n    x22 = fork(either, x21, box)\n    x23 = sfilter(x4, x22)\n    x24 = manhattan(x23, x35)\n    x25 = palette(x23)\n    x26 =recolor(x25, x24)\n    x27 = argmin(x26, x24)\n    x28 = other(x25, x27)\n    x29 = color(x28)\n    x30 = mmirror(x28)\n    x31 = recolor(x28, x30)\n    x32 = combine(x27, x31)\n    x33 = paint(x19, x32)\n    x34 = ofcolor(x33, x29)\n    x35 =441\n     gravitate(x34, x31)\n    x36 = shift(x34, x35)\n    x37 = shift(x36, x34)\n    x38 = combine(x34, x37)\n    x39 = paint(x33, x38)\n    O = x10(x39)\n    return O"], [1.1, "def solve_d11b4a3e(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = rbind(remove, TWO)\n    x2 = compose(x1, last)\n    x3 = rbind(multiply, THREE)\n    x4 = compose(x3, x2)\n    x5 = fork(equality, identity, x4)\n    x6 = compose(x5, first)\n    x7 = extract(x1, x6)\n    x8 = last(x7)\n    x9 = first(x8)\n    x10 = last(x7)\n    x11 = x2(x9)\n    x12 = x2(x10)\n    x13 =9999(first, x11)\n    x14 =9999(first, x12)\n    x15 = cover(I, x11)\n    x16 = fill(x15, ONE, x13)\n    x17 = fill(x16, TWO, x14)\n    O = x2(x17)\n    return O"], [1.1, "def solve_ab2533b2(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = toivec(x1)\n    x5 = crop(I, ORIGIN, x4)\n    x6 =2295587375 asobject(x5)\n    x7 = palette(I)\n    x8 = matcher(identity, x4)\n    x9 = argmin(x7, x8)\n    x10 = asindices(I)\n    x11 = ofobject(x10, I)\n    x12 = difference(x10, x11)\n    x13 = ofcolor(I, x9)\n    x14 = rbind(interval, ONE)\n    x15 = rbind(x14, FOUR)\n    x16 = rbind(sfilter, x15)\n    x17 = lbind(occurrences, I)\n    x18 = lbind(lbind, shift)\n    x19 = compose(x17, x18)\n    x20 = lbind(recolor, x9)\n    x21 = rbind(mapply, x19)\n    x22 = rbind(occurrences, x16)\n    x23 = compose(x22, x18)\n    x24 = fork(apply, x23, x19)\n    x25 = fork(combine, x12, x24)\n    x26 =apply(x25, x3)\n    x27 = ofcolor(I, x9)\n    x28 = mapply(toindices, x27)\n    x29 = fill(I, x9, x28)\n    x30 = mapply(x25, x3)\n    x31 = fill(x29, x10, x30)\n    O = replace(x31, x4, SIX)\n    return O"], [1.1, "def solve_a4a355a4(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 =33333(I)\n    x2 =4213175300\n    4213171351\n    4292302363\n    6932577355\n    7360476287\n    3277069433\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = ofcolor(I, ONE)\n    x3 = lowermost(x2)\n    x4 = lbind(subtract, x3)\n    x5 = chain(toivec, x4, lowermost)\n    x6 = fork(shift, identity, x5)\n    x7 = merge(x1)\n    x8 = cover(I, x7)\n    x9 = mapply(x6, x1)\n    O = paint(x8, x9)\n    return O"], [1.1, "def solve_8e3746e4(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 =637585(I)\n    x2 = mostcolor(I)\n    x3 = lefthalf(x1)\n    x4 = righthalf(x1)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(x3)\n    x8 = x6(x3)\n    x9 = shape(x3)\n    x10 = palette(x3)\n    x11 = palette(x3)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x13, x13)\n    x15 = ofcolor(x13, x6)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [1.1, "def solve_832f21a1(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = cover(I, x2)\n    x4 = apply(normalize, x1)\n    x5 = chain(size, dedupe, flip)\n    x6 = argmax(x4, x5)\n    x7 = repeat(x6, ONE)\n    x8 = merge(x7)\n    x9 = repeat(x6, ONE)\n    x10 = compose(increment, height)\n    x11 = chain(greater, maximum, x10)\n    x12 = compose(x11, asobject)\n    x13 =7777(x12)\n    x14 = upscale(x13, TWO)\n    x15 = shift(x14, TWO_BY_TWO)\n    x16 = paint(x3, x15)\n    x17 = toindices(x15)\n    x18 = lbind(contained,ZERO)\n    x19 = compose(x18, last)\n    x20 = sfilter(x17, x19)\n    x21 =64(x20)\n    x22 = shift(x21, UNITY)\n    O = paint(x16, x22)\n    return O"], [1.1, "def solve_ec52659b(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 =Example output:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9210880830\n    2048742800\n    3626664135\n    8001913937\n    \"\"\"\n    x2 = objects(I, T, F, T)\n    x3 = colorfilter(x2, ZERO)\n    x4 = difference(x2, x3)\n    x5 = merge(x4)\n    x6 = rbind(shoot, DOWN)\n    x7 = mapply(x6, x5)\n    x8 = fill(I, ONE, x7)\n    x9 = mapply(x6, x3)\n    O = fill(x8, TWO, x9)\n    return O"], [1.1, "def solve_054db099(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(ORIGIN, DOWN_LEFT)\n    x5 = rbind(multiply, x4)\n    x6 = apply(x5, x3)\n    x7 =89700cd78\n    x8 = rightmost(x7)\n    x9 = lbind(shift, x8)\n    x10 = mapply(x9, x6)\n    O = paint(I, x10)\n    return O"], [1.1, "def solve_c34ac857(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 =\u2026izet(TWO)\n    x4 = initset(TWO)\n    x5 = recolor(TWO, x3)\n    x6 = recolor(THREE, x2)\n    x7 = insert(x5, x6)\n    x8 = insert(x7, x5)\n    x9 = fill(I, TWO, x8)\n    O = fill(x9, UNITY, x7)\n    return O"], [1.1, "def solve_9fb1c023(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = lefthalf(x1)\n    x4 = righthalf(x1)\n    x5 = tophalf(x4)\n    x6 = righthalf(x4)\n    x7 = bottomhalf(x6)\n    x8 = index(x3, ORIGIN)\n    x9 = palette(x3)\n    x10 =6042(x9)\n    x11 = palette(x3)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = recolor(x13, x1)\n    x16 = recolor(x14, x11)\n    x17 = combine(x15, x16)\n    x18 = combine(x15, x16)\n    x19 = recolor(x17, x1)\n    x20 = occurrences(x4, x17)\n    x21 = outbox(x20)\n    x22 = ofcolor(x3, x13)\n    x23 = urcorner(x22)\n    x24 = ofcolor(x3, x14)\n    x25 = intersection(x23, x24)\n    x26 = first(x25)\n    x27 = shape(I)\n    x28 = canvas(x8, x27)\n    O = fill(x28, x13, x26)\n    return O"], [1.1, "def solve_0c490705(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, positive, branch)\n    x6 = branch(x4, mostcolor, x5)\n    x7 = canvas(x6, UNITY)\n    x8 = add(NEG_UNITY, NEG_UNITY)\n    x9 = shape(I)\n    x10 = maximum(x9)\n    x11 = lbind(multiply, x10)\n    x12 = chain(x11, maximum, initset)\n    x13 = compose(x12, x7)\n    x14 = lbind(intersection, x13)\n    x15 = compose(size, x14)\n    x16 = argmax(x6, x15)\n    x17 = objects(x6, T, F, T)\n    x18 = color(x16)\n    x19 = lbind(recolor, x18)\n    x20 = rbind(argmax, rightmost)\n    x21 = chain(x20, x19, x9)\n    x22 =lbind(apply, x21)\n    x23 = fork(toindices, x22, x17)\n    x24 = fork(mapply, x23, x19)\n    x25 = mostcolor(I)\n    x26 = ofcolor(I, x25)\n    x27 =9 asindices(I)\n    x28 = objects(x6, T, F, T)\n    x29 = rbind(argmax, x27)\n    x30 = fork(recolor, color, x29)\n    x31 = mapply(x30, x28)\n    x32 = paint(x7, x31)\n    x33 = mapply(x27, x34)\n    O = paint(x32, x33)\n    return O"], [1.1, "def solve_d010946c(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = rbind(ofcolor, ORIGIN)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = lefthalf(I)\n    x5 = righthalf(I)\n    x6 = leftmost(x1)\n    x7 =114(x6)\n    x8 = tojvec(x7)\n    x9 = add(x8, THREE)\n    x10 = shift(x4, x9)\n    x11 = fill(I, ZERO, x10)\n    x12 = merge(x11)\n    O = fill(x11, FOUR, x12)\n    return O"], [1.1, "def solve_fc36ca3c(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = occurrences(x1, x2)\n    x4 = leastcolor(x1)\n    x5 = palette(x1)\n    x6 = repeat(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = leastcolor(x1)\n    x9 = palette(x1)\n    x10 = remove(x8, x9)\n    x11 = remove(x8, x10)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = ofcolor(x13, x12)\n    x15 = astuple(x14, x13)\n    x16 = ulcorner(x12)\n    x17 = crop(x15, x16, x15)\n    x18 = asobject(x17)\n    x19 = hperiod(x18)\n    x20 = height(I)\n    x21 = astuple(x20, x13)\n    x22 = ulcorner(x5)\n    x23 = crop(x22, ORIGIN, x22)\n    x24 = hperiod(x23)\n    x25 = astuple(x24, x14)\n    x26 = increment(x25)\n    x27 = interval(ONE, x26, ONE)\n    x28 = product(x27, x27)\n    x29 = lbind(multiply, x ONE)\n    x30 = apply(x29, x28)\n    x31 = lbind(shift, x18)\n    x32 = mapply(x31, x30)\n    x33 = paint(x17, x32)\n    x34 = rot90(x33)\n    x35 =    020(I)\n    x36 =\n    0233358330(x35)\n    x37 = rot270(x36)\n    x38 = papply(shift, x32, x37)\n    x39 = apply(x21, x38)\n    O = paint(x33, x39)\n    return O"], [1.1, "def solve_be366381(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 =444449713834)\n    x2 =4771231458\n    x3 = shape(I)\n    x4 = decrement(x3)\n    x5 = index(I, x4)\n    x6 = equality(x5, FOUR)\n    x7 = branch(x6, UP, RIGHT)\n    x8 = canvas(x7, x4)\n    x9 = equality(x1, TWO)\n    x10 = branch(x9, RIGHT, DOWN)\n    x11 = branch(x10, LEFT, RIGHT)\n    x12 = greater(x11, TWO)\n    x13 = branch(x12,phalf, lefthalf)\n    x14 = branch(x12, numcolors,(x13)\n    x15 = branch(x12,33, FOUR)\n    x16 = x15(I)\n    x17 = mostcolor(x16)\n    x18 = shape(I)\n    x19 = canvas(x17, x18)\n    x20 = hconcat(x16, x19)\n    x21 = objects(x20, F, F, T)\n    x22 = argmax(x21, numcolors)\n    x23 = asindices(x22)\n    x24 = matcher(first, x17)\n    x25 = sfilter(x23, x24)\n    x26 = difference(x23, x25)\n    x27 = mostcolor(x26)\n    x28 = color(x22)\n    x29 = fill(x20, x27, x28)\n    x30 = ulcorner(x22)\n    x31 = width(x22)\n    x32 = divide(x30, x31)\n    x33 = increment(x32)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = merge(x41)\n    x36 = cover(x29, x35)\n    x37 = lbind(shift, x22)\n    x38 = mapply(x37, x34)\n    O = paint(x32, x38)\n    return O"], [1.1, "def solve_d00beb1d(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = rbind(shoot, UNITY)\n    x2 = rbind(add, UNITY)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = chain(decrement, last, x2)\n    x6 = fork(multiply, astuple, x5)\n    x7 = fork(equality, identity, x6)\n    x8 =223(TEN)\n    x9 = branch(x8, initset, x5)\n    x10 = insert(x9, I)\n    x11 = branch(x7, width, height)\n    x12 = apply(x11, x10)\n    x13 = difference(x10, x12)\n    x14 = mapply(x4, x13)\n    x15 = paint(I, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = apply(toindices, x16)\n    x18 = fork(either, x15, x17)\n    x19 = x18(x1)\n    O = paint(x15, x19)\n    return O"], [1.1, "def solve_2ed6b6dd(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = rot270(I)\n    x2 = height(x1)\n    x3 = rot90(I)\n    x4 = matcher(size, ZERO)\n    x5 = rbind(ofcolor, ZERO)\n    x6 = compose(flip, x4)\n    x7 = extract(x3, x6)\n    x8 = outbox(x7)\n    x9 = width(x1)\n    x10 = ofcolor(x, x9)\n    x11 = leftmost(x10)\n    x12 = ZERO(x11)\n    x13 = toobject(x12, x1)\n    x14 = color(x13)\n    x15 =14(x13)\n    x16 = shift(x8, x9)\n    x17 = shift(x8, x14)\n    x18 = paint(x15, x16)\n    O = paint(x18, x17)\n    return O"]], "bf699163": [[0.1607843137254902, "def solve_112c94e5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, F, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.30490196078431375, "def solve_5eca2ef1(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_b63bd108(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_4bb7f7d8(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_a5bd8a1b(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_5ecc5d00(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_50edfa6d(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_dc3eba65(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_de6ada43(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.32027505446623095, "def solve_4822fe14(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = rbind(equality, x4)\n    x7 = argmin(x5, x6)\n    x8 = asindices(I)\n    x9 = ofcolor(I, x4)\n    x10 = difference(x8, x9)\n    x11 = fill(I, x7, x10)\n    x12 = frontiers(x11)\n    x13 = sfilter(x12, vline)\n    x14 = difference(x12, x13)\n    x15 = astuple(x14, x13)\n    x16 = apply(size, x15)\n    x17 = increment(x16)\n    O = canvas(x4, x17)\n    return O"], [0.32027505446623095, "def solve_90bda675(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = rbind(equality, x4)\n    x7 = argmin(x5, x6)\n    x8 = asindices(I)\n    x9 = ofcolor(I, x4)\n    x10 = difference(x8, x9)\n    x11 = fill(I, x7, x10)\n    x12 = frontiers(x11)\n    x13 = sfilter(x12, vline)\n    x14 = difference(x12, x13)\n    x15 = astuple(x14, x13)\n    x16 = apply(size, x15)\n    x17 = increment(x16)\n    O = canvas(x4, x17)\n    return O"], [0.3215686274509804, "def solve_ea8ba0d2(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.3215686274509804, "def solve_f0cd5bf1(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = subgrid(x20, I)\n    x22 = switch(x21, x18, x19)\n    x23 = replace(x22, x18, x4)\n    x24 = lbind(downscale, x23)\n    x25 = fork(upscale, x24, identity)\n    x26 = matcher(x25, x23)\n    x27 = shape(x23)\n    x28 = maximum(x27)\n    x29 = interval(ONE, x28, ONE)\n    x30 = sfilter(x29, x26)\n    x31 = maximum(x30)\n    O = downscale(x23, x31)\n    return O"], [0.3215686274509804, "def solve_3876b872(I):\n    x1 = palette(I)\n    x2 = remove(ONE, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = canvas(x4, THREE_BY_THREE)\n    x6 = colorcount(I, ONE)\n    x7 = decrement(x6)\n    x8 = tojvec(x7)\n    x9 = connect(ORIGIN, x8)\n    x10 = fill(x5, TWO, x9)\n    x11 = initset(UNITY)\n    x12 = equality(x6, FOUR)\n    x13 = branch(x12, x11, x9)\n    O = fill(x10, TWO, x13)\n    return O"], [0.3215686274509804, "def solve_455e7882(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.3215686274509804, "def solve_d0dce391(I):\n    x1 = palette(I)\n    x2 = contained(ONE, x1)\n    x3 = contained(TWO, x1)\n    x4 = branch(x2, UNITY, TWO_BY_TWO)\n    x5 = branch(x3, RIGHT, x4)\n    x6 = fork(combine, vfrontier, hfrontier)\n    x7 = x6(x5)\n    x8 = canvas(ZERO, THREE_BY_THREE)\n    O = fill(x8, FIVE, x7)\n    return O"], [0.3215686274509804, "def solve_594890e3(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.3215686274509804, "def solve_133e65d4(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.3215686274509804, "def solve_3680622d(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = subgrid(x20, I)\n    x22 = switch(x21, x18, x19)\n    x23 = replace(x22, x18, x4)\n    x24 = lbind(downscale, x23)\n    x25 = fork(upscale, x24, identity)\n    x26 = matcher(x25, x23)\n    x27 = shape(x23)\n    x28 = maximum(x27)\n    x29 = interval(ONE, x28, ONE)\n    x30 = sfilter(x29, x26)\n    x31 = maximum(x30)\n    O = downscale(x23, x31)\n    return O"], [0.3215686274509804, "def solve_19345a78(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.32745098039215687, "def solve_2fdca11c(I):\n    x1 = trim(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.36851851851851847, "def solve_d6ac3668(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.36851851851851847, "def solve_57cab5d4(I):\n    x1 = objects(I, T, F, T)\n    x2 = valmax(x1, size)\n    x3 = equality(x2, ONE)\n    x4 = equality(x2, TWO)\n    x5 = branch(x3, TWO, ONE)\n    x6 = branch(x4, THREE, x5)\n    x7 = branch(x4, SEVEN, x6)\n    O = canvas(x7, UNITY)\n    return O"], [0.36851851851851847, "def solve_a1072c08(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14,x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.36851851851851847, "def solve_d735ceac(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = color(x3)\n    x5 = remove(ZERO, x1)\n    x6 = other(x5, x4)\n    O = canvas(x6, UNITY)\n    return O"], [0.36851851851851847, "def solve_bf1e8789(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.36851851851851847, "def solve_d86fc22a(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.36851851851851847, "def solve_ac582031(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.3931917211328976, "def solve_73b121be(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.3931917211328976, "def solve_73d1bb26(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.40763616557734206, "def solve_1739f3e6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_8f188ec6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_7f2902c5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_144aadf8(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_c3395140(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_fd100e8c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_ccf8472b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_1164ac75(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_e4d5d1af(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_5f203451(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.4296296296296296, "def solve_67bde86d(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.4296296296296296, "def solve_674435c5(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.4296296296296296, "def solve_55f079e7(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.5361111111111111, "def solve_4fc70cae(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.5361111111111111, "def solve_b8c8f475(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.5801587301587301, "def solve_8828c713(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = objects(x1, F, T, T)\n    x3 = first(x2)\n    x4 = vline(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(x1)\n    x7 = objects(x6, T, F, T)\n    x8 = order(x7, uppermost)\n    x9 = apply(color, x8)\n    x10 = dedupe(x9)\n    x11 = size(x10)\n    x12 = rbind(repeat, x11)\n    x13 = apply(x12, x10)\n    O = x5(x13)\n    return O"], [0.5885763888888889, "def solve_733ae75f(I):\n    x1 = trim(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(x2)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(x2)\n    x6 = lefthalf(x5)\n    x7 = bottomhalf(x2)\n    x8 = righthalf(x7)\n    x9 = palette(x4)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x6)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(I)\n    x18 = halve(x17)\n    x19 = canvas(x16, x18)\n    x20 = matcher(first, x16)\n    x21 = compose(flip, x20)\n    x22 = rbind(sfilter, x21)\n    x23 = compose(x22, asobject)\n    x24 = x23(x2)\n    x25 = x23(x2)\n    x26 = x23(x5)\n    x27 = x23(x6)\n    x28 = paint(x19, x27)\n    x29 = paint(x28, x26)\n    x30 = paint(x29, x25)\n    O = paint(x30, x24)\n    return O"], [0.5900055192264699, "def solve_1bfa5f6f(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5900055192264699, "def solve_a678d957(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = lefthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = righthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5900055192264699, "def solve_1a1b6825(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5902430555555556, "def solve_e2894090(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5902430555555556, "def solve_f328e5a3(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5902430555555556, "def solve_074019f0(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5902430555555556, "def solve_2362b36a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5916319444444444, "def solve_38b2c1c4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.5942348146063317, "def solve_9608d62b(I):\n    x1 = hsplit(I, THREE)\n    x2 = first(x1)\n    x3 = remove(x2, x1)\n    x4 = first(x3)\n    x5 = last(x3)\n    x6 = ofcolor(x4, NINE)\n    x7 = ofcolor(x2, FOUR)\n    x8 = fill(x5, NINE, x6)\n    O = fill(x8, FOUR, x7)\n    return O"], [0.6095814436885865, "def solve_f198e5f0(I):\n    x1 = height(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = width(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [0.6199160165858457, "def solve_cf168828(I):\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [0.6428952122854562, "def solve_79d908ce(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = objects(I, T, F, T)\n    x5 = totuple(x4)\n    x6 = apply(color, x5)\n    x7 = lbind(sfilter, x6)\n    x8 = lbind(matcher, identity)\n    x9 = chain(size, x7, x8)\n    x10 = valmax(x3, x9)\n    x11 = matcher(x9, x10)\n    x12 = sfilter(x3, x11)\n    x13 = lbind(colorcount, I)\n    x14 = argmin(x12, x13)\n    x15 = ofcolor(I, x14)\n    x16 = recolor(x14, x15)\n    x17 = apply(initset, x16)\n    x18 = remove(x16, x1)\n    x19 = lbind(argmin, x17)\n    x20 = lbind(rbind, manhattan)\n    x21 = compose(x19, x20)\n    x22 = fork(combine, identity, x21)\n    x23 = apply(x22, x18)\n    x24 = matcher(first, x14)\n    x25 = rbind(sfilter, x24)\n    x26 = chain(invert, ulcorner, x25)\n    x27 = fork(shift, identity, x26)\n    x28 = mapply(x27, x23)\n    x29 = normalize(x28)\n    x30 = shape(x29)\n    x31 = canvas(ZERO, x30)\n    O = paint(x31, x29)\n    return O"], [0.6600575299564271, "def solve_11ed16f3(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.6600575299564271, "def solve_e34220f7(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6600575299564271, "def solve_64f482e8(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6600575299564271, "def solve_789869e9(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6600575299564271, "def solve_3d07e1c0(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.660134929337232, "def solve_53830926(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x7, x16)\n    x20 = ofcolor(x8, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, THREE, x21)\n    return O"], [0.660134929337232, "def solve_d4bcbfb2(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x7, x16)\n    x20 = ofcolor(x8, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, THREE, x21)\n    return O"], [0.6668625356125356, "def solve_509b225a(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = chain(palette, trim, x2)\n    x4 = lbind(contained, THREE)\n    x5 = chain(flip, x4, x3)\n    x6 = mfilter(x1, x5)\n    O = fill(I, FOUR, x6)\n    return O"], [0.6672060197871419, "def solve_e5047fc3(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.6672060197871419, "def solve_d1e1fb82(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.674180469289165, "def solve_dfae6211(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = objects(x3, T, F, T)\n    x5 = merge(x4)\n    O = paint(x1, x5)\n    return O"], [0.6837830785199206, "def solve_e38a93e3(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_8b29b504(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_932f29d0(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_39f43a80(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_d8c3e6fd(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_6f204069(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_92771b2e(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_2969f457(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_8beb79b4(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_9d28e95c(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_0f28f83b(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_35a05590(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_80c8d9f2(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_133c5f5f(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_8b3c0e7e(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_9e842b8d(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_2c5f438a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_9d7b5f71(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_0e20c981(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_0e0151cf(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_2e6aabc3(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_859d01f3(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6901349293372321, "def solve_19b78d0e(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_e3525e06(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_234d92b1(I):\n    x1 = dmirror(I)\n    x2 = merge(x1)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_29b70b6f(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_7b1ddecf(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_f2c355ba(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_2b3a5f0c(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_32ba8af4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6946027369281046, "def solve_0d28e489(I):\n    x1 = index(I, ORIGIN)\n    x2 = width(I)\n    x3 = halve(x2)\n    x4 = astuple(x3, x2)\n    x5 = canvas(x1, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = compose(x6, last)\n    x8 = fork(recolor, first, x7)\n    x9 = asobject(I)\n    x10 = mapply(x8, x9)\n    O = paint(x5, x10)\n    return O"], [0.6986111111111111, "def solve_f3bc96b5(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, vline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = combine(x15, x16)\n    x18 = intersection(x15, x16)\n    x19 = difference(x17, x18)\n    O = fill(x14, THREE, x19)\n    return O"], [0.700481793212685, "def solve_b64861e5(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_1518ceaa(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.700481793212685, "def solve_95181f6b(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_735b8a84(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_003b87bb(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_1177e324(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.700481793212685, "def solve_41d498ec(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_397c9726(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_85b95619(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7026546999333007, "def solve_7371de38(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.7026546999333007, "def solve_73dd08fd(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, x1, I)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.709172269403161, "def solve_aa5d6398(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(add, height, width)\n    x3 = compose(decrement, x2)\n    x4 = fork(equality, x3, size)\n    x5 = fork(difference, toindices, box)\n    x6 = compose(size, x5)\n    x7 = matcher(x6, ZERO)\n    x8 = sfilter(x1, x4)\n    x9 = difference(x1, x8)\n    x10 = sfilter(x9, x7)\n    x11 = merge(x1)\n    x12 = fill(I, TWO, x11)\n    x13 = merge(x8)\n    x14 = fill(x12, ONE, x13)\n    x15 = merge(x10)\n    O = fill(x14, SIX, x15)\n    return O"], [0.7110653073286052, "def solve_53b8c701(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = width(I)\n    x5 = astuple(TEN, x4)\n    x6 = canvas(x3, x5)\n    x7 = interval(ONE, SEVEN, ONE)\n    x8 = invert(TEN)\n    x9 = interval(x8, TEN, ONE)\n    x10 = product(x7, x9)\n    x11 = remove(ORIGIN, x10)\n    x12 = lbind(intersection, x2)\n    x13 = lbind(shift, x2)\n    x14 = compose(x12, x13)\n    x15 = toindices(x2)\n    x16 = lbind(intersection, x15)\n    x17 = lbind(shift, x15)\n    x18 = compose(x16, x17)\n    x19 = compose(size, x14)\n    x20 = compose(size, x18)\n    x21 = fork(equality, x19, x20)\n    x22 = chain(positive, size, x14)\n    x23 = fork(both, x21, x22)\n    x24 = sfilter(x11, x23)\n    x25 = compose(size, x14)\n    x26 = valmax(x24, x25)\n    x27 = compose(size, x14)\n    x28 = matcher(x27, x26)\n    x29 = sfilter(x24, x28)\n    x30 = fork(multiply, first, last)\n    x31 = argmax(x29, x30)\n    x32 = interval(ZERO, TEN, ONE)\n    x33 = lbind(shift, x2)\n    x34 = lbind(multiply, x31)\n    x35 = compose(x33, x34)\n    x36 = mapply(x35, x32)\n    O = paint(x6, x36)\n    return O"], [0.7167554635380722, "def solve_07e505e0(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [0.7176546999333007, "def solve_c3dfde69(I):\n    x1 = asindices(I)\n    x2 = dmirror(I)\n    x3 = invert(NINE)\n    x4 = papply(pair, I, x2)\n    x5 = lbind(apply, maximum)\n    x6 = apply(x5, x4)\n    x7 = ofcolor(x6, ZERO)\n    x8 = difference(x1, x7)\n    x9 = toobject(x8, x6)\n    x10 = interval(x3, NINE, ONE)\n    x11 = interval(NINE, x3, NEG_ONE)\n    x12 = pair(x10, x11)\n    x13 = lbind(shift, x9)\n    x14 = mapply(x13, x12)\n    O = paint(x6, x14)\n    return O"], [0.7208389360698277, "def solve_07926c0a(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = astuple(SIX, THREE)\n    x6 = astuple(FOUR, EIGHT)\n    x7 = astuple(ONE, TWO)\n    x8 = initset(x5)\n    x9 = insert(x6, x8)\n    x10 = insert(x7, x9)\n    x11 = mapply(x4, x10)\n    O = paint(I, x11)\n    return O"], [0.7208389360698277, "def solve_9ce7a383(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = astuple(SIX, THREE)\n    x6 = astuple(FOUR, EIGHT)\n    x7 = astuple(ONE, TWO)\n    x8 = initset(x5)\n    x9 = insert(x6, x8)\n    x10 = insert(x7, x9)\n    x11 = mapply(x4, x10)\n    O = paint(I, x11)\n    return O"], [0.7208389360698277, "def solve_923575f8(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = astuple(SIX, THREE)\n    x6 = astuple(FOUR, EIGHT)\n    x7 = astuple(ONE, TWO)\n    x8 = initset(x5)\n    x9 = insert(x6, x8)\n    x10 = insert(x7, x9)\n    x11 = mapply(x4, x10)\n    O = paint(I, x11)\n    return O"], [0.7275112822906941, "def solve_3c989a69(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.7338151265460182, "def solve_5361a62a(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.7338151265460182, "def solve_296383e7(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.7338151265460182, "def solve_122e3247(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.7338151265460182, "def solve_4fbc27bb(I):\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = merge(x1)\n    x7 = color(x6)\n    x8 = shape(I)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(I, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmin(x11, numcolors)\n    x13 = normalize(x12)\n    x14 = toindices(x13)\n    x15 = increment(x4)\n    x16 = increment(x15)\n    x17 = increment(x5)\n    x18 = increment(x17)\n    x19 = astuple(x16, x18)\n    x20 = lbind(shift, x14)\n    x21 = rbind(multiply, x19)\n    x22 = chain(x20, x21, last)\n    x23 = fork(recolor, first, x22)\n    x24 = normalize(x12)\n    x25 = mapply(x23, x24)\n    O = paint(x9, x25)\n    return O"], [0.7338151265460182, "def solve_52ed5e42(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.7338151265460182, "def solve_27cae5c9(I):\n    x1 = objects(I, T, F, F)\n    x2 = sizefilter(x1, ONE)\n    x3 = compose(neighbors, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x2)\n    x6 = paint(I, x5)\n    x7 = replace(x6, ONE, SIX)\n    x8 = replace(x7, TWO, SEVEN)\n    x9 = replace(x8, THREE, EIGHT)\n    O = replace(x9, FOUR, NINE)\n    return O"], [0.7389341741650659, "def solve_bcf60a28(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.7400296972330871, "def solve_7b76dcc3(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = mostcolor(I)\n    O = replace(x3, x4, ZERO)\n    return O"], [0.7400296972330871, "def solve_b3740c24(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = mostcolor(I)\n    O = replace(x3, x4, ZERO)\n    return O"], [0.741832732082732, "def solve_f0b995f3(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.7421484598793515, "def solve_77de7638(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.7422029560616518, "def solve_b7ff2750(I):\n    x1 = objects(I, T, F, T)\n    x2 = palette(I)\n    x3 = mostcolor(I)\n    x4 = remove(x3, x2)\n    x5 = lbind(other, x4)\n    x6 = compose(x5, color)\n    x7 = fork(recolor, x6, outbox)\n    x8 = mapply(x7, x1)\n    x9 = mapply(toindices, x1)\n    x10 = box(x9)\n    x11 = difference(x10, x9)\n    x12 = lbind(argmin, x9)\n    x13 = rbind(compose, initset)\n    x14 = lbind(rbind, manhattan)\n    x15 = chain(x13, x14, initset)\n    x16 = chain(initset, x12, x15)\n    x17 = fork(manhattan, initset, x16)\n    x18 = compose(even, x17)\n    x19 = sfilter(x11, x18)\n    x20 = paint(I, x8)\n    O = fill(x20, FIVE, x19)\n    return O"], [0.7429792330488345, "def solve_fc9bef9f(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, TWO)\n    x3 = colorfilter(x1, ONE)\n    x4 = lbind(recolor, TWO)\n    x5 = rbind(shoot, UNITY)\n    x6 = chain(x4, x5, lrcorner)\n    x7 = lbind(recolor, ONE)\n    x8 = rbind(shoot, NEG_UNITY)\n    x9 = chain(x7, x8, ulcorner)\n    x10 = mapply(x6, x2)\n    x11 = mapply(x9, x3)\n    x12 = combine(x10, x11)\n    O = paint(I, x12)\n    return O"], [0.7433389360698277, "def solve_a9048e75(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.7433389360698277, "def solve_d19cb2a0(I):\n    O = rot270(I)\n    return O"], [0.7433389360698277, "def solve_ed253900(I):\n    O = rot180(I)\n    return O"], [0.7433389360698277, "def solve_17c0ebcc(I):\n    O = rot270(I)\n    return O"], [0.7433389360698277, "def solve_b684326d(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.7433389360698277, "def solve_1e0a117f(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.7433389360698277, "def solve_edec0ea8(I):\n    O = rot270(I)\n    return O"], [0.7433389360698277, "def solve_edc1c9f4(I):\n    O = rot180(I)\n    return O"], [0.7436574074074074, "def solve_d51258c7(I):\n    O = switch(I, FIVE, EIGHT)\n    return O"], [0.7436574074074074, "def solve_4ce1ebb8(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.7436960789269706, "def solve_6bf26ddb(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = prapply(connect, x1, x1)\n    x3 = rbind(greater, ONE)\n    x4 = compose(x3, size)\n    x5 = sfilter(x2, x4)\n    x6 = fork(either, vline, hline)\n    x7 = mfilter(x5, x6)\n    x8 = fill(I, THREE, x7)\n    O = fill(x8, EIGHT, x1)\n    return O"], [0.7436960789269706, "def solve_b0544453(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7436960789269706, "def solve_0c27658e(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_0562bfae(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_256aaa98(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7436960789269706, "def solve_24218d5b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_0af3fcba(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_2b217e60(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.7436960789269706, "def solve_b6b6ff95(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = argmax(x1, x2)\n    x5 = remove(x3, x1)\n    x6 = other(x5, x4)\n    x7 = subgrid(x6, I)\n    x8 = frontiers(x7)\n    x9 = sfilter(x8, hline)\n    x10 = size(x9)\n    x11 = positive(x10)\n    x12 = branch(x11, dmirror, identity)\n    x13 = x12(I)\n    x14 = color(x6)\n    x15 = ofcolor(x13, x14)\n    x16 = subgrid(x15, x13)\n    x17 = trim(x16)\n    x18 = lefthalf(x17)\n    x19 = vmirror(x18)\n    x20 = asobject(x19)\n    x21 = righthalf(x17)\n    x22 = vmirror(x21)\n    x23 = asobject(x22)\n    x24 = color(x4)\n    x25 = inbox(x15)\n    x26 = backdrop(x25)\n    x27 = fill(x13, x24, x26)\n    x28 = urcorner(x15)\n    x29 = add(x28, UNITY)\n    x30 = shift(x23, x29)\n    x31 = ulcorner(x15)\n    x32 = width(x20)\n    x33 = invert(x32)\n    x34 = tojvec(x33)\n    x35 = add(DOWN, x34)\n    x36 = add(x31, x35)\n    x37 = shift(x20, x36)\n    x38 = combine(x30, x37)\n    x39 = paint(x27, x38)\n    O = x12(x39)\n    return O"], [0.7436960789269706, "def solve_6d15cfe0(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, THREE, x3)\n    return O"], [0.7436960789269706, "def solve_d0d2f0b1(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.7436960789269706, "def solve_253fda4b(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = prapply(connect, x2, x2)\n    x4 = rbind(greater, ONE)\n    x5 = compose(x4, size)\n    x6 = sfilter(x3, x5)\n    x7 = fork(either, vline, hline)\n    x8 = mfilter(x6, x7)\n    x9 = fill(I, THREE, x8)\n    x10 = leastcolor(I)\n    O = fill(x9, x10, x2)\n    return O"], [0.7436960789269706, "def solve_91fadd8d(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7436960789269706, "def solve_75cf0440(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7436960789269706, "def solve_eb81c715(I):\n    O = switch(I, EIGHT, TWO)\n    return O"], [0.7436960789269706, "def solve_08b66da5(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [0.7436960789269706, "def solve_f75f3c35(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_00fa8610(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_f7794dd4(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_fabbfa31(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7436960789269706, "def solve_ab4ac2ec(I):\n    x1 = initset(ORIGIN)\n    x2 = mostcolor(I)\n    x3 = recolor(x2, x1)\n    x4 = upscale(x3, TWO)\n    x5 = occurrences(I, x4)\n    x6 = lbind(shift, x4)\n    x7 = mapply(x6, x5)\n    O = fill(I, x2, x7)\n    return O"], [0.7436960789269706, "def solve_ecb54769(I):\n    O = rot90(I)\n    return O"], [0.7436960789269706, "def solve_b6ebc576(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = height(x2)\n    x4 = height(I)\n    x5 = interval(ZERO, x4, x3)\n    x6 = lbind(shift, x2)\n    x7 = compose(x6, toivec)\n    x8 = compose(x7, invert)\n    x9 = fork(combine, x7, x8)\n    x10 = mapply(x9, x5)\n    O = paint(I, x10)\n    return O"], [0.7436960789269706, "def solve_f8cb861b(I):\n    x1 = objects(I, T, F, T)\n    x2 = compose(backdrop, inbox)\n    x3 = mapply(x2, x1)\n    O = fill(I, EIGHT, x3)\n    return O"], [0.7436960789269706, "def solve_f497ff22(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x7 = rbind(shoot, UNITY)\n    x8 = rbind(shoot, NEG_UNITY)\n    x9 = fork(combine, x7, x8)\n    x10 = fork(combine, x5, x9)\n    x11 = index(I, x2)\n    x12 = x10(x2)\n    O = fill(I, x11, x12)\n    return O"], [0.7436960789269706, "def solve_5cf51ca1(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_5c8463d7(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7436960789269706, "def solve_0c46a86b(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [0.7436960789269706, "def solve_ff55b20e(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7436960789269706, "def solve_6f51c6e6(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7436960789269706, "def solve_8d1b1cb9(I):\n    x1 = vmirror(I)\n    x2 = fgpartition(x1)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = compose(double, halve)\n    x6 = fork(equality, identity, x5)\n    x7 = compose(x6, last)\n    x8 = sfilter(x4, x7)\n    x9 = fill(x1, THREE, x8)\n    O = vmirror(x9)\n    return O"], [0.7436960789269706, "def solve_facf1b7e(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7436960789269706, "def solve_e3124d15(I):\n    O = dmirror(I)\n    return O"], [0.7436960789269706, "def solve_c582b6d3(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_6de94bc4(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_45400bf2(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_7e389fdd(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.7436960789269706, "def solve_b85676d0(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = lbind(recolor, EIGHT)\n    x4 = rbind(ofcolor, x1)\n    x5 = chain(x3, backdrop, x4)\n    x6 = fork(paint, identity, x5)\n    x7 = height(I)\n    x8 = vsplit(I, x7)\n    x9 = mapply(x6, x8)\n    x10 = ofcolor(x9, EIGHT)\n    x11 = dmirror(I)\n    x12 = width(I)\n    x13 = vsplit(x11, x12)\n    x14 = mapply(x6, x13)\n    x15 = dmirror(x14)\n    x16 = ofcolor(x15, EIGHT)\n    x17 = combine(x10, x16)\n    x18 = difference(x17, x2)\n    O = fill(I, EIGHT, x18)\n    return O"], [0.7436960789269706, "def solve_9466a878(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_478c19c1(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.7436960789269706, "def solve_d524434e(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot180(x3)\n    return O"], [0.7436960789269706, "def solve_6f8cc053(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7436960789269706, "def solve_140a88ad(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_29872a4a(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.7436960789269706, "def solve_3a9385f7(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.7436960789269706, "def solve_63874e74(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_550ef4ec(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_6c96af8c(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7436960789269706, "def solve_c25ee63a(I):\n    O = dmirror(I)\n    return O"], [0.7436960789269706, "def solve_22e8cd1b(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7436960789269706, "def solve_13ffe7f5(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [0.7436960789269706, "def solve_c1c595ec(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.7436960789269706, "def solve_f6ff28da(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.7436960789269706, "def solve_7f22adbe(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_a4c6b97f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7436960789269706, "def solve_834dcd23(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7436960789269706, "def solve_e73b6a09(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, last)\n    x5 = fork(recolor, first, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [0.7436960789269706, "def solve_fef5ae9a(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.7436960789269706, "def solve_106facec(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, F, F, T)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.7436960789269706, "def solve_3ab62eee(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_2ece6a78(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.7436960789269706, "def solve_6f0d7949(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7436960789269706, "def solve_badfee06(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [0.7436960789269706, "def solve_24930bab(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [0.7436960789269706, "def solve_5b9e2bb1(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_f86b12a1(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.7436960789269706, "def solve_6940f0a4(I):\n    O = dmirror(I)\n    return O"], [0.7436960789269706, "def solve_528704f2(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.7436960789269706, "def solve_6f15edbf(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_d0c0cc4f(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7436960789269706, "def solve_c2b166bd(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = subgrid(x2, I)\n    return O"], [0.7436960789269706, "def solve_ff584b8b(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_45da82ec(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_11520515(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork( combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_634f8d80(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [0.7436960789269706, "def solve_17da7258(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [0.7436960789269706, "def solve_71c903a3(I):\n    O = dmirror(I)\n    return O"], [0.7436960789269706, "def solve_4e13b567(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(objects, F)\n    x4 = rbind(x3, F)\n    x5 = rbind(x4, T)\n    x6 = lbind(canvas, x1)\n    x7 = compose(x6, shape)\n    x8 = fork(paint, x7, normalize)\n    x9 = compose(x5, x8)\n    x10 = fork(colorfilter, x9, color)\n    x11 = rbind(shift, RIGHT)\n    x12 = rbind(argmax, rightmost)\n    x13 = compose(x12, x10)\n    x14 = fork(remove, x13, x10)\n    x15 = chain(x11, merge, x14)\n    x16 = rbind(argmax, rightmost)\n    x17 = compose(x16, x10)\n    x18 = fork(combine, x17, x15)\n    x19 = fork(shift, x18, ulcorner)\n    x20 = merge(x2)\n    x21 = fill(I, x1, x20)\n    x22 = mapply(x19, x2)\n    O = paint(x21, x22)\n    return O"], [0.7436960789269706, "def solve_dfcaedb7(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7440145502645503, "def solve_69282a7c(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = astuple(x1, ONE)\n    x8 = astuple(ONE, x2)\n    x9 = decrement(x1)\n    x10 = decrement(x2)\n    x11 = toivec(x10)\n    x12 = tojvec(x9)\n    x13 = crop(I, x11, x8)\n    x14 = crop(I, x12, x7)\n    x15 = asobject(x14)\n    x16 = asobject(x13)\n    x17 = vperiod(x15)\n    x18 = hperiod(x16)\n    x19 = astuple(x17, x18)\n    x20 = lbind(multiply, x19)\n    x21 = neighbors(ORIGIN)\n    x22 = mapply(neighbors, x21)\n    x23 = apply(x20, x22)\n    x24 = lbind(shift, x6)\n    x25 = mapply(x24, x23)\n    O = paint(I, x25)\n    return O"], [0.7440145502645503, "def solve_eb241a5b(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = astuple(x1, ONE)\n    x8 = astuple(ONE, x2)\n    x9 = decrement(x1)\n    x10 = decrement(x2)\n    x11 = toivec(x10)\n    x12 = tojvec(x9)\n    x13 = crop(I, x11, x8)\n    x14 = crop(I, x12, x7)\n    x15 = asobject(x14)\n    x16 = asobject(x13)\n    x17 = vperiod(x15)\n    x18 = hperiod(x16)\n    x19 = astuple(x17, x18)\n    x20 = lbind(multiply, x19)\n    x21 = neighbors(ORIGIN)\n    x22 = mapply(neighbors, x21)\n    x23 = apply(x20, x22)\n    x24 = lbind(shift, x6)\n    x25 = mapply(x24, x23)\n    O = paint(I, x25)\n    return O"], [0.7440145502645503, "def solve_b3a43dd6(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.7440145502645503, "def solve_20e19bdd(I):\n    x1 = leastcolor(I)\n    x2 = mostcolor(I)\n    x3 = ofcolor(I, x1)\n    x4 = replace(I, x1, x2)\n    x5 = mapply(dneighbors, x3)\n    x6 = mapply(ineighbors, x3)\n    x7 = fill(x4, ONE, x5)\n    O = fill(x7, x1, x6)\n    return O"], [0.7459101546601546, "def solve_fb4a3764(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, center)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.7469470012001961, "def solve_01d8ab5d(I):\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7472675074983992, "def solve_f6e9e1f3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7472675074983992, "def solve_60276051(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7472675074983992, "def solve_4a44dff8(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7480334878120887, "def solve_c8371624(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.7480334878120887, "def solve_b3613949(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.7480334878120887, "def solve_8f288431(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.7480334878120887, "def solve_d8a8aaf0(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.7480334878120887, "def solve_e90e7f75(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.7480334878120887, "def solve_fe864351(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.7480334878120887, "def solve_9f2c215d(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.7511574074074074, "def solve_b257b053(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, FIVE)\n    x3 = compose(backdrop, inbox)\n    x4 = mapply(x3, x2)\n    O = fill(I, TWO, x4)\n    return O"], [0.7579817932126849, "def solve_bececf5c(I):\n    x1 = asobject(I)\n    x2 = shape(I)\n    x3 = decrement(x2)\n    x4 = index(I, x3)\n    x5 = double(x2)\n    x6 = canvas(x4, x5)\n    x7 = paint(x6, x1)\n    x8 = objects(x7, F, F, T)\n    x9 = first(x8)\n    x10 = shift(x9, LEFT)\n    x11 = vperiod(x10)\n    x12 = hperiod(x10)\n    x13 = neighbors(ORIGIN)\n    x14 = lbind(mapply, neighbors)\n    x15 = power(x14, TWO)\n    x16 = x15(x13)\n    x17 = astuple(x11, x12)\n    x18 = lbind(multiply, x17)\n    x19 = apply(x18, x16)\n    x20 = lbind(shift, x10)\n    x21 = mapply(x20, x19)\n    O = paint(I, x21)\n    return O"], [0.7583002645502646, "def solve_a9f96576(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.7583002645502646, "def solve_a21dad91(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.7615532217841134, "def solve_d66e843d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7615532217841134, "def solve_42d965a8(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7615532217841134, "def solve_b3052bd5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7615532217841134, "def solve_c2251fc1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7615532217841134, "def solve_95310504(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7615532217841134, "def solve_334b0c94(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7615532217841134, "def solve_5424ab54(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.767824074074074, "def solve_31038701(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.767824074074074, "def solve_f9ccb293(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.767824074074074, "def solve_a72b0dc1(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.767824074074074, "def solve_3641dfe6(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.7758389360698277, "def solve_121f3043(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7758389360698277, "def solve_54eb9b0f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7758389360698277, "def solve_87d2e36c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7819990673127664, "def solve_49e20542(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7819990673127664, "def solve_9531120e(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7819990673127664, "def solve_954958bb(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7819990673127664, "def solve_c0117211(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x19 = shift(x6, RIGHT)\n    x20 = paint(x8, x19)\n    x21 = shift(x6, UP)\n    x22 = paint(x20, x21)\n    x23 = shift(x6, DOWN)\n    x24 = paint(x22, x23)\n    O = paint(x24, x6)\n    return O"], [0.7819990673127664, "def solve_5963fa73(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7819990673127664, "def solve_13e624fc(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7819990673127664, "def solve_f788d2fb(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [1.0, "def solve_94486b7e(I):\n    O = subgrid(x1, I)\n    return O"], [1.0, "def solve_1dbefc2e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = shape(I)\n    x13 = canvas(x11, x12)\n    x14 = hconcat(I, x13)\n    x15 = objects(x14, F, F, T)\n    x16 = argmin(x15, numcolors)\n    x17 = ofcolor(x16, x7)\n    x18 = mapply(x17, x17)\n    O = fill(x18, x7, x18)\n    return O"], [1.0, "def solve_0d42538d(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(objects, F)\n    x4 = compose(x3, palette)\n    x5 = fork(recolor, x4, identity)\n    x6 = apply(x5, x2)\n    x7 = order(x6, identity)\n    x8 = last(x7)\n    x9 = remove(x8, x7)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = mapply(neighbors, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = ofcolor(I, x11)\n    x17 = mapply(neighbors, x16)\n    x18 = toobject(x17, I)\n    x19 = mostcolor(x18)\n    x20 = rbind(shoot, UNITY)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = fork(combine, x20, x21)\n    x23 = rbind(shoot, UP_RIGHT)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = fork(combine, x23, x24)\n    x26 = fork(combine, x22, x25)\n    x27 = height(I)\n    x28 = astuple(x27, x)\n    x29 = canvas(x11, x28)\n    x30 = fill(x29, x10, x21)\n    x31 = ofcolor(I, x10)\n    x32 = colorfilter(x31, x11)\n    x33 = rbind(adjacent, x32)\n    x34 = mfilter(x32, x33)\n    x35 = mapply(x24, x34)\n    O = fill(x30, ONE, x35)\n    return O"], [1.0, "def solve_9dc45f5a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_d6717fa8(I):\n    x1 = mostcolor(I)\n    x2 =flip(I, x1)\n    x3 = compose(dmirror, dedupe)\n    x4 = fork(combine, x3, x2)\n    x5 = apply(x4, x2)\n    x6 = merge(x5)\n    x7 = lbind(shift, x6)\n    x8 = mapply(x7, x5)\n    O = fill(I, x1, x8)\n    return O"], [1.0, "def solve_a3c6dd54(I):\n    x1 = ofcolor(I, TWO)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = asindices(x4)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = intersection(x5, x6)\n    x8 = fill(x4, EIGHT, x7)\n    x9 = hmirror(x8)\n    x10 = vmirror(x9)\n    x11 = fgpartition(x4)\n    x12 = merge(x11)\n    x13 = paint(x5, x12)\n    x14 = subgrid(x1, x13)\n    O = x3(x14)\n    return O"], [1.0, "def solve_69c8ab9f(I):\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = astuple(x2, x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = rbind(shoot, UP)\n    x8 = mapply(x7, x3)\n    x9 = combine(x6, x8)\n    x10 = fill(x6, ONE, x9)\n    x11 = hmirror(x10)\n    O = vconcat(x110, x11)\n    return O"], [1.0, "def solve_7fe948e3(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_611dcf26(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = size(x4)\n    x6 = width(I)\n    x7 = multiply(x6, x5)\n    x8 = multiply(UNITY, x7)\n    x9 = canvas(ZERO, x8)\n    x10 = multiply(x6, x5)\n    x11 = decrement(x10)\n    x12 = lbind(astuple, x11)\n    x13 = rbind(shoot, UP_RIGHT)\n    x14 = compose(last, last)\n    x15 = chain(x13, x12, x14)\n    x16 = fork(recolor, first, x15)\n    x17 = mapply(x16, x4)\n    O = paint(x9, x17)\n    return O"], [1.0, "def solve_bd4649c3(I):\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = rbind(shoot, UP)\n    x9 = mapply(x8, x7)\n    O = fill(I, x10, x9)\n    return O"], [1.0, "def solve_3b02d314(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_0bb5ee89(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_36209a08(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = normalize(x2)\n    x4 = ulcorner(x2)\n    x5 = subtract(x4, x2)\n    x6 = shape(x2)\n    x7 = add(x6, TWO_BY_ZERO)\n    O = crop(I, x5, x7)\n    return O"], [1.0, "def solve_6d5a5b9e(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_c1346812(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [1.0, "def solve_63df7b8e(I):\n    x1 = asobject(I)\n    x2 = frontiers(I)\n    x3 = merge(x2)\n    x4 = difference(x1, x3)\n    x5 = mostcolor(x4)\n    x6 = objects(I, T, F, F)\n    x7 = color(x3)\n    x8 = matcher(color, x7)\n    x9 = matcher(color, x5)\n    x10 = fork(astuple, x8, x9)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x6, x11)\n    x13 = merge(x12)\n    x14 = palette(x13)\n    x15 = lbind(mfilter, x12)\n    x16 = lbind(matcher, color)\n    x17 = compose(x15, x16)\n    x18 = apply(x17, x14)\n    x19 = fork(either, vline, hline)\n    x20 = lbind(prapply, connect)\n    x21 = fork(x20, identity, identity)\n    x22 = apply(x21, x18)\n    x23 = rbind(sfilter, x19)\n    x24 = chain(merge, x23, x22)\n    x25 = fork(recolor, color, x24)\n    x26 = mapply(x25, x24)\n    x27 = paint(I, x26)\n    O = paint(x27, x3)\n    return O"], [1.0, "def solve_4e65a342(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, le662)\n    x6 = branch(x4, bottomhalf, rIGHT)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [1.0, "def solve_fca4e4b1(I):\n    x1 = hconcat(I, I)\n    x2 = vconcat(x1, x1)\n    x3 = asindices(x2)\n    x4 = mostcolor(I)\n    x5 = ofcolor(x2, x4)\n    x6 = difference(x3, x5)\n    x7 = mapply(ineighbors, x6)\n    O = underfill(x2, EIGHT, x7)\n    return O"], [1.0, "def solve_2a8560d4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = rbind(remove, x1)\n    x4 = rbind(remove, x2)\n    x5 = compose(x3, x4)\n    x6 = compose(x5, color)\n    x7 = fork(combine, identity, x6)\n    x8 = apply(x7, x1)\n    O = pair(x8, x8)\n    return O"], [1.0, "def solve_fadd1d31(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_f524ec6a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_5aac3c20(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_51a51c36(I):\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, shape)\n    x3 = sfilter(I, x2)\n    x4 = lbind(apply, numcolors)\n    x5 = chain(x4, first, shape)\n    x6 = objects(x3, T, F, F)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = matcher(first, x8)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x2, x10)\n    x12 = lbind(recolor, x8)\n    x13 = compose(x12, dmirror)\n    x14 = fork(combine, x13, x13)\n    x15 = objects(x11, x14, Faint)\n    x16 = paint(x15, x11)\n    x17 = order(x16, identity)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = color(x18)\n    x21 = palette(x18)\n    x22 = remove(x8, x21)\n    x23 = other(x22, x20)\n    x24 = rbind(colorcount, x20)\n    x25 = argmin(x12, x24)\n    x26 = first(x25)\n    x27 = other(x25, x26)\n    x28 = sfilter(x24, x27)\n    x29 = size(x28)\n    x30 = positive(x29)\n    x31 = branch(x30, x22, x25)\n    x32 = x31(x3333)\n    x33 = x31(x39)\n    x34 = ofcolor(x33, x20)\n    x35 = andmirror(x34)\n    x36 = ofcolor(x33, x22)\n    x37 = intersection(x35, x36)\n    x38 = mapply(x28, x37)\n    O = paint(x32, x38)\n    return O"], [1.0, "def solve_6fbe61ea(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_067ac743(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = rbind(colorcount, ZERO)\n    x3 = lbind(toobject, x1)\n    x4 = compose(x2, x3)\n    x5 = vmirror(I)\n    x6 = hmirror(I)\n    x7 = astuple(x5, x6)\n    x8 = argmin(x7, x4)\n    O = subgrid(x1, x8)\n    return O"], [1.0, "def solve_bb1cc91f(I):\n    x1 = index(I, ORIGIN)\n    x2 = width(I)\n    x3 = halve(x2)\n    x4 = astuple(x3, x2)\n    x5 = canvas(x1, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = compose(x6, last)\n    x8 = fork(recolor, first, x7)\n    x509 = asobject(I)\n    x10 = mapply(x8, x9)\n    O = paint(x5, x10)\n    return O"], [1.0, "def solve_b4faadb6(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_8bf7d21d(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_42763990(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = compose(x5, color)\n    x7 = compose(double, x4)\n    x8 = lbind(prapply, manhattan)\n    x9 = fork(x8, identity, identity)\n    x10 = lbind(remove, ZERO)\n    x11 = compose(x10, x9)\n    x12 = rbind(branch, NEG_TWO)\n    x13 = fork(x12, positive, decrement)\n    x14 = chain(x13, maximum, x11)\n    x15 = fork(contained, x44, x14)\n    x16 = compose(x15, x6)\n    x17 = sfilter(x2, x16)\n    x18 = fork(add, leftmost, rightmost)\n    x19 = chain(toivec, invert, x18)\n    x20 = fork(shift, x17, x19)\n    x21 = compose(x5, x20)\n    x22 = fork(difference, x21, box)\n    x23 = fork(recolor, x21, x22)\n    x24 = mapply(x23, x4)\n    O = paint(I, x24)\n    return O"], [1.0, "def solve_3cf864c0(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_4a1a6288(I):\n    x1 =906934455\n    O = subgrid(x1, I)\n    return O"], [1.0, "def solve_cc89f781(I):\n    x1 = index(I, ORIGIN)\n    x2 = equality(x1, THREE)\n    x3 = height(I)\n    x4 = decrement(x3)\n    x5 = toivec(x4)\n    x6 = branch(x2, x5, ORIGIN)\n    x7 = equality(x1, TWO)\n    x8 = shape(I)\n    x9 = decrement(x8)\n    x10 = width(I)\n    x11 = decrement(x10)\n    x12 = tojvec(x11)\n    x13 = branch(x7, x9, x12)\n    x14 = branch(x7, x9, x13)\n    x15 = astuple(x6, x13)\n    x16 = astuple(x14, x13)\n    x17 = portrait(x16)\n    x18 = branch(x17, x9, x13)\n    x19 = canvas(x8, x15)\n    x20 = matcher(first, FOUR)\n    x21 = compose(flip, x20)\n    x22 = rbind(sfilter, x21)\n    x23 = compose(x22, asobject)\n    x24 = apply(x23, x19)\n    x25 = difference(x24, x24)\n    O = fill(x19, FOUR, x25)\n    return O"], [1.0, "def solve_3e4336b1(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_486b1415(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_2e4f6375(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = size(x9)\n    x11 = equality(x10, ONE)\n    x12 = branch(x11, dmirror, identity)\n    x13 = x12(I)\n    x14 = last(x13)\n    x15 = mostcolor(x14)\n    x16 = trim(x14)\n    x17 = last(x16)\n    x18 = repeat(x17, ONE)\n    x19 = x12(x18)\n    x20 = branch(x11, height, width)\n    x21 = x20(x19)\n    x22 = astuple(ONE, x21)\n    x23 = multiply(x22, x37)\n    x24 = decrement(x23)\n    x25 = branch(x11, identity, vmirror)\n    x26 = x25(x12)\n    x27 = crop(x26, ORIGIN, x22)\n    x28 = last(x27)\n    x29 = remove(x28, x27)\n    x30 = first(x29)\n    x31 = last(x27)\n    x32 = lefthalf(x31)\n    x33 = righthalf(x32)\n    x34 = asobject(x33)\n    x35 = righthalf(x34)\n    x36 = vmirror(x35)\n    x37 = shift(x36, UNITY)\n    O = paint(x22, x37)\n    return O"], [1.0, "def solve_ff7ea9c3(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_223f72f2(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = compose(x5, color)\n    x7 = compose(double, x4)\n    x8 = rbind(apply, x7)\n    x9 = lbind(lbind, gravitate)\n    x10 = compose(x8, x9)\n    x11 = fork(sfilter, identity, x10)\n    x12 = chain(size, x8, x11)\n    x13 = matcher(x12, TWO)\n    x14 = colorfilter(x1, TWO)\n    x15 = difference(x1, x14)\n    x16 = compose(normalize, first)\n    x17 = chain(ulcorner, x16, x12)\n    x18 = fork(shift, identity, x17)\n    x19 = normalize(x15)\n    x20 = matcher(x18, x19)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x1, x21)\n    x23 = argmax(x22, size)\n    x24 = color(x23)\n    x25 = toindices(x23)\n    x26 = objects(I, T, F, T)\n    x27 = rbind(shift, x24)\n    x28 = compose(x27, toindices)\n    x29 = fork(recolor, x28, identity)\n    x30 = mapply(x29, x26)\n    O = paint(I, x30)\n    return O"], [1.0, "def solve_363203bf(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, d687)\n    x9 = compose(flip, x8)\n    x10 = extract(x7, x9)\n    O = x10(I)\n    return O"], [1.0, "def solve_3cac3f7e(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_53925e3f(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_2e2dcf42(I):\n    x1 = height(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = interval(x4, x5, FOUR)\n    x7 = repeat(x6, ONE)\n    x8 = merge(x7)\n    O = fill(I, ZERO, x8)\n    return O"], [1.0, "def solve_591311fb(I):\n    x1 = shape(I)\n    x2 = contained(ONE, x1)\n    x3 = branch(x2, T, F, T)\n    O = canvas(x3, UNITY)\n    return O"], [1.0, "def solve_44a40ef0(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = branch(x2, ONE, SEVEN)\n    O = canvas(x3, FIVE)\n    return O"], [1.0, "def solve_8ac5361d(I):\n    x1 = crop(I, ORIGIN, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [1.0, "def solve_07d532b2(I):\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = order(x1, x2)\n    x4 = lbind(apply, last)\n    x5 = chain(x4, mostcolor, x2)\n    x6 = fork(recolor, x5, x2)\n    x7 = mapply(x6, x3)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_ca14f3bf(I):\n    x1 = asobject(I)\n    x2 = shift(x1,3333)\n    O = paint(I, x2)\n    return O"], [1.0, "def solve_e80ff72a(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = size(x4)\n    x6 = width(I)\n    x7 = multiply(x6, x5)\n    x8 = multiply(UNITY, x7)\n    x9 = canvas(ZERO, x8)\n    x10 = multiply(x6, x5)\n    x11 = decrement(x10)\n    x12 = lbind(astuple, x11)\n    x13 = rbind(shoot, UP_RIGHT)\n    x14 = compose(last, last)\n    x15 = chain(x13, x12, x14)\n    x16 = fork(recolor, first, x15)\n    x17 = mapply(x16, x4)\n    O = paint(x9, x17)\n    return O"], [1.0, "def solve_80446397(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_65c4b6e2(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_0f25b3e5(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_caddcd22(I):\n    x1 = lbind(add, DOWN)\n    x2 = compose(x1, size)\n    x3 = fork(equality, toindices, x2)\n    x4 = rbind(add, RIGHT)\n    x5 = compose(x4, width)\n    x6 = fork(equality, toindices, x5)\n    x7 = fork(add, size, x6)\n    x8 = compose(x3, x7)\n    x9 = extract(x1, x8)\n    x10 = fork(insert, vupscale, toindices)\n    x11 = compose(x10, initset)\n    x12 = fork(insert, product, x11)\n    x13 = fork(intersection, x12, backdrop)\n    x14 = mapply(x13, x9)\n    O = fill(I, ZERO, x14)\n    return O"], [1.0, "def solve_ae48ed92(I):\n    x1 = branch(I, x2, x3)\n    x2 = x1(I)\n    x3 = decrement(x2)\n    x4 = tojvec(x3)\n    x5 = shoot(x4, DOWN_LEFT)\n    x6 = intersection(x5, x2)\n    x7 = fill(I, THREE, x6)\n    x8 = objects(x7, T, F, F)\n    x9 = fork(combine, vfrontier, hfrontier)\n    x10 = mapply(x9, x8)\n    O = fill(x7, FOUR, x10)\n    return O"], [1.0, "def solve_8e8005c4(I):\n    x1 = vmirror(I)\n    x2 = matcher(identity, ZERO)\n    x3 = rbind(sfilter, x2)\n    x4 = compose(size, x3)\n    x5 = apply(x4, x1)\n    x6 = dedupe(x5)\n    x7 = rot90(x6)\n    x8 = dedupe(x7)\n    x9 = rot270(x8)\n    x10 = hconcat(x7, x4)\n    x11 = hconcat(x9, x4)\n    O = vconcat(x10, x11)\n    return O"], [1.0, "def solve_62eebec0(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_d26aa7ae(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = objects(x1, T, F, F)\n    x4 = power(normalize, THREE)\n    x5 = fork(add, height, width)\n    x6 = x5(x4)\n    x7 = astuple(ONE, x6)\n    x8 = mostcolor(I)\n    x9 = canvas(x8, x7)\n    x10 = asobject(x1)\n    x11 = paint(x9, x10)\n    x12 = rot90(x11)\n    x13 = rot180(x11)\n    x14 = rot270(x11)\n    x15 = hconcat(x12, x4)\n    x16 = hconcat(x13, x8)\n    x17 = vconcat(x15, x9)\n    x18 = vconcat(x16, x10)\n    O = rot90(x18)\n    return O"], [1.0, "def solve_f408d12c(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = UNITY(x2)\n    x4 = shoot(x3, UP_RIGHT)\n    x5 = shoot(x3, UNITY)\n    x6 = recolor(x1, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = mapply(x7, x4)\n    x9 = underfill(I, x1, x8)\n    x10 = objects(x9, T, F, T)\n    x11 = colorfilter(x10, x1)\n    x12 = rbind(bordering, I)\n    x13 = mfilter(x11, x12)\n    O = mfilter(x11, x1)\n    return O"], [1.0, "def solve_63f12f42(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_d974ba31(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [1.0, "def solve_4acce88b(I):\n    x1 = mostcolor(I)\n    x2 = replace(I, x1, ZERO)\n    x3 = apply(d23, x2)\n    x4 = branch(x3, x2, x2)\n    x5 = x4(x4)\n    x6 = dmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = lbind(apply, maximum)\n    x9 = apply(x8, x7)\n    x10 = cmirror(x9)\n    x11 = papply(pair, x9, x10)\n    x12 = apply(x11, x7)\n    x13 = hmirror(x12)\n    x14 = papply(pair, x12, x13)\n    x15 = apply(x8, x14)\n    x16 =vdmirror(x15)\n    x17 = papply(pair, x15, x16)\n    x18 = apply(x8, x17)\n    x19 = hmirror(x18)\n    O = papply(pair, x18, x19)\n    return O"], [1.0, "def solve_fe0401ac(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_f57764ab(I):\n    x1 = asindices(I)\n    x2 = objects(I, T, F, F)\n    x3 = fork(multiply, sign, identity)\n    x4 = lbind(apply, x3)\n    x5 = chain(even, maximum, x4)\n    x6 = lbind(sfilter, x1)\n    x7 = fork(add, first, last)\n    x8 = rbind(remove, x2)\n    x9 = compose(center, last)\n    x10 = fork(subtract, first, x9)\n    x11 = compose(x5, x10)\n    x12 = lbind(rbind, equality)\n    x13 = lbind(argmin, x2)\n    x14 = chain(x7, x4, x10)\n    x15 = lbind(lbind, astuple)\n    x16 = lbind(rbind, astuple)\n    x17 = lbind(compose, x11)\n    x18 = lbind(compose, x14)\n    x19 = compose(x18, x15)\n    x20 = compose(x18, x16)\n    x21 = compose(x13, x19)\n    x22 = rbind(compose, x21)\n    x23 = lbind(lbind, valmin)\n    x24 = rbind(compose, x19)\n    x25 = chain(x24, x23, x8)\n    x26 = lbind(fork, greater)\n    x27 = fork(x26, x25, x20)\n    x28 = chain(x6, x17, x16)\n    x29 = chain(x6, x22, x12)\n    x30 = fork(intersection, x28, x29)\n    x31 = compose(x6, x27)\n    x32 = fork(intersection, x30, x31)\n    x33 = fork(recolor, color, x32)\n    x34 = mapply(x33, x2)\n    O = paint(I, x34)\n    return O"], [1.0, "def solve_71bf8673(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = dmirror(I)\n    x5 = hconcat(x4, I)\n    x6 = hmirror(x5)\n    x7 = vconcat(x5, x6)\n    x8 = vconcat(x7, x7)\n    O = compress(x8)\n    return O"], [1.0, "def solve_f9bb9db6(I):\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, size)\n    x3 = rbind(compose, asobject)\n    x4 = lbind(rbind, sfilter)\n    x5 = chain(x4, x3, x2)\n    x6 = lbind(apply, multiply)\n    x7 = chain(x6, toivec, x5)\n    x8 = fork(add, identity, x7)\n    x9 = fork(222, x8, identity)\n    x10 = compose(x7, x9)\n    x11 = power(x10, FOUR)\n    x12 = x11(I)\n    x13 = objects(x12, T, F, F)\n    x14 = colorfilter(x13, ZERO)\n    x15 = rbind(bordering, I)\n    x16 = compose(flip, x15)\n    x17 = mfilter(x14, x16)\n    x18 = hperiod(x17)\n    x19 = rbind(multiply, THREE)\n    x20 = apply(x19, x15)\n    x21 = rbind(multiply, FOUR)\n    x22 = apply(x21, x15)\n    x23 = merge(x2)\n    x24 = lbind(hperiod, x23)\n    x25 = apply(x24, x15)\n    x26 = lbind(shift, x17)\n    x27 = mapply(x26, x25)\n    x28 = apply(x27, x22)\n    O = fill(x12, FOUR, x28)\n    return O"], [1.0, "def solve_9375d687(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, lefthalf, tophalf)\n    x9 = branch(x7, righthalf, bottomhalf)\n    x10 = branch(x7, hconcat, vconcat)\n    x11 = x9(I)\n    x12 = x10(I)\n    x13 = color(x11)\n    x14 = color(x12)\n    x15 = palette(x11)\n    x16 = remove(x13, x15)\n    x17 = palette(x12)\n    x18 = remove(x16, x17)\n    x19 = merge(x18)\n    x20 = palette(x11)\n    x21 = other(x20, x19)\n    x22 = palette(x12)\n    x23 = other(x22, x19)\n    x24 = colorcount(x11, x13)\n    x25 = colorcount(x12, x13)\n    x26 = greater(x24, x25)\n    x27 = branch(x26, identity, vmirror)\n    x28 = x27(x11)\n    x29 = ofcolor(x28, x13)\n    x30 = subgrid(x29, x28)\n    x31 = x27(x30)\n    x32 = replace(x31, x13, x24)\n    O = x27(x32)\n    return O"], [1.0, "def solve_37b573ad(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_1b49b1b4(I):\n    x1 = normalize(I)\n    x2 = rot90(x1)\n    x3 = rot180(x1)\n    x4 = rot270(x1)\n    x5 = hconcat(x2, x4)\n    x6 = hconcat(x3, x5)\n    O = vconcat(x6, x1)\n    return O"], [1.0, "def solve_2d0479a8(I):\n    x1 = partition(I)\n    x2 = mostcolor(I)\n    x3 = ofcolor(I, x2)\n    x4 = switch(I, THREE, FOUR)\n    x5 = mapply(dneighbors, x1)\n    x6 = mapply(ineighbors, x1)\n    x7 = fill(x4, SIX, x5)\n    O = fill(x7, FOUR, x6)\n    return O"], [1.0, "def solve_7527d7e2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_232c4c96(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_ba5ca3b4(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(vfrontier, x2)\n    x4 = underfill(I, EIGHT, x3)\n    x5 = hconcat(x4, x4)\n    O = vconcat(x5, x5)\n    return O"], [1.0, "def solve_11ea01f1(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_cfe2fe7c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_703585f6(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x3 = minimum(x3)\n    x4 = divide(x4, x3)\n    x5 = x2(I, x4)\n    x6 = interval(ONE, x5, ONE)\n    x7 = multiply(x3, x6)\n    x8 = rbind(apply, x7)\n    x9 = lbind(mostcolor, I)\n    x10 = compose(x8, x9)\n    x11 = numcolors(I)\n    x12 = matcher(x10, x11)\n    x13 = sfilter(x2, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x6)\n    O = paint(I, x15)\n    return O"], [1.0, "def solve_301ad0f6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(ORIGIN, x17)\n    x24 = rbind(x23, x22)\n    x25 = divide(x27, x22)\n    x26 =Esfilter(x12, x25)\n    x27 = rbind(multiply, x15)\n    x28 = apply(x27, x26)\n    x29 = rbind(toobject, I)\n    x30 = lbind(shift, I)\n    x31 = mapply(x30, x29)\n    x32 = apply(x27, x26)\n    x33 = cover(I, x21)\n    x34 = fill(x32, x3, x33)\n    x35 = shift(x31, x24)\n    x36 = ofcolor(x35, x7)\n    O = fill(x34, x3, x36)\n    return O"], [1.0, "def solve_1f24bd4f(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_6fa34b4a(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_ee6c52c5(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_eb191d2e(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = decrement(x1)\n    x4 = astuple(x3, x2)\n    x5 = crop(I, ORIGIN, x4)\n    x6 = hmirror(x5)\n    x7 = vconcat(I, x6)\n    x8 = double(x3)\n    x9 = astuple(x8, x2)\n    x10 = crop(x7, DOWN, x9)\n    O = vconcat(x7, x10)\n    return O"], [1.0, "def solve_74516643(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = fork(equality, toindices, backdrop)\n    x5 = mfilter(x3, x4)\n    x6 = color(I)\n    x7 = fill(I, x6, x5)\n    O = fill(x7, ONE, x13)\n    return O"], [1.0, "def solve_ebdb7d81(I):\n    x1 = compose(first, last)\n    x2 = order(x1, sign)\n    x3 = apply(mostcommon, x2)\n    x4 = size(x3)\n    x5 = interval(ZERO, x4, ONE)\n    x6 = apply(tojvec, x5)\n    x7 = mpapply(shift, x3, x6)\n    x8 = canvas(ZERO, x4)\n    x9 = paint(x8, x7)\n    O = rot90(x9)\n    return O"], [1.0, "def solve_2f46560c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_e1442946(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x9)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x24, x23)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_790638c0(I):\n    x1 = rot270(I)\n    x2 = matcher(identity, ZERO)\n    x3 = rbind(sfilter, x2)\n    x4 = compose(flip, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = apply(x5, x1)\n    x7 = rbind(repeat, x6)\n    x8 = apply(x7, x4)\n    O = cmirror(x8)\n    return O"], [1.0, "def solve_fd464682(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_73b52bce(I):\n    x1 = palette(I)\n    x2 = intersection(x1, x1)\n    x3 = colorcount(I, ZERO)\n    x4 = outbox(x3)\n    x5 = intersection(x2, x4)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 = ofcolor(I, x6)\n    x9 = ofcolor(I, x7)\n    x10 = rbind(shoot, UNITY)\n    x11 = rbind(shoot, NEG_UNITY)\n    x12 = rbind(shoot, DOWN_LEFT)\n    x13 = rbind(shoot, UP_RIGHT)\n    x14 = fork(combine, x10, x11)\n    x15 = fork(combine, x12, x13)\n    x16 = fork(combine, x14, x15)\n    x17 = rbind(shoot, UNITY)\n    x18 = rbind(shoot, NEG_UNITY)\n    x19 = rbind(shoot, DOWN_LEFT)\n    x20 = rbind(shoot, UP_RIGHT)\n    x21 = fork(combine, x17, x20)\n    x22 = fork(combine, x18, x21)\n    x23 = fork(combine, initset, x22)\n    x24 = fork(rapply, x23, identity)\n    x25 = compose(first, x24)\n    x26 = mapply(x25, x6)\n    x27 = fill(I, x6, x26)\n    x28 = intersection(x8, x27)\n    O = fill(x22, x13, x28)\n    return O"], [1.0, "def solve_c815806e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = hsplit(I, x2)\n    x4 = shape(x3)\n    x5 = apply(size, x4)\n    x6 = argmax(x5, x2)\n    O = canvas(x6, x4)\n    return O"], [1.0, "def solve_033d3e06(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_26bc98a3(I):\n    x1 = warped(I, TEN)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [1.0, "def solve_b472da60(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, DOWN)\n    x4 = mapply(I, x3)\n    x5 = fill(I, x1, x4)\n    x6 = mapply(size, x3)\n    x7 = fill(x5, x1, x6)\n    O = replace(x7, x1, x1)\n    return O"], [1.0, "def solve_5ce3dba3(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_c4828f9e(I):\n    x1 = shape(I)\n    x2 = divide(x1, THREE)\n    x3 = first(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = last(x5)\n    x7 = shift(x6, x3)\n    O = paint(x4, x7)\n    return O"], [1.0, "def solve_fc592e6e(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    x5 = color(x4)\n    x6 = palette(x1)\n    x7 = other(x6, x5)\n    x8 = neighbors(UNITY)\n    O = initset(x17)\n    return O"], [1.0, "def solve_33a70dd8(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_4c531e60(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_7a4e1a69(I):\n    x1 = asindices(I)\n    x2 = backdrop(x1)\n    O = toobject(x2, I)\n    return O"], [1.0, "def solve_25dc8acb(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_13c4a6a0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = interval(ERO, FIVE, ONE)\n    x8 = downscale(x6, x4)\n    x9 = lbind(shift, x8)\n    x10 = mapply(x9, x7)\n    O = fill(x5, FIVE, x10)\n    return O"], [1.0, "def solve_40c0af53(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_57eafea6(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = fork(multiply, height, width)\n    x7 = width(I)\n    x8 = rbind(repeat, x7)\n    x9 = width(I)\n    x10 = subtract(x8, x9)\n    x11 = normalize(x5)\n    x12 = multiply(x4, x11)\n    x13 = shift(x15, x12)\n    x14 = dmirror(x13)\n    x15 = objects(x14, T, F, T)\n    x16 = apply(toindices, x15)\n    x17 = ofcolor(x16, x1)\n    x18 = mapply(vfrontier, x17)\n    x19 = mapply(hfrontier, x17)\n    x20 = toindices(x13)\n    x21 = box(x20)\n    x22 = difference(x19, x21)\n    x23 = x17(x22)\n    x24 = color(x3)\n    x25 = palette(x23)\n    x26 = other(x25, x24)\n    x27 = subgrid(x23, I)\n    x28 = ofcolor(x27, x26)\n    x29 = fill(x27, x26, x28)\n    O = replace(x29, x26, x1)\n    return O"], [1.0, "def solve_e23c7ee1(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_5f3e61cd(I):\n    x1 = shape(I)\n    x2 = ofcolor(I, TWO)\n    x3 = mapply(vfrontier, x2)\n    x4 = underfill(I, ZERO, x3)\n    x5 = hconcat(x4, x4)\n    O = vconcat(x5, x5)\n    return O"], [1.0, "def solve_79fc7726(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_d0cff705(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_31e4653b(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_32798bd7(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [1.0, "def solve_07514628(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = fork(equality, toindices, identity)\n    x5 = sfilter(x3, x4)\n    x6 = mapply(dneighbors, x5)\n    x7 = index(I, ORIGIN)\n    x8 = subgrid(x7, I)\n    x9 = trim(x8)\n    O = replace(x9, ONE, x7)\n    return O"], [1.0, "def solve_f3f7575b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, identity,93)\n    x3 = branch(x1, decrement, height)\n    x4 = x3(I)\n    x5 = astuple(ONE, x4)\n    x6 = x2(I)\n    x7 = crop(x6, ORIGIN, x5)\n    x8 = apply(dedupe, x7)\n    O = x2(x8)\n    return O"], [1.0, "def solve_d6a1b95a(I):\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = rbind(shoot, UP)\n    x5 = mapply(x4, x3)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = merge(x6)\n    x8 =shift(x7, UP)\n    x9 = fill(I, THREE, x3)\n    O = fill(x9, FOUR, x8)\n    return O"], [1.0, "def solve_3ece3cce(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_fea790c1(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_692d317e(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_87e2a8b7(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_880cbfb3(I):\n    x1 = asobject(I)\n    x2 = height(I)\n    x3 = decrement(x2)\n    x4 = astuple(x3, ONE)\n    x5 = halve(x4)\n    x6 = width(I)\n    x7 = halve(x6)\n    x8 = ulcorner(x7)\n    x9 = rbind(shoot, x8)\n    x10 = mapply(x9, x5)\n    x11 = canvas(ZERO, x4)\n    O = fill(x11, FOUR, x10)\n    return O"], [1.0, "def solve_5e58c2dd(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [1.0, "def solve_c00ab3e7(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_1941e2ac(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = matcher(color, x4)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x2, x6)\n    x8 = sizefilter(x7, ONE)\n    x9 = merge(x8)\n    x10 = fill(I, x4, x9)\n    x11 = merge(x8)\n    x12 = fill(x10, TWO, x11)\n    x13 = merge(x8)\n    x14 = fill(x12, ONE, x13)\n    x15 = compress(x14)\n    O = fill(x15, FOUR, x9)\n    return O"], [1.0, "def solve_f542ce7e(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = objects(I, T, F, T)\n    x5 = lbind(colorfilter, x4)\n    x6 = compose(size, x5)\n    x7 = matcher(x6, TWO)\n    x8 = colorfilter(x4, TWO)\n    x9 = rbind(adjacent, x8)\n    x10 = mfilter(x8, x9)\n    x11 = objects(I, T, F, T)\n    x12 = sfilter(x11, x7)\n    x13 = merge(x12)\n    x14 = rbind(adjacent, x13)\n    x15 = mfilter(x14, x7)\n    x16 = sfilter(x13, x15)\n    x17 = shape(x16)\n    x18 = subtract(x17, x16)\n    x19 = canvas(ZERO, x18)\n    x20 = paint(x19, x16)\n    O = subgrid(x20, I)\n    return O"], [1.0, "def solve_0cc2558a(I):\n    x1 = matcher(first, THREE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x2, x1)\n    x4 = dmirror(x3)\n    x5 = fork(combine, vfrontier, hfrontier)\n    x6 = compose(x5, x4)\n    x7 = mapply(x6, x4)\n    O = underfill(x7, ONE, x3)\n    return O"], [1.0, "def solve_bc32aca2(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x11 = canvas(x8, x9)\n    x12 = asindices(x11)\n    x13 = toobject(x12, I)\n    x14 = increment(x5)\n    x15 = increment(xx4)\n    x16 = divide(x14, x15)\n    x17 = rbind(multiply, x16)\n    x18 = apply(x17, x13)\n    x19 = rbind(toobject, I)\n    x20 = chain(x19, backdrop, x17)\n    x21 = apply(x20, x18)\n    x22 = matcher(x21, I)\n    x23 = rbind(adjacent, x12)\n    x24 = rbind(adjacent, x25)\n    x25 = fork(both, x23, x24)\n    x26 = compose(x22, x25)\n    x27 = sfilter(x2, x26)\n    O = fill(x11, x8, x27)\n    return O"], [1.0, "def solve_9205ff9d(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP)\n    x4 = rbind(shoot, DOWN)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = canvas(x10, x1)\n    x12 = astuple(dmirror, ORIGIN)\n    x13 = astuple(cmirror, x11)\n    x14 = combine(x12, x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x16, x16)\n    x18 = index(I, x2)\n    x19 = lbind(power, x18)\n    x20 = chain(first, x19, first)\n    x21 = compose(last, last)\n    x22 = fork(subtract, x21, x20)\n    x23 = compose(invert, x22)\n    x24 = fork(shoot, x22, x23)\n    x25 = fork(intersection, x24, x20)\n    x26 = chain(decrement, size, x25)\n    x27 = fork(shoot, x26, x24)\n    x28 = fork(combine, x27, x25)\n    x29 = compose(toivec, x28)\n    x30 = fork(shoot, x29, x27)\n    x31 = fork(combine, x27, x30)\n    x32 = mapply(x31, x17)\n    x33 = fill(I, EIGHT, x32)\n    x34 = mapply(x33, x19)\n    O = paint(x34, x32)\n    return O"], [1.0, "def solve_590defda(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained,25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_3ba0e11b(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_63afc717(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_a78dd068(I):\n    x1 = Fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [1.0, "def solve_9abd57e7(I):\n    x1 = height(I)\n    x2 = decrement(x1)\n    x3 = decrement(x2)\n    x4 = toivec(x3)\n    x5 = tojvec(x2)\n    x6 = add(x4, x5)\n    x7 = add(x3, x6)\n    x8 = fill(I, ZERO, x7)\n    x9 = canvas(ZERO, x1)\n    x10 = asobject(x9)\n    x11 = occurrences(x8, x10)\n    x12 = lbind(shift, x10)\n    x13 = mapply(x12, x11)\n    O = fill(x8, ONE, x13)\n    return O"], [1.0, "def solve_9579716b(I):\n    x1 = mostcolor(I)\n    x2 = hconcat(I, I)\n    x3 = upscale(I, THREE)\n    x4 = ofcolor(x3, x1)\n    x5 = asindices(x3)\n    x6 = difference(x5, x4)\n    x7 = hconcat(x2, I)\n    x8 = vconcat(x7, x7)\n    x9 = vconcat(x8, x7)\n    O = fill(x9, ZERO, x6)\n    return O"], [1.0, "def solve_122330dc(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, Righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [1.0, "def solve_63be3dc8(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_10f211ce(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_5e38dc5f(I):\n    x1 = ofcolor(I, TWO)\n    x2 = matcher(first, ZERO)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(invert, center, x3)\n    x5 = fork(shift, identity, x4)\n    x6 = canvas(ZERO, THREE_BY_THREE)\n    x7 = asindices(x6)\n    x8 = matcher(first, ZERO)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    x11 = initset(x1)\n    x12 = box(x11)\n    x13 = lbind(toobject, x12)\n    x14 = compose(x4, x13)\n    x15 = toindices(x14)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x10)\n    O = fill(x6, EIGHT, x17)\n    return O"], [1.0, "def solve_5d49d081(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_66174c0c(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_3279bf68(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_2a4b191d(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_e681058e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = sfilter(x1, hline)\n    x5 = size(x4)\n    x6 = positive(x5)\n    x7 = branch(x6, identity, dmirror)\n    x8 = x7(I)\n    x9 = rbind(subgrid, x8)\n    x10 = matcher(color, x3)\n    x11 = compose(flip, x10)\n    x12 = partition(x8)\n    x13 = sfilter(x12, x11)\n    x14 = argmax(x13, size)\n    x15 = product(x14, x14)\n    x16 = apply(color, x15)\n    x17 = canvas(x3, x14)\n    x18 = paint(x17, x16)\n    x19 = fork(remove, last, identity)\n    x20 = compose(hmirror, x19)\n    x21 = fork(vconcat, identity, x20)\n    x22 = apply(x21, x15)\n    x23 = merge(x22)\n    O = x7(x23)\n    return O"], [1.0, "def solve_d9eef308(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_393222e3(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_714271e9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = combine(x8, x9)\n    x13 = merge(x11)\n    x14 = fill(I, x3, x13)\n    x15 = paint(x14, x9)\n    O = x15(x15)\n    return O"], [1.0, "def solve_673778eb(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(lbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [1.0, "def solve_24ee4042(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_32fd83ab(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = partition(I)\n    x7 = fork(multiply, height, width)\n    x8 = fork(equality, size, x7)\n    x9 = sfilter(x6, x8)\n    x10 = argmax(x9, size)\n    x11 = difference(x5, x10)\n    x12 = apply(initset, x11)\n    x13 = rbind(hmatching, x10)\n    x14 = rbind(vmatching, x10)\n    x15 = fork(either, x13, x14)\n    x16 = Sfilter(x12, x15)\n    x17 = rbind(gravitate, x10)\n    x18 = fork(add, center, x17)\n    x19 = fork(connect, center, x18)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x16)\n    O = paint(I, x21)\n    return O"], [1.1, "def solve_43776383(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(compose, flip)\n    x3 = lbind(matcher, first)\n    x4 = compose(x2, x3)\n    x5 = lbind(compose, asobject)\n    x6 = lbind(rbind, sfilter)\n    x7 = compose(x5, x6)\n    x8 = lbind(rbind,colorcount)\n    x9 = fork(equality, x7, x8)\n    x10 = compose(x9, initset)\n    x11 = fork(indices, x7, x10)\n    x12 = compose(size, x11)\n    x13 = matcher(x12, ZERO)\n    x14 = partition(I)\n    x15 = sfilter(x14, x13)\n    x16 = argmax(x15, size)\n    x17 = remove(x16, x15)\n    x18 = lbind(chain, first)\n    x19 = lbind(rbind,\ufffdrapply)\n    x20 = lbind(lbind, initset)\n    x21 = lbind(rbind,rapply)\n    x22 = compose(x21, frontiers)\n    x23 = chain(x18, x22, last)\n    x24 = lbind(colorbind,irrelval)\n    x25 = chain(x24, color, x23)\n    x26 = matcher(x25, ZERO)\n    x27 = fork(O = fork(both, x23, x26)\n    x28 = fork(combine, x25, x27)\n    x29 = fork(shift, x28, ulcorner)\n    x30 = fork(intersection, x29, last)\n    x31 = chain(x15, x30, first)\n    x32 = size(x15)\n    x33 = equality(x32, ZERO)\n    x34 = branch(x33, x31, x29)\n    x35 = bright(x16, x34)\n    x36 =614(x35)\n    x37 = paint(I, x36)\n    O = subgrid("], [1.1, "def solve_104cb5af(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_ae30e868(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = matcher(size, SIX)\n    x2 = equality(ineighbors, x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = asindices(x4)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = intersection(x6, x5)\n    x8 = lrcorner(x7)\n    x9 = shoot(x8, DOWN_LEFT)\n    x10 = intersection(x9, x5)\n    x11 = combine(x7, x10)\n    x12 = llcorner(x11)\n    x13 = remove(x12, x11)\n    x14 = lbind(shift, x13)\n    x15 = height(x11)\n    x16 = height(x10)\n    x17 = divide(x15, x16)\n    x18 = increment(x17)\n    x19 = width(x11)\n    x20 = astuple(x18, x19)\n    x21 = crop(x4, ORIGIN, x20)\n    x22 = hupscale(x21, x18)\n    x23 = dmirror(x22)\n    x24 = shape(x23)\n    x25 = canvas(ZERO, x24)\n    x26 = ulcorner(x25)\n    x27 =rbind(shoot, x26)\n    x28 = mapply(x27, x3)\n    x29 = combine(x24, x28)\n    x30 = urcorner(x29)\n    x31 = remove(x30, x29)\n    x32 = lbind(shift, x31)\n    x33 = height(x11)\n    x34 = decrement(x33)\n    x35 = toivec(x34)\n    x36 = height(x11)\n    x37 = tojvec(x36)\n    x38 = add(x35, x37)\n    x39 = height(x11)\n    x40 = increment(x39)\n    x41 = astuple(x38, x40)\n    x42 ="], [1.1, "def solve_2974bfca(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, ONE)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)"], [1.1, "def solve_d1195071(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(both, x29, x30)\n    x34 = fork(both, x31, x32)\n    x35 = fork(both, x33, x34)\n    x36 = compose(x"], [1.1, "def solve_87600c64(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = argmax(x1, size)\n    x3 = remove(x2, x1)\n    x4 = merge(x3)\n    x5 = subgrid(x4, I)\n    x6 = chain(color, merge, lefthalf)\n    x7 = x6(x5)\n    x8 = rbind(colorcount, ZERO)\n    x9 = argmin(x2, x8)\n    x10 = rbind(colorcount, x9)\n    x11 = chain(x9, x10, palette)\n    x12 = lbind(contained, x7)\n    x13 = chain(x12, palette, x11)\n    x14 = compose(flip, x13)\n    x15 = extract(x12, x14)\n    x16 = ulcorner(x15)\n    x17 = lrcorner(x15)\n    x18 = height(x15)\n    x19 = divide(x18, x17)\n    x20 = increment(x19)\n    x21 = width(x15)\n    x22 = divide(x21, x22)\n    x23 = increment(x22)\n    x24 = invert(x23)\n    x25 = tojvec(x24)\n    x26 = asobject(x25)\n    x27 = height(x5)\n    x28 = increment(x27)\n    x29 = interval(x26, x28, ONE)\n    x30 = product(x29, x29)\n    x31 = matcher(first, x9)\n    x32 = compose(flip, x31)\n    x33 = sfilter(x30, x32)\n    x34 = fill(x5, x19, x33)\n    x35 = lbind(shift, x323)\n    x36 = fork(recolor, x35, identity)\n    x37 = mapply(x36, x22)\n    x38 = paint(x34, x37)\n    x39 = double(x conveniently)\n    x40 = invert(x39)\n    x41 = increment(x40)"], [1.1, "def solve_0a816e83(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_c3b6ab67(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_4a0be8d7(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25ff2445\n    x26 =499ling(x24)\n    x27 = objects(x3, T, F, F)\n    x28 = colorfilter(x27, ZERO)\n    x29 = rbind(toobject, x3)\n    x30 = chain(x29, backdrop, delta)\n    x31 = mapply(x30, x28)\n    x32 = combine(x24, x31)\n    x33 = rbind(adjacent, x32)\n    x34 = urcorner(x4)\n    x35 = sfilter(x4, x33)\n    x36 = Airport(x35, x4)\n    x37 = mapply(x19, x36)\n    x38 = combine(x34, x37)\n    x39 = paint(x3, x38)\n    O = x2(x39)\n"], [1.1, "def solve_71a7ca4e(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = argmax(x3, x4)\n    x6 = color(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmax(x8, x9)\n    x11 = remove(x10, x8)\n    x12 = lbind(ofcolor, I)\n    x13 = mapply(x12, x11)\n    x14 = subgrid(x13, I)\n    x15 = objects(x14, T, F, F)\n    x16 = colorfilter(x15, x6)\n    x17 = initset(x10)\n    x18 = insert(x6, x17)\n    x19 = lbind(intersection, x18)\n    x20 = chain(positive, size, x19)\n    x21 = chain(positive, decrement, size)\n    x22 = fork(either, x20, x21)\n    x23 = rbind(toobject, x14)\n    x24 = compose(corners, outbox)\n    x25 = chain(palette, x23, x24)\n    x26 = rbind(branch, x6)\n    x27 = chain(flip, x22, x25)\n    x28 = compose(first, x25)\n    x29 = fork(x26, x27, x28)\n    x30 = apply(uppermost, x16)\n    x31 = order(x30, identity)\n    x32 = lbind(apply, x29)\n    x33 = rbind(order, leftmost)\n    x34 = lbind(sfilter, x16)\n    x35 = lbind(matcher, uppermost)\n    x36 = compose(x34, x35)\n    x37 = chain(x32, x33, x36)\n    O = apply(x37"], [1.1, "def solve_d7e25281(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = lrcorner(x4)\n    x41 = index(x3, x40)"], [1.1, "def solve_323267c5(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_279cd42f(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_a5120804(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = box(x2)\n    x5 = astuple(TEN, FOUR)\n    x6 = canvas(x3, x5)\n    x7 = interval(ONE, SIX, ONE)\n    x8 = invert(TEN)\n    x9 = interval(x8, TEN, ONE)\n    x10 = product(x7, x9)\n    x11 = remove(ORIGIN, x10)\n    x12 = lbind(intersection, x4)\n    x13 = lbind(shift, x2)\n    x14 = compose(x12, x13)\n    x15 = toindices(x2)\n    x16 = lbind(intersection, x15)\n    x17 = lbind(shift, x1)\n    x18 = compose(x16, x17)\n    x19 = compose(size, x14)\n    x20 = compose(size, x18)\n    x21 = fork(equality, x19, x20)\n    x22 = chain(positive, size, x14)\n    x23 = fork(both, x21, x22)\n    x24 = sfilter(x11, x23)\n    x25 = compose(size, x14)\n    x26 = valmax(x24, x25)\n    x27 = compose(size, x14)\n    x28 = matcher(x27, x26)\n    x29 = sfilter(x24, x28)\n    x30 = fork(multiply, first, last)\n    x31 = argmax(x29, x30)\n    x32 = interval(ZERO, TEN, ONE)\n    x33 = lbind(shift, x2)\n    x34 = multiply(TEN, UNITY)\n    x35 = interval(x32, x34, invert)\n    x36 = sfilter(x32, x35)\n    x37 = apply(x33, x36)\n    x38 = mapply(x37, x000)\n    x39 = paint(I, x38"], [1.1, "def solve_c192b683(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, FIVE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = argmin(x8, numcolors)\n    x10 = normalize(x9)\n    x11 = toindices(x10)\n    x12 = increment(x width)\n    x13 = tojvec(x12)\n    x14 = shift(x11, x13)\n    x15 = argmin(x11, x13)\n    x16 = x15(I)\n    x17 = remove(x10, x1)\n    x18 = other(x17, x16)\n    x19 = color(x18)\n    x20 = lbind(shift, x18)\n    x21 = rbind(difference, x76)\n    x22 = chain(size, x20, x21)\n    x23 = matcher(x22, ZERO)\n    x24 = sfilter(x16, x23)\n    x25 = difference(x16, x24)\n    x26 = sfilter(x25, x23)\n    x27 = recolor(x10, x26)\n    x28 = lbind(shift, x14)\n    x29 = lbind(insert, x14)\n    x30 = rbind(intersection, x21)\n    x31 = chain(size, x29, x30)\n    x32 = argmax(x27, x31)\n    x33 = lbind(shift, x33)\n    x34 = lbind(insert, x33)\n    x35 = rbind(intersection, x32)\n    x36 = chain(size, x34, x35)\n    x37 = sfilter(x32, x36)\n    x38 = fork(recolor, x19, x37)\n    x39 = fork(colorcount, x18, x38)\n"], [1.1, "def solve_c12d8cb8(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =889(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, ONE, x3)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x8, x18)\n    x20 = lbind(colorcount, x7)\n    x21 = argmin(x19, x20)\n    x22 = rbind(colorcount, x21)\n    x23 = rbind(toobject, x7)\n    x24 = compose(x22, x23)\n    x25 = chain(x delta, x24, decrement)\n    x26 =55754(x25)\n    x27 = objects(x26, T, F, T)\n    x28 = rbind(colorcount, x21)\n    x29 = valmax(x27, x28)\n    x30 = rbind(toobject, x7)\n    x31 = chain(x29, x30, color)\n    x32 = x31(x1600)\n    x33 = x31(x16)\n    x34 = rbind(colorcount, x21)\n    x35 = valmax(x32, x34)\n    x36 = x35(x29)\n    x37 = equality(x36, x31)\n    x38 = astuple(ONE, x37)\n    x39 = canvas(x18, x38)\n    x40 = asobject("], [1.1, "def solve_c0cac043(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_5d7095a7(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = astuple(color, TWO)\n    x2 = astuple(TWO, ONE)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = sfilter(x32, x35)\n    x37 =neighbors(x36)\n    x38 = mapply(neighbors, x37)\n    x39 =O = fill(x31, THREE, x38"], [1.1, "def solve_327d4bcf(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale11(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O ="], [1.1, "def solve_5510e157(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = rbind(objects,)\n    x3 = rbind(x2, F)\n    x4 = rbind(x3, F)\n    x5 = lbind(d687, x4)\n    x6 = lbind(rbind, colorcount)\n    x7 = compose(x6, x5)\n    x8 = rbind(canvas, UNITY)\n    x9 = compose(x8, x7)\n    x10 = fork(hconcat, identity, x9)\n    x11 = compose(x8, x10)\n    x12 = lbind(contained, ZERO)\n    x13 = chain(flip, x12, x11)\n    x14 = compose(positive, size)\n    x15 = lbind(rbind, sfilter)\n    x16 = fork(both, x13, x15)\n    x17 = rbind(toobject, I)\n    x18 = chain(x14, x17, x16)\n    x19 = compose(x12, x18)\n    x20 = fork(equality, identity, x19)\n    x21 = compose(x20, last)\n    x22 = ofcolor(I, ZERO)\n    x23 = sfilter(x22, x12)\n    x24 = argmax(x23, x28)\n    x25 = other(x23, x24)\n    x26 = last(x23)\n    x27 = compose(first, last)\n    x28 =    x27(x26)\n    x29 = fill(I, x25, x28)\n    x30 = ofcolor(x29, x25)\n    x31 = ulcorner(x30)\n    x32 = shoot(x31, UNITY)\n    x33 = lrcorner(x30)\n    x34 = shoot(x33, NEG_UNITY)\n    x35 = urcorner(x30)\n    x36 = shoot(x35, UP_RIGHT)\n    x37 = llcorner(x30)\n    x38 = shoot(x37, DOWN_LEFT)\n    x39 = combine(x32"], [1.1, "def solve_8854ff72(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = compose(size, dedupe)\n    x3 = x2(x1)\n    x4 = positive(x3)\n    x5 = branch(x4, height, width)\n    x6 = x5(I)\n    x7 = canvas(x4, x6)\n    x8 = matcher(identity, ZERO)\n    x9 = rbind(sfilter, x8)\n    x10 = compose(first, last)\n    x11 =rbind(sfilter, x10)\n    x12 = compose(x9, x11)\n    x13 = fork(size, x12,leftmost)\n    x14 = matcher(x13, ZERO)\n    x15 = uppermost(x7)\n    x16 = leftmost(x7)\n    x17 = fork( greater, x15, x16)\n    x18 = uppermost(x7)\n    x19 = matcher(x18, ZERO)\n    x20 = rightmost(x7)\n    x21 = leftmost(x7)\n    x22 = fork( greater, x20, x21)\n    x23 = uppermost(x7)\n    x24 = matcher(x23, ZERO)\n    x25 = lrcorner(x7)\n    x26 = ulcorner(x7)\n    x27 = fork(connect, x25, x26)\n    x28 = subgrid(x27, I)\n    x29 = palette(x28)\n    x30 = sfilter(x29, x24)\n    x31 = lbind(colorcount, x28)\n    x32 = argmax(x30, x31)\n    x33 = remove(x32, x30)\n    x34 = rbind(contained, x33)\n    x35 = argmin(x34, size)\n    x36 = x35(x28)\n    x37 = palette(x35)\n    x38 = remove(x36, x35)\n    x39 = lbind(colorcount, x28)\n    x40 = argmin(x38, x39)\n    x41 = rbind(color"], [1.1, "def solve_7a5f57a2(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x352, x32)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18, x"], [1.1, "def solve_e7f52bb2(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_3690af8a(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_8ba81066(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x04, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_7753107b(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = initset(ORIGIN)\n    x5 = lbind(rapply, x4)\n    x6 = compose(first, x5)\n    x7 = chain(x10, x4, x6)\n    x8 = fork(difference, x7, toindices)\n    x9 = matcher(x8, ZERO)\n    x10 = fork(both, x9, x7)\n    x11 = extract(x3, x10)\n    x12 = ONE(x11)\n    x13 = height(x12)\n    x14 = decrement(x13)\n    x15 = mostcolor(I)\n    x16 =astuple(x14, x15)\n    x17 = repeat(x16, ONE)\n    x18 = toindices(x17)\n    x19 = asindices(I)\n    x20 = box(x19)\n    x21 = NEG_UNITY(x20)\n    x22 = toindices(x21)\n    x23 = asindices(I)\n    x24 = corners(x23)\n    x25 = DOWN(x24)\n    x26 = astuple(x14, x15)\n    x27 = astuple(x25, x26)\n    x28 = combine(x28, x27)\n    x29 = rbind(toobject, I)\n    x30 = chain(numcolors, x29, x22)\n    x31 = matcher(x30, ONE)\n    x32 = astuple(x24, x15)\n    x33 = astuple(x31, x32)\n    x34 = combine(x33, x41)\n    x35 = argmax(x34, size)\n    x36 = matcher(first, x35)\n    x37 = compose(flip, x36)\n    x38 = sfilter(x1, x37)\n    x39 =535(x38)\n    x40 = multiply(x19, x39)\n"], [1.1, "def solve_0874b1eb(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_f2c578eb(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_1799e69a(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = apply(lowermost, x6)\n    x8 = maximum(x7)\n    x9 = width(I)\n    x10 = astuple(x9, x6)\n    x11 = add(x10, TWO)\n    x12 = interval(x8, x11, ONE)\n    x13 = prapply(shift, x7, x12)\n    x14 = lbind(canvas, x1)\n    x15 = compose(x14, toindices)\n    x16 = fork(paint, x15, x15)\n    x17 = compose(x16, lefthalf)\n    x18 = righthalf(I)\n    x19 = compose(x18, righthalf)\n    x20 = righthalf(I)\n    x21 = compose(x20, palette)\n    x22 = lbind(recolor, x1)\n    x23 = compose(x22, palette)\n    x24 = rbind(paint, x18)\n    x25 = chain(x24, x23, x8)\n    x26 = x25(x20)\n    x27 = x25(x21)\n    x28 = fork(combine, vfrontier, hfrontier)\n    x29 = fork(combine, rbind, TEN)\n    x30 = rbind(occurrences, x22)\n    x31 = compose(x30, x28)\n    x32 = apply(x31, x3)\n    x33 = rbind(valmax, numcolors)\n    x34 = chain(x33, x32, x23)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = x36(x69)\n    x38 = invert(x37)\n    x39 = cover(I, x"], [1.1, "def solve_401601cb(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = shape(I)\n    x13 = canvas(x11, x12)\n    x14 = hconcat(I, x13)\n    x15 = objects(x14, F, F, T)\n    x16 = argmin(x15, size)\n    x17 = subgrid(x16, x14)\n    x18 = remove(x16, x15)\n    x19 = lbind(colorcount, x18)\n    x20 = argmin(x12, x19)\n    x21 = rightmost(x16)\n    x22 = positive(x21)\n    x23 = vmirror(x22)\n    x24 = papply(pair, x17, x23)\n    x25 = lbind(apply, maximum)\n    x26 = size(x24)\n    x27 = increment(x26)\n    x28 = tojvec(x27)\n    x29 = leftmost(x16)\n    x30 = rightmost(x16)\n    x31 = ofcolor(x14, x29)\n    x32 = ofcolor(x20, x30)\n    x33 = combine(x31, x32)\n    x34 = combine(x33, x36)\n    x35 = height(x14)\n    x36 = height(x20)\n    x37 = interval(FOUR, x35, x36)\n    x38 = lbind(compose, flip)\n    x39 = lbind(matcher, first)\n    x40 = compose(x38, x39)\n    x41 = rbind(compose, asobject)\n    "], [1.1, "def solve_034cc5b5(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = connect(ORIGIN, DOWN)\n    x4 = connect(ORIGIN, ZERO_BY_TWO)\n    x5 = combine(x3, x4)\n    x6 = height(I)\n    x7 = equality(x6, TWO)\n    x8 = height(I)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x5, x9)\n    x11 = lbind(apply, last)\n    x12 = compose(x11, first)\n    x13 = chain(positive, positive, x12)\n    x14 = lbind(interval, ZERO)\n    x15 = rbind(x14, ONE)\n    x16 = rbind(sfilter, x13)\n    x17 = compose(x15, last)\n    x18 = fork(pair, x17, x8)\n    x19 = chain(x13, x16, x18)\n    x20 = rbind(branch, identity)\n    x21 = rbind(x20, x19)\n    x22 = chain(size, dedupe, x21)\n    x23 = lbind(equality, ONE)\n    x24 = chain(x22, x23, x19)\n    x25 = compose(initset, x24)\n    x26 = fork(rapply, x25, x22)\n    x27 = compose(first, x26)\n    x28 = extract(x10, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(x30)\n    x32 = palette(x31)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(404, x33)\n    x35 = ofcolor(x31, ONE)\n    x36 =    6000dederence(x35)\n    x37 = product(x36, x36)\n    x38 = fork(equality, identity, vmirror)\n    x39 = apply(x38, x37)\n    x40 = insert"], [1.1, "def solve_03a7b060(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_7df75ef6(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_43342523(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = rbind(compose, x30)\n    x37 = lbind(compose, x30)\n    x38 = lbind(lbind, subtract)\n    x39 = compose(x37, x38)\n    x40 = lbind(compose, x33)\n    x41 = compose(x39, x40)\n    x42 = fork(sfilter, x35"], [1.1, "def solve_32b51cdb(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, last)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, first)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, x10)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, x12)\n    x15 = rbind(shift, ZERO_BY_TWO)\n    x16 = compose(x15, x14)\n    x17 = rbind(shift,12chain)\n    x18 = compose(x17, first)\n    x19 = lbind(recolor, ZERO)\n    x20 = compose(x19, ulcorner)\n    x21 = fork(combine, x18, x20)\n    x22 = chain(x5, first, x21)\n    x23 = fork(paint, identity, x22)\n    x24 = chain(x5, first, x18)\n    x25 = fork(multiply, identity, x24)\n    x26 = chain(x5, last, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = fork(add, x23, x27)\n    x29 = fork(add, x28, x28)\n    x30 = compose(last, x29)\n    x31 = rbind(argmin, x30)\n    x32 = lbind( Recreurrences, x9)\n    x33 = compose(first, x32)\n    x34 = fork(add, x33, x29)\n    x35 = compose(x31, x34)\n    x36 = fork(65935, first, x35)"], [1.1, "def solve_10bcf21a(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_f96999e7(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_afdda1c5(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_67d7471b(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 =Rbind(colorcount, x10)\n    x12 = normalize(I)\n    x13 =91(x11)\n    x14 = color(x12)\n    x15 = remove(x3, x8)\n    x16 = apply(first, x15)\n    x17 = last(x15)\n    x18 = objects(x6, T, T, T)\n    x19 = colorfilter(x18, x14)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = interval(ZERO, x21, ONE)\n    x23 = asobject(x22)\n    x24 = rbind(first, x10)\n    x25 = apply(x24, x23)\n    x26 = astuple(x21, x25)\n    x27 = x26(x23)\n    x28 = x26(x24)\n    x29 = x28(x27)\n    x30 = x28(x24)\n    x31 = x29(x canvas)\n    x32 = fill(x31, x11, x27)\n    x33 = fill(x32, x10, x27)\n    x34 = fill(x33, x14, x20)\n    x35 = fill(x34, x13, x29)\n    x36 = ofcolor(x35, x10)\n    x37 = rbind(contained, x36)\n    x38 = compose(x37, ulcorner)\n    x39 = sfilter(x43, x38)\n    x40 = shape(x39)\n    x41 = subtract(x40, DOWN)\n    x42 = canvas(x"], [1.1, "def solve_c9621d7e(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_421f7fa5(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_1cc3a4ac(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = chain(rot90, x24, x27)\n    x29 = power(x28, FOUR)\n    x30 = compose(first, x29)\n    x31 = multiply(TEN, THREE)\n    x32 = power(x30, x31)\n    x33 = fork(astuple, x29, x32)\n    x34 = size(x467)\n    x35 = power(x33, x34)\n    x36 = astuple(x35, x27)\n    x37 = lbind(canvas, x35)\n    x38 = lbind(prapply, x37)\n    x39"], [1.1, "def solve_4c68eff4(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_d4df188a(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = rbind(ofcolor, ZERO)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = remove(ORIGIN, x1)\n    x5 = lbind(argmin, x4)\n    x6 = lbind(lbind, manhattan)\n    x7 = compose(x5, x6)\n    x8 = compose(x3, x7)\n    x9 = lowermost(x7)\n    x10 = rightmost(x7)\n    x11 = matcher(x8, x9)\n    x12 = leftmost(x7)\n    x13 = matcher(x8, x12)\n    x14 = uppermost(x7)\n    x15 =rightmost(x7)\n    x16 = matcher(x14, x15)\n    x17 = uppermost(x7)\n    x18 = matcher(x17, x16)\n    x19 = rightmost(x7)\n    x20 = matcher(x19, x18)\n    x21 = leftmost(x7)\n    x22 = matcher(x21, x15)\n    x23 = leftmost(x7)\n    x24 = matcher(x23, x12)\n    x25 = rightmost(x7)\n    x26 = matcher(x25, x15)\n    x27 = fork(add, x26, x7)\n    x28 = fork(add, x27, x14)\n    x29 = fork(add, x28, x20)\n    x30 = fork(add, x29, x21)\n    x31 = palette(I)\n    x32 = lbind(sfilter, x31)\n    x33 = lbind(matcher, identity)\n    x34 = compose(x33, x30)\n    x35 = chain(size, x32, x34)\n    x36 = ofcolor(I, ZERO)\n    x37 = palette(I)\n    x38 = repeat(x16, x38)\n    x39 =\n     leftmost(x39)\n    x40 = trim(I)\n    "], [1.1, "def solve_3b0afb7f(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_28e252af(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = rbind(order, leftmost)\n    x4 = chain(x3, toindices, x2)\n    x5 = lbind(contained, x1)\n    x6 = compose(x5, x4)\n    x7 = fork(223(x6, fork, identity)\n    x8 = extract(x1, x7)\n    x9 = x5(x8)\n    x10 = branch(x9, identity, dmirror)\n    x11 = x10(x1)\n    x12 = replace(x11, EIGHT, x9)\n    x13 = x10(x2)\n    x14 = branch(x13, identity, vmirror)\n    x15 = x14(x13)\n    x16 = trim(x15)\n    x17 = mostcolor(x16)\n    x18 = repeat(x16, ONE)\n    x19 = mapply(d43, x18)\n    x20 = x14(x19)\n    x21 = replace(x20, EIGHT, x17)\n    x22 = x10(x21)\n    x23 = replace(x22, righthalf, x17)\n    x24 = replace(x23,nah to, x17)\n    x25 = dmirror(x24)\n    x26 = width(x22)\n    x27 = add(x26, DOWN)\n    x28 = dmirror(x25)\n    x29 = add(x28, x26)\n    x30 = invert(x29)\n    x31 = width(x22)\n    x32 = increment(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = asobject(x22)\n    x35 = ZERO(x34)\n    x36 = ofcolor(x10, x17)\n    x37 = shift(x36, last)\n    x38 = paint(x12, x37)\n    x39 = double(x30)\n    x40 = downscale(x38, x39)\n    x41 = interval"], [1.1, "def solve_15884ee1(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, ONE)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)"], [1.1, "def solve_fb219415(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = lbind(colorfilter, x1)\n    x5 = compose(size, x4)\n    x6 = matcher(x5, TWO)\n    x7 = asindices(I)\n    x8 = box(x7)\n    x9 = rbind(difference, x8)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(size, x9, x10)\n    x12 = matcher(x11, ZERO)\n    x13 = rbind(greater, ONE)\n    x14 = lbind(apply, size)\n    x15 = lbind(colorfilter, x1)\n    x16 = compose(x14, x15)\n    x17 = chain(x13, minimum, x16)\n    x18 = fork(both, x12, x17)\n    x19 = fork(both, x6, x18)\n    x20 = extract(x3, x19)\n    x21 = other(x3, x20)\n    x22 = ofcolor(I, x21)\n    x23 = colorfilter(x1, x20)\n    x24 = rbind(vmatching, x22)\n    x25 = rbind(hmatching, x22)\n    x26 = fork(either, x24, x25)\n    x27 = extract(x23, x26)\n    x28 = other(x23, x27)\n    x29 = rbind(gravitate, x27)\n    x30 = compose(x29, initset)\n    x31 = fork(add, identity, x30)\n    x32 = fork(connect, identity, x31)\n    x33 = mapply(x32, x22)\n    x34 = fill(I, x21, x33)\n    x35 = fill(x34, FOUR, x22)\n    x36 = ofcolor(I, x20)\n    x37 = apply(first, x36)\n    x38 = size(x37)\n    x39 = apply"], [1.1, "def solve_a2d4c73b(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(identity, dmirror)\n    x5 = astuple(cmirror, hmirror)\n    x6 = combine(x4, x5)\n    x7 = rbind(rapply, I)\n    x8 = compose(first, x7)\n    x9 = chain(x3, x8, initset)\n    x10 = extract(x6, x9)\n    x11 = x10(I)\n    x12 = mostcolor(I)\n    x13 = palette(I)\n    x14 = remove(x12, x13)\n    x15 = other(x14, TWO)\n    x16 = ofcolor(x11, x15)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, identity, vmirror)\n    x20 = x19(x11)\n    x21 = ofcolor(x20, x15)\n    x22 = ofcolor(x20, TWO)\n    x23 = apply(last, x22)\n    x24 = insert(ZERO, x23)\n    x25 = width(x20)\n    x26 = insert(x25, x24)\n    x27 = order(x26, identity)\n    x28 = last(x27)\n    x29 = remove(x28, x27)\n    x30 = first(x27)\n    x31 = remove(x30, x27)\n    x32 = pair(x29, x31)\n    x33 = size(x29)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = pair(x34, x32)\n    x36 = lbind(fork, connect)\n    x37 = compose(first, last)\n    x38 = chain(decrement, last, last)\n    x39 = lbind(lbind, add)\n    x40 = compose(x39, first)\n    x41 = lbind("], [1.1, "def solve_263f7412(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = rapply(x30, x2)\n    x32 = first(x31)\n    x33 = last(x31)\n    x34 =    x32(I)\n    x35 = dmirror(x34)\n    x36 = dedupe(x35)\n    x37 = chain"], [1.1, "def solve_ffe9c7f9(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, size)\n    x3 =323(I)\n    x4 = sfilter(x3, x2)\n    x5 = fork(apply, vfrontier, hfrontier)\n    x6 = sfilter(x4, x2)\n    x7 = fork(intersection, x5, x6)\n    x8 = chain(size, x7, x8)\n    x9 = matcher(x8, ZERO)\n    x10 = matcher(TWO, ONE)\n    x11 = sfilter(x4, x9)\n    x12 = sfilter(x4, x10)\n    x13 = merge(x11)\n    x14 = fill(I, TWO, x13)\n    x15 = merge(x12)\n    x16 = width(x15)\n    x17 = ulcorner(x15)\n    x18 =27(x16)\n    x19 = subtract(x17, x18)\n    x20 = increment(x19)\n    x21 = width(x20)\n    x22 = subtract(x17, x21)\n    x23 = RIGHT(x20, x22)\n    x24 = sfilter(x4, x23)\n    x25 = chain(first, last, first)\n    x26 = totuple(x24)\n    x27 = apply(x25, x26)\n    x28 = combine(x28, x27)\n    x29 = lbind(colorcount, x14)\n    x30 = argmax(x29, x28)\n    x31 = remove(x30, x30)\n    x32 = first(x31)\n    x33 = ofcolor(x32, x32)\n    x34 = shift(x33, x323)\n    x35 = combine(x28, x34)\n    x36 = recolor(x32, x35)\n    x37 = shift(x33, x327)\n    x38 = occurrences(x38, x37)\n    x39 = mapply(toindices, x38)\n    x40 = lbind(mapply, x5)\n"], [1.1, "def solve_19ce1e47(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = compose(leftmost, first)\n    x13 = compose(leftmost, last)\n    x14 = fork(equality, x12, x13)\n    x15 = compose(uppermost, first)\n    x16 = compose(uppermost, last)\n    x17 = fork(equality, x15, x16)\n    x18 = fork(either, x14, x17)\n    x19 = sfilter(x11, x18)\n    x20 = compose(color, first)\n    x21 = compose(center, first)\n    x22 = compose(center, last)\n    x23 = fork(connect, x21, x22)\n    x24 = fork(recolor, x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = matcher(last, ZERO)\n    x28 = decrement(x26)\n    x29 = matcher(last, x28)\n    x30 = fork(either, x27, x29)\n    x31 = matcher(first, ZERO)\n    x32 = decrement(x25)\n    x33 = matcher(first, x32)\n    x34 = fork(either, x31, x33)\n    x35 = toindices(x5)\n    x36 = sfilter(x35, x30)\n    x37 = equality(x35, x36)\n    x38 = mapply(x24, x19)\n    x39 = paint(I, x38)\n    x40 = branch(x37, x30, x34)\n    "], [1.1, "def solve_3da22d9e(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = colorfilter(x2, x1)\n    x4 = rbind(bordering, I)\n    x5 = compose(flip, x4)\n    x6 = mfilter(x3, x5)\n    x7 = outbox(x6)\n    x8 = subgrid(x7, I)\n    x9 = trim(x8)\n    x10 = palette(x9)\n    x11 = matcher(identity, x1)\n    x12 = argmin(x10, x11)\n    x13 = trim(x8)\n    x14 = ofcolor(x13, x12)\n    x15 = shift(x14, UNITY)\n    x16 = matcher(first, x12)\n    x17 = rbind(sfilter, x16)\n    x18 = compose(flip, x17)\n    x19 = rbind(sfilter, x18)\n    x20 = chain(normalize, x17, x19)\n    x21 = mostcolor(x10)\n    x22 = ofcolor(x8, x21)\n    x23 = combine(x15, x22)\n    x24 = fill(x8, x12, x23)\n    x25 = difference(x19, x22)\n    x26 = ofcolor(x24, x25)\n    x27 = asindices(x24)\n    x28 = ofcolor(x24, x12)\n    x29 = leftmost(x28)\n    x30 = invert(x29)\n    x31 = shift(x27, x30)\n    x32 = lbind(shift, x28)\n    x33 = apply(x32, x31)\n    x34 = mapply(x24, x33)\n    x35 = fill(x24, x12, x34)\n    x36 = lbind(shift, x29)\n    x37 = mapply(x36, x31)\n    x38 = shift(x37, x32)\n    x39 = combine(x35, x38)\n    O = fill"], [1.1, "def solve_52642045(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_27032fba(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(add, x28, x33)\n    x34 = argmax(x1, x33)\n    x35 = x30(x34)\n    x36 = x30(x36)\n    "], [1.1, "def solve_627a25f5(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_7e4a9a9c(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 =42568b91\n    70446868723\n    2872536926\n    3797228669\n    2973625214\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 =42568b91000\n    70886868723\n    2872536926\n    3797228669\n    2973625214\n    0658658066\n    0281869366\n    09600060591\n    1763502461\n    \"\"\"\n    x1 = canvas(x3, THREE_BY_THREE)\n    x2 = toobject(x1, I)\n    x3 = asobject(x2)\n    x4 = vmirror(x3)\n    x5 = hline(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = asobject(x7)\n    x9 = matcher(first, x3)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = sfilter(x8, x9)\n    x13 = height(x12)\n    x14 = width(x12)\n    x15 = divide(x13, x14)\n    x16 = astuple(x15, x13)\n    x17 = mostcolor(I)\n    x18 = canvas(x17, x16)\n    x19 = multiply(x18, x509)\n    x20 = canvas(x17, x19)\n    x21 = asobject(x20)\n    x22 = frontiers(x21)\n    x23 = merge(x22)\n    x24 = paint(x18, x23)\n    x25 = objects(x24, F, F, T)\n    x26 = first(x25)\n    x27 = mostcolor(x26)"], [1.1, "def solve_d7342afd(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(identity, dmirror)\n    x5 = astuple(cmirror, hmirror)\n    x6 = combine(x4, x5)\n    x7 = rbind(rapply, I)\n    x8 = compose(first, x7)\n    x9 = chain(x3, x8, initset)\n    x10 = extract(x6, x9)\n    x11 = x10(I)\n    x12 = mostcolor(I)\n    x13 = palette(I)\n    x14 = remove(x12, x13)\n    x15 = other(x14, FIVE)\n    x16 = ofcolor(x11, x15)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, identity, vmirror)\n    x20 = x19(x11)\n    x21 = ofcolor(x20, x15)\n    x22 = ofcolor(x20, FIVE)\n    x23 = intersection(x21, x22)\n    x24 = fill(x20, TWO, x23)\n    x25 = lbind(contained, x15)\n    x26 = compose(first, last)\n    x27 = sfilter(x22, x26)\n    x28 = difference(x22, x27)\n    x29 = fill(x24, TWO, x288)\n    x30 = objects(x29, T, F, T)\n    x31 = colorfilter(x30, TWO)\n    x32 = difference(x30, x31)\n    x33 = first(x32)\n    x34 = power(outbox, TWO)\n    x35 = compose(first, last)\n    x36 = fork(equality, identity, x35)\n    x37 = compose(last, first)\n    x38 = fork(equality, identity, x37)\n    x39 = sfilter(x33, x38)\n    x40"], [1.1, "def solve_e252e7c4(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_a0293036(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = add(UNITY, UNITY)\n    x3 =insert(UNITY, x2)\n    x4 = merge(x3)\n    x5 = dmirror(x4)\n    x6 = invert(NEG_TWO)\n    x7 = shift(x5, x6)\n    x8 = astuple(NEG_TWO, ONE)\n    x9 = hmirror(x8)\n    x10 = vmirror(x9)\n    x11 = insert(x10, x8)\n    x12 = invert(x11)\n    x13 = shift(x13, x12)\n    x14 = combine(x7, x13)\n    x15 = I(x14)\n    x16 = combine(x7, x13)\n    x17 = I(x16)\n    x18 = palette(x15)\n    x19 = lbind(colorcount, x15)\n    x20 = compose(x19, color)\n    x21 = argmin(x18, x20)\n    x22 = rbind(colorcount, x21)\n    x23 = apply(x22, x16)\n    x24 = maximum(x23)\n    x25 = increment(x24)\n    x26 = interval(ONE, x25, ONE)\n    x27 = apply(x26, x24)\n    x28 = astuple(x24, x27)\n    x29 = lbind(canvas, x1)\n    x30 = lbind(occurrences, x5)\n    x31 = rbind(rapply, x22)\n    x32 = compose(initset, x31)\n    x33 = chain(first, x31, x32)\n    x34 = rbind(rapply, x22)\n    x35 = compose(initset, x35)\n    x36 = chain(first, x34, x35)\n    x37 = matcher(x33, x21)\n    x38 = fork(both, x37, x25)\n    x39 = compose(flip, x38)\n    x40 = extract(x27"], [1.1, "def solve_5269d9dc(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_3eef444f(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = chain(x4, x5, color)\n    x7 = compose(maximum, shape)\n    x8 = fork(add, x7, x6)\n    x9 = compose(invert, x8)\n    x10 = order(x2, x9)\n    x11 = rbind(add, DOWN)\n    x12 = compose(x11, ulcorner)\n    x13 = fork(contained, x12, toindices)\n    x14 = rbind(add, RIGHT)\n    x15 = compose(x14, ulcorner)\n    x16 = fork(contained, x15, toindices)\n    x17 = fork(add, x13, x16)\n    x18 = rbind(argmax, x17)\n    x19 = compose(initset, identity)\n    x20 = fork(insert, vmirror, x19)\n    x21 = fork(insert, cmirror, x20)\n    x22 = fork(insert, hmirror, x21)\n    x23 = compose(x18, x22)\n    x24 = apply(x23, x10)\n    x25 = size(x2)\n    x26 = apply(size, x2)\n    x27 = contained(ONE, x26)\n    x28 = increment(x25)\n    x29 = branch(x27, x25, x28)\n    x30 = double(x29)\n    x31 = decrement(x30)\n    x32 = apply(normalize, x24)\n    x33 = interval(ZERO, x29, ONE)\n    x34 = pair(x33, x33)\n    x35 = mpapply(shift, x32, x34)\n    x36 = astuple(x31, x31)\n    x37 = canvas(x1, x36)\n    x38 = paint(x37, x35)\n    x39 ="], [1.1, "def solve_6dc31a12(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = size(x1)\n    x5 = positive(x4)\n    x6 = branch(x5, hsplit, vsplit)\n    x7 = x6(I, TWO)\n    x8 = first(x7)\n    x9 = last(x7)\n    x10 = palette(x8)\n    x11 = matcher(identity, x9)\n    x12 = palette(x8)\n    x13 = sfilter(x10, x11)\n    x14 = size(x13)\n    x15 = positive(x14)\n    x16 = branch(x15, identity, dmirror)\n    x17 = x16(x6)\n    x18 = first(x17)\n    x19 = flip(x15)\n    x20 = hmirror(x18)\n    x21 = palette(x20)\n    x22 = lbind(colorcount, x20)\n    x23 = compose(x22, argmin)\n    x24 = rbind(colorcount, x3)\n    x25 = chain(x24, positive, x23)\n    x26 = lbind(ofcolor, x18)\n    x27 =88(x25, x20)\n    x28 = ZERO(x27)\n    x29 = lbind(subtract, x28)\n    x30 = compose(x29, last)\n    x31 = fork(argmin, x30, x21)\n    x32 = x31(x6)\n    x33 = x30(x32)\n    x34 = ofcolor(x33, x3)\n    x35 = gravitate(x34, x32)\n    x36 = x31(x35)\n    x37 = x30(x36)\n    x38 = crop(x37, x4, xitset)\n    x39 = lbind(argmin, x38)\n    x40 = lbind(rbind, manhattan)\n    x41 = compose(x39, x40)\n    x42 = fork(remove, x41"], [1.1, "def solve_839a7b8a(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18, x"], [1.1, "def solve_0a5cd984(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_b920fc30(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind"], [1.1, "def solve_685f3cdc(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = leastcolor(I)\n    x9 = rbind(ofcolor, x8)\n    x10 = rbind(rapply, I)\n    x11 = chain(first, x10, initset)\n    x12 = chain(hline, x9, x11)\n    x13 = rbind(ofcolor, x8)\n    x14 = rbind(rapply, I)\n    x15 = chain(first, x14, initset)\n    x16 = chain(leftmost, x13, x15)\n    x17 = matcher(x16, ZERO)\n    x18 = fork(both, x12, x17)\n    x19 = compose(x18, first)\n    x20 = extract(x7, x19)\n    x21 = first(x20)\n    x22 = last(x20)\n    x23 = x21(I)\n    x24 = ofcolor(x23, x8)\n    x25 = argmax(x24, last)\n    x26 = add(x25, UP_RIGHT)\n    x27 = shoot(x26, UP_RIGHT)\n    x28 = add(x25, DOWN_LEFT)\n    x29 = shoot(x28, DOWN_LEFT)\n    x30 = rbind(shoot, LEFT)\n    x31 = mapply(x30, x27)\n    x32 = rbind(shoot, LEFT)\n    x33 = mapply(x32, x29)\n    x34 = width(x23)\n    x35 = invert(x34)\n    x36 = tojvec(x35)\n    x37 = shift(x31, x36)\n    x38 = combine(x31, x37)\n    x39 ="], [1.1, "def solve_d65a73a7(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = height(I)\n    x9 = astuple(x8, ONE)\n    x10 = canvas(THREE, x9)\n    x11 = hconcat(x10, I)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = identity(DOWN)\n    x17 = connect(ORIGIN, x15)\n    x18 = fill(x11, THREE, x17)\n    x19 = identity(x13)\n    x20 = identity(x12)\n    x21 = identity(x12)\n    x22 = identity(F)\n    x23 = identity(ZERO)\n    x24 = compose(first, first)\n    x25 = chain(first, last, x24)\n    x26 = compose(first, first)\n    x27 = chain(last, last, x26)\n    x28 = chain(first, first, first)\n    x29 = chain(first, last, last)\n    x30 = chain(first, first, last)\n    x31 = chain(last, first, last)\n    x32 = compose(decrement, x25)\n    x33 = compose(decrement, x27)\n    x34 = fork(astuple, x32, x33)\n    x35 = compose(decrement, x27)\n    x36 = fork(multiply, x30, x35)\n    x37 = fork(add, x29, x36)\n    x38 = compose(decrement, x28)\n    x39 = fork(multiply, x30, x38)\n    x40 = fork(add, x29, x39)\n    x41 ="], [1.1, "def solve_bd288950(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = width(I)\n    x2 = decrement(x1)\n    x3 = tojvec(x2)\n    x4 = connect(ORIGIN, x3)\n    x5 = height(I)\n    x6 = decrement(x5)\n    x7 = toivec(x6)\n    x8 = connect(ORIGIN, x7)\n    x9 = width(I)\n    x10 = decrement(x9)\n    x11 = tojvec(x10)\n    x12 = shape(I)\n    x13 = decrement(x12)\n    x14 = connect(x11, x13)\n    x15 = height(I)\n    x16 = decrement(x15)\n    x17 = toivec(x16)\n    x18 = shape(I)\n    x19 = decrement(x18)\n    x20 = connect(x17, x19)\n    x21 = asindices(I)\n    x22 = box(x21)\n    x23 = toobject(x22, I)\n    x24 = mostcolor(x23)\n    x25 = matcher(color, x24)\n    x26 = compose(flip, x25)\n    x27 = rbind(sfilter, x26)\n    x28 = rbind(sizefilter, ONE)\n    x29 = rbind(objects, F)\n    x30 = rbind(x29, F)\n    x31 = rbind(x30, T)\n    x32 = rbind(subgrid, I)\n    x33 = chain(x27, x31, x32)\n    x34 = chain(size, x28, x33)\n    x35 = astuple(x4, x8)\n    x36 = astuple(x14, x20)\n    x37 = combine(x35, x36)\n    x38 = argmax(x37, x34)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, initset)\n    x41 = ofcolor(I, x24)\n    x42 = difference(x38, x41)\n"], [1.1, "def solve_2c656666(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, corners)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = fgpartition(I)\n    x6 = merge(x5)\n    x7 = backdrop(x4)\n    x8 = toobject(x7, I)\n    x9 = difference(x6, x8)\n    x10 = mostcolor(I)\n    x11 = inbox(x4)\n    x12 = backdrop(x11)\n    x13 = toobject(x12, I)\n    x14 = matcher(first, x10)\n    x15 = compose(flip, x14)\n    x16 = sfilter(x13, x15)\n    x17 = subgrid(x9, I)\n    x18 = palette(x16)\n    x19 = order(x18, identity)\n    x20 = lbind(colorcount, x16)\n    x21 = apply(x20, x19)\n    x22 = lbind(colorcount, x9)\n    x23 = apply(x22, x19)\n    x24 = pair(x21, x23)\n    x25 = fork(divide, first, last)\n    x26 = apply(x25, x24)\n    x27 = mostcommon(x26)\n    x28 = lbind(colorcount, x16)\n    x29 = lbind(colorcount, x9)\n    x30 = fork(divide, x28, x29)\n    x31 = matcher(x30, x27)\n    x32 = palette(x9)\n    x33 = sfilter(x32, x31)\n    x34 = rbind(contained, x33)\n    x35 = compose(x34, first)\n    x36 = sfilter(x16, x35)\n    x37 = sfilter(x9, x35)\n    x38 = height(x36)\n    x39 = height(x37)\n    x40 = divide(x38, x39)\n    x41 = width(x36)\n    x42"], [1.1, "def solve_9ea6762b(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_cf8d240f(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_4690cbcb(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = trim(I)\n    x2 = decrement(x1)\n    x3 = tojvec(x2)\n    x4 = connect(ORIGIN, x3)\n    x5 = height(I)\n    x6 = decrement(x5)\n    x7 = toivec(x6)\n    x8 = connect(ORIGIN, x7)\n    x9 = width(I)\n    x10 = decrement(x9)\n    x11 = tojvec(x10)\n    x12 =677(x8)\n    x13 = shape(I)\n    x14 = decrement(x13)\n    x15 = connect(x12, x14)\n    x16 = rbind(multiply, TWO)\n    x17 = apply(x16, x10)\n    x18 = rbind(multiply, FOUR)\n    x19 = apply(x18, x15)\n    x20 = asindices(x1)\n    x21 = ofcolor(I, ZERO)\n    x22 = difference(x20, x21)\n    x23 = rbind(multiply, THREE)\n    x24 = apply(x23, x22)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = astuple(x26, x18)\n    x28 = rbind(multiply, x27)\n    x29 = apply(x28, x26)\n    x30 = rbind(hmatching, x27)\n    x31 = rbind(vmatching, x27)\n    x32 = fork(either, x30, x31)\n    x33 = compose(x32, initset)\n    x34 = ofcolor(I, FIVE)\n    x35 = sfilter(x34, x33)\n    x36 = height(I)\n    x37 = equality(x36, FOUR)\n    x38 = insert(x33, x37)\n    x39 = THREE(x38, x34)\n    x40 = contained(x39, x35)\n    x41 = branch(x40, height, width)\n    x42"], [1.1, "def solve_dd6157f5(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(x32, x38, first)\n    x40 = matcher(x39, x20)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_6598a996(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = fork(connect, ulcorner, lrcorner)\n    x2 = x1(I)\n    x3 = shape(x2)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = subtract(x4, x5)\n    x7 = mostcolor(I)\n    x8 = shape(x2)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x5, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, insert)\n    x16 = lbind(power, inbox)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x4)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x22)\n    x24 = uppermost(x12)\n    x25 = lbind(chain, x24)\n    x26 = lbind(rbind, add)\n    x27 = compose(x26, x13)\n    x28 = lbind(compose, x24)\n    x29 = fork(rapply, x27, x28)\n    x30 = compose(x15, x29)\n    x31 = fork(contained, x23, x30)\n    x32 = compose(invert, x251)\n    x33 = fork(add, x31, x32)\n    x34 = fork(add, x33, x309)\n    x35 = fork(halve, x34, x29)\n    x36 = compose(85556, x27)\n    x37 = fork(86, lrcorner, x36)\n    x38 = compose(toivec, x37"], [1.1, "def solve_31566156(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 =795(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = lbind(chain, positive)\n    x6 = lbind(x5, size)\n    x7 = rbind(compose, backdrop)\n    x8 = lbind(lbind, intersection)\n    x9 = chain(x6, x7, x8)\n    x10 = chain(x9, backdrop, outbox)\n    x11 = lbind(sfilter, x4)\n    x12 = compose(x11, x10)\n    x13 = chain(positive, size, x12)\n    x14 = sfilter(x4, x13)\n    x15 = compose(merge, x12)\n    x16 = apply(x15, x14)\n    x17 = rbind(subgrid, I)\n    x18 = apply(x17, x16)\n    x19 = merge(x16)\n    x20 = palette(x19)\n    x21 = lbind(colorcount, x19)\n    x22 = argmin(x20, x21)\n    x23 = rbind(colorcount, x22)\n    O = argmax(x18, x23)\n    return O"], [1.1, "def solve_7a7784dc(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = replace(I, x1, ZERO)\n    x3 = apply(normalize, x2)\n    x4 = asindices(x3)\n    x5 = NEG_UNITY(x4)\n    x6 = dmirror(x5)\n    x7 = invert(x6)\n    x8 =777652(x3, x7)\n    x9 = shift(x8, x5)\n    O = paint(x2, x9)\n    return O"], [1.1, "def solve_cd53d13c(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = asobject(I)\n    x2 = lbind(shift, x1)\n    x3 = compose(x2, llcorner)\n    x4 = rbind(shift, urcorner)\n    x5 = compose(x4, urcorner)\n    x6 = chain(x3, x5, x4)\n    x7 =11(x6)\n    x8 = height(I)\n    x9 = width(I)\n    x10 = compose(last, last)\n    x11 = subtract(x10, x9)\n    x12 = decrement(x11)\n    x13 = multiply(x12, TWO)\n    x14 = add(x13, x11)\n    x15 = height(I)\n    x16 = subtract(x15, x12)\n    x17 = decrement(x16)\n    x18 = apply(x12, x14)\n    x19 = astuple(x17, x18)\n    x20 = canvas(ZERO, x19)\n    x21 = asobject(x20)\n    x22 = occurrences(I, x21)\n    x23 = mapply(x2, x22)\n    O = fill(x20, ONE, x23)\n    return O"], [1.1, "def solve_2b65b451(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = size(x5)\n    x7 = positive(x6)\n    x8 = bottomhalf(x5)\n    x9 = lefthalf(x8)\n    x10 = branch(x7, x9, x6)\n    x11 = branch(x7,)*9, x10)\n    x12 = delta(x11)\n    x13 = decrement(x12)\n    x14 = uppermost(x11)\n    x15 = remove(x14, x11)\n    x16 = lbind(position, x11)\n    x17 = lbind(shoot, x13)\n    x18 = compose(x16, x17)\n    x19 = fork(intersection, x18, identity)\n    x20 = lowermost(x5)\n    x21 = rbind(multiply, x20)\n    x22 = chain(size, x21, toindices)\n    x23 = argmax(x15, x22)\n    x24 = shape(I)\n    x25 = canvas(x24, x24)\n    x26 = lbind(shift, x11)\n    x27 = mapply(x26, x23)\n    O = paint(x25, x27)\n    return O"], [1.1, "def solve_8f1e439b(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 =7766(I)\n    x4 =66(73)\n    x5 = fork(both, x3, x4)\n    x6 = extract(x2, x5)\n    x7 = other(x6, x1)\n    x8 =171(x7)\n    x9 = multiply(TEN, TEN)\n    x10 = power(outbox, x9)\n    x11 = first(x8)\n    x12 = invert(x11)\n    x13 = shift(x11, x12)\n    x14 = shift(x13, x11)\n    x15 = toindices(x14)\n    x16 = lbind(shift, x15)\n    x17 = rbind(difference, x15)\n    x18 = chain(size, x16, x17)\n    x19 = argmax(x15, x18)\n    x20 = double(x31)\n    x21 = apply(x16, x20)\n    x22 = interval(x21, ONE, ONE)\n    x23 = difference(x21, x22)\n    x24 = apply(x16, x23)\n    x25 = astuple(x24, x15)\n    x26 = canvas(x1, x25)\n    x27 = asindices(x26)\n    x28 = apply(x16, x27)\n    x29 = lbind(argmin, x28)\n    x30 = lbind(shift, x13)\n    x31 = mapply(x30, x29)\n    O = fill(x26, x1, x31)\n    return O"], [1.1, "def solve_5dae2a90(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 =Example output:\n    4446633648\n    1334663362\n    4444463944\n    3344444393\n    4344444401\n    4334443444\n    6484463334\n    6644444446\n    0404486644\n    1154344466\n    \"\"\"\n    x1 = hsplit(I, TWO)\n    O = first(x1)\n    return O"], [1.1, "def solve_b8f7d131(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = extract(x2, x4)\n    x6 =0000(I, x5)\n    x7 = shape(I)\n    x8 = canvas(ZERO, x7)\n    x9 = colorfilter(x2, x1)\n    x10 =\n    maxcolor(I)\n    x11 = shape(I)\n    x12 = decrement(x11)\n    x13 = lbind(astuple, x12)\n    x14 = apply(x13, x9)\n    x15 = rbind(shoot, UNITY)\n    x16 = mapply(x15, x14)\n    x17 = fill(x8, x10, x16)\n    O = fill(x17, x1, x2)\n    return O"], [1.1, "def solve_5ebef8c6(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = matcher(color, ZERO)\n    x5 =423(x3)\n    x6 = sfilter(x3, x4)\n    x7 = difference(x3, x6)\n    x8 = merge(x7)\n    x9 = width(x8)\n    x10 = matcher(color, ZERO)\n    x11 =411(x10)\n    x12 = sfilter(x8, x11)\n    x13 = combine(x6, x12)\n    x14 = merge(x12)\n    x15 = fill(I, THREE, x14)\n    x16 = merge(x12)\n    x17 = fill(x15, ONE, x16)\n    O = replace(x17, ZERO, ONE)\n    return O"], [1.1, "def solve_f0ea7130(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = shape(I)\n    x2 = add(x1, DOWN)\n    x3 = crop(I, ORIGIN, x2)\n    x4 = decrement(x1)\n    x5 = tojvec(x4)\n    x6 = crop(I, x5, x2)\n    x7 = double(x3)\n    x8 = add(x7, TWO)\n    x9 = crop(I, x8, x2)\n    x10 = asobject(x9)\n    x11 =77101ecdecrement\n    x12 = argmin(x10, x11)\n    x13 = mostcolor(x12)\n    x14 = asindices(x12)\n    x15 = astuple(x13, x14)\n    x16 = ulcorner(x12)\n    x17 = rbind(shoot, x16)\n    x18 = mapply(x17, x15)\n    x19 = underfill(I, x13, x18)\n    x20 = objects(x19, T, F, T)\n    x21 = colorfilter(x20, x13)\n    x22 = rbind(bordering, I)\n    x23 = mfilter(x21, x22)\n    O = cover(x19, x23)\n    return O"], [1.1, "def solve_c9412091(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = astuple(FOUR, FOUR)\n    x2 = crop(I, ORIGIN, x1)\n    x3 = TWO_BY_TWO)\n    x4 = asobject(x2)\n    x5 = rbind(multiply, UNITY)\n    x6 = apply(x5, x4)\n    x7 = asobject(x6)\n    x8 = UNITY(x1)\n    x9 = NEG_UNITY)\n    x10 = shift(x7, x9)\n    x11 = paint(I, x10)\n    x12 = toindices(x7)\n    x13 = lbind(shift, x12)\n    x14 = mapply(x13, x6)\n    O = fill(x11, TWO, x14)\n    return O"], [1.1, "def solve_e4a63964(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 =36fcc3(I, ORIGIN)\n    x2 = decrement(x1)\n    x3 = papply(astuple, x2, x4)\n    x4 = lbind(shift, x3)\n    x5 = mapply(x4, x2)\n    O = paint(I, x5)\n    return O"], [1.1, "def solve_d5cc1f65(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = compose(x2, trim)\n    x4 = apply(x3, x1)\n    x5 = lbind(contained, x4)\n    x6 = compose(x5, flip)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(contained, x7)\n    x9 = compose(x8, vsplit)\n    x10 = sfilter(x7, x9)\n    x11 = merge(x10)\n    x12 = lbind(contained, x11)\n    x13 = compose(x12, vmirror)\n    x14 = sfilter(x7, x13)\n    x15 = compose(size, x7)\n    x16 = size(x14)\n    x17 = greater(x15, x16)\n    x18 = subgrid(x14, I)\n    x19 = trim(x18)\n    x20 = lefthalf(x19)\n    x21 = righthalf(x19)\n    x22 = vmirror(x21)\n    x23 = objects(x20, T, F, T)\n    x24 = merge(x23)\n    x25 =422(x24)\n    x26 = cellwise(x25, x20, x08)\n    x27 = order(x26, identity)\n    x28 = first(x27)\n    x29 = last(x27)\n    x30 = x28(x20)\n    x31 = flip(x30)\n    x32 = replace(x20, x24, x7)\n    x33 = replace(x32, x24, x9)\n    x34 = branch(x31, x33, x24)\n    O = x15(x34, x39)\n    return O"], [1.1, "def solve_a520631b(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = totuple(x2)\n    x4 = apply(color, x3)\n    x5 = mostcommon(x4)\n    x6 =467618(UNITY)\n    x7 = canvas(x5, UNITY)\n    O = paint(x7, x6)\n    return O"], [1.1, "def solve_d115a417(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 =96(I, identity)\n    x2 =44(x1, identity)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, lefthalf, tophalf)\n    x5 = x4(I)\n    x6 = bottomhalf(I)\n    x7 = index(x5, ORIGIN)\n    x8 = palette(x6)\n    x9 = palette(x7)\n    x10 = intersection(x8, x9)\n    x11 = remove(x7, x10)\n    x12 = palette(x6)\n    x13 = other(x12, x11)\n    x14 = palette(x6)\n    x15 = other(x14, x13)\n    x16 = intersection(x15, x13)\n    x17 = ofcolor(x5, x13)\n    x18 = ofcolor(x6, x13)\n    x19 = combine(x17, x18)\n    x20 = fill(x5, x13, x19)\n    O = x4(x20)\n    return O"], [1.1, "def solve_2de33c8d(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(UP, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = fork(combine, initset,000000\n    x9 = compose(x8, first)\n    x10 = compose(x8, last)\n    x11 = fork(difference, x9, x10)\n    x12 = compose(x11, toindices)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = matcher(first, x15)\n    x18 = compose(flip, x17)\n    x19 = sfilter(x15, x18)\n    x20 = dmirror(x19)\n    x21 = subtract(x16, x20)\n    x22 = branch(x21, hsplit, vsplit)\n    x23 = merge(x22)\n    x24 = sfilter(x22, x23)\n    x25 = dmirror(x24)\n    x26 = shape(x25)\n    x27 = add(x26, TWO_BY_ZERO)\n    x28 = canvas(ZERO, x27)\n    x29 = asobject(x28)\n    x30 = shift(x29, UNITY)\n    O = paint(x26, x30)\n    return O"], [1.1, "def solve_ce575692(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 =725312 ofsubtract(NINE, ZERO)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [1.1, "def solve_49a2feb2(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = sizefilter(x2, ONE)\n    x4 = apply(size, x3)\n    x5 = dedupe(x4)\n    x6 = objects(I, T, F, F)\n    x7 = merge(x6)\n    x8 = size(x7)\n    x9 = equality(x1, x8)\n    x10 = branch(x9, height, width)\n    x11 = x10(x7)\n    x12 = x10(x8)\n    x13 = subtract(x11, x12)\n    x14 = shift(x5, x13)\n    x15 = other(x1, x14)\n    x16 = x10(x10)\n    x17 = color(x15)\n    x18 = hmirror(I)\n    x19 = cover(I, x18)\n    x20 = objects(x19, T, F, T)\n    x21 = apply(toindices, x20)\n    x22 = fork(either, x21, box)\n    x23 = sfilter(x4, x22)\n    x24 = manhattan(x23, x35)\n    x25 = palette(x23)\n    x26 =recolor(x25, x24)\n    x27 = argmin(x26, x24)\n    x28 = other(x25, x27)\n    x29 = color(x28)\n    x30 = mmirror(x28)\n    x31 = recolor(x28, x30)\n    x32 = combine(x27, x31)\n    x33 = paint(x19, x32)\n    x34 = ofcolor(x33, x29)\n    x35 =441\n     gravitate(x34, x31)\n    x36 = shift(x34, x35)\n    x37 = shift(x36, x34)\n    x38 = combine(x34, x37)\n    x39 = paint(x33, x38)\n    O = x10(x39)\n    return O"], [1.1, "def solve_d11b4a3e(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = rbind(remove, TWO)\n    x2 = compose(x1, last)\n    x3 = rbind(multiply, THREE)\n    x4 = compose(x3, x2)\n    x5 = fork(equality, identity, x4)\n    x6 = compose(x5, first)\n    x7 = extract(x1, x6)\n    x8 = last(x7)\n    x9 = first(x8)\n    x10 = last(x7)\n    x11 = x2(x9)\n    x12 = x2(x10)\n    x13 =9999(first, x11)\n    x14 =9999(first, x12)\n    x15 = cover(I, x11)\n    x16 = fill(x15, ONE, x13)\n    x17 = fill(x16, TWO, x14)\n    O = x2(x17)\n    return O"], [1.1, "def solve_ab2533b2(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = toivec(x1)\n    x5 = crop(I, ORIGIN, x4)\n    x6 =2295587375 asobject(x5)\n    x7 = palette(I)\n    x8 = matcher(identity, x4)\n    x9 = argmin(x7, x8)\n    x10 = asindices(I)\n    x11 = ofobject(x10, I)\n    x12 = difference(x10, x11)\n    x13 = ofcolor(I, x9)\n    x14 = rbind(interval, ONE)\n    x15 = rbind(x14, FOUR)\n    x16 = rbind(sfilter, x15)\n    x17 = lbind(occurrences, I)\n    x18 = lbind(lbind, shift)\n    x19 = compose(x17, x18)\n    x20 = lbind(recolor, x9)\n    x21 = rbind(mapply, x19)\n    x22 = rbind(occurrences, x16)\n    x23 = compose(x22, x18)\n    x24 = fork(apply, x23, x19)\n    x25 = fork(combine, x12, x24)\n    x26 =apply(x25, x3)\n    x27 = ofcolor(I, x9)\n    x28 = mapply(toindices, x27)\n    x29 = fill(I, x9, x28)\n    x30 = mapply(x25, x3)\n    x31 = fill(x29, x10, x30)\n    O = replace(x31, x4, SIX)\n    return O"], [1.1, "def solve_a4a355a4(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 =33333(I)\n    x2 =4213175300\n    4213171351\n    4292302363\n    6932577355\n    7360476287\n    3277069433\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = ofcolor(I, ONE)\n    x3 = lowermost(x2)\n    x4 = lbind(subtract, x3)\n    x5 = chain(toivec, x4, lowermost)\n    x6 = fork(shift, identity, x5)\n    x7 = merge(x1)\n    x8 = cover(I, x7)\n    x9 = mapply(x6, x1)\n    O = paint(x8, x9)\n    return O"], [1.1, "def solve_8e3746e4(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 =637585(I)\n    x2 = mostcolor(I)\n    x3 = lefthalf(x1)\n    x4 = righthalf(x1)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(x3)\n    x8 = x6(x3)\n    x9 = shape(x3)\n    x10 = palette(x3)\n    x11 = palette(x3)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x13, x13)\n    x15 = ofcolor(x13, x6)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [1.1, "def solve_832f21a1(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = cover(I, x2)\n    x4 = apply(normalize, x1)\n    x5 = chain(size, dedupe, flip)\n    x6 = argmax(x4, x5)\n    x7 = repeat(x6, ONE)\n    x8 = merge(x7)\n    x9 = repeat(x6, ONE)\n    x10 = compose(increment, height)\n    x11 = chain(greater, maximum, x10)\n    x12 = compose(x11, asobject)\n    x13 =7777(x12)\n    x14 = upscale(x13, TWO)\n    x15 = shift(x14, TWO_BY_TWO)\n    x16 = paint(x3, x15)\n    x17 = toindices(x15)\n    x18 = lbind(contained,ZERO)\n    x19 = compose(x18, last)\n    x20 = sfilter(x17, x19)\n    x21 =64(x20)\n    x22 = shift(x21, UNITY)\n    O = paint(x16, x22)\n    return O"], [1.1, "def solve_ec52659b(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 =Example output:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9210880830\n    2048742800\n    3626664135\n    8001913937\n    \"\"\"\n    x2 = objects(I, T, F, T)\n    x3 = colorfilter(x2, ZERO)\n    x4 = difference(x2, x3)\n    x5 = merge(x4)\n    x6 = rbind(shoot, DOWN)\n    x7 = mapply(x6, x5)\n    x8 = fill(I, ONE, x7)\n    x9 = mapply(x6, x3)\n    O = fill(x8, TWO, x9)\n    return O"], [1.1, "def solve_054db099(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(ORIGIN, DOWN_LEFT)\n    x5 = rbind(multiply, x4)\n    x6 = apply(x5, x3)\n    x7 =89700cd78\n    x8 = rightmost(x7)\n    x9 = lbind(shift, x8)\n    x10 = mapply(x9, x6)\n    O = paint(I, x10)\n    return O"], [1.1, "def solve_c34ac857(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 =\u2026izet(TWO)\n    x4 = initset(TWO)\n    x5 = recolor(TWO, x3)\n    x6 = recolor(THREE, x2)\n    x7 = insert(x5, x6)\n    x8 = insert(x7, x5)\n    x9 = fill(I, TWO, x8)\n    O = fill(x9, UNITY, x7)\n    return O"], [1.1, "def solve_9fb1c023(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = lefthalf(x1)\n    x4 = righthalf(x1)\n    x5 = tophalf(x4)\n    x6 = righthalf(x4)\n    x7 = bottomhalf(x6)\n    x8 = index(x3, ORIGIN)\n    x9 = palette(x3)\n    x10 =6042(x9)\n    x11 = palette(x3)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = recolor(x13, x1)\n    x16 = recolor(x14, x11)\n    x17 = combine(x15, x16)\n    x18 = combine(x15, x16)\n    x19 = recolor(x17, x1)\n    x20 = occurrences(x4, x17)\n    x21 = outbox(x20)\n    x22 = ofcolor(x3, x13)\n    x23 = urcorner(x22)\n    x24 = ofcolor(x3, x14)\n    x25 = intersection(x23, x24)\n    x26 = first(x25)\n    x27 = shape(I)\n    x28 = canvas(x8, x27)\n    O = fill(x28, x13, x26)\n    return O"], [1.1, "def solve_0c490705(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, positive, branch)\n    x6 = branch(x4, mostcolor, x5)\n    x7 = canvas(x6, UNITY)\n    x8 = add(NEG_UNITY, NEG_UNITY)\n    x9 = shape(I)\n    x10 = maximum(x9)\n    x11 = lbind(multiply, x10)\n    x12 = chain(x11, maximum, initset)\n    x13 = compose(x12, x7)\n    x14 = lbind(intersection, x13)\n    x15 = compose(size, x14)\n    x16 = argmax(x6, x15)\n    x17 = objects(x6, T, F, T)\n    x18 = color(x16)\n    x19 = lbind(recolor, x18)\n    x20 = rbind(argmax, rightmost)\n    x21 = chain(x20, x19, x9)\n    x22 =lbind(apply, x21)\n    x23 = fork(toindices, x22, x17)\n    x24 = fork(mapply, x23, x19)\n    x25 = mostcolor(I)\n    x26 = ofcolor(I, x25)\n    x27 =9 asindices(I)\n    x28 = objects(x6, T, F, T)\n    x29 = rbind(argmax, x27)\n    x30 = fork(recolor, color, x29)\n    x31 = mapply(x30, x28)\n    x32 = paint(x7, x31)\n    x33 = mapply(x27, x34)\n    O = paint(x32, x33)\n    return O"], [1.1, "def solve_d010946c(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = rbind(ofcolor, ORIGIN)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = lefthalf(I)\n    x5 = righthalf(I)\n    x6 = leftmost(x1)\n    x7 =114(x6)\n    x8 = tojvec(x7)\n    x9 = add(x8, THREE)\n    x10 = shift(x4, x9)\n    x11 = fill(I, ZERO, x10)\n    x12 = merge(x11)\n    O = fill(x11, FOUR, x12)\n    return O"], [1.1, "def solve_fc36ca3c(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = occurrences(x1, x2)\n    x4 = leastcolor(x1)\n    x5 = palette(x1)\n    x6 = repeat(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = leastcolor(x1)\n    x9 = palette(x1)\n    x10 = remove(x8, x9)\n    x11 = remove(x8, x10)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = ofcolor(x13, x12)\n    x15 = astuple(x14, x13)\n    x16 = ulcorner(x12)\n    x17 = crop(x15, x16, x15)\n    x18 = asobject(x17)\n    x19 = hperiod(x18)\n    x20 = height(I)\n    x21 = astuple(x20, x13)\n    x22 = ulcorner(x5)\n    x23 = crop(x22, ORIGIN, x22)\n    x24 = hperiod(x23)\n    x25 = astuple(x24, x14)\n    x26 = increment(x25)\n    x27 = interval(ONE, x26, ONE)\n    x28 = product(x27, x27)\n    x29 = lbind(multiply, x ONE)\n    x30 = apply(x29, x28)\n    x31 = lbind(shift, x18)\n    x32 = mapply(x31, x30)\n    x33 = paint(x17, x32)\n    x34 = rot90(x33)\n    x35 =    020(I)\n    x36 =\n    0233358330(x35)\n    x37 = rot270(x36)\n    x38 = papply(shift, x32, x37)\n    x39 = apply(x21, x38)\n    O = paint(x33, x39)\n    return O"], [1.1, "def solve_be366381(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 =444449713834)\n    x2 =4771231458\n    x3 = shape(I)\n    x4 = decrement(x3)\n    x5 = index(I, x4)\n    x6 = equality(x5, FOUR)\n    x7 = branch(x6, UP, RIGHT)\n    x8 = canvas(x7, x4)\n    x9 = equality(x1, TWO)\n    x10 = branch(x9, RIGHT, DOWN)\n    x11 = branch(x10, LEFT, RIGHT)\n    x12 = greater(x11, TWO)\n    x13 = branch(x12,phalf, lefthalf)\n    x14 = branch(x12, numcolors,(x13)\n    x15 = branch(x12,33, FOUR)\n    x16 = x15(I)\n    x17 = mostcolor(x16)\n    x18 = shape(I)\n    x19 = canvas(x17, x18)\n    x20 = hconcat(x16, x19)\n    x21 = objects(x20, F, F, T)\n    x22 = argmax(x21, numcolors)\n    x23 = asindices(x22)\n    x24 = matcher(first, x17)\n    x25 = sfilter(x23, x24)\n    x26 = difference(x23, x25)\n    x27 = mostcolor(x26)\n    x28 = color(x22)\n    x29 = fill(x20, x27, x28)\n    x30 = ulcorner(x22)\n    x31 = width(x22)\n    x32 = divide(x30, x31)\n    x33 = increment(x32)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = merge(x41)\n    x36 = cover(x29, x35)\n    x37 = lbind(shift, x22)\n    x38 = mapply(x37, x34)\n    O = paint(x32, x38)\n    return O"], [1.1, "def solve_d00beb1d(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = rbind(shoot, UNITY)\n    x2 = rbind(add, UNITY)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = chain(decrement, last, x2)\n    x6 = fork(multiply, astuple, x5)\n    x7 = fork(equality, identity, x6)\n    x8 =223(TEN)\n    x9 = branch(x8, initset, x5)\n    x10 = insert(x9, I)\n    x11 = branch(x7, width, height)\n    x12 = apply(x11, x10)\n    x13 = difference(x10, x12)\n    x14 = mapply(x4, x13)\n    x15 = paint(I, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = apply(toindices, x16)\n    x18 = fork(either, x15, x17)\n    x19 = x18(x1)\n    O = paint(x15, x19)\n    return O"], [1.1, "def solve_2ed6b6dd(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = rot270(I)\n    x2 = height(x1)\n    x3 = rot90(I)\n    x4 = matcher(size, ZERO)\n    x5 = rbind(ofcolor, ZERO)\n    x6 = compose(flip, x4)\n    x7 = extract(x3, x6)\n    x8 = outbox(x7)\n    x9 = width(x1)\n    x10 = ofcolor(x, x9)\n    x11 = leftmost(x10)\n    x12 = ZERO(x11)\n    x13 = toobject(x12, x1)\n    x14 = color(x13)\n    x15 =14(x13)\n    x16 = shift(x8, x9)\n    x17 = shift(x8, x14)\n    x18 = paint(x15, x16)\n    O = paint(x18, x17)\n    return O"]], "2037f2c7": [[0.39403220349444606, "def solve_3876b872(I):\n    x1 = palette(I)\n    x2 = remove(ONE, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = canvas(x4, THREE_BY_THREE)\n    x6 = colorcount(I, ONE)\n    x7 = decrement(x6)\n    x8 = tojvec(x7)\n    x9 = connect(ORIGIN, x8)\n    x10 = fill(x5, TWO, x9)\n    x11 = initset(UNITY)\n    x12 = equality(x6, FOUR)\n    x13 = branch(x12, x11, x9)\n    O = fill(x10, TWO, x13)\n    return O"], [0.47026220156654935, "def solve_d0dce391(I):\n    x1 = palette(I)\n    x2 = contained(ONE, x1)\n    x3 = contained(TWO, x1)\n    x4 = branch(x2, UNITY, TWO_BY_TWO)\n    x5 = branch(x3, RIGHT, x4)\n    x6 = fork(combine, vfrontier, hfrontier)\n    x7 = x6(x5)\n    x8 = canvas(ZERO, THREE_BY_THREE)\n    O = fill(x8, FIVE, x7)\n    return O"], [0.5124660219282645, "def solve_5eca2ef1(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_b63bd108(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_4bb7f7d8(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_a5bd8a1b(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_5ecc5d00(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_50edfa6d(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_dc3eba65(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_de6ada43(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5251570172671126, "def solve_4822fe14(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = rbind(equality, x4)\n    x7 = argmin(x5, x6)\n    x8 = asindices(I)\n    x9 = ofcolor(I, x4)\n    x10 = difference(x8, x9)\n    x11 = fill(I, x7, x10)\n    x12 = frontiers(x11)\n    x13 = sfilter(x12, vline)\n    x14 = difference(x12, x13)\n    x15 = astuple(x14, x13)\n    x16 = apply(size, x15)\n    x17 = increment(x16)\n    O = canvas(x4, x17)\n    return O"], [0.5251570172671126, "def solve_90bda675(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = rbind(equality, x4)\n    x7 = argmin(x5, x6)\n    x8 = asindices(I)\n    x9 = ofcolor(I, x4)\n    x10 = difference(x8, x9)\n    x11 = fill(I, x7, x10)\n    x12 = frontiers(x11)\n    x13 = sfilter(x12, vline)\n    x14 = difference(x12, x13)\n    x15 = astuple(x14, x13)\n    x16 = apply(size, x15)\n    x17 = increment(x16)\n    O = canvas(x4, x17)\n    return O"], [0.5341705127937012, "def solve_d6ac3668(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.5341705127937012, "def solve_57cab5d4(I):\n    x1 = objects(I, T, F, T)\n    x2 = valmax(x1, size)\n    x3 = equality(x2, ONE)\n    x4 = equality(x2, TWO)\n    x5 = branch(x3, TWO, ONE)\n    x6 = branch(x4, THREE, x5)\n    x7 = branch(x4, SEVEN, x6)\n    O = canvas(x7, UNITY)\n    return O"], [0.5341705127937012, "def solve_a1072c08(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14,x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.5341705127937012, "def solve_67bde86d(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.5341705127937012, "def solve_d735ceac(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = color(x3)\n    x5 = remove(ZERO, x1)\n    x6 = other(x5, x4)\n    O = canvas(x6, UNITY)\n    return O"], [0.5341705127937012, "def solve_674435c5(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.5341705127937012, "def solve_bf1e8789(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.5341705127937012, "def solve_55f079e7(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.5341705127937012, "def solve_d86fc22a(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.5341705127937012, "def solve_ac582031(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.536632293462957, "def solve_2fdca11c(I):\n    x1 = trim(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5614714401904005, "def solve_8ac5361d(I):\n    x1 = crop(I, ORIGIN, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.5614714401904005, "def solve_5e58c2dd(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.5730284728096737, "def solve_4fc70cae(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.5730284728096737, "def solve_b8c8f475(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.5863202149434034, "def solve_112c94e5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, F, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.5863747631863573, "def solve_8828c713(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = objects(x1, F, T, T)\n    x3 = first(x2)\n    x4 = vline(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(x1)\n    x7 = objects(x6, T, F, T)\n    x8 = order(x7, uppermost)\n    x9 = apply(color, x8)\n    x10 = dedupe(x9)\n    x11 = size(x10)\n    x12 = rbind(repeat, x11)\n    x13 = apply(x12, x10)\n    O = x5(x13)\n    return O"], [0.6076921592043171, "def solve_ea8ba0d2(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.6076921592043171, "def solve_455e7882(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.6076921592043171, "def solve_594890e3(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.6076921592043171, "def solve_133e65d4(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.6076921592043171, "def solve_19345a78(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.6309126220053929, "def solve_e38a93e3(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_8b29b504(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_932f29d0(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_39f43a80(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_d8c3e6fd(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_6f204069(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_92771b2e(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_2969f457(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_8beb79b4(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_9d28e95c(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_0f28f83b(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_35a05590(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_80c8d9f2(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_133c5f5f(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_8b3c0e7e(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_9e842b8d(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_2c5f438a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_9d7b5f71(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_0e20c981(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_0e0151cf(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_2e6aabc3(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_859d01f3(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.631933306897075, "def solve_73b121be(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.631933306897075, "def solve_73d1bb26(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.652277101112151, "def solve_38b2c1c4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.6537311398818272, "def solve_733ae75f(I):\n    x1 = trim(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(x2)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(x2)\n    x6 = lefthalf(x5)\n    x7 = bottomhalf(x2)\n    x8 = righthalf(x7)\n    x9 = palette(x4)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x6)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(I)\n    x18 = halve(x17)\n    x19 = canvas(x16, x18)\n    x20 = matcher(first, x16)\n    x21 = compose(flip, x20)\n    x22 = rbind(sfilter, x21)\n    x23 = compose(x22, asobject)\n    x24 = x23(x2)\n    x25 = x23(x2)\n    x26 = x23(x5)\n    x27 = x23(x6)\n    x28 = paint(x19, x27)\n    x29 = paint(x28, x26)\n    x30 = paint(x29, x25)\n    O = paint(x30, x24)\n    return O"], [0.6557151442133381, "def solve_e2894090(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.6557151442133381, "def solve_f328e5a3(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.6557151442133381, "def solve_1bfa5f6f(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.6557151442133381, "def solve_074019f0(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.6557151442133381, "def solve_2362b36a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.6557151442133381, "def solve_a678d957(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = lefthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = righthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.6557151442133381, "def solve_1a1b6825(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.6748161707949084, "def solve_cf168828(I):\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [0.6800789774612239, "def solve_f198e5f0(I):\n    x1 = height(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = width(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [0.6938245927181472, "def solve_f0cd5bf1(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = subgrid(x20, I)\n    x22 = switch(x21, x18, x19)\n    x23 = replace(x22, x18, x4)\n    x24 = lbind(downscale, x23)\n    x25 = fork(upscale, x24, identity)\n    x26 = matcher(x25, x23)\n    x27 = shape(x23)\n    x28 = maximum(x27)\n    x29 = interval(ONE, x28, ONE)\n    x30 = sfilter(x29, x26)\n    x31 = maximum(x30)\n    O = downscale(x23, x31)\n    return O"], [0.6938245927181472, "def solve_3680622d(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = subgrid(x20, I)\n    x22 = switch(x21, x18, x19)\n    x23 = replace(x22, x18, x4)\n    x24 = lbind(downscale, x23)\n    x25 = fork(upscale, x24, identity)\n    x26 = matcher(x25, x23)\n    x27 = shape(x23)\n    x28 = maximum(x27)\n    x29 = interval(ONE, x28, ONE)\n    x30 = sfilter(x29, x26)\n    x31 = maximum(x30)\n    O = downscale(x23, x31)\n    return O"], [0.6997112669026319, "def solve_9608d62b(I):\n    x1 = hsplit(I, THREE)\n    x2 = first(x1)\n    x3 = remove(x2, x1)\n    x4 = first(x3)\n    x5 = last(x3)\n    x6 = ofcolor(x4, NINE)\n    x7 = ofcolor(x2, FOUR)\n    x8 = fill(x5, NINE, x6)\n    O = fill(x8, FOUR, x7)\n    return O"], [0.7164645384977338, "def solve_f3bc96b5(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, vline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = combine(x15, x16)\n    x18 = intersection(x15, x16)\n    x19 = difference(x17, x18)\n    O = fill(x14, THREE, x19)\n    return O"], [0.7313689109828214, "def solve_11ed16f3(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.7313689109828214, "def solve_e34220f7(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.7313689109828214, "def solve_64f482e8(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.7313689109828214, "def solve_789869e9(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.7313689109828214, "def solve_3d07e1c0(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.7356195315428602, "def solve_53830926(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x7, x16)\n    x20 = ofcolor(x8, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, THREE, x21)\n    return O"], [0.7356195315428602, "def solve_d4bcbfb2(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x7, x16)\n    x20 = ofcolor(x8, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, THREE, x21)\n    return O"], [0.7513894621344644, "def solve_dfae6211(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = objects(x3, T, F, T)\n    x5 = merge(x4)\n    O = paint(x1, x5)\n    return O"], [0.7514237970163009, "def solve_e5047fc3(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.7514237970163009, "def solve_d1e1fb82(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.7635614912120104, "def solve_7b76dcc3(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = mostcolor(I)\n    O = replace(x3, x4, ZERO)\n    return O"], [0.7635614912120104, "def solve_b3740c24(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = mostcolor(I)\n    O = replace(x3, x4, ZERO)\n    return O"], [0.7702738530895862, "def solve_19b78d0e(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_e3525e06(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_234d92b1(I):\n    x1 = dmirror(I)\n    x2 = merge(x1)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_29b70b6f(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_7b1ddecf(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_f2c355ba(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_2b3a5f0c(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_32ba8af4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7717845608238315, "def solve_0d28e489(I):\n    x1 = index(I, ORIGIN)\n    x2 = width(I)\n    x3 = halve(x2)\n    x4 = astuple(x3, x2)\n    x5 = canvas(x1, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = compose(x6, last)\n    x8 = fork(recolor, first, x7)\n    x9 = asobject(I)\n    x10 = mapply(x8, x9)\n    O = paint(x5, x10)\n    return O"], [0.7946931652854432, "def solve_1518ceaa(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.7946931652854432, "def solve_1177e324(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.8058042763965544, "def solve_77de7638(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.8058042763965544, "def solve_296383e7(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.8058042763965544, "def solve_122e3247(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.8058042763965544, "def solve_52ed5e42(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.8078379565261865, "def solve_27cae5c9(I):\n    x1 = objects(I, T, F, F)\n    x2 = sizefilter(x1, ONE)\n    x3 = compose(neighbors, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x2)\n    x6 = paint(I, x5)\n    x7 = replace(x6, ONE, SIX)\n    x8 = replace(x7, TWO, SEVEN)\n    x9 = replace(x8, THREE, EIGHT)\n    O = replace(x9, FOUR, NINE)\n    return O"], [0.8141732132799135, "def solve_31038701(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.8141732132799135, "def solve_f9ccb293(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.8141732132799135, "def solve_a72b0dc1(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.8141732132799135, "def solve_3641dfe6(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.8220447986833391, "def solve_eb81c715(I):\n    O = switch(I, EIGHT, TWO)\n    return O"], [0.8245794848741997, "def solve_f8cb861b(I):\n    x1 = objects(I, T, F, T)\n    x2 = compose(backdrop, inbox)\n    x3 = mapply(x2, x1)\n    O = fill(I, EIGHT, x3)\n    return O"], [0.8263155637439062, "def solve_6bf26ddb(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = prapply(connect, x1, x1)\n    x3 = rbind(greater, ONE)\n    x4 = compose(x3, size)\n    x5 = sfilter(x2, x4)\n    x6 = fork(either, vline, hline)\n    x7 = mfilter(x5, x6)\n    x8 = fill(I, THREE, x7)\n    O = fill(x8, EIGHT, x1)\n    return O"], [0.8277590843976249, "def solve_b64861e5(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_95181f6b(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_121f3043(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.8277590843976249, "def solve_735b8a84(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_003b87bb(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_41d498ec(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_54eb9b0f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.8277590843976249, "def solve_397c9726(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_85b95619(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_87d2e36c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.8277875214971026, "def solve_5361a62a(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.829564622162508, "def solve_91fadd8d(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.829564622162508, "def solve_75cf0440(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.829564622162508, "def solve_5c8463d7(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.829564622162508, "def solve_6f51c6e6(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.829564622162508, "def solve_6f8cc053(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.829564622162508, "def solve_6c96af8c(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.829564622162508, "def solve_22e8cd1b(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.829564622162508, "def solve_834dcd23(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.829564622162508, "def solve_6f0d7949(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.829564622162508, "def solve_d0c0cc4f(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.8309805019969229, "def solve_b85676d0(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = lbind(recolor, EIGHT)\n    x4 = rbind(ofcolor, x1)\n    x5 = chain(x3, backdrop, x4)\n    x6 = fork(paint, identity, x5)\n    x7 = height(I)\n    x8 = vsplit(I, x7)\n    x9 = mapply(x6, x8)\n    x10 = ofcolor(x9, EIGHT)\n    x11 = dmirror(I)\n    x12 = width(I)\n    x13 = vsplit(x11, x12)\n    x14 = mapply(x6, x13)\n    x15 = dmirror(x14)\n    x16 = ofcolor(x15, EIGHT)\n    x17 = combine(x10, x16)\n    x18 = difference(x17, x2)\n    O = fill(I, EIGHT, x18)\n    return O"], [0.8333146399531804, "def solve_509b225a(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = chain(palette, trim, x2)\n    x4 = lbind(contained, THREE)\n    x5 = chain(flip, x4, x3)\n    x6 = mfilter(x1, x5)\n    O = fill(I, FOUR, x6)\n    return O"], [0.8341973243152688, "def solve_a9f96576(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.8341973243152688, "def solve_a21dad91(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.8372727715830096, "def solve_c1346812(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [0.8376932799217021, "def solve_3c989a69(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.8477590843976248, "def solve_aa5d6398(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(add, height, width)\n    x3 = compose(decrement, x2)\n    x4 = fork(equality, x3, size)\n    x5 = fork(difference, toindices, box)\n    x6 = compose(size, x5)\n    x7 = matcher(x6, ZERO)\n    x8 = sfilter(x1, x4)\n    x9 = difference(x1, x8)\n    x10 = sfilter(x9, x7)\n    x11 = merge(x1)\n    x12 = fill(I, TWO, x11)\n    x13 = merge(x8)\n    x14 = fill(x12, ONE, x13)\n    x15 = merge(x10)\n    O = fill(x14, SIX, x15)\n    return O"], [0.8530872511837071, "def solve_c8371624(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.8530872511837071, "def solve_b3613949(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.8530872511837071, "def solve_8f288431(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.8530872511837071, "def solve_d8a8aaf0(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.8530872511837071, "def solve_e90e7f75(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.8530872511837071, "def solve_fe864351(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.8530872511837071, "def solve_9f2c215d(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.8552576021850845, "def solve_07926c0a(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = astuple(SIX, THREE)\n    x6 = astuple(FOUR, EIGHT)\n    x7 = astuple(ONE, TWO)\n    x8 = initset(x5)\n    x9 = insert(x6, x8)\n    x10 = insert(x7, x9)\n    x11 = mapply(x4, x10)\n    O = paint(I, x11)\n    return O"], [0.8552576021850845, "def solve_9ce7a383(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = astuple(SIX, THREE)\n    x6 = astuple(FOUR, EIGHT)\n    x7 = astuple(ONE, TWO)\n    x8 = initset(x5)\n    x9 = insert(x6, x8)\n    x10 = insert(x7, x9)\n    x11 = mapply(x4, x10)\n    O = paint(I, x11)\n    return O"], [0.8552576021850845, "def solve_923575f8(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = astuple(SIX, THREE)\n    x6 = astuple(FOUR, EIGHT)\n    x7 = astuple(ONE, TWO)\n    x8 = initset(x5)\n    x9 = insert(x6, x8)\n    x10 = insert(x7, x9)\n    x11 = mapply(x4, x10)\n    O = paint(I, x11)\n    return O"], [0.8559241864624044, "def solve_7371de38(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.8559241864624044, "def solve_73dd08fd(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, x1, I)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.8581965033411594, "def solve_c3dfde69(I):\n    x1 = asindices(I)\n    x2 = dmirror(I)\n    x3 = invert(NINE)\n    x4 = papply(pair, I, x2)\n    x5 = lbind(apply, maximum)\n    x6 = apply(x5, x4)\n    x7 = ofcolor(x6, ZERO)\n    x8 = difference(x1, x7)\n    x9 = toobject(x8, x6)\n    x10 = interval(x3, NINE, ONE)\n    x11 = interval(NINE, x3, NEG_ONE)\n    x12 = pair(x10, x11)\n    x13 = lbind(shift, x9)\n    x14 = mapply(x13, x12)\n    O = paint(x6, x14)\n    return O"], [0.8604382443658168, "def solve_4fbc27bb(I):\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = merge(x1)\n    x7 = color(x6)\n    x8 = shape(I)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(I, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmin(x11, numcolors)\n    x13 = normalize(x12)\n    x14 = toindices(x13)\n    x15 = increment(x4)\n    x16 = increment(x15)\n    x17 = increment(x5)\n    x18 = increment(x17)\n    x19 = astuple(x16, x18)\n    x20 = lbind(shift, x14)\n    x21 = rbind(multiply, x19)\n    x22 = chain(x20, x21, last)\n    x23 = fork(recolor, first, x22)\n    x24 = normalize(x12)\n    x25 = mapply(x23, x24)\n    O = paint(x9, x25)\n    return O"], [0.8604574970960375, "def solve_bcf60a28(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.8612587503377638, "def solve_b7ff2750(I):\n    x1 = objects(I, T, F, T)\n    x2 = palette(I)\n    x3 = mostcolor(I)\n    x4 = remove(x3, x2)\n    x5 = lbind(other, x4)\n    x6 = compose(x5, color)\n    x7 = fork(recolor, x6, outbox)\n    x8 = mapply(x7, x1)\n    x9 = mapply(toindices, x1)\n    x10 = box(x9)\n    x11 = difference(x10, x9)\n    x12 = lbind(argmin, x9)\n    x13 = rbind(compose, initset)\n    x14 = lbind(rbind, manhattan)\n    x15 = chain(x13, x14, initset)\n    x16 = chain(initset, x12, x15)\n    x17 = fork(manhattan, initset, x16)\n    x18 = compose(even, x17)\n    x19 = sfilter(x11, x18)\n    x20 = paint(I, x8)\n    O = fill(x20, FIVE, x19)\n    return O"], [0.8621335034579425, "def solve_b6b6ff95(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = argmax(x1, x2)\n    x5 = remove(x3, x1)\n    x6 = other(x5, x4)\n    x7 = subgrid(x6, I)\n    x8 = frontiers(x7)\n    x9 = sfilter(x8, hline)\n    x10 = size(x9)\n    x11 = positive(x10)\n    x12 = branch(x11, dmirror, identity)\n    x13 = x12(I)\n    x14 = color(x6)\n    x15 = ofcolor(x13, x14)\n    x16 = subgrid(x15, x13)\n    x17 = trim(x16)\n    x18 = lefthalf(x17)\n    x19 = vmirror(x18)\n    x20 = asobject(x19)\n    x21 = righthalf(x17)\n    x22 = vmirror(x21)\n    x23 = asobject(x22)\n    x24 = color(x4)\n    x25 = inbox(x15)\n    x26 = backdrop(x25)\n    x27 = fill(x13, x24, x26)\n    x28 = urcorner(x15)\n    x29 = add(x28, UNITY)\n    x30 = shift(x23, x29)\n    x31 = ulcorner(x15)\n    x32 = width(x20)\n    x33 = invert(x32)\n    x34 = tojvec(x33)\n    x35 = add(DOWN, x34)\n    x36 = add(x31, x35)\n    x37 = shift(x20, x36)\n    x38 = combine(x30, x37)\n    x39 = paint(x27, x38)\n    O = x12(x39)\n    return O"], [0.8625466344449646, "def solve_6d15cfe0(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, THREE, x3)\n    return O"], [0.8627265337429545, "def solve_253fda4b(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = prapply(connect, x2, x2)\n    x4 = rbind(greater, ONE)\n    x5 = compose(x4, size)\n    x6 = sfilter(x3, x5)\n    x7 = fork(either, vline, hline)\n    x8 = mfilter(x6, x7)\n    x9 = fill(I, THREE, x8)\n    x10 = leastcolor(I)\n    O = fill(x9, x10, x2)\n    return O"], [0.862930360325468, "def solve_d524434e(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot180(x3)\n    return O"], [0.8632741339415183, "def solve_fc9bef9f(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, TWO)\n    x3 = colorfilter(x1, ONE)\n    x4 = lbind(recolor, TWO)\n    x5 = rbind(shoot, UNITY)\n    x6 = chain(x4, x5, lrcorner)\n    x7 = lbind(recolor, ONE)\n    x8 = rbind(shoot, NEG_UNITY)\n    x9 = chain(x7, x8, ulcorner)\n    x10 = mapply(x6, x2)\n    x11 = mapply(x9, x3)\n    x12 = combine(x10, x11)\n    O = paint(I, x12)\n    return O"], [0.8632787798855505, "def solve_ecb54769(I):\n    O = rot90(I)\n    return O"], [0.8632787798855505, "def solve_4ce1ebb8(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.8632787798855505, "def solve_d19cb2a0(I):\n    O = rot270(I)\n    return O"], [0.8632787798855505, "def solve_17c0ebcc(I):\n    O = rot270(I)\n    return O"], [0.8632787798855505, "def solve_edec0ea8(I):\n    O = rot270(I)\n    return O"], [0.8634207638517514, "def solve_067ac743(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = rbind(colorcount, ZERO)\n    x3 = lbind(toobject, x1)\n    x4 = compose(x2, x3)\n    x5 = vmirror(I)\n    x6 = hmirror(I)\n    x7 = astuple(x5, x6)\n    x8 = argmin(x7, x4)\n    O = subgrid(x1, x8)\n    return O"], [0.8634577218981633, "def solve_d974ba31(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [0.8634577218981633, "def solve_32798bd7(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [0.863678348633302, "def solve_2b217e60(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.863678348633302, "def solve_3a9385f7(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.863706518437685, "def solve_e3124d15(I):\n    O = dmirror(I)\n    return O"], [0.863706518437685, "def solve_c25ee63a(I):\n    O = dmirror(I)\n    return O"], [0.863706518437685, "def solve_6940f0a4(I):\n    O = dmirror(I)\n    return O"], [0.863706518437685, "def solve_71c903a3(I):\n    O = dmirror(I)\n    return O"], [0.8637867634430995, "def solve_d0d2f0b1(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.8637867634430995, "def solve_29872a4a(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.8637867634430995, "def solve_fef5ae9a(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.8637867634430995, "def solve_2ece6a78(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.8637867634430995, "def solve_f86b12a1(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.8638546543078182, "def solve_01d8ab5d(I):\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.8638701955087361, "def solve_b0544453(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.8638701955087361, "def solve_0c27658e(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_24218d5b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_0af3fcba(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_fb4a3764(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, center)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.8638701955087361, "def solve_ab4ac2ec(I):\n    x1 = initset(ORIGIN)\n    x2 = mostcolor(I)\n    x3 = recolor(x2, x1)\n    x4 = upscale(x3, TWO)\n    x5 = occurrences(I, x4)\n    x6 = lbind(shift, x4)\n    x7 = mapply(x6, x5)\n    O = fill(I, x2, x7)\n    return O"], [0.8638701955087361, "def solve_d51258c7(I):\n    O = switch(I, FIVE, EIGHT)\n    return O"], [0.8638701955087361, "def solve_8d1b1cb9(I):\n    x1 = vmirror(I)\n    x2 = fgpartition(x1)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = compose(double, halve)\n    x6 = fork(equality, identity, x5)\n    x7 = compose(x6, last)\n    x8 = sfilter(x4, x7)\n    x9 = fill(x1, THREE, x8)\n    O = vmirror(x9)\n    return O"], [0.8638701955087361, "def solve_b257b053(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, FIVE)\n    x3 = compose(backdrop, inbox)\n    x4 = mapply(x3, x2)\n    O = fill(I, TWO, x4)\n    return O"], [0.8638701955087361, "def solve_478c19c1(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.8638701955087361, "def solve_f0b995f3(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.8638701955087361, "def solve_550ef4ec(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_7f22adbe(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.8638701955087361, "def solve_a4c6b97f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.8638701955087361, "def solve_106facec(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, F, F, T)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.8638701955087361, "def solve_3ab62eee(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.8638701955087361, "def solve_528704f2(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.8638701955087361, "def solve_c2b166bd(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = subgrid(x2, I)\n    return O"], [0.8638701955087361, "def solve_4e13b567(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(objects, F)\n    x4 = rbind(x3, F)\n    x5 = rbind(x4, T)\n    x6 = lbind(canvas, x1)\n    x7 = compose(x6, shape)\n    x8 = fork(paint, x7, normalize)\n    x9 = compose(x5, x8)\n    x10 = fork(colorfilter, x9, color)\n    x11 = rbind(shift, RIGHT)\n    x12 = rbind(argmax, rightmost)\n    x13 = compose(x12, x10)\n    x14 = fork(remove, x13, x10)\n    x15 = chain(x11, merge, x14)\n    x16 = rbind(argmax, rightmost)\n    x17 = compose(x16, x10)\n    x18 = fork(combine, x17, x15)\n    x19 = fork(shift, x18, ulcorner)\n    x20 = merge(x2)\n    x21 = fill(I, x1, x20)\n    x22 = mapply(x19, x2)\n    O = paint(x21, x22)\n    return O"], [0.8638878416543551, "def solve_69282a7c(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = astuple(x1, ONE)\n    x8 = astuple(ONE, x2)\n    x9 = decrement(x1)\n    x10 = decrement(x2)\n    x11 = toivec(x10)\n    x12 = tojvec(x9)\n    x13 = crop(I, x11, x8)\n    x14 = crop(I, x12, x7)\n    x15 = asobject(x14)\n    x16 = asobject(x13)\n    x17 = vperiod(x15)\n    x18 = hperiod(x16)\n    x19 = astuple(x17, x18)\n    x20 = lbind(multiply, x19)\n    x21 = neighbors(ORIGIN)\n    x22 = mapply(neighbors, x21)\n    x23 = apply(x20, x22)\n    x24 = lbind(shift, x6)\n    x25 = mapply(x24, x23)\n    O = paint(I, x25)\n    return O"], [0.8638878416543551, "def solve_eb241a5b(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = astuple(x1, ONE)\n    x8 = astuple(ONE, x2)\n    x9 = decrement(x1)\n    x10 = decrement(x2)\n    x11 = toivec(x10)\n    x12 = tojvec(x9)\n    x13 = crop(I, x11, x8)\n    x14 = crop(I, x12, x7)\n    x15 = asobject(x14)\n    x16 = asobject(x13)\n    x17 = vperiod(x15)\n    x18 = hperiod(x16)\n    x19 = astuple(x17, x18)\n    x20 = lbind(multiply, x19)\n    x21 = neighbors(ORIGIN)\n    x22 = mapply(neighbors, x21)\n    x23 = apply(x20, x22)\n    x24 = lbind(shift, x6)\n    x25 = mapply(x24, x23)\n    O = paint(I, x25)\n    return O"], [0.8638891638983809, "def solve_c1c595ec(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.8639438916538609, "def solve_d66e843d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_42d965a8(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_f6e9e1f3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_b3052bd5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_60276051(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8639438916538609, "def solve_c2251fc1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_95310504(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_334b0c94(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_5424ab54(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_4a44dff8(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8640253338383225, "def solve_0562bfae(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_f75f3c35(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_00fa8610(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_f7794dd4(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_f497ff22(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x7 = rbind(shoot, UNITY)\n    x8 = rbind(shoot, NEG_UNITY)\n    x9 = fork(combine, x7, x8)\n    x10 = fork(combine, x5, x9)\n    x11 = index(I, x2)\n    x12 = x10(x2)\n    O = fill(I, x11, x12)\n    return O"], [0.8640253338383225, "def solve_c582b6d3(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_45400bf2(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_9466a878(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_5b9e2bb1(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_ff584b8b(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_45da82ec(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_11520515(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork( combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640827805427497, "def solve_b6ebc576(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = height(x2)\n    x4 = height(I)\n    x5 = interval(ZERO, x4, x3)\n    x6 = lbind(shift, x2)\n    x7 = compose(x6, toivec)\n    x8 = compose(x7, invert)\n    x9 = fork(combine, x7, x8)\n    x10 = mapply(x9, x5)\n    O = paint(I, x10)\n    return O"], [0.8641376097298877, "def solve_a9048e75(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.8641376097298877, "def solve_ed253900(I):\n    O = rot180(I)\n    return O"], [0.8641376097298877, "def solve_b684326d(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.8641376097298877, "def solve_1e0a117f(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.8641376097298877, "def solve_edc1c9f4(I):\n    O = rot180(I)\n    return O"], [0.8641453134548085, "def solve_256aaa98(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.8641453134548085, "def solve_fabbfa31(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.8641453134548085, "def solve_ff55b20e(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.8641453134548085, "def solve_facf1b7e(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.8641453134548085, "def solve_dfcaedb7(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.8641474651177995, "def solve_7e389fdd(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.8641474651177995, "def solve_f6ff28da(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.8643386284959661, "def solve_e73b6a09(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, last)\n    x5 = fork(recolor, first, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [0.864487569023801, "def solve_bececf5c(I):\n    x1 = asobject(I)\n    x2 = shape(I)\n    x3 = decrement(x2)\n    x4 = index(I, x3)\n    x5 = double(x2)\n    x6 = canvas(x4, x5)\n    x7 = paint(x6, x1)\n    x8 = objects(x7, F, F, T)\n    x9 = first(x8)\n    x10 = shift(x9, LEFT)\n    x11 = vperiod(x10)\n    x12 = hperiod(x10)\n    x13 = neighbors(ORIGIN)\n    x14 = lbind(mapply, neighbors)\n    x15 = power(x14, TWO)\n    x16 = x15(x13)\n    x17 = astuple(x11, x12)\n    x18 = lbind(multiply, x17)\n    x19 = apply(x18, x16)\n    x20 = lbind(shift, x10)\n    x21 = mapply(x20, x19)\n    O = paint(I, x21)\n    return O"], [0.8656237858337551, "def solve_b3a43dd6(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.8656237858337551, "def solve_20e19bdd(I):\n    x1 = leastcolor(I)\n    x2 = mostcolor(I)\n    x3 = ofcolor(I, x1)\n    x4 = replace(I, x1, x2)\n    x5 = mapply(dneighbors, x3)\n    x6 = mapply(ineighbors, x3)\n    x7 = fill(x4, ONE, x5)\n    O = fill(x7, x1, x6)\n    return O"], [0.8687415090376716, "def solve_5cf51ca1(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_6de94bc4(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_140a88ad(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_63874e74(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_6f15edbf(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8966427298715387, "def solve_49e20542(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.8966427298715387, "def solve_9531120e(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.8966427298715387, "def solve_954958bb(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.8966427298715387, "def solve_c0117211(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x19 = shift(x6, RIGHT)\n    x20 = paint(x8, x19)\n    x21 = shift(x6, UP)\n    x22 = paint(x20, x21)\n    x23 = shift(x6, DOWN)\n    x24 = paint(x22, x23)\n    O = paint(x24, x6)\n    return O"], [0.8966427298715387, "def solve_5963fa73(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.8966427298715387, "def solve_13e624fc(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.8966427298715387, "def solve_f788d2fb(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [1.0, "def solve_1739f3e6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_94486b7e(I):\n    O = subgrid(x1, I)\n    return O"], [1.0, "def solve_1dbefc2e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = shape(I)\n    x13 = canvas(x11, x12)\n    x14 = hconcat(I, x13)\n    x15 = objects(x14, F, F, T)\n    x16 = argmin(x15, numcolors)\n    x17 = ofcolor(x16, x7)\n    x18 = mapply(x17, x17)\n    O = fill(x18, x7, x18)\n    return O"], [1.0, "def solve_0d42538d(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(objects, F)\n    x4 = compose(x3, palette)\n    x5 = fork(recolor, x4, identity)\n    x6 = apply(x5, x2)\n    x7 = order(x6, identity)\n    x8 = last(x7)\n    x9 = remove(x8, x7)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = mapply(neighbors, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = ofcolor(I, x11)\n    x17 = mapply(neighbors, x16)\n    x18 = toobject(x17, I)\n    x19 = mostcolor(x18)\n    x20 = rbind(shoot, UNITY)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = fork(combine, x20, x21)\n    x23 = rbind(shoot, UP_RIGHT)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = fork(combine, x23, x24)\n    x26 = fork(combine, x22, x25)\n    x27 = height(I)\n    x28 = astuple(x27, x)\n    x29 = canvas(x11, x28)\n    x30 = fill(x29, x10, x21)\n    x31 = ofcolor(I, x10)\n    x32 = colorfilter(x31, x11)\n    x33 = rbind(adjacent, x32)\n    x34 = mfilter(x32, x33)\n    x35 = mapply(x24, x34)\n    O = fill(x30, ONE, x35)\n    return O"], [1.0, "def solve_9dc45f5a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_d6717fa8(I):\n    x1 = mostcolor(I)\n    x2 =flip(I, x1)\n    x3 = compose(dmirror, dedupe)\n    x4 = fork(combine, x3, x2)\n    x5 = apply(x4, x2)\n    x6 = merge(x5)\n    x7 = lbind(shift, x6)\n    x8 = mapply(x7, x5)\n    O = fill(I, x1, x8)\n    return O"], [1.0, "def solve_a3c6dd54(I):\n    x1 = ofcolor(I, TWO)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = asindices(x4)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = intersection(x5, x6)\n    x8 = fill(x4, EIGHT, x7)\n    x9 = hmirror(x8)\n    x10 = vmirror(x9)\n    x11 = fgpartition(x4)\n    x12 = merge(x11)\n    x13 = paint(x5, x12)\n    x14 = subgrid(x1, x13)\n    O = x3(x14)\n    return O"], [1.0, "def solve_69c8ab9f(I):\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = astuple(x2, x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = rbind(shoot, UP)\n    x8 = mapply(x7, x3)\n    x9 = combine(x6, x8)\n    x10 = fill(x6, ONE, x9)\n    x11 = hmirror(x10)\n    O = vconcat(x110, x11)\n    return O"], [1.0, "def solve_7fe948e3(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_611dcf26(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = size(x4)\n    x6 = width(I)\n    x7 = multiply(x6, x5)\n    x8 = multiply(UNITY, x7)\n    x9 = canvas(ZERO, x8)\n    x10 = multiply(x6, x5)\n    x11 = decrement(x10)\n    x12 = lbind(astuple, x11)\n    x13 = rbind(shoot, UP_RIGHT)\n    x14 = compose(last, last)\n    x15 = chain(x13, x12, x14)\n    x16 = fork(recolor, first, x15)\n    x17 = mapply(x16, x4)\n    O = paint(x9, x17)\n    return O"], [1.0, "def solve_bd4649c3(I):\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = rbind(shoot, UP)\n    x9 = mapply(x8, x7)\n    O = fill(I, x10, x9)\n    return O"], [1.0, "def solve_3b02d314(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_0bb5ee89(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_08b66da5(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [1.0, "def solve_36209a08(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = normalize(x2)\n    x4 = ulcorner(x2)\n    x5 = subtract(x4, x2)\n    x6 = shape(x2)\n    x7 = add(x6, TWO_BY_ZERO)\n    O = crop(I, x5, x7)\n    return O"], [1.0, "def solve_6d5a5b9e(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_63df7b8e(I):\n    x1 = asobject(I)\n    x2 = frontiers(I)\n    x3 = merge(x2)\n    x4 = difference(x1, x3)\n    x5 = mostcolor(x4)\n    x6 = objects(I, T, F, F)\n    x7 = color(x3)\n    x8 = matcher(color, x7)\n    x9 = matcher(color, x5)\n    x10 = fork(astuple, x8, x9)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x6, x11)\n    x13 = merge(x12)\n    x14 = palette(x13)\n    x15 = lbind(mfilter, x12)\n    x16 = lbind(matcher, color)\n    x17 = compose(x15, x16)\n    x18 = apply(x17, x14)\n    x19 = fork(either, vline, hline)\n    x20 = lbind(prapply, connect)\n    x21 = fork(x20, identity, identity)\n    x22 = apply(x21, x18)\n    x23 = rbind(sfilter, x19)\n    x24 = chain(merge, x23, x22)\n    x25 = fork(recolor, color, x24)\n    x26 = mapply(x25, x24)\n    x27 = paint(I, x26)\n    O = paint(x27, x3)\n    return O"], [1.0, "def solve_8f188ec6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_4e65a342(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, le662)\n    x6 = branch(x4, bottomhalf, rIGHT)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [1.0, "def solve_7f2902c5(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_fca4e4b1(I):\n    x1 = hconcat(I, I)\n    x2 = vconcat(x1, x1)\n    x3 = asindices(x2)\n    x4 = mostcolor(I)\n    x5 = ofcolor(x2, x4)\n    x6 = difference(x3, x5)\n    x7 = mapply(ineighbors, x6)\n    O = underfill(x2, EIGHT, x7)\n    return O"], [1.0, "def solve_2a8560d4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = rbind(remove, x1)\n    x4 = rbind(remove, x2)\n    x5 = compose(x3, x4)\n    x6 = compose(x5, color)\n    x7 = fork(combine, identity, x6)\n    x8 = apply(x7, x1)\n    O = pair(x8, x8)\n    return O"], [1.0, "def solve_fadd1d31(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_f524ec6a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_5aac3c20(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_51a51c36(I):\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, shape)\n    x3 = sfilter(I, x2)\n    x4 = lbind(apply, numcolors)\n    x5 = chain(x4, first, shape)\n    x6 = objects(x3, T, F, F)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = matcher(first, x8)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x2, x10)\n    x12 = lbind(recolor, x8)\n    x13 = compose(x12, dmirror)\n    x14 = fork(combine, x13, x13)\n    x15 = objects(x11, x14, Faint)\n    x16 = paint(x15, x11)\n    x17 = order(x16, identity)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = color(x18)\n    x21 = palette(x18)\n    x22 = remove(x8, x21)\n    x23 = other(x22, x20)\n    x24 = rbind(colorcount, x20)\n    x25 = argmin(x12, x24)\n    x26 = first(x25)\n    x27 = other(x25, x26)\n    x28 = sfilter(x24, x27)\n    x29 = size(x28)\n    x30 = positive(x29)\n    x31 = branch(x30, x22, x25)\n    x32 = x31(x3333)\n    x33 = x31(x39)\n    x34 = ofcolor(x33, x20)\n    x35 = andmirror(x34)\n    x36 = ofcolor(x33, x22)\n    x37 = intersection(x35, x36)\n    x38 = mapply(x28, x37)\n    O = paint(x32, x38)\n    return O"], [1.0, "def solve_0c46a86b(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [1.0, "def solve_6fbe61ea(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_bb1cc91f(I):\n    x1 = index(I, ORIGIN)\n    x2 = width(I)\n    x3 = halve(x2)\n    x4 = astuple(x3, x2)\n    x5 = canvas(x1, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = compose(x6, last)\n    x8 = fork(recolor, first, x7)\n    x509 = asobject(I)\n    x10 = mapply(x8, x9)\n    O = paint(x5, x10)\n    return O"], [1.0, "def solve_b4faadb6(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_8bf7d21d(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_42763990(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = compose(x5, color)\n    x7 = compose(double, x4)\n    x8 = lbind(prapply, manhattan)\n    x9 = fork(x8, identity, identity)\n    x10 = lbind(remove, ZERO)\n    x11 = compose(x10, x9)\n    x12 = rbind(branch, NEG_TWO)\n    x13 = fork(x12, positive, decrement)\n    x14 = chain(x13, maximum, x11)\n    x15 = fork(contained, x44, x14)\n    x16 = compose(x15, x6)\n    x17 = sfilter(x2, x16)\n    x18 = fork(add, leftmost, rightmost)\n    x19 = chain(toivec, invert, x18)\n    x20 = fork(shift, x17, x19)\n    x21 = compose(x5, x20)\n    x22 = fork(difference, x21, box)\n    x23 = fork(recolor, x21, x22)\n    x24 = mapply(x23, x4)\n    O = paint(I, x24)\n    return O"], [1.0, "def solve_3cf864c0(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_4a1a6288(I):\n    x1 =906934455\n    O = subgrid(x1, I)\n    return O"], [1.0, "def solve_cc89f781(I):\n    x1 = index(I, ORIGIN)\n    x2 = equality(x1, THREE)\n    x3 = height(I)\n    x4 = decrement(x3)\n    x5 = toivec(x4)\n    x6 = branch(x2, x5, ORIGIN)\n    x7 = equality(x1, TWO)\n    x8 = shape(I)\n    x9 = decrement(x8)\n    x10 = width(I)\n    x11 = decrement(x10)\n    x12 = tojvec(x11)\n    x13 = branch(x7, x9, x12)\n    x14 = branch(x7, x9, x13)\n    x15 = astuple(x6, x13)\n    x16 = astuple(x14, x13)\n    x17 = portrait(x16)\n    x18 = branch(x17, x9, x13)\n    x19 = canvas(x8, x15)\n    x20 = matcher(first, FOUR)\n    x21 = compose(flip, x20)\n    x22 = rbind(sfilter, x21)\n    x23 = compose(x22, asobject)\n    x24 = apply(x23, x19)\n    x25 = difference(x24, x24)\n    O = fill(x19, FOUR, x25)\n    return O"], [1.0, "def solve_3e4336b1(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_486b1415(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_2e4f6375(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = size(x9)\n    x11 = equality(x10, ONE)\n    x12 = branch(x11, dmirror, identity)\n    x13 = x12(I)\n    x14 = last(x13)\n    x15 = mostcolor(x14)\n    x16 = trim(x14)\n    x17 = last(x16)\n    x18 = repeat(x17, ONE)\n    x19 = x12(x18)\n    x20 = branch(x11, height, width)\n    x21 = x20(x19)\n    x22 = astuple(ONE, x21)\n    x23 = multiply(x22, x37)\n    x24 = decrement(x23)\n    x25 = branch(x11, identity, vmirror)\n    x26 = x25(x12)\n    x27 = crop(x26, ORIGIN, x22)\n    x28 = last(x27)\n    x29 = remove(x28, x27)\n    x30 = first(x29)\n    x31 = last(x27)\n    x32 = lefthalf(x31)\n    x33 = righthalf(x32)\n    x34 = asobject(x33)\n    x35 = righthalf(x34)\n    x36 = vmirror(x35)\n    x37 = shift(x36, UNITY)\n    O = paint(x22, x37)\n    return O"], [1.0, "def solve_ff7ea9c3(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_223f72f2(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = compose(x5, color)\n    x7 = compose(double, x4)\n    x8 = rbind(apply, x7)\n    x9 = lbind(lbind, gravitate)\n    x10 = compose(x8, x9)\n    x11 = fork(sfilter, identity, x10)\n    x12 = chain(size, x8, x11)\n    x13 = matcher(x12, TWO)\n    x14 = colorfilter(x1, TWO)\n    x15 = difference(x1, x14)\n    x16 = compose(normalize, first)\n    x17 = chain(ulcorner, x16, x12)\n    x18 = fork(shift, identity, x17)\n    x19 = normalize(x15)\n    x20 = matcher(x18, x19)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x1, x21)\n    x23 = argmax(x22, size)\n    x24 = color(x23)\n    x25 = toindices(x23)\n    x26 = objects(I, T, F, T)\n    x27 = rbind(shift, x24)\n    x28 = compose(x27, toindices)\n    x29 = fork(recolor, x28, identity)\n    x30 = mapply(x29, x26)\n    O = paint(I, x30)\n    return O"], [1.0, "def solve_363203bf(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, d687)\n    x9 = compose(flip, x8)\n    x10 = extract(x7, x9)\n    O = x10(I)\n    return O"], [1.0, "def solve_3cac3f7e(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_53925e3f(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_2e2dcf42(I):\n    x1 = height(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = interval(x4, x5, FOUR)\n    x7 = repeat(x6, ONE)\n    x8 = merge(x7)\n    O = fill(I, ZERO, x8)\n    return O"], [1.0, "def solve_591311fb(I):\n    x1 = shape(I)\n    x2 = contained(ONE, x1)\n    x3 = branch(x2, T, F, T)\n    O = canvas(x3, UNITY)\n    return O"], [1.0, "def solve_44a40ef0(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = branch(x2, ONE, SEVEN)\n    O = canvas(x3, FIVE)\n    return O"], [1.0, "def solve_07d532b2(I):\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = order(x1, x2)\n    x4 = lbind(apply, last)\n    x5 = chain(x4, mostcolor, x2)\n    x6 = fork(recolor, x5, x2)\n    x7 = mapply(x6, x3)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_79d908ce(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = objects(I, T, F, T)\n    x5 = totuple(x4)\n    x6 = apply(color, x5)\n    x7 = lbind(sfilter, x6)\n    x8 = lbind(matcher, identity)\n    x9 = chain(size, x7, x8)\n    x10 = valmax(x3, x9)\n    x11 = matcher(x9, x10)\n    x12 = sfilter(x3, x11)\n    x13 = lbind(colorcount, I)\n    x14 = argmin(x12, x13)\n    x15 = ofcolor(I, x14)\n    x16 = recolor(x14, x15)\n    x17 = apply(initset, x16)\n    x18 = remove(x16, x1)\n    x19 = lbind(argmin, x17)\n    x20 = lbind(rbind, manhattan)\n    x21 = compose(x19, x20)\n    x22 = fork(combine, identity, x21)\n    x23 = apply(x22, x18)\n    x24 = matcher(first, x14)\n    x25 = rbind(sfilter, x24)\n    x26 = chain(invert, ulcorner, x25)\n    x27 = fork(shift, identity, x26)\n    x28 = mapply(x27, x23)\n    x29 = normalize(x28)\n    x30 = shape(x29)\n    x31 = canvas(ZERO, x30)\n    O = paint(x31, x29)\n    return O"], [1.0, "def solve_ca14f3bf(I):\n    x1 = asobject(I)\n    x2 = shift(x1,3333)\n    O = paint(I, x2)\n    return O"], [1.0, "def solve_e80ff72a(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = size(x4)\n    x6 = width(I)\n    x7 = multiply(x6, x5)\n    x8 = multiply(UNITY, x7)\n    x9 = canvas(ZERO, x8)\n    x10 = multiply(x6, x5)\n    x11 = decrement(x10)\n    x12 = lbind(astuple, x11)\n    x13 = rbind(shoot, UP_RIGHT)\n    x14 = compose(last, last)\n    x15 = chain(x13, x12, x14)\n    x16 = fork(recolor, first, x15)\n    x17 = mapply(x16, x4)\n    O = paint(x9, x17)\n    return O"], [1.0, "def solve_80446397(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_65c4b6e2(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_0f25b3e5(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_caddcd22(I):\n    x1 = lbind(add, DOWN)\n    x2 = compose(x1, size)\n    x3 = fork(equality, toindices, x2)\n    x4 = rbind(add, RIGHT)\n    x5 = compose(x4, width)\n    x6 = fork(equality, toindices, x5)\n    x7 = fork(add, size, x6)\n    x8 = compose(x3, x7)\n    x9 = extract(x1, x8)\n    x10 = fork(insert, vupscale, toindices)\n    x11 = compose(x10, initset)\n    x12 = fork(insert, product, x11)\n    x13 = fork(intersection, x12, backdrop)\n    x14 = mapply(x13, x9)\n    O = fill(I, ZERO, x14)\n    return O"], [1.0, "def solve_ae48ed92(I):\n    x1 = branch(I, x2, x3)\n    x2 = x1(I)\n    x3 = decrement(x2)\n    x4 = tojvec(x3)\n    x5 = shoot(x4, DOWN_LEFT)\n    x6 = intersection(x5, x2)\n    x7 = fill(I, THREE, x6)\n    x8 = objects(x7, T, F, F)\n    x9 = fork(combine, vfrontier, hfrontier)\n    x10 = mapply(x9, x8)\n    O = fill(x7, FOUR, x10)\n    return O"], [1.0, "def solve_8e8005c4(I):\n    x1 = vmirror(I)\n    x2 = matcher(identity, ZERO)\n    x3 = rbind(sfilter, x2)\n    x4 = compose(size, x3)\n    x5 = apply(x4, x1)\n    x6 = dedupe(x5)\n    x7 = rot90(x6)\n    x8 = dedupe(x7)\n    x9 = rot270(x8)\n    x10 = hconcat(x7, x4)\n    x11 = hconcat(x9, x4)\n    O = vconcat(x10, x11)\n    return O"], [1.0, "def solve_62eebec0(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_d26aa7ae(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = objects(x1, T, F, F)\n    x4 = power(normalize, THREE)\n    x5 = fork(add, height, width)\n    x6 = x5(x4)\n    x7 = astuple(ONE, x6)\n    x8 = mostcolor(I)\n    x9 = canvas(x8, x7)\n    x10 = asobject(x1)\n    x11 = paint(x9, x10)\n    x12 = rot90(x11)\n    x13 = rot180(x11)\n    x14 = rot270(x11)\n    x15 = hconcat(x12, x4)\n    x16 = hconcat(x13, x8)\n    x17 = vconcat(x15, x9)\n    x18 = vconcat(x16, x10)\n    O = rot90(x18)\n    return O"], [1.0, "def solve_144aadf8(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_f408d12c(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = UNITY(x2)\n    x4 = shoot(x3, UP_RIGHT)\n    x5 = shoot(x3, UNITY)\n    x6 = recolor(x1, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = mapply(x7, x4)\n    x9 = underfill(I, x1, x8)\n    x10 = objects(x9, T, F, T)\n    x11 = colorfilter(x10, x1)\n    x12 = rbind(bordering, I)\n    x13 = mfilter(x11, x12)\n    O = mfilter(x11, x1)\n    return O"], [1.0, "def solve_63f12f42(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_4acce88b(I):\n    x1 = mostcolor(I)\n    x2 = replace(I, x1, ZERO)\n    x3 = apply(d23, x2)\n    x4 = branch(x3, x2, x2)\n    x5 = x4(x4)\n    x6 = dmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = lbind(apply, maximum)\n    x9 = apply(x8, x7)\n    x10 = cmirror(x9)\n    x11 = papply(pair, x9, x10)\n    x12 = apply(x11, x7)\n    x13 = hmirror(x12)\n    x14 = papply(pair, x12, x13)\n    x15 = apply(x8, x14)\n    x16 =vdmirror(x15)\n    x17 = papply(pair, x15, x16)\n    x18 = apply(x8, x17)\n    x19 = hmirror(x18)\n    O = papply(pair, x18, x19)\n    return O"], [1.0, "def solve_fe0401ac(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_f57764ab(I):\n    x1 = asindices(I)\n    x2 = objects(I, T, F, F)\n    x3 = fork(multiply, sign, identity)\n    x4 = lbind(apply, x3)\n    x5 = chain(even, maximum, x4)\n    x6 = lbind(sfilter, x1)\n    x7 = fork(add, first, last)\n    x8 = rbind(remove, x2)\n    x9 = compose(center, last)\n    x10 = fork(subtract, first, x9)\n    x11 = compose(x5, x10)\n    x12 = lbind(rbind, equality)\n    x13 = lbind(argmin, x2)\n    x14 = chain(x7, x4, x10)\n    x15 = lbind(lbind, astuple)\n    x16 = lbind(rbind, astuple)\n    x17 = lbind(compose, x11)\n    x18 = lbind(compose, x14)\n    x19 = compose(x18, x15)\n    x20 = compose(x18, x16)\n    x21 = compose(x13, x19)\n    x22 = rbind(compose, x21)\n    x23 = lbind(lbind, valmin)\n    x24 = rbind(compose, x19)\n    x25 = chain(x24, x23, x8)\n    x26 = lbind(fork, greater)\n    x27 = fork(x26, x25, x20)\n    x28 = chain(x6, x17, x16)\n    x29 = chain(x6, x22, x12)\n    x30 = fork(intersection, x28, x29)\n    x31 = compose(x6, x27)\n    x32 = fork(intersection, x30, x31)\n    x33 = fork(recolor, color, x32)\n    x34 = mapply(x33, x2)\n    O = paint(I, x34)\n    return O"], [1.0, "def solve_71bf8673(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = dmirror(I)\n    x5 = hconcat(x4, I)\n    x6 = hmirror(x5)\n    x7 = vconcat(x5, x6)\n    x8 = vconcat(x7, x7)\n    O = compress(x8)\n    return O"], [1.0, "def solve_f9bb9db6(I):\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, size)\n    x3 = rbind(compose, asobject)\n    x4 = lbind(rbind, sfilter)\n    x5 = chain(x4, x3, x2)\n    x6 = lbind(apply, multiply)\n    x7 = chain(x6, toivec, x5)\n    x8 = fork(add, identity, x7)\n    x9 = fork(222, x8, identity)\n    x10 = compose(x7, x9)\n    x11 = power(x10, FOUR)\n    x12 = x11(I)\n    x13 = objects(x12, T, F, F)\n    x14 = colorfilter(x13, ZERO)\n    x15 = rbind(bordering, I)\n    x16 = compose(flip, x15)\n    x17 = mfilter(x14, x16)\n    x18 = hperiod(x17)\n    x19 = rbind(multiply, THREE)\n    x20 = apply(x19, x15)\n    x21 = rbind(multiply, FOUR)\n    x22 = apply(x21, x15)\n    x23 = merge(x2)\n    x24 = lbind(hperiod, x23)\n    x25 = apply(x24, x15)\n    x26 = lbind(shift, x17)\n    x27 = mapply(x26, x25)\n    x28 = apply(x27, x22)\n    O = fill(x12, FOUR, x28)\n    return O"], [1.0, "def solve_9375d687(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, lefthalf, tophalf)\n    x9 = branch(x7, righthalf, bottomhalf)\n    x10 = branch(x7, hconcat, vconcat)\n    x11 = x9(I)\n    x12 = x10(I)\n    x13 = color(x11)\n    x14 = color(x12)\n    x15 = palette(x11)\n    x16 = remove(x13, x15)\n    x17 = palette(x12)\n    x18 = remove(x16, x17)\n    x19 = merge(x18)\n    x20 = palette(x11)\n    x21 = other(x20, x19)\n    x22 = palette(x12)\n    x23 = other(x22, x19)\n    x24 = colorcount(x11, x13)\n    x25 = colorcount(x12, x13)\n    x26 = greater(x24, x25)\n    x27 = branch(x26, identity, vmirror)\n    x28 = x27(x11)\n    x29 = ofcolor(x28, x13)\n    x30 = subgrid(x29, x28)\n    x31 = x27(x30)\n    x32 = replace(x31, x13, x24)\n    O = x27(x32)\n    return O"], [1.0, "def solve_37b573ad(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_1b49b1b4(I):\n    x1 = normalize(I)\n    x2 = rot90(x1)\n    x3 = rot180(x1)\n    x4 = rot270(x1)\n    x5 = hconcat(x2, x4)\n    x6 = hconcat(x3, x5)\n    O = vconcat(x6, x1)\n    return O"], [1.0, "def solve_2d0479a8(I):\n    x1 = partition(I)\n    x2 = mostcolor(I)\n    x3 = ofcolor(I, x2)\n    x4 = switch(I, THREE, FOUR)\n    x5 = mapply(dneighbors, x1)\n    x6 = mapply(ineighbors, x1)\n    x7 = fill(x4, SIX, x5)\n    O = fill(x7, FOUR, x6)\n    return O"], [1.0, "def solve_7527d7e2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_c3395140(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_232c4c96(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_ba5ca3b4(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(vfrontier, x2)\n    x4 = underfill(I, EIGHT, x3)\n    x5 = hconcat(x4, x4)\n    O = vconcat(x5, x5)\n    return O"], [1.0, "def solve_11ea01f1(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_cfe2fe7c(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_703585f6(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x3 = minimum(x3)\n    x4 = divide(x4, x3)\n    x5 = x2(I, x4)\n    x6 = interval(ONE, x5, ONE)\n    x7 = multiply(x3, x6)\n    x8 = rbind(apply, x7)\n    x9 = lbind(mostcolor, I)\n    x10 = compose(x8, x9)\n    x11 = numcolors(I)\n    x12 = matcher(x10, x11)\n    x13 = sfilter(x2, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x6)\n    O = paint(I, x15)\n    return O"], [1.0, "def solve_301ad0f6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(ORIGIN, x17)\n    x24 = rbind(x23, x22)\n    x25 = divide(x27, x22)\n    x26 =Esfilter(x12, x25)\n    x27 = rbind(multiply, x15)\n    x28 = apply(x27, x26)\n    x29 = rbind(toobject, I)\n    x30 = lbind(shift, I)\n    x31 = mapply(x30, x29)\n    x32 = apply(x27, x26)\n    x33 = cover(I, x21)\n    x34 = fill(x32, x3, x33)\n    x35 = shift(x31, x24)\n    x36 = ofcolor(x35, x7)\n    O = fill(x34, x3, x36)\n    return O"], [1.0, "def solve_1f24bd4f(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_6fa34b4a(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_ee6c52c5(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_eb191d2e(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = decrement(x1)\n    x4 = astuple(x3, x2)\n    x5 = crop(I, ORIGIN, x4)\n    x6 = hmirror(x5)\n    x7 = vconcat(I, x6)\n    x8 = double(x3)\n    x9 = astuple(x8, x2)\n    x10 = crop(x7, DOWN, x9)\n    O = vconcat(x7, x10)\n    return O"], [1.0, "def solve_74516643(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = fork(equality, toindices, backdrop)\n    x5 = mfilter(x3, x4)\n    x6 = color(I)\n    x7 = fill(I, x6, x5)\n    O = fill(x7, ONE, x13)\n    return O"], [1.0, "def solve_ebdb7d81(I):\n    x1 = compose(first, last)\n    x2 = order(x1, sign)\n    x3 = apply(mostcommon, x2)\n    x4 = size(x3)\n    x5 = interval(ZERO, x4, ONE)\n    x6 = apply(tojvec, x5)\n    x7 = mpapply(shift, x3, x6)\n    x8 = canvas(ZERO, x4)\n    x9 = paint(x8, x7)\n    O = rot90(x9)\n    return O"], [1.0, "def solve_2f46560c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_fd100e8c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_e1442946(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x9)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x24, x23)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_790638c0(I):\n    x1 = rot270(I)\n    x2 = matcher(identity, ZERO)\n    x3 = rbind(sfilter, x2)\n    x4 = compose(flip, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = apply(x5, x1)\n    x7 = rbind(repeat, x6)\n    x8 = apply(x7, x4)\n    O = cmirror(x8)\n    return O"], [1.0, "def solve_fd464682(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_ccf8472b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_73b52bce(I):\n    x1 = palette(I)\n    x2 = intersection(x1, x1)\n    x3 = colorcount(I, ZERO)\n    x4 = outbox(x3)\n    x5 = intersection(x2, x4)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 = ofcolor(I, x6)\n    x9 = ofcolor(I, x7)\n    x10 = rbind(shoot, UNITY)\n    x11 = rbind(shoot, NEG_UNITY)\n    x12 = rbind(shoot, DOWN_LEFT)\n    x13 = rbind(shoot, UP_RIGHT)\n    x14 = fork(combine, x10, x11)\n    x15 = fork(combine, x12, x13)\n    x16 = fork(combine, x14, x15)\n    x17 = rbind(shoot, UNITY)\n    x18 = rbind(shoot, NEG_UNITY)\n    x19 = rbind(shoot, DOWN_LEFT)\n    x20 = rbind(shoot, UP_RIGHT)\n    x21 = fork(combine, x17, x20)\n    x22 = fork(combine, x18, x21)\n    x23 = fork(combine, initset, x22)\n    x24 = fork(rapply, x23, identity)\n    x25 = compose(first, x24)\n    x26 = mapply(x25, x6)\n    x27 = fill(I, x6, x26)\n    x28 = intersection(x8, x27)\n    O = fill(x22, x13, x28)\n    return O"], [1.0, "def solve_c815806e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = hsplit(I, x2)\n    x4 = shape(x3)\n    x5 = apply(size, x4)\n    x6 = argmax(x5, x2)\n    O = canvas(x6, x4)\n    return O"], [1.0, "def solve_033d3e06(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_26bc98a3(I):\n    x1 = warped(I, TEN)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [1.0, "def solve_b472da60(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, DOWN)\n    x4 = mapply(I, x3)\n    x5 = fill(I, x1, x4)\n    x6 = mapply(size, x3)\n    x7 = fill(x5, x1, x6)\n    O = replace(x7, x1, x1)\n    return O"], [1.0, "def solve_5ce3dba3(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_c4828f9e(I):\n    x1 = shape(I)\n    x2 = divide(x1, THREE)\n    x3 = first(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = last(x5)\n    x7 = shift(x6, x3)\n    O = paint(x4, x7)\n    return O"], [1.0, "def solve_fc592e6e(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    x5 = color(x4)\n    x6 = palette(x1)\n    x7 = other(x6, x5)\n    x8 = neighbors(UNITY)\n    O = initset(x17)\n    return O"], [1.0, "def solve_13ffe7f5(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_1164ac75(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_33a70dd8(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_4c531e60(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_7a4e1a69(I):\n    x1 = asindices(I)\n    x2 = backdrop(x1)\n    O = toobject(x2, I)\n    return O"], [1.0, "def solve_25dc8acb(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_13c4a6a0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = interval(ERO, FIVE, ONE)\n    x8 = downscale(x6, x4)\n    x9 = lbind(shift, x8)\n    x10 = mapply(x9, x7)\n    O = fill(x5, FIVE, x10)\n    return O"], [1.0, "def solve_40c0af53(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_57eafea6(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = fork(multiply, height, width)\n    x7 = width(I)\n    x8 = rbind(repeat, x7)\n    x9 = width(I)\n    x10 = subtract(x8, x9)\n    x11 = normalize(x5)\n    x12 = multiply(x4, x11)\n    x13 = shift(x15, x12)\n    x14 = dmirror(x13)\n    x15 = objects(x14, T, F, T)\n    x16 = apply(toindices, x15)\n    x17 = ofcolor(x16, x1)\n    x18 = mapply(vfrontier, x17)\n    x19 = mapply(hfrontier, x17)\n    x20 = toindices(x13)\n    x21 = box(x20)\n    x22 = difference(x19, x21)\n    x23 = x17(x22)\n    x24 = color(x3)\n    x25 = palette(x23)\n    x26 = other(x25, x24)\n    x27 = subgrid(x23, I)\n    x28 = ofcolor(x27, x26)\n    x29 = fill(x27, x26, x28)\n    O = replace(x29, x26, x1)\n    return O"], [1.0, "def solve_e23c7ee1(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_53b8c701(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = width(I)\n    x5 = astuple(TEN, x4)\n    x6 = canvas(x3, x5)\n    x7 = interval(ONE, SEVEN, ONE)\n    x8 = invert(TEN)\n    x9 = interval(x8, TEN, ONE)\n    x10 = product(x7, x9)\n    x11 = remove(ORIGIN, x10)\n    x12 = lbind(intersection, x2)\n    x13 = lbind(shift, x2)\n    x14 = compose(x12, x13)\n    x15 = toindices(x2)\n    x16 = lbind(intersection, x15)\n    x17 = lbind(shift, x15)\n    x18 = compose(x16, x17)\n    x19 = compose(size, x14)\n    x20 = compose(size, x18)\n    x21 = fork(equality, x19, x20)\n    x22 = chain(positive, size, x14)\n    x23 = fork(both, x21, x22)\n    x24 = sfilter(x11, x23)\n    x25 = compose(size, x14)\n    x26 = valmax(x24, x25)\n    x27 = compose(size, x14)\n    x28 = matcher(x27, x26)\n    x29 = sfilter(x24, x28)\n    x30 = fork(multiply, first, last)\n    x31 = argmax(x29, x30)\n    x32 = interval(ZERO, TEN, ONE)\n    x33 = lbind(shift, x2)\n    x34 = lbind(multiply, x31)\n    x35 = compose(x33, x34)\n    x36 = mapply(x35, x32)\n    O = paint(x6, x36)\n    return O"], [1.0, "def solve_5f3e61cd(I):\n    x1 = shape(I)\n    x2 = ofcolor(I, TWO)\n    x3 = mapply(vfrontier, x2)\n    x4 = underfill(I, ZERO, x3)\n    x5 = hconcat(x4, x4)\n    O = vconcat(x5, x5)\n    return O"], [1.0, "def solve_79fc7726(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_d0cff705(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_31e4653b(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_07514628(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = fork(equality, toindices, identity)\n    x5 = sfilter(x3, x4)\n    x6 = mapply(dneighbors, x5)\n    x7 = index(I, ORIGIN)\n    x8 = subgrid(x7, I)\n    x9 = trim(x8)\n    O = replace(x9, ONE, x7)\n    return O"], [1.0, "def solve_f3f7575b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, identity,93)\n    x3 = branch(x1, decrement, height)\n    x4 = x3(I)\n    x5 = astuple(ONE, x4)\n    x6 = x2(I)\n    x7 = crop(x6, ORIGIN, x5)\n    x8 = apply(dedupe, x7)\n    O = x2(x8)\n    return O"], [1.0, "def solve_d6a1b95a(I):\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = rbind(shoot, UP)\n    x5 = mapply(x4, x3)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = merge(x6)\n    x8 =shift(x7, UP)\n    x9 = fill(I, THREE, x3)\n    O = fill(x9, FOUR, x8)\n    return O"], [1.0, "def solve_3ece3cce(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_07e505e0(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [1.0, "def solve_badfee06(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_24930bab(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_fea790c1(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_692d317e(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_87e2a8b7(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_880cbfb3(I):\n    x1 = asobject(I)\n    x2 = height(I)\n    x3 = decrement(x2)\n    x4 = astuple(x3, ONE)\n    x5 = halve(x4)\n    x6 = width(I)\n    x7 = halve(x6)\n    x8 = ulcorner(x7)\n    x9 = rbind(shoot, x8)\n    x10 = mapply(x9, x5)\n    x11 = canvas(ZERO, x4)\n    O = fill(x11, FOUR, x10)\n    return O"], [1.0, "def solve_c00ab3e7(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_1941e2ac(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = matcher(color, x4)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x2, x6)\n    x8 = sizefilter(x7, ONE)\n    x9 = merge(x8)\n    x10 = fill(I, x4, x9)\n    x11 = merge(x8)\n    x12 = fill(x10, TWO, x11)\n    x13 = merge(x8)\n    x14 = fill(x12, ONE, x13)\n    x15 = compress(x14)\n    O = fill(x15, FOUR, x9)\n    return O"], [1.0, "def solve_f542ce7e(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = objects(I, T, F, T)\n    x5 = lbind(colorfilter, x4)\n    x6 = compose(size, x5)\n    x7 = matcher(x6, TWO)\n    x8 = colorfilter(x4, TWO)\n    x9 = rbind(adjacent, x8)\n    x10 = mfilter(x8, x9)\n    x11 = objects(I, T, F, T)\n    x12 = sfilter(x11, x7)\n    x13 = merge(x12)\n    x14 = rbind(adjacent, x13)\n    x15 = mfilter(x14, x7)\n    x16 = sfilter(x13, x15)\n    x17 = shape(x16)\n    x18 = subtract(x17, x16)\n    x19 = canvas(ZERO, x18)\n    x20 = paint(x19, x16)\n    O = subgrid(x20, I)\n    return O"], [1.0, "def solve_0cc2558a(I):\n    x1 = matcher(first, THREE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x2, x1)\n    x4 = dmirror(x3)\n    x5 = fork(combine, vfrontier, hfrontier)\n    x6 = compose(x5, x4)\n    x7 = mapply(x6, x4)\n    O = underfill(x7, ONE, x3)\n    return O"], [1.0, "def solve_bc32aca2(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x11 = canvas(x8, x9)\n    x12 = asindices(x11)\n    x13 = toobject(x12, I)\n    x14 = increment(x5)\n    x15 = increment(xx4)\n    x16 = divide(x14, x15)\n    x17 = rbind(multiply, x16)\n    x18 = apply(x17, x13)\n    x19 = rbind(toobject, I)\n    x20 = chain(x19, backdrop, x17)\n    x21 = apply(x20, x18)\n    x22 = matcher(x21, I)\n    x23 = rbind(adjacent, x12)\n    x24 = rbind(adjacent, x25)\n    x25 = fork(both, x23, x24)\n    x26 = compose(x22, x25)\n    x27 = sfilter(x2, x26)\n    O = fill(x11, x8, x27)\n    return O"], [1.0, "def solve_e4d5d1af(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_9205ff9d(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP)\n    x4 = rbind(shoot, DOWN)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = canvas(x10, x1)\n    x12 = astuple(dmirror, ORIGIN)\n    x13 = astuple(cmirror, x11)\n    x14 = combine(x12, x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x16, x16)\n    x18 = index(I, x2)\n    x19 = lbind(power, x18)\n    x20 = chain(first, x19, first)\n    x21 = compose(last, last)\n    x22 = fork(subtract, x21, x20)\n    x23 = compose(invert, x22)\n    x24 = fork(shoot, x22, x23)\n    x25 = fork(intersection, x24, x20)\n    x26 = chain(decrement, size, x25)\n    x27 = fork(shoot, x26, x24)\n    x28 = fork(combine, x27, x25)\n    x29 = compose(toivec, x28)\n    x30 = fork(shoot, x29, x27)\n    x31 = fork(combine, x27, x30)\n    x32 = mapply(x31, x17)\n    x33 = fill(I, EIGHT, x32)\n    x34 = mapply(x33, x19)\n    O = paint(x34, x32)\n    return O"], [1.0, "def solve_590defda(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained,25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_3ba0e11b(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_63afc717(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_a78dd068(I):\n    x1 = Fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [1.0, "def solve_9abd57e7(I):\n    x1 = height(I)\n    x2 = decrement(x1)\n    x3 = decrement(x2)\n    x4 = toivec(x3)\n    x5 = tojvec(x2)\n    x6 = add(x4, x5)\n    x7 = add(x3, x6)\n    x8 = fill(I, ZERO, x7)\n    x9 = canvas(ZERO, x1)\n    x10 = asobject(x9)\n    x11 = occurrences(x8, x10)\n    x12 = lbind(shift, x10)\n    x13 = mapply(x12, x11)\n    O = fill(x8, ONE, x13)\n    return O"], [1.0, "def solve_9579716b(I):\n    x1 = mostcolor(I)\n    x2 = hconcat(I, I)\n    x3 = upscale(I, THREE)\n    x4 = ofcolor(x3, x1)\n    x5 = asindices(x3)\n    x6 = difference(x5, x4)\n    x7 = hconcat(x2, I)\n    x8 = vconcat(x7, x7)\n    x9 = vconcat(x8, x7)\n    O = fill(x9, ZERO, x6)\n    return O"], [1.0, "def solve_122330dc(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, Righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [1.0, "def solve_63be3dc8(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_10f211ce(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_5e38dc5f(I):\n    x1 = ofcolor(I, TWO)\n    x2 = matcher(first, ZERO)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(invert, center, x3)\n    x5 = fork(shift, identity, x4)\n    x6 = canvas(ZERO, THREE_BY_THREE)\n    x7 = asindices(x6)\n    x8 = matcher(first, ZERO)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    x11 = initset(x1)\n    x12 = box(x11)\n    x13 = lbind(toobject, x12)\n    x14 = compose(x4, x13)\n    x15 = toindices(x14)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x10)\n    O = fill(x6, EIGHT, x17)\n    return O"], [1.0, "def solve_5d49d081(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_66174c0c(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_634f8d80(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_3279bf68(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_2a4b191d(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_17da7258(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [1.0, "def solve_5f203451(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_e681058e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = sfilter(x1, hline)\n    x5 = size(x4)\n    x6 = positive(x5)\n    x7 = branch(x6, identity, dmirror)\n    x8 = x7(I)\n    x9 = rbind(subgrid, x8)\n    x10 = matcher(color, x3)\n    x11 = compose(flip, x10)\n    x12 = partition(x8)\n    x13 = sfilter(x12, x11)\n    x14 = argmax(x13, size)\n    x15 = product(x14, x14)\n    x16 = apply(color, x15)\n    x17 = canvas(x3, x14)\n    x18 = paint(x17, x16)\n    x19 = fork(remove, last, identity)\n    x20 = compose(hmirror, x19)\n    x21 = fork(vconcat, identity, x20)\n    x22 = apply(x21, x15)\n    x23 = merge(x22)\n    O = x7(x23)\n    return O"], [1.0, "def solve_d9eef308(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_393222e3(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_714271e9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = combine(x8, x9)\n    x13 = merge(x11)\n    x14 = fill(I, x3, x13)\n    x15 = paint(x14, x9)\n    O = x15(x15)\n    return O"], [1.0, "def solve_673778eb(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(lbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [1.0, "def solve_24ee4042(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_32fd83ab(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = partition(I)\n    x7 = fork(multiply, height, width)\n    x8 = fork(equality, size, x7)\n    x9 = sfilter(x6, x8)\n    x10 = argmax(x9, size)\n    x11 = difference(x5, x10)\n    x12 = apply(initset, x11)\n    x13 = rbind(hmatching, x10)\n    x14 = rbind(vmatching, x10)\n    x15 = fork(either, x13, x14)\n    x16 = Sfilter(x12, x15)\n    x17 = rbind(gravitate, x10)\n    x18 = fork(add, center, x17)\n    x19 = fork(connect, center, x18)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x16)\n    O = paint(I, x21)\n    return O"], [1.1, "def solve_43776383(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(compose, flip)\n    x3 = lbind(matcher, first)\n    x4 = compose(x2, x3)\n    x5 = lbind(compose, asobject)\n    x6 = lbind(rbind, sfilter)\n    x7 = compose(x5, x6)\n    x8 = lbind(rbind,colorcount)\n    x9 = fork(equality, x7, x8)\n    x10 = compose(x9, initset)\n    x11 = fork(indices, x7, x10)\n    x12 = compose(size, x11)\n    x13 = matcher(x12, ZERO)\n    x14 = partition(I)\n    x15 = sfilter(x14, x13)\n    x16 = argmax(x15, size)\n    x17 = remove(x16, x15)\n    x18 = lbind(chain, first)\n    x19 = lbind(rbind,\ufffdrapply)\n    x20 = lbind(lbind, initset)\n    x21 = lbind(rbind,rapply)\n    x22 = compose(x21, frontiers)\n    x23 = chain(x18, x22, last)\n    x24 = lbind(colorbind,irrelval)\n    x25 = chain(x24, color, x23)\n    x26 = matcher(x25, ZERO)\n    x27 = fork(O = fork(both, x23, x26)\n    x28 = fork(combine, x25, x27)\n    x29 = fork(shift, x28, ulcorner)\n    x30 = fork(intersection, x29, last)\n    x31 = chain(x15, x30, first)\n    x32 = size(x15)\n    x33 = equality(x32, ZERO)\n    x34 = branch(x33, x31, x29)\n    x35 = bright(x16, x34)\n    x36 =614(x35)\n    x37 = paint(I, x36)\n    O = subgrid("], [1.1, "def solve_104cb5af(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_ae30e868(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = matcher(size, SIX)\n    x2 = equality(ineighbors, x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = asindices(x4)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = intersection(x6, x5)\n    x8 = lrcorner(x7)\n    x9 = shoot(x8, DOWN_LEFT)\n    x10 = intersection(x9, x5)\n    x11 = combine(x7, x10)\n    x12 = llcorner(x11)\n    x13 = remove(x12, x11)\n    x14 = lbind(shift, x13)\n    x15 = height(x11)\n    x16 = height(x10)\n    x17 = divide(x15, x16)\n    x18 = increment(x17)\n    x19 = width(x11)\n    x20 = astuple(x18, x19)\n    x21 = crop(x4, ORIGIN, x20)\n    x22 = hupscale(x21, x18)\n    x23 = dmirror(x22)\n    x24 = shape(x23)\n    x25 = canvas(ZERO, x24)\n    x26 = ulcorner(x25)\n    x27 =rbind(shoot, x26)\n    x28 = mapply(x27, x3)\n    x29 = combine(x24, x28)\n    x30 = urcorner(x29)\n    x31 = remove(x30, x29)\n    x32 = lbind(shift, x31)\n    x33 = height(x11)\n    x34 = decrement(x33)\n    x35 = toivec(x34)\n    x36 = height(x11)\n    x37 = tojvec(x36)\n    x38 = add(x35, x37)\n    x39 = height(x11)\n    x40 = increment(x39)\n    x41 = astuple(x38, x40)\n    x42 ="], [1.1, "def solve_2974bfca(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, ONE)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)"], [1.1, "def solve_d1195071(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(both, x29, x30)\n    x34 = fork(both, x31, x32)\n    x35 = fork(both, x33, x34)\n    x36 = compose(x"], [1.1, "def solve_87600c64(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = argmax(x1, size)\n    x3 = remove(x2, x1)\n    x4 = merge(x3)\n    x5 = subgrid(x4, I)\n    x6 = chain(color, merge, lefthalf)\n    x7 = x6(x5)\n    x8 = rbind(colorcount, ZERO)\n    x9 = argmin(x2, x8)\n    x10 = rbind(colorcount, x9)\n    x11 = chain(x9, x10, palette)\n    x12 = lbind(contained, x7)\n    x13 = chain(x12, palette, x11)\n    x14 = compose(flip, x13)\n    x15 = extract(x12, x14)\n    x16 = ulcorner(x15)\n    x17 = lrcorner(x15)\n    x18 = height(x15)\n    x19 = divide(x18, x17)\n    x20 = increment(x19)\n    x21 = width(x15)\n    x22 = divide(x21, x22)\n    x23 = increment(x22)\n    x24 = invert(x23)\n    x25 = tojvec(x24)\n    x26 = asobject(x25)\n    x27 = height(x5)\n    x28 = increment(x27)\n    x29 = interval(x26, x28, ONE)\n    x30 = product(x29, x29)\n    x31 = matcher(first, x9)\n    x32 = compose(flip, x31)\n    x33 = sfilter(x30, x32)\n    x34 = fill(x5, x19, x33)\n    x35 = lbind(shift, x323)\n    x36 = fork(recolor, x35, identity)\n    x37 = mapply(x36, x22)\n    x38 = paint(x34, x37)\n    x39 = double(x conveniently)\n    x40 = invert(x39)\n    x41 = increment(x40)"], [1.1, "def solve_0a816e83(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_c3b6ab67(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_4a0be8d7(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25ff2445\n    x26 =499ling(x24)\n    x27 = objects(x3, T, F, F)\n    x28 = colorfilter(x27, ZERO)\n    x29 = rbind(toobject, x3)\n    x30 = chain(x29, backdrop, delta)\n    x31 = mapply(x30, x28)\n    x32 = combine(x24, x31)\n    x33 = rbind(adjacent, x32)\n    x34 = urcorner(x4)\n    x35 = sfilter(x4, x33)\n    x36 = Airport(x35, x4)\n    x37 = mapply(x19, x36)\n    x38 = combine(x34, x37)\n    x39 = paint(x3, x38)\n    O = x2(x39)\n"], [1.1, "def solve_71a7ca4e(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = argmax(x3, x4)\n    x6 = color(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmax(x8, x9)\n    x11 = remove(x10, x8)\n    x12 = lbind(ofcolor, I)\n    x13 = mapply(x12, x11)\n    x14 = subgrid(x13, I)\n    x15 = objects(x14, T, F, F)\n    x16 = colorfilter(x15, x6)\n    x17 = initset(x10)\n    x18 = insert(x6, x17)\n    x19 = lbind(intersection, x18)\n    x20 = chain(positive, size, x19)\n    x21 = chain(positive, decrement, size)\n    x22 = fork(either, x20, x21)\n    x23 = rbind(toobject, x14)\n    x24 = compose(corners, outbox)\n    x25 = chain(palette, x23, x24)\n    x26 = rbind(branch, x6)\n    x27 = chain(flip, x22, x25)\n    x28 = compose(first, x25)\n    x29 = fork(x26, x27, x28)\n    x30 = apply(uppermost, x16)\n    x31 = order(x30, identity)\n    x32 = lbind(apply, x29)\n    x33 = rbind(order, leftmost)\n    x34 = lbind(sfilter, x16)\n    x35 = lbind(matcher, uppermost)\n    x36 = compose(x34, x35)\n    x37 = chain(x32, x33, x36)\n    O = apply(x37"], [1.1, "def solve_d7e25281(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = lrcorner(x4)\n    x41 = index(x3, x40)"], [1.1, "def solve_323267c5(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_279cd42f(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_a5120804(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = box(x2)\n    x5 = astuple(TEN, FOUR)\n    x6 = canvas(x3, x5)\n    x7 = interval(ONE, SIX, ONE)\n    x8 = invert(TEN)\n    x9 = interval(x8, TEN, ONE)\n    x10 = product(x7, x9)\n    x11 = remove(ORIGIN, x10)\n    x12 = lbind(intersection, x4)\n    x13 = lbind(shift, x2)\n    x14 = compose(x12, x13)\n    x15 = toindices(x2)\n    x16 = lbind(intersection, x15)\n    x17 = lbind(shift, x1)\n    x18 = compose(x16, x17)\n    x19 = compose(size, x14)\n    x20 = compose(size, x18)\n    x21 = fork(equality, x19, x20)\n    x22 = chain(positive, size, x14)\n    x23 = fork(both, x21, x22)\n    x24 = sfilter(x11, x23)\n    x25 = compose(size, x14)\n    x26 = valmax(x24, x25)\n    x27 = compose(size, x14)\n    x28 = matcher(x27, x26)\n    x29 = sfilter(x24, x28)\n    x30 = fork(multiply, first, last)\n    x31 = argmax(x29, x30)\n    x32 = interval(ZERO, TEN, ONE)\n    x33 = lbind(shift, x2)\n    x34 = multiply(TEN, UNITY)\n    x35 = interval(x32, x34, invert)\n    x36 = sfilter(x32, x35)\n    x37 = apply(x33, x36)\n    x38 = mapply(x37, x000)\n    x39 = paint(I, x38"], [1.1, "def solve_c192b683(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, FIVE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = argmin(x8, numcolors)\n    x10 = normalize(x9)\n    x11 = toindices(x10)\n    x12 = increment(x width)\n    x13 = tojvec(x12)\n    x14 = shift(x11, x13)\n    x15 = argmin(x11, x13)\n    x16 = x15(I)\n    x17 = remove(x10, x1)\n    x18 = other(x17, x16)\n    x19 = color(x18)\n    x20 = lbind(shift, x18)\n    x21 = rbind(difference, x76)\n    x22 = chain(size, x20, x21)\n    x23 = matcher(x22, ZERO)\n    x24 = sfilter(x16, x23)\n    x25 = difference(x16, x24)\n    x26 = sfilter(x25, x23)\n    x27 = recolor(x10, x26)\n    x28 = lbind(shift, x14)\n    x29 = lbind(insert, x14)\n    x30 = rbind(intersection, x21)\n    x31 = chain(size, x29, x30)\n    x32 = argmax(x27, x31)\n    x33 = lbind(shift, x33)\n    x34 = lbind(insert, x33)\n    x35 = rbind(intersection, x32)\n    x36 = chain(size, x34, x35)\n    x37 = sfilter(x32, x36)\n    x38 = fork(recolor, x19, x37)\n    x39 = fork(colorcount, x18, x38)\n"], [1.1, "def solve_c12d8cb8(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =889(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, ONE, x3)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x8, x18)\n    x20 = lbind(colorcount, x7)\n    x21 = argmin(x19, x20)\n    x22 = rbind(colorcount, x21)\n    x23 = rbind(toobject, x7)\n    x24 = compose(x22, x23)\n    x25 = chain(x delta, x24, decrement)\n    x26 =55754(x25)\n    x27 = objects(x26, T, F, T)\n    x28 = rbind(colorcount, x21)\n    x29 = valmax(x27, x28)\n    x30 = rbind(toobject, x7)\n    x31 = chain(x29, x30, color)\n    x32 = x31(x1600)\n    x33 = x31(x16)\n    x34 = rbind(colorcount, x21)\n    x35 = valmax(x32, x34)\n    x36 = x35(x29)\n    x37 = equality(x36, x31)\n    x38 = astuple(ONE, x37)\n    x39 = canvas(x18, x38)\n    x40 = asobject("], [1.1, "def solve_c0cac043(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_5d7095a7(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = astuple(color, TWO)\n    x2 = astuple(TWO, ONE)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = sfilter(x32, x35)\n    x37 =neighbors(x36)\n    x38 = mapply(neighbors, x37)\n    x39 =O = fill(x31, THREE, x38"], [1.1, "def solve_327d4bcf(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale11(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O ="], [1.1, "def solve_5510e157(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = rbind(objects,)\n    x3 = rbind(x2, F)\n    x4 = rbind(x3, F)\n    x5 = lbind(d687, x4)\n    x6 = lbind(rbind, colorcount)\n    x7 = compose(x6, x5)\n    x8 = rbind(canvas, UNITY)\n    x9 = compose(x8, x7)\n    x10 = fork(hconcat, identity, x9)\n    x11 = compose(x8, x10)\n    x12 = lbind(contained, ZERO)\n    x13 = chain(flip, x12, x11)\n    x14 = compose(positive, size)\n    x15 = lbind(rbind, sfilter)\n    x16 = fork(both, x13, x15)\n    x17 = rbind(toobject, I)\n    x18 = chain(x14, x17, x16)\n    x19 = compose(x12, x18)\n    x20 = fork(equality, identity, x19)\n    x21 = compose(x20, last)\n    x22 = ofcolor(I, ZERO)\n    x23 = sfilter(x22, x12)\n    x24 = argmax(x23, x28)\n    x25 = other(x23, x24)\n    x26 = last(x23)\n    x27 = compose(first, last)\n    x28 =    x27(x26)\n    x29 = fill(I, x25, x28)\n    x30 = ofcolor(x29, x25)\n    x31 = ulcorner(x30)\n    x32 = shoot(x31, UNITY)\n    x33 = lrcorner(x30)\n    x34 = shoot(x33, NEG_UNITY)\n    x35 = urcorner(x30)\n    x36 = shoot(x35, UP_RIGHT)\n    x37 = llcorner(x30)\n    x38 = shoot(x37, DOWN_LEFT)\n    x39 = combine(x32"], [1.1, "def solve_8854ff72(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = compose(size, dedupe)\n    x3 = x2(x1)\n    x4 = positive(x3)\n    x5 = branch(x4, height, width)\n    x6 = x5(I)\n    x7 = canvas(x4, x6)\n    x8 = matcher(identity, ZERO)\n    x9 = rbind(sfilter, x8)\n    x10 = compose(first, last)\n    x11 =rbind(sfilter, x10)\n    x12 = compose(x9, x11)\n    x13 = fork(size, x12,leftmost)\n    x14 = matcher(x13, ZERO)\n    x15 = uppermost(x7)\n    x16 = leftmost(x7)\n    x17 = fork( greater, x15, x16)\n    x18 = uppermost(x7)\n    x19 = matcher(x18, ZERO)\n    x20 = rightmost(x7)\n    x21 = leftmost(x7)\n    x22 = fork( greater, x20, x21)\n    x23 = uppermost(x7)\n    x24 = matcher(x23, ZERO)\n    x25 = lrcorner(x7)\n    x26 = ulcorner(x7)\n    x27 = fork(connect, x25, x26)\n    x28 = subgrid(x27, I)\n    x29 = palette(x28)\n    x30 = sfilter(x29, x24)\n    x31 = lbind(colorcount, x28)\n    x32 = argmax(x30, x31)\n    x33 = remove(x32, x30)\n    x34 = rbind(contained, x33)\n    x35 = argmin(x34, size)\n    x36 = x35(x28)\n    x37 = palette(x35)\n    x38 = remove(x36, x35)\n    x39 = lbind(colorcount, x28)\n    x40 = argmin(x38, x39)\n    x41 = rbind(color"], [1.1, "def solve_7a5f57a2(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x352, x32)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18, x"], [1.1, "def solve_e7f52bb2(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_3690af8a(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_8ba81066(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x04, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_7753107b(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = initset(ORIGIN)\n    x5 = lbind(rapply, x4)\n    x6 = compose(first, x5)\n    x7 = chain(x10, x4, x6)\n    x8 = fork(difference, x7, toindices)\n    x9 = matcher(x8, ZERO)\n    x10 = fork(both, x9, x7)\n    x11 = extract(x3, x10)\n    x12 = ONE(x11)\n    x13 = height(x12)\n    x14 = decrement(x13)\n    x15 = mostcolor(I)\n    x16 =astuple(x14, x15)\n    x17 = repeat(x16, ONE)\n    x18 = toindices(x17)\n    x19 = asindices(I)\n    x20 = box(x19)\n    x21 = NEG_UNITY(x20)\n    x22 = toindices(x21)\n    x23 = asindices(I)\n    x24 = corners(x23)\n    x25 = DOWN(x24)\n    x26 = astuple(x14, x15)\n    x27 = astuple(x25, x26)\n    x28 = combine(x28, x27)\n    x29 = rbind(toobject, I)\n    x30 = chain(numcolors, x29, x22)\n    x31 = matcher(x30, ONE)\n    x32 = astuple(x24, x15)\n    x33 = astuple(x31, x32)\n    x34 = combine(x33, x41)\n    x35 = argmax(x34, size)\n    x36 = matcher(first, x35)\n    x37 = compose(flip, x36)\n    x38 = sfilter(x1, x37)\n    x39 =535(x38)\n    x40 = multiply(x19, x39)\n"], [1.1, "def solve_0874b1eb(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_f2c578eb(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_1799e69a(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = apply(lowermost, x6)\n    x8 = maximum(x7)\n    x9 = width(I)\n    x10 = astuple(x9, x6)\n    x11 = add(x10, TWO)\n    x12 = interval(x8, x11, ONE)\n    x13 = prapply(shift, x7, x12)\n    x14 = lbind(canvas, x1)\n    x15 = compose(x14, toindices)\n    x16 = fork(paint, x15, x15)\n    x17 = compose(x16, lefthalf)\n    x18 = righthalf(I)\n    x19 = compose(x18, righthalf)\n    x20 = righthalf(I)\n    x21 = compose(x20, palette)\n    x22 = lbind(recolor, x1)\n    x23 = compose(x22, palette)\n    x24 = rbind(paint, x18)\n    x25 = chain(x24, x23, x8)\n    x26 = x25(x20)\n    x27 = x25(x21)\n    x28 = fork(combine, vfrontier, hfrontier)\n    x29 = fork(combine, rbind, TEN)\n    x30 = rbind(occurrences, x22)\n    x31 = compose(x30, x28)\n    x32 = apply(x31, x3)\n    x33 = rbind(valmax, numcolors)\n    x34 = chain(x33, x32, x23)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = x36(x69)\n    x38 = invert(x37)\n    x39 = cover(I, x"], [1.1, "def solve_401601cb(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = shape(I)\n    x13 = canvas(x11, x12)\n    x14 = hconcat(I, x13)\n    x15 = objects(x14, F, F, T)\n    x16 = argmin(x15, size)\n    x17 = subgrid(x16, x14)\n    x18 = remove(x16, x15)\n    x19 = lbind(colorcount, x18)\n    x20 = argmin(x12, x19)\n    x21 = rightmost(x16)\n    x22 = positive(x21)\n    x23 = vmirror(x22)\n    x24 = papply(pair, x17, x23)\n    x25 = lbind(apply, maximum)\n    x26 = size(x24)\n    x27 = increment(x26)\n    x28 = tojvec(x27)\n    x29 = leftmost(x16)\n    x30 = rightmost(x16)\n    x31 = ofcolor(x14, x29)\n    x32 = ofcolor(x20, x30)\n    x33 = combine(x31, x32)\n    x34 = combine(x33, x36)\n    x35 = height(x14)\n    x36 = height(x20)\n    x37 = interval(FOUR, x35, x36)\n    x38 = lbind(compose, flip)\n    x39 = lbind(matcher, first)\n    x40 = compose(x38, x39)\n    x41 = rbind(compose, asobject)\n    "], [1.1, "def solve_034cc5b5(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = connect(ORIGIN, DOWN)\n    x4 = connect(ORIGIN, ZERO_BY_TWO)\n    x5 = combine(x3, x4)\n    x6 = height(I)\n    x7 = equality(x6, TWO)\n    x8 = height(I)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x5, x9)\n    x11 = lbind(apply, last)\n    x12 = compose(x11, first)\n    x13 = chain(positive, positive, x12)\n    x14 = lbind(interval, ZERO)\n    x15 = rbind(x14, ONE)\n    x16 = rbind(sfilter, x13)\n    x17 = compose(x15, last)\n    x18 = fork(pair, x17, x8)\n    x19 = chain(x13, x16, x18)\n    x20 = rbind(branch, identity)\n    x21 = rbind(x20, x19)\n    x22 = chain(size, dedupe, x21)\n    x23 = lbind(equality, ONE)\n    x24 = chain(x22, x23, x19)\n    x25 = compose(initset, x24)\n    x26 = fork(rapply, x25, x22)\n    x27 = compose(first, x26)\n    x28 = extract(x10, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(x30)\n    x32 = palette(x31)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(404, x33)\n    x35 = ofcolor(x31, ONE)\n    x36 =    6000dederence(x35)\n    x37 = product(x36, x36)\n    x38 = fork(equality, identity, vmirror)\n    x39 = apply(x38, x37)\n    x40 = insert"], [1.1, "def solve_03a7b060(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_7df75ef6(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_43342523(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = rbind(compose, x30)\n    x37 = lbind(compose, x30)\n    x38 = lbind(lbind, subtract)\n    x39 = compose(x37, x38)\n    x40 = lbind(compose, x33)\n    x41 = compose(x39, x40)\n    x42 = fork(sfilter, x35"], [1.1, "def solve_32b51cdb(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, last)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, first)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, x10)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, x12)\n    x15 = rbind(shift, ZERO_BY_TWO)\n    x16 = compose(x15, x14)\n    x17 = rbind(shift,12chain)\n    x18 = compose(x17, first)\n    x19 = lbind(recolor, ZERO)\n    x20 = compose(x19, ulcorner)\n    x21 = fork(combine, x18, x20)\n    x22 = chain(x5, first, x21)\n    x23 = fork(paint, identity, x22)\n    x24 = chain(x5, first, x18)\n    x25 = fork(multiply, identity, x24)\n    x26 = chain(x5, last, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = fork(add, x23, x27)\n    x29 = fork(add, x28, x28)\n    x30 = compose(last, x29)\n    x31 = rbind(argmin, x30)\n    x32 = lbind( Recreurrences, x9)\n    x33 = compose(first, x32)\n    x34 = fork(add, x33, x29)\n    x35 = compose(x31, x34)\n    x36 = fork(65935, first, x35)"], [1.1, "def solve_10bcf21a(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_f96999e7(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_afdda1c5(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_67d7471b(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 =Rbind(colorcount, x10)\n    x12 = normalize(I)\n    x13 =91(x11)\n    x14 = color(x12)\n    x15 = remove(x3, x8)\n    x16 = apply(first, x15)\n    x17 = last(x15)\n    x18 = objects(x6, T, T, T)\n    x19 = colorfilter(x18, x14)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = interval(ZERO, x21, ONE)\n    x23 = asobject(x22)\n    x24 = rbind(first, x10)\n    x25 = apply(x24, x23)\n    x26 = astuple(x21, x25)\n    x27 = x26(x23)\n    x28 = x26(x24)\n    x29 = x28(x27)\n    x30 = x28(x24)\n    x31 = x29(x canvas)\n    x32 = fill(x31, x11, x27)\n    x33 = fill(x32, x10, x27)\n    x34 = fill(x33, x14, x20)\n    x35 = fill(x34, x13, x29)\n    x36 = ofcolor(x35, x10)\n    x37 = rbind(contained, x36)\n    x38 = compose(x37, ulcorner)\n    x39 = sfilter(x43, x38)\n    x40 = shape(x39)\n    x41 = subtract(x40, DOWN)\n    x42 = canvas(x"], [1.1, "def solve_c9621d7e(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_421f7fa5(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_1cc3a4ac(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = chain(rot90, x24, x27)\n    x29 = power(x28, FOUR)\n    x30 = compose(first, x29)\n    x31 = multiply(TEN, THREE)\n    x32 = power(x30, x31)\n    x33 = fork(astuple, x29, x32)\n    x34 = size(x467)\n    x35 = power(x33, x34)\n    x36 = astuple(x35, x27)\n    x37 = lbind(canvas, x35)\n    x38 = lbind(prapply, x37)\n    x39"], [1.1, "def solve_4c68eff4(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_d4df188a(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = rbind(ofcolor, ZERO)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = remove(ORIGIN, x1)\n    x5 = lbind(argmin, x4)\n    x6 = lbind(lbind, manhattan)\n    x7 = compose(x5, x6)\n    x8 = compose(x3, x7)\n    x9 = lowermost(x7)\n    x10 = rightmost(x7)\n    x11 = matcher(x8, x9)\n    x12 = leftmost(x7)\n    x13 = matcher(x8, x12)\n    x14 = uppermost(x7)\n    x15 =rightmost(x7)\n    x16 = matcher(x14, x15)\n    x17 = uppermost(x7)\n    x18 = matcher(x17, x16)\n    x19 = rightmost(x7)\n    x20 = matcher(x19, x18)\n    x21 = leftmost(x7)\n    x22 = matcher(x21, x15)\n    x23 = leftmost(x7)\n    x24 = matcher(x23, x12)\n    x25 = rightmost(x7)\n    x26 = matcher(x25, x15)\n    x27 = fork(add, x26, x7)\n    x28 = fork(add, x27, x14)\n    x29 = fork(add, x28, x20)\n    x30 = fork(add, x29, x21)\n    x31 = palette(I)\n    x32 = lbind(sfilter, x31)\n    x33 = lbind(matcher, identity)\n    x34 = compose(x33, x30)\n    x35 = chain(size, x32, x34)\n    x36 = ofcolor(I, ZERO)\n    x37 = palette(I)\n    x38 = repeat(x16, x38)\n    x39 =\n     leftmost(x39)\n    x40 = trim(I)\n    "], [1.1, "def solve_3b0afb7f(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_28e252af(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = rbind(order, leftmost)\n    x4 = chain(x3, toindices, x2)\n    x5 = lbind(contained, x1)\n    x6 = compose(x5, x4)\n    x7 = fork(223(x6, fork, identity)\n    x8 = extract(x1, x7)\n    x9 = x5(x8)\n    x10 = branch(x9, identity, dmirror)\n    x11 = x10(x1)\n    x12 = replace(x11, EIGHT, x9)\n    x13 = x10(x2)\n    x14 = branch(x13, identity, vmirror)\n    x15 = x14(x13)\n    x16 = trim(x15)\n    x17 = mostcolor(x16)\n    x18 = repeat(x16, ONE)\n    x19 = mapply(d43, x18)\n    x20 = x14(x19)\n    x21 = replace(x20, EIGHT, x17)\n    x22 = x10(x21)\n    x23 = replace(x22, righthalf, x17)\n    x24 = replace(x23,nah to, x17)\n    x25 = dmirror(x24)\n    x26 = width(x22)\n    x27 = add(x26, DOWN)\n    x28 = dmirror(x25)\n    x29 = add(x28, x26)\n    x30 = invert(x29)\n    x31 = width(x22)\n    x32 = increment(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = asobject(x22)\n    x35 = ZERO(x34)\n    x36 = ofcolor(x10, x17)\n    x37 = shift(x36, last)\n    x38 = paint(x12, x37)\n    x39 = double(x30)\n    x40 = downscale(x38, x39)\n    x41 = interval"], [1.1, "def solve_15884ee1(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, ONE)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)"], [1.1, "def solve_fb219415(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = lbind(colorfilter, x1)\n    x5 = compose(size, x4)\n    x6 = matcher(x5, TWO)\n    x7 = asindices(I)\n    x8 = box(x7)\n    x9 = rbind(difference, x8)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(size, x9, x10)\n    x12 = matcher(x11, ZERO)\n    x13 = rbind(greater, ONE)\n    x14 = lbind(apply, size)\n    x15 = lbind(colorfilter, x1)\n    x16 = compose(x14, x15)\n    x17 = chain(x13, minimum, x16)\n    x18 = fork(both, x12, x17)\n    x19 = fork(both, x6, x18)\n    x20 = extract(x3, x19)\n    x21 = other(x3, x20)\n    x22 = ofcolor(I, x21)\n    x23 = colorfilter(x1, x20)\n    x24 = rbind(vmatching, x22)\n    x25 = rbind(hmatching, x22)\n    x26 = fork(either, x24, x25)\n    x27 = extract(x23, x26)\n    x28 = other(x23, x27)\n    x29 = rbind(gravitate, x27)\n    x30 = compose(x29, initset)\n    x31 = fork(add, identity, x30)\n    x32 = fork(connect, identity, x31)\n    x33 = mapply(x32, x22)\n    x34 = fill(I, x21, x33)\n    x35 = fill(x34, FOUR, x22)\n    x36 = ofcolor(I, x20)\n    x37 = apply(first, x36)\n    x38 = size(x37)\n    x39 = apply"], [1.1, "def solve_a2d4c73b(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(identity, dmirror)\n    x5 = astuple(cmirror, hmirror)\n    x6 = combine(x4, x5)\n    x7 = rbind(rapply, I)\n    x8 = compose(first, x7)\n    x9 = chain(x3, x8, initset)\n    x10 = extract(x6, x9)\n    x11 = x10(I)\n    x12 = mostcolor(I)\n    x13 = palette(I)\n    x14 = remove(x12, x13)\n    x15 = other(x14, TWO)\n    x16 = ofcolor(x11, x15)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, identity, vmirror)\n    x20 = x19(x11)\n    x21 = ofcolor(x20, x15)\n    x22 = ofcolor(x20, TWO)\n    x23 = apply(last, x22)\n    x24 = insert(ZERO, x23)\n    x25 = width(x20)\n    x26 = insert(x25, x24)\n    x27 = order(x26, identity)\n    x28 = last(x27)\n    x29 = remove(x28, x27)\n    x30 = first(x27)\n    x31 = remove(x30, x27)\n    x32 = pair(x29, x31)\n    x33 = size(x29)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = pair(x34, x32)\n    x36 = lbind(fork, connect)\n    x37 = compose(first, last)\n    x38 = chain(decrement, last, last)\n    x39 = lbind(lbind, add)\n    x40 = compose(x39, first)\n    x41 = lbind("], [1.1, "def solve_263f7412(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = rapply(x30, x2)\n    x32 = first(x31)\n    x33 = last(x31)\n    x34 =    x32(I)\n    x35 = dmirror(x34)\n    x36 = dedupe(x35)\n    x37 = chain"], [1.1, "def solve_ffe9c7f9(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, size)\n    x3 =323(I)\n    x4 = sfilter(x3, x2)\n    x5 = fork(apply, vfrontier, hfrontier)\n    x6 = sfilter(x4, x2)\n    x7 = fork(intersection, x5, x6)\n    x8 = chain(size, x7, x8)\n    x9 = matcher(x8, ZERO)\n    x10 = matcher(TWO, ONE)\n    x11 = sfilter(x4, x9)\n    x12 = sfilter(x4, x10)\n    x13 = merge(x11)\n    x14 = fill(I, TWO, x13)\n    x15 = merge(x12)\n    x16 = width(x15)\n    x17 = ulcorner(x15)\n    x18 =27(x16)\n    x19 = subtract(x17, x18)\n    x20 = increment(x19)\n    x21 = width(x20)\n    x22 = subtract(x17, x21)\n    x23 = RIGHT(x20, x22)\n    x24 = sfilter(x4, x23)\n    x25 = chain(first, last, first)\n    x26 = totuple(x24)\n    x27 = apply(x25, x26)\n    x28 = combine(x28, x27)\n    x29 = lbind(colorcount, x14)\n    x30 = argmax(x29, x28)\n    x31 = remove(x30, x30)\n    x32 = first(x31)\n    x33 = ofcolor(x32, x32)\n    x34 = shift(x33, x323)\n    x35 = combine(x28, x34)\n    x36 = recolor(x32, x35)\n    x37 = shift(x33, x327)\n    x38 = occurrences(x38, x37)\n    x39 = mapply(toindices, x38)\n    x40 = lbind(mapply, x5)\n"], [1.1, "def solve_19ce1e47(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = compose(leftmost, first)\n    x13 = compose(leftmost, last)\n    x14 = fork(equality, x12, x13)\n    x15 = compose(uppermost, first)\n    x16 = compose(uppermost, last)\n    x17 = fork(equality, x15, x16)\n    x18 = fork(either, x14, x17)\n    x19 = sfilter(x11, x18)\n    x20 = compose(color, first)\n    x21 = compose(center, first)\n    x22 = compose(center, last)\n    x23 = fork(connect, x21, x22)\n    x24 = fork(recolor, x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = matcher(last, ZERO)\n    x28 = decrement(x26)\n    x29 = matcher(last, x28)\n    x30 = fork(either, x27, x29)\n    x31 = matcher(first, ZERO)\n    x32 = decrement(x25)\n    x33 = matcher(first, x32)\n    x34 = fork(either, x31, x33)\n    x35 = toindices(x5)\n    x36 = sfilter(x35, x30)\n    x37 = equality(x35, x36)\n    x38 = mapply(x24, x19)\n    x39 = paint(I, x38)\n    x40 = branch(x37, x30, x34)\n    "], [1.1, "def solve_3da22d9e(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = colorfilter(x2, x1)\n    x4 = rbind(bordering, I)\n    x5 = compose(flip, x4)\n    x6 = mfilter(x3, x5)\n    x7 = outbox(x6)\n    x8 = subgrid(x7, I)\n    x9 = trim(x8)\n    x10 = palette(x9)\n    x11 = matcher(identity, x1)\n    x12 = argmin(x10, x11)\n    x13 = trim(x8)\n    x14 = ofcolor(x13, x12)\n    x15 = shift(x14, UNITY)\n    x16 = matcher(first, x12)\n    x17 = rbind(sfilter, x16)\n    x18 = compose(flip, x17)\n    x19 = rbind(sfilter, x18)\n    x20 = chain(normalize, x17, x19)\n    x21 = mostcolor(x10)\n    x22 = ofcolor(x8, x21)\n    x23 = combine(x15, x22)\n    x24 = fill(x8, x12, x23)\n    x25 = difference(x19, x22)\n    x26 = ofcolor(x24, x25)\n    x27 = asindices(x24)\n    x28 = ofcolor(x24, x12)\n    x29 = leftmost(x28)\n    x30 = invert(x29)\n    x31 = shift(x27, x30)\n    x32 = lbind(shift, x28)\n    x33 = apply(x32, x31)\n    x34 = mapply(x24, x33)\n    x35 = fill(x24, x12, x34)\n    x36 = lbind(shift, x29)\n    x37 = mapply(x36, x31)\n    x38 = shift(x37, x32)\n    x39 = combine(x35, x38)\n    O = fill"], [1.1, "def solve_52642045(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_27032fba(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(add, x28, x33)\n    x34 = argmax(x1, x33)\n    x35 = x30(x34)\n    x36 = x30(x36)\n    "], [1.1, "def solve_627a25f5(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_7e4a9a9c(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 =42568b91\n    70446868723\n    2872536926\n    3797228669\n    2973625214\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 =42568b91000\n    70886868723\n    2872536926\n    3797228669\n    2973625214\n    0658658066\n    0281869366\n    09600060591\n    1763502461\n    \"\"\"\n    x1 = canvas(x3, THREE_BY_THREE)\n    x2 = toobject(x1, I)\n    x3 = asobject(x2)\n    x4 = vmirror(x3)\n    x5 = hline(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = asobject(x7)\n    x9 = matcher(first, x3)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = sfilter(x8, x9)\n    x13 = height(x12)\n    x14 = width(x12)\n    x15 = divide(x13, x14)\n    x16 = astuple(x15, x13)\n    x17 = mostcolor(I)\n    x18 = canvas(x17, x16)\n    x19 = multiply(x18, x509)\n    x20 = canvas(x17, x19)\n    x21 = asobject(x20)\n    x22 = frontiers(x21)\n    x23 = merge(x22)\n    x24 = paint(x18, x23)\n    x25 = objects(x24, F, F, T)\n    x26 = first(x25)\n    x27 = mostcolor(x26)"], [1.1, "def solve_d7342afd(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(identity, dmirror)\n    x5 = astuple(cmirror, hmirror)\n    x6 = combine(x4, x5)\n    x7 = rbind(rapply, I)\n    x8 = compose(first, x7)\n    x9 = chain(x3, x8, initset)\n    x10 = extract(x6, x9)\n    x11 = x10(I)\n    x12 = mostcolor(I)\n    x13 = palette(I)\n    x14 = remove(x12, x13)\n    x15 = other(x14, FIVE)\n    x16 = ofcolor(x11, x15)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, identity, vmirror)\n    x20 = x19(x11)\n    x21 = ofcolor(x20, x15)\n    x22 = ofcolor(x20, FIVE)\n    x23 = intersection(x21, x22)\n    x24 = fill(x20, TWO, x23)\n    x25 = lbind(contained, x15)\n    x26 = compose(first, last)\n    x27 = sfilter(x22, x26)\n    x28 = difference(x22, x27)\n    x29 = fill(x24, TWO, x288)\n    x30 = objects(x29, T, F, T)\n    x31 = colorfilter(x30, TWO)\n    x32 = difference(x30, x31)\n    x33 = first(x32)\n    x34 = power(outbox, TWO)\n    x35 = compose(first, last)\n    x36 = fork(equality, identity, x35)\n    x37 = compose(last, first)\n    x38 = fork(equality, identity, x37)\n    x39 = sfilter(x33, x38)\n    x40"], [1.1, "def solve_e252e7c4(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_a0293036(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = add(UNITY, UNITY)\n    x3 =insert(UNITY, x2)\n    x4 = merge(x3)\n    x5 = dmirror(x4)\n    x6 = invert(NEG_TWO)\n    x7 = shift(x5, x6)\n    x8 = astuple(NEG_TWO, ONE)\n    x9 = hmirror(x8)\n    x10 = vmirror(x9)\n    x11 = insert(x10, x8)\n    x12 = invert(x11)\n    x13 = shift(x13, x12)\n    x14 = combine(x7, x13)\n    x15 = I(x14)\n    x16 = combine(x7, x13)\n    x17 = I(x16)\n    x18 = palette(x15)\n    x19 = lbind(colorcount, x15)\n    x20 = compose(x19, color)\n    x21 = argmin(x18, x20)\n    x22 = rbind(colorcount, x21)\n    x23 = apply(x22, x16)\n    x24 = maximum(x23)\n    x25 = increment(x24)\n    x26 = interval(ONE, x25, ONE)\n    x27 = apply(x26, x24)\n    x28 = astuple(x24, x27)\n    x29 = lbind(canvas, x1)\n    x30 = lbind(occurrences, x5)\n    x31 = rbind(rapply, x22)\n    x32 = compose(initset, x31)\n    x33 = chain(first, x31, x32)\n    x34 = rbind(rapply, x22)\n    x35 = compose(initset, x35)\n    x36 = chain(first, x34, x35)\n    x37 = matcher(x33, x21)\n    x38 = fork(both, x37, x25)\n    x39 = compose(flip, x38)\n    x40 = extract(x27"], [1.1, "def solve_5269d9dc(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_3eef444f(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = chain(x4, x5, color)\n    x7 = compose(maximum, shape)\n    x8 = fork(add, x7, x6)\n    x9 = compose(invert, x8)\n    x10 = order(x2, x9)\n    x11 = rbind(add, DOWN)\n    x12 = compose(x11, ulcorner)\n    x13 = fork(contained, x12, toindices)\n    x14 = rbind(add, RIGHT)\n    x15 = compose(x14, ulcorner)\n    x16 = fork(contained, x15, toindices)\n    x17 = fork(add, x13, x16)\n    x18 = rbind(argmax, x17)\n    x19 = compose(initset, identity)\n    x20 = fork(insert, vmirror, x19)\n    x21 = fork(insert, cmirror, x20)\n    x22 = fork(insert, hmirror, x21)\n    x23 = compose(x18, x22)\n    x24 = apply(x23, x10)\n    x25 = size(x2)\n    x26 = apply(size, x2)\n    x27 = contained(ONE, x26)\n    x28 = increment(x25)\n    x29 = branch(x27, x25, x28)\n    x30 = double(x29)\n    x31 = decrement(x30)\n    x32 = apply(normalize, x24)\n    x33 = interval(ZERO, x29, ONE)\n    x34 = pair(x33, x33)\n    x35 = mpapply(shift, x32, x34)\n    x36 = astuple(x31, x31)\n    x37 = canvas(x1, x36)\n    x38 = paint(x37, x35)\n    x39 ="], [1.1, "def solve_6dc31a12(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = size(x1)\n    x5 = positive(x4)\n    x6 = branch(x5, hsplit, vsplit)\n    x7 = x6(I, TWO)\n    x8 = first(x7)\n    x9 = last(x7)\n    x10 = palette(x8)\n    x11 = matcher(identity, x9)\n    x12 = palette(x8)\n    x13 = sfilter(x10, x11)\n    x14 = size(x13)\n    x15 = positive(x14)\n    x16 = branch(x15, identity, dmirror)\n    x17 = x16(x6)\n    x18 = first(x17)\n    x19 = flip(x15)\n    x20 = hmirror(x18)\n    x21 = palette(x20)\n    x22 = lbind(colorcount, x20)\n    x23 = compose(x22, argmin)\n    x24 = rbind(colorcount, x3)\n    x25 = chain(x24, positive, x23)\n    x26 = lbind(ofcolor, x18)\n    x27 =88(x25, x20)\n    x28 = ZERO(x27)\n    x29 = lbind(subtract, x28)\n    x30 = compose(x29, last)\n    x31 = fork(argmin, x30, x21)\n    x32 = x31(x6)\n    x33 = x30(x32)\n    x34 = ofcolor(x33, x3)\n    x35 = gravitate(x34, x32)\n    x36 = x31(x35)\n    x37 = x30(x36)\n    x38 = crop(x37, x4, xitset)\n    x39 = lbind(argmin, x38)\n    x40 = lbind(rbind, manhattan)\n    x41 = compose(x39, x40)\n    x42 = fork(remove, x41"], [1.1, "def solve_839a7b8a(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18, x"], [1.1, "def solve_0a5cd984(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_b920fc30(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind"], [1.1, "def solve_685f3cdc(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = leastcolor(I)\n    x9 = rbind(ofcolor, x8)\n    x10 = rbind(rapply, I)\n    x11 = chain(first, x10, initset)\n    x12 = chain(hline, x9, x11)\n    x13 = rbind(ofcolor, x8)\n    x14 = rbind(rapply, I)\n    x15 = chain(first, x14, initset)\n    x16 = chain(leftmost, x13, x15)\n    x17 = matcher(x16, ZERO)\n    x18 = fork(both, x12, x17)\n    x19 = compose(x18, first)\n    x20 = extract(x7, x19)\n    x21 = first(x20)\n    x22 = last(x20)\n    x23 = x21(I)\n    x24 = ofcolor(x23, x8)\n    x25 = argmax(x24, last)\n    x26 = add(x25, UP_RIGHT)\n    x27 = shoot(x26, UP_RIGHT)\n    x28 = add(x25, DOWN_LEFT)\n    x29 = shoot(x28, DOWN_LEFT)\n    x30 = rbind(shoot, LEFT)\n    x31 = mapply(x30, x27)\n    x32 = rbind(shoot, LEFT)\n    x33 = mapply(x32, x29)\n    x34 = width(x23)\n    x35 = invert(x34)\n    x36 = tojvec(x35)\n    x37 = shift(x31, x36)\n    x38 = combine(x31, x37)\n    x39 ="], [1.1, "def solve_d65a73a7(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = height(I)\n    x9 = astuple(x8, ONE)\n    x10 = canvas(THREE, x9)\n    x11 = hconcat(x10, I)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = identity(DOWN)\n    x17 = connect(ORIGIN, x15)\n    x18 = fill(x11, THREE, x17)\n    x19 = identity(x13)\n    x20 = identity(x12)\n    x21 = identity(x12)\n    x22 = identity(F)\n    x23 = identity(ZERO)\n    x24 = compose(first, first)\n    x25 = chain(first, last, x24)\n    x26 = compose(first, first)\n    x27 = chain(last, last, x26)\n    x28 = chain(first, first, first)\n    x29 = chain(first, last, last)\n    x30 = chain(first, first, last)\n    x31 = chain(last, first, last)\n    x32 = compose(decrement, x25)\n    x33 = compose(decrement, x27)\n    x34 = fork(astuple, x32, x33)\n    x35 = compose(decrement, x27)\n    x36 = fork(multiply, x30, x35)\n    x37 = fork(add, x29, x36)\n    x38 = compose(decrement, x28)\n    x39 = fork(multiply, x30, x38)\n    x40 = fork(add, x29, x39)\n    x41 ="], [1.1, "def solve_bd288950(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = width(I)\n    x2 = decrement(x1)\n    x3 = tojvec(x2)\n    x4 = connect(ORIGIN, x3)\n    x5 = height(I)\n    x6 = decrement(x5)\n    x7 = toivec(x6)\n    x8 = connect(ORIGIN, x7)\n    x9 = width(I)\n    x10 = decrement(x9)\n    x11 = tojvec(x10)\n    x12 = shape(I)\n    x13 = decrement(x12)\n    x14 = connect(x11, x13)\n    x15 = height(I)\n    x16 = decrement(x15)\n    x17 = toivec(x16)\n    x18 = shape(I)\n    x19 = decrement(x18)\n    x20 = connect(x17, x19)\n    x21 = asindices(I)\n    x22 = box(x21)\n    x23 = toobject(x22, I)\n    x24 = mostcolor(x23)\n    x25 = matcher(color, x24)\n    x26 = compose(flip, x25)\n    x27 = rbind(sfilter, x26)\n    x28 = rbind(sizefilter, ONE)\n    x29 = rbind(objects, F)\n    x30 = rbind(x29, F)\n    x31 = rbind(x30, T)\n    x32 = rbind(subgrid, I)\n    x33 = chain(x27, x31, x32)\n    x34 = chain(size, x28, x33)\n    x35 = astuple(x4, x8)\n    x36 = astuple(x14, x20)\n    x37 = combine(x35, x36)\n    x38 = argmax(x37, x34)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, initset)\n    x41 = ofcolor(I, x24)\n    x42 = difference(x38, x41)\n"], [1.1, "def solve_2c656666(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, corners)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = fgpartition(I)\n    x6 = merge(x5)\n    x7 = backdrop(x4)\n    x8 = toobject(x7, I)\n    x9 = difference(x6, x8)\n    x10 = mostcolor(I)\n    x11 = inbox(x4)\n    x12 = backdrop(x11)\n    x13 = toobject(x12, I)\n    x14 = matcher(first, x10)\n    x15 = compose(flip, x14)\n    x16 = sfilter(x13, x15)\n    x17 = subgrid(x9, I)\n    x18 = palette(x16)\n    x19 = order(x18, identity)\n    x20 = lbind(colorcount, x16)\n    x21 = apply(x20, x19)\n    x22 = lbind(colorcount, x9)\n    x23 = apply(x22, x19)\n    x24 = pair(x21, x23)\n    x25 = fork(divide, first, last)\n    x26 = apply(x25, x24)\n    x27 = mostcommon(x26)\n    x28 = lbind(colorcount, x16)\n    x29 = lbind(colorcount, x9)\n    x30 = fork(divide, x28, x29)\n    x31 = matcher(x30, x27)\n    x32 = palette(x9)\n    x33 = sfilter(x32, x31)\n    x34 = rbind(contained, x33)\n    x35 = compose(x34, first)\n    x36 = sfilter(x16, x35)\n    x37 = sfilter(x9, x35)\n    x38 = height(x36)\n    x39 = height(x37)\n    x40 = divide(x38, x39)\n    x41 = width(x36)\n    x42"], [1.1, "def solve_9ea6762b(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_cf8d240f(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_4690cbcb(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 = trim(I)\n    x2 = decrement(x1)\n    x3 = tojvec(x2)\n    x4 = connect(ORIGIN, x3)\n    x5 = height(I)\n    x6 = decrement(x5)\n    x7 = toivec(x6)\n    x8 = connect(ORIGIN, x7)\n    x9 = width(I)\n    x10 = decrement(x9)\n    x11 = tojvec(x10)\n    x12 =677(x8)\n    x13 = shape(I)\n    x14 = decrement(x13)\n    x15 = connect(x12, x14)\n    x16 = rbind(multiply, TWO)\n    x17 = apply(x16, x10)\n    x18 = rbind(multiply, FOUR)\n    x19 = apply(x18, x15)\n    x20 = asindices(x1)\n    x21 = ofcolor(I, ZERO)\n    x22 = difference(x20, x21)\n    x23 = rbind(multiply, THREE)\n    x24 = apply(x23, x22)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = astuple(x26, x18)\n    x28 = rbind(multiply, x27)\n    x29 = apply(x28, x26)\n    x30 = rbind(hmatching, x27)\n    x31 = rbind(vmatching, x27)\n    x32 = fork(either, x30, x31)\n    x33 = compose(x32, initset)\n    x34 = ofcolor(I, FIVE)\n    x35 = sfilter(x34, x33)\n    x36 = height(I)\n    x37 = equality(x36, FOUR)\n    x38 = insert(x33, x37)\n    x39 = THREE(x38, x34)\n    x40 = contained(x39, x35)\n    x41 = branch(x40, height, width)\n    x42"], [1.1, "def solve_dd6157f5(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(x32, x38, first)\n    x40 = matcher(x39, x20)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_6598a996(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = fork(connect, ulcorner, lrcorner)\n    x2 = x1(I)\n    x3 = shape(x2)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = subtract(x4, x5)\n    x7 = mostcolor(I)\n    x8 = shape(x2)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x5, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, insert)\n    x16 = lbind(power, inbox)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x4)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x22)\n    x24 = uppermost(x12)\n    x25 = lbind(chain, x24)\n    x26 = lbind(rbind, add)\n    x27 = compose(x26, x13)\n    x28 = lbind(compose, x24)\n    x29 = fork(rapply, x27, x28)\n    x30 = compose(x15, x29)\n    x31 = fork(contained, x23, x30)\n    x32 = compose(invert, x251)\n    x33 = fork(add, x31, x32)\n    x34 = fork(add, x33, x309)\n    x35 = fork(halve, x34, x29)\n    x36 = compose(85556, x27)\n    x37 = fork(86, lrcorner, x36)\n    x38 = compose(toivec, x37"], [1.1, "def solve_31566156(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 =795(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = lbind(chain, positive)\n    x6 = lbind(x5, size)\n    x7 = rbind(compose, backdrop)\n    x8 = lbind(lbind, intersection)\n    x9 = chain(x6, x7, x8)\n    x10 = chain(x9, backdrop, outbox)\n    x11 = lbind(sfilter, x4)\n    x12 = compose(x11, x10)\n    x13 = chain(positive, size, x12)\n    x14 = sfilter(x4, x13)\n    x15 = compose(merge, x12)\n    x16 = apply(x15, x14)\n    x17 = rbind(subgrid, I)\n    x18 = apply(x17, x16)\n    x19 = merge(x16)\n    x20 = palette(x19)\n    x21 = lbind(colorcount, x19)\n    x22 = argmin(x20, x21)\n    x23 = rbind(colorcount, x22)\n    O = argmax(x18, x23)\n    return O"], [1.1, "def solve_7a7784dc(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = replace(I, x1, ZERO)\n    x3 = apply(normalize, x2)\n    x4 = asindices(x3)\n    x5 = NEG_UNITY(x4)\n    x6 = dmirror(x5)\n    x7 = invert(x6)\n    x8 =777652(x3, x7)\n    x9 = shift(x8, x5)\n    O = paint(x2, x9)\n    return O"], [1.1, "def solve_cd53d13c(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = asobject(I)\n    x2 = lbind(shift, x1)\n    x3 = compose(x2, llcorner)\n    x4 = rbind(shift, urcorner)\n    x5 = compose(x4, urcorner)\n    x6 = chain(x3, x5, x4)\n    x7 =11(x6)\n    x8 = height(I)\n    x9 = width(I)\n    x10 = compose(last, last)\n    x11 = subtract(x10, x9)\n    x12 = decrement(x11)\n    x13 = multiply(x12, TWO)\n    x14 = add(x13, x11)\n    x15 = height(I)\n    x16 = subtract(x15, x12)\n    x17 = decrement(x16)\n    x18 = apply(x12, x14)\n    x19 = astuple(x17, x18)\n    x20 = canvas(ZERO, x19)\n    x21 = asobject(x20)\n    x22 = occurrences(I, x21)\n    x23 = mapply(x2, x22)\n    O = fill(x20, ONE, x23)\n    return O"], [1.1, "def solve_2b65b451(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = size(x5)\n    x7 = positive(x6)\n    x8 = bottomhalf(x5)\n    x9 = lefthalf(x8)\n    x10 = branch(x7, x9, x6)\n    x11 = branch(x7,)*9, x10)\n    x12 = delta(x11)\n    x13 = decrement(x12)\n    x14 = uppermost(x11)\n    x15 = remove(x14, x11)\n    x16 = lbind(position, x11)\n    x17 = lbind(shoot, x13)\n    x18 = compose(x16, x17)\n    x19 = fork(intersection, x18, identity)\n    x20 = lowermost(x5)\n    x21 = rbind(multiply, x20)\n    x22 = chain(size, x21, toindices)\n    x23 = argmax(x15, x22)\n    x24 = shape(I)\n    x25 = canvas(x24, x24)\n    x26 = lbind(shift, x11)\n    x27 = mapply(x26, x23)\n    O = paint(x25, x27)\n    return O"], [1.1, "def solve_8f1e439b(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 =7766(I)\n    x4 =66(73)\n    x5 = fork(both, x3, x4)\n    x6 = extract(x2, x5)\n    x7 = other(x6, x1)\n    x8 =171(x7)\n    x9 = multiply(TEN, TEN)\n    x10 = power(outbox, x9)\n    x11 = first(x8)\n    x12 = invert(x11)\n    x13 = shift(x11, x12)\n    x14 = shift(x13, x11)\n    x15 = toindices(x14)\n    x16 = lbind(shift, x15)\n    x17 = rbind(difference, x15)\n    x18 = chain(size, x16, x17)\n    x19 = argmax(x15, x18)\n    x20 = double(x31)\n    x21 = apply(x16, x20)\n    x22 = interval(x21, ONE, ONE)\n    x23 = difference(x21, x22)\n    x24 = apply(x16, x23)\n    x25 = astuple(x24, x15)\n    x26 = canvas(x1, x25)\n    x27 = asindices(x26)\n    x28 = apply(x16, x27)\n    x29 = lbind(argmin, x28)\n    x30 = lbind(shift, x13)\n    x31 = mapply(x30, x29)\n    O = fill(x26, x1, x31)\n    return O"], [1.1, "def solve_5dae2a90(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 =Example output:\n    4446633648\n    1334663362\n    4444463944\n    3344444393\n    4344444401\n    4334443444\n    6484463334\n    6644444446\n    0404486644\n    1154344466\n    \"\"\"\n    x1 = hsplit(I, TWO)\n    O = first(x1)\n    return O"], [1.1, "def solve_b8f7d131(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = extract(x2, x4)\n    x6 =0000(I, x5)\n    x7 = shape(I)\n    x8 = canvas(ZERO, x7)\n    x9 = colorfilter(x2, x1)\n    x10 =\n    maxcolor(I)\n    x11 = shape(I)\n    x12 = decrement(x11)\n    x13 = lbind(astuple, x12)\n    x14 = apply(x13, x9)\n    x15 = rbind(shoot, UNITY)\n    x16 = mapply(x15, x14)\n    x17 = fill(x8, x10, x16)\n    O = fill(x17, x1, x2)\n    return O"], [1.1, "def solve_5ebef8c6(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = matcher(color, ZERO)\n    x5 =423(x3)\n    x6 = sfilter(x3, x4)\n    x7 = difference(x3, x6)\n    x8 = merge(x7)\n    x9 = width(x8)\n    x10 = matcher(color, ZERO)\n    x11 =411(x10)\n    x12 = sfilter(x8, x11)\n    x13 = combine(x6, x12)\n    x14 = merge(x12)\n    x15 = fill(I, THREE, x14)\n    x16 = merge(x12)\n    x17 = fill(x15, ONE, x16)\n    O = replace(x17, ZERO, ONE)\n    return O"], [1.1, "def solve_f0ea7130(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = shape(I)\n    x2 = add(x1, DOWN)\n    x3 = crop(I, ORIGIN, x2)\n    x4 = decrement(x1)\n    x5 = tojvec(x4)\n    x6 = crop(I, x5, x2)\n    x7 = double(x3)\n    x8 = add(x7, TWO)\n    x9 = crop(I, x8, x2)\n    x10 = asobject(x9)\n    x11 =77101ecdecrement\n    x12 = argmin(x10, x11)\n    x13 = mostcolor(x12)\n    x14 = asindices(x12)\n    x15 = astuple(x13, x14)\n    x16 = ulcorner(x12)\n    x17 = rbind(shoot, x16)\n    x18 = mapply(x17, x15)\n    x19 = underfill(I, x13, x18)\n    x20 = objects(x19, T, F, T)\n    x21 = colorfilter(x20, x13)\n    x22 = rbind(bordering, I)\n    x23 = mfilter(x21, x22)\n    O = cover(x19, x23)\n    return O"], [1.1, "def solve_c9412091(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = astuple(FOUR, FOUR)\n    x2 = crop(I, ORIGIN, x1)\n    x3 = TWO_BY_TWO)\n    x4 = asobject(x2)\n    x5 = rbind(multiply, UNITY)\n    x6 = apply(x5, x4)\n    x7 = asobject(x6)\n    x8 = UNITY(x1)\n    x9 = NEG_UNITY)\n    x10 = shift(x7, x9)\n    x11 = paint(I, x10)\n    x12 = toindices(x7)\n    x13 = lbind(shift, x12)\n    x14 = mapply(x13, x6)\n    O = fill(x11, TWO, x14)\n    return O"], [1.1, "def solve_e4a63964(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 =36fcc3(I, ORIGIN)\n    x2 = decrement(x1)\n    x3 = papply(astuple, x2, x4)\n    x4 = lbind(shift, x3)\n    x5 = mapply(x4, x2)\n    O = paint(I, x5)\n    return O"], [1.1, "def solve_d5cc1f65(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = compose(x2, trim)\n    x4 = apply(x3, x1)\n    x5 = lbind(contained, x4)\n    x6 = compose(x5, flip)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(contained, x7)\n    x9 = compose(x8, vsplit)\n    x10 = sfilter(x7, x9)\n    x11 = merge(x10)\n    x12 = lbind(contained, x11)\n    x13 = compose(x12, vmirror)\n    x14 = sfilter(x7, x13)\n    x15 = compose(size, x7)\n    x16 = size(x14)\n    x17 = greater(x15, x16)\n    x18 = subgrid(x14, I)\n    x19 = trim(x18)\n    x20 = lefthalf(x19)\n    x21 = righthalf(x19)\n    x22 = vmirror(x21)\n    x23 = objects(x20, T, F, T)\n    x24 = merge(x23)\n    x25 =422(x24)\n    x26 = cellwise(x25, x20, x08)\n    x27 = order(x26, identity)\n    x28 = first(x27)\n    x29 = last(x27)\n    x30 = x28(x20)\n    x31 = flip(x30)\n    x32 = replace(x20, x24, x7)\n    x33 = replace(x32, x24, x9)\n    x34 = branch(x31, x33, x24)\n    O = x15(x34, x39)\n    return O"], [1.1, "def solve_a520631b(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = totuple(x2)\n    x4 = apply(color, x3)\n    x5 = mostcommon(x4)\n    x6 =467618(UNITY)\n    x7 = canvas(x5, UNITY)\n    O = paint(x7, x6)\n    return O"], [1.1, "def solve_d115a417(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 =96(I, identity)\n    x2 =44(x1, identity)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, lefthalf, tophalf)\n    x5 = x4(I)\n    x6 = bottomhalf(I)\n    x7 = index(x5, ORIGIN)\n    x8 = palette(x6)\n    x9 = palette(x7)\n    x10 = intersection(x8, x9)\n    x11 = remove(x7, x10)\n    x12 = palette(x6)\n    x13 = other(x12, x11)\n    x14 = palette(x6)\n    x15 = other(x14, x13)\n    x16 = intersection(x15, x13)\n    x17 = ofcolor(x5, x13)\n    x18 = ofcolor(x6, x13)\n    x19 = combine(x17, x18)\n    x20 = fill(x5, x13, x19)\n    O = x4(x20)\n    return O"], [1.1, "def solve_2de33c8d(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(UP, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = fork(combine, initset,000000\n    x9 = compose(x8, first)\n    x10 = compose(x8, last)\n    x11 = fork(difference, x9, x10)\n    x12 = compose(x11, toindices)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = matcher(first, x15)\n    x18 = compose(flip, x17)\n    x19 = sfilter(x15, x18)\n    x20 = dmirror(x19)\n    x21 = subtract(x16, x20)\n    x22 = branch(x21, hsplit, vsplit)\n    x23 = merge(x22)\n    x24 = sfilter(x22, x23)\n    x25 = dmirror(x24)\n    x26 = shape(x25)\n    x27 = add(x26, TWO_BY_ZERO)\n    x28 = canvas(ZERO, x27)\n    x29 = asobject(x28)\n    x30 = shift(x29, UNITY)\n    O = paint(x26, x30)\n    return O"], [1.1, "def solve_ce575692(I):\n    \"\"\"\n    Example input:\n    3920616189\n    5270936835\n    2265801986\n    5084156268\n    1755417945\n    6490561835\n    8298069836\n    1433310446\n    0419686900\n    4756887949\n    Example output:\n    6941787850\n    3876104429\n    0868156045\n    6336039114\n    6990840957\n    4606318539\n    3268527889\n    5573150553\n    2974216674\n    0665684966\n    \"\"\"\n    x1 =725312 ofsubtract(NINE, ZERO)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [1.1, "def solve_49a2feb2(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = sizefilter(x2, ONE)\n    x4 = apply(size, x3)\n    x5 = dedupe(x4)\n    x6 = objects(I, T, F, F)\n    x7 = merge(x6)\n    x8 = size(x7)\n    x9 = equality(x1, x8)\n    x10 = branch(x9, height, width)\n    x11 = x10(x7)\n    x12 = x10(x8)\n    x13 = subtract(x11, x12)\n    x14 = shift(x5, x13)\n    x15 = other(x1, x14)\n    x16 = x10(x10)\n    x17 = color(x15)\n    x18 = hmirror(I)\n    x19 = cover(I, x18)\n    x20 = objects(x19, T, F, T)\n    x21 = apply(toindices, x20)\n    x22 = fork(either, x21, box)\n    x23 = sfilter(x4, x22)\n    x24 = manhattan(x23, x35)\n    x25 = palette(x23)\n    x26 =recolor(x25, x24)\n    x27 = argmin(x26, x24)\n    x28 = other(x25, x27)\n    x29 = color(x28)\n    x30 = mmirror(x28)\n    x31 = recolor(x28, x30)\n    x32 = combine(x27, x31)\n    x33 = paint(x19, x32)\n    x34 = ofcolor(x33, x29)\n    x35 =441\n     gravitate(x34, x31)\n    x36 = shift(x34, x35)\n    x37 = shift(x36, x34)\n    x38 = combine(x34, x37)\n    x39 = paint(x33, x38)\n    O = x10(x39)\n    return O"], [1.1, "def solve_d11b4a3e(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = rbind(remove, TWO)\n    x2 = compose(x1, last)\n    x3 = rbind(multiply, THREE)\n    x4 = compose(x3, x2)\n    x5 = fork(equality, identity, x4)\n    x6 = compose(x5, first)\n    x7 = extract(x1, x6)\n    x8 = last(x7)\n    x9 = first(x8)\n    x10 = last(x7)\n    x11 = x2(x9)\n    x12 = x2(x10)\n    x13 =9999(first, x11)\n    x14 =9999(first, x12)\n    x15 = cover(I, x11)\n    x16 = fill(x15, ONE, x13)\n    x17 = fill(x16, TWO, x14)\n    O = x2(x17)\n    return O"], [1.1, "def solve_ab2533b2(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = toivec(x1)\n    x5 = crop(I, ORIGIN, x4)\n    x6 =2295587375 asobject(x5)\n    x7 = palette(I)\n    x8 = matcher(identity, x4)\n    x9 = argmin(x7, x8)\n    x10 = asindices(I)\n    x11 = ofobject(x10, I)\n    x12 = difference(x10, x11)\n    x13 = ofcolor(I, x9)\n    x14 = rbind(interval, ONE)\n    x15 = rbind(x14, FOUR)\n    x16 = rbind(sfilter, x15)\n    x17 = lbind(occurrences, I)\n    x18 = lbind(lbind, shift)\n    x19 = compose(x17, x18)\n    x20 = lbind(recolor, x9)\n    x21 = rbind(mapply, x19)\n    x22 = rbind(occurrences, x16)\n    x23 = compose(x22, x18)\n    x24 = fork(apply, x23, x19)\n    x25 = fork(combine, x12, x24)\n    x26 =apply(x25, x3)\n    x27 = ofcolor(I, x9)\n    x28 = mapply(toindices, x27)\n    x29 = fill(I, x9, x28)\n    x30 = mapply(x25, x3)\n    x31 = fill(x29, x10, x30)\n    O = replace(x31, x4, SIX)\n    return O"], [1.1, "def solve_a4a355a4(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 =33333(I)\n    x2 =4213175300\n    4213171351\n    4292302363\n    6932577355\n    7360476287\n    3277069433\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = ofcolor(I, ONE)\n    x3 = lowermost(x2)\n    x4 = lbind(subtract, x3)\n    x5 = chain(toivec, x4, lowermost)\n    x6 = fork(shift, identity, x5)\n    x7 = merge(x1)\n    x8 = cover(I, x7)\n    x9 = mapply(x6, x1)\n    O = paint(x8, x9)\n    return O"], [1.1, "def solve_8e3746e4(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 =637585(I)\n    x2 = mostcolor(I)\n    x3 = lefthalf(x1)\n    x4 = righthalf(x1)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(x3)\n    x8 = x6(x3)\n    x9 = shape(x3)\n    x10 = palette(x3)\n    x11 = palette(x3)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x13, x13)\n    x15 = ofcolor(x13, x6)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [1.1, "def solve_832f21a1(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = cover(I, x2)\n    x4 = apply(normalize, x1)\n    x5 = chain(size, dedupe, flip)\n    x6 = argmax(x4, x5)\n    x7 = repeat(x6, ONE)\n    x8 = merge(x7)\n    x9 = repeat(x6, ONE)\n    x10 = compose(increment, height)\n    x11 = chain(greater, maximum, x10)\n    x12 = compose(x11, asobject)\n    x13 =7777(x12)\n    x14 = upscale(x13, TWO)\n    x15 = shift(x14, TWO_BY_TWO)\n    x16 = paint(x3, x15)\n    x17 = toindices(x15)\n    x18 = lbind(contained,ZERO)\n    x19 = compose(x18, last)\n    x20 = sfilter(x17, x19)\n    x21 =64(x20)\n    x22 = shift(x21, UNITY)\n    O = paint(x16, x22)\n    return O"], [1.1, "def solve_ec52659b(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 =Example output:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9210880830\n    2048742800\n    3626664135\n    8001913937\n    \"\"\"\n    x2 = objects(I, T, F, T)\n    x3 = colorfilter(x2, ZERO)\n    x4 = difference(x2, x3)\n    x5 = merge(x4)\n    x6 = rbind(shoot, DOWN)\n    x7 = mapply(x6, x5)\n    x8 = fill(I, ONE, x7)\n    x9 = mapply(x6, x3)\n    O = fill(x8, TWO, x9)\n    return O"], [1.1, "def solve_054db099(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(ORIGIN, DOWN_LEFT)\n    x5 = rbind(multiply, x4)\n    x6 = apply(x5, x3)\n    x7 =89700cd78\n    x8 = rightmost(x7)\n    x9 = lbind(shift, x8)\n    x10 = mapply(x9, x6)\n    O = paint(I, x10)\n    return O"], [1.1, "def solve_c34ac857(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 =\u2026izet(TWO)\n    x4 = initset(TWO)\n    x5 = recolor(TWO, x3)\n    x6 = recolor(THREE, x2)\n    x7 = insert(x5, x6)\n    x8 = insert(x7, x5)\n    x9 = fill(I, TWO, x8)\n    O = fill(x9, UNITY, x7)\n    return O"], [1.1, "def solve_9fb1c023(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = lefthalf(x1)\n    x4 = righthalf(x1)\n    x5 = tophalf(x4)\n    x6 = righthalf(x4)\n    x7 = bottomhalf(x6)\n    x8 = index(x3, ORIGIN)\n    x9 = palette(x3)\n    x10 =6042(x9)\n    x11 = palette(x3)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = recolor(x13, x1)\n    x16 = recolor(x14, x11)\n    x17 = combine(x15, x16)\n    x18 = combine(x15, x16)\n    x19 = recolor(x17, x1)\n    x20 = occurrences(x4, x17)\n    x21 = outbox(x20)\n    x22 = ofcolor(x3, x13)\n    x23 = urcorner(x22)\n    x24 = ofcolor(x3, x14)\n    x25 = intersection(x23, x24)\n    x26 = first(x25)\n    x27 = shape(I)\n    x28 = canvas(x8, x27)\n    O = fill(x28, x13, x26)\n    return O"], [1.1, "def solve_0c490705(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, positive, branch)\n    x6 = branch(x4, mostcolor, x5)\n    x7 = canvas(x6, UNITY)\n    x8 = add(NEG_UNITY, NEG_UNITY)\n    x9 = shape(I)\n    x10 = maximum(x9)\n    x11 = lbind(multiply, x10)\n    x12 = chain(x11, maximum, initset)\n    x13 = compose(x12, x7)\n    x14 = lbind(intersection, x13)\n    x15 = compose(size, x14)\n    x16 = argmax(x6, x15)\n    x17 = objects(x6, T, F, T)\n    x18 = color(x16)\n    x19 = lbind(recolor, x18)\n    x20 = rbind(argmax, rightmost)\n    x21 = chain(x20, x19, x9)\n    x22 =lbind(apply, x21)\n    x23 = fork(toindices, x22, x17)\n    x24 = fork(mapply, x23, x19)\n    x25 = mostcolor(I)\n    x26 = ofcolor(I, x25)\n    x27 =9 asindices(I)\n    x28 = objects(x6, T, F, T)\n    x29 = rbind(argmax, x27)\n    x30 = fork(recolor, color, x29)\n    x31 = mapply(x30, x28)\n    x32 = paint(x7, x31)\n    x33 = mapply(x27, x34)\n    O = paint(x32, x33)\n    return O"], [1.1, "def solve_d010946c(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = rbind(ofcolor, ORIGIN)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = lefthalf(I)\n    x5 = righthalf(I)\n    x6 = leftmost(x1)\n    x7 =114(x6)\n    x8 = tojvec(x7)\n    x9 = add(x8, THREE)\n    x10 = shift(x4, x9)\n    x11 = fill(I, ZERO, x10)\n    x12 = merge(x11)\n    O = fill(x11, FOUR, x12)\n    return O"], [1.1, "def solve_fc36ca3c(I):\n    \"\"\"\n    Example input:\n    1892403054\n    9779487886\n    5305351123\n    5190338888\n    4254081702\n    0577941764\n    4471933429\n    2181204237\n    0591993847\n    1170479079\n    Example output:\n    5491725133\n    1757423272\n    0407999212\n    3797154697\n    4128465431\n    0363351501\n    5173891523\n    4309197432\n    4466070489\n    0245115143\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = occurrences(x1, x2)\n    x4 = leastcolor(x1)\n    x5 = palette(x1)\n    x6 = repeat(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = leastcolor(x1)\n    x9 = palette(x1)\n    x10 = remove(x8, x9)\n    x11 = remove(x8, x10)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = ofcolor(x13, x12)\n    x15 = astuple(x14, x13)\n    x16 = ulcorner(x12)\n    x17 = crop(x15, x16, x15)\n    x18 = asobject(x17)\n    x19 = hperiod(x18)\n    x20 = height(I)\n    x21 = astuple(x20, x13)\n    x22 = ulcorner(x5)\n    x23 = crop(x22, ORIGIN, x22)\n    x24 = hperiod(x23)\n    x25 = astuple(x24, x14)\n    x26 = increment(x25)\n    x27 = interval(ONE, x26, ONE)\n    x28 = product(x27, x27)\n    x29 = lbind(multiply, x ONE)\n    x30 = apply(x29, x28)\n    x31 = lbind(shift, x18)\n    x32 = mapply(x31, x30)\n    x33 = paint(x17, x32)\n    x34 = rot90(x33)\n    x35 =    020(I)\n    x36 =\n    0233358330(x35)\n    x37 = rot270(x36)\n    x38 = papply(shift, x32, x37)\n    x39 = apply(x21, x38)\n    O = paint(x33, x39)\n    return O"], [1.1, "def solve_be366381(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 =444449713834)\n    x2 =4771231458\n    x3 = shape(I)\n    x4 = decrement(x3)\n    x5 = index(I, x4)\n    x6 = equality(x5, FOUR)\n    x7 = branch(x6, UP, RIGHT)\n    x8 = canvas(x7, x4)\n    x9 = equality(x1, TWO)\n    x10 = branch(x9, RIGHT, DOWN)\n    x11 = branch(x10, LEFT, RIGHT)\n    x12 = greater(x11, TWO)\n    x13 = branch(x12,phalf, lefthalf)\n    x14 = branch(x12, numcolors,(x13)\n    x15 = branch(x12,33, FOUR)\n    x16 = x15(I)\n    x17 = mostcolor(x16)\n    x18 = shape(I)\n    x19 = canvas(x17, x18)\n    x20 = hconcat(x16, x19)\n    x21 = objects(x20, F, F, T)\n    x22 = argmax(x21, numcolors)\n    x23 = asindices(x22)\n    x24 = matcher(first, x17)\n    x25 = sfilter(x23, x24)\n    x26 = difference(x23, x25)\n    x27 = mostcolor(x26)\n    x28 = color(x22)\n    x29 = fill(x20, x27, x28)\n    x30 = ulcorner(x22)\n    x31 = width(x22)\n    x32 = divide(x30, x31)\n    x33 = increment(x32)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = merge(x41)\n    x36 = cover(x29, x35)\n    x37 = lbind(shift, x22)\n    x38 = mapply(x37, x34)\n    O = paint(x32, x38)\n    return O"], [1.1, "def solve_d00beb1d(I):\n    \"\"\"\n    Example input:\n    9373532965\n    5854773507\n    8905932851\n    8367036305\n    6377184954\n    3236506943\n    9610880830\n    2048742800\n    3619656413\n    8001913937\n    Example output:\n    8471948731\n    0974721315\n    8597868329\n    9761012125\n    0804914225\n    0960196941\n    9449918560\n    0800497853\n    5685076146\n    5881735340\n    \"\"\"\n    x1 = rbind(shoot, UNITY)\n    x2 = rbind(add, UNITY)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = chain(decrement, last, x2)\n    x6 = fork(multiply, astuple, x5)\n    x7 = fork(equality, identity, x6)\n    x8 =223(TEN)\n    x9 = branch(x8, initset, x5)\n    x10 = insert(x9, I)\n    x11 = branch(x7, width, height)\n    x12 = apply(x11, x10)\n    x13 = difference(x10, x12)\n    x14 = mapply(x4, x13)\n    x15 = paint(I, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = apply(toindices, x16)\n    x18 = fork(either, x15, x17)\n    x19 = x18(x1)\n    O = paint(x15, x19)\n    return O"], [1.1, "def solve_2ed6b6dd(I):\n    \"\"\"\n    Example input:\n    5566146100\n    4122091806\n    0818943958\n    0957896097\n    6453510051\n    6004534104\n    3068914254\n    2605632358\n    9188555537\n    1462687587\n    Example output:\n    8293931612\n    5669347675\n    6253922888\n    8737110136\n    7095548678\n    0048657813\n    6156916080\n    6083040041\n    9378014430\n    5595211058\n    \"\"\"\n    x1 = rot270(I)\n    x2 = height(x1)\n    x3 = rot90(I)\n    x4 = matcher(size, ZERO)\n    x5 = rbind(ofcolor, ZERO)\n    x6 = compose(flip, x4)\n    x7 = extract(x3, x6)\n    x8 = outbox(x7)\n    x9 = width(x1)\n    x10 = ofcolor(x, x9)\n    x11 = leftmost(x10)\n    x12 = ZERO(x11)\n    x13 = toobject(x12, x1)\n    x14 = color(x13)\n    x15 =14(x13)\n    x16 = shift(x8, x9)\n    x17 = shift(x8, x14)\n    x18 = paint(x15, x16)\n    O = paint(x18, x17)\n    return O"]]}