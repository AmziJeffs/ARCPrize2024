{"d56f2372": [[0.29037478188052895, "def solve_8f932125(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, F, F, T)\n    x6 = rbind(colorcount, ONE)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.3040587683921017, "def solve_124a1120(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [0.32625362023912746, "def solve_362bfae8(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = subgrid(x20, I)\n    x22 = switch(x21, x18, x19)\n    x23 = replace(x22, x18, x4)\n    x24 = lbind(downscale, x23)\n    x25 = fork(upscale, x24, identity)\n    x26 = matcher(x25, x23)\n    x27 = shape(x23)\n    x28 = maximum(x27)\n    x29 = interval(ONE, x28, ONE)\n    x30 = sfilter(x29, x26)\n    x31 = maximum(x30)\n    O = downscale(x23, x31)\n    return O"], [0.3346827117477524, "def solve_862d52aa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_d48d374f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_4d041841(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_78197862(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_68d522af(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_9c414443(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_5d120429(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_7c30e93a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_06184eff(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_7c35cb86(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_960e5d52(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_766e4681(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_9983940e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_0d83159d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_7c329b5f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_7e191ea1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_d7d88984(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_19971b9f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.39591901174509864, "def solve_5f7fd0ff(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(shoot, UNITY)\n    x3 = compose(x2, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    x6 = astuple(SIX, SIX)\n    x7 = canvas(ZERO, x6)\n    O = paint(x7, x5)\n    return O"], [0.41617597321745253, "def solve_48aab6c1(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = mostcolor(x2)\n    x4 = matcher(first, x3)\n    x5 = sfilter(x2, x4)\n    x6 = shape(x5)\n    x7 = normalize(x5)\n    x8 = mostcolor(I)\n    x9 = canvas(x8, x6)\n    O = paint(x9, x7)\n    return O"], [0.41699831998382725, "def solve_f34e1612(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.45202107260642777, "def solve_b706875e(I):\n    x1 = replace(I, TWO, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.45420349399449317, "def solve_03a44524(I):\n    x1 = objects(I, T, F, T)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = mostcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = extract(x1, x5)\n    O = subgrid(x6, I)\n    return O"], [0.47145600561542583, "def solve_00354818(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.47691676185236953, "def solve_2dc7e85b(I):\n    x1 = replace(I, FOUR, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.47691676185236953, "def solve_9c3c256b(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.49704719435154215, "def solve_ac362628(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_39f8ebdd(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_5388b651(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_5ffb29a7(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_5afaeb8b(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_1a5dc52d(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5056030890741036, "def solve_7e30d78b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.5056030890741036, "def solve_0dfc0a99(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.5056030890741036, "def solve_7991406b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.5056030890741036, "def solve_e7d03285(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.5056030890741036, "def solve_0e84b41d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.5056030890741036, "def solve_e04f8cb1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.5090259086634993, "def solve_94625438(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = ofcolor(x1, ZERO)\n    x4 = ofcolor(x2, ZERO)\n    x5 = intersection(x3, x4)\n    x6 = astuple(NINE, NINE)\n    x7 = canvas(ZERO, x6)\n    O = fill(x7, EIGHT, x5)\n    return O"], [0.5130794983512649, "def solve_512bcb78(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = rbind(equality, x4)\n    x7 = argmin(x5, x6)\n    x8 = asindices(I)\n    x9 = ofcolor(I, x4)\n    x10 = difference(x8, x9)\n    x11 = fill(I, x7, x10)\n    x12 = frontiers(x11)\n    x13 = sfilter(x12, vline)\n    x14 = difference(x12, x13)\n    x15 = astuple(x14, x13)\n    x16 = apply(size, x15)\n    x17 = increment(x16)\n    O = canvas(x4, x17)\n    return O"], [0.5130794983512649, "def solve_224f5db4(I):\n    x1 = mostcolor(I)\n    x2 = frontiers(I)\n    x3 = sfilter(x2, vline)\n    x4 = difference(x2, x3)\n    x5 = astuple(x4, x3)\n    x6 = apply(size, x5)\n    x7 = increment(x6)\n    O = canvas(x1, x7)\n    return O"], [0.5307798906710026, "def solve_dff6181a(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5307798906710026, "def solve_bc780504(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5307798906710026, "def solve_bc348caf(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5502516534918191, "def solve_946ad92c(I):\n    x1 = partition(I)\n    x2 = chain(size, dedupe, neighbors)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, dmirror, identity)\n    x5 = x4(I)\n    x6 = objects(x5, T, F, F)\n    x7 = order(x6, leftmost)\n    x8 = apply(color, x7)\n    x9 = repeat(x8, ONE)\n    O = x4(x9)\n    return O"], [0.5585024261811583, "def solve_02c549c5(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5585024261811583, "def solve_88c35f0a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5585024261811583, "def solve_ae109171(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5585024261811583, "def solve_51d6def0(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5585024261811583, "def solve_789764f1(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5585024261811583, "def solve_b88191a0(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5585024261811583, "def solve_71819341(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5585024261811583, "def solve_a9301661(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = combine(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5985774392006277, "def solve_d6569984(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.5985774392006277, "def solve_71425b0b(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.6016750389108988, "def solve_2d85fb7c(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.6016750389108988, "def solve_5a0ee9f3(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.6157582830481382, "def solve_509e1e37(I):\n    x1 = rbind(subgrid, I)\n    x2 = chain(mostcolor, x1, numcolors)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, identity, dmirror)\n    x5 = x4(I)\n    x6 = objects(x5, T, F, T)\n    x7 = difference(x6, x5)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x4(x10)\n    return O"], [0.6181018953185965, "def solve_8581db70(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_8e882022(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_2df84732(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_8380b72d(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6206220158679393, "def solve_35d28584(I):\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [0.6206220158679393, "def solve_36e1d64f(I):\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [0.622869477157343, "def solve_36b1d5fa(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = ofcolor(x1, ZERO)\n    x4 = ofcolor(x2, ZERO)\n    x5 = intersection(x3, x4)\n    x6 = shape(x1)\n    x7 = canvas(ZERO, x6)\n    O = fill(x7, EIGHT, x5)\n    return O"], [0.6291436647232063, "def solve_d605d80a(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    O = x5(I)\n    return O"], [0.6291436647232063, "def solve_7b9e592a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_11d42256(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_e0b1611a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_3c315dc0(I):\n    O = tophalf(I)\n    return O"], [0.6291436647232063, "def solve_c7b130d6(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_4d5b4592(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.6291436647232063, "def solve_cf765f7b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.6291436647232063, "def solve_881525a4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_f6395595(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6411654239156103, "def solve_b1510865(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [0.6411654239156103, "def solve_0aac7f25(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [0.6520970374864296, "def solve_aecd87b5(I):\n    x1 = rot270(I)\n    x2 = hconcat(I, x1)\n    x3 = hsplit(x2, THREE)\n    O = first(x3)\n    return O"], [0.6572952903476961, "def solve_68da113f(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.6602138625163511, "def solve_490de5bc(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.6602138625163511, "def solve_98f30818(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6602138625163511, "def solve_d295afd4(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.6602138625163511, "def solve_8b29d585(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6602138625163511, "def solve_10f4d295(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.6602138625163511, "def solve_8ce23322(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6602138625163511, "def solve_383060ef(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6602138625163511, "def solve_99673455(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6602138625163511, "def solve_1a59a9cc(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6708942370394477, "def solve_aeae0702(I):\n    x1 = hsplit(I, THREE)\n    x2 = first(x1)\n    x3 = remove(x2, x1)\n    x4 = first(x3)\n    x5 = last(x3)\n    x6 = ofcolor(x4, NINE)\n    x7 = ofcolor(x2, FOUR)\n    x8 = fill(x5, NINE, x6)\n    O = fill(x8, FOUR, x7)\n    return O"], [0.6978401405853463, "def solve_dd7cbc25(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.7046776153928492, "def solve_dd665c88(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.7046776153928492, "def solve_0ee9ca71(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, x1, I)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.7052501974196685, "def solve_d7160e25(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = subgrid(x5, I)\n    x7 = mostcolor(x6)\n    x8 = leastcolor(x6)\n    O = switch(x6, x7, x8)\n    return O"], [0.7052501974196685, "def solve_0b6864cf(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = subgrid(x5, I)\n    x7 = mostcolor(x6)\n    x8 = leastcolor(x6)\n    O = switch(x6, x7, x8)\n    return O"], [0.7052501974196685, "def solve_f6a12c87(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = subgrid(x5, I)\n    x7 = mostcolor(x6)\n    x8 = leastcolor(x6)\n    O = switch(x6, x7, x8)\n    return O"], [0.7068705363346716, "def solve_0c28ea7b(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, SIX)\n    x3 = compose(flip, x2)\n    x4 = mfilter(x1, x2)\n    x5 = mfilter(x1, x3)\n    x6 = fill(I, TWO, x4)\n    O = fill(x6, ONE, x5)\n    return O"], [0.7209610573661548, "def solve_13311d98(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.7209610573661548, "def solve_cbd19292(I):\n    x1 = dmirror(I)\n    x2 = cmirror(x1)\n    x3 = hmirror(I)\n    x4 = hmirror(x3)\n    x5 = vconcat(x4, x4)\n    x6 = vconcat(x5, x3)\n    O = cellwise(x2, x6, ZERO)\n    return O"], [0.7253714992428528, "def solve_2c584159(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.7253714992428528, "def solve_20c45a08(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.7253714992428528, "def solve_853baa07(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.7265166129217103, "def solve_96923ba7(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.7265166129217103, "def solve_20c82e19(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.7265166129217103, "def solve_3e23124e(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.728049799593843, "def solve_83816c0a(I):\n    O = replace(I, FOUR, ZERO)\n    return O"], [0.7282124012198592, "def solve_1540cbb5(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = fork(vmatching, first, last)\n    x5 = mfilter(x3, x4)\n    x6 = replace(I, THREE, ZERO)\n    O = fill(x6, EIGHT, x5)\n    return O"], [0.728570782508834, "def solve_1c6f527b(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot270(x3)\n    return O"], [0.7286997024901773, "def solve_34bdd8d2(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = prapply(connect, x2, x2)\n    x4 = fgpartition(I)\n    x5 = merge(x4)\n    x6 = cover(I, x5)\n    x7 = fork(either, hline, vline)\n    x8 = box(x5)\n    x9 = rbind(difference, x8)\n    x10 = chain(positive, size, x9)\n    x11 = fork(both, x7, x10)\n    x12 = mfilter(x3, x11)\n    O = fill(x6, x1, x12)\n    return O"], [0.7289045042337138, "def solve_c634772b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.7327606579059885, "def solve_5a2bf004(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.7327606579059885, "def solve_5dc37c90(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.7327606579059885, "def solve_d0cc205d(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.7336695637855494, "def solve_c0cc875a(I):\n    x1 = ofcolor(I, TWO)\n    x2 = crop(I, ORIGIN, THREE_BY_THREE)\n    x3 = asobject(x2)\n    x4 = lbind(shift, x3)\n    x5 = compose(x4, decrement)\n    x6 = mapply(x5, x1)\n    O = paint(I, x6)\n    return O"], [0.739396261410893, "def solve_3a25b7c3(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.739396261410893, "def solve_82a79779(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.739396261410893, "def solve_82b52372(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.739396261410893, "def solve_6b859cac(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.7408086205253798, "def solve_16d846d0(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(normalize, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [0.7410390952301974, "def solve_fc7aacce(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.7410390952301974, "def solve_784a76b7(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.7410390952301974, "def solve_ec772d80(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.7410606318002912, "def solve_7eb2a11d(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = height(x2)\n    x4 = height(I)\n    x5 = interval(ZERO, x4, x3)\n    x6 = lbind(shift, x2)\n    x7 = compose(x6, toivec)\n    x8 = compose(x7, invert)\n    x9 = fork(combine, x7, x8)\n    x10 = mapply(x9, x5)\n    O = paint(I, x10)\n    return O"], [0.7410606318002912, "def solve_2eb3f024(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = height(x2)\n    x4 = height(I)\n    x5 = interval(ZERO, x4, x3)\n    x6 = lbind(shift, x2)\n    x7 = compose(x6, toivec)\n    x8 = compose(x7, invert)\n    x9 = fork(combine, x7, x8)\n    x10 = mapply(x9, x5)\n    O = paint(I, x10)\n    return O"], [0.7410606318002912, "def solve_e4ebdf9e(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = height(x2)\n    x4 = height(I)\n    x5 = interval(ZERO, x4, x3)\n    x6 = lbind(shift, x2)\n    x7 = compose(x6, toivec)\n    x8 = compose(x7, invert)\n    x9 = fork(combine, x7, x8)\n    x10 = mapply(x9, x5)\n    O = paint(I, x10)\n    return O"], [0.7411341780448716, "def solve_e663cc14(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7411341780448716, "def solve_c111c909(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7411341780448716, "def solve_423ed807(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7411341780448716, "def solve_c343d444(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7414131271298864, "def solve_452b0c5a(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = center(x2)\n    x4 = dneighbors(x3)\n    x5 = insert(x3, x4)\n    O = fill(I, ZERO, x5)\n    return O"], [0.7414654147115858, "def solve_6240a5e7(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_a2446404(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7414654147115858, "def solve_4a3b8cc2(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_a1f709c7(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7414654147115858, "def solve_9d80387e(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = fill(I, x8, x32)\n    return O"], [0.7414654147115858, "def solve_aa94830c(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_007cae4b(I):\n    x1 = objects(I, T, F, F)\n    x2 = palette(I)\n    x3 = other(x2, ZERO)\n    x4 = colorfilter(x1, x3)\n    x5 = sizefilter(x4, ONE)\n    x6 = difference(x4, x5)\n    x7 = merge(x6)\n    O = fill(I, THREE, x7)\n    return O"], [0.7414654147115858, "def solve_db07b015(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7414654147115858, "def solve_762af901(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, THREE)\n    x3 = sizefilter(x2, ONE)\n    x4 = difference(x2, x3)\n    x5 = merge(x4)\n    O = fill(I, THREE, x5)\n    return O"], [0.7414654147115858, "def solve_c566179a(I):\n    O = subgrid(I, I)\n    return O"], [0.7414654147115858, "def solve_1b01e792(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = fill(I, x8, x32)\n    return O"], [0.7414654147115858, "def solve_c42b3a2a(I):\n    x1 = initset(ORIGIN)\n    x2 = box(x1)\n    x3 = shape(I)\n    x4 = minimum(x3)\n    x5 = halve(x4)\n    x6 = interval(ONE, x5, ONE)\n    x7 = lbind(power, inbox)\n    x8 = rbind(rapply, x2)\n    x9 = compose(initset, x7)\n    x10 = chain(first, x8, x9)\n    x11 = apply(x10, x6)\n    x12 = repeat(x2, ONE)\n    x13 = combine(x12, x11)\n    x14 = rbind(toobject, I)\n    x15 = compose(color, x14)\n    x16 = apply(x15, x13)\n    x17 = interval(ZERO, x5, ONE)\n    x18 = pair(x17, x16)\n    x19 = compose(invert, first)\n    x20 = order(x18, x19)\n    x21 = apply(last, x20)\n    x22 = mpapply(recolor, x21, x13)\n    O = paint(I, x22)\n    return O"], [0.7414654147115858, "def solve_421033c1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7414654147115858, "def solve_a5ebd2ce(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7418642138333315, "def solve_f4191f94(I):\n    O = switch(I, EIGHT, TWO)\n    return O"], [0.7419294883893283, "def solve_e4912a4a(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_0aa61d66(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_508145b8(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_f9764668(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_05885169(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_7674bbfa(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_734d86fa(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_08b0f41a(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_94579f3a(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_03970150(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7420260064287781, "def solve_743b00f3(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.7420260064287781, "def solve_b1174d58(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.7420260064287781, "def solve_7f44ba7f(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.7426909638249383, "def solve_fff5abe6(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7426909638249383, "def solve_fee01b8e(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7427043838829858, "def solve_e73369c7(I):\n    x1 = objects(I, T, F, F)\n    x2 = sizefilter(x1, ONE)\n    x3 = merge(x2)\n    O = move(I, x3, TWO_BY_ZERO)\n    return O"], [0.7428561853443109, "def solve_25108d8d(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = argmax(x1, x2)\n    x5 = remove(x3, x1)\n    x6 = other(x5, x4)\n    x7 = subgrid(x6, I)\n    x8 = frontiers(x7)\n    x9 = sfilter(x8, hline)\n    x10 = size(x9)\n    x11 = positive(x10)\n    x12 = branch(x11, dmirror, identity)\n    x13 = x12(I)\n    x14 = color(x6)\n    x15 = ofcolor(x13, x14)\n    x16 = subgrid(x15, x13)\n    x17 = trim(x16)\n    x18 = lefthalf(x17)\n    x19 = vmirror(x18)\n    x20 = asobject(x19)\n    x21 = righthalf(x17)\n    x22 = vmirror(x21)\n    x23 = asobject(x22)\n    x24 = color(x4)\n    x25 = inbox(x15)\n    x26 = backdrop(x25)\n    x27 = fill(x13, x24, x26)\n    x28 = urcorner(x15)\n    x29 = add(x28, UNITY)\n    x30 = shift(x23, x29)\n    x31 = ulcorner(x15)\n    x32 = width(x20)\n    x33 = invert(x32)\n    x34 = tojvec(x33)\n    x35 = add(DOWN, x34)\n    x36 = add(x31, x35)\n    x37 = shift(x20, x36)\n    x38 = combine(x30, x37)\n    x39 = paint(x27, x38)\n    O = x12(x39)\n    return O"], [0.7431846253222085, "def solve_b9aee034(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = cover(I, x2)\n    x4 = shift(x2, DOWN)\n    x5 = paint(x3, x4)\n    x6 = shift(x2, RIGHT)\n    x7 = paint(x5, x6)\n    x8 = shift(x2, LEFT)\n    O = paint(x7, x8)\n    return O"], [0.744309578111282, "def solve_5fdb3430(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.744309578111282, "def solve_c27ce434(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.744309578111282, "def solve_646aa8de(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.744309578111282, "def solve_f036f0c7(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.744309578111282, "def solve_5aff503e(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.7446400178861889, "def solve_21a6ff0e(I):\n    x1 = objects(I, T, F, T)\n    x2 = apply(toindices, x1)\n    x3 = fork(either, vline, hline)\n    x4 = sfilter(x2, x3)\n    x5 = difference(x2, x4)\n    x6 = fork(equality, identity, box)\n    x7 = mfilter(x5, x6)\n    O = fill(I, THREE, x7)\n    return O"], [0.7447462774848344, "def solve_dc840d56(I):\n    x1 = ofcolor(I, THREE)\n    x2 = height(x1)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, ZERO_BY_TWO, TWO_BY_TWO)\n    x5 = ofcolor(I, TWO)\n    x6 = recolor(TWO, x5)\n    O = move(I, x6, x4)\n    return O"], [0.7448492898496154, "def solve_c4492498(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, ONE, x2)\n    return O"], [0.7452006096033813, "def solve_b33f7689(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, FOUR, x5)\n    return O"], [0.7454776898542618, "def solve_a712debb(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.7454776898542618, "def solve_a669ed4f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.746036831698095, "def solve_7858da89(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.7462669862994846, "def solve_c5525c8a(I):\n    O = dmirror(I)\n    return O"], [0.7462669862994846, "def solve_31fd98ec(I):\n    O = dmirror(I)\n    return O"], [0.7464740545096182, "def solve_be665f33(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_035af0ce(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_0ef8e060(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_95242d09(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_95d56d68(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_13518b4f(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_94527df4(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_95a96707(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_171722ab(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_7df58ffd(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7467587450693074, "def solve_25c8825c(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(shoot, RIGHT)\n    x4 = compose(x3, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(x1, DOWN_LEFT)\n    x9 = initset(x8)\n    x10 = mostcolor(I)\n    x11 = recolor(x10, x9)\n    x12 = objects(x7, T, F, T)\n    x13 = insert(x11, x12)\n    x14 = order(x13, uppermost)\n    x15 = first(x14)\n    x16 = remove(x11, x14)\n    x17 = remove(x15, x14)\n    x18 = compose(lrcorner, first)\n    x19 = compose(lrcorner, last)\n    x20 = fork(connect, x18, x19)\n    x21 = compose(color, first)\n    x22 = fork(recolor, x21, x20)\n    x23 = pair(x16, x17)\n    x24 = mapply(x22, x23)\n    O = underpaint(x7, x24)\n    return O"], [0.7474257038308011, "def solve_ac8ef8e2(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = rbind(colorcount, ZERO)\n    x3 = lbind(toobject, x1)\n    x4 = compose(x2, x3)\n    x5 = vmirror(I)\n    x6 = hmirror(I)\n    x7 = astuple(x5, x6)\n    x8 = argmin(x7, x4)\n    O = subgrid(x1, x8)\n    return O"], [0.7479313014802748, "def solve_0acf92b5(I):\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7481170341881848, "def solve_64c51887(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7481170341881848, "def solve_544d2d26(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7481170341881848, "def solve_444b77df(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7481170341881848, "def solve_40e5ab1c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7481170341881848, "def solve_01e61422(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7481170341881848, "def solve_1742a375(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7481170341881848, "def solve_3e34b638(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7481170341881848, "def solve_e9c578f2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7481170341881848, "def solve_75c97c53(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7481170341881848, "def solve_339196ad(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7482565735643151, "def solve_6cf6f287(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_1ffae2fa(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_5e21d698(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_6bc3ca92(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7484974551407092, "def solve_81289ccc(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.7484974551407092, "def solve_1ce93324(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.7485427567125599, "def solve_c6031c1c(I):\n    O = vmirror(I)\n    return O"], [0.7487022635082722, "def solve_b1cb6271(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.7487022635082722, "def solve_a0033061(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.7487022635082722, "def solve_a96086ab(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.7487035816092084, "def solve_32d71867(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.7487035816092084, "def solve_a62d0e88(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.7491103860227947, "def solve_b1617fab(I):\n    O = rot270(I)\n    return O"], [0.749321253046244, "def solve_cb51c93a(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.749321253046244, "def solve_77c5a92b(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.749321253046244, "def solve_cdb65a39(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.7498499462550435, "def solve_7b00b0e2(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.7498499462550435, "def solve_55843ee0(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.7498499462550435, "def solve_5ae7aad6(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.7498847791973963, "def solve_b6c8f382(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.7499721047781133, "def solve_31760b9c(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, THREE, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.7509789245927596, "def solve_a852a024(I):\n    x1 = hmirror(I)\n    x2 = fgpartition(x1)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = compose(double, halve)\n    x6 = fork(equality, identity, x5)\n    x7 = compose(x6, last)\n    x8 = sfilter(x4, x7)\n    x9 = fill(x1, THREE, x8)\n    O = vmirror(x9)\n    return O"], [0.7516076730507363, "def solve_e92c8aab(I):\n    x1 = height(I)\n    x2 = vsplit(I, x1)\n    x3 = apply(asobject, x2)\n    x4 = apply(hperiod, x3)\n    x5 = minimum(x4)\n    x6 = width(I)\n    x7 = hsplit(I, x6)\n    x8 = apply(asobject, x7)\n    x9 = apply(vperiod, x8)\n    x10 = minimum(x9)\n    x11 = matcher(hperiod, x5)\n    x12 = sfilter(x3, x11)\n    x13 = mapply(palette, x12)\n    x14 = matcher(vperiod, x10)\n    x15 = sfilter(x8, x14)\n    x16 = mapply(palette, x15)\n    x17 = palette(I)\n    x18 = combine(x13, x16)\n    x19 = rbind(contained, x18)\n    x20 = argmin(x17, x19)\n    x21 = asobject(I)\n    x22 = matcher(first, x20)\n    x23 = compose(flip, x22)\n    x24 = sfilter(x21, x23)\n    x25 = height(I)\n    x26 = divide(x25, x10)\n    x27 = increment(x26)\n    x28 = width(I)\n    x29 = divide(x28, x5)\n    x30 = increment(x29)\n    x31 = invert(x27)\n    x32 = interval(x31, x27, ONE)\n    x33 = invert(x30)\n    x34 = interval(x33, x30, ONE)\n    x35 = product(x32, x34)\n    x36 = astuple(x10, x5)\n    x37 = lbind(multiply, x36)\n    x38 = apply(x37, x35)\n    x39 = lbind(shift, x24)\n    x40 = mapply(x39, x38)\n    O = paint(I, x40)\n    return O"], [0.7518753424364076, "def solve_4f3ca617(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7518753424364076, "def solve_76dd7606(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7518753424364076, "def solve_6b5f39a8(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7523857740772911, "def solve_e5733138(I):\n    x1 = objects(I, T, F, F)\n    x2 = fork(combine, vfrontier, hfrontier)\n    x3 = compose(x2, center)\n    x4 = mapply(x3, x1)\n    O = underfill(I, SIX, x4)\n    return O"], [0.7588892456530311, "def solve_97e2fd0c(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = apply(toindices, x6)\n    x8 = rbind(shoot, RIGHT)\n    x9 = compose(x8, center)\n    x10 = fork(recolor, color, x9)\n    x11 = mapply(x10, x6)\n    x12 = paint(I, x11)\n    x13 = width(I)\n    x14 = interval(ZERO, x13, ONE)\n    x15 = apply(double, x14)\n    x16 = apply(increment, x15)\n    x17 = apply(tojvec, x16)\n    x18 = prapply(shift, x7, x17)\n    x19 = merge(x18)\n    O = fill(x12, FIVE, x19)\n    return O"], [0.7589610573661547, "def solve_bd073e07(I):\n    x1 = compose(positive, size)\n    x2 = rbind(sfilter, hline)\n    x3 = chain(x1, x2, frontiers)\n    x4 = chain(size, dedupe, first)\n    x5 = chain(size, dedupe, last)\n    x6 = fork(greater, x4, x5)\n    x7 = fork(both, x3, x6)\n    x8 = astuple(identity, rot90)\n    x9 = astuple(rot180, rot270)\n    x10 = combine(x8, x9)\n    x11 = astuple(identity, rot270)\n    x12 = astuple(rot180, rot90)\n    x13 = combine(x11, x12)\n    x14 = pair(x10, x13)\n    x15 = rbind(rapply, I)\n    x16 = compose(initset, first)\n    x17 = chain(first, x15, x16)\n    x18 = compose(x7, x17)\n    x19 = extract(x14, x18)\n    x20 = first(x19)\n    x21 = last(x19)\n    x22 = x20(I)\n    x23 = first(x22)\n    x24 = repeat(x23, ONE)\n    x25 = dmirror(x24)\n    x26 = width(x22)\n    x27 = hupscale(x25, x26)\n    x28 = asobject(x27)\n    x29 = height(x22)\n    x30 = height(x28)\n    x31 = interval(ZERO, x29, x30)\n    x32 = lbind(shift, x28)\n    x33 = apply(toivec, x31)\n    x34 = mapply(x32, x33)\n    x35 = shift(x34, TWO_BY_ZERO)\n    x36 = paint(x22, x35)\n    O = x21(x36)\n    return O"], [0.7598499462550435, "def solve_6bfd2630(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.7598499462550435, "def solve_eeb47269(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.770283578319142, "def solve_43c6e29b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.770283578319142, "def solve_541246fa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.770283578319142, "def solve_47a1addc(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.770283578319142, "def solve_f84c72e4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7790633012367362, "def solve_569e5a0b(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7790633012367362, "def solve_948dcfcd(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7790633012367362, "def solve_e1406122(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7790633012367362, "def solve_92d5bfd6(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7790633012367362, "def solve_51f25776(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7790633012367362, "def solve_4588d57b(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7790633012367362, "def solve_f11ca90b(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7790633012367362, "def solve_559104ca(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7829819910175547, "def solve_d5426d9c(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.7829819910175547, "def solve_0d3126ff(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.7829819910175547, "def solve_25d533b9(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.7857885033510078, "def solve_cc399320(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.7871062946758173, "def solve_bcef05a7(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, vmirror, hmirror)\n    x9 = x8(x6)\n    x10 = branch(x7, leftmost, uppermost)\n    x11 = branch(x7, tojvec, toivec)\n    x12 = x10(x5)\n    x13 = x10(x6)\n    x14 = greater(x12, x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = x11(x16)\n    x18 = shape(x6)\n    x19 = multiply(x17, x18)\n    x20 = shift(x9, x19)\n    x21 = fill(I, THREE, x3)\n    O = paint(x21, x20)\n    return O"], [1.0, "def solve_2f78e29a(I):\n    x1 = astuple(identity, identity)\n    x2 = astuple(rot90, rot270)\n    x3 = astuple(x1, x2)\n    x4 = astuple(rot180, rot180)\n    x5 = astuple(rot270, rot90)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = leastcolor(I)\n    x9 = repeat(x8, ONE)\n    x10 = rbind(rapply, I)\n    x11 = chain(x10, initset, first)\n    x12 = compose(first, x11)\n    x13 = chain(dedupe, first, x12)\n    x14 = matcher(x13, x9)\n    x15 = extract(x7, x14)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = x16(I)\n    x19 = ofcolor(x18, x8)\n    x20 = height(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = lbind(astuple, x20)\n    x23 = apply(x22, x21)\n    x24 = rbind(shoot, DOWN)\n    x25 = mapply(x24, x23)\n    x26 = fill(x18, FOUR, x25)\n    x27 = astuple(x20, x20)\n    x28 = canvas(ZERO, x27)\n    x29 = asindices(x28)\n    x30 = shift(x29, x27)\n    x31 = shape(I)\n    x32 = maximum(x31)\n    x33 = lbind(shift, x30)\n    x34 = interval(ZERO, x32, x20)\n    x35 = pair(x34, x34)\n    x36 = mapply(x33, x35)\n    x37 = fill(x26, TWO, x36)\n    O = x17(x37)\n    return O"], [1.0, "def solve_2a2cae48(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = compose(size, dedupe)\n    x5 = apply(x4, x3)\n    x6 = totuple(x5)\n    x7 = sfilter(x6, first)\n    x8 = compose(last, last)\n    x9 = totuple(x7)\n    x10 = apply(x8, x9)\n    x11 = mostcommon(x10)\n    x12 = lbind(matcher, first)\n    x13 = compose(x12, x7)\n    x14 = fork(sfilter, identity, x13)\n    x15 = compose(rot90, x14)\n    x16 = lbind(matcher, first)\n    x17 = compose(x16, x7)\n    x18 = fork(sfilter, identity, x17)\n    x19 = compose(rot180, x18)\n    x20 = lbind(occurrences, I)\n    x21 = compose(x20, x14)\n    x22 = compose(xpositive, size)\n    x23 = fork(shift, x21, x22)\n    x24 = fork(mapply, x19, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = dedupe(x27)\n    x29 = rot90(x28)\n    x30 = dedupe(x29)\n    O = rot270(x30)\n    return O"], [1.0, "def solve_485062d7(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_d30d557a(I):\n    x1 = rbind(shoot, UNITY)\n    x2 = compose(x1, center)\n    x3 = fork(recolor, color, x2)\n    x4 = mapply(x3, x1)\n    x5 = shape(I)\n    x6 = add(TWO, x5)\n    x7 = canvas(ZERO, x6)\n    x8 = asobject(I)\n    x9 = shift(x8, UNITY)\n    O = paint(x7, x9)\n    return O"], [1.0, "def solve_247b5bf2(I):\n    x1 = objects(I, F, F, T)\n    x2 = rbind(valmax, numcolors)\n    x3 = matcher(x2, ONE)\n    x4 = extract(x1, x3)\n    x5 = remove(x4, x1)\n    x6 = lbind(shift, x4)\n    x7 = mapply(x6, x5)\n    x8 = paint(I, x7)\n    O = cover(x8, x4)\n    return O"], [1.0, "def solve_5c2eac65(I):\n    x1 = TWO(I, THREE)\n    x2 = height(x1)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(x1)\n    return O"], [1.0, "def solve_263c85d8(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = lbind(sfilter, x1)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(insert, x104, x14)\n    x16 = compose(backdrop, x15)\n    x17 = shape(I)\n    x18 = decrement(x17)\n    x19 = multiply(x18, x18)\n    x20 = initset(x19)\n    x21 = insert(x14, x20)\n    x22 = product(x21, x21)\n    x23 = argmax(x22, x16)\n    x24 = asindices(x23)\n    x25 = contained(ZERO, x24)\n    x26 = insert(x21, x25)\n    x27 = rbind(argmin, x26)\n    x28 = lbind(shift, x23)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [1.0, "def solve_d0156e52(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_9bf5ae6f(I):\n    x1 = rot180(I)\n    x2 = hconcat(I, x1)\n    O = vconcat(x2, x2)\n    return O"], [1.0, "def solve_2fa55978(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = branch(x1, vsplit, hsplit)\n    return O"], [1.0, "def solve_0ccfb650(I):\n    x1 = lbind(apply, normalize)\n    x2 = chain(maximum, x1, shape)\n    x3 = subtract(TWO, x2)\n    x4 = interval(ZERO, x3, ONE)\n    x5 = rbind(multiply, x4)\n    x6 = apply(x5, x4)\n    x7 = rbind(shift, x6)\n    x8 = mapply(x7, x3)\n    x9 = double(x3)\n    x10 = astuple(x9, x8)\n    x11 = add(x10, x3)\n    x12 = index(I, x11)\n    x13 = astuple(x12, x4)\n    x14 = canvas(x12, x13)\n    x15 = asobject(I)\n    x16 = shift(x15, UNITY)\n    x17 = paint(x14, x16)\n    x18 = objects(x17, T, F, T)\n    x19 = apply(color, x18)\n    x20 = rbind(shift, ORIGIN)\n    x21 = mapply(x20, x19)\n    x22 = fill(x17, x12, x21)\n    x23 = paint(x22, x15)\n    x24 = apply(ulcorner, x15)\n    x25 = mapply(x24, x24)\n    x26 = paint(x25, x15)\n    x27 = fill(x26, x12, x25)\n    O = paint(x27, x15)\n    return O"], [1.0, "def solve_41694d36(I):\n    O = hconcat(I, I)\n    return O"], [1.0, "def solve_b3ecc366(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_7c1e6d5c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = index(I, ORIGIN)\n    x8 = shoot(ORIGIN, DOWN)\n    O = fill(x6, x7, x8)\n    return O"], [1.0, "def solve_18f7a7a2(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, E730, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [1.0, "def solve_01f6f72c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_fec6ffd8(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, F, F, T)\n    x4 = merge(x3)\n    x5 = palette(x4)\n    x6 = intersection(x1, x5)\n    x7 = lbind(colorcount, x4)\n    x8 = argmin(x6, x7)\n    x9 = ofcolor(x4, x8)\n    x10 = difference(x1, x9)\n    x11 = rbind(toobject, x4)\n    x12 = lbind(rbind, occurrences)\n    x13 = chain(first, x11, x12)\n    x14 = rbind(colorcount, x8)\n    x15 = chain(x13, x14, x9)\n    x16 = fork(argmax, x15, x13)\n    x17 = fork(colorcount, x16, outbox)\n    x18 = ofcolor(x4, x8)\n    x19 = difference(x19, x18)\n    x20 = subgrid(x18, x1)\n    x21 = rbind(occurrences, x20)\n    x22 = compose(x21, normalize)\n    x23 = fork(argmin, x22, x21)\n    x24 = ofcolor(x4, x8)\n    x25 = difference(x24, x18)\n    x26 = intersection(x24, x25)\n    x27 = fill(x20, x8, x26)\n    x28 = urcorner(x27)\n    x29 = lbind(toindices, x28)\n    x30 = fork(shoot, identity, x29)\n    x31 = mapply(x30, x2222)\n    x32 = fill(x27, x8, x31)\n    O = replace(x32, x8, x4)\n    return O"], [1.0, "def solve_a03889dd(I):\n    x1 = ofcolor(I, TWO)\n    x2 = rbind(colorcount, TWO)\n    x3 = subgrid(x1, I)\n    x4 = argmax(x1, x2)\n    x5 = replace(x3, ONE, ZERO)\n    O = fill(x5, TWO, x4)\n    return O"], [1.0, "def solve_663ad284(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = positive(x2)\n    x4 = branch(x3, dmirror, identity)\n    x5 = x4(I)\n    x6 = objects(x5, T, F, F)\n    x7 = order(x6, leftmost)\n    x8 = apply(color, x7)\n    x9 = repeat(x8, ONE)\n    O = x4(x9)\n    return O"], [1.0, "def solve_8722bcfd(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = x6(I)\n    x8 = dmirror(x7)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_c4005486(I):\n    x1 = asindices(I)\n    x2 = fgpartition(I)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = compose(double, halve)\n    x6 = fork(equality, identity, x5)\n    x7 = compose(x6, last)\n    x8 = sfilter(x4, x7)\n    x9 = fill(I, FOUR, x8)\n    x10 = increment(x6)\n    x11 = width(I)\n    x12 = halve(x11)\n    x13 = tojvec(x12)\n    x14 = height(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = rbind(greater, ONE)\n    x19 = compose(x18, last)\n    x20 = sfilter(x17, x19)\n    x21 = totuple(x20)\n    x22 = apply(toindices, x21)\n    x23 = fork(either, x21, x22)\n    x24 = sfilter(x22, x23)\n    x25 = paint(x9, x24)\n    O = size(x25)\n    return O"], [1.0, "def solve_8aaa40a3(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = fgpartition(x4)\n    x6 = merge(x5)\n    x7 = chain(double, decrement, width)\n    x8 = x7(x6)\n    x9 = argmin(x5, x8)\n    x10 = leastcolor(x9)\n    x11 = palette(x9)\n    x12 = remove(x10, x11)\n    x13 = other(x12, x18)\n    x14 = ofcolor(x4, x10)\n    x15 = ofcolor(x4, x13)\n    x16 = combine(x14, x15)\n    x17 = fill(x6, x13, x16)\n    x18 = difference(x17, x15)\n    O = fill(x17, FOUR, x18)\n    return O"], [1.0, "def solve_ab9e8f08(I):\n    x1 = mostcolor(I)\n    x2 = vmirror(I)\n    O = objects(I, T, F, T)\n    return O"], [1.0, "def solve_9c3a204b(I):\n    x1 = compress(I)\n    x2 = objects(x1, F, F, T)\n    x3 = rbind(colorcount, ZERO)\n    x4 = argmax(x2, x3)\n    x5 = rbind(colorcount, ZERO)\n    x6 = matcher(x5, x4)\n    x7 = extract(x1, x6)\n    x8 = remove(x7, x1)\n    x9 = extract(x8, x4)\n    x10 = shape(x9)\n    x11 = multiply(x10, x10)\n    x12 = canvas(ZERO, x11)\n    x13 = ofcolor(x1, x4)\n    x14 = shift(x13, x12)\n    O = fill(x12, ZERO, x14)\n    return O"], [1.0, "def solve_ef983aba(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_5dae6507(I):\n    x1 = objects(I, T, F, T)\n    x2 = neighbors(ORIGIN)\n    x3 = mapply(neighbors, x2)\n    x4 = toobject(x3, I)\n    x5 = mostcolor(x4)\n    x6 = ofcolor(I, x5)\n    x7 = backdrop(x6)\n    x8 = multiply(xfill, THREE)\n    x9 = canvas(x5, x8)\n    x10 = astuple(x4, x10)\n    x11 = ofcolor(I, x5)\n    x12 = first(x11)\n    x13 = shift(x12, UP)\n    x14 = ulcorner(x6)\n    x15 = urcorner(x6)\n    x16 = shoot(x14, NEG_UNITY)\n    x17 = shoot(x15, UP_RIGHT)\n    x18 = combine(x16, x17)\n    x19 = underfill(I, x5, x18)\n    O = canvas(x5, UNITY)\n    return O"], [1.0, "def solve_ed5e2388(I):\n    x1 = mostcolor(I)\n    x2 =mirror(I)\n    O = rot90(x2)\n    return O"], [1.0, "def solve_7ef81eac(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_5f116d44(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_f0016d39(I):\n    x1 = rbind(greater, ONE)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_e9aabceb(I):\n    x1 = objects(I, T, F, T)\n    x2 = order(x1, height)\n    x3 = fork(recolor, color, x2)\n    x4 = mapply(x3, x2)\n    O = paint(I, x4)\n    return O"], [1.0, "def solve_afc32684(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_38096dfa(I):\n    x1 = asindices(I)\n    x2 = objects(I, T, F, T)\n    x3 = fork(multiply, sign, identity)\n    x4 = lbind(apply, x3)\n    x5 = chain(even, maximum, x4)\n    x6 = lbind(sfilter, x1)\n    x7 = fork(add, dmirror, identity)\n    x8 = rbind(rapply, I)\n    x9 = compose(x8, initset)\n    x10 = chain(first, x7, x9)\n    x11 = x10(I)\n    x12 = ofcolor(x11, ZERO)\n    x13 = rbind(add, DOWN)\n    x14 = chain(x13, ulcorner, x9)\n    x15 = fork(subtract, x14, x12)\n    x16 = fork(shift, x12, x15)\n    x17 = mapply(x16, x12)\n    x18 = interval(ZERO, x17, ONE)\n    x19 = paint(I, x18)\n    O = x10(x19)\n    return O"], [1.0, "def solve_b2f9b3f2(I):\n    x1 = astuple(identity, identity)\n    x2 = astuple(rot90, rot270)\n    x3 = astuple(x1, x2)\n    x4 = astuple(rot180, rot180)\n    x5 = astuple(rot270, rot90)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = leastcolor(I)\n    x9 = repeat(x8, ONE)\n    x10 = rbind(rapply, I)\n    x11 = chain(x10, initset, first)\n    x12 = compose(first, x11)\n    x13 = chain(dedupe, first, x12)\n    x14 = matcher(x13, x9)\n    x15 = extract(x7, x14)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = x16(I)\n    x19 = ofcolor(x18, x8)\n    x20 = height(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = lbind(astuple, x20)\n    x23 = apply(x22, x21)\n    x24 = rbind(shoot, DOWN)\n    x25 = mapply(x24, x23)\n    x26 = fill(x18, FOUR, x25)\n    x27 = astuple(x20, x20)\n    x28 = canvas(ZERO, x27)\n    x29 = asindices(x28)\n    x30 = shift(x29, x27)\n    x31 = shape(I)\n    x32 = maximum(x31)\n    x33 = lbind(shift, x30)\n    x34 = interval(ZERO, x32, x20)\n    x35 = pair(x34, x34)\n    x36 = mapply(x33, x35)\n    x37 = fill(x26, TWO, x36)\n    O = x17(x37)\n    return O"], [1.0, "def solve_129ebbfc(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = lbind(mapply, neighbors)\n    x13 = compose(x12, toindices)\n    x14 = fork(sfilter, x13, x10)\n    x15 = mapply(x14, x11)\n    x16 = lbind(argmin, x5)\n    x17 = compose(first, last)\n    x18 = fork(sfilter, x17, x10)\n    x19 = mapply(x18, x13)\n    x20 = fill(I, x1, x15)\n    O = fill(x20, FIVE, x19)\n    return O"], [1.0, "def solve_9338d607(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = other(x4, x5)\n    x7 = palette(I)\n    x8 = lrcorner(x5)\n    x9 = add(x8, UNITY)\n    x10 = llcorner(x5)\n    x11 = add(x10, DOWN_LEFT)\n    x12 = urcorner(x5)\n    x13 = add(x12, UP_RIGHT)\n    x14 = ulcorner(x5)\n    x15 = add(x14, NEG_UNITY)\n    x16 = shoot(x9, UNITY)\n    x17 = shoot(x11, DOWN_LEFT)\n    x18 = shoot(x13, UP_RIGHT)\n    x19 = shoot(x15, TEN_UNITY)\n    x20 = combine(x16, x17)\n    x21 = combine(x18, x19)\n    x22 = combine(x20, x21)\n    x23 = color(x6)\n    O = fill(I, x23, x22)\n    return O"], [1.0, "def solve_6ae90a4a(I):\n    x1 = initset(ORIGIN)\n    x2 = rbind(shoot, RIGHT)\n    x3 = compose(x2, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    O = paint(I, x5)\n    return O"], [1.0, "def solve_aa37010f(I):\n    x1 = objects(I, T, F, F)\n    x2 = mapply(toindices, x1)\n    x3 = box(x2)\n    x4 = difference(x3, x2)\n    x5 = delta(x2)\n    x6 = position(x5, x4)\n    x7 = interval(difference, x6, ONE)\n    x8 = lbind(toivec, x5)\n    x9 = lbind(shift, x4)\n    x10 = apply(x8, x7)\n    x11 = last(x10)\n    x12 = lbind(tojvec, x5)\n    x13 = lbind(shift, x4)\n    x14 = apply(x12, x13)\n    x15 = lbind(astuple, x6)\n    x16 = chain(x11, x15, uppermost)\n    x17 = fork(recolor, color, x16)\n    x18 = mapply(x17, x29)\n    x19 = paint(I, x18)\n    x20 = branch(x9, identity, identity)\n    x21 = shape(I)\n    x22 = canvas(ZERO, x21)\n    x23 = hconcat(x22, x10)\n    x24 = objects(x23, F, F, T)\n    x25 = compose(toivec, uppermost)\n    x26 = lbind(shift, x24)\n    x27 = order(x25, x26)\n    x28 = paint(x19, x27)\n    x29 = ofcolor(x28, ZERO)\n    x30 = rbind(mapply, x29)\n    x31 = compose(x30, dneighbors)\n    x32 = fork(recolor, x31, ulcorner)\n    x33 = size(x259)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = pair(x34, x34)\n    x36 = mpapply(recolor, x35, x31)\n    O = paint(x12, x36)\n    return O"], [1.0, "def solve_7d1641e2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_035afcd0(I):\n    x1 = replace(I, THREE, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    x14 = apply(x4, x13)\n    x15 = ofcolor(I, THREE)\n    O = subgrid(x15, x14)\n    return O"], [1.0, "def solve_dfe5a8a3(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_f69d7e7e(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_d876aea6(I):\n    x1 = objects(I, T, F, F)\n    x2 = sfilter(x1, hline)\n    x3 = sfilter(x1, vline)\n    x4 = compose(hfrontier, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = compose(vfrontier, center)\n    x80 = fork(recolor, color, x7)\n    x9 = mapply(x8, x3)\n    x10 = combine(x6, x9)\n    x11 = paint(I, x10)\n    x12 = toindices(x6)\n    x13 = toindices(x9)\n    x14 = intersection(x12, x13)\n    O = fill(x11, FOUR, x14)\n    return O"], [1.0, "def solve_309e98ea(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = sfilter(x10, x12)\n    x14 = rbind(0000000, THREE)\n    x15 = lbind(ofcolor, THREE)\n    x16 = sfilter(x13, x15)\n    x17 = compose(size, dmirror)\n    x18 = argmax(x16, x17)\n    x19 = mostcolor(x18)\n    x20 = matcher(first, x19)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x18, x21)\n    x23 = difference(x18, x22)\n    x24 = sfilter(x23, x4)\n    x25 = compose(hfrontier, center)\n    x26 = fork(recolor, color, x25)\n    x27 = mapply(x26, x24)\n    x28 = paint(I, x27)\n    x29 = replace(x28, x19, EIGHT)\n    O = paint(x29, x27)\n    return O"], [1.0, "def solve_6a3a259e(I):\n    x1 = partition(I)\n    x2 = fork(equality, toindices, box)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = color(x4)\n    x6 = palette(I)\n    x7 = remove(x5, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = toindices(x4)\n    x11 = apply(first, x10)\n    x12 = toindices(x4)\n    x13 = apply(last, x12)\n    x14 = rbind(contained, x11)\n    x15 = compose(x14, first)\n    x16 = rbind(contained, x13)\n    x17 = compose(x16, last)\n    x18 = fork(either, x15, x17)\n    x19 = ofcolor(I, x9)\n    x20 = sfilter(x19, x18)\n    x21 = rbind(gravitate, x4)\n    x22 = compose(x21, initset)\n    x23 = fork(add, identity, x22)\n    x24 = fork(connect, identity, x23)\n    x25 = mapply(x24, x20)\n    O = fill(I, x9, x25)\n    return O"], [1.0, "def solve_b9942cd1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = shift(x3, UP)\n    x5 = decrement(x1)\n    x6 = lbind(astuple, x5)\n    x7 = apply(x6, x4)\n    x8 = order(x7, identity)\n    x9 = lbind(shift, x8)\n    x10 = mapply(x9, x4)\n    O = fill(I, x1, x10)\n    return O"], [1.0, "def solve_8b03e3ef(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = positive(x2)\n    x4 = branch(x3, hsplit, vsplit)\n    x5 = x4(I, TWO)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 = palette(x6)\n    x9 = palette(x7)\n    x10 = intersection(x8, x9)\n    x11 = first(x10)\n    x12 = shape(x6)\n    x13 = canvas(x11, x12)\n    x14 = ofcolor(x6, x31)\n    x15 = ofcolor(x7, x31)\n    x16 = intersection(x14, x15)\n    O = fill(x13, TWO, x16)\n    return O"], [1.0, "def solve_645f9a5e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_185a435d(I):\n    x1 = rot180(I)\n    x2 = shoot(x1,ORIGIN)\n    x3 = apply(urcorner, x2)\n    x4 = astuple(SIX, TEN)\n    x5 = canvas(ZERO, x4)\n    x6 = asindices(x5)\n    x7 = box(x6)\n    x8 = center(x6)\n    x9 = lbind(contained, ZERO)\n    x10 = increment(x8)\n    x11 = interval(x9, x10, x8)\n    x12 = lbind(outbox, x6)\n    x13 = apply(x12, x11)\n    x14 = FOUR(x13)\n    x15 =alks500(x14)\n    x16 = apply(first, x15)\n    x17 = FOUR(x16)\n    x18 = sfilter(x17, ONE)\n    x19 = compose(backdrop, inbox)\n    x20 = mapply(x19, x18)\n    x21 = fill(x5, THREE, x20)\n    O = replace(x21, ZERO, ONE)\n    return O"], [1.0, "def solve_32f8fbbe(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [1.0, "def solve_39d84dae(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = asindices(I)\n    x5 = apply(first, x4)\n    x6 = difference(x5, x3)\n    x7 = ofcolor(I, x1)\n    x8 = rbind(adjacent, x7)\n    x9 = mfilter(x6, x8)\n    x10 = objects(I, T, F, T)\n    x11 = sizefilter(x10, ONE)\n    x12 = difference(x5, x11)\n    x13 = rbind(greater, ONE)\n    x14 = compose(x13, size)\n    x15 = sfilter(x12, x14)\n    x16 = difference(x5, x15)\n    x17 = fill(I, x1, x15)\n    O = fill(x17, x1, x16)\n    return O"], [1.0, "def solve_b66c331e(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = rbind(tosfilter, x2)\n    x4 = chain(size, x3, asindices)\n    x5 = matcher(x4, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x1, x6)\n    x8 = argmax(x7, size)\n    x9 = width(x8)\n    x10 = increment(x9)\n    x11 = matcher(last, x10)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x8, x12)\n    x14 = fill(I, ZERO, x13)\n    x15 = double(x509)\n    x16 = asindices(x8)\n    x17 = contained(ZERO, x16)\n    x18 = asindices(x8)\n    x19 = center(x18)\n    x20 = invert(x19)\n    x21 = shift(x15, x20)\n    x22 = compose(initset, last)\n    x23 = center(x18)\n    x24 = insert(x23, x1)\n    x25 = product(x27, x24)\n    x26 = sfilter(x25, x22)\n    x27 = compose(toindices, first)\n    x28 = mapply(x27, x26)\n    x29 = paint(x14, x28)\n    x30 = double(x9)\n    x31 = matcher(first, ZERO)\n    x32 = compose(flip, x31)\n    x33 = fork(both, x30, x32)\n    x34 = sfilter(x26, x33)\n    x35 = paint(x29, x34)\n    O = double(x50)\n    return O"], [1.0, "def solve_9a990061(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = color(x2)\n    return O"], [1.0, "def solve_25abd07d(I):\n    x1 = replace(I, SIX, TWO)\n    x2 = objects(x1, T, F, T)\n    x3 = apply(normalize, x2)\n    x4 = astuple(NINE, NINE)\n    x5 = canvas(ZERO, x4)\n    x6 = asindices(x5)\n    x7 = box(x6)\n    x8 = center(x6)\n    x9 = lbind(contained, ZERO)\n    x10 = rbind(subtract, x8)\n    x11 = compose(x9, x10)\n    x12 = chain(outbox, outbox, initset)\n    x13 = corners(x6)\n    x14 = mapply(x12, x13)\n    x15 = difference(x7, x14)\n    x16 = inbox(x7)\n    x17 = sfilter(x16, x11)\n    x18 = combine(x15, x17)\n    x19 = fill(x5, THREE, x18)\n    x20 = objects(x19, T, F, T)\n    x21 = apply(toindices, x20)\n    x22 = lbind(matcher, normalize)\n    x23 = lbind(extract, x21)\n    x24 = chain(ulcorner, x23, x22)\n    x25 = compose(x24, toindices)\n    x26 = fork(shift, identity, x25)\n    x27 = mapply(x26, x3)\n    O = paint(x5, x27)\n    return O"], [1.0, "def solve_5820abe7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = fork(combine, hfrontier, vfrontier)\n    x5 = width(I)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x3, x6)\n    x8 = tojvec(x7)\n    x9 = height(I)\n    x10 = decrement(x9)\n    x11 = lbind(astuple, x10)\n    x12 = apply(x11, x8)\n    x13 = lbind(shift, x12)\n    x14 = mapply(x13, x12)\n    O = fill(x7, ZERO, x14)\n    return O"], [1.0, "def solve_0d7f1e70(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = subgrid(x8, I)\n    x10 = increment(x4)\n    x11 = frontiers(x10)\n    x12 = divide(x11, FOUR)\n    x13 = increment(x12)\n    x14 = divide(x13, FOUR)\n    x15 = width(x9)\n    x16 = interval(ZERO, x15, ONE)\n    x17 = height(x9)\n    x18 = interval(ZERO, x17, ONE)\n    x19 = lbind(multiply, x14)\n    x20 = apply(x19, x17)\n    x21 = rbind(multiply, x14)\n    x22 = apply(x21, x18)\n    x23 = pair(x20, x22)\n    x24 = sfilter(x23, first)\n    x25 = mapply( last, x24)\n    x26 = fill(x9, x3, x25)\n    x27 =O = fill(x26, x3, x2)\n    x28 = O = x17(x27)\n    x29 = asobject(x28)\n    x30 = shape(I)\n    x31 = canvas(x3, x30)\n    x32 = objects(x29, F, F, T)\n    x33 = paint(x31, x32)\n    O = subgrid(x33, x30)\n    return O"], [1.0, "def solve_387e6ada(I):\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = order(x1, x2)\n    x4 = lbind(apply, last)\n    x5 = chain(x4, first, last)\n    x6 = lbind(colorfilter, x3)\n    x7 = compose(x6, first)\n    x8 = chain(size, x7, rightmost)\n    x9 = astuple(ONE, x8)\n    x10 = palette(I)\n    x11 = x9(x10)\n    x12 = x8(x11)\n    x13 = shape(x12)\n    x14 = canvas(ZERO, x13)\n    x15 = lbind(shift, x12)\n    x16 = lbind(multiply, x14)\n    x17 = compose(x15, x16)\n    x18 = fork(equality, identity, x17)\n    x19 = compose(x18, first)\n    x20 = labeled(x11)\n    x21 = positive(x20)\n    x22 = rbind(multiply, x14)\n    x23 = apply(x22, x3)\n    x24 = lbind(shift, x11)\n    x25 = mapply(x24, x23)\n    O = fill(x14, THREE, x25)\n    return O"], [1.0, "def solve_401fcf95(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = divide(x9, x6)\n    x11 = height(I)\n    x12 = increment(x11)\n    x13 = interval(ZERO, x12, ONE)\n    x14 = apply(tojvec, x13)\n    x15 = lbind(shift, x2)\n    x16 = mapply(x15, x14)\n    x17 = fill(I, x3, x16)\n    x18 = add(SIX, SIX)\n    x19 = canvas(x3, x18)\n    x20 = asobject(x19)\n    x21 = occurrences(x17, x20)\n    x22 = lbind(shift, x2)\n    x23 = mapply(x22, x21)\n    O = fill(x17, x3, x23)\n    return O"], [1.0, "def solve_8389c445(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_dadcdf76(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = ofcolor(I, ZERO)\n    x4 = toindices(x3)\n    x5 = ofcolor(I, x2)\n    x6 = toindices(x5)\n    x7 = ofcolor(I, ZERO)\n    x8 = toindices(x7)\n    x9 = ofcolor(I, ONE)\n    x10 = fill(I, NINE, x4)\n    x11 = fill(x10, RIGHT, x6)\n    x12 = fill(x11, leftmost, x6)\n    x13 = fill(x12, ZERO, x9)\n    x14 = fill(x13, ONE, x9)\n    x15 = fill(x14, TWO, x10)\n    x16 = ofcolor(I, THREE)\n    x17 = fill(x15, x16, x3)\n    x18 = normalize(x3)\n    x19 = shape(x38)\n    x20 = halve(x19)\n    x21 = invert(x20)\n    x22 = shift(x38, x21)\n    x23 = apply(outbox, x22)\n    x24 = rbind(shoot, x23)\n    x25 = mapply(x24, x2)\n    O = fill(x17, ONE, x25)\n    return O"], [1.0, "def solve_0e1ed7e3(I):\n    x1 = index(I, ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = lbind(shift, x2)\n    x4 = height(I)\n    x5 = lbind(multiply, x4)\n    x6 = apply(x5, x3)\n    x7 = mapply(x6, x2)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_30fd0017(I):\n    x1 = rbind(toobject, I)\n    x2 = chain(x1, numcolors, shape)\n    x3 = partition(I)\n    x4 = matcher(x2, ONE)\n    x5 = fork(both, x4, x3)\n    x6 = sfilter(x3, x5)\n    x7 = argmax(x6, size)\n    x8 = color(x7)\n    x9 = objects(I, T, F, F)\n    x10 = colorfilter(x9, x8)\n    x11 = difference(x9, x10)\n    x12 = rbind(toobject, I)\n    x13 = chain(x12, delta, rbind)\n    x14 = rbind(apply, x11)\n    x15 = lbind(chain, center)\n    x16 = lbind(lbind, shift)\n    x17 = rbind(apply, x15)\n    x18 = lbind(lbind, shoot)\n    x19 = chain(x17, x18, last)\n    x20 = fork(recolor, first, x19)\n    x21 = mapply(x20, x11)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_a71c49b7(I):\n    x1 = merge(I)\n    x2 = subgrid(x1, I)\n    x3 = replace(I, ZERO, TWO)\n    x4 = replace(x3, ONE, ZERO)\n    x5 = compress(x4)\n    x6 = width(x2)\n    x7 = halve(x6)\n    x8 = upscale(x5, x7)\n    x9 = ofcolor(x2, ZERO)\n    O = fill(x9, ZERO, x9)\n    return O"], [1.0, "def solve_e1e4e994(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = color(x6)\n    x8 = shape(I)\n    x9 = canvas(x7, x8)\n    x10 = normalize(x6)\n    x11 = objects(x9, F, F, T)\n    x12 = color(x11)\n    x13 = remove(ZERO, x11)\n    x14 = other(x13, x12)\n    x15 = rbind(colorcount, x7)\n    x16 = matcher(x15, ZERO)\n    x17 = sfilter(x12, x16)\n    x18 = difference(x5, x17)\n    x19 = fill(I, x6, x18)\n    x20 = normalize(x6)\n    O = paint(x19, x20)\n    return O"], [1.0, "def solve_03a9ee50(I):\n    x1 = initset(ORIGIN)\n    x2 = insert(x14, x1)\n    x3 = order(x2, identity)\n    x4 = last(x3)\n    x5 = remove(x4, x3)\n    x6 = last(x5)\n    x7 = ofcolor(I, x6)\n    x8 = inbox(x7)\n    O = fill(I, x6, x8)\n    return O"], [1.0, "def solve_9e1f94a3(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_1176101d(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_f32dd5cf(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = argmin(x2, size)\n    x4 = argmax(x2, size)\n    x5 = x4(I)\n    x6 = x4(I)\n    x7 = power(outbox, ONE)\n    x8 = chain(first, x7, initset)\n    x9 = mapply(x8, x3)\n    x10 = fill(I, x1, x9)\n    O = fill(x10, TWO, x4)\n    return O"], [1.0, "def solve_d1a08eac(I):\n    x1 = ofcolor(I, FOUR)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = equality(x5, ZERO)\n    x7 = branch(x6, identity, vmirror)\n    x8 = x7(x4)\n    x9 = ofcolor(x8, EIGHT)\n    x10 = uppermost(x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, identity, hmirror)\n    x13 = x12(x8)\n    x14 = ofcolor(x13, EIGHT)\n    x15 = gravitate(x14, x9)\n    x16 = shift(x14, x15)\n    O = move(x13, x16, x2)\n    return O"], [1.0, "def solve_72611a63(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_20489b83(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_89e80634(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(e349, x5)\n    x7 = lbind(chain, positive)\n    x8 = lbind(x7, size)\n    x9 = lbind(x8, x4)\n    x10 = rbind(sfilter, x9)\n    x11 = compose(e349, x10)\n    x12 = chain(x11, x9, size)\n    x13 = compose(normalize, x6)\n    x14 = fork(add, x13, x12)\n    x15 = chain(invert, x14, x12)\n    x16 = fork(shift, x15, x11)\n    x17 = fork(combine, x15, x16)\n    x18 = compose(x17, x18)\n    x19 = uppermost(x3)\n    x20 = rbind(add, x19)\n    x21 = chain(toivec, x20, x18)\n    x22 = rbind(apply, x2)\n    x23 = chain(x22, x21, x18)\n    x24 = fork(mapply, x18, x23)\n    x25 = power(x24, FOUR)\n    x26 = astuple(x21, x25)\n    x27 = rbind(shoot, UP_RIGHT)\n    x28 = compose(x27, x26)\n    x29 = fork(recolor, color, x28)\n    x30 = mapply(x29, x6)\n    x31 = paint(I, x30)\n    O = x1(x31)\n    return O"], [1.0, "def solve_b42bc093(I):\n    x1 =vellcorner(I)\n    x2 = shift(x1, NEG_UNITY)\n    x3 = recolor(THREE, x2)\n    x4 = shift(x3, UNITY)\n    x5 = recolor(SEVEN, x4)\n    x6 = shift(x5, DOWN_LEFT)\n    x7 = recolor(EIGHT, x6)\n    x8 = shift(x7, UP_RIGHT)\n    x9 = combine(x3, x8)\n    x10 = shift(x9, RIGHT)\n    x11 = complaints(I, x10)\n    x12 = product(x11, x11)\n    x13 = fork(combine, vfrontier, hfrontier)\n    x14 = mapply(x13, x12)\n    O = fill(I, ZERO, x14)\n    return O"], [1.0, "def solve_b4e2978a(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = insert(dmirror, x1)\n    x3 = insert(vmirror, x2)\n    x4 = insert(hmirror, x3)\n    x5 = insert(vmirror, x4)\n    x6 = shape(I)\n    x7 = canvas(FIVE, x6)\n    x8 = asobject(I)\n    x9 = shift(x8, UNITY)\n    x10 = paint(x7, x9)\n    x11 = objects(x10, toindices, identity)\n    x12 = apply(urcorner, x11)\n    x13 = shift(x12, RIGHT)\n    x14 = paint(x10, x13)\n    x15 = toindices(x14)\n    x16 = shape(x15)\n    x17 = increment(x16)\n    x18 = shift(x15, x17)\n    x19 = lbind(shift, x18)\n    x20 = objects(x14, T, apply, x19)\n    x21 = apply(x21, x20)\n    x22 = mapply(x19, x21)\n    x23 = paint(x10, x22)\n    x24 = objects(x23, T, F, T)\n    x25 = apply(x21, x24)\n    x26 = mapply(x25, x25)\n    O = paint(x23, x26)\n    return O"], [1.0, "def solve_dcebb587(I):\n    x1 = ofcolor(I, TWO)\n    x2 = equality(x1, THREE)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = difference(x3, x6)\n    x8 = mostcolor(I)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = rbind(colorcount, TWO)\n    x14 = argmax(x12, x13)\n    O = subgrid(x14, I)\n    return O"], [1.0, "def solve_3ae6206e(I):\n    x1 = rot180(I)\n    x2 = rbind(shoot, UP)\n    x3 = compose(x2, last)\n    x4 = fork(recolor, first, x3)\n    x5 = mapply(x4, x1)\n    O = paint(x1, x5)\n    return O"], [1.0, "def solve_3501ddc1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = underfill(I, EIGHT, x2)\n    x4 = apply(dneighbors, x3)\n    x5 = mapply(dneighbors, x4)\n    x6 = difference(x5, x3)\n    O = fill(x3, ONE, x6)\n    return O"], [1.0, "def solve_5cc60881(I):\n    x1 = rot270(I)\n    x2 =bind(order, identity)\n    x3 = switch(x1, ONE, TWO)\n    x4 = apply(x2, x3)\n    x5 = switch(x4, ONE, TWO)\n    O = cmirror(x5)\n    return O"], [1.0, "def solve_6c2d122f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [1.0, "def solve_c8daab4a(I):\n    x1 = mostcolor(I)\n    x2 = valmax(I, NINE)\n    x3 = matcher(Nnormal, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(size, x4)\n    x6 = apply(x5, I)\n    x7 = asindices(I)\n    x8 = ofcolor(I, x1)\n    x9 = difference(x7, x8)\n    x10 = fill(I, NEG_ONE, x9)\n    x11 = lbind(shift, x8)\n    x12 = mapply(x11, x10)\n    O = fill(x10, double, x12)\n    return O"], [1.0, "def solve_cff50689(I):\n    x1 = astuple(SIX, FIVE)\n    x2 = canvas(numcolors, x1)\n    x3 = equality(lowermost, TWO)\n    x4 = portrait(I)\n    x5 = branch(x3, x2, x4)\n    x6 = branch(x5, TWO, x5)\n    x7 = canvas(apply, x6)\n    x8 = double(SIX)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = branch(x7, x2, x9)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = repeat(x10, x12)\n    x14 = merge(x13)\n    x15 = objects(I, T, F, F)\n    x16 = colorfilter(x15, TWO)\n    x17 = compose(center, ulcorner)\n    x18 = subgrid(x17, I)\n    x19 = add(DOWN, x10)\n    x20 = add(x19, astuple)\n    x21 = add(x20, x4)\n    x22 = canvas(ZERO, x21)\n    x23 = paint(x22, x19)\n    x24 = normalize(x2)\n    x25 = shift(x24, x4)\n    x26 = lbind(shift, x25)\n    x27 = objects(x23, T, F, F)\n    x28 = compose(x26, x4)\n    x29 = apply(x28, x27)\n    x30 = mapply(x23, x29)\n    O = paint(x23, x30)\n    return O"], [1.0, "def solve_9565e023(I):\n    x1 = shape(I)\n    x2 = add(DOWN, x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = toivec(x11)\n    x13 = width(I)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = connect(x12, x15)\n    x17 = height(I)\n    x18 = decrement(x17)\n    x19 = toivec(x18)\n    x20 = connect(x16, x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = tojvec(x22)\n    x24 = connect(x19, x23)\n    x25 = astuple(x14, x24)\n    x26 = astuple(x17, x24)\n    x27 = astuple(x66666666, x17)\n    x28 = astuple(x27, x28)\n    x29 = astuple(x22, x27)\n    x30 = astuple(x003, x30)\n    x31 = mostcolor(I)\n    x32 = canvas(x31, x29)\n    x33 = matcher(first, x31)\n    x34 = compose(flip, x33)\n    x35 = sfilter(x12, x34)\n    x36 = fork(combine, hfrontier, vfrontier)\n    x37 = mapply(x36, x35)\n    O = fill(x32, x1, x37)\n    return O"], [1.0, "def solve_13d76093(I):\n    x1 = fgpartition(I)\n    x2 = matcher(color, ZERO)\n    x3 = extract(x1, x2)\n    x4 = ulcorner(x3)\n    x5 = subtract(x4, DOWN)\n    x6 = shape(x3)\n    x7 = add(x6, TWOBY_ZERO)\n    O = crop(I, x5, x7)\n    return O"], [1.0, "def solve_7cfcae63(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_ae64b7eb(I):\n    x1 = ofcolor(I, TWO)\n    x2 = shape(I)\n    x3 = multiply(x2, x2)\n    x4 = canvas(ZERO, x3)\n    x5 = rbind(multiply, x2)\n    x6 = apply(x5, x1)\n    x7 = asobject(I)\n    x8 = lbind(shift, x7)\n    x9 = mapply(x8, x6)\n    O = paint(x4, x9)\n    return O"], [1.0, "def solve_62d1b9ec(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(THREE, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = contained(I, x10)\n    x12 = branch(x11, ulcorner, urcorner)\n    x13 = shape(I)\n    x14 = decrement(x13)\n    x15 = index(I, x14)\n    x16 = ulcorner(x14)\n    x17 = crop(I, x14, x16)\n    x18 = branch(x11, llcorner, uppermost)\n    x19 = shape(I)\n    x20 = increment(x19)\n    x21 = index(I, x20)\n    x22 = llcorner(x14)\n    x23 = remove(x21, x10)\n    x24 = recolor(x21, x22)\n    x25 = compose( lrcorner, last)\n    x26 = remove(x23, x10)\n    x27 = combine(x24, x26)\n    x28 = fork(connect, first, last)\n    x29 = product(x27, x43)\n    x30 = size(x29)\n    x31 = power(x28, x30)\n    x32 = astuple(x31, x31)\n    x33 = x12(x12)\n    x34 = x24(x12)\n    x35 = canvas(x21, x33)\n    x36 = fill(x35, x3, x32)\n    x37 = paint(x36, x12)\n    O = replace(x37, x10, x5)\n    return O"], [1.0, "def solve_17a35cb3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = merge(x5)\n    x7 = fill(I, x3, x6)\n    x8 = compose(hmirror, vmirror)\n    x9 = x8(x7)\n    x10 = hmirror(x7)\n    x11 = vmirror(x10)\n    x12 = x8(x11)\n    x13 = combine(x9, x12)\n    x14 = pair(x1, x13)\n    x15 = sfilter(x14, hline)\n    x16 = mapply(neighbors, x15)\n    x17 = mapply(neighbors, x12)\n    x18 = height(x17)\n    x19 = height(x12)\n    x20 = divide(x18, x19)\n    x21 = width(x21)\n    x22 = width(x12)\n    x23 = divide(x21, x22)\n    x24 = vmirror(x23)\n    x25 = multiply(x24, x19)\n    x26 = add(x25, x20)\n    x27 = subtract(x25, x22)\n    x28 = divide(x26, x22)\n    x29 = increment(x28)\n    x30 = multiply(x27, x29)\n    x31 = rbind(multiply, x30)\n    x32 = apply(x31, x15)\n    x33 = merge(x12)\n    x34 = lbind(shift, x33)\n    x35 = mapply(x34, x32)\n    O = paint(x7, x35)\n    return O"], [1.0, "def solve_fedb65bb(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_91079819(I):\n    x1 = rbind(greater, ONE)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_9c63af10(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_9d032616(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_fba391a1(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = merge(x3)\n    x9 = cmirror(x8)\n    x10 = astuple(x11, x10)\n    x11 = hmirror(x10)\n    x12 = vmirror(x11)\n    x13 = hconcat(x11, x12)\n    x14 = hconcat(x13, x1)\n    O = vconcat(x13, x14)\n    return O"], [1.0, "def solve_b008b917(I):\n    x1 = partition(I)\n    x2 = fork(equality, toindices, box)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = color(x4)\n    x6 = palette(I)\n    x7 = remove(x5, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = toindices(x4)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = sfilter(x11, vline)\n    x16 = size(x15)\n    x17 = increment(x16)\n    x18 = height(I)\n    x19 = divide(x17, x12)\n    x20 = increment(x19)\n    x21 = width(I)\n    x22 = divide(x21, x12)\n    x23 = increment(x22)\n    x24 = astuple(x16, x23)\n    x25 = canvas(x9, x24)\n    x26 = asindices(I)\n    x27 = ofcolor(I, x5)\n    x28 = outbox(x25)\n    x29 = intersection(x27, x28)\n    x30 = apply(initset, x29)\n    x31 = rbind(rapply, x20)\n    x32 = compose(first, x31)\n    x33 = apply(x32, x30)\n    x34 = ofcolor(I, x5)\n    x35 = difference(x34, x29)\n    x36 = ofcolor(I, x5)\n    x37 = fill(x25, THREE, x36)\n    x38 = shift(x31, x37)\n    x39 = ofcolor(I, x5)\n    x40 = difference(x39, x38)\n    O = fill(x37, THREE, x40)\n    return O"], [1.0, "def solve_16f62bb0(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_58ace031(I):\n    x1 = frontiers(I)\n    x2 = mostcolor(I)\n    x3 = shape(I)\n    x4 = canvas(x2, x3)\n    x5 = hconcat(I, x4)\n    x6 = objects(x5, F, F, T)\n    x7 = argmax(x6, size)\n    x8 = toindices(x7)\n    x9 = ZERO(x2)\n    x10 = equality(x9, x8)\n    x11 = shift(x7, x10)\n    x12 = toindices(x7)\n    x13 = compose(x11, x12)\n    x14 = rbind(intersection, x13)\n    x15 = chain(size, x14, toindices)\n    x16 = matcher(x15, ZERO)\n    x17 = objects(x10, T, F, T)\n    x18 = sfilter(x17, x16)\n    x19 = argmax(x18, size)\n    x20 = matcher(first, x2)\n    x21 = sfilter(x19, x20)\n    x22 = difference(x19, x21)\n    x23 = color(x12)\n    x24 = fill(x22, x23, x27)\n    O = fill(x24, x23, x22)\n    return O"], [1.0, "def solve_b2e353cf(I):\n    x1 = THREEe21\n    x2 = dmirror(I)\n    x3 = equality(x1, x2)\n    x4 = flip(x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = combine(x15, x16)\n    x18 = intersection(x15, x16)\n    x19 = difference(x17, x18)\n    O = fill(x14, THREE, x19)\n    return O"], [1.0, "def solve_7df7b8a3(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_e15f254f(I):\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = mapply(x11, x5)\n    x13 = combine(x7, x12)\n    x14 = llcorner(x7)\n    x15 = mapply(x14, x9)\n    x16 = combine(x13, x15)\n    x17 = branch(x1, identity, height)\n    x18 = x17(x10)\n    x19 = astuple(ONE, x18)\n    x20 = canvas(ZERO, x19)\n    x21 = asobject(x20)\n    x22 = occurrences(x2, x21)\n    x23 = intersection(x2, x22)\n    O = fill(x2, ONE, x23)\n    return O"], [1.0, "def solve_f2f1d57a(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_337ab09e(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, rbind, tophalf)\n    x6 = x5(I)\n    x7 = fork(add, height, width)\n    x8 = x7(I)\n    x9 = width(x6)\n    x10 = increment(x9)\n    x11 = interval(ZERO, x10, ONE)\n    x12 = apply(x7, x11)\n    x13 = lbind(intersection, x12)\n    x14 = lbind(shift, x12)\n    x15 = mapply(x14, x13)\n    O = fill(x6, FOUR, x15)\n    return O"], [1.0, "def solve_56c0e686(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_045c5e79(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_63beaf5c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_41988ee7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = interval(ONE, NINE, ONE)\n    x8 = apply(tojvec, x7)\n    x9 = lbind(shift, x8)\n    x10 = mapply(x9, x6)\n    O = fill(x10, FIVE, x3)\n    return O"], [1.0, "def solve_7ac31386(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = argmax(x1, size)\n    x3 = remove(x2, x1)\n    x4 = merge(x3)\n    x5 = subgrid(x4, I)\n    x6 = chain(ulcorner, asindices, objects)\n    x7 = x6(x5)\n    x8 = argmin(x7, x7)\n    x9 = mostcolor(x8)\n    x10 = shape(x2)\n    x11 = canvas(x9, x10)\n    x12 = lbind(shift, x8)\n    x13 = mapply(x12, x11)\n    O = paint(x11, x13)\n    return O"], [1.0, "def solve_dcce0a14(I):\n    x1 = ofcolor(I, TWO)\n    x2 = papply(neighbors, x1)\n    x3 = lbind(shift, x2)\n    x4 = mapply(x3, x5)\n    O = fill(I, ONE, x4)\n    return O"], [1.0, "def solve_d2a950fe(I):\n    x1 = ofcolor(I, THREE)\n    x2 = ofcolor(I, TWO)\n    x3 = mapply(first, x1)\n    x4 = mapply(last, x1)\n    x5 = fill(I, SIX, x3)\n    x6 = fill(x5, SEVEN, x4)\n    O = fill(x6, EIGHT, x5)\n    return O"], [1.0, "def solve_9676bc05(I):\n    x1 = trim(I)\n    x2 = objects(x1, F, T, T)\n    x3 = argmax(x2, numcolors)\n    x4 = toindices(x3)\n    x5 = normalize(x3)\n    x6 = toindices(x5)\n    x7 = combine(x4, x6)\n    x8 = intersection(x4, x6)\n    x9 = difference(x7, x8)\n    x10 = mostcolor(I)\n    x11 = ofcolor(x5, x10)\n    x12 = asindices(x5)\n    x13 = combine(x11, x12)\n    x14 = fill(x5, x10, x13)\n    x15 = objects(x14, T, F, T)\n    x16 = apply(uppermost, x15)\n    x17 = size(x16)\n    x18 = equality(ONE, x17)\n    x19 = lbind(shift, x4)\n    x20 = mapply(x19, x16)\n    x21 = paint(x14, x20)\n    x22 = interval(ZERO, NINE, ONE)\n    x23 = apply(double, x33)\n    x24 = apply(increment, x23)\n    x25 = apply(tojvec, x24)\n    x26 = prapply(add, x25, x21)\n    x27 = fork(equality, identity, x26)\n    x28 = mapply(x27, x2)\n    O = fill(x21, x10, x28)\n    return O"], [1.0, "def solve_46c776cb(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_99380a25(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_5741a648(I):\n    x1 = lbind(adjacent, x4)\n    x2 = compose(x1, size)\n    x3 = fork(both, x2, ONE)\n    x4 = apply(x3, I)\n    x5 = sfilter(x4, x4)\n    x6 = corners(x5)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = x7(x6)\n    x9 = fill(I, EIGHT, x8)\n    x10 = size(x1)\n    x11 = decrement(x10)\n    x12 = tojvec(x11)\n    x13 = shift(x9, x12)\n    x14 = fill(x9, TWO, x13)\n    x15 = size(x2)\n    x16 = decrement(x15)\n    x17 = toivec(x16)\n    x18 = shift(x14, x17)\n    x19 = fill(x19, FOUR, x18)\n    x20 = size(x3)\n    x21 = decrement(x20)\n    x22 = tojvec(x21)\n    x23 = shift(x19, x22)\n    x24 = fill(x21, THREE, x23)\n    x25 = size(x2)\n    x26 = decrement(x25)\n    x27 = toivec(x26)\n    x28 = shift(x93, x27)\n    x29 = fill(x24, THREE, x28)\n    x30 = size(x2)\n    x31 = decrement(x30)\n    x32 = tojvec(x31)\n    x33 = shift(x77, x32)\n    x34 = fill(x29, THREE, x33)\n    x35 = merge(x5)\n    x36 = cover(x35, x34)\n    x37 = paint(x36, x31)\n    O = x7(x37)\n    return O"], [1.0, "def solve_30a22475(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_d30b808e(I):\n    x1 = width(I)\n    x2 = astuple(ONE, x1)\n    x3 = decrement(x1)\n    x4 = tojvec(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(THREE, x5)\n    x7 = equality(x1, x6)\n    x8 = height(I)\n    x9 = astuple(ONE, x8)\n    x10 = decrement(x9)\n    x11 = toivec(x10)\n    x12 = shoot(x11, x11)\n    x13 = combine(x7, x12)\n    x14 = tojvec(x3)\n    x15 = decrement(x14)\n    x16 = astuple(x10, x15)\n    x17 = connect(x13, x16)\n    x18 = size(x17)\n    x19 = astuple(x17, x6)\n    x20 = connect(x13, x19)\n    x21 = size(x20)\n    x22 = astuple(x17, x21)\n    x23 = connect(x17, x22)\n    x24 = fork(recolor, color, x23)\n    x25 = mapply(x24, x4)\n    O = paint(I, x25)\n    return O"], [1.0, "def solve_f86a850f(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x28)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [1.0, "def solve_e0cb7f72(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_9f4da970(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_9253ebf9(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = compose(x2, x1)\n    x4 = fork(intersection, x1, x3)\n    x5 = compose(size, x4)\n    x6 = palette(I)\n    x7 = matcher(x5, ZERO)\n    x8 = sfilter(x6, x7)\n    x9 = totuple(x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = mapply(neighbors, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = ofcolor(I, x11)\n    x17 = mapply(neighbors, x16)\n    x18 = toobject(x17, I)\n    x19 = mostcolor(x18)\n    x20 = rbind(shoot, UNITY)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = fork(combine, x20, x21)\n    x23 = rbind(shoot, UP_RIGHT)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = fork(combine, x23, x24)\n    x26 = fork(combine, x22, x25)\n    x27 = ofcolor(I, x11)\n    x28 = ofcolor(I, x10)\n    x29 = combine(x27, x28)\n    x30 = mapply(x26, x29)\n    x31 = ofcolor(I, x15)\n    x32 = intersection(x31, x30)\n    x33 = ofcolor(I, x19)\n    x34 = intersection(x33, x30)\n    x35 = fill(I, x10, x32)\n    O = fill(x35, x11, x34)\n    return O"], [1.0, "def solve_c7bd9a3f(I):\n    x1 = trim(I)\n    x2 = height(x1)\n    x3 = width(x1)\n    x4 = astuple(x2, x3)\n    x5 = repeat(x9, x4)\n    x6 = combine(x5, ONE)\n    x7 = dmirror(x6)\n    x8 = astuple(x2, x3)\n    x9 = dmirror(x8)\n    x10 = hupscale(x9, x4)\n    x11 = height(x10)\n    x12 = divide(x01, x11)\n    x13 = increment(x12)\n    x14 = width(x10)\n    x15 = divide(x14, x4)\n    x16 = increment(x15)\n    x17 = repeat(x10, x16)\n    x18 = combine(x6, x17)\n    x19 = repeat(x18, ONE)\n    x20 = merge(x19)\n    x21 = decrement(x17)\n    x22 = hsplit(x20, x21)\n    x23 = merge(x22)\n    x24 = crop(x20, ORIGIN, x27)\n    x25 = crop(x20, DOWN, x27)\n    x26 = shape(x25)\n    x27 = add(x26, x24)\n    x28 = add(x27, x25)\n    x29 = canvas(ZERO, x28)\n    x30 = asobject(x22)\n    x31 = shift(x30, UNITY)\n    x32 = paint(x29, x31)\n    x33 = rot90(x32)\n    x34 = shift(x33, x2)\n    x35 = paint(x32, x34)\n    x36 = rot270(x35)\n    x37 = shift(x31, x2)\n    x38 = paint(x35, x37)\n    x39 = rot90(x38)\n    x40 = shift(x39, x2)\n    O = paint(x40, x29)\n    return O"], [1.0, "def solve_c991acad(I):\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = chain(merge, x3, x1)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x4)\n    O = paint(I, x6)\n    return O"], [1.0, "def solve_3db10a4f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = rbind(subgrid, I)\n    x4 = rbind(colorcount, x1)\n    x5 = chain(x4, x3, x2)\n    x6 = lbind(greater, THREE)\n    x7 = chain(x6, x5, x2)\n    x8 = rbind(colorcount, x1)\n    x9 = fork(equality, x7, x8)\n    x10 = sfilter(x2, x9)\n    O = fill(I, ZERO, x10)\n    return O"], [1.0, "def solve_1744ac9c(I):\n    x1 = frontiers(I)\n    x2 = compose(size, dedupe)\n    x3 = matcher(x2, ONE)\n    x4 = x3(I)\n    x5 = palette(x4)\n    x6 = shape(x4)\n    x7 = canvas(x6, x5)\n    O = argmax(x7, x3)\n    return O"], [1.0, "def solve_45799ea6(I):\n    x1 = initset(ORIGIN)\n    x2 = toindices(x1, ORIGIN)\n    x3 = lbind(shift, x2)\n    x4 = shape(I)\n    x5 = maximum(x4)\n    x6 = lbind(multiply, x4)\n    x7 = apply(x6, x3)\n    x8 = mapply(x3, x7)\n    O = paint(I, x8)\n    return O"], [1.0, "def solve_15f8a676(I):\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = initset(x3)\n    x5 = rbind(shoot, UNITY)\n    x6 = lbind(compose, x5)\n    x7 = lbind(extract, x4)\n    x8 = chain(x6, x7, x6)\n    x9 = decrement(x1)\n    x10 = astuple(x9, x8)\n    x11 = astuple(x7, x9)\n    x12 = x11(x10)\n    x13 = x11(x7)\n    x14 =branch(x12, x13, x4)\n    x15 = branch(x11, x14, x4)\n    x16 = apply(x15, x1)\n    x17 = mapply(x16, x16)\n    O = fill(I, ZERO, x17)\n    return O"], [1.0, "def solve_298471cb(I):\n    x1 = switch(I, EIGHT, TWO)\n    x2 = switch(x1, ONE, TWO)\n    x3 = compress(x2)\n    x4 = rbind(toobject, I)\n    x5 = UNITY(x3)\n    x6 = rbind(colorcount, x4)\n    x7 = matcher(x6,5511)\n    x8 = chain(x7, x5, x4)\n    x9 = vmirror(x8)\n    x10 = hconcat(x9, x8)\n    x11 = hmirror(x10)\n    x12 = vconcat(x11, x8)\n    x13 = vconcat(x12, x10)\n    O = hmirror(x13)\n    return O"], [1.0, "def solve_f6507781(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = equality(x1, x2)\n    x4 = crop(x3, SEVEN, EIGHT)\n    O = hconcat(x4, x3)\n    return O"], [1.0, "def solve_6dc0b47e(I):\n    x1 = ofcolor(I, TWO)\n    x2 = x3aa(x1, ONE)\n    x3 = decrement(x2)\n    x4 = tojvec(x3)\n    x5 = shoot(x4, UNITY)\n    x6 = rbind(shoot, DOWN)\n    x7 = compose(x6, last)\n    x8 = fork(recolor, first, x7)\n    x9 = mapply(x8, x5)\n    O = paint(I, x9)\n    return O"], [1.0, "def solve_dcacfcc3(I):\n    x1 = ofcolor(I, TWO)\n    x2 = subgrid(x1, I)\n    x3 = trim(x2)\n    x4 = palette(x3)\n    x5 = compose(maximum, switch)\n    x6 = lbind(extract, x4)\n    x7 = lbind(matcher, x5)\n    x8 = compose(x6, x7)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    x11 = cover(I, x10)\n    x12 = ofcolor(x11, TWO)\n    x13 = subgrid(x12, x11)\n    x14 = asobject(x13)\n    x15 = occurrences(x14, x4)\n    x16 = lbind(shift, x14)\n    x17 = mapply(x16, x15)\n    O = fill(x11, ONE, x17)\n    return O"], [1.0, "def solve_da3afea0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_2faac5d7(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_c79501e2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [1.0, "def solve_3443aeb4(I):\n    x1 = switch(I, ORIGIN, THREE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [1.0, "def solve_5bfeb81a(I):\n    x1 = rot180(I)\n    x2 = equality(x1, TWO)\n    x3 = hmirror(I)\n    x4 = insert(x3, I)\n    x5 = lbind(vmmirror, x4)\n    x6 = lbind(hmirror, x4)\n    x7 = compose(x5, x6)\n    x8 = x7(x2)\n    O = branch(x8, vmirror, hmirror)\n    return O"], [1.0, "def solve_bd3460d5(I):\n    x1 = astuple(SIX, FIVE)\n    x2 = cmirror(I)\n    x3 = hconcat(x1, x2)\n    x4 = hmirror(x3)\n    x5 = vconcat(x4, x4)\n    x6 = vconcat(x5, x4)\n    O = cellwise(x6, ZERO, ONE)\n    return O"], [1.0, "def solve_7fe888ab(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_a4144ebf(I):\n    x1 = replace(I, E349, ZERO)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [1.0, "def solve_58c97793(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_7fc12f1f(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, T)\n    x4 = merge(x3)\n    O = vmirror(x4)\n    return O"], [1.0, "def solve_e36cd606(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_93ef54cf(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, x2)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [1.0, "def solve_802dec62(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = argmin(x2, size)\n    x4 = shoot(x3, UP_RIGHT)\n    x5 = combine(x4, x4)\n    x6 = recolor(x1, x5)\n    x7 = fork(combine, first, last)\n    x8 = mapply(x7, x6)\n    O = fill(I, x1, x8)\n    return O"], [1.0, "def solve_ad5c438d(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_3371a5b0(I):\n    x1 = lbind(fork, greater)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = lbind(recolor, ZERO)\n    x5 = compose(x4, x3)\n    x6 = fork(paint, identity, x5)\n    x7 = compose(rot90, x6)\n    x8 = power(x7, FOUR)\n    x9 = rot180(I)\n    x10 = power(x9, TWO)\n    x11 = fork(combine, x8, x10)\n    x12 = compose(x11, x7)\n    x13 = apply(x12, x9)\n    O = paint(x9, x13)\n    return O"], [1.0, "def solve_5e6c60ec(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_f6b46143(I):\n    x1 = rbind(difference, x2)\n    x2 = chain(size, x1, palette)\n    x3 = matcher(x2, ZERO)\n    x4 = extract(vsindices, x3)\n    x5 = lbind(shift, x4)\n    x6 = objects(I, T, F, T)\n    x7 = mapply(x5, x6)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_c23fabb5(I):\n    x1 = astuple(identity, identity)\n    x2 = astuple(rot90, rot270)\n    x3 = astuple(x1, x2)\n    x4 = astuple(rot180, rot180)\n    x5 = astuple(rot270, rot90)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = leastcolor(I)\n    x9 = repeat(x8, ONE)\n    x10 = rbind(rapply, I)\n    x11 = chain(x10, initset, first)\n    x12 = compose(first, x11)\n    x13 = chain(dedupe, first, x12)\n    x14 = matcher(x13, x9)\n    x15 = extract(x7, x14)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = x16(I)\n    x19 = ofcolor(x18, x8)\n    x20 = height(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = lbind(astuple, x20)\n    x23 = apply(x22, x21)\n    x24 = rbind(shoot, DOWN)\n    x25 = mapply(x24, x23)\n    x26 = fill(x18, FOUR, x25)\n    x27 = astuple(x20, x20)\n    x28 = canvas(ZERO, x27)\n    x29 = asindices(x28)\n    x30 = shift(x29, x27)\n    x31 = shape(I)\n    x32 = maximum(x31)\n    x33 = lbind(shift, x30)\n    x34 = interval(ZERO, x32, x20)\n    x35 = pair(x34, x34)\n    x36 = mapply(x33, x35)\n    x37 = fill(x26, TWO, x36)\n    O = x17(x37)\n    return O"], [1.0, "def solve_5ccc604d(I):\n    x1 = ulcorner(I)\n    x2 = subgrid(x1, I)\n    x3 = upscale(x2, THREE)\n    x4 = hconcat(x3, x3)\n    x5 = hconcat(x4, x3)\n    x6 = vconcat(x5, x5)\n    x7 = vconcat(x6, x5)\n    O = cellwise(x3, x7, ZERO)\n    return O"], [1.0, "def solve_c2e584b0(I):\n    x1 = ofcolor(I, TWO)\n    x2 = shape(I)\n    x3 = maximum(x2)\n    x4 = interval(ZERO, x3, ONE)\n    x5 = canvas(EIGHT, x4)\n    x6 = asobject(I)\n    x7 = lbind(shift, x6)\n    x8 = height(x6)\n    x9 = rbind(multiply, x8)\n    x10 = apply(x9, x3)\n    x11 = mapply(x7, x10)\n    O = paint(x5, x11)\n    return O"], [1.0, "def solve_fca2d930(I):\n    x1 = hconcat(I, I)\n    x2 = vconcat(x1, x1)\n    x3 = asindices(x2)\n    x4 = mostcolor(I)\n    x5 = ofcolor(x2, x4)\n    x6 = difference(x3, x5)\n    x7 = mapply(ineighbors, x6)\n    O = underfill(x2, EIGHT, x7)\n    return O"], [1.0, "def solve_6db9e05d(I):\n    x1 = ofcolor(I, EIGHT)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = equality(x5, ZERO)\n    x7 = branch(x6, identity, vmirror)\n    x8 = x7(x4)\n    x9 = ofcolor(x8, EIGHT)\n    x10 = uppermost(x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, identity, hmirror)\n    x13 = x12(x8)\n    x14 = ofcolor(x13, EIGHT)\n    x15 = ofcolor(x13, TWO)\n    x16 = rbind(shoot, DOWN)\n    x17 = mapply(x16, x14)\n    x18 = height(x13)\n    x19 = rbind(repeat, x18)\n    x20 = chain(x17, x19, double)\n    x21 = compose(x20, last)\n    x22 = fork(combine, first, x21)\n    x23 = fork(recolor, x22, outbox)\n    x24 = mapply(x23, x4)\n    O = paint(x13, x24)\n    return O"], [1.0, "def solve_f320b26e(I):\n    x1 = palette(I)\n    x2 = remove(vsplit, I)\n    x3 = lbind(hsplit, I)\n    x4 = argmax(x2, x3)\n    x5 = other(x1, x4)\n    x6 = ofcolor(I, x4)\n    x7 = ofcolor(I, x5)\n    x8 = combine(x6, x7)\n    x9 = fill(I, x5, x8)\n    x10 = difference(x9, x7)\n    O = fill(x9, x4, x10)\n    return O"], [1.0, "def solve_22675d4d(I):\n    x1 = rot270(I)\n    x2 = hconcat(x1, x1)\n    O = hconcat(x2, x2)\n    return O"], [1.0, "def solve_06fd67c3(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_29b4d201(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_8b74f01d(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_87f92023(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 =filter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [1.0, "def solve_103082d8(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_650015af(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_99dccc9e(I):\n    x1 = initset(ZERO)\n    x2 = insert(ORIGIN, x1)\n    x3 = lbind(shift, x2)\n    x4 = compose(x3, toindices)\n    x5 = compose(lrcorner, x4)\n    x6 = compose(ofcolor, x5)\n    x7 = fork(mapply, x6, x4)\n    x8 = compose(x5, x7)\n    x9 = fork(recolor, x8, x6)\n    x10 = mapply(x9, x1)\n    O = paint(I, x10)\n    return O"], [1.0, "def solve_b4715f44(I):\n    x1 = replace(I, SIX, TWO)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = mostcolor(I)\n    x14 = combine(x13, x12)\n    x15 = increment(x14)\n    x16 = canvas(x13, x15)\n    x17 = asobject(x16)\n    x18 = height(I)\n    x19 = astuple(last, x18)\n    x20 = increment(x19)\n    x21 = width(I)\n    x22 = astuple(x21, x20)\n    x23 = canvas(x9, x22)\n    x24 = asobject(x23)\n    x25 = decrement(x24)\n    x26 = width(I)\n    x27 = astuple(x26, x25)\n    x28 = prapply(astuple, x27)\n    x29 = lbind(shift, x10)\n    x30 = mapply(x29, x28)\n    x31 = paint(I, x30)\n    O = x9(x31)\n    return O"], [1.1, "def solve_38181f68(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, extract)\n    x35 = compose(x34, x10)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, extract)\n    x40 = compose(x39, x35)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(a"], [1.1, "def solve_b7e97c78(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =27(I)\n    x3 = trim(x2)\n    x4 = lefthalf(x3)\n    x5 = tophalf(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(x4)\n    x8 =675(x7)\n    x9 = width(x8)\n    x10 = increment(x9)\n    x11 = interval(ZERO, x10, x5)\n    x12 = merge(x11)\n    x13 = partition(x12)\n    x14 = lbind(colorfilter, x13)\n    x15 = compose(size, x14)\n    x16 = matcher(x15, TWO)\n    x17 = extract(x14, x16)\n    x18 = lbind(colorcount, x17)\n    x19 = argmin(x19, x18)\n    x20 = ofcolor(x12, x19)\n    x21 = ofcolor(x12, x18)\n    x22 = neighbors(ORIGIN)\n    x23 = leftmost(x22)\n    x24 = ofcolor(x12, x19)\n    x25 = rightmost(x24)\n    x26 = difference(x23, x25)\n    x27 = ofcolor(x12, x19)\n    x28 = leftmost(x27)\n    x29 = ofcolor(x12, x18)\n    x30 = initset(x28)\n    x31 = insert(x29, x30)\n    x32 = insert(x32, x31)\n    x33 = width(x12)\n    x34 = tojvec(x33)\n    x35 = initset(x34)\n    x36 = insert(x33, x35)\n    x37 = insert(x36, x28)\n    x38 = insert(x30, x37)\n    x39 = compose(backdrop, inbox)\n    x40 = lbind(rbind, manhattan)\n    x41 = chain(x39, x40, initset)\n    x42 = lb"], [1.1, "def solve_88ed5446(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_77b659f2(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_628b813b(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(111, x11, identity)\n    x13 = chain(size, x9, x12)\n    x14 = interval(ONE, SIX, ONE)\n    x15 = argmax(x14, x13)\n    x16 = matcher(x13, x15)\n    x17 = fork(both, x15, x16)\n    x18 = sfilter(x8, x17)\n    x19 = fill(I, x1, x18)\n    x20 = increment(TEN)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = astuple(x22, x22)\n    x23 = rbind(multiply, x22)\n    x24 = rbind(divide, x22)\n    x25 = compose(x23, x24)\n    x26 = lbind(equality, x21)\n    x27 = compose(x26, last)\n    x28 = chain(x20, x27, x25)\n    x29 = fork(sfilter, x25, x28)\n    x30 = fork(connect, first, last)\n    x31 = lbind(apply, last)\n    x32 = lbind(ofcolor, I)\n    x33 = compose(x31, x32)\n    x34 = fork( either, x30, x33)\n    x35 = sfilter(x29, x34)\n    x36 =0000(x15, x35)\n    x37 = sfilter(x36, x35)\n    x38 = fork(connect"], [1.1, "def solve_aa2cfd83(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 =5582255422\n    x4 =5525920009\n    8257967759\n    2060645202\n    5556\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = rbind(sfilter, x1)\n    x3 = compose(size, x2)\n    x4 = apply(x3, x1)\n    x5 = maximum(x4)\n    x6 = dmirror(x1)\n    x7 = apply(x3, x6)\n    x8 = maximum(x7)\n    x9 = increment(x8)\n    x10 = interval(TWO, x9, ONE)\n    x11 = increment(x5)\n    x12 = interval(TWO, x11, ONE)\n    x13 = product(x10, x12)\n    x14 = fork(multiply, first, last)\n    x15 = apply(x14, x13)\n    x16 = lbind(sfilter, x13)\n    x17 = lbind(matcher, x14)\n    x18 = compose(x16, x17)\n    x19 = apply(x18, x15)\n    x20 = lbind(occurrences, x1)\n    x21 = lbind(recolor, ZERO)\n    x22 = lbind(canvas, NEG_ONE)\n    x23 = compose(asindices, x22)\n    x24 = chain(x20, x21, x23)\n    x25 = lbind(mapply, x24)\n    x26 = chain(positive, size, x25)\n    x27 = sfilter(x19, x26)\n    x28 = compose(x14, first)\n    x29 = rbind(argmax, x28)\n    x30 = lbind(recolor, ZERO)\n    x31 = lbind(canvas, NEG_ONE)\n    x32 = chain(x30, asindices, x31)\n    x33 = lbind(lbind, shift)\n    x34 = lb"], [1.1, "def solve_7cd623d9(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_b0257e52(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = color(x4)\n    x6 = palette(I)\n    x7 = remove(x5, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = toindices(x4)\n    x11 = apply(first, x10)\n    x12 = toindices(x4)\n    x13 = apply(last, x12)\n    x14 = rbind(contained, x11)\n    x15 = compose(x14, first)\n    x16 = rbind(contained, x13)\n    x17 = compose(x16, last)\n    x18 = fork(either, x15, x17)\n    x19 = ofcolor(I, x9)\n    x20 = sfilter(x19, x18)\n    x21 = rbind(gravitate, x4)\n    x22 = compose(x21, initset)\n    x23 = fork(add, identity, x22)\n    x24 = fork(connect, identity, x23)\n    x25 = apply(x24, x20)\n    x26 = lbind(greater, x12)\n    x27 = compose(x26, first)\n    x28 = rbind(sfilter, x27)\n    x29 = chain(merge, x28, center)\n    x30 = fork(recolor, color, x29)\n    x31 = mapply(x30, x21)\n    x32 = paint(I, x31)\n    x33 = rot90(x127)\n    x34 = ofcolor(x33, x9)\n    x35 = sfilter(x34, x35)\n    x36 = remove(x33, x35)\n    x37 = height(x36)\n    x38 = frontiers(x35)\n    x39 = sfilter(x38, x35)\n    x40 = mapply(size, x"], [1.1, "def solve_9f2b3a8d(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = fork(combine, vfrontier, hfrontier)\n    x5 = compose(x4, center)\n    x6 = rbind(mapply, x3)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = compose(x6, x7)\n    x9 = fork(difference, x8, identity)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ZERO)\n    x12 = lbind(ofcolor, I)\n    x13 =08916(max, x12)\n    x14 = matcher(x13, ZERO)\n    x15 = compose(flip, x14)\n    x16 = rbind(sfilter, x15)\n    x17 = lbind(occurrences, I)\n    x18 = chain(x17, x16, x15)\n    x19 = compose(x5, x18)\n    x20 = extract(x3, x19)\n    x21 = x20(I)\n    x22 = objects(x21, T, F, T)\n    x23 = colorfilter(x22, ZERO)\n    x24 = difference(x22, x23)\n    x25 = rbind(subgrid, x21)\n    x26 = apply(x25, x24)\n    x27 = rbind(colorcount, ZERO)\n    x28 = x27(x2)\n    x29 = argmax(x26, x28)\n    x30 = x29(x2)\n    x31 = objects(x30, T, F, T)\n    x32 = apply(x31, x31)\n    x33 = merge(x32)\n    x34 = size(x33)\n    x35 = rbind(subgrid, x01)\n    x36 = apply(x35, x34)\n    x37 = rightmost(x36)\n    x38 = rightmost(x33)\n    x39 = subtract(x37,"], [1.1, "def solve_1017e0b5(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = insert(ORIGIN, x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(TWO_BY_TWO, x4)\n    x6 = insert(TWx70, x5)\n    x7 = astuple(FOUR, FOUR)\n    x8 = canvas(NEG_ONE, x7)\n    x9 = astuple(THREE, ORIGIN)\n    x10 = initset(x9)\n    x11 = insert(x8, x10)\n    x12 = insert(THREE_BY_THREE, x11)\n    x13 = matcher(numcolors, FOUR)\n    x14 = sfilter(x12, x13)\n    x15 = difference(x12, x14)\n    x16 = sfilter(x15, x14)\n    x17 = mapply(size, x16)\n    x18 = argmax(x15, x17)\n    x19 = x13(x18)\n    x20 = fill(I, x1, x19)\n    x21 = fill(x20, TWO, x18)\n    x22 = asobject(x21)\n    x23 = occurrences(x22, x18)\n    x24 = time Fill(x23, x8)\n    x25 = objects(x22, T, T, T)\n    x26 = insert(ORIGIN, x25)\n    x27 = toindices(x26)\n    x28 = lbind(shift, x27)\n    x29 = occurrences(x22, x27)\n    x30 = mapply(x28, x29)\n    x31 = fill(x22, TWO, x30)\n    x32 = objects(x31, T, T, T)\n    x33 = rbind(contained, x32)\n    x34 = compose(x33, first)\n    x35 = rbind(sfilter, x34)\n    x36 = lbind(pair, x25)\n    x37 = chain(x36, x35, x35"], [1.1, "def solve_3d2fd179(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = positive(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_018326bc(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_606b0eb2(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_bd9658cf(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = height(I)\n    x9 = astuple(x8, ONE)\n    x10 = canvas(THREE, x9)\n    x11 = hconcat(x10, I)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = identity(DOWN)\n    x17 = connect(ORIGIN, x15)\n    x18 = fill(x11, THREE, x17)\n    x19 = identity(x13)\n    x20 = identity(x12)\n    x21 = identity(x12)\n    x22 = identity(F)\n    x23 = identity(ZERO)\n    x24 = compose(first, first)\n    x25 = chain(first, last, x24)\n    x26 = compose(first, first)\n    x27 = chain(last, last, x26)\n    x28 = chain(first, first, first)\n    x29 = chain(first, last, last)\n    x30 = chain(first, first, last)\n    x31 = chain(last, first, last)\n    x32 = compose(decrement, x25)\n    x33 = compose(decrement, x27)\n    x34 = fork(astuple, x32, x33)\n    x35 = compose(decrement, x27)\n    x36 = fork(multiply, x30, x35)\n    x37 = fork(add, x29, x36)\n    x38 = compose(decrement, x28)\n    x39 = fork(multiply, x30, x38)\n    x40 = fork(add, x29, x39)\n    x41 ="], [1.1, "def solve_e97729af(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = compose(leftmost, first)\n    x13 = compose(leftmost, last)\n    x14 = fork(equality, x12, x13)\n    x15 = compose(uppermost, first)\n    x16 = compose(uppermost, last)\n    x17 = fork(equality, x15, x16)\n    x18 = fork(either, x14, x17)\n    x19 = sfilter(x11, x18)\n    x20 = compose(color, first)\n    x21 = compose(center, first)\n    x22 = compose(center, last)\n    x23 = fork(connect, x21, x22)\n    x24 = fork(recolor, x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = matcher(last, ZERO)\n    x28 = decrement(x26)\n    x29 = matcher(last, x28)\n    x30 = fork(either, x27, x29)\n    x31 = matcher(first, ZERO)\n    x32 = decrement(x25)\n    x33 = matcher(first, x32)\n    x34 = fork(either, x31, x33)\n    x35 = toindices(x5)\n    x36 = sfilter(x35, x30)\n    x37 = equality(x35, x36)\n    x38 = mapply(x24, x19)\n    x39 = paint(I, x38)\n    x40 = branch(x37, x30, x34)\n    "], [1.1, "def solve_1c8c34e1(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_e096ac5d(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(remove, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_65b32423(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =323b782(I)\n    x4 = rbind(contained, x3)\n    x5 = compose(x4, last)\n    x6 = sfilter(x2, x5)\n    x7 = fork(subtract, first, last)\n    x8 = fork(multiply, sign, identity)\n    x9 = compose(x8, x7)\n    x10 = astuple(identity, dmirror)\n    x11 = astuple(cmirror, vmirror)\n    x12 = combine(x10, x11)\n    x13 = rbind(rapply, I)\n    x14 = compose(initset, first)\n    x15 = chain(first, x13, x14)\n    x16 = compose(x5, x9)\n    x17 = extract(x12, x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = x19(I)\n    x21 = mostcolor(I)\n    x22 = palette(I)\n    x23 = remove(x21, x22)\n    x24 = lbind(colorcount, I)\n    x25 = argmin(x23, x24)\n    x26 = other(x23, x25)\n    x27 = ofcolor(x20, x25)\n    x28 = ofcolor(x20, x21)\n    x29 = combine(x27, x28)\n    x30 = intersection(x27, x28)\n    x31 = difference(x29, x30)\n    x32 = fill(x20, TWO, x31)\n    x33 = vmirror(x32)\n    x34 = dmirror(x32)\n    x35 = astuple(x33, x34)\n    x36 = x17(x35)\n    x37 = rightmost(x36)\n    x38 = shoot(x37, UP_RIGHT)\n    x39 = shoot(x37, DOWN_LEFT)\n    x40 = combine(x38, x39)\n    "], [1.1, "def solve_fc32252e(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = dmirror(I)\n    x2 = objects(x1, T, F, T)\n    x3 = power(increment, FIVE)\n    x4 = lbind(remove, FIVE)\n    x5 = lbind(remove, ZERO)\n    x6 = chain(x4, x5, palette)\n    x7 = chain(x3, first, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = chain(outbox, outbox, initset)\n    x10 = chain(x8, x9,0000)\n    x11 = initset(x10)\n    x12 = lbind(contained, FOUR)\n    x13 = chain(flip, x12, palette)\n    x14 = mfilter(x11, x13)\n    x15 = vsplit(x1, TWO)\n    x16 = hsplit(x1, TWO)\n    x17 = extract(x15, x16)\n    x18 = extract(x17, x14)\n    x19 = ulcorner(x18)\n    x20 = invert(x19)\n    x21 = shift(x19, x20)\n    x22 = apply(urcorner, x21)\n    x23 = shape(x2)\n    x24 = maximum(x23)\n    x25 = apply(uppermost, x22)\n    x26 = order(x25, identity)\n    x27 = size(x26)\n    x28 = increment(x17)\n    x29 = interval(x28, x27, ONE)\n    x30 = pair(x26, x29)\n    x31 = sfilter(x30, x17)\n    x32 = mapply(first, x31)\n    x33 = compose(last, first)\n    x34 = sfilter(x1, x33)\n    x35 = mapply(last, x34)\n    x36 = combine(x32, x35)\n    x37 = fill(x1, TWO, x36)\n    x38 = asobject(x38)\n    x39 = ulcorner(x48)\n    x40 = shift"], [1.1, "def solve_eed6d643(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_00b4cf43(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_1edcfa30(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = rot96(I)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x28, x40)\n    x42 = fork(x"], [1.1, "def solve_e0ce3d62(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = equality(x5, ZERO)\n    x7 = branch(x6, identity, vmirror)\n    x8 = x7(x4)\n    x9 = ofcolor(x8, EIGHT)\n    x10 = uppermost(x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, identity, hmirror)\n    x13 = x12(x8)\n    x14 = ofcolor(x13, EIGHT)\n    x15 = ofcolor(x13, TWO)\n    x16 = rbind(shoot, DOWN)\n    x17 = mapply(x16, x14)\n    x18 = height(x13)\n    x19 = apply(first, x15)\n    x20 = insert(ZERO, x19)\n    x21 = insert(x18, x19)\n    x22 = apply(decrement, x21)\n    x23 = order(x20, identity)\n    x24 = order(x22, identity)\n    x25 = size(x15)\n    x26 = increment(x25)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = apply(tojvec, x27)\n    x29 = pair(x23, x24)\n    x30 = lbind(sfilter, x17)\n    x31 = compose(first, last)\n    x32 = chain(decrement, first, first)\n    x33 = fork(greater, x31, x32)\n    x34 = chain(increment, last, first)\n    x35 = fork(greater, x34, x31)\n    x36 = fork(both, x33, x35)\n    x37 = lbind(lbind, astuple)\n    x38 = lbind(compose, x36)\n    x39 = chain(x30, x38, x37)\n    x40"], [1.1, "def solve_b479be96(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_0c2169bb(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = partition(I)\n    x2 = objects(I, T, F, F)\n    x3 = compose(double, height)\n    x4 = fork(equality, x3, size)\n    x5 = compose(decrement, width)\n    x6 = fork(equality, x5, size)\n    x7 = fork(either, x4, x6)\n    x8 = rbind(matcher, TWO)\n    x9 = compose(x8, vmirror)\n    x10 = rbind(sfilter, x6)\n    x11 = compose(x10, hline)\n    x12 = chain(x9, x11, center)\n    x13 = compose(x9, subtract_ONE)\n    x14 = fork(subtract, x12, x13)\n    x15 = decrement(x14)\n    x16 =71(x15)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, height, width)\n    x20 = x19(x4)\n    x21 = x19(I)\n    x22 = subtract(x20, x21)\n    x23 = decrement(x22)\n    x24 = colorcount(I, x4)\n    x25 = multiply(x24, x23)\n    x26 = multiply(x25, x22)\n    x27 = add(x22, x26)\n    x28 = width(I)\n    x29 = multiply(x28, x23)\n    x30 = decrement(x29)\n    x31 = multiply(x30, x22)\n    x32 = add(x31, x3)\n    x33 = canvas(ZERO, x32)\n    x34 = ofcolor(x33, x9)\n    x35 = rbind(toobject, x33)\n    x36 = compose(x35, delta)\n    x37 = apply(x36, x34)\n    x38 = rbind(colorcount, x9)\n    x39 = apply(x38, x37)\n    x40 = ofcolor(x39, x4)\n"], [1.1, "def solve_7a5f37b4(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_ffc3223f(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(both, x29, x30)\n    x34 = fork(both, x31, x32)\n    x35 = fork(both, x33, x34)\n    x36 = compose(x"], [1.1, "def solve_524a591c(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, numcolors)\n    x3 = sfilter(I, x2)\n    x4 = fork(equality, identity, rot90)\n    x5 =47(x3)\n    x6 = sfilter(x3, x4)\n    x7 = fork(equality, identity, rot270)\n    x8 = sfilter(x3, x7)\n    x9 = fork(both, x11, x18)\n    x10 = sfilter(x4, x9)\n    x11 = compose(rot90, dedupe)\n    x12 = power(x11, FOUR)\n    x13 =\n    x10 = x12(I)\n    x14 = x12(x13)\n    x15 = subtract(x16, x21)\n    x16 = x15(I)\n    x17 = mostcolor(x14)\n    x18 = matcher(first, x17)\n    x19 = sfilter(x19, x18)\n    x20 = compose(flip, x18)\n    x21 = sfilter(x19, x20)\n    x22 = totuple(x21)\n    x23 = apply(last, x22)\n    x24 = dedupe(x23)\n    x25 = size(x24)\n    x26 = increment(x25)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = apply(tojvec, x27)\n    x29 = pair(x25, x28)\n    x30 = shift(x29, UNITY)\n    x31 = mapply(x76, x30)\n    x32 = height(x31)\n    x33 = width(x31)\n    x34 = equality(x32, x33)\n    x35 = astuple(x34, x32)\n    x36 = ONE(x35)\n    x37 =Example output:\n    1241578274\n    7711333316\n    \"\"\"\n    x1 = leastcolor(x36)\n    x2 = rot270(x74)\n    x3 = leastcolor(x2)\n    x4"], [1.1, "def solve_b2c60a3d(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = replace(I, TWO, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = apply(normalize, x2)\n    x4 = astuple(NINE, NINE)\n    x5 = canvas(ZERO, x4)\n    x6 = asindices(x5)\n    x7 = box(x6)\n    x8 = center(x6)\n    x9 = lbind(contained, ZERO)\n    x10 = rbind(subtract, x8)\n    x11 = compose(x9, x10)\n    x12 = chain(outbox,outbox, initset)\n    x13 = corners(x6)\n    x14 = mapply(x12, x13)\n    x15 = difference(x7, x14)\n    x16 = inbox(x7)\n    x17 = sfilter(x16, x11)\n    x18 = corners(x7)\n    x19 = ofcolor(x15, ZERO)\n    x20 = rbind(difference, x19)\n    x21 = rbind(chain, first)\n    x22 = lbind(x21, x18)\n    x23 = lbind(rbind, difference)\n    x24 = compose(x22, x23)\n    x25 = lbind(intersection, x2)\n    x26 = chain(size, x25, x24)\n    x27 = matcher(x26, ZERO)\n    x28 = lbind(intersection, x6)\n    x29 = chain(size, x28, x27)\n    x30 = matcher(x29, ZERO)\n    x31 = lbind(intersection, x7)\n    x32 = chain(size, x31, x30)\n    x33 = argmax(x18, x32)\n    x34 = shift(x11, x33)\n    x35 = combine(x34, x37)\n    x36 = paint(x5, x35)\n    x37 = fgpartition(x36)\n    x38 = argmax(x37, size)\n    x39 = remove(x38"], [1.1, "def solve_0a719483(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_ac3fae7a(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = rot180(I)\n    x3 = shoot(x2, UP_RIGHT)\n    x4 = rot180(I)\n    x5 = shoot(x4, DOWN_LEFT)\n    x6 = shoot(x5, LEFT)\n    x7 = shoot(x6, ZERO_BY_TWO)\n    x8 = combine(x3, x7)\n    x9 = rbind(shoot, LEFT)\n    x10 = mapply(x9, x8)\n    x11 = fgpartition(x11)\n    x12 = valmax(x11, size)\n    x13 = colorfilter(x11, x1)\n    x14 = argmax(x13, size)\n    x15 = shape(x11)\n    x16 = canvas(x1, x15)\n    x17 = fill(x16, ONE, x14)\n    x18 = replace(x17, x1, TWO)\n    x19 = objects(x18, T, F, T)\n    x20 = colorfilter(x19, ONE)\n    x21 = argmax(x20, size)\n    x22 = lbind(shoot, x21)\n    x23 = mapply(x22, x18)\n    x24 = fill(x17, ONE, x23)\n    x25 = colorfilter(x19, ONE)\n    x26 = rbind(shoot, UNITY)\n    x27 = mapply(x26, x25)\n    x28 = fill(x24, ONE, x27)\n    x29 = rbind(shoot, NEG_UNITY)\n    x30 = mapply(x29, x28)\n    x31 = fill(x28, ONE, x30)\n    x32 = fill(x31, x1, x22)\n    x33 = fill(x32, x1, x25)\n    x34 = replace(x33, x1, ONE)\n    x35 = replace(x34, x1, TWO)\n    x36 = DOWN_LEFT, UNITY)\n    x37 = initset(x36)\n    x38 = insert"], [1.1, "def solve_3ec05e30(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = rot180(I)\n    x2 = rbind(greater, ONE)\n    x3 = chain(x2, minimum, shape)\n    x4 = objects(x1, T, F, F)\n    x5 = sfilter(x4, x3)\n    x6 = fork(equality, toindices, box)\n    x7 = sfilter(x5, x6)\n    x8 = totuple(x7)\n    x9 = apply(color, x8)\n    x10 = leastcommon(x9)\n    x11 = ofcolor(x1, x10)\n    x12 = inbox(x11)\n    x13 = center(x12)\n    x14 = dneighbors(x13)\n    x15 = insert(x13, x14)\n    x16 = toobject(x15, x1)\n    x17 = mostcolor(I)\n    x18 = colorfilter(x17, x10)\n    x19 = rbind(adjacent, x8)\n    x20 = sfilter(x18, x19)\n    x21 = rbind(adjacent, x13)\n    x22 = sfilter(x18, x21)\n    x23 = pair(x20, x22)\n    x24 = colorfilter(x21, x10)\n    x25 = rbind(contained, x24)\n    x26 = compose(x25, last)\n    x27 = sfilter(x23, x26)\n    x28 = product(x27, x28)\n    x29 = sfilter(x18, first)\n    x30 = pair(x29, x28)\n    x31 =99315867(x30)\n    x32 = lbind(sfilter, x33)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(x32, x33, x43)\n    x36 = compose(x33, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = fork(connect, identity, x37)\n    x39 = mapply(x38, x29)\n"], [1.1, "def solve_d5aa0df1(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, FIVE)\n    x4 = astuple(FOUR, FOUR)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = asindices(x5)\n    x7 = rbind(toobject, I)\n    x8 = lbind(shift, x6)\n    x9 = compose(x7, x8)\n    x10 = multiply(x3, FIVE)\n    x11 = interval(ZERO, x10, FIVE)\n    x12 = apply(tojvec, x11)\n    x13 = apply(x9, x12)\n    x14 = matcher(numcolors, ONE)\n    x15 = fork(equality, identity, hmirror)\n    x16 = compose(flip, x15)\n    x17 = lbind(index, I)\n    x18 = compose(x17, ulcorner)\n    x19 = lbind(add, DOWN)\n    x20 = chain(x17, x19, ulcorner)\n    x21 = fork(equality, x18, x20)\n    x22 = compose(flip, x21)\n    x23 = fork(either, x14, x16)\n    x24 = fork(either, x23, x22)\n    x25 = compose(flip, x24)\n    x26 = lbind(multiply, TWO)\n    x27 = compose(x26, x14)\n    x28 = lbind(multiply, FOUR)\n    x29 = compose(x28, x16)\n    x30 = fork(add, x27, x29)\n    x31 = lbind(multiply, THREE)\n    x32 = compose(x31, x22)\n    x33 = lbind(multiply, EIGHT)\n    x34 = compose(x33, x25)\n    x35 = fork(add, x32, x34)\n    x36 = fork(add, x30, x35)\n    x37 = apply(x36, x13)\n    x38 = rbind(repeat,"], [1.1, "def solve_2844e168(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = subgrid(x6, I)\n    x10 = increment(x width)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(x9)\n    x17 = matcher(identity, x15)\n    x18 = frontiers(x9)\n    x19 = sfilter(x18, vline)\n    x20 = toindices(x19)\n    x21 = lbind(shift, x20)\n    x22 = height(x7)\n    x23 = matcher(first, x25)\n    x24 = compose(flip, x23)\n    x25 = toindices(x24)\n    x26 = lbind(shift, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x21, x5)\n    x29 = rbind(argmin, x28)\n    x30 = lbind(lbind, manhattan)\n    x31 = compose(x29, x30)\n    x32 = fork(shift, identity, x31)\n    x33 = mapply(x32, x22)\n    x34 = fill(x9, x3, x33)\n    x35 = x10(x34)\n    x36 =707(x35)\n    x37 = xhou(x36)\n    x38 = fork(combine, vfrontier, hfrontier)\n    x39 = x38(x37)\n    x40 = fill(x35, x3, x39)\n    O = x10(x40)\n    "], [1.1, "def solve_07d9e9fe(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ONE)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18, x41"], [1.1, "def solve_18444695(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_f16bdd75(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x20, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = compose(x36, first)\n    x38 = argmin(x35, x37)\n    x39 = first(x38)\n    x40"], [1.1, "def solve_60711474(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(both, x29, x30)\n    x34 = fork(both, x31, x32)\n    x35 = fork(both, x33, x34)\n    x36 = compose(x"], [1.1, "def solve_f7326b3b(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x20, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = compose(x36, first)\n    x38 = argmin(x35, x37)\n    x39 = ofcolor(I, x38)\n"], [1.1, "def solve_9d8d7434(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = chain(positive, size, x3)\n    x5 = sfilter(x4, x2)\n    x6 = fork(55, identity, hmirror)\n    x7 = compose(x6, vmirror)\n    x8 = astuple(TWO, ONE)\n    x9 = canvas(ZERO, x8)\n    x10 = asindices(x9)\n    x11 = center(x10)\n    x12 = increment(x11)\n    x13 = shift(x11, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = palette(I)\n    x17 = remove(x15, x16)\n    x18 = lbind(chain, size)\n    x19 = rbind(x18, toindices)\n    x20 = lbind(lbind, intersection)\n    x21 = lbind(ofcolor, I)\n    x22 = chain(x19, x20, x21)\n    x23 = compose(x5, x22)\n    x24 = palette(I)\n    x25 = colorfilter(x24, x15)\n    x26 = rbind(bordering, I)\n    x27 = compose(x26, initset)\n    x28 = fork(x ofcolor, x27, outbox)\n    x29 = lbind(argmin, x25)\n    x30 = compose(x29, x28)\n    x31 = matcher(x30, x11)\n    x32 = sfilter(x31, x26)\n    x33 = difference(x ______, x32)\n    x34 = argmin(x33, x29)\n    x35 = x35(x34)\n    x36 = inbox(x35)\n    x37 = fill(I, x39, x36)\n    x38 = height(I)\n    x39 = divide(x38, THREE)\n    x40 = increment(x39)\n    x41 ="], [1.1, "def solve_50487f8b(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = color(x4)\n    x6 = palette(I)\n    x7 = remove(x5, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = toindices(x4)\n    x11 = apply(first, x10)\n    x12 = toindices(x4)\n    x13 = apply(last, x12)\n    x14 = rbind(contained, x11)\n    x15 = compose(x14, first)\n    x16 = rbind(contained, x13)\n    x17 = compose(x16, last)\n    x18 = fork(either, x15, x17)\n    x19 = ofcolor(I, x9)\n    x20 = sfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(gravitate, x4)\n    x23 = compose(x22, initset)\n    x24 = fork(add, identity, x23)\n    x25 = fork(connect, identity, x24)\n    x26 = apply(x25, x21)\n    x27 = palette(I)\n    x28 = remove(x9, x27)\n    x29 = compose(x28, first)\n    x30 = product(x26, x29)\n    x31 = first(x30)\n    x32 = last(x30)\n    x33 =    x31(I)\n    x34 = rightmost(x33)\n    x35 = lbind(greater, x34)\n    x36 = compose(x35, first)\n    x37 =99(x36, toindices)\n    x38 = fork(either, x15, x37)\n    x39 = x38(x31)\n    x40 = rbind(contained, x39)\n    x41 = compose(x40, first)\n"], [1.1, "def solve_ffda8dc4(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(both, x29, x30)\n    x34 = fork(both, x31, x32)\n    x35 = fork(both, x33, x34)\n    x36 = compose(x"], [1.1, "def solve_58ac7cab(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = lbind(position, x18)\n    x21 = fork(shoot, center, x20)\n    x22 = mapply(x21, x19)\n    x23 = difference(x22, x18)\n    x24 = color(x18)\n    x25 = fill(I, x24, x23)\n    x26 = objects(x25, T, F, T)\n    x27 = fork(colorur, outbox, outbox)\n    x28 = apply(x27, x26)\n    x29 = contained(x28, x22)\n    x30 = sfilter(x29, x17)\n    x31 = lbind(fork,vmatching)\n    x32 = lbind(lbind, hmatching)\n    x33 = lbind(hmatching, x30)\n    x34 = lbind(gravitate, x29)\n    x35 = compose(x34, initset)\n    x36 = fork(add, identity, x35)\n    x37 = fork(connect, x33, x36)\n    x38 = mapply(x37, x31)\n"], [1.1, "def solve_aadbd750(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_09201928(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_5b31f5c4(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_88551c53(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork( astuple, x7, x6)\n    x9 = fork(astuple, x8, x4)\n    x10 = lbind(frontiers, x9)\n    x11 = rbind(rapply, x4)\n    x12 = compose(initset, x11)\n    x13 = chain(first, x11, x12)\n    x14 = compose(x10, x13)\n    x15 = lbind(contained, ZERO)\n    x16 = compose(flip, x15)\n    x17 = fork(add, x14, x16)\n    x18 = compose(initset, x17)\n    x19 = fork(rapply, x18, identity)\n    x20 = compose(first, x19)\n    x21 = compose(x20, x18)\n    x22 = astuple(x6, x6)\n    x23 = power(x21, TWO)\n    x24 = x23(x22)\n    x25 = partition(x24)\n    x26 = fork(recolor, color, x24)\n    x27 = apply(x26, x25)\n    x28 = mfilter(x27, paint)\n    x29 = double(x3)\n    x30 = power(x28, x29)\n    x31 = apply(llcorner, x27)\n    x32 = x35(x31)\n    x33 = lbind(shift, x32)\n    x34 = mapply(x33, x30)\n    x35 = urcorner(x27)\n    x36 = x35(x42)\n    x37 = paint(x24, x36)\n    x38 = combine(x33, x37)\n    x39 = paint(x38, x34)\n    O = fill(x"], [1.1, "def solve_5cc98c36(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = argmax(x3, x4)\n    x6 = color(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmax(x8, x9)\n    x11 = remove(x10, x8)\n    x12 = lbind(ofcolor, I)\n    x13 = mapply(x12, x11)\n    x14 = subgrid(x13, I)\n    x15 = objects(x14, T, F, F)\n    x16 = colorfilter(x15, x6)\n    x17 = initset(x10)\n    x18 = insert(x6, x17)\n    x19 = lbind(intersection, x18)\n    x20 = chain(positive, size, x19)\n    x21 = chain(positive, decrement, size)\n    x22 = fork(either, x20, x21)\n    x23 = rbind(toobject, x14)\n    x24 = compose(corners, outbox)\n    x25 = chain(palette, x23, x24)\n    x26 = rbind(branch, x6)\n    x27 = chain(flip, x22, x25)\n    x28 = compose(first, x25)\n    x29 = fork(x76, x28, x26)\n    x30 = apply(uppermost, x16)\n    x31 = order(x30, identity)\n    x32 = lbind(apply, x29)\n    x33 = rbind(order, leftmost)\n    x34 = lbind(sfilter, x16)\n    x35 = lbind(matcher, uppermost)\n    x36 = compose(x34, x35)\n    x37 = chain(x32, x33, x36)\n    O = apply(x37"], [1.1, "def solve_276a72e2(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = lbind(apply,last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = rbind(toobject, I)\n    x33 = compose(x32, delta)\n    x34 = chain(palette, x32, x33)\n    x35 = rbind(upscale, x30)\n    x36 = chain(normalize, x35, x34)\n    x37 = fork(equality, x36, identity)\n    x38 = compose(flip, x37)\n    x"], [1.1, "def solve_651d893a(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_bcc47912(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = double(x37)\n    x39 = multiply(x28, x38)\n    x40 = shift(x31, x"], [1.1, "def solve_5a64c0ca(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_df12dfec(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_fc4d3983(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = leastcolor(x1)\n    x4 = leastcolor(x2)\n    x5 = ofcolor(I, x3)\n    x6 = center(x5)\n    x7 = ofcolor(I, x4)\n    x8 = center(x7)\n    x9 = height(I)\n    x10 = width(I)\n    x11 = hfrontier(x6)\n    x12 = fill(I, x3, x11)\n    x13 = hfrontier(x8)\n    x14 = fill(x12, x4, x13)\n    x15 = decrement(x10)\n    x16 = decrement(x9)\n    x17 = halve(x9)\n    x18 = tojvec(x15)\n    x19 = connect(ORIGIN, x18)\n    x20 = fill(x14, x3, x19)\n    x21 = toivec(x16)\n    x22 = astuple(x16, x15)\n    x23 = connect(x21, x22)\n    x24 = fill(x20, x4, x23)\n    x25 = decrement(x17)\n    x26 = toivec(x25)\n    x27 = connect(ORIGIN, x26)\n    x28 = fill(x24, x3, x27)\n    x29 = tojvec(x15)\n    x30 = decrement(x17)\n    x31 = astuple(x30, x15)\n    x32 = connect(x29, x31)\n    x33 = fill(x28, x3, x32)\n    x34 = toivec(x17)\n    x35 = toivec(x16)\n    x36 = connect(x34, x35)\n    x37 = fill(x33, x4, x36)\n    x38 = astuple(x17, x15)\n    x39 = astuple(x16, x15)\n    x40 = connect(x38, x39)\n    O = fill(x37,"], [1.1, "def solve_4e715061(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(SIX)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = connect(x7, x10)\n    x12 = combine(x8, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_1b142d6e(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_0613d470(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_4101059e(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = lbind(apply, size)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(I, first)\n    x13 = chain(size, x11, x12)\n    x14 = matcher(x13, ONE)\n    x15 = compose(minimum, shape)\n    x16 = lbind(apply, x15)\n    x17 = lbind(ofcolor, I)\n    x18 = chain(x16, x17, x9)\n    x19 = fork(intersection, x9, x18)\n    x20 = fork(shift, x18, x19)\n    x21 = compose(x16, x20)\n    x22 = fork(combine, x21, x29)\n    x23 = fork(recolor, x22, x20)\n    x24 = difference(x1, x3)\n    x25 = power(x23, TWO)\n    x26 = astuple(x253, x27)\n    x27 = astuple(x24, x28)\n    x28 = astuple(x25, x27)\n    x29 = rbind(contained, x26)\n    x30 = compose(x29, last)\n    x31 = rbind(apply, x27)\n    x32 = lbind(position, x25)\n    x33 = chain(x31, x32, x29)\n    x34 = fork(aint, x30, x33)\n    x35 = compose(toobject, first)\n    x36 = compose(numcolors, x35)\n    x37 = matcher(x36, ONE)\n    x38 = fork(both, x35, x37)"], [1.1, "def solve_017fbb5d(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x30, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = shift(x35, x36)\n    x38 = product(x41, x37)\n    x39 = paint(I, x38)\n    "], [1.1, "def solve_dd97ead6(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = lbind(add, FOUR)\n    x2 = compose(x1, size)\n    x3 = fork(equality, toindices, x2)\n    x4 = rbind(add, FOUR)\n    x5 = compose(x4, size)\n    x6 = sfilter(x1, x5)\n    x7 = compose(vline, merge)\n    x8 = sfilter(x6, x7)\n    x9 = argmax(x8, size)\n    x10 = toindices(x9)\n    x11 = fork(either, x7, x10)\n    x12 = fork(add, first, last)\n    x13 = compose(flip, x12)\n    x14 = sfilter(x11, x13)\n    x15 = increment(x14)\n    x16 = subgrid(x9, I)\n    x17 = hconcat(x16, x16)\n    x18 = hconcat(x17, x17)\n    x19 = vmirror(x18)\n    x20 = vconcat(x19, x18)\n    x21 = vconcat(x20, x19)\n    x22 = hmirror(x21)\n    x23 = cellwise(x22, x20, x23)\n    x24 = asobject(x23)\n    x25 = paint(x21, x24)\n    x26 = asindices(x25)\n    x27 = box(x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(x28)\n    x31 = remove(x29, x30)\n    x32 = lbind(chain, size)\n    x33 = rbind(x32, asindices)\n    x34 = lbind(lbind, contained)\n    x35 = lbind(ofcolor, x25)\n    x36 = compose(x34, x35)\n    x37 = chain(x33, x36, outbox)\n    x38 = lbind(sfilter, x41)\n    x39 = rbind(ofcolor, x29)"], [1.1, "def solve_e95747ed(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = astuple(SIX, FIVE)\n    x2 = size(I)\n    x3 = decrement(x2)\n    x4 = astuple(FOUR, FOUR)\n    x5 = canvas(ZERO, x4)\n    x6 = tojvec(x3)\n    x7 = connect(ORIGIN, x6)\n    x8 = equality(x2, FOUR)\n    x9 = insert(UNITY, x7)\n    x10 = branch(x8, x9, x7)\n    x11 = merge(x10)\n    x12 = size(x11)\n    x13 = equality(x12, FOUR)\n    x14 = astuple(ONE, x13)\n    x15 = connect(x11, x14)\n    x16 = toobject(x15, I)\n    x17 =55object(x16, x16)\n    x18 = lefthalf(I)\n    x19 = righthalf(I)\n    x20 = connect(x18, x19)\n    x21 = toobject(x20, x19)\n    x22 =99999(x21, x20)\n    x23 = branch(x8, x22, x21)\n    x24 = connect(x16, x23)\n    x25 = backdrop(x24)\n    x26 = toobject(x25, x19)\n    x27 =99999(x26, x20)\n    x28 = astuple(ZERO, x13)\n    x29 = initset(x28)\n    x30 = insert(x29, x27)\n    x31 = backdrop(x30)\n    x32 = width(x31)\n    x33 = toivec(x32)\n    x34 = tojvec(x33)\n    x35 = connect(x33, x34)\n    x36 = height(x35)\n    x37 = toivec(x36)\n    x38 = initset(x37)\n    x39 = insert(x38, x35)\n    x40 = insert(x36, x39)\n    x41 = combine(x35, x40"], [1.1, "def solve_1417d068(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = double(x2)\n    x12 = asindices(I)\n    x13 = urcorner(x12)\n    x14 = index(I, x13)\n    x15 = astuple(x14, x13)\n    x16 = ulcorner(x12)\n    x17 = repeat(x16, ONE)\n    x18 = inequality(x10, x17)\n    x19 =245(x18)\n    x20 =\n    215 = mostcolor(I)\n    x21 = asindices(I)\n    x22 = astuple(x21, x13)\n    x23 = initset(x22)\n    x24 = position(x23, x23)\n    x25 = compose(last, last)\n    x26 = astuple(x24, x25)\n    x27 = add(x26, x24)\n    x28 = shoot(x27, x248)\n    x29 = shoot(x27, x326)\n    x30 = shoot(x27, x28)\n    x31 = combine(x29, x30)\n    x32 = first(x31)\n    x33 = last(x31)\n    x34 = toobject(x33, I)\n    x35 = mostcommon(x34)\n    x36 = matcher(first, x35)\n    x37 = compose(flip, x36)\n    x38 = sfilter(x32, x37)\n    x39 = rbind(shoot, DOWN)\n    x40 = shoot(x39, x38)\n    x41 ="], [1.1, "def solve_0632eb05(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = compose(leftmost, first)\n    x13 = compose(leftmost, last)\n    x14 = fork(equality, x12, x13)\n    x15 = compose(uppermost, first)\n    x16 = compose(uppermost, last)\n    x17 = fork(equality, x15, x16)\n    x18 = fork(either, x14, x17)\n    x19 = sfilter(x11, x18)\n    x20 = compose(color, first)\n    x21 = compose(center, first)\n    x22 = compose(center, last)\n    x23 = fork(connect, x21, x22)\n    x24 = fork(recolor, x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = matcher(last, ZERO)\n    x28 = decrement(x26)\n    x29 = matcher(last, x28)\n    x30 = fork(either, x27, x29)\n    x31 = matcher(first, ZERO)\n    x32 = decrement(x25)\n    x33 = matcher(first, x32)\n    x34 = fork(either, x31, x33)\n    x35 = toindices(x5)\n    x36 = sfilter(x35, x30)\n    x37 = equality(x35, x36)\n    x38 = mapply(x24, x19)\n    x39 = paint(I, x38)\n    x40 = branch(x37, x30, x34)\n    "], [1.1, "def solve_e9f322e9(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = asobject(I)\n    x2 = delta(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = multiply(x4, x4)\n    x6 = canvas(x3, x5)\n    x7 = asobject(I)\n    x8 = decrement(x7)\n    x9 = mostcolor(I)\n    x10 = shape(I)\n    x11 = add(x10, THREE)\n    x12 = canvas(x9, x11)\n    x13 = asobject(I)\n    x14 = decrement(x13)\n    x15 = toivec(x14)\n    x16 = add(x15, THREE)\n    x17 = shift(x13, x16)\n    x18 = paint(x6, x17)\n    x19 = shift(x8, THREE)\n    x20 = paint(x18, x19)\n    x21 = astuple(x12, x16)\n    x22 = astuple(x9, x16)\n    x23 = astuple(x21, x22)\n    x24 = initset(x23)\n    x25 =71(x24)\n    x26 = backdrop(x25)\n    x27 = recolor(x3, x26)\n    x28 = astuple(x24, x6)\n    x29 = canvas(x9, x28)\n    x30 =0000000(x29)\n    x31 = recolor(x3, x30)\n    x32 = combine(x27, x31)\n    x33 = recolor(x9, x32)\n    x34 = combine(x29, x33)\n    x35 = recolor(x3, x34)\n    x36 = combine(x31, x35)\n    x37 = recolor(x3, x36)\n    x38 = combine(x24, x37)\n    x39 = paint(x36, x38)\n    x40 = ofcolor(x38, x3)\n    x41 = asobject(x40)\n    x42 = recolor(x9, x41)\n    x"], [1.1, "def solve_0f743c4f(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind,12)\n    x35 = compose(x34, x30)\n    x36 = lbind(apply, last)\n    x37 = chain(x32, x33, x35)\n    x38 = rbind(sfilter, x37)\n    x39 = chain(asobject, x38, x29)\n    x40 = fork(shift, x39, x33)\n    x41 = mapply(x40, x8)\n    x42 = paint"], [1.1, "def solve_37de8dbf(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, index)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, x37)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x31"], [1.1, "def solve_0baed825(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(mirror, I)\n    x2 = lbind(shift, I)\n    x3 = compose(x1, x2)\n    x4 = fork(combine, x3, hmirror)\n    x5 = compose(x4, vmirror)\n    x6 = lbind(shift, I)\n    x7 = fork(combine, x6, vmirror)\n    x8 = compose(x5, x7)\n    x9 = palette(I)\n    x10 = fork(combine, x8, x9)\n    x11 = compose(x10, x8)\n    x12 = rbind(extract, x11)\n    x13 = chain(last, first, x12)\n    x14 = decrement(x13)\n    x15 =\n    x14, ZERO)\n    x16 = remove(ZERO, x9)\n    x17 = double(x16)\n    x18 = rbind(multiply, x17)\n    x19 = chain(x18, width, x12)\n    x20 = decrement(x19)\n    x21 = lbind(greater, x17)\n    x22 = compose(x21, x19)\n    x23 = chain(x20, down, x22)\n    x24 = lbind(compose, x5)\n    x25 = x24(x12)\n    x26 = compose(x25, x19)\n    x27 = fork(sfilter, x26, x23)\n    x28 = compose(size, x27)\n    x29 = palette(I)\n    x30 = argmax(x29, x28)\n    x31 = objects(I, T, F, T)\n    x32 = colorfilter(x31, x30)\n    x33 = difference(x32, x31)\n    x34 = rbind(subgrid, I)\n    x35 = order(x33, x34)\n    x36 = mapply(x25, x35)\n    O = subgrid(x36, I)\n    return O"], [1.1, "def solve_6927c569(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = frontiers(I)\n    x4 = merge(x3)\n    x5 = mostcolor(x4)\n    x6 =66262100 box(x2)\n    x7 = fork(multiply, height, width)\n    x8 = halve(x7)\n    x9 = matcher(x8, x6)\n    x10 = compose(flip, x9)\n    x11 = mfilter(x1, x5)\n    x12 = mfilter(x1, x10)\n    x13 = paint(I, x11)\n    O = paint(x13, x12)\n    return O"], [1.1, "def solve_a7872880(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = remove(x3, x2)\n    x5 = lbind(colorcount, I)\n    x6 = argmax(x4, x5)\n    x7 = remove(x6, x4)\n    x8 = lbind(contained, x7)\n    x9 = chain(flip, x8, color)\n    x10 = rbind(sfilter, x9)\n    x11 = lbind(matcher, first)\n    x12 = compose(x11, x10)\n    x13 = chain(x10, x12, first)\n    x14 = lbind(18vas, ZERO)\n    x15 = compose(x14, x13)\n    x16 = chain(x15, shape, x1)\n    x17 = fork(paint, x16, normalize)\n    x18 = fork(colorfilter, x17, x15)\n    x19 = compose(positive, size)\n    x20 = rbind(sfilter, x19)\n    x21 = lbind(shift, x10)\n    x22 = chain(x20, x21, x18)\n    x23 = lbind(mapply, x22)\n    x24 = compose(O = x23(x21)\n    x25 = fork(mapply, x24, x18)\n    x26 = compose(x21, x23)\n    x27 = fork(mapply, x26, x25)\n    x28 = fork(paint, x17, x27)\n    x29 = compose(x23, x27)\n    x30 = fork(c909, x29, x28)\n    x31 = compose(x27, x30)\n    x32 = fork(paint, x16, x31)\n    x33 = mapply(x32, x4)\n    O = replace(x33, x6, xmist shade)\n    return O"], [1.1, "def solve_38f2dd0f(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 =Example output:\n    Example output:\n    0000000000\n    0000000000\n    0000000002\n    0000000002\n    0000000000\n    0000000000\n    0000000002\n    0000000000\n    0000000000\n    0000000000\n    \"\"\"\n    x1 = vmirror(I)\n    x2 = lefthalf(x1)\n    x3 = righthalf(x1)\n    x4 = vmirror(x3)\n    x5 = cellwise(x2, x4, ZERO)\n    O = replace(x5, ONE, TWO)\n    return O"], [1.1, "def solve_31aee6f2(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = totuple(x3)\n    x5 = apply(color, x4)\n    x6 = mostcommon(x5)\n    x7 = index(I, x6)\n    x8 = backdrop(x2)\n    x9 = box(x8)\n    x10 = fill(I, x6, x9)\n    x11 = ulcorner(x2)\n    x12 = index(I, x11)\n    x13 = subgrid(x12, I)\n    x14 = width(x13)\n    x15 = astuple(x14, x14)\n    x16 = crop(x13, ORIGIN, x15)\n    x17 = rot90(x16)\n    x18 = download(x17, x14)\n    x19 = height(x13)\n    x20 = astuple(x19, x14)\n    x21 = crop(x13, ORIGIN, x20)\n    x22 = rot90(x21)\n    x23 =151(x22)\n    x24 = ofcolor(x23, x6)\n    x25 = dmirror(x24)\n    x26 = identity(x25)\n    x27 = subgrid(x26, x31)\n    x28 = ofcolor(x27, x6)\n    x29 = invert(x28)\n    x30 = shift(x29, x29)\n    O = fill(x27, x6, x30)\n    return O"], [1.1, "def solve_b54c8698(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = argmax(x1, x2)\n    x5 = ulcorner(x3)\n    x6 = urcorner(x3)\n    x7 = index(I, x5)\n    x8 = equality(x7, EIGHT)\n    x9 = branch(x8, dmirror, identity)\n    x10 = branch(x8, uppermost, leftmost)\n    x11 = order(x1, x10)\n    x12 = apply(color, x11)\n    x13 = repeat(x12, ONE)\n    x14 = merge(x11)\n    x15 = remove(x4, x11)\n    x16 = repeat(x14, ONE)\n    x17 = combine(x13, x16)\n    x18 = repeat(NEG_ONE, x17)\n    x19 = dmirror(x18)\n    x20 = remove(x9, x18)\n    x21 = dmirror(x20)\n    x22 = combine(x19, x21)\n    x23 = pair(x17, x22)\n    x24 = multiply(TWO, THREE)\n    x25 = power(x24, TWO)\n    x26 = x25(x23)\n    x27 = hmirror(x26)\n    x28 = x25(x22)\n    x29 = dedupe(x28)\n    x30 = x25(x29)\n    x31 =66(x27)\n    x32 =66(x25)\n    x33 =x19(x31)\n    x34 = x19(x32)\n    x35 = subtract(x34, x33)\n    x36 = x34(x30)\n    x37 =64(x35)\n    x38 = shift(x34, x37)\n    x39 = paint(I, x38)\n    O = x9(x39)\n    return O"], [1.1, "def solve_029ffcc3(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = chain(palette, x2, frontiers)\n    x4 = rbind(branch, Core)\n    x5 = chain(size, dedupe, x4)\n    x6 = compose(x5, x3)\n    x7 = argmax(x1, x6)\n    x8 = x7(x1)\n    x9 = flip(x8)\n    x10 = branch(x9, tophalf, lefthalf)\n    x11 = branch(x9, bottomhalf, righthalf)\n    x12 = x10(I)\n    x13 = x10(I)\n    x14 = branch(x12, leftmost, rightmost)\n    x15 = x14(x13)\n    x16 = x14(x13)\n    x17 = greater(x15, x16)\n    x18 = uppermost(x7)\n    x19 = uppermost(x7)\n    x20 = greater(x18, x19)\n    x21 = lbind(gravitate, x7)\n    x22 =350(x21)\n    x23 = pair(x19, x22)\n    x24 = sfilter(x23, x20)\n    x25 = mapply(x21, x24)\n    O = fill(I, TWO, x25)\n    return O"], [1.1, "def solve_e142779d(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    x5 = branch(x3,2phalf, bottomhalf)\n    x6 = x4(I)\n    x7 = x5(I)\n    O = x6(x6)\n    return O"], [1.1, "def solve_43241e81(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(d51158, x9)\n    x11 = initset(x10)\n    x12 = insert(x3, x11)\n    x13 = width(I)\n    x14 = astuple(x13, x12)\n    x15 = crop(I, ORIGIN, x14)\n    x16 = cover(x15, x12)\n    x17 =232(x16)\n    x18 = asobject(x17)\n    x19 = ulcorner(x2)\n    x20 = shift(x18, x19)\n    x21 = paint(I, x20)\n    x22 = objects(x21, T, T, T)\n    x23 = apply(ulcorner, x22)\n    x24 = contained(x18, x23)\n    x25 = increment(x12)\n    x26 = rbind(divide, x25)\n    x27 = apply(x26, x24)\n    x28 = astuple(x27, x14)\n    x29 = shift(x20, x28)\n    x30 = paint(x21, x29)\n    O = hmirror(x30)\n    return O"], [1.1, "def solve_de7a7577(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(toindices, I)\n    x2 = compose(x1, partition)\n    x3 = fork(multiply, height, width)\n    x4 = fork(equality, size, x3)\n    x5 = compose(x4, fork)\n    x6 = argmax(x1, x5)\n    x7 = difference(x1, x6)\n    x8 = remove(x6, x7)\n    x9 = merge(x8)\n    x10 = color(x9)\n    x11 = uppermost(x6)\n    x12 = leftmost(x6)\n    x13 = height(x6)\n    x14 = astuple(x13, ONE)\n    x15 = add(x14, TWO)\n    x16 = invert(x15)\n    x17 = rightmost(x6)\n    x18 = lbind(subtract, x17)\n    x19 = add(NEG_ONE, x18)\n    x20 = invert(x19)\n    x21 = rightmost(x6)\n    x22 = lbind(subtract, x21)\n    x23 = sign(x22)\n    x24 = sfilter(x18, x23)\n    x25 = combine(x16, x24)\n    x26 = hline(x25)\n    x27 = branch(x26, identity, dmirror)\n    x28 = x27(x6)\n    x29 = x27(x28)\n    x30 = multiply(x11, x14)\n    x31 = ulcorner(x6)\n    x32 = lrcorner(x6)\n    x33 = shift(x25, x31)\n    x34 = shift(x25, x32)\n    x35 =1000(x92, x33)\n    x36 =1000(x39, x34)\n    x37 = combine(x35, x36)\n    x38 = intersection(x33, x37)\n    O = fill(x23, x10, x38)\n    return O"], [1.1, "def solve_e672dac9(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =72(x2)\n    x4 = shape(I)\n    x5 = multiply(x4, x4)\n    x6 = canvas(ZERO, x5)\n    x7 =3af2dmirror(x6)\n    x8 =1875221\n    x9 = palette(I)\n    x9 = lbind(colorcount, I)\n    x10 = compose(x9, double)\n    x11 = argmin(x8, x10)\n    x12 = other(x8, x11)\n    x13 = colorcount(I, x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x12, x13)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = replace(I, x12, x13)\n    x19 = color(x16)\n    x20 = increment(x width)\n    x21 = insert(x16, x19)\n    x22 = astuple(x20, x21)\n    x23 = shift(x21, x22)\n    x24 = canvas(ZERO, x4)\n    x25 = colorcount(x24, x12)\n    x26 = normalize(x24)\n    x27 = shift(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    O = fill(x24, x12, x30)\n    return O"], [1.1, "def solve_fc52ef60(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = colorfilter(x2, SIX)\n    x4 = difference(x2, x3)\n    x5 = fork(equality, toindices, box)\n    x6 = rbind(greater, TWO)\n    x7 = compose(x6, contained)\n    x8 = sfilter(x4, x7)\n    x9 = rbind(greater, ONE)\n    x10 = compose(x9, corners)\n    x11 = sfilter(x8, x10)\n    x12 = combine(x8, x11)\n    x13 = mapply(d4 asindices, x12)\n    x14 = difference(x12, x13)\n    x15 =object(x14, I)\n    x16 = mapply(x11, x15)\n    x17 = fill(I, THREE, x16)\n    x18 = increment(x6)\n    x19 = canvas(ZERO, x18)\n    x20 = asobject(I)\n    x21 = shift(x20, UNITY)\n    x22 = paint(x19, x21)\n    x23 = compress(x22)\n    x24 =28825342_x23)\n    x25 = branch(x4, x27, x24)\n    x26 = asindices(x25)\n    x27 = box(x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = matcher(first, x29)\n    x31 = compose(flip, x30)\n    x32 = sfilter(x26, x31)\n    x33 = normalize(x32)\n    x34 = color(x33)\n    x35 = toindices(x33)\n    x36 = compose(toindices, normalize)\n    x37 = matcher(x36, x35)\n    x38 = mfilter(x1, x37)\n    O = fill(x33, x4, x38)\n    return O"], [1.1, "def solve_156cb07e(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = fork(astuple, dmirror, identity)\n    x3 = x2(I)\n    x4 = argmin(x1, x2)\n    x5 = argmax(x1, x2)\n    x6 = x2(x5)\n    x7 = equality(x6, ONE)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(x5)\n    x10 = branch(x7, x5, x9)\n    x11 = x10(x7)\n    x12 = width(x11)\n    x13 = first(x12)\n    x14 = hupscale(x11, x13)\n    x15 = ofcolor(x14, ONE)\n    x16 = lefthalf(x15)\n    x17 = height(x16)\n    x18 = width(x16)\n    x19 = righthalf(x16)\n    x20 = lefthalf(x19)\n    x21 = righthalf(x16)\n    x22 = ofcolor(x21, ONE)\n    x23 = righthalf(x22)\n    x24 = palette(x17)\n    x25 = palette(x24)\n    x26 = difference(x24, x25)\n    x27 = palette(x21)\n    x28 = other(x27, ZERO)\n    x29 = replace(x14, x28, ONE)\n    x30 = ofcolor(x29, TWO)\n    x31 = rightmost(x30)\n    x32 = rightmost(x28)\n    x33 = greater(x61, x32)\n    x34 = LEFTmost(x30)\n    x35 = RIGHT(x34, x31)\n    x36 =14(x35)\n    x37 = center(x36)\n    x38 = branch(x33, x20, x37)\n    x39 = paint(x29, x38)\n    O = x8(x39)\n    return O"], [1.1, "def solve_b8d32e97(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = replace(I, SIX, TWO)\n    x2 =4112(x1)\n    x3 =8(x2)\n    x4 = apply(normalize, x3)\n    x5 = astuple(ONE, THREE)\n    x6 = x2(x5)\n    x7 =316(subtract, x6)\n    x8 = apply(ulcorner, x4)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    x11 = paint(I, x10)\n    O = rot90(x11)\n    return O"], [1.1, "def solve_6d474cf4(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, FOUR, x4)\n    x6 = argmax(x1, size)\n    x7 = x2(x6)\n    x8 = toindices(x7)\n    x9 = x2(x8)\n    x10 = fill(x5, ONE, x9)\n    x11 = apply(first, x10)\n    x12 =09argmin(x11, identity)\n    x13 = height(x12)\n    x14 = increment(x13)\n    x15 = frontiers(I)\n    x16 = color(x12)\n    x17 = astuple(x16, x14)\n    x18 = repeat(x17, ONE)\n    x19 = combine(x18, x15)\n    x20 = mpapply(recolor, x19, x15)\n    x21 = paint(x10, x20)\n    x22 = delta(x12)\n    x23 = asindices(x22)\n    x24 = box(x23)\n    x25 = toobject(x24, I)\n    x26 = identity(x25)\n    x27 = apply(center, x25)\n    x28 =167(x26)\n    x29 = increment(x28)\n    x30 = shift(x25, x29)\n    x31 = toobject(x30, I)\n    x32 =15, x31)\n    x33 = hmirror(x32)\n    x34 = shift(x29, x33)\n    x35 = toobject(x34, I)\n    x36 = apply(color, x35)\n    x37 = combine(x20, x36)\n    x38 = mapply(dmirror, x37)\n    O = paint(x21, x38)\n    return O"], [1.1, "def solve_c06373bc(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = equality(x2, I)\n    x4 = branch(x3, dmirror, identity)\n    x5 = x4(I)\n    x6 = shape(x5)\n    x7 = canvas(ZERO, x6)\n    x8 = hconcat(x5, x7)\n    x9 = objects(x8, T, F, F)\n    x10 = color(x2)\n    x11 = palette(x2)\n    x12 = other(x11, x10)\n    x13 = switch(x8, x12, I)\n    x14 =18601(x9)\n    x15 = lbind(colorfilter, x14)\n    x16 = compose(x15, color)\n    x17 = rbind(sfilter, x16)\n    x18 = chain(positive, size, x17)\n    x19 = dmirror(x8)\n    x20 = sfilter(x19, x18)\n    x21 = rbind(sizefilter, x20)\n    x22 = merge(x21)\n    x23 =7(x22)\n    x24 = apply(merge, x23)\n    x25 = mmirror(x24)\n    x26 = cellwise(x25, x8, ONE)\n    x27 = apply(llcorner, x24)\n    x28 = lbind(shift, x2)\n    x29 = mapply(x28, x27)\n    x30 = pair(x29, x26)\n    x31 = sfilter(x30, first)\n    x32 = mapply(sighalf, x31)\n    O = smirror(x32)\n    return O"], [1.1, "def solve_ea676d53(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmin(x2, size)\n    x4 = colorfilter(x2, x3)\n    x5 = merge(x4)\n    x6 = product(x4, x5)\n    x7 = fork(divide, first, last)\n    x8 =\n    x9 = order(x6, x7)\n    x9 = mpapply(recolor, x8, x9)\n    O = paint(I, x9)\n    return O"], [1.1, "def solve_22da92b5(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(add, NINE)\n    x2 =79655(x1)\n    x3 = apply(x2, x1)\n    x4 = fork(equality, identity, dmirror)\n    x5 = compose(x4, dedupe)\n    x6 = x5(x3)\n    x7 = size(x6)\n    x8 = rbind(repeat, x7)\n    x9 = apply(x8, x6)\n    O = x5(x9)\n    return O"], [1.1, "def solve_f52db621(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = rbind(Example output:\n    8888888888\n    8218998268\n    8113811228\n    8186760828\n    8180660828\n    8087188888\n    8888888888\n    \"\"\"\n    x2 = shape(I)\n    x3 = partition(I)\n    x4 = argmax(x3, size)\n    x5 = canvas(x4, x2)\n    x6 = argmin(x3, size)\n    x7 = palette(x6)\n    x8 = remove(x4, x7)\n    x9 =004(x8, x5)\n    x10 = ofcolor(I, x9)\n    x11 = normalize(x5)\n    x12 = shape(x11)\n    x13 = increment(x12)\n    x14 = lbind(multiply, x13)\n    x15 = toivec(x14)\n    x16 = shift(x11, x15)\n    O = fill(I, x9, x16)\n    return O"], [1.1, "def solve_8c411f50(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = partition(I)\n    x2 =1111(89, ONE)\n    x3 = argmin(x1, size)\n    x4 = cover(I, x3)\n    x5 = normalize(x3)\n    x6 = shift(x5, UNITY)\n    x7 =11f8(x2)\n    x8 = argmin(x1, size)\n    x9 = width(x6)\n    x10 = divide(x9, FIVE)\n    x11 = increment(x10)\n    x12 = width(x6)\n    x13 = interval(ZERO, x12, x11)\n    x14 = rbind(multiply, x6)\n    x15 = apply(x14, x13)\n    x16 = lbind(shift, x6)\n    x17 = mapply(x16, x15)\n    x18 = fill(x4, FIVE, x17)\n    x19 = objects(x18, T, F, T)\n    x20 = argmax(x19, size)\n    x21 = shift(x20, UNITY)\n    x22 = paint(x18, x21)\n    x23 =8216(x22, x8)\n    x24 = astuple(x23, x23)\n    x25 = x16(x24)\n    x26 = ofcolor(x25, FIVE)\n    x27 = fill(x22, ZERO, x26)\n    O = fill(x27, ONE, x25)\n    return O"], [1.1, "def solve_e5cc93b2(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 =445(I)\n    x2 =129(x1)\n    x3 = branch(x2, vsplit, hsplit)\n    x4 = x3(I, TWO)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = width(x6)\n    x8 = interval(ZERO, x7, ONE)\n    x9 = product(x8, x8)\n    x10 = rbind(multiply, x1)\n    x11 = apply(x10, x9)\n    x12 = lbind(colorcount, x5)\n    x13 = argmax(x11, x12)\n    x14 = shift(x3, x13)\n    x15 = apply(x5, x14)\n    x16 = product(x15, x15)\n    x17 = lbind(colorcount, x5)\n    x18 = apply(x17, x16)\n    x19 = product(x18, x18)\n    x20 = matcher(first, xIVE)\n    x21 = compose(flip, x20)\n    x22 = fork(both, x20, x21)\n    x23 = sfilter(x19, x22)\n    x24 = compose(hperiod, asobject)\n    x25 = height(x23)\n    x26 = increment(x25)\n    x27 = lbind(multiply, x26)\n    x28 = height(x23)\n    x29 = increment(x28)\n    x30 = astuple(x27, x29)\n    x31 = lbind(shift, x23)\n    x32 =20(x31)\n    x33 = multiply(x30, x32)\n    x34 = shift(x24, x33)\n    x35 = paint(x5, x34)\n    x36 =265(x35)\n    O = downscale(x35, x36)\n    return O"], [1.1, "def solve_b7de00be(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = initset(ORIGIN)\n    x2 = insert(ORIGIN, x1)\n    x3 = rbind(multiply, THREE)\n    x4 = apply(x3, x2)\n    x5 = astuple(NEG_TWO, NEG_TWO)\n    x6 = shift(x4, x5)\n    x7 = fork(insert, identity, backdrop)\n    x8 = apply(x7, x6)\n    x9 = rbind(toobject, I)\n    x10 = apply(x9, x8)\n    x11 = rbind(colorcount, TWO)\n    x12 = apply(x11, x10)\n    x13 = matcher(first, TWO)\n    x14 = compose(flip, x13)\n    x15 = rbind(sfilter, x14)\n    x16 = lbind(occurrences, I)\n    x17 = chain(positive, size, x16)\n    x18 = compose(x17, x19)\n    x19 = lbind(lbind, equality)\n    x20 = lbind(lbind, shift)\n    x21 = compose(x20, x12)\n    x22 = compose(x19, x21)\n    x23 = fork(argmax, x21, x22)\n    x24 = urcorner(x5)\n    x25 =9999(x24, x23)\n    x26 = cover(I, x25)\n    x27 = shoot(x26, x24)\n    x28 = fork(combine, x27, x23)\n    x29 = mapply(x28, x27)\n    O = fill(x26, ONE, x29)\n    return O"], [1.1, "def solve_e00f2949(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, toindices)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x12, x11)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(positive, size)\n    x17 = lbind(com SYs, I)\n    x18 = compose(x16, x17)\n    x19 = fork(shift, identity, x18)\n    x20 = mapply(x19, x4)\n    O = paint(I, x20)\n    return O"], [1.1, "def solve_90a7b12e(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = ONE\n    add, SEVEN, TEN)\n    x2 = rbind(add, x1)\n    x3 = compose(x2, last)\n    x4 = fork(equality, first, x3)\n    x5 = compose(flip, x4)\n    x6 = sfilter(x1, x5)\n    x7 =51645(x6)\n    x8 = objects(x7, T, T, T)\n    x9 = rbind(colorcount, vERO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, x7)\n    return O"], [1.1, "def solve_324842da(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = extract(x2, x4)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 =1817m5591(I):\n    x9 = add(UNITY, x6)\n    x10 = increment(x9)\n    x11 = power(x7, x10)\n    x12 = subtract(x6, x11)\n    x13 = astuple(x12, x12)\n    x14 = canvas(ZERO, x13)\n    x15 = shoot(x6, UNITY)\n    x16 = combine(x15, x14)\n    x17 = rbind(shoot, x16)\n    x18 = mapply(x17, x15)\n    x19 = fill(x14, x1, x18)\n    x20 = merge(x2)\n    x21 = fill(x19, TWO, x20)\n    O = replace(x21, x1, TWO)\n    return O"], [1.1, "def solve_b8c81847(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n     x14 = apply(x4, x13)\n    x15 = ofcolor(I, FOUR)\n    O = subgrid(x15, x14)\n    return O"], [1.1, "def solve_a51d8257(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(329, I)\n    x2 = compose(x1, dneighbors)\n    x3 = fork(equality, identity, x2)\n    x4 = compose(x3, I)\n    x5 = mostcolor(I)\n    x6 = fork(both, x3, x4)\n    x7 = fork(both, x5, x6)\n    x8 = compose(flip, x7)\n    x9 = sfilter(I, x8)\n    x10 = totuple(x9)\n    x11 = apply(color, x10)\n    x12 = size(x11)\n    x13 = increment(x12)\n    x14 =\n    x15 = canvas(x5, x13)\n    x16 = asobject(x11)\n    x17 = shift(x16, UNITY)\n    O = paint(x14, x17)\n    return O"], [1.1, "def solve_532aae3e(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 =Example output:\n    2332567233\n    2332567233\n    2332567233\n    4772365732\n    4723662323\n    6272324272\n    2271870723\n    1725315739\n    8854264224\n    2589222839\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [1.1, "def solve_d5e9ff86(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 =7fe24062(I)\n    x2 = fork(subtract, first, last)\n    x3 = compose(positive, size)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(center, first)\n    x6 = compose(center, last)\n    x7 = fork(subtract, x5, x6)\n    x8 = compose(x4, size)\n    x9 = rbind(intersection, x2)\n    x10 = fork(\n    x11 = compose(x8, size)\n    x10 = chain(x11, x9, size)\n    x11 = fork(both, x7, x10)\n    x12 = mfilter(x1, x11)\n    O = underfill(I, FOUR, x12)\n    return O"], [1.1, "def solve_3a01a087(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = frontiers(I)\n    x2 =599uple(x1,5168)\n    x3 = difference(x1, x2)\n    x4 = toobject(x3, I)\n    x5 = mostcolor(x4)\n    x6 = objects(I, T, F, T)\n    x7 = rbind(colorcount, ONE)\n    x8 = argmax(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [1.1, "def solve_c92dbd71(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = partition(I)\n    x2 = ONE(d511feca)\n    x3 = colorfilter(x1, ZERO)\n    x4 = compose(last, last)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = compose(first, last)\n    x8 = order(x6, x7)\n    x9 =5208(matcher, first)\n    x10 = compose(last, last)\n    x11 = fork(both, x9, x10)\n    x12 = extract(x8, x11)\n    x13 = last(x12)\n    x14 = decrement(x13)\n    x15 = last(x14)\n    x16 = toivec(x15)\n    x17 = initset(x16)\n    x18 = insert(x14, x17)\n    x19 = product(x18, x18)\n    x20 = rbind(shoot, DOWN)\n    x21 = mapply(x20, x19)\n    x22 = underfill(I, EIGHT, x21)\n    x23 = matcher(first, ZERO)\n    x24 = compose(flip, x23)\n    x25 = sfilter(x19, x24)\n    x26 = difference(x19, x25)\n    x27 = solve(x22, x26)\n    O = fill(x22, TWO, x27)\n    return O"], [1.1, "def solve_3dc8c44f(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = rot180(I)\n    x2 = lbind(subtract, TWO)\n    x3 = chain(even, x2, last)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(x4, dmirror)\n    x6 = chain(fewmost, x5, first)\n    x7 = order(x1, x6)\n    x8 = apply(last, x7)\n    x9 = merge(x8)\n    x10 = size(x9)\n    x11 = interval(ZERO, x10, ONE)\n    x12 = pair(x11, x8)\n    x13 = fork(multiply, first, last)\n    x14 = order(x12, x13)\n    x15 = lbind(canvas, ZERO)\n    x16 = chain(x15, mostcolor, first)\n    x17 = fork(paint, x16, last)\n    x18 = fork(multiply, height, width)\n    x19 =987(x17, x18)\n    x20 = lbind(occurrences, x9)\n    x21 = compose(x20, last)\n    x22 = fork(mapply, first, x21)\n    x23 = pair(x19, x22)\n    x24 =object(x23, x9)\n    x25 = difference(x24, x23)\n    x26 = apply(x22, x25)\n    x27 = rbind(object, x24)\n    x28 = compose(x27, last)\n    x29 = sfilter(x26, x28)\n    x30 = apply(color, x29)\n    x31 = pair(x29, x30)\n    x32 = mapply(x27, x31)\n    x33 = first(x32)\n    x34 = last(x32)\n    x35 = neighbors(UNITY)\n    x36 = recolor(ZERO, x35)\n    x37 = shift(x34, x36)\n    x38 = paint(x33, x37)\n    O = x30(x38)\n    return O"], [1.1, "def solve_52fd39e7(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 =af2able trim(I)\n    x2 =56(phalf, x1)\n    x3 =986e26(x2)\n    x4 =greater(THREE, x3)\n    x5 = width(x1)\n    x6 = tojvec(x5)\n    x7 = index(I, x6)\n    x8 =696(ORIGIN, UNITY)\n    x9 = equality(x7, x8)\n    x10 = branch(x4, x9, RIGHT)\n    x11 = branch(x4, LEFT, DOWN)\n    x12 = branch(x4, hfrontier, vfrontier)\n    x13 = x11(x12)\n    x14 = x10(x13)\n    x15 = increment(x5)\n    x16 = x11(x14)\n    x17 = shift(x13, x16)\n    x18 = paint(I, x17)\n    x19 = fill(x18, x7, x13)\n    O = x11(x19)\n    return O"], [1.1, "def solve_9bffa2ce(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, T, T)\n    x4 = order(x3, size)\n    x5 = apply(color, x4)\n    x6 = last(x5)\n    x7 = remove(x2, x5)\n    x8 = last(x7)\n    x9 = color(x6)\n    x10 = color(x8)\n    x11 = subgrid(x10, x1)\n    x12 = matcher(first, x9)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = lbind(toobject, x5)\n    x16 = chain(x14, x15, color)\n    x17 = compose(x5, x16)\n    x18 =9(x17)\n    x19 =18(x11)\n    x20 = lbind(palette, x9)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = fork(remove, x22, identity)\n    x24 = chain(x19, last, x23)\n    x25 = rbind(ofcolor, x9)\n    x26 = compose(last, x25)\n    x27 = fork(subtract, x26, x24)\n    x28 = fork(shift, x27, x26)\n    x29 = mapply(x28, x6)\n    O = paint(x11, x29)\n    return O"], [1.1, "def solve_8482bdf5(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, height)\n    x3 = branch(x1, decrement, height)\n    x4 = x2(I)\n    x5 = mostcolor(I)\n    x6 = x3(I)\n    x7 = hconcat(I, x4)\n    x8 = tophalf(x7)\n    x9 = leastcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = argmin(x7, x10)\n    x12 = x11(x8)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = leastcolor(x13)\n    x16 = matcher(identity, x15)\n    x17 =770000(x13, x16)\n    x18 = height(x17)\n    x19 = width(x17)\n    x20 = decrement(x19)\n    x21 = astuple(x20, x18)\n    x22 = crop(x17, ORIGIN, x21)\n    x23 = hmirror(x22)\n    x24 = replace(x23, ONE, x9)\n    x25 = width(x24)\n    x26 = interval(ZERO, x25, ONE)\n    x27 = rbind(rapply, x25)\n    x28 = initset(x15)\n    x29 = lbind(rapply, x28)\n    x30 = chain(first, x29, initset)\n    x31 = apply(x30, x26)\n    x32 = ofcolor(x24, x31)\n    x33 = sfilter(x32, x30)\n    x34 = mapply(toindices, x33)\n    x35 = portrait(x34)\n    x36 = branch(x35, identity, x20)\n    x37 = ofcolor(x24, x9)\n    x38 = difference(x37, x36)\n    x39 = canvas(x35, x38)\n    O = x21(x39)\n    return O"], [1.1, "def solve_506e39e4(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 =159(I)\n    x2 =44(x1, I)\n    x3 = hmirror(x2)\n    x4 = vmirror(x2)\n    x5 = dmirror(x2)\n    x6 = cmirror(x2)\n    x7 = paint(I, x3)\n    x8 = paint(x7, x4)\n    x9 = paint(x8, x5)\n    O = paint(x9, x6)\n    return O"], [1.1, "def solve_6b48d1e0(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = astuple(d687, cmirror)\n    x2 = astuple(x1, I)\n    x3 = initset(ORIGIN)\n    x4 = insert(ORIGIN, x3)\n    x5 = insert(x2, x4)\n    x6 = lbind(shift, x5)\n    x7 = rbind(compose, initset)\n    x8 = lbind(rbind, manhattan)\n    x9 = compose(x7, x8)\n    x10 =59(x7)\n    x11 = x9(I)\n    x12 = insert(x10, x11)\n    x13 = lbind(shift, x12)\n    x14 = rbind(compose, initset)\n    x15 = lbind(99bind, manhattan)\n    x16 = compose(x14, x15)\n    x17 = fork(shift, x13, x16)\n    x18 = fork(insert, x17, x9)\n    x19 = compose(box, x18)\n    x20 = mapply(x19, x4)\n    O = fill(I, THREE, x20)\n    return O"]], "1e97544e": [[0.05090373268510345, "def solve_6cf6f287(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_1ffae2fa(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_5e21d698(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_6bc3ca92(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05155411414065225, "def solve_b33f7689(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, FOUR, x5)\n    return O"], [0.052301372264443736, "def solve_743b00f3(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.052301372264443736, "def solve_b1174d58(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.052301372264443736, "def solve_7f44ba7f(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.06472866360450716, "def solve_21a6ff0e(I):\n    x1 = objects(I, T, F, T)\n    x2 = apply(toindices, x1)\n    x3 = fork(either, vline, hline)\n    x4 = sfilter(x2, x3)\n    x5 = difference(x2, x4)\n    x6 = fork(equality, identity, box)\n    x7 = mfilter(x5, x6)\n    O = fill(I, THREE, x7)\n    return O"], [0.06555616266185658, "def solve_6240a5e7(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_4a3b8cc2(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_5a2bf004(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.06555616266185658, "def solve_7eb2a11d(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = height(x2)\n    x4 = height(I)\n    x5 = interval(ZERO, x4, x3)\n    x6 = lbind(shift, x2)\n    x7 = compose(x6, toivec)\n    x8 = compose(x7, invert)\n    x9 = fork(combine, x7, x8)\n    x10 = mapply(x9, x5)\n    O = paint(I, x10)\n    return O"], [0.06555616266185658, "def solve_aa94830c(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_5dc37c90(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.06555616266185658, "def solve_2eb3f024(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = height(x2)\n    x4 = height(I)\n    x5 = interval(ZERO, x4, x3)\n    x6 = lbind(shift, x2)\n    x7 = compose(x6, toivec)\n    x8 = compose(x7, invert)\n    x9 = fork(combine, x7, x8)\n    x10 = mapply(x9, x5)\n    O = paint(I, x10)\n    return O"], [0.06555616266185658, "def solve_762af901(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, THREE)\n    x3 = sizefilter(x2, ONE)\n    x4 = difference(x2, x3)\n    x5 = merge(x4)\n    O = fill(I, THREE, x5)\n    return O"], [0.06555616266185658, "def solve_fc7aacce(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.06555616266185658, "def solve_c42b3a2a(I):\n    x1 = initset(ORIGIN)\n    x2 = box(x1)\n    x3 = shape(I)\n    x4 = minimum(x3)\n    x5 = halve(x4)\n    x6 = interval(ONE, x5, ONE)\n    x7 = lbind(power, inbox)\n    x8 = rbind(rapply, x2)\n    x9 = compose(initset, x7)\n    x10 = chain(first, x8, x9)\n    x11 = apply(x10, x6)\n    x12 = repeat(x2, ONE)\n    x13 = combine(x12, x11)\n    x14 = rbind(toobject, I)\n    x15 = compose(color, x14)\n    x16 = apply(x15, x13)\n    x17 = interval(ZERO, x5, ONE)\n    x18 = pair(x17, x16)\n    x19 = compose(invert, first)\n    x20 = order(x18, x19)\n    x21 = apply(last, x20)\n    x22 = mpapply(recolor, x21, x13)\n    O = paint(I, x22)\n    return O"], [0.06555616266185658, "def solve_d0cc205d(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.06555616266185658, "def solve_e4ebdf9e(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = height(x2)\n    x4 = height(I)\n    x5 = interval(ZERO, x4, x3)\n    x6 = lbind(shift, x2)\n    x7 = compose(x6, toivec)\n    x8 = compose(x7, invert)\n    x9 = fork(combine, x7, x8)\n    x10 = mapply(x9, x5)\n    O = paint(I, x10)\n    return O"], [0.06555616266185658, "def solve_784a76b7(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.06555616266185658, "def solve_ec772d80(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.06756943907245792, "def solve_e73369c7(I):\n    x1 = objects(I, T, F, F)\n    x2 = sizefilter(x1, ONE)\n    x3 = merge(x2)\n    O = move(I, x3, TWO_BY_ZERO)\n    return O"], [0.06858821998557219, "def solve_452b0c5a(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = center(x2)\n    x4 = dneighbors(x3)\n    x5 = insert(x3, x4)\n    O = fill(I, ZERO, x5)\n    return O"], [0.06927348904207718, "def solve_9d80387e(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = fill(I, x8, x32)\n    return O"], [0.06927348904207718, "def solve_1b01e792(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = fill(I, x8, x32)\n    return O"], [0.06959741552663885, "def solve_7858da89(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.0702135574591548, "def solve_a2446404(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.0702135574591548, "def solve_a1f709c7(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.0702135574591548, "def solve_db07b015(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.0702135574591548, "def solve_421033c1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.0702135574591548, "def solve_a5ebd2ce(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.0709170432415734, "def solve_cb51c93a(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.0709170432415734, "def solve_77c5a92b(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.0709170432415734, "def solve_cdb65a39(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.07641808482315048, "def solve_8581db70(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_8e882022(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_2df84732(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_8380b72d(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07909280166991962, "def solve_c4492498(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, ONE, x2)\n    return O"], [0.07909280166991962, "def solve_32d71867(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.07909280166991962, "def solve_a62d0e88(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.08283557492092357, "def solve_55843ee0(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.08598473307451636, "def solve_bcef05a7(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, vmirror, hmirror)\n    x9 = x8(x6)\n    x10 = branch(x7, leftmost, uppermost)\n    x11 = branch(x7, tojvec, toivec)\n    x12 = x10(x5)\n    x13 = x10(x6)\n    x14 = greater(x12, x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = x11(x16)\n    x18 = shape(x6)\n    x19 = multiply(x17, x18)\n    x20 = shift(x9, x19)\n    x21 = fill(I, THREE, x3)\n    O = paint(x21, x20)\n    return O"], [0.0868238750835419, "def solve_e4912a4a(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_0aa61d66(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_508145b8(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_f9764668(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_05885169(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_7674bbfa(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_734d86fa(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_08b0f41a(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_94579f3a(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_03970150(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0888400376814829, "def solve_e5733138(I):\n    x1 = objects(I, T, F, F)\n    x2 = fork(combine, vfrontier, hfrontier)\n    x3 = compose(x2, center)\n    x4 = mapply(x3, x1)\n    O = underfill(I, SIX, x4)\n    return O"], [0.09577613189738625, "def solve_7b00b0e2(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.09577613189738625, "def solve_5ae7aad6(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.10434388482560263, "def solve_c634772b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.11156315985375816, "def solve_007cae4b(I):\n    x1 = objects(I, T, F, F)\n    x2 = palette(I)\n    x3 = other(x2, ZERO)\n    x4 = colorfilter(x1, x3)\n    x5 = sizefilter(x4, ONE)\n    x6 = difference(x4, x5)\n    x7 = merge(x6)\n    O = fill(I, THREE, x7)\n    return O"], [0.11873730483078786, "def solve_e663cc14(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.11873730483078786, "def solve_c111c909(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.11873730483078786, "def solve_c343d444(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.12169800916884342, "def solve_dd665c88(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.12169800916884342, "def solve_0ee9ca71(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, x1, I)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.12389409653320753, "def solve_dc840d56(I):\n    x1 = ofcolor(I, THREE)\n    x2 = height(x1)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, ZERO_BY_TWO, TWO_BY_TWO)\n    x5 = ofcolor(I, TWO)\n    x6 = recolor(TWO, x5)\n    O = move(I, x6, x4)\n    return O"], [0.1239852807263826, "def solve_4f3ca617(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.1239852807263826, "def solve_76dd7606(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.1239852807263826, "def solve_6b5f39a8(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.12484931582933405, "def solve_83816c0a(I):\n    O = replace(I, FOUR, ZERO)\n    return O"], [0.12547429398211177, "def solve_0acf92b5(I):\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.127621743027278, "def solve_1540cbb5(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = fork(vmatching, first, last)\n    x5 = mfilter(x3, x4)\n    x6 = replace(I, THREE, ZERO)\n    O = fill(x6, EIGHT, x5)\n    return O"], [0.13134103434345124, "def solve_3a25b7c3(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.13134103434345124, "def solve_82a79779(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.13134103434345124, "def solve_82b52372(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.13134103434345124, "def solve_6b859cac(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.1314364028975242, "def solve_d7160e25(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = subgrid(x5, I)\n    x7 = mostcolor(x6)\n    x8 = leastcolor(x6)\n    O = switch(x6, x7, x8)\n    return O"], [0.1314364028975242, "def solve_0b6864cf(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = subgrid(x5, I)\n    x7 = mostcolor(x6)\n    x8 = leastcolor(x6)\n    O = switch(x6, x7, x8)\n    return O"], [0.1314364028975242, "def solve_f6a12c87(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = subgrid(x5, I)\n    x7 = mostcolor(x6)\n    x8 = leastcolor(x6)\n    O = switch(x6, x7, x8)\n    return O"], [0.1316993167720556, "def solve_b6c8f382(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.14125400895450432, "def solve_25c8825c(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(shoot, RIGHT)\n    x4 = compose(x3, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(x1, DOWN_LEFT)\n    x9 = initset(x8)\n    x10 = mostcolor(I)\n    x11 = recolor(x10, x9)\n    x12 = objects(x7, T, F, T)\n    x13 = insert(x11, x12)\n    x14 = order(x13, uppermost)\n    x15 = first(x14)\n    x16 = remove(x11, x14)\n    x17 = remove(x15, x14)\n    x18 = compose(lrcorner, first)\n    x19 = compose(lrcorner, last)\n    x20 = fork(connect, x18, x19)\n    x21 = compose(color, first)\n    x22 = fork(recolor, x21, x20)\n    x23 = pair(x16, x17)\n    x24 = mapply(x22, x23)\n    O = underpaint(x7, x24)\n    return O"], [0.1417838598072037, "def solve_e92c8aab(I):\n    x1 = height(I)\n    x2 = vsplit(I, x1)\n    x3 = apply(asobject, x2)\n    x4 = apply(hperiod, x3)\n    x5 = minimum(x4)\n    x6 = width(I)\n    x7 = hsplit(I, x6)\n    x8 = apply(asobject, x7)\n    x9 = apply(vperiod, x8)\n    x10 = minimum(x9)\n    x11 = matcher(hperiod, x5)\n    x12 = sfilter(x3, x11)\n    x13 = mapply(palette, x12)\n    x14 = matcher(vperiod, x10)\n    x15 = sfilter(x8, x14)\n    x16 = mapply(palette, x15)\n    x17 = palette(I)\n    x18 = combine(x13, x16)\n    x19 = rbind(contained, x18)\n    x20 = argmin(x17, x19)\n    x21 = asobject(I)\n    x22 = matcher(first, x20)\n    x23 = compose(flip, x22)\n    x24 = sfilter(x21, x23)\n    x25 = height(I)\n    x26 = divide(x25, x10)\n    x27 = increment(x26)\n    x28 = width(I)\n    x29 = divide(x28, x5)\n    x30 = increment(x29)\n    x31 = invert(x27)\n    x32 = interval(x31, x27, ONE)\n    x33 = invert(x30)\n    x34 = interval(x33, x30, ONE)\n    x35 = product(x32, x34)\n    x36 = astuple(x10, x5)\n    x37 = lbind(multiply, x36)\n    x38 = apply(x37, x35)\n    x39 = lbind(shift, x24)\n    x40 = mapply(x39, x38)\n    O = paint(I, x40)\n    return O"], [0.14343122109904335, "def solve_a712debb(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.14343122109904335, "def solve_a669ed4f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.14368355297075183, "def solve_f4191f94(I):\n    O = switch(I, EIGHT, TWO)\n    return O"], [0.14616952830534066, "def solve_423ed807(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.15924388832696912, "def solve_64c51887(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.15924388832696912, "def solve_544d2d26(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.15924388832696912, "def solve_444b77df(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.15924388832696912, "def solve_40e5ab1c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.15924388832696912, "def solve_01e61422(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.15924388832696912, "def solve_1742a375(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.15924388832696912, "def solve_3e34b638(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.15924388832696912, "def solve_e9c578f2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.15924388832696912, "def solve_75c97c53(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.15924388832696912, "def solve_339196ad(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.16903724504454612, "def solve_fff5abe6(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.16903724504454612, "def solve_fee01b8e(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.1773065582183363, "def solve_f34e1612(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.18335650834767755, "def solve_6bfd2630(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.18335650834767755, "def solve_eeb47269(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.19082520987900767, "def solve_81289ccc(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.19082520987900767, "def solve_1ce93324(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.1924470569137916, "def solve_aecd87b5(I):\n    x1 = rot270(I)\n    x2 = hconcat(I, x1)\n    x3 = hsplit(x2, THREE)\n    O = first(x3)\n    return O"], [0.1968197311802683, "def solve_25108d8d(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = argmax(x1, x2)\n    x5 = remove(x3, x1)\n    x6 = other(x5, x4)\n    x7 = subgrid(x6, I)\n    x8 = frontiers(x7)\n    x9 = sfilter(x8, hline)\n    x10 = size(x9)\n    x11 = positive(x10)\n    x12 = branch(x11, dmirror, identity)\n    x13 = x12(I)\n    x14 = color(x6)\n    x15 = ofcolor(x13, x14)\n    x16 = subgrid(x15, x13)\n    x17 = trim(x16)\n    x18 = lefthalf(x17)\n    x19 = vmirror(x18)\n    x20 = asobject(x19)\n    x21 = righthalf(x17)\n    x22 = vmirror(x21)\n    x23 = asobject(x22)\n    x24 = color(x4)\n    x25 = inbox(x15)\n    x26 = backdrop(x25)\n    x27 = fill(x13, x24, x26)\n    x28 = urcorner(x15)\n    x29 = add(x28, UNITY)\n    x30 = shift(x23, x29)\n    x31 = ulcorner(x15)\n    x32 = width(x20)\n    x33 = invert(x32)\n    x34 = tojvec(x33)\n    x35 = add(DOWN, x34)\n    x36 = add(x31, x35)\n    x37 = shift(x20, x36)\n    x38 = combine(x30, x37)\n    x39 = paint(x27, x38)\n    O = x12(x39)\n    return O"], [0.20306126840468763, "def solve_c5525c8a(I):\n    O = dmirror(I)\n    return O"], [0.20306126840468763, "def solve_31fd98ec(I):\n    O = dmirror(I)\n    return O"], [0.20399997310100407, "def solve_cc399320(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.2095323090756712, "def solve_c6031c1c(I):\n    O = vmirror(I)\n    return O"], [0.20955539093771366, "def solve_b1617fab(I):\n    O = rot270(I)\n    return O"], [0.21064151812412915, "def solve_1c6f527b(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot270(x3)\n    return O"], [0.21391916164730382, "def solve_5fdb3430(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.21391916164730382, "def solve_c27ce434(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.21391916164730382, "def solve_646aa8de(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.21391916164730382, "def solve_f036f0c7(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.21391916164730382, "def solve_5aff503e(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.2160336489405799, "def solve_a852a024(I):\n    x1 = hmirror(I)\n    x2 = fgpartition(x1)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = compose(double, halve)\n    x6 = fork(equality, identity, x5)\n    x7 = compose(x6, last)\n    x8 = sfilter(x4, x7)\n    x9 = fill(x1, THREE, x8)\n    O = vmirror(x9)\n    return O"], [0.2169574734743762, "def solve_c0cc875a(I):\n    x1 = ofcolor(I, TWO)\n    x2 = crop(I, ORIGIN, THREE_BY_THREE)\n    x3 = asobject(x2)\n    x4 = lbind(shift, x3)\n    x5 = compose(x4, decrement)\n    x6 = mapply(x5, x1)\n    O = paint(I, x6)\n    return O"], [0.22121427911710576, "def solve_b9aee034(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = cover(I, x2)\n    x4 = shift(x2, DOWN)\n    x5 = paint(x3, x4)\n    x6 = shift(x2, RIGHT)\n    x7 = paint(x5, x6)\n    x8 = shift(x2, LEFT)\n    O = paint(x7, x8)\n    return O"], [0.22840986411980327, "def solve_d5426d9c(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.22840986411980327, "def solve_0d3126ff(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.22840986411980327, "def solve_25d533b9(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.2537260279414613, "def solve_7b9e592a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_11d42256(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_e0b1611a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_3c315dc0(I):\n    O = tophalf(I)\n    return O"], [0.2537260279414613, "def solve_c7b130d6(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_881525a4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_f6395595(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.25570919672274256, "def solve_d605d80a(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    O = x5(I)\n    return O"], [0.25570919672274256, "def solve_4d5b4592(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.25570919672274256, "def solve_cf765f7b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.2657948532948533, "def solve_c566179a(I):\n    O = subgrid(I, I)\n    return O"], [0.2704028721250951, "def solve_dd7cbc25(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.2737085951518015, "def solve_8f932125(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, F, F, T)\n    x6 = rbind(colorcount, ONE)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.2896469754470941, "def solve_31760b9c(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, THREE, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.29118241282602314, "def solve_569e5a0b(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.29118241282602314, "def solve_948dcfcd(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.29118241282602314, "def solve_e1406122(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.29118241282602314, "def solve_92d5bfd6(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.29118241282602314, "def solve_51f25776(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.29118241282602314, "def solve_4588d57b(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.29118241282602314, "def solve_f11ca90b(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.29118241282602314, "def solve_559104ca(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.2949368095103424, "def solve_bd073e07(I):\n    x1 = compose(positive, size)\n    x2 = rbind(sfilter, hline)\n    x3 = chain(x1, x2, frontiers)\n    x4 = chain(size, dedupe, first)\n    x5 = chain(size, dedupe, last)\n    x6 = fork(greater, x4, x5)\n    x7 = fork(both, x3, x6)\n    x8 = astuple(identity, rot90)\n    x9 = astuple(rot180, rot270)\n    x10 = combine(x8, x9)\n    x11 = astuple(identity, rot270)\n    x12 = astuple(rot180, rot90)\n    x13 = combine(x11, x12)\n    x14 = pair(x10, x13)\n    x15 = rbind(rapply, I)\n    x16 = compose(initset, first)\n    x17 = chain(first, x15, x16)\n    x18 = compose(x7, x17)\n    x19 = extract(x14, x18)\n    x20 = first(x19)\n    x21 = last(x19)\n    x22 = x20(I)\n    x23 = first(x22)\n    x24 = repeat(x23, ONE)\n    x25 = dmirror(x24)\n    x26 = width(x22)\n    x27 = hupscale(x25, x26)\n    x28 = asobject(x27)\n    x29 = height(x22)\n    x30 = height(x28)\n    x31 = interval(ZERO, x29, x30)\n    x32 = lbind(shift, x28)\n    x33 = apply(toivec, x31)\n    x34 = mapply(x32, x33)\n    x35 = shift(x34, TWO_BY_ZERO)\n    x36 = paint(x22, x35)\n    O = x21(x36)\n    return O"], [0.29493888612223423, "def solve_96923ba7(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.29493888612223423, "def solve_20c82e19(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.29493888612223423, "def solve_3e23124e(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.2953542834280259, "def solve_035afcd0(I):\n    x1 = replace(I, THREE, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    x14 = apply(x4, x13)\n    x15 = ofcolor(I, THREE)\n    O = subgrid(x15, x14)\n    return O"], [0.29664969986532563, "def solve_97e2fd0c(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = apply(toindices, x6)\n    x8 = rbind(shoot, RIGHT)\n    x9 = compose(x8, center)\n    x10 = fork(recolor, color, x9)\n    x11 = mapply(x10, x6)\n    x12 = paint(I, x11)\n    x13 = width(I)\n    x14 = interval(ZERO, x13, ONE)\n    x15 = apply(double, x14)\n    x16 = apply(increment, x15)\n    x17 = apply(tojvec, x16)\n    x18 = prapply(shift, x7, x17)\n    x19 = merge(x18)\n    O = fill(x12, FIVE, x19)\n    return O"], [0.2969700117912533, "def solve_362bfae8(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = subgrid(x20, I)\n    x22 = switch(x21, x18, x19)\n    x23 = replace(x22, x18, x4)\n    x24 = lbind(downscale, x23)\n    x25 = fork(upscale, x24, identity)\n    x26 = matcher(x25, x23)\n    x27 = shape(x23)\n    x28 = maximum(x27)\n    x29 = interval(ONE, x28, ONE)\n    x30 = sfilter(x29, x26)\n    x31 = maximum(x30)\n    O = downscale(x23, x31)\n    return O"], [0.3063136421137608, "def solve_b1cb6271(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.3063136421137608, "def solve_a0033061(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.3063136421137608, "def solve_a96086ab(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.30649821446512787, "def solve_0c28ea7b(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, SIX)\n    x3 = compose(flip, x2)\n    x4 = mfilter(x1, x2)\n    x5 = mfilter(x1, x3)\n    x6 = fill(I, TWO, x4)\n    O = fill(x6, ONE, x5)\n    return O"], [0.31011174594270147, "def solve_43c6e29b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.31011174594270147, "def solve_541246fa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.31011174594270147, "def solve_47a1addc(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.31011174594270147, "def solve_f84c72e4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.3104501482052144, "def solve_be665f33(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_035af0ce(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_0ef8e060(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_95242d09(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_95d56d68(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_13518b4f(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_94527df4(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_95a96707(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_171722ab(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_7df58ffd(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.31422062482196794, "def solve_ac8ef8e2(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = rbind(colorcount, ZERO)\n    x3 = lbind(toobject, x1)\n    x4 = compose(x2, x3)\n    x5 = vmirror(I)\n    x6 = hmirror(I)\n    x7 = astuple(x5, x6)\n    x8 = argmin(x7, x4)\n    O = subgrid(x1, x8)\n    return O"], [0.3204614475119984, "def solve_6c2d122f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [0.3204614475119984, "def solve_c79501e2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [0.320952197319818, "def solve_2d85fb7c(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.320952197319818, "def solve_5a0ee9f3(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.33125188020762586, "def solve_34bdd8d2(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = prapply(connect, x2, x2)\n    x4 = fgpartition(I)\n    x5 = merge(x4)\n    x6 = cover(I, x5)\n    x7 = fork(either, hline, vline)\n    x8 = box(x5)\n    x9 = rbind(difference, x8)\n    x10 = chain(positive, size, x9)\n    x11 = fork(both, x7, x10)\n    x12 = mfilter(x3, x11)\n    O = fill(x6, x1, x12)\n    return O"], [0.3384341187221576, "def solve_68da113f(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.3438965261026284, "def solve_cbd19292(I):\n    x1 = dmirror(I)\n    x2 = cmirror(x1)\n    x3 = hmirror(I)\n    x4 = hmirror(x3)\n    x5 = vconcat(x4, x4)\n    x6 = vconcat(x5, x3)\n    O = cellwise(x2, x6, ZERO)\n    return O"], [0.35141156925547073, "def solve_aeae0702(I):\n    x1 = hsplit(I, THREE)\n    x2 = first(x1)\n    x3 = remove(x2, x1)\n    x4 = first(x3)\n    x5 = last(x3)\n    x6 = ofcolor(x4, NINE)\n    x7 = ofcolor(x2, FOUR)\n    x8 = fill(x5, NINE, x6)\n    O = fill(x8, FOUR, x7)\n    return O"], [0.35285797856791773, "def solve_13311d98(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.4062968519814561, "def solve_124a1120(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [0.40995162868139406, "def solve_02c549c5(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.40995162868139406, "def solve_88c35f0a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.40995162868139406, "def solve_ae109171(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.40995162868139406, "def solve_789764f1(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.40995162868139406, "def solve_b88191a0(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.40995162868139406, "def solve_71819341(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.40995162868139406, "def solve_a9301661(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = combine(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.4170310435194296, "def solve_51d6def0(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.4231949243417133, "def solve_00354818(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.5025446278465109, "def solve_48aab6c1(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = mostcolor(x2)\n    x4 = matcher(first, x3)\n    x5 = sfilter(x2, x4)\n    x6 = shape(x5)\n    x7 = normalize(x5)\n    x8 = mostcolor(I)\n    x9 = canvas(x8, x6)\n    O = paint(x9, x7)\n    return O"], [0.5064013204664738, "def solve_35d28584(I):\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [0.5064013204664738, "def solve_36e1d64f(I):\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [0.5273355500051734, "def solve_2dc7e85b(I):\n    x1 = replace(I, FOUR, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.5368741405054548, "def solve_b706875e(I):\n    x1 = replace(I, TWO, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.5371132714255592, "def solve_9c3c256b(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.5586554186554187, "def solve_490de5bc(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.5586554186554187, "def solve_98f30818(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.5586554186554187, "def solve_d295afd4(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.5586554186554187, "def solve_8b29d585(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.5586554186554187, "def solve_10f4d295(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.5586554186554187, "def solve_8ce23322(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.5586554186554187, "def solve_383060ef(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.5586554186554187, "def solve_99673455(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.5586554186554187, "def solve_1a59a9cc(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.5683501683501684, "def solve_36b1d5fa(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = ofcolor(x1, ZERO)\n    x4 = ofcolor(x2, ZERO)\n    x5 = intersection(x3, x4)\n    x6 = shape(x1)\n    x7 = canvas(ZERO, x6)\n    O = fill(x7, EIGHT, x5)\n    return O"], [0.5801077246461932, "def solve_dff6181a(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5801077246461932, "def solve_bc780504(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5801077246461932, "def solve_bc348caf(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.6052508022657276, "def solve_03a44524(I):\n    x1 = objects(I, T, F, T)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = mostcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = extract(x1, x5)\n    O = subgrid(x6, I)\n    return O"], [0.6185357460219338, "def solve_512bcb78(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = rbind(equality, x4)\n    x7 = argmin(x5, x6)\n    x8 = asindices(I)\n    x9 = ofcolor(I, x4)\n    x10 = difference(x8, x9)\n    x11 = fill(I, x7, x10)\n    x12 = frontiers(x11)\n    x13 = sfilter(x12, vline)\n    x14 = difference(x12, x13)\n    x15 = astuple(x14, x13)\n    x16 = apply(size, x15)\n    x17 = increment(x16)\n    O = canvas(x4, x17)\n    return O"], [0.656779053865826, "def solve_5f7fd0ff(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(shoot, UNITY)\n    x3 = compose(x2, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    x6 = astuple(SIX, SIX)\n    x7 = canvas(ZERO, x6)\n    O = paint(x7, x5)\n    return O"], [0.6767316017316017, "def solve_ac362628(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_39f8ebdd(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_5388b651(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_5ffb29a7(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_5afaeb8b(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_1a5dc52d(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6912337662337663, "def solve_2c584159(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.6912337662337663, "def solve_20c45a08(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.6912337662337663, "def solve_853baa07(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.7615634784502708, "def solve_224f5db4(I):\n    x1 = mostcolor(I)\n    x2 = frontiers(I)\n    x3 = sfilter(x2, vline)\n    x4 = difference(x2, x3)\n    x5 = astuple(x4, x3)\n    x6 = apply(size, x5)\n    x7 = increment(x6)\n    O = canvas(x1, x7)\n    return O"], [0.7635281385281386, "def solve_7e30d78b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.7635281385281386, "def solve_0dfc0a99(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.7635281385281386, "def solve_7991406b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.7635281385281386, "def solve_e7d03285(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.7635281385281386, "def solve_0e84b41d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.7635281385281386, "def solve_e04f8cb1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.7821428571428571, "def solve_d6569984(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.7821428571428571, "def solve_71425b0b(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.8545454545454545, "def solve_94625438(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = ofcolor(x1, ZERO)\n    x4 = ofcolor(x2, ZERO)\n    x5 = intersection(x3, x4)\n    x6 = astuple(NINE, NINE)\n    x7 = canvas(ZERO, x6)\n    O = fill(x7, EIGHT, x5)\n    return O"], [1.0, "def solve_2f78e29a(I):\n    x1 = astuple(identity, identity)\n    x2 = astuple(rot90, rot270)\n    x3 = astuple(x1, x2)\n    x4 = astuple(rot180, rot180)\n    x5 = astuple(rot270, rot90)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = leastcolor(I)\n    x9 = repeat(x8, ONE)\n    x10 = rbind(rapply, I)\n    x11 = chain(x10, initset, first)\n    x12 = compose(first, x11)\n    x13 = chain(dedupe, first, x12)\n    x14 = matcher(x13, x9)\n    x15 = extract(x7, x14)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = x16(I)\n    x19 = ofcolor(x18, x8)\n    x20 = height(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = lbind(astuple, x20)\n    x23 = apply(x22, x21)\n    x24 = rbind(shoot, DOWN)\n    x25 = mapply(x24, x23)\n    x26 = fill(x18, FOUR, x25)\n    x27 = astuple(x20, x20)\n    x28 = canvas(ZERO, x27)\n    x29 = asindices(x28)\n    x30 = shift(x29, x27)\n    x31 = shape(I)\n    x32 = maximum(x31)\n    x33 = lbind(shift, x30)\n    x34 = interval(ZERO, x32, x20)\n    x35 = pair(x34, x34)\n    x36 = mapply(x33, x35)\n    x37 = fill(x26, TWO, x36)\n    O = x17(x37)\n    return O"], [1.0, "def solve_16d846d0(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(normalize, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [1.0, "def solve_2a2cae48(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = compose(size, dedupe)\n    x5 = apply(x4, x3)\n    x6 = totuple(x5)\n    x7 = sfilter(x6, first)\n    x8 = compose(last, last)\n    x9 = totuple(x7)\n    x10 = apply(x8, x9)\n    x11 = mostcommon(x10)\n    x12 = lbind(matcher, first)\n    x13 = compose(x12, x7)\n    x14 = fork(sfilter, identity, x13)\n    x15 = compose(rot90, x14)\n    x16 = lbind(matcher, first)\n    x17 = compose(x16, x7)\n    x18 = fork(sfilter, identity, x17)\n    x19 = compose(rot180, x18)\n    x20 = lbind(occurrences, I)\n    x21 = compose(x20, x14)\n    x22 = compose(xpositive, size)\n    x23 = fork(shift, x21, x22)\n    x24 = fork(mapply, x19, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = dedupe(x27)\n    x29 = rot90(x28)\n    x30 = dedupe(x29)\n    O = rot270(x30)\n    return O"], [1.0, "def solve_485062d7(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_d30d557a(I):\n    x1 = rbind(shoot, UNITY)\n    x2 = compose(x1, center)\n    x3 = fork(recolor, color, x2)\n    x4 = mapply(x3, x1)\n    x5 = shape(I)\n    x6 = add(TWO, x5)\n    x7 = canvas(ZERO, x6)\n    x8 = asobject(I)\n    x9 = shift(x8, UNITY)\n    O = paint(x7, x9)\n    return O"], [1.0, "def solve_862d52aa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_247b5bf2(I):\n    x1 = objects(I, F, F, T)\n    x2 = rbind(valmax, numcolors)\n    x3 = matcher(x2, ONE)\n    x4 = extract(x1, x3)\n    x5 = remove(x4, x1)\n    x6 = lbind(shift, x4)\n    x7 = mapply(x6, x5)\n    x8 = paint(I, x7)\n    O = cover(x8, x4)\n    return O"], [1.0, "def solve_5c2eac65(I):\n    x1 = TWO(I, THREE)\n    x2 = height(x1)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(x1)\n    return O"], [1.0, "def solve_263c85d8(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = lbind(sfilter, x1)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(insert, x104, x14)\n    x16 = compose(backdrop, x15)\n    x17 = shape(I)\n    x18 = decrement(x17)\n    x19 = multiply(x18, x18)\n    x20 = initset(x19)\n    x21 = insert(x14, x20)\n    x22 = product(x21, x21)\n    x23 = argmax(x22, x16)\n    x24 = asindices(x23)\n    x25 = contained(ZERO, x24)\n    x26 = insert(x21, x25)\n    x27 = rbind(argmin, x26)\n    x28 = lbind(shift, x23)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [1.0, "def solve_d0156e52(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_9bf5ae6f(I):\n    x1 = rot180(I)\n    x2 = hconcat(I, x1)\n    O = vconcat(x2, x2)\n    return O"], [1.0, "def solve_2fa55978(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = branch(x1, vsplit, hsplit)\n    return O"], [1.0, "def solve_0ccfb650(I):\n    x1 = lbind(apply, normalize)\n    x2 = chain(maximum, x1, shape)\n    x3 = subtract(TWO, x2)\n    x4 = interval(ZERO, x3, ONE)\n    x5 = rbind(multiply, x4)\n    x6 = apply(x5, x4)\n    x7 = rbind(shift, x6)\n    x8 = mapply(x7, x3)\n    x9 = double(x3)\n    x10 = astuple(x9, x8)\n    x11 = add(x10, x3)\n    x12 = index(I, x11)\n    x13 = astuple(x12, x4)\n    x14 = canvas(x12, x13)\n    x15 = asobject(I)\n    x16 = shift(x15, UNITY)\n    x17 = paint(x14, x16)\n    x18 = objects(x17, T, F, T)\n    x19 = apply(color, x18)\n    x20 = rbind(shift, ORIGIN)\n    x21 = mapply(x20, x19)\n    x22 = fill(x17, x12, x21)\n    x23 = paint(x22, x15)\n    x24 = apply(ulcorner, x15)\n    x25 = mapply(x24, x24)\n    x26 = paint(x25, x15)\n    x27 = fill(x26, x12, x25)\n    O = paint(x27, x15)\n    return O"], [1.0, "def solve_41694d36(I):\n    O = hconcat(I, I)\n    return O"], [1.0, "def solve_d48d374f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_b3ecc366(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_7c1e6d5c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = index(I, ORIGIN)\n    x8 = shoot(ORIGIN, DOWN)\n    O = fill(x6, x7, x8)\n    return O"], [1.0, "def solve_18f7a7a2(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, E730, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [1.0, "def solve_01f6f72c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_fec6ffd8(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, F, F, T)\n    x4 = merge(x3)\n    x5 = palette(x4)\n    x6 = intersection(x1, x5)\n    x7 = lbind(colorcount, x4)\n    x8 = argmin(x6, x7)\n    x9 = ofcolor(x4, x8)\n    x10 = difference(x1, x9)\n    x11 = rbind(toobject, x4)\n    x12 = lbind(rbind, occurrences)\n    x13 = chain(first, x11, x12)\n    x14 = rbind(colorcount, x8)\n    x15 = chain(x13, x14, x9)\n    x16 = fork(argmax, x15, x13)\n    x17 = fork(colorcount, x16, outbox)\n    x18 = ofcolor(x4, x8)\n    x19 = difference(x19, x18)\n    x20 = subgrid(x18, x1)\n    x21 = rbind(occurrences, x20)\n    x22 = compose(x21, normalize)\n    x23 = fork(argmin, x22, x21)\n    x24 = ofcolor(x4, x8)\n    x25 = difference(x24, x18)\n    x26 = intersection(x24, x25)\n    x27 = fill(x20, x8, x26)\n    x28 = urcorner(x27)\n    x29 = lbind(toindices, x28)\n    x30 = fork(shoot, identity, x29)\n    x31 = mapply(x30, x2222)\n    x32 = fill(x27, x8, x31)\n    O = replace(x32, x8, x4)\n    return O"], [1.0, "def solve_a03889dd(I):\n    x1 = ofcolor(I, TWO)\n    x2 = rbind(colorcount, TWO)\n    x3 = subgrid(x1, I)\n    x4 = argmax(x1, x2)\n    x5 = replace(x3, ONE, ZERO)\n    O = fill(x5, TWO, x4)\n    return O"], [1.0, "def solve_663ad284(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = positive(x2)\n    x4 = branch(x3, dmirror, identity)\n    x5 = x4(I)\n    x6 = objects(x5, T, F, F)\n    x7 = order(x6, leftmost)\n    x8 = apply(color, x7)\n    x9 = repeat(x8, ONE)\n    O = x4(x9)\n    return O"], [1.0, "def solve_4d041841(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_8722bcfd(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = x6(I)\n    x8 = dmirror(x7)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_c4005486(I):\n    x1 = asindices(I)\n    x2 = fgpartition(I)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = compose(double, halve)\n    x6 = fork(equality, identity, x5)\n    x7 = compose(x6, last)\n    x8 = sfilter(x4, x7)\n    x9 = fill(I, FOUR, x8)\n    x10 = increment(x6)\n    x11 = width(I)\n    x12 = halve(x11)\n    x13 = tojvec(x12)\n    x14 = height(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = rbind(greater, ONE)\n    x19 = compose(x18, last)\n    x20 = sfilter(x17, x19)\n    x21 = totuple(x20)\n    x22 = apply(toindices, x21)\n    x23 = fork(either, x21, x22)\n    x24 = sfilter(x22, x23)\n    x25 = paint(x9, x24)\n    O = size(x25)\n    return O"], [1.0, "def solve_8aaa40a3(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = fgpartition(x4)\n    x6 = merge(x5)\n    x7 = chain(double, decrement, width)\n    x8 = x7(x6)\n    x9 = argmin(x5, x8)\n    x10 = leastcolor(x9)\n    x11 = palette(x9)\n    x12 = remove(x10, x11)\n    x13 = other(x12, x18)\n    x14 = ofcolor(x4, x10)\n    x15 = ofcolor(x4, x13)\n    x16 = combine(x14, x15)\n    x17 = fill(x6, x13, x16)\n    x18 = difference(x17, x15)\n    O = fill(x17, FOUR, x18)\n    return O"], [1.0, "def solve_ab9e8f08(I):\n    x1 = mostcolor(I)\n    x2 = vmirror(I)\n    O = objects(I, T, F, T)\n    return O"], [1.0, "def solve_b1510865(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [1.0, "def solve_9c3a204b(I):\n    x1 = compress(I)\n    x2 = objects(x1, F, F, T)\n    x3 = rbind(colorcount, ZERO)\n    x4 = argmax(x2, x3)\n    x5 = rbind(colorcount, ZERO)\n    x6 = matcher(x5, x4)\n    x7 = extract(x1, x6)\n    x8 = remove(x7, x1)\n    x9 = extract(x8, x4)\n    x10 = shape(x9)\n    x11 = multiply(x10, x10)\n    x12 = canvas(ZERO, x11)\n    x13 = ofcolor(x1, x4)\n    x14 = shift(x13, x12)\n    O = fill(x12, ZERO, x14)\n    return O"], [1.0, "def solve_ef983aba(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_78197862(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_5dae6507(I):\n    x1 = objects(I, T, F, T)\n    x2 = neighbors(ORIGIN)\n    x3 = mapply(neighbors, x2)\n    x4 = toobject(x3, I)\n    x5 = mostcolor(x4)\n    x6 = ofcolor(I, x5)\n    x7 = backdrop(x6)\n    x8 = multiply(xfill, THREE)\n    x9 = canvas(x5, x8)\n    x10 = astuple(x4, x10)\n    x11 = ofcolor(I, x5)\n    x12 = first(x11)\n    x13 = shift(x12, UP)\n    x14 = ulcorner(x6)\n    x15 = urcorner(x6)\n    x16 = shoot(x14, NEG_UNITY)\n    x17 = shoot(x15, UP_RIGHT)\n    x18 = combine(x16, x17)\n    x19 = underfill(I, x5, x18)\n    O = canvas(x5, UNITY)\n    return O"], [1.0, "def solve_ed5e2388(I):\n    x1 = mostcolor(I)\n    x2 =mirror(I)\n    O = rot90(x2)\n    return O"], [1.0, "def solve_7ef81eac(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_5f116d44(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_f0016d39(I):\n    x1 = rbind(greater, ONE)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_68d522af(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_e9aabceb(I):\n    x1 = objects(I, T, F, T)\n    x2 = order(x1, height)\n    x3 = fork(recolor, color, x2)\n    x4 = mapply(x3, x2)\n    O = paint(I, x4)\n    return O"], [1.0, "def solve_afc32684(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_38096dfa(I):\n    x1 = asindices(I)\n    x2 = objects(I, T, F, T)\n    x3 = fork(multiply, sign, identity)\n    x4 = lbind(apply, x3)\n    x5 = chain(even, maximum, x4)\n    x6 = lbind(sfilter, x1)\n    x7 = fork(add, dmirror, identity)\n    x8 = rbind(rapply, I)\n    x9 = compose(x8, initset)\n    x10 = chain(first, x7, x9)\n    x11 = x10(I)\n    x12 = ofcolor(x11, ZERO)\n    x13 = rbind(add, DOWN)\n    x14 = chain(x13, ulcorner, x9)\n    x15 = fork(subtract, x14, x12)\n    x16 = fork(shift, x12, x15)\n    x17 = mapply(x16, x12)\n    x18 = interval(ZERO, x17, ONE)\n    x19 = paint(I, x18)\n    O = x10(x19)\n    return O"], [1.0, "def solve_b2f9b3f2(I):\n    x1 = astuple(identity, identity)\n    x2 = astuple(rot90, rot270)\n    x3 = astuple(x1, x2)\n    x4 = astuple(rot180, rot180)\n    x5 = astuple(rot270, rot90)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = leastcolor(I)\n    x9 = repeat(x8, ONE)\n    x10 = rbind(rapply, I)\n    x11 = chain(x10, initset, first)\n    x12 = compose(first, x11)\n    x13 = chain(dedupe, first, x12)\n    x14 = matcher(x13, x9)\n    x15 = extract(x7, x14)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = x16(I)\n    x19 = ofcolor(x18, x8)\n    x20 = height(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = lbind(astuple, x20)\n    x23 = apply(x22, x21)\n    x24 = rbind(shoot, DOWN)\n    x25 = mapply(x24, x23)\n    x26 = fill(x18, FOUR, x25)\n    x27 = astuple(x20, x20)\n    x28 = canvas(ZERO, x27)\n    x29 = asindices(x28)\n    x30 = shift(x29, x27)\n    x31 = shape(I)\n    x32 = maximum(x31)\n    x33 = lbind(shift, x30)\n    x34 = interval(ZERO, x32, x20)\n    x35 = pair(x34, x34)\n    x36 = mapply(x33, x35)\n    x37 = fill(x26, TWO, x36)\n    O = x17(x37)\n    return O"], [1.0, "def solve_129ebbfc(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = lbind(mapply, neighbors)\n    x13 = compose(x12, toindices)\n    x14 = fork(sfilter, x13, x10)\n    x15 = mapply(x14, x11)\n    x16 = lbind(argmin, x5)\n    x17 = compose(first, last)\n    x18 = fork(sfilter, x17, x10)\n    x19 = mapply(x18, x13)\n    x20 = fill(I, x1, x15)\n    O = fill(x20, FIVE, x19)\n    return O"], [1.0, "def solve_9338d607(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = other(x4, x5)\n    x7 = palette(I)\n    x8 = lrcorner(x5)\n    x9 = add(x8, UNITY)\n    x10 = llcorner(x5)\n    x11 = add(x10, DOWN_LEFT)\n    x12 = urcorner(x5)\n    x13 = add(x12, UP_RIGHT)\n    x14 = ulcorner(x5)\n    x15 = add(x14, NEG_UNITY)\n    x16 = shoot(x9, UNITY)\n    x17 = shoot(x11, DOWN_LEFT)\n    x18 = shoot(x13, UP_RIGHT)\n    x19 = shoot(x15, TEN_UNITY)\n    x20 = combine(x16, x17)\n    x21 = combine(x18, x19)\n    x22 = combine(x20, x21)\n    x23 = color(x6)\n    O = fill(I, x23, x22)\n    return O"], [1.0, "def solve_6ae90a4a(I):\n    x1 = initset(ORIGIN)\n    x2 = rbind(shoot, RIGHT)\n    x3 = compose(x2, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    O = paint(I, x5)\n    return O"], [1.0, "def solve_9c414443(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_aa37010f(I):\n    x1 = objects(I, T, F, F)\n    x2 = mapply(toindices, x1)\n    x3 = box(x2)\n    x4 = difference(x3, x2)\n    x5 = delta(x2)\n    x6 = position(x5, x4)\n    x7 = interval(difference, x6, ONE)\n    x8 = lbind(toivec, x5)\n    x9 = lbind(shift, x4)\n    x10 = apply(x8, x7)\n    x11 = last(x10)\n    x12 = lbind(tojvec, x5)\n    x13 = lbind(shift, x4)\n    x14 = apply(x12, x13)\n    x15 = lbind(astuple, x6)\n    x16 = chain(x11, x15, uppermost)\n    x17 = fork(recolor, color, x16)\n    x18 = mapply(x17, x29)\n    x19 = paint(I, x18)\n    x20 = branch(x9, identity, identity)\n    x21 = shape(I)\n    x22 = canvas(ZERO, x21)\n    x23 = hconcat(x22, x10)\n    x24 = objects(x23, F, F, T)\n    x25 = compose(toivec, uppermost)\n    x26 = lbind(shift, x24)\n    x27 = order(x25, x26)\n    x28 = paint(x19, x27)\n    x29 = ofcolor(x28, ZERO)\n    x30 = rbind(mapply, x29)\n    x31 = compose(x30, dneighbors)\n    x32 = fork(recolor, x31, ulcorner)\n    x33 = size(x259)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = pair(x34, x34)\n    x36 = mpapply(recolor, x35, x31)\n    O = paint(x12, x36)\n    return O"], [1.0, "def solve_7d1641e2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_5d120429(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_7c30e93a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_dfe5a8a3(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_f69d7e7e(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_d876aea6(I):\n    x1 = objects(I, T, F, F)\n    x2 = sfilter(x1, hline)\n    x3 = sfilter(x1, vline)\n    x4 = compose(hfrontier, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = compose(vfrontier, center)\n    x80 = fork(recolor, color, x7)\n    x9 = mapply(x8, x3)\n    x10 = combine(x6, x9)\n    x11 = paint(I, x10)\n    x12 = toindices(x6)\n    x13 = toindices(x9)\n    x14 = intersection(x12, x13)\n    O = fill(x11, FOUR, x14)\n    return O"], [1.0, "def solve_309e98ea(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = sfilter(x10, x12)\n    x14 = rbind(0000000, THREE)\n    x15 = lbind(ofcolor, THREE)\n    x16 = sfilter(x13, x15)\n    x17 = compose(size, dmirror)\n    x18 = argmax(x16, x17)\n    x19 = mostcolor(x18)\n    x20 = matcher(first, x19)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x18, x21)\n    x23 = difference(x18, x22)\n    x24 = sfilter(x23, x4)\n    x25 = compose(hfrontier, center)\n    x26 = fork(recolor, color, x25)\n    x27 = mapply(x26, x24)\n    x28 = paint(I, x27)\n    x29 = replace(x28, x19, EIGHT)\n    O = paint(x29, x27)\n    return O"], [1.0, "def solve_06184eff(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_6a3a259e(I):\n    x1 = partition(I)\n    x2 = fork(equality, toindices, box)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = color(x4)\n    x6 = palette(I)\n    x7 = remove(x5, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = toindices(x4)\n    x11 = apply(first, x10)\n    x12 = toindices(x4)\n    x13 = apply(last, x12)\n    x14 = rbind(contained, x11)\n    x15 = compose(x14, first)\n    x16 = rbind(contained, x13)\n    x17 = compose(x16, last)\n    x18 = fork(either, x15, x17)\n    x19 = ofcolor(I, x9)\n    x20 = sfilter(x19, x18)\n    x21 = rbind(gravitate, x4)\n    x22 = compose(x21, initset)\n    x23 = fork(add, identity, x22)\n    x24 = fork(connect, identity, x23)\n    x25 = mapply(x24, x20)\n    O = fill(I, x9, x25)\n    return O"], [1.0, "def solve_b9942cd1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = shift(x3, UP)\n    x5 = decrement(x1)\n    x6 = lbind(astuple, x5)\n    x7 = apply(x6, x4)\n    x8 = order(x7, identity)\n    x9 = lbind(shift, x8)\n    x10 = mapply(x9, x4)\n    O = fill(I, x1, x10)\n    return O"], [1.0, "def solve_0aac7f25(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [1.0, "def solve_8b03e3ef(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = positive(x2)\n    x4 = branch(x3, hsplit, vsplit)\n    x5 = x4(I, TWO)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 = palette(x6)\n    x9 = palette(x7)\n    x10 = intersection(x8, x9)\n    x11 = first(x10)\n    x12 = shape(x6)\n    x13 = canvas(x11, x12)\n    x14 = ofcolor(x6, x31)\n    x15 = ofcolor(x7, x31)\n    x16 = intersection(x14, x15)\n    O = fill(x13, TWO, x16)\n    return O"], [1.0, "def solve_645f9a5e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_185a435d(I):\n    x1 = rot180(I)\n    x2 = shoot(x1,ORIGIN)\n    x3 = apply(urcorner, x2)\n    x4 = astuple(SIX, TEN)\n    x5 = canvas(ZERO, x4)\n    x6 = asindices(x5)\n    x7 = box(x6)\n    x8 = center(x6)\n    x9 = lbind(contained, ZERO)\n    x10 = increment(x8)\n    x11 = interval(x9, x10, x8)\n    x12 = lbind(outbox, x6)\n    x13 = apply(x12, x11)\n    x14 = FOUR(x13)\n    x15 =alks500(x14)\n    x16 = apply(first, x15)\n    x17 = FOUR(x16)\n    x18 = sfilter(x17, ONE)\n    x19 = compose(backdrop, inbox)\n    x20 = mapply(x19, x18)\n    x21 = fill(x5, THREE, x20)\n    O = replace(x21, ZERO, ONE)\n    return O"], [1.0, "def solve_32f8fbbe(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [1.0, "def solve_39d84dae(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = asindices(I)\n    x5 = apply(first, x4)\n    x6 = difference(x5, x3)\n    x7 = ofcolor(I, x1)\n    x8 = rbind(adjacent, x7)\n    x9 = mfilter(x6, x8)\n    x10 = objects(I, T, F, T)\n    x11 = sizefilter(x10, ONE)\n    x12 = difference(x5, x11)\n    x13 = rbind(greater, ONE)\n    x14 = compose(x13, size)\n    x15 = sfilter(x12, x14)\n    x16 = difference(x5, x15)\n    x17 = fill(I, x1, x15)\n    O = fill(x17, x1, x16)\n    return O"], [1.0, "def solve_b66c331e(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = rbind(tosfilter, x2)\n    x4 = chain(size, x3, asindices)\n    x5 = matcher(x4, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x1, x6)\n    x8 = argmax(x7, size)\n    x9 = width(x8)\n    x10 = increment(x9)\n    x11 = matcher(last, x10)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x8, x12)\n    x14 = fill(I, ZERO, x13)\n    x15 = double(x509)\n    x16 = asindices(x8)\n    x17 = contained(ZERO, x16)\n    x18 = asindices(x8)\n    x19 = center(x18)\n    x20 = invert(x19)\n    x21 = shift(x15, x20)\n    x22 = compose(initset, last)\n    x23 = center(x18)\n    x24 = insert(x23, x1)\n    x25 = product(x27, x24)\n    x26 = sfilter(x25, x22)\n    x27 = compose(toindices, first)\n    x28 = mapply(x27, x26)\n    x29 = paint(x14, x28)\n    x30 = double(x9)\n    x31 = matcher(first, ZERO)\n    x32 = compose(flip, x31)\n    x33 = fork(both, x30, x32)\n    x34 = sfilter(x26, x33)\n    x35 = paint(x29, x34)\n    O = double(x50)\n    return O"], [1.0, "def solve_9a990061(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = color(x2)\n    return O"], [1.0, "def solve_25abd07d(I):\n    x1 = replace(I, SIX, TWO)\n    x2 = objects(x1, T, F, T)\n    x3 = apply(normalize, x2)\n    x4 = astuple(NINE, NINE)\n    x5 = canvas(ZERO, x4)\n    x6 = asindices(x5)\n    x7 = box(x6)\n    x8 = center(x6)\n    x9 = lbind(contained, ZERO)\n    x10 = rbind(subtract, x8)\n    x11 = compose(x9, x10)\n    x12 = chain(outbox, outbox, initset)\n    x13 = corners(x6)\n    x14 = mapply(x12, x13)\n    x15 = difference(x7, x14)\n    x16 = inbox(x7)\n    x17 = sfilter(x16, x11)\n    x18 = combine(x15, x17)\n    x19 = fill(x5, THREE, x18)\n    x20 = objects(x19, T, F, T)\n    x21 = apply(toindices, x20)\n    x22 = lbind(matcher, normalize)\n    x23 = lbind(extract, x21)\n    x24 = chain(ulcorner, x23, x22)\n    x25 = compose(x24, toindices)\n    x26 = fork(shift, identity, x25)\n    x27 = mapply(x26, x3)\n    O = paint(x5, x27)\n    return O"], [1.0, "def solve_5820abe7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = fork(combine, hfrontier, vfrontier)\n    x5 = width(I)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x3, x6)\n    x8 = tojvec(x7)\n    x9 = height(I)\n    x10 = decrement(x9)\n    x11 = lbind(astuple, x10)\n    x12 = apply(x11, x8)\n    x13 = lbind(shift, x12)\n    x14 = mapply(x13, x12)\n    O = fill(x7, ZERO, x14)\n    return O"], [1.0, "def solve_0d7f1e70(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = subgrid(x8, I)\n    x10 = increment(x4)\n    x11 = frontiers(x10)\n    x12 = divide(x11, FOUR)\n    x13 = increment(x12)\n    x14 = divide(x13, FOUR)\n    x15 = width(x9)\n    x16 = interval(ZERO, x15, ONE)\n    x17 = height(x9)\n    x18 = interval(ZERO, x17, ONE)\n    x19 = lbind(multiply, x14)\n    x20 = apply(x19, x17)\n    x21 = rbind(multiply, x14)\n    x22 = apply(x21, x18)\n    x23 = pair(x20, x22)\n    x24 = sfilter(x23, first)\n    x25 = mapply( last, x24)\n    x26 = fill(x9, x3, x25)\n    x27 =O = fill(x26, x3, x2)\n    x28 = O = x17(x27)\n    x29 = asobject(x28)\n    x30 = shape(I)\n    x31 = canvas(x3, x30)\n    x32 = objects(x29, F, F, T)\n    x33 = paint(x31, x32)\n    O = subgrid(x33, x30)\n    return O"], [1.0, "def solve_387e6ada(I):\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = order(x1, x2)\n    x4 = lbind(apply, last)\n    x5 = chain(x4, first, last)\n    x6 = lbind(colorfilter, x3)\n    x7 = compose(x6, first)\n    x8 = chain(size, x7, rightmost)\n    x9 = astuple(ONE, x8)\n    x10 = palette(I)\n    x11 = x9(x10)\n    x12 = x8(x11)\n    x13 = shape(x12)\n    x14 = canvas(ZERO, x13)\n    x15 = lbind(shift, x12)\n    x16 = lbind(multiply, x14)\n    x17 = compose(x15, x16)\n    x18 = fork(equality, identity, x17)\n    x19 = compose(x18, first)\n    x20 = labeled(x11)\n    x21 = positive(x20)\n    x22 = rbind(multiply, x14)\n    x23 = apply(x22, x3)\n    x24 = lbind(shift, x11)\n    x25 = mapply(x24, x23)\n    O = fill(x14, THREE, x25)\n    return O"], [1.0, "def solve_401fcf95(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = divide(x9, x6)\n    x11 = height(I)\n    x12 = increment(x11)\n    x13 = interval(ZERO, x12, ONE)\n    x14 = apply(tojvec, x13)\n    x15 = lbind(shift, x2)\n    x16 = mapply(x15, x14)\n    x17 = fill(I, x3, x16)\n    x18 = add(SIX, SIX)\n    x19 = canvas(x3, x18)\n    x20 = asobject(x19)\n    x21 = occurrences(x17, x20)\n    x22 = lbind(shift, x2)\n    x23 = mapply(x22, x21)\n    O = fill(x17, x3, x23)\n    return O"], [1.0, "def solve_8389c445(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_dadcdf76(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = ofcolor(I, ZERO)\n    x4 = toindices(x3)\n    x5 = ofcolor(I, x2)\n    x6 = toindices(x5)\n    x7 = ofcolor(I, ZERO)\n    x8 = toindices(x7)\n    x9 = ofcolor(I, ONE)\n    x10 = fill(I, NINE, x4)\n    x11 = fill(x10, RIGHT, x6)\n    x12 = fill(x11, leftmost, x6)\n    x13 = fill(x12, ZERO, x9)\n    x14 = fill(x13, ONE, x9)\n    x15 = fill(x14, TWO, x10)\n    x16 = ofcolor(I, THREE)\n    x17 = fill(x15, x16, x3)\n    x18 = normalize(x3)\n    x19 = shape(x38)\n    x20 = halve(x19)\n    x21 = invert(x20)\n    x22 = shift(x38, x21)\n    x23 = apply(outbox, x22)\n    x24 = rbind(shoot, x23)\n    x25 = mapply(x24, x2)\n    O = fill(x17, ONE, x25)\n    return O"], [1.0, "def solve_0e1ed7e3(I):\n    x1 = index(I, ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = lbind(shift, x2)\n    x4 = height(I)\n    x5 = lbind(multiply, x4)\n    x6 = apply(x5, x3)\n    x7 = mapply(x6, x2)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_30fd0017(I):\n    x1 = rbind(toobject, I)\n    x2 = chain(x1, numcolors, shape)\n    x3 = partition(I)\n    x4 = matcher(x2, ONE)\n    x5 = fork(both, x4, x3)\n    x6 = sfilter(x3, x5)\n    x7 = argmax(x6, size)\n    x8 = color(x7)\n    x9 = objects(I, T, F, F)\n    x10 = colorfilter(x9, x8)\n    x11 = difference(x9, x10)\n    x12 = rbind(toobject, I)\n    x13 = chain(x12, delta, rbind)\n    x14 = rbind(apply, x11)\n    x15 = lbind(chain, center)\n    x16 = lbind(lbind, shift)\n    x17 = rbind(apply, x15)\n    x18 = lbind(lbind, shoot)\n    x19 = chain(x17, x18, last)\n    x20 = fork(recolor, first, x19)\n    x21 = mapply(x20, x11)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_a71c49b7(I):\n    x1 = merge(I)\n    x2 = subgrid(x1, I)\n    x3 = replace(I, ZERO, TWO)\n    x4 = replace(x3, ONE, ZERO)\n    x5 = compress(x4)\n    x6 = width(x2)\n    x7 = halve(x6)\n    x8 = upscale(x5, x7)\n    x9 = ofcolor(x2, ZERO)\n    O = fill(x9, ZERO, x9)\n    return O"], [1.0, "def solve_e1e4e994(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = color(x6)\n    x8 = shape(I)\n    x9 = canvas(x7, x8)\n    x10 = normalize(x6)\n    x11 = objects(x9, F, F, T)\n    x12 = color(x11)\n    x13 = remove(ZERO, x11)\n    x14 = other(x13, x12)\n    x15 = rbind(colorcount, x7)\n    x16 = matcher(x15, ZERO)\n    x17 = sfilter(x12, x16)\n    x18 = difference(x5, x17)\n    x19 = fill(I, x6, x18)\n    x20 = normalize(x6)\n    O = paint(x19, x20)\n    return O"], [1.0, "def solve_03a9ee50(I):\n    x1 = initset(ORIGIN)\n    x2 = insert(x14, x1)\n    x3 = order(x2, identity)\n    x4 = last(x3)\n    x5 = remove(x4, x3)\n    x6 = last(x5)\n    x7 = ofcolor(I, x6)\n    x8 = inbox(x7)\n    O = fill(I, x6, x8)\n    return O"], [1.0, "def solve_7c35cb86(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_9e1f94a3(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_1176101d(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_f32dd5cf(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = argmin(x2, size)\n    x4 = argmax(x2, size)\n    x5 = x4(I)\n    x6 = x4(I)\n    x7 = power(outbox, ONE)\n    x8 = chain(first, x7, initset)\n    x9 = mapply(x8, x3)\n    x10 = fill(I, x1, x9)\n    O = fill(x10, TWO, x4)\n    return O"], [1.0, "def solve_d1a08eac(I):\n    x1 = ofcolor(I, FOUR)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = equality(x5, ZERO)\n    x7 = branch(x6, identity, vmirror)\n    x8 = x7(x4)\n    x9 = ofcolor(x8, EIGHT)\n    x10 = uppermost(x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, identity, hmirror)\n    x13 = x12(x8)\n    x14 = ofcolor(x13, EIGHT)\n    x15 = gravitate(x14, x9)\n    x16 = shift(x14, x15)\n    O = move(x13, x16, x2)\n    return O"], [1.0, "def solve_72611a63(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_509e1e37(I):\n    x1 = rbind(subgrid, I)\n    x2 = chain(mostcolor, x1, numcolors)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, identity, dmirror)\n    x5 = x4(I)\n    x6 = objects(x5, T, F, T)\n    x7 = difference(x6, x5)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x4(x10)\n    return O"], [1.0, "def solve_20489b83(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_89e80634(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(e349, x5)\n    x7 = lbind(chain, positive)\n    x8 = lbind(x7, size)\n    x9 = lbind(x8, x4)\n    x10 = rbind(sfilter, x9)\n    x11 = compose(e349, x10)\n    x12 = chain(x11, x9, size)\n    x13 = compose(normalize, x6)\n    x14 = fork(add, x13, x12)\n    x15 = chain(invert, x14, x12)\n    x16 = fork(shift, x15, x11)\n    x17 = fork(combine, x15, x16)\n    x18 = compose(x17, x18)\n    x19 = uppermost(x3)\n    x20 = rbind(add, x19)\n    x21 = chain(toivec, x20, x18)\n    x22 = rbind(apply, x2)\n    x23 = chain(x22, x21, x18)\n    x24 = fork(mapply, x18, x23)\n    x25 = power(x24, FOUR)\n    x26 = astuple(x21, x25)\n    x27 = rbind(shoot, UP_RIGHT)\n    x28 = compose(x27, x26)\n    x29 = fork(recolor, color, x28)\n    x30 = mapply(x29, x6)\n    x31 = paint(I, x30)\n    O = x1(x31)\n    return O"], [1.0, "def solve_b42bc093(I):\n    x1 =vellcorner(I)\n    x2 = shift(x1, NEG_UNITY)\n    x3 = recolor(THREE, x2)\n    x4 = shift(x3, UNITY)\n    x5 = recolor(SEVEN, x4)\n    x6 = shift(x5, DOWN_LEFT)\n    x7 = recolor(EIGHT, x6)\n    x8 = shift(x7, UP_RIGHT)\n    x9 = combine(x3, x8)\n    x10 = shift(x9, RIGHT)\n    x11 = complaints(I, x10)\n    x12 = product(x11, x11)\n    x13 = fork(combine, vfrontier, hfrontier)\n    x14 = mapply(x13, x12)\n    O = fill(I, ZERO, x14)\n    return O"], [1.0, "def solve_b4e2978a(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = insert(dmirror, x1)\n    x3 = insert(vmirror, x2)\n    x4 = insert(hmirror, x3)\n    x5 = insert(vmirror, x4)\n    x6 = shape(I)\n    x7 = canvas(FIVE, x6)\n    x8 = asobject(I)\n    x9 = shift(x8, UNITY)\n    x10 = paint(x7, x9)\n    x11 = objects(x10, toindices, identity)\n    x12 = apply(urcorner, x11)\n    x13 = shift(x12, RIGHT)\n    x14 = paint(x10, x13)\n    x15 = toindices(x14)\n    x16 = shape(x15)\n    x17 = increment(x16)\n    x18 = shift(x15, x17)\n    x19 = lbind(shift, x18)\n    x20 = objects(x14, T, apply, x19)\n    x21 = apply(x21, x20)\n    x22 = mapply(x19, x21)\n    x23 = paint(x10, x22)\n    x24 = objects(x23, T, F, T)\n    x25 = apply(x21, x24)\n    x26 = mapply(x25, x25)\n    O = paint(x23, x26)\n    return O"], [1.0, "def solve_dcebb587(I):\n    x1 = ofcolor(I, TWO)\n    x2 = equality(x1, THREE)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = difference(x3, x6)\n    x8 = mostcolor(I)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = rbind(colorcount, TWO)\n    x14 = argmax(x12, x13)\n    O = subgrid(x14, I)\n    return O"], [1.0, "def solve_3ae6206e(I):\n    x1 = rot180(I)\n    x2 = rbind(shoot, UP)\n    x3 = compose(x2, last)\n    x4 = fork(recolor, first, x3)\n    x5 = mapply(x4, x1)\n    O = paint(x1, x5)\n    return O"], [1.0, "def solve_3501ddc1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = underfill(I, EIGHT, x2)\n    x4 = apply(dneighbors, x3)\n    x5 = mapply(dneighbors, x4)\n    x6 = difference(x5, x3)\n    O = fill(x3, ONE, x6)\n    return O"], [1.0, "def solve_5cc60881(I):\n    x1 = rot270(I)\n    x2 =bind(order, identity)\n    x3 = switch(x1, ONE, TWO)\n    x4 = apply(x2, x3)\n    x5 = switch(x4, ONE, TWO)\n    O = cmirror(x5)\n    return O"], [1.0, "def solve_c8daab4a(I):\n    x1 = mostcolor(I)\n    x2 = valmax(I, NINE)\n    x3 = matcher(Nnormal, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(size, x4)\n    x6 = apply(x5, I)\n    x7 = asindices(I)\n    x8 = ofcolor(I, x1)\n    x9 = difference(x7, x8)\n    x10 = fill(I, NEG_ONE, x9)\n    x11 = lbind(shift, x8)\n    x12 = mapply(x11, x10)\n    O = fill(x10, double, x12)\n    return O"], [1.0, "def solve_cff50689(I):\n    x1 = astuple(SIX, FIVE)\n    x2 = canvas(numcolors, x1)\n    x3 = equality(lowermost, TWO)\n    x4 = portrait(I)\n    x5 = branch(x3, x2, x4)\n    x6 = branch(x5, TWO, x5)\n    x7 = canvas(apply, x6)\n    x8 = double(SIX)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = branch(x7, x2, x9)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = repeat(x10, x12)\n    x14 = merge(x13)\n    x15 = objects(I, T, F, F)\n    x16 = colorfilter(x15, TWO)\n    x17 = compose(center, ulcorner)\n    x18 = subgrid(x17, I)\n    x19 = add(DOWN, x10)\n    x20 = add(x19, astuple)\n    x21 = add(x20, x4)\n    x22 = canvas(ZERO, x21)\n    x23 = paint(x22, x19)\n    x24 = normalize(x2)\n    x25 = shift(x24, x4)\n    x26 = lbind(shift, x25)\n    x27 = objects(x23, T, F, F)\n    x28 = compose(x26, x4)\n    x29 = apply(x28, x27)\n    x30 = mapply(x23, x29)\n    O = paint(x23, x30)\n    return O"], [1.0, "def solve_9565e023(I):\n    x1 = shape(I)\n    x2 = add(DOWN, x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = toivec(x11)\n    x13 = width(I)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = connect(x12, x15)\n    x17 = height(I)\n    x18 = decrement(x17)\n    x19 = toivec(x18)\n    x20 = connect(x16, x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = tojvec(x22)\n    x24 = connect(x19, x23)\n    x25 = astuple(x14, x24)\n    x26 = astuple(x17, x24)\n    x27 = astuple(x66666666, x17)\n    x28 = astuple(x27, x28)\n    x29 = astuple(x22, x27)\n    x30 = astuple(x003, x30)\n    x31 = mostcolor(I)\n    x32 = canvas(x31, x29)\n    x33 = matcher(first, x31)\n    x34 = compose(flip, x33)\n    x35 = sfilter(x12, x34)\n    x36 = fork(combine, hfrontier, vfrontier)\n    x37 = mapply(x36, x35)\n    O = fill(x32, x1, x37)\n    return O"], [1.0, "def solve_13d76093(I):\n    x1 = fgpartition(I)\n    x2 = matcher(color, ZERO)\n    x3 = extract(x1, x2)\n    x4 = ulcorner(x3)\n    x5 = subtract(x4, DOWN)\n    x6 = shape(x3)\n    x7 = add(x6, TWOBY_ZERO)\n    O = crop(I, x5, x7)\n    return O"], [1.0, "def solve_7cfcae63(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_ae64b7eb(I):\n    x1 = ofcolor(I, TWO)\n    x2 = shape(I)\n    x3 = multiply(x2, x2)\n    x4 = canvas(ZERO, x3)\n    x5 = rbind(multiply, x2)\n    x6 = apply(x5, x1)\n    x7 = asobject(I)\n    x8 = lbind(shift, x7)\n    x9 = mapply(x8, x6)\n    O = paint(x4, x9)\n    return O"], [1.0, "def solve_62d1b9ec(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(THREE, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = contained(I, x10)\n    x12 = branch(x11, ulcorner, urcorner)\n    x13 = shape(I)\n    x14 = decrement(x13)\n    x15 = index(I, x14)\n    x16 = ulcorner(x14)\n    x17 = crop(I, x14, x16)\n    x18 = branch(x11, llcorner, uppermost)\n    x19 = shape(I)\n    x20 = increment(x19)\n    x21 = index(I, x20)\n    x22 = llcorner(x14)\n    x23 = remove(x21, x10)\n    x24 = recolor(x21, x22)\n    x25 = compose( lrcorner, last)\n    x26 = remove(x23, x10)\n    x27 = combine(x24, x26)\n    x28 = fork(connect, first, last)\n    x29 = product(x27, x43)\n    x30 = size(x29)\n    x31 = power(x28, x30)\n    x32 = astuple(x31, x31)\n    x33 = x12(x12)\n    x34 = x24(x12)\n    x35 = canvas(x21, x33)\n    x36 = fill(x35, x3, x32)\n    x37 = paint(x36, x12)\n    O = replace(x37, x10, x5)\n    return O"], [1.0, "def solve_17a35cb3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = merge(x5)\n    x7 = fill(I, x3, x6)\n    x8 = compose(hmirror, vmirror)\n    x9 = x8(x7)\n    x10 = hmirror(x7)\n    x11 = vmirror(x10)\n    x12 = x8(x11)\n    x13 = combine(x9, x12)\n    x14 = pair(x1, x13)\n    x15 = sfilter(x14, hline)\n    x16 = mapply(neighbors, x15)\n    x17 = mapply(neighbors, x12)\n    x18 = height(x17)\n    x19 = height(x12)\n    x20 = divide(x18, x19)\n    x21 = width(x21)\n    x22 = width(x12)\n    x23 = divide(x21, x22)\n    x24 = vmirror(x23)\n    x25 = multiply(x24, x19)\n    x26 = add(x25, x20)\n    x27 = subtract(x25, x22)\n    x28 = divide(x26, x22)\n    x29 = increment(x28)\n    x30 = multiply(x27, x29)\n    x31 = rbind(multiply, x30)\n    x32 = apply(x31, x15)\n    x33 = merge(x12)\n    x34 = lbind(shift, x33)\n    x35 = mapply(x34, x32)\n    O = paint(x7, x35)\n    return O"], [1.0, "def solve_fedb65bb(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_91079819(I):\n    x1 = rbind(greater, ONE)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_9c63af10(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_9d032616(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_fba391a1(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = merge(x3)\n    x9 = cmirror(x8)\n    x10 = astuple(x11, x10)\n    x11 = hmirror(x10)\n    x12 = vmirror(x11)\n    x13 = hconcat(x11, x12)\n    x14 = hconcat(x13, x1)\n    O = vconcat(x13, x14)\n    return O"], [1.0, "def solve_b008b917(I):\n    x1 = partition(I)\n    x2 = fork(equality, toindices, box)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = color(x4)\n    x6 = palette(I)\n    x7 = remove(x5, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = toindices(x4)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = sfilter(x11, vline)\n    x16 = size(x15)\n    x17 = increment(x16)\n    x18 = height(I)\n    x19 = divide(x17, x12)\n    x20 = increment(x19)\n    x21 = width(I)\n    x22 = divide(x21, x12)\n    x23 = increment(x22)\n    x24 = astuple(x16, x23)\n    x25 = canvas(x9, x24)\n    x26 = asindices(I)\n    x27 = ofcolor(I, x5)\n    x28 = outbox(x25)\n    x29 = intersection(x27, x28)\n    x30 = apply(initset, x29)\n    x31 = rbind(rapply, x20)\n    x32 = compose(first, x31)\n    x33 = apply(x32, x30)\n    x34 = ofcolor(I, x5)\n    x35 = difference(x34, x29)\n    x36 = ofcolor(I, x5)\n    x37 = fill(x25, THREE, x36)\n    x38 = shift(x31, x37)\n    x39 = ofcolor(I, x5)\n    x40 = difference(x39, x38)\n    O = fill(x37, THREE, x40)\n    return O"], [1.0, "def solve_960e5d52(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_766e4681(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_16f62bb0(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_58ace031(I):\n    x1 = frontiers(I)\n    x2 = mostcolor(I)\n    x3 = shape(I)\n    x4 = canvas(x2, x3)\n    x5 = hconcat(I, x4)\n    x6 = objects(x5, F, F, T)\n    x7 = argmax(x6, size)\n    x8 = toindices(x7)\n    x9 = ZERO(x2)\n    x10 = equality(x9, x8)\n    x11 = shift(x7, x10)\n    x12 = toindices(x7)\n    x13 = compose(x11, x12)\n    x14 = rbind(intersection, x13)\n    x15 = chain(size, x14, toindices)\n    x16 = matcher(x15, ZERO)\n    x17 = objects(x10, T, F, T)\n    x18 = sfilter(x17, x16)\n    x19 = argmax(x18, size)\n    x20 = matcher(first, x2)\n    x21 = sfilter(x19, x20)\n    x22 = difference(x19, x21)\n    x23 = color(x12)\n    x24 = fill(x22, x23, x27)\n    O = fill(x24, x23, x22)\n    return O"], [1.0, "def solve_b2e353cf(I):\n    x1 = THREEe21\n    x2 = dmirror(I)\n    x3 = equality(x1, x2)\n    x4 = flip(x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = combine(x15, x16)\n    x18 = intersection(x15, x16)\n    x19 = difference(x17, x18)\n    O = fill(x14, THREE, x19)\n    return O"], [1.0, "def solve_7df7b8a3(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_e15f254f(I):\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = mapply(x11, x5)\n    x13 = combine(x7, x12)\n    x14 = llcorner(x7)\n    x15 = mapply(x14, x9)\n    x16 = combine(x13, x15)\n    x17 = branch(x1, identity, height)\n    x18 = x17(x10)\n    x19 = astuple(ONE, x18)\n    x20 = canvas(ZERO, x19)\n    x21 = asobject(x20)\n    x22 = occurrences(x2, x21)\n    x23 = intersection(x2, x22)\n    O = fill(x2, ONE, x23)\n    return O"], [1.0, "def solve_f2f1d57a(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_9983940e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_337ab09e(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, rbind, tophalf)\n    x6 = x5(I)\n    x7 = fork(add, height, width)\n    x8 = x7(I)\n    x9 = width(x6)\n    x10 = increment(x9)\n    x11 = interval(ZERO, x10, ONE)\n    x12 = apply(x7, x11)\n    x13 = lbind(intersection, x12)\n    x14 = lbind(shift, x12)\n    x15 = mapply(x14, x13)\n    O = fill(x6, FOUR, x15)\n    return O"], [1.0, "def solve_56c0e686(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_045c5e79(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_63beaf5c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_41988ee7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = interval(ONE, NINE, ONE)\n    x8 = apply(tojvec, x7)\n    x9 = lbind(shift, x8)\n    x10 = mapply(x9, x6)\n    O = fill(x10, FIVE, x3)\n    return O"], [1.0, "def solve_7ac31386(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = argmax(x1, size)\n    x3 = remove(x2, x1)\n    x4 = merge(x3)\n    x5 = subgrid(x4, I)\n    x6 = chain(ulcorner, asindices, objects)\n    x7 = x6(x5)\n    x8 = argmin(x7, x7)\n    x9 = mostcolor(x8)\n    x10 = shape(x2)\n    x11 = canvas(x9, x10)\n    x12 = lbind(shift, x8)\n    x13 = mapply(x12, x11)\n    O = paint(x11, x13)\n    return O"], [1.0, "def solve_dcce0a14(I):\n    x1 = ofcolor(I, TWO)\n    x2 = papply(neighbors, x1)\n    x3 = lbind(shift, x2)\n    x4 = mapply(x3, x5)\n    O = fill(I, ONE, x4)\n    return O"], [1.0, "def solve_d2a950fe(I):\n    x1 = ofcolor(I, THREE)\n    x2 = ofcolor(I, TWO)\n    x3 = mapply(first, x1)\n    x4 = mapply(last, x1)\n    x5 = fill(I, SIX, x3)\n    x6 = fill(x5, SEVEN, x4)\n    O = fill(x6, EIGHT, x5)\n    return O"], [1.0, "def solve_9676bc05(I):\n    x1 = trim(I)\n    x2 = objects(x1, F, T, T)\n    x3 = argmax(x2, numcolors)\n    x4 = toindices(x3)\n    x5 = normalize(x3)\n    x6 = toindices(x5)\n    x7 = combine(x4, x6)\n    x8 = intersection(x4, x6)\n    x9 = difference(x7, x8)\n    x10 = mostcolor(I)\n    x11 = ofcolor(x5, x10)\n    x12 = asindices(x5)\n    x13 = combine(x11, x12)\n    x14 = fill(x5, x10, x13)\n    x15 = objects(x14, T, F, T)\n    x16 = apply(uppermost, x15)\n    x17 = size(x16)\n    x18 = equality(ONE, x17)\n    x19 = lbind(shift, x4)\n    x20 = mapply(x19, x16)\n    x21 = paint(x14, x20)\n    x22 = interval(ZERO, NINE, ONE)\n    x23 = apply(double, x33)\n    x24 = apply(increment, x23)\n    x25 = apply(tojvec, x24)\n    x26 = prapply(add, x25, x21)\n    x27 = fork(equality, identity, x26)\n    x28 = mapply(x27, x2)\n    O = fill(x21, x10, x28)\n    return O"], [1.0, "def solve_46c776cb(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_99380a25(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_5741a648(I):\n    x1 = lbind(adjacent, x4)\n    x2 = compose(x1, size)\n    x3 = fork(both, x2, ONE)\n    x4 = apply(x3, I)\n    x5 = sfilter(x4, x4)\n    x6 = corners(x5)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = x7(x6)\n    x9 = fill(I, EIGHT, x8)\n    x10 = size(x1)\n    x11 = decrement(x10)\n    x12 = tojvec(x11)\n    x13 = shift(x9, x12)\n    x14 = fill(x9, TWO, x13)\n    x15 = size(x2)\n    x16 = decrement(x15)\n    x17 = toivec(x16)\n    x18 = shift(x14, x17)\n    x19 = fill(x19, FOUR, x18)\n    x20 = size(x3)\n    x21 = decrement(x20)\n    x22 = tojvec(x21)\n    x23 = shift(x19, x22)\n    x24 = fill(x21, THREE, x23)\n    x25 = size(x2)\n    x26 = decrement(x25)\n    x27 = toivec(x26)\n    x28 = shift(x93, x27)\n    x29 = fill(x24, THREE, x28)\n    x30 = size(x2)\n    x31 = decrement(x30)\n    x32 = tojvec(x31)\n    x33 = shift(x77, x32)\n    x34 = fill(x29, THREE, x33)\n    x35 = merge(x5)\n    x36 = cover(x35, x34)\n    x37 = paint(x36, x31)\n    O = x7(x37)\n    return O"], [1.0, "def solve_30a22475(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_d30b808e(I):\n    x1 = width(I)\n    x2 = astuple(ONE, x1)\n    x3 = decrement(x1)\n    x4 = tojvec(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(THREE, x5)\n    x7 = equality(x1, x6)\n    x8 = height(I)\n    x9 = astuple(ONE, x8)\n    x10 = decrement(x9)\n    x11 = toivec(x10)\n    x12 = shoot(x11, x11)\n    x13 = combine(x7, x12)\n    x14 = tojvec(x3)\n    x15 = decrement(x14)\n    x16 = astuple(x10, x15)\n    x17 = connect(x13, x16)\n    x18 = size(x17)\n    x19 = astuple(x17, x6)\n    x20 = connect(x13, x19)\n    x21 = size(x20)\n    x22 = astuple(x17, x21)\n    x23 = connect(x17, x22)\n    x24 = fork(recolor, color, x23)\n    x25 = mapply(x24, x4)\n    O = paint(I, x25)\n    return O"], [1.0, "def solve_f86a850f(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x28)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [1.0, "def solve_e0cb7f72(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_9f4da970(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_9253ebf9(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = compose(x2, x1)\n    x4 = fork(intersection, x1, x3)\n    x5 = compose(size, x4)\n    x6 = palette(I)\n    x7 = matcher(x5, ZERO)\n    x8 = sfilter(x6, x7)\n    x9 = totuple(x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = mapply(neighbors, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = ofcolor(I, x11)\n    x17 = mapply(neighbors, x16)\n    x18 = toobject(x17, I)\n    x19 = mostcolor(x18)\n    x20 = rbind(shoot, UNITY)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = fork(combine, x20, x21)\n    x23 = rbind(shoot, UP_RIGHT)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = fork(combine, x23, x24)\n    x26 = fork(combine, x22, x25)\n    x27 = ofcolor(I, x11)\n    x28 = ofcolor(I, x10)\n    x29 = combine(x27, x28)\n    x30 = mapply(x26, x29)\n    x31 = ofcolor(I, x15)\n    x32 = intersection(x31, x30)\n    x33 = ofcolor(I, x19)\n    x34 = intersection(x33, x30)\n    x35 = fill(I, x10, x32)\n    O = fill(x35, x11, x34)\n    return O"], [1.0, "def solve_c7bd9a3f(I):\n    x1 = trim(I)\n    x2 = height(x1)\n    x3 = width(x1)\n    x4 = astuple(x2, x3)\n    x5 = repeat(x9, x4)\n    x6 = combine(x5, ONE)\n    x7 = dmirror(x6)\n    x8 = astuple(x2, x3)\n    x9 = dmirror(x8)\n    x10 = hupscale(x9, x4)\n    x11 = height(x10)\n    x12 = divide(x01, x11)\n    x13 = increment(x12)\n    x14 = width(x10)\n    x15 = divide(x14, x4)\n    x16 = increment(x15)\n    x17 = repeat(x10, x16)\n    x18 = combine(x6, x17)\n    x19 = repeat(x18, ONE)\n    x20 = merge(x19)\n    x21 = decrement(x17)\n    x22 = hsplit(x20, x21)\n    x23 = merge(x22)\n    x24 = crop(x20, ORIGIN, x27)\n    x25 = crop(x20, DOWN, x27)\n    x26 = shape(x25)\n    x27 = add(x26, x24)\n    x28 = add(x27, x25)\n    x29 = canvas(ZERO, x28)\n    x30 = asobject(x22)\n    x31 = shift(x30, UNITY)\n    x32 = paint(x29, x31)\n    x33 = rot90(x32)\n    x34 = shift(x33, x2)\n    x35 = paint(x32, x34)\n    x36 = rot270(x35)\n    x37 = shift(x31, x2)\n    x38 = paint(x35, x37)\n    x39 = rot90(x38)\n    x40 = shift(x39, x2)\n    O = paint(x40, x29)\n    return O"], [1.0, "def solve_0d83159d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_c991acad(I):\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = chain(merge, x3, x1)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x4)\n    O = paint(I, x6)\n    return O"], [1.0, "def solve_3db10a4f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = rbind(subgrid, I)\n    x4 = rbind(colorcount, x1)\n    x5 = chain(x4, x3, x2)\n    x6 = lbind(greater, THREE)\n    x7 = chain(x6, x5, x2)\n    x8 = rbind(colorcount, x1)\n    x9 = fork(equality, x7, x8)\n    x10 = sfilter(x2, x9)\n    O = fill(I, ZERO, x10)\n    return O"], [1.0, "def solve_1744ac9c(I):\n    x1 = frontiers(I)\n    x2 = compose(size, dedupe)\n    x3 = matcher(x2, ONE)\n    x4 = x3(I)\n    x5 = palette(x4)\n    x6 = shape(x4)\n    x7 = canvas(x6, x5)\n    O = argmax(x7, x3)\n    return O"], [1.0, "def solve_45799ea6(I):\n    x1 = initset(ORIGIN)\n    x2 = toindices(x1, ORIGIN)\n    x3 = lbind(shift, x2)\n    x4 = shape(I)\n    x5 = maximum(x4)\n    x6 = lbind(multiply, x4)\n    x7 = apply(x6, x3)\n    x8 = mapply(x3, x7)\n    O = paint(I, x8)\n    return O"], [1.0, "def solve_15f8a676(I):\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = initset(x3)\n    x5 = rbind(shoot, UNITY)\n    x6 = lbind(compose, x5)\n    x7 = lbind(extract, x4)\n    x8 = chain(x6, x7, x6)\n    x9 = decrement(x1)\n    x10 = astuple(x9, x8)\n    x11 = astuple(x7, x9)\n    x12 = x11(x10)\n    x13 = x11(x7)\n    x14 =branch(x12, x13, x4)\n    x15 = branch(x11, x14, x4)\n    x16 = apply(x15, x1)\n    x17 = mapply(x16, x16)\n    O = fill(I, ZERO, x17)\n    return O"], [1.0, "def solve_298471cb(I):\n    x1 = switch(I, EIGHT, TWO)\n    x2 = switch(x1, ONE, TWO)\n    x3 = compress(x2)\n    x4 = rbind(toobject, I)\n    x5 = UNITY(x3)\n    x6 = rbind(colorcount, x4)\n    x7 = matcher(x6,5511)\n    x8 = chain(x7, x5, x4)\n    x9 = vmirror(x8)\n    x10 = hconcat(x9, x8)\n    x11 = hmirror(x10)\n    x12 = vconcat(x11, x8)\n    x13 = vconcat(x12, x10)\n    O = hmirror(x13)\n    return O"], [1.0, "def solve_f6507781(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = equality(x1, x2)\n    x4 = crop(x3, SEVEN, EIGHT)\n    O = hconcat(x4, x3)\n    return O"], [1.0, "def solve_6dc0b47e(I):\n    x1 = ofcolor(I, TWO)\n    x2 = x3aa(x1, ONE)\n    x3 = decrement(x2)\n    x4 = tojvec(x3)\n    x5 = shoot(x4, UNITY)\n    x6 = rbind(shoot, DOWN)\n    x7 = compose(x6, last)\n    x8 = fork(recolor, first, x7)\n    x9 = mapply(x8, x5)\n    O = paint(I, x9)\n    return O"], [1.0, "def solve_dcacfcc3(I):\n    x1 = ofcolor(I, TWO)\n    x2 = subgrid(x1, I)\n    x3 = trim(x2)\n    x4 = palette(x3)\n    x5 = compose(maximum, switch)\n    x6 = lbind(extract, x4)\n    x7 = lbind(matcher, x5)\n    x8 = compose(x6, x7)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    x11 = cover(I, x10)\n    x12 = ofcolor(x11, TWO)\n    x13 = subgrid(x12, x11)\n    x14 = asobject(x13)\n    x15 = occurrences(x14, x4)\n    x16 = lbind(shift, x14)\n    x17 = mapply(x16, x15)\n    O = fill(x11, ONE, x17)\n    return O"], [1.0, "def solve_da3afea0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_2faac5d7(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_3443aeb4(I):\n    x1 = switch(I, ORIGIN, THREE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [1.0, "def solve_5bfeb81a(I):\n    x1 = rot180(I)\n    x2 = equality(x1, TWO)\n    x3 = hmirror(I)\n    x4 = insert(x3, I)\n    x5 = lbind(vmmirror, x4)\n    x6 = lbind(hmirror, x4)\n    x7 = compose(x5, x6)\n    x8 = x7(x2)\n    O = branch(x8, vmirror, hmirror)\n    return O"], [1.0, "def solve_bd3460d5(I):\n    x1 = astuple(SIX, FIVE)\n    x2 = cmirror(I)\n    x3 = hconcat(x1, x2)\n    x4 = hmirror(x3)\n    x5 = vconcat(x4, x4)\n    x6 = vconcat(x5, x4)\n    O = cellwise(x6, ZERO, ONE)\n    return O"], [1.0, "def solve_946ad92c(I):\n    x1 = partition(I)\n    x2 = chain(size, dedupe, neighbors)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, dmirror, identity)\n    x5 = x4(I)\n    x6 = objects(x5, T, F, F)\n    x7 = order(x6, leftmost)\n    x8 = apply(color, x7)\n    x9 = repeat(x8, ONE)\n    O = x4(x9)\n    return O"], [1.0, "def solve_7fe888ab(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_a4144ebf(I):\n    x1 = replace(I, E349, ZERO)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [1.0, "def solve_58c97793(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_7fc12f1f(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, T)\n    x4 = merge(x3)\n    O = vmirror(x4)\n    return O"], [1.0, "def solve_e36cd606(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_7c329b5f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_7e191ea1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_93ef54cf(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, x2)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [1.0, "def solve_802dec62(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = argmin(x2, size)\n    x4 = shoot(x3, UP_RIGHT)\n    x5 = combine(x4, x4)\n    x6 = recolor(x1, x5)\n    x7 = fork(combine, first, last)\n    x8 = mapply(x7, x6)\n    O = fill(I, x1, x8)\n    return O"], [1.0, "def solve_ad5c438d(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_3371a5b0(I):\n    x1 = lbind(fork, greater)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = lbind(recolor, ZERO)\n    x5 = compose(x4, x3)\n    x6 = fork(paint, identity, x5)\n    x7 = compose(rot90, x6)\n    x8 = power(x7, FOUR)\n    x9 = rot180(I)\n    x10 = power(x9, TWO)\n    x11 = fork(combine, x8, x10)\n    x12 = compose(x11, x7)\n    x13 = apply(x12, x9)\n    O = paint(x9, x13)\n    return O"], [1.0, "def solve_5e6c60ec(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_f6b46143(I):\n    x1 = rbind(difference, x2)\n    x2 = chain(size, x1, palette)\n    x3 = matcher(x2, ZERO)\n    x4 = extract(vsindices, x3)\n    x5 = lbind(shift, x4)\n    x6 = objects(I, T, F, T)\n    x7 = mapply(x5, x6)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_c23fabb5(I):\n    x1 = astuple(identity, identity)\n    x2 = astuple(rot90, rot270)\n    x3 = astuple(x1, x2)\n    x4 = astuple(rot180, rot180)\n    x5 = astuple(rot270, rot90)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = leastcolor(I)\n    x9 = repeat(x8, ONE)\n    x10 = rbind(rapply, I)\n    x11 = chain(x10, initset, first)\n    x12 = compose(first, x11)\n    x13 = chain(dedupe, first, x12)\n    x14 = matcher(x13, x9)\n    x15 = extract(x7, x14)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = x16(I)\n    x19 = ofcolor(x18, x8)\n    x20 = height(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = lbind(astuple, x20)\n    x23 = apply(x22, x21)\n    x24 = rbind(shoot, DOWN)\n    x25 = mapply(x24, x23)\n    x26 = fill(x18, FOUR, x25)\n    x27 = astuple(x20, x20)\n    x28 = canvas(ZERO, x27)\n    x29 = asindices(x28)\n    x30 = shift(x29, x27)\n    x31 = shape(I)\n    x32 = maximum(x31)\n    x33 = lbind(shift, x30)\n    x34 = interval(ZERO, x32, x20)\n    x35 = pair(x34, x34)\n    x36 = mapply(x33, x35)\n    x37 = fill(x26, TWO, x36)\n    O = x17(x37)\n    return O"], [1.0, "def solve_5ccc604d(I):\n    x1 = ulcorner(I)\n    x2 = subgrid(x1, I)\n    x3 = upscale(x2, THREE)\n    x4 = hconcat(x3, x3)\n    x5 = hconcat(x4, x3)\n    x6 = vconcat(x5, x5)\n    x7 = vconcat(x6, x5)\n    O = cellwise(x3, x7, ZERO)\n    return O"], [1.0, "def solve_c2e584b0(I):\n    x1 = ofcolor(I, TWO)\n    x2 = shape(I)\n    x3 = maximum(x2)\n    x4 = interval(ZERO, x3, ONE)\n    x5 = canvas(EIGHT, x4)\n    x6 = asobject(I)\n    x7 = lbind(shift, x6)\n    x8 = height(x6)\n    x9 = rbind(multiply, x8)\n    x10 = apply(x9, x3)\n    x11 = mapply(x7, x10)\n    O = paint(x5, x11)\n    return O"], [1.0, "def solve_fca2d930(I):\n    x1 = hconcat(I, I)\n    x2 = vconcat(x1, x1)\n    x3 = asindices(x2)\n    x4 = mostcolor(I)\n    x5 = ofcolor(x2, x4)\n    x6 = difference(x3, x5)\n    x7 = mapply(ineighbors, x6)\n    O = underfill(x2, EIGHT, x7)\n    return O"], [1.0, "def solve_d7d88984(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_6db9e05d(I):\n    x1 = ofcolor(I, EIGHT)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = equality(x5, ZERO)\n    x7 = branch(x6, identity, vmirror)\n    x8 = x7(x4)\n    x9 = ofcolor(x8, EIGHT)\n    x10 = uppermost(x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, identity, hmirror)\n    x13 = x12(x8)\n    x14 = ofcolor(x13, EIGHT)\n    x15 = ofcolor(x13, TWO)\n    x16 = rbind(shoot, DOWN)\n    x17 = mapply(x16, x14)\n    x18 = height(x13)\n    x19 = rbind(repeat, x18)\n    x20 = chain(x17, x19, double)\n    x21 = compose(x20, last)\n    x22 = fork(combine, first, x21)\n    x23 = fork(recolor, x22, outbox)\n    x24 = mapply(x23, x4)\n    O = paint(x13, x24)\n    return O"], [1.0, "def solve_f320b26e(I):\n    x1 = palette(I)\n    x2 = remove(vsplit, I)\n    x3 = lbind(hsplit, I)\n    x4 = argmax(x2, x3)\n    x5 = other(x1, x4)\n    x6 = ofcolor(I, x4)\n    x7 = ofcolor(I, x5)\n    x8 = combine(x6, x7)\n    x9 = fill(I, x5, x8)\n    x10 = difference(x9, x7)\n    O = fill(x9, x4, x10)\n    return O"], [1.0, "def solve_22675d4d(I):\n    x1 = rot270(I)\n    x2 = hconcat(x1, x1)\n    O = hconcat(x2, x2)\n    return O"], [1.0, "def solve_06fd67c3(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_29b4d201(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_8b74f01d(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_87f92023(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 =filter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [1.0, "def solve_19971b9f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_103082d8(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_650015af(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_99dccc9e(I):\n    x1 = initset(ZERO)\n    x2 = insert(ORIGIN, x1)\n    x3 = lbind(shift, x2)\n    x4 = compose(x3, toindices)\n    x5 = compose(lrcorner, x4)\n    x6 = compose(ofcolor, x5)\n    x7 = fork(mapply, x6, x4)\n    x8 = compose(x5, x7)\n    x9 = fork(recolor, x8, x6)\n    x10 = mapply(x9, x1)\n    O = paint(I, x10)\n    return O"], [1.0, "def solve_b4715f44(I):\n    x1 = replace(I, SIX, TWO)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = mostcolor(I)\n    x14 = combine(x13, x12)\n    x15 = increment(x14)\n    x16 = canvas(x13, x15)\n    x17 = asobject(x16)\n    x18 = height(I)\n    x19 = astuple(last, x18)\n    x20 = increment(x19)\n    x21 = width(I)\n    x22 = astuple(x21, x20)\n    x23 = canvas(x9, x22)\n    x24 = asobject(x23)\n    x25 = decrement(x24)\n    x26 = width(I)\n    x27 = astuple(x26, x25)\n    x28 = prapply(astuple, x27)\n    x29 = lbind(shift, x10)\n    x30 = mapply(x29, x28)\n    x31 = paint(I, x30)\n    O = x9(x31)\n    return O"], [1.1, "def solve_38181f68(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, extract)\n    x35 = compose(x34, x10)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, extract)\n    x40 = compose(x39, x35)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(a"], [1.1, "def solve_b7e97c78(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =27(I)\n    x3 = trim(x2)\n    x4 = lefthalf(x3)\n    x5 = tophalf(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(x4)\n    x8 =675(x7)\n    x9 = width(x8)\n    x10 = increment(x9)\n    x11 = interval(ZERO, x10, x5)\n    x12 = merge(x11)\n    x13 = partition(x12)\n    x14 = lbind(colorfilter, x13)\n    x15 = compose(size, x14)\n    x16 = matcher(x15, TWO)\n    x17 = extract(x14, x16)\n    x18 = lbind(colorcount, x17)\n    x19 = argmin(x19, x18)\n    x20 = ofcolor(x12, x19)\n    x21 = ofcolor(x12, x18)\n    x22 = neighbors(ORIGIN)\n    x23 = leftmost(x22)\n    x24 = ofcolor(x12, x19)\n    x25 = rightmost(x24)\n    x26 = difference(x23, x25)\n    x27 = ofcolor(x12, x19)\n    x28 = leftmost(x27)\n    x29 = ofcolor(x12, x18)\n    x30 = initset(x28)\n    x31 = insert(x29, x30)\n    x32 = insert(x32, x31)\n    x33 = width(x12)\n    x34 = tojvec(x33)\n    x35 = initset(x34)\n    x36 = insert(x33, x35)\n    x37 = insert(x36, x28)\n    x38 = insert(x30, x37)\n    x39 = compose(backdrop, inbox)\n    x40 = lbind(rbind, manhattan)\n    x41 = chain(x39, x40, initset)\n    x42 = lb"], [1.1, "def solve_88ed5446(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_77b659f2(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_628b813b(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(111, x11, identity)\n    x13 = chain(size, x9, x12)\n    x14 = interval(ONE, SIX, ONE)\n    x15 = argmax(x14, x13)\n    x16 = matcher(x13, x15)\n    x17 = fork(both, x15, x16)\n    x18 = sfilter(x8, x17)\n    x19 = fill(I, x1, x18)\n    x20 = increment(TEN)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = astuple(x22, x22)\n    x23 = rbind(multiply, x22)\n    x24 = rbind(divide, x22)\n    x25 = compose(x23, x24)\n    x26 = lbind(equality, x21)\n    x27 = compose(x26, last)\n    x28 = chain(x20, x27, x25)\n    x29 = fork(sfilter, x25, x28)\n    x30 = fork(connect, first, last)\n    x31 = lbind(apply, last)\n    x32 = lbind(ofcolor, I)\n    x33 = compose(x31, x32)\n    x34 = fork( either, x30, x33)\n    x35 = sfilter(x29, x34)\n    x36 =0000(x15, x35)\n    x37 = sfilter(x36, x35)\n    x38 = fork(connect"], [1.1, "def solve_aa2cfd83(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 =5582255422\n    x4 =5525920009\n    8257967759\n    2060645202\n    5556\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = rbind(sfilter, x1)\n    x3 = compose(size, x2)\n    x4 = apply(x3, x1)\n    x5 = maximum(x4)\n    x6 = dmirror(x1)\n    x7 = apply(x3, x6)\n    x8 = maximum(x7)\n    x9 = increment(x8)\n    x10 = interval(TWO, x9, ONE)\n    x11 = increment(x5)\n    x12 = interval(TWO, x11, ONE)\n    x13 = product(x10, x12)\n    x14 = fork(multiply, first, last)\n    x15 = apply(x14, x13)\n    x16 = lbind(sfilter, x13)\n    x17 = lbind(matcher, x14)\n    x18 = compose(x16, x17)\n    x19 = apply(x18, x15)\n    x20 = lbind(occurrences, x1)\n    x21 = lbind(recolor, ZERO)\n    x22 = lbind(canvas, NEG_ONE)\n    x23 = compose(asindices, x22)\n    x24 = chain(x20, x21, x23)\n    x25 = lbind(mapply, x24)\n    x26 = chain(positive, size, x25)\n    x27 = sfilter(x19, x26)\n    x28 = compose(x14, first)\n    x29 = rbind(argmax, x28)\n    x30 = lbind(recolor, ZERO)\n    x31 = lbind(canvas, NEG_ONE)\n    x32 = chain(x30, asindices, x31)\n    x33 = lbind(lbind, shift)\n    x34 = lb"], [1.1, "def solve_7cd623d9(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_b0257e52(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = color(x4)\n    x6 = palette(I)\n    x7 = remove(x5, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = toindices(x4)\n    x11 = apply(first, x10)\n    x12 = toindices(x4)\n    x13 = apply(last, x12)\n    x14 = rbind(contained, x11)\n    x15 = compose(x14, first)\n    x16 = rbind(contained, x13)\n    x17 = compose(x16, last)\n    x18 = fork(either, x15, x17)\n    x19 = ofcolor(I, x9)\n    x20 = sfilter(x19, x18)\n    x21 = rbind(gravitate, x4)\n    x22 = compose(x21, initset)\n    x23 = fork(add, identity, x22)\n    x24 = fork(connect, identity, x23)\n    x25 = apply(x24, x20)\n    x26 = lbind(greater, x12)\n    x27 = compose(x26, first)\n    x28 = rbind(sfilter, x27)\n    x29 = chain(merge, x28, center)\n    x30 = fork(recolor, color, x29)\n    x31 = mapply(x30, x21)\n    x32 = paint(I, x31)\n    x33 = rot90(x127)\n    x34 = ofcolor(x33, x9)\n    x35 = sfilter(x34, x35)\n    x36 = remove(x33, x35)\n    x37 = height(x36)\n    x38 = frontiers(x35)\n    x39 = sfilter(x38, x35)\n    x40 = mapply(size, x"], [1.1, "def solve_9f2b3a8d(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = fork(combine, vfrontier, hfrontier)\n    x5 = compose(x4, center)\n    x6 = rbind(mapply, x3)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = compose(x6, x7)\n    x9 = fork(difference, x8, identity)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ZERO)\n    x12 = lbind(ofcolor, I)\n    x13 =08916(max, x12)\n    x14 = matcher(x13, ZERO)\n    x15 = compose(flip, x14)\n    x16 = rbind(sfilter, x15)\n    x17 = lbind(occurrences, I)\n    x18 = chain(x17, x16, x15)\n    x19 = compose(x5, x18)\n    x20 = extract(x3, x19)\n    x21 = x20(I)\n    x22 = objects(x21, T, F, T)\n    x23 = colorfilter(x22, ZERO)\n    x24 = difference(x22, x23)\n    x25 = rbind(subgrid, x21)\n    x26 = apply(x25, x24)\n    x27 = rbind(colorcount, ZERO)\n    x28 = x27(x2)\n    x29 = argmax(x26, x28)\n    x30 = x29(x2)\n    x31 = objects(x30, T, F, T)\n    x32 = apply(x31, x31)\n    x33 = merge(x32)\n    x34 = size(x33)\n    x35 = rbind(subgrid, x01)\n    x36 = apply(x35, x34)\n    x37 = rightmost(x36)\n    x38 = rightmost(x33)\n    x39 = subtract(x37,"], [1.1, "def solve_1017e0b5(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = insert(ORIGIN, x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(TWO_BY_TWO, x4)\n    x6 = insert(TWx70, x5)\n    x7 = astuple(FOUR, FOUR)\n    x8 = canvas(NEG_ONE, x7)\n    x9 = astuple(THREE, ORIGIN)\n    x10 = initset(x9)\n    x11 = insert(x8, x10)\n    x12 = insert(THREE_BY_THREE, x11)\n    x13 = matcher(numcolors, FOUR)\n    x14 = sfilter(x12, x13)\n    x15 = difference(x12, x14)\n    x16 = sfilter(x15, x14)\n    x17 = mapply(size, x16)\n    x18 = argmax(x15, x17)\n    x19 = x13(x18)\n    x20 = fill(I, x1, x19)\n    x21 = fill(x20, TWO, x18)\n    x22 = asobject(x21)\n    x23 = occurrences(x22, x18)\n    x24 = time Fill(x23, x8)\n    x25 = objects(x22, T, T, T)\n    x26 = insert(ORIGIN, x25)\n    x27 = toindices(x26)\n    x28 = lbind(shift, x27)\n    x29 = occurrences(x22, x27)\n    x30 = mapply(x28, x29)\n    x31 = fill(x22, TWO, x30)\n    x32 = objects(x31, T, T, T)\n    x33 = rbind(contained, x32)\n    x34 = compose(x33, first)\n    x35 = rbind(sfilter, x34)\n    x36 = lbind(pair, x25)\n    x37 = chain(x36, x35, x35"], [1.1, "def solve_3d2fd179(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = positive(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_018326bc(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_606b0eb2(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_bd9658cf(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = height(I)\n    x9 = astuple(x8, ONE)\n    x10 = canvas(THREE, x9)\n    x11 = hconcat(x10, I)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = identity(DOWN)\n    x17 = connect(ORIGIN, x15)\n    x18 = fill(x11, THREE, x17)\n    x19 = identity(x13)\n    x20 = identity(x12)\n    x21 = identity(x12)\n    x22 = identity(F)\n    x23 = identity(ZERO)\n    x24 = compose(first, first)\n    x25 = chain(first, last, x24)\n    x26 = compose(first, first)\n    x27 = chain(last, last, x26)\n    x28 = chain(first, first, first)\n    x29 = chain(first, last, last)\n    x30 = chain(first, first, last)\n    x31 = chain(last, first, last)\n    x32 = compose(decrement, x25)\n    x33 = compose(decrement, x27)\n    x34 = fork(astuple, x32, x33)\n    x35 = compose(decrement, x27)\n    x36 = fork(multiply, x30, x35)\n    x37 = fork(add, x29, x36)\n    x38 = compose(decrement, x28)\n    x39 = fork(multiply, x30, x38)\n    x40 = fork(add, x29, x39)\n    x41 ="], [1.1, "def solve_e97729af(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = compose(leftmost, first)\n    x13 = compose(leftmost, last)\n    x14 = fork(equality, x12, x13)\n    x15 = compose(uppermost, first)\n    x16 = compose(uppermost, last)\n    x17 = fork(equality, x15, x16)\n    x18 = fork(either, x14, x17)\n    x19 = sfilter(x11, x18)\n    x20 = compose(color, first)\n    x21 = compose(center, first)\n    x22 = compose(center, last)\n    x23 = fork(connect, x21, x22)\n    x24 = fork(recolor, x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = matcher(last, ZERO)\n    x28 = decrement(x26)\n    x29 = matcher(last, x28)\n    x30 = fork(either, x27, x29)\n    x31 = matcher(first, ZERO)\n    x32 = decrement(x25)\n    x33 = matcher(first, x32)\n    x34 = fork(either, x31, x33)\n    x35 = toindices(x5)\n    x36 = sfilter(x35, x30)\n    x37 = equality(x35, x36)\n    x38 = mapply(x24, x19)\n    x39 = paint(I, x38)\n    x40 = branch(x37, x30, x34)\n    "], [1.1, "def solve_1c8c34e1(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_e096ac5d(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(remove, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_65b32423(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =323b782(I)\n    x4 = rbind(contained, x3)\n    x5 = compose(x4, last)\n    x6 = sfilter(x2, x5)\n    x7 = fork(subtract, first, last)\n    x8 = fork(multiply, sign, identity)\n    x9 = compose(x8, x7)\n    x10 = astuple(identity, dmirror)\n    x11 = astuple(cmirror, vmirror)\n    x12 = combine(x10, x11)\n    x13 = rbind(rapply, I)\n    x14 = compose(initset, first)\n    x15 = chain(first, x13, x14)\n    x16 = compose(x5, x9)\n    x17 = extract(x12, x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = x19(I)\n    x21 = mostcolor(I)\n    x22 = palette(I)\n    x23 = remove(x21, x22)\n    x24 = lbind(colorcount, I)\n    x25 = argmin(x23, x24)\n    x26 = other(x23, x25)\n    x27 = ofcolor(x20, x25)\n    x28 = ofcolor(x20, x21)\n    x29 = combine(x27, x28)\n    x30 = intersection(x27, x28)\n    x31 = difference(x29, x30)\n    x32 = fill(x20, TWO, x31)\n    x33 = vmirror(x32)\n    x34 = dmirror(x32)\n    x35 = astuple(x33, x34)\n    x36 = x17(x35)\n    x37 = rightmost(x36)\n    x38 = shoot(x37, UP_RIGHT)\n    x39 = shoot(x37, DOWN_LEFT)\n    x40 = combine(x38, x39)\n    "], [1.1, "def solve_fc32252e(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = dmirror(I)\n    x2 = objects(x1, T, F, T)\n    x3 = power(increment, FIVE)\n    x4 = lbind(remove, FIVE)\n    x5 = lbind(remove, ZERO)\n    x6 = chain(x4, x5, palette)\n    x7 = chain(x3, first, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = chain(outbox, outbox, initset)\n    x10 = chain(x8, x9,0000)\n    x11 = initset(x10)\n    x12 = lbind(contained, FOUR)\n    x13 = chain(flip, x12, palette)\n    x14 = mfilter(x11, x13)\n    x15 = vsplit(x1, TWO)\n    x16 = hsplit(x1, TWO)\n    x17 = extract(x15, x16)\n    x18 = extract(x17, x14)\n    x19 = ulcorner(x18)\n    x20 = invert(x19)\n    x21 = shift(x19, x20)\n    x22 = apply(urcorner, x21)\n    x23 = shape(x2)\n    x24 = maximum(x23)\n    x25 = apply(uppermost, x22)\n    x26 = order(x25, identity)\n    x27 = size(x26)\n    x28 = increment(x17)\n    x29 = interval(x28, x27, ONE)\n    x30 = pair(x26, x29)\n    x31 = sfilter(x30, x17)\n    x32 = mapply(first, x31)\n    x33 = compose(last, first)\n    x34 = sfilter(x1, x33)\n    x35 = mapply(last, x34)\n    x36 = combine(x32, x35)\n    x37 = fill(x1, TWO, x36)\n    x38 = asobject(x38)\n    x39 = ulcorner(x48)\n    x40 = shift"], [1.1, "def solve_eed6d643(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_00b4cf43(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_1edcfa30(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = rot96(I)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x28, x40)\n    x42 = fork(x"], [1.1, "def solve_e0ce3d62(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = equality(x5, ZERO)\n    x7 = branch(x6, identity, vmirror)\n    x8 = x7(x4)\n    x9 = ofcolor(x8, EIGHT)\n    x10 = uppermost(x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, identity, hmirror)\n    x13 = x12(x8)\n    x14 = ofcolor(x13, EIGHT)\n    x15 = ofcolor(x13, TWO)\n    x16 = rbind(shoot, DOWN)\n    x17 = mapply(x16, x14)\n    x18 = height(x13)\n    x19 = apply(first, x15)\n    x20 = insert(ZERO, x19)\n    x21 = insert(x18, x19)\n    x22 = apply(decrement, x21)\n    x23 = order(x20, identity)\n    x24 = order(x22, identity)\n    x25 = size(x15)\n    x26 = increment(x25)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = apply(tojvec, x27)\n    x29 = pair(x23, x24)\n    x30 = lbind(sfilter, x17)\n    x31 = compose(first, last)\n    x32 = chain(decrement, first, first)\n    x33 = fork(greater, x31, x32)\n    x34 = chain(increment, last, first)\n    x35 = fork(greater, x34, x31)\n    x36 = fork(both, x33, x35)\n    x37 = lbind(lbind, astuple)\n    x38 = lbind(compose, x36)\n    x39 = chain(x30, x38, x37)\n    x40"], [1.1, "def solve_b479be96(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_0c2169bb(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = partition(I)\n    x2 = objects(I, T, F, F)\n    x3 = compose(double, height)\n    x4 = fork(equality, x3, size)\n    x5 = compose(decrement, width)\n    x6 = fork(equality, x5, size)\n    x7 = fork(either, x4, x6)\n    x8 = rbind(matcher, TWO)\n    x9 = compose(x8, vmirror)\n    x10 = rbind(sfilter, x6)\n    x11 = compose(x10, hline)\n    x12 = chain(x9, x11, center)\n    x13 = compose(x9, subtract_ONE)\n    x14 = fork(subtract, x12, x13)\n    x15 = decrement(x14)\n    x16 =71(x15)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, height, width)\n    x20 = x19(x4)\n    x21 = x19(I)\n    x22 = subtract(x20, x21)\n    x23 = decrement(x22)\n    x24 = colorcount(I, x4)\n    x25 = multiply(x24, x23)\n    x26 = multiply(x25, x22)\n    x27 = add(x22, x26)\n    x28 = width(I)\n    x29 = multiply(x28, x23)\n    x30 = decrement(x29)\n    x31 = multiply(x30, x22)\n    x32 = add(x31, x3)\n    x33 = canvas(ZERO, x32)\n    x34 = ofcolor(x33, x9)\n    x35 = rbind(toobject, x33)\n    x36 = compose(x35, delta)\n    x37 = apply(x36, x34)\n    x38 = rbind(colorcount, x9)\n    x39 = apply(x38, x37)\n    x40 = ofcolor(x39, x4)\n"], [1.1, "def solve_7a5f37b4(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_ffc3223f(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(both, x29, x30)\n    x34 = fork(both, x31, x32)\n    x35 = fork(both, x33, x34)\n    x36 = compose(x"], [1.1, "def solve_524a591c(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, numcolors)\n    x3 = sfilter(I, x2)\n    x4 = fork(equality, identity, rot90)\n    x5 =47(x3)\n    x6 = sfilter(x3, x4)\n    x7 = fork(equality, identity, rot270)\n    x8 = sfilter(x3, x7)\n    x9 = fork(both, x11, x18)\n    x10 = sfilter(x4, x9)\n    x11 = compose(rot90, dedupe)\n    x12 = power(x11, FOUR)\n    x13 =\n    x10 = x12(I)\n    x14 = x12(x13)\n    x15 = subtract(x16, x21)\n    x16 = x15(I)\n    x17 = mostcolor(x14)\n    x18 = matcher(first, x17)\n    x19 = sfilter(x19, x18)\n    x20 = compose(flip, x18)\n    x21 = sfilter(x19, x20)\n    x22 = totuple(x21)\n    x23 = apply(last, x22)\n    x24 = dedupe(x23)\n    x25 = size(x24)\n    x26 = increment(x25)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = apply(tojvec, x27)\n    x29 = pair(x25, x28)\n    x30 = shift(x29, UNITY)\n    x31 = mapply(x76, x30)\n    x32 = height(x31)\n    x33 = width(x31)\n    x34 = equality(x32, x33)\n    x35 = astuple(x34, x32)\n    x36 = ONE(x35)\n    x37 =Example output:\n    1241578274\n    7711333316\n    \"\"\"\n    x1 = leastcolor(x36)\n    x2 = rot270(x74)\n    x3 = leastcolor(x2)\n    x4"], [1.1, "def solve_b2c60a3d(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = replace(I, TWO, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = apply(normalize, x2)\n    x4 = astuple(NINE, NINE)\n    x5 = canvas(ZERO, x4)\n    x6 = asindices(x5)\n    x7 = box(x6)\n    x8 = center(x6)\n    x9 = lbind(contained, ZERO)\n    x10 = rbind(subtract, x8)\n    x11 = compose(x9, x10)\n    x12 = chain(outbox,outbox, initset)\n    x13 = corners(x6)\n    x14 = mapply(x12, x13)\n    x15 = difference(x7, x14)\n    x16 = inbox(x7)\n    x17 = sfilter(x16, x11)\n    x18 = corners(x7)\n    x19 = ofcolor(x15, ZERO)\n    x20 = rbind(difference, x19)\n    x21 = rbind(chain, first)\n    x22 = lbind(x21, x18)\n    x23 = lbind(rbind, difference)\n    x24 = compose(x22, x23)\n    x25 = lbind(intersection, x2)\n    x26 = chain(size, x25, x24)\n    x27 = matcher(x26, ZERO)\n    x28 = lbind(intersection, x6)\n    x29 = chain(size, x28, x27)\n    x30 = matcher(x29, ZERO)\n    x31 = lbind(intersection, x7)\n    x32 = chain(size, x31, x30)\n    x33 = argmax(x18, x32)\n    x34 = shift(x11, x33)\n    x35 = combine(x34, x37)\n    x36 = paint(x5, x35)\n    x37 = fgpartition(x36)\n    x38 = argmax(x37, size)\n    x39 = remove(x38"], [1.1, "def solve_0a719483(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_ac3fae7a(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = rot180(I)\n    x3 = shoot(x2, UP_RIGHT)\n    x4 = rot180(I)\n    x5 = shoot(x4, DOWN_LEFT)\n    x6 = shoot(x5, LEFT)\n    x7 = shoot(x6, ZERO_BY_TWO)\n    x8 = combine(x3, x7)\n    x9 = rbind(shoot, LEFT)\n    x10 = mapply(x9, x8)\n    x11 = fgpartition(x11)\n    x12 = valmax(x11, size)\n    x13 = colorfilter(x11, x1)\n    x14 = argmax(x13, size)\n    x15 = shape(x11)\n    x16 = canvas(x1, x15)\n    x17 = fill(x16, ONE, x14)\n    x18 = replace(x17, x1, TWO)\n    x19 = objects(x18, T, F, T)\n    x20 = colorfilter(x19, ONE)\n    x21 = argmax(x20, size)\n    x22 = lbind(shoot, x21)\n    x23 = mapply(x22, x18)\n    x24 = fill(x17, ONE, x23)\n    x25 = colorfilter(x19, ONE)\n    x26 = rbind(shoot, UNITY)\n    x27 = mapply(x26, x25)\n    x28 = fill(x24, ONE, x27)\n    x29 = rbind(shoot, NEG_UNITY)\n    x30 = mapply(x29, x28)\n    x31 = fill(x28, ONE, x30)\n    x32 = fill(x31, x1, x22)\n    x33 = fill(x32, x1, x25)\n    x34 = replace(x33, x1, ONE)\n    x35 = replace(x34, x1, TWO)\n    x36 = DOWN_LEFT, UNITY)\n    x37 = initset(x36)\n    x38 = insert"], [1.1, "def solve_3ec05e30(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = rot180(I)\n    x2 = rbind(greater, ONE)\n    x3 = chain(x2, minimum, shape)\n    x4 = objects(x1, T, F, F)\n    x5 = sfilter(x4, x3)\n    x6 = fork(equality, toindices, box)\n    x7 = sfilter(x5, x6)\n    x8 = totuple(x7)\n    x9 = apply(color, x8)\n    x10 = leastcommon(x9)\n    x11 = ofcolor(x1, x10)\n    x12 = inbox(x11)\n    x13 = center(x12)\n    x14 = dneighbors(x13)\n    x15 = insert(x13, x14)\n    x16 = toobject(x15, x1)\n    x17 = mostcolor(I)\n    x18 = colorfilter(x17, x10)\n    x19 = rbind(adjacent, x8)\n    x20 = sfilter(x18, x19)\n    x21 = rbind(adjacent, x13)\n    x22 = sfilter(x18, x21)\n    x23 = pair(x20, x22)\n    x24 = colorfilter(x21, x10)\n    x25 = rbind(contained, x24)\n    x26 = compose(x25, last)\n    x27 = sfilter(x23, x26)\n    x28 = product(x27, x28)\n    x29 = sfilter(x18, first)\n    x30 = pair(x29, x28)\n    x31 =99315867(x30)\n    x32 = lbind(sfilter, x33)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(x32, x33, x43)\n    x36 = compose(x33, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = fork(connect, identity, x37)\n    x39 = mapply(x38, x29)\n"], [1.1, "def solve_d5aa0df1(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, FIVE)\n    x4 = astuple(FOUR, FOUR)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = asindices(x5)\n    x7 = rbind(toobject, I)\n    x8 = lbind(shift, x6)\n    x9 = compose(x7, x8)\n    x10 = multiply(x3, FIVE)\n    x11 = interval(ZERO, x10, FIVE)\n    x12 = apply(tojvec, x11)\n    x13 = apply(x9, x12)\n    x14 = matcher(numcolors, ONE)\n    x15 = fork(equality, identity, hmirror)\n    x16 = compose(flip, x15)\n    x17 = lbind(index, I)\n    x18 = compose(x17, ulcorner)\n    x19 = lbind(add, DOWN)\n    x20 = chain(x17, x19, ulcorner)\n    x21 = fork(equality, x18, x20)\n    x22 = compose(flip, x21)\n    x23 = fork(either, x14, x16)\n    x24 = fork(either, x23, x22)\n    x25 = compose(flip, x24)\n    x26 = lbind(multiply, TWO)\n    x27 = compose(x26, x14)\n    x28 = lbind(multiply, FOUR)\n    x29 = compose(x28, x16)\n    x30 = fork(add, x27, x29)\n    x31 = lbind(multiply, THREE)\n    x32 = compose(x31, x22)\n    x33 = lbind(multiply, EIGHT)\n    x34 = compose(x33, x25)\n    x35 = fork(add, x32, x34)\n    x36 = fork(add, x30, x35)\n    x37 = apply(x36, x13)\n    x38 = rbind(repeat,"], [1.1, "def solve_2844e168(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = subgrid(x6, I)\n    x10 = increment(x width)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(x9)\n    x17 = matcher(identity, x15)\n    x18 = frontiers(x9)\n    x19 = sfilter(x18, vline)\n    x20 = toindices(x19)\n    x21 = lbind(shift, x20)\n    x22 = height(x7)\n    x23 = matcher(first, x25)\n    x24 = compose(flip, x23)\n    x25 = toindices(x24)\n    x26 = lbind(shift, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x21, x5)\n    x29 = rbind(argmin, x28)\n    x30 = lbind(lbind, manhattan)\n    x31 = compose(x29, x30)\n    x32 = fork(shift, identity, x31)\n    x33 = mapply(x32, x22)\n    x34 = fill(x9, x3, x33)\n    x35 = x10(x34)\n    x36 =707(x35)\n    x37 = xhou(x36)\n    x38 = fork(combine, vfrontier, hfrontier)\n    x39 = x38(x37)\n    x40 = fill(x35, x3, x39)\n    O = x10(x40)\n    "], [1.1, "def solve_07d9e9fe(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ONE)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18, x41"], [1.1, "def solve_18444695(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_f16bdd75(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x20, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = compose(x36, first)\n    x38 = argmin(x35, x37)\n    x39 = first(x38)\n    x40"], [1.1, "def solve_60711474(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(both, x29, x30)\n    x34 = fork(both, x31, x32)\n    x35 = fork(both, x33, x34)\n    x36 = compose(x"], [1.1, "def solve_f7326b3b(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x20, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = compose(x36, first)\n    x38 = argmin(x35, x37)\n    x39 = ofcolor(I, x38)\n"], [1.1, "def solve_9d8d7434(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = chain(positive, size, x3)\n    x5 = sfilter(x4, x2)\n    x6 = fork(55, identity, hmirror)\n    x7 = compose(x6, vmirror)\n    x8 = astuple(TWO, ONE)\n    x9 = canvas(ZERO, x8)\n    x10 = asindices(x9)\n    x11 = center(x10)\n    x12 = increment(x11)\n    x13 = shift(x11, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = palette(I)\n    x17 = remove(x15, x16)\n    x18 = lbind(chain, size)\n    x19 = rbind(x18, toindices)\n    x20 = lbind(lbind, intersection)\n    x21 = lbind(ofcolor, I)\n    x22 = chain(x19, x20, x21)\n    x23 = compose(x5, x22)\n    x24 = palette(I)\n    x25 = colorfilter(x24, x15)\n    x26 = rbind(bordering, I)\n    x27 = compose(x26, initset)\n    x28 = fork(x ofcolor, x27, outbox)\n    x29 = lbind(argmin, x25)\n    x30 = compose(x29, x28)\n    x31 = matcher(x30, x11)\n    x32 = sfilter(x31, x26)\n    x33 = difference(x ______, x32)\n    x34 = argmin(x33, x29)\n    x35 = x35(x34)\n    x36 = inbox(x35)\n    x37 = fill(I, x39, x36)\n    x38 = height(I)\n    x39 = divide(x38, THREE)\n    x40 = increment(x39)\n    x41 ="], [1.1, "def solve_50487f8b(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = color(x4)\n    x6 = palette(I)\n    x7 = remove(x5, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = toindices(x4)\n    x11 = apply(first, x10)\n    x12 = toindices(x4)\n    x13 = apply(last, x12)\n    x14 = rbind(contained, x11)\n    x15 = compose(x14, first)\n    x16 = rbind(contained, x13)\n    x17 = compose(x16, last)\n    x18 = fork(either, x15, x17)\n    x19 = ofcolor(I, x9)\n    x20 = sfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(gravitate, x4)\n    x23 = compose(x22, initset)\n    x24 = fork(add, identity, x23)\n    x25 = fork(connect, identity, x24)\n    x26 = apply(x25, x21)\n    x27 = palette(I)\n    x28 = remove(x9, x27)\n    x29 = compose(x28, first)\n    x30 = product(x26, x29)\n    x31 = first(x30)\n    x32 = last(x30)\n    x33 =    x31(I)\n    x34 = rightmost(x33)\n    x35 = lbind(greater, x34)\n    x36 = compose(x35, first)\n    x37 =99(x36, toindices)\n    x38 = fork(either, x15, x37)\n    x39 = x38(x31)\n    x40 = rbind(contained, x39)\n    x41 = compose(x40, first)\n"], [1.1, "def solve_ffda8dc4(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(both, x29, x30)\n    x34 = fork(both, x31, x32)\n    x35 = fork(both, x33, x34)\n    x36 = compose(x"], [1.1, "def solve_58ac7cab(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = lbind(position, x18)\n    x21 = fork(shoot, center, x20)\n    x22 = mapply(x21, x19)\n    x23 = difference(x22, x18)\n    x24 = color(x18)\n    x25 = fill(I, x24, x23)\n    x26 = objects(x25, T, F, T)\n    x27 = fork(colorur, outbox, outbox)\n    x28 = apply(x27, x26)\n    x29 = contained(x28, x22)\n    x30 = sfilter(x29, x17)\n    x31 = lbind(fork,vmatching)\n    x32 = lbind(lbind, hmatching)\n    x33 = lbind(hmatching, x30)\n    x34 = lbind(gravitate, x29)\n    x35 = compose(x34, initset)\n    x36 = fork(add, identity, x35)\n    x37 = fork(connect, x33, x36)\n    x38 = mapply(x37, x31)\n"], [1.1, "def solve_aadbd750(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_09201928(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_5b31f5c4(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_88551c53(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork( astuple, x7, x6)\n    x9 = fork(astuple, x8, x4)\n    x10 = lbind(frontiers, x9)\n    x11 = rbind(rapply, x4)\n    x12 = compose(initset, x11)\n    x13 = chain(first, x11, x12)\n    x14 = compose(x10, x13)\n    x15 = lbind(contained, ZERO)\n    x16 = compose(flip, x15)\n    x17 = fork(add, x14, x16)\n    x18 = compose(initset, x17)\n    x19 = fork(rapply, x18, identity)\n    x20 = compose(first, x19)\n    x21 = compose(x20, x18)\n    x22 = astuple(x6, x6)\n    x23 = power(x21, TWO)\n    x24 = x23(x22)\n    x25 = partition(x24)\n    x26 = fork(recolor, color, x24)\n    x27 = apply(x26, x25)\n    x28 = mfilter(x27, paint)\n    x29 = double(x3)\n    x30 = power(x28, x29)\n    x31 = apply(llcorner, x27)\n    x32 = x35(x31)\n    x33 = lbind(shift, x32)\n    x34 = mapply(x33, x30)\n    x35 = urcorner(x27)\n    x36 = x35(x42)\n    x37 = paint(x24, x36)\n    x38 = combine(x33, x37)\n    x39 = paint(x38, x34)\n    O = fill(x"], [1.1, "def solve_5cc98c36(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = argmax(x3, x4)\n    x6 = color(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmax(x8, x9)\n    x11 = remove(x10, x8)\n    x12 = lbind(ofcolor, I)\n    x13 = mapply(x12, x11)\n    x14 = subgrid(x13, I)\n    x15 = objects(x14, T, F, F)\n    x16 = colorfilter(x15, x6)\n    x17 = initset(x10)\n    x18 = insert(x6, x17)\n    x19 = lbind(intersection, x18)\n    x20 = chain(positive, size, x19)\n    x21 = chain(positive, decrement, size)\n    x22 = fork(either, x20, x21)\n    x23 = rbind(toobject, x14)\n    x24 = compose(corners, outbox)\n    x25 = chain(palette, x23, x24)\n    x26 = rbind(branch, x6)\n    x27 = chain(flip, x22, x25)\n    x28 = compose(first, x25)\n    x29 = fork(x76, x28, x26)\n    x30 = apply(uppermost, x16)\n    x31 = order(x30, identity)\n    x32 = lbind(apply, x29)\n    x33 = rbind(order, leftmost)\n    x34 = lbind(sfilter, x16)\n    x35 = lbind(matcher, uppermost)\n    x36 = compose(x34, x35)\n    x37 = chain(x32, x33, x36)\n    O = apply(x37"], [1.1, "def solve_276a72e2(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = lbind(apply,last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = rbind(toobject, I)\n    x33 = compose(x32, delta)\n    x34 = chain(palette, x32, x33)\n    x35 = rbind(upscale, x30)\n    x36 = chain(normalize, x35, x34)\n    x37 = fork(equality, x36, identity)\n    x38 = compose(flip, x37)\n    x"], [1.1, "def solve_651d893a(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_bcc47912(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = double(x37)\n    x39 = multiply(x28, x38)\n    x40 = shift(x31, x"], [1.1, "def solve_5a64c0ca(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_df12dfec(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_fc4d3983(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = leastcolor(x1)\n    x4 = leastcolor(x2)\n    x5 = ofcolor(I, x3)\n    x6 = center(x5)\n    x7 = ofcolor(I, x4)\n    x8 = center(x7)\n    x9 = height(I)\n    x10 = width(I)\n    x11 = hfrontier(x6)\n    x12 = fill(I, x3, x11)\n    x13 = hfrontier(x8)\n    x14 = fill(x12, x4, x13)\n    x15 = decrement(x10)\n    x16 = decrement(x9)\n    x17 = halve(x9)\n    x18 = tojvec(x15)\n    x19 = connect(ORIGIN, x18)\n    x20 = fill(x14, x3, x19)\n    x21 = toivec(x16)\n    x22 = astuple(x16, x15)\n    x23 = connect(x21, x22)\n    x24 = fill(x20, x4, x23)\n    x25 = decrement(x17)\n    x26 = toivec(x25)\n    x27 = connect(ORIGIN, x26)\n    x28 = fill(x24, x3, x27)\n    x29 = tojvec(x15)\n    x30 = decrement(x17)\n    x31 = astuple(x30, x15)\n    x32 = connect(x29, x31)\n    x33 = fill(x28, x3, x32)\n    x34 = toivec(x17)\n    x35 = toivec(x16)\n    x36 = connect(x34, x35)\n    x37 = fill(x33, x4, x36)\n    x38 = astuple(x17, x15)\n    x39 = astuple(x16, x15)\n    x40 = connect(x38, x39)\n    O = fill(x37,"], [1.1, "def solve_4e715061(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(SIX)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = connect(x7, x10)\n    x12 = combine(x8, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_1b142d6e(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_0613d470(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_4101059e(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = lbind(apply, size)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(I, first)\n    x13 = chain(size, x11, x12)\n    x14 = matcher(x13, ONE)\n    x15 = compose(minimum, shape)\n    x16 = lbind(apply, x15)\n    x17 = lbind(ofcolor, I)\n    x18 = chain(x16, x17, x9)\n    x19 = fork(intersection, x9, x18)\n    x20 = fork(shift, x18, x19)\n    x21 = compose(x16, x20)\n    x22 = fork(combine, x21, x29)\n    x23 = fork(recolor, x22, x20)\n    x24 = difference(x1, x3)\n    x25 = power(x23, TWO)\n    x26 = astuple(x253, x27)\n    x27 = astuple(x24, x28)\n    x28 = astuple(x25, x27)\n    x29 = rbind(contained, x26)\n    x30 = compose(x29, last)\n    x31 = rbind(apply, x27)\n    x32 = lbind(position, x25)\n    x33 = chain(x31, x32, x29)\n    x34 = fork(aint, x30, x33)\n    x35 = compose(toobject, first)\n    x36 = compose(numcolors, x35)\n    x37 = matcher(x36, ONE)\n    x38 = fork(both, x35, x37)"], [1.1, "def solve_017fbb5d(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x30, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = shift(x35, x36)\n    x38 = product(x41, x37)\n    x39 = paint(I, x38)\n    "], [1.1, "def solve_dd97ead6(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = lbind(add, FOUR)\n    x2 = compose(x1, size)\n    x3 = fork(equality, toindices, x2)\n    x4 = rbind(add, FOUR)\n    x5 = compose(x4, size)\n    x6 = sfilter(x1, x5)\n    x7 = compose(vline, merge)\n    x8 = sfilter(x6, x7)\n    x9 = argmax(x8, size)\n    x10 = toindices(x9)\n    x11 = fork(either, x7, x10)\n    x12 = fork(add, first, last)\n    x13 = compose(flip, x12)\n    x14 = sfilter(x11, x13)\n    x15 = increment(x14)\n    x16 = subgrid(x9, I)\n    x17 = hconcat(x16, x16)\n    x18 = hconcat(x17, x17)\n    x19 = vmirror(x18)\n    x20 = vconcat(x19, x18)\n    x21 = vconcat(x20, x19)\n    x22 = hmirror(x21)\n    x23 = cellwise(x22, x20, x23)\n    x24 = asobject(x23)\n    x25 = paint(x21, x24)\n    x26 = asindices(x25)\n    x27 = box(x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(x28)\n    x31 = remove(x29, x30)\n    x32 = lbind(chain, size)\n    x33 = rbind(x32, asindices)\n    x34 = lbind(lbind, contained)\n    x35 = lbind(ofcolor, x25)\n    x36 = compose(x34, x35)\n    x37 = chain(x33, x36, outbox)\n    x38 = lbind(sfilter, x41)\n    x39 = rbind(ofcolor, x29)"], [1.1, "def solve_e95747ed(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = astuple(SIX, FIVE)\n    x2 = size(I)\n    x3 = decrement(x2)\n    x4 = astuple(FOUR, FOUR)\n    x5 = canvas(ZERO, x4)\n    x6 = tojvec(x3)\n    x7 = connect(ORIGIN, x6)\n    x8 = equality(x2, FOUR)\n    x9 = insert(UNITY, x7)\n    x10 = branch(x8, x9, x7)\n    x11 = merge(x10)\n    x12 = size(x11)\n    x13 = equality(x12, FOUR)\n    x14 = astuple(ONE, x13)\n    x15 = connect(x11, x14)\n    x16 = toobject(x15, I)\n    x17 =55object(x16, x16)\n    x18 = lefthalf(I)\n    x19 = righthalf(I)\n    x20 = connect(x18, x19)\n    x21 = toobject(x20, x19)\n    x22 =99999(x21, x20)\n    x23 = branch(x8, x22, x21)\n    x24 = connect(x16, x23)\n    x25 = backdrop(x24)\n    x26 = toobject(x25, x19)\n    x27 =99999(x26, x20)\n    x28 = astuple(ZERO, x13)\n    x29 = initset(x28)\n    x30 = insert(x29, x27)\n    x31 = backdrop(x30)\n    x32 = width(x31)\n    x33 = toivec(x32)\n    x34 = tojvec(x33)\n    x35 = connect(x33, x34)\n    x36 = height(x35)\n    x37 = toivec(x36)\n    x38 = initset(x37)\n    x39 = insert(x38, x35)\n    x40 = insert(x36, x39)\n    x41 = combine(x35, x40"], [1.1, "def solve_1417d068(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = double(x2)\n    x12 = asindices(I)\n    x13 = urcorner(x12)\n    x14 = index(I, x13)\n    x15 = astuple(x14, x13)\n    x16 = ulcorner(x12)\n    x17 = repeat(x16, ONE)\n    x18 = inequality(x10, x17)\n    x19 =245(x18)\n    x20 =\n    215 = mostcolor(I)\n    x21 = asindices(I)\n    x22 = astuple(x21, x13)\n    x23 = initset(x22)\n    x24 = position(x23, x23)\n    x25 = compose(last, last)\n    x26 = astuple(x24, x25)\n    x27 = add(x26, x24)\n    x28 = shoot(x27, x248)\n    x29 = shoot(x27, x326)\n    x30 = shoot(x27, x28)\n    x31 = combine(x29, x30)\n    x32 = first(x31)\n    x33 = last(x31)\n    x34 = toobject(x33, I)\n    x35 = mostcommon(x34)\n    x36 = matcher(first, x35)\n    x37 = compose(flip, x36)\n    x38 = sfilter(x32, x37)\n    x39 = rbind(shoot, DOWN)\n    x40 = shoot(x39, x38)\n    x41 ="], [1.1, "def solve_0632eb05(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = compose(leftmost, first)\n    x13 = compose(leftmost, last)\n    x14 = fork(equality, x12, x13)\n    x15 = compose(uppermost, first)\n    x16 = compose(uppermost, last)\n    x17 = fork(equality, x15, x16)\n    x18 = fork(either, x14, x17)\n    x19 = sfilter(x11, x18)\n    x20 = compose(color, first)\n    x21 = compose(center, first)\n    x22 = compose(center, last)\n    x23 = fork(connect, x21, x22)\n    x24 = fork(recolor, x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = matcher(last, ZERO)\n    x28 = decrement(x26)\n    x29 = matcher(last, x28)\n    x30 = fork(either, x27, x29)\n    x31 = matcher(first, ZERO)\n    x32 = decrement(x25)\n    x33 = matcher(first, x32)\n    x34 = fork(either, x31, x33)\n    x35 = toindices(x5)\n    x36 = sfilter(x35, x30)\n    x37 = equality(x35, x36)\n    x38 = mapply(x24, x19)\n    x39 = paint(I, x38)\n    x40 = branch(x37, x30, x34)\n    "], [1.1, "def solve_e9f322e9(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = asobject(I)\n    x2 = delta(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = multiply(x4, x4)\n    x6 = canvas(x3, x5)\n    x7 = asobject(I)\n    x8 = decrement(x7)\n    x9 = mostcolor(I)\n    x10 = shape(I)\n    x11 = add(x10, THREE)\n    x12 = canvas(x9, x11)\n    x13 = asobject(I)\n    x14 = decrement(x13)\n    x15 = toivec(x14)\n    x16 = add(x15, THREE)\n    x17 = shift(x13, x16)\n    x18 = paint(x6, x17)\n    x19 = shift(x8, THREE)\n    x20 = paint(x18, x19)\n    x21 = astuple(x12, x16)\n    x22 = astuple(x9, x16)\n    x23 = astuple(x21, x22)\n    x24 = initset(x23)\n    x25 =71(x24)\n    x26 = backdrop(x25)\n    x27 = recolor(x3, x26)\n    x28 = astuple(x24, x6)\n    x29 = canvas(x9, x28)\n    x30 =0000000(x29)\n    x31 = recolor(x3, x30)\n    x32 = combine(x27, x31)\n    x33 = recolor(x9, x32)\n    x34 = combine(x29, x33)\n    x35 = recolor(x3, x34)\n    x36 = combine(x31, x35)\n    x37 = recolor(x3, x36)\n    x38 = combine(x24, x37)\n    x39 = paint(x36, x38)\n    x40 = ofcolor(x38, x3)\n    x41 = asobject(x40)\n    x42 = recolor(x9, x41)\n    x"], [1.1, "def solve_0f743c4f(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind,12)\n    x35 = compose(x34, x30)\n    x36 = lbind(apply, last)\n    x37 = chain(x32, x33, x35)\n    x38 = rbind(sfilter, x37)\n    x39 = chain(asobject, x38, x29)\n    x40 = fork(shift, x39, x33)\n    x41 = mapply(x40, x8)\n    x42 = paint"], [1.1, "def solve_37de8dbf(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, index)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, x37)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x31"], [1.1, "def solve_0baed825(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(mirror, I)\n    x2 = lbind(shift, I)\n    x3 = compose(x1, x2)\n    x4 = fork(combine, x3, hmirror)\n    x5 = compose(x4, vmirror)\n    x6 = lbind(shift, I)\n    x7 = fork(combine, x6, vmirror)\n    x8 = compose(x5, x7)\n    x9 = palette(I)\n    x10 = fork(combine, x8, x9)\n    x11 = compose(x10, x8)\n    x12 = rbind(extract, x11)\n    x13 = chain(last, first, x12)\n    x14 = decrement(x13)\n    x15 =\n    x14, ZERO)\n    x16 = remove(ZERO, x9)\n    x17 = double(x16)\n    x18 = rbind(multiply, x17)\n    x19 = chain(x18, width, x12)\n    x20 = decrement(x19)\n    x21 = lbind(greater, x17)\n    x22 = compose(x21, x19)\n    x23 = chain(x20, down, x22)\n    x24 = lbind(compose, x5)\n    x25 = x24(x12)\n    x26 = compose(x25, x19)\n    x27 = fork(sfilter, x26, x23)\n    x28 = compose(size, x27)\n    x29 = palette(I)\n    x30 = argmax(x29, x28)\n    x31 = objects(I, T, F, T)\n    x32 = colorfilter(x31, x30)\n    x33 = difference(x32, x31)\n    x34 = rbind(subgrid, I)\n    x35 = order(x33, x34)\n    x36 = mapply(x25, x35)\n    O = subgrid(x36, I)\n    return O"], [1.1, "def solve_6927c569(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = frontiers(I)\n    x4 = merge(x3)\n    x5 = mostcolor(x4)\n    x6 =66262100 box(x2)\n    x7 = fork(multiply, height, width)\n    x8 = halve(x7)\n    x9 = matcher(x8, x6)\n    x10 = compose(flip, x9)\n    x11 = mfilter(x1, x5)\n    x12 = mfilter(x1, x10)\n    x13 = paint(I, x11)\n    O = paint(x13, x12)\n    return O"], [1.1, "def solve_a7872880(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = remove(x3, x2)\n    x5 = lbind(colorcount, I)\n    x6 = argmax(x4, x5)\n    x7 = remove(x6, x4)\n    x8 = lbind(contained, x7)\n    x9 = chain(flip, x8, color)\n    x10 = rbind(sfilter, x9)\n    x11 = lbind(matcher, first)\n    x12 = compose(x11, x10)\n    x13 = chain(x10, x12, first)\n    x14 = lbind(18vas, ZERO)\n    x15 = compose(x14, x13)\n    x16 = chain(x15, shape, x1)\n    x17 = fork(paint, x16, normalize)\n    x18 = fork(colorfilter, x17, x15)\n    x19 = compose(positive, size)\n    x20 = rbind(sfilter, x19)\n    x21 = lbind(shift, x10)\n    x22 = chain(x20, x21, x18)\n    x23 = lbind(mapply, x22)\n    x24 = compose(O = x23(x21)\n    x25 = fork(mapply, x24, x18)\n    x26 = compose(x21, x23)\n    x27 = fork(mapply, x26, x25)\n    x28 = fork(paint, x17, x27)\n    x29 = compose(x23, x27)\n    x30 = fork(c909, x29, x28)\n    x31 = compose(x27, x30)\n    x32 = fork(paint, x16, x31)\n    x33 = mapply(x32, x4)\n    O = replace(x33, x6, xmist shade)\n    return O"], [1.1, "def solve_38f2dd0f(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 =Example output:\n    Example output:\n    0000000000\n    0000000000\n    0000000002\n    0000000002\n    0000000000\n    0000000000\n    0000000002\n    0000000000\n    0000000000\n    0000000000\n    \"\"\"\n    x1 = vmirror(I)\n    x2 = lefthalf(x1)\n    x3 = righthalf(x1)\n    x4 = vmirror(x3)\n    x5 = cellwise(x2, x4, ZERO)\n    O = replace(x5, ONE, TWO)\n    return O"], [1.1, "def solve_31aee6f2(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = totuple(x3)\n    x5 = apply(color, x4)\n    x6 = mostcommon(x5)\n    x7 = index(I, x6)\n    x8 = backdrop(x2)\n    x9 = box(x8)\n    x10 = fill(I, x6, x9)\n    x11 = ulcorner(x2)\n    x12 = index(I, x11)\n    x13 = subgrid(x12, I)\n    x14 = width(x13)\n    x15 = astuple(x14, x14)\n    x16 = crop(x13, ORIGIN, x15)\n    x17 = rot90(x16)\n    x18 = download(x17, x14)\n    x19 = height(x13)\n    x20 = astuple(x19, x14)\n    x21 = crop(x13, ORIGIN, x20)\n    x22 = rot90(x21)\n    x23 =151(x22)\n    x24 = ofcolor(x23, x6)\n    x25 = dmirror(x24)\n    x26 = identity(x25)\n    x27 = subgrid(x26, x31)\n    x28 = ofcolor(x27, x6)\n    x29 = invert(x28)\n    x30 = shift(x29, x29)\n    O = fill(x27, x6, x30)\n    return O"], [1.1, "def solve_b54c8698(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = argmax(x1, x2)\n    x5 = ulcorner(x3)\n    x6 = urcorner(x3)\n    x7 = index(I, x5)\n    x8 = equality(x7, EIGHT)\n    x9 = branch(x8, dmirror, identity)\n    x10 = branch(x8, uppermost, leftmost)\n    x11 = order(x1, x10)\n    x12 = apply(color, x11)\n    x13 = repeat(x12, ONE)\n    x14 = merge(x11)\n    x15 = remove(x4, x11)\n    x16 = repeat(x14, ONE)\n    x17 = combine(x13, x16)\n    x18 = repeat(NEG_ONE, x17)\n    x19 = dmirror(x18)\n    x20 = remove(x9, x18)\n    x21 = dmirror(x20)\n    x22 = combine(x19, x21)\n    x23 = pair(x17, x22)\n    x24 = multiply(TWO, THREE)\n    x25 = power(x24, TWO)\n    x26 = x25(x23)\n    x27 = hmirror(x26)\n    x28 = x25(x22)\n    x29 = dedupe(x28)\n    x30 = x25(x29)\n    x31 =66(x27)\n    x32 =66(x25)\n    x33 =x19(x31)\n    x34 = x19(x32)\n    x35 = subtract(x34, x33)\n    x36 = x34(x30)\n    x37 =64(x35)\n    x38 = shift(x34, x37)\n    x39 = paint(I, x38)\n    O = x9(x39)\n    return O"], [1.1, "def solve_029ffcc3(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = chain(palette, x2, frontiers)\n    x4 = rbind(branch, Core)\n    x5 = chain(size, dedupe, x4)\n    x6 = compose(x5, x3)\n    x7 = argmax(x1, x6)\n    x8 = x7(x1)\n    x9 = flip(x8)\n    x10 = branch(x9, tophalf, lefthalf)\n    x11 = branch(x9, bottomhalf, righthalf)\n    x12 = x10(I)\n    x13 = x10(I)\n    x14 = branch(x12, leftmost, rightmost)\n    x15 = x14(x13)\n    x16 = x14(x13)\n    x17 = greater(x15, x16)\n    x18 = uppermost(x7)\n    x19 = uppermost(x7)\n    x20 = greater(x18, x19)\n    x21 = lbind(gravitate, x7)\n    x22 =350(x21)\n    x23 = pair(x19, x22)\n    x24 = sfilter(x23, x20)\n    x25 = mapply(x21, x24)\n    O = fill(I, TWO, x25)\n    return O"], [1.1, "def solve_e142779d(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    x5 = branch(x3,2phalf, bottomhalf)\n    x6 = x4(I)\n    x7 = x5(I)\n    O = x6(x6)\n    return O"], [1.1, "def solve_43241e81(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(d51158, x9)\n    x11 = initset(x10)\n    x12 = insert(x3, x11)\n    x13 = width(I)\n    x14 = astuple(x13, x12)\n    x15 = crop(I, ORIGIN, x14)\n    x16 = cover(x15, x12)\n    x17 =232(x16)\n    x18 = asobject(x17)\n    x19 = ulcorner(x2)\n    x20 = shift(x18, x19)\n    x21 = paint(I, x20)\n    x22 = objects(x21, T, T, T)\n    x23 = apply(ulcorner, x22)\n    x24 = contained(x18, x23)\n    x25 = increment(x12)\n    x26 = rbind(divide, x25)\n    x27 = apply(x26, x24)\n    x28 = astuple(x27, x14)\n    x29 = shift(x20, x28)\n    x30 = paint(x21, x29)\n    O = hmirror(x30)\n    return O"], [1.1, "def solve_de7a7577(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(toindices, I)\n    x2 = compose(x1, partition)\n    x3 = fork(multiply, height, width)\n    x4 = fork(equality, size, x3)\n    x5 = compose(x4, fork)\n    x6 = argmax(x1, x5)\n    x7 = difference(x1, x6)\n    x8 = remove(x6, x7)\n    x9 = merge(x8)\n    x10 = color(x9)\n    x11 = uppermost(x6)\n    x12 = leftmost(x6)\n    x13 = height(x6)\n    x14 = astuple(x13, ONE)\n    x15 = add(x14, TWO)\n    x16 = invert(x15)\n    x17 = rightmost(x6)\n    x18 = lbind(subtract, x17)\n    x19 = add(NEG_ONE, x18)\n    x20 = invert(x19)\n    x21 = rightmost(x6)\n    x22 = lbind(subtract, x21)\n    x23 = sign(x22)\n    x24 = sfilter(x18, x23)\n    x25 = combine(x16, x24)\n    x26 = hline(x25)\n    x27 = branch(x26, identity, dmirror)\n    x28 = x27(x6)\n    x29 = x27(x28)\n    x30 = multiply(x11, x14)\n    x31 = ulcorner(x6)\n    x32 = lrcorner(x6)\n    x33 = shift(x25, x31)\n    x34 = shift(x25, x32)\n    x35 =1000(x92, x33)\n    x36 =1000(x39, x34)\n    x37 = combine(x35, x36)\n    x38 = intersection(x33, x37)\n    O = fill(x23, x10, x38)\n    return O"], [1.1, "def solve_e672dac9(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =72(x2)\n    x4 = shape(I)\n    x5 = multiply(x4, x4)\n    x6 = canvas(ZERO, x5)\n    x7 =3af2dmirror(x6)\n    x8 =1875221\n    x9 = palette(I)\n    x9 = lbind(colorcount, I)\n    x10 = compose(x9, double)\n    x11 = argmin(x8, x10)\n    x12 = other(x8, x11)\n    x13 = colorcount(I, x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x12, x13)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = replace(I, x12, x13)\n    x19 = color(x16)\n    x20 = increment(x width)\n    x21 = insert(x16, x19)\n    x22 = astuple(x20, x21)\n    x23 = shift(x21, x22)\n    x24 = canvas(ZERO, x4)\n    x25 = colorcount(x24, x12)\n    x26 = normalize(x24)\n    x27 = shift(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    O = fill(x24, x12, x30)\n    return O"], [1.1, "def solve_fc52ef60(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = colorfilter(x2, SIX)\n    x4 = difference(x2, x3)\n    x5 = fork(equality, toindices, box)\n    x6 = rbind(greater, TWO)\n    x7 = compose(x6, contained)\n    x8 = sfilter(x4, x7)\n    x9 = rbind(greater, ONE)\n    x10 = compose(x9, corners)\n    x11 = sfilter(x8, x10)\n    x12 = combine(x8, x11)\n    x13 = mapply(d4 asindices, x12)\n    x14 = difference(x12, x13)\n    x15 =object(x14, I)\n    x16 = mapply(x11, x15)\n    x17 = fill(I, THREE, x16)\n    x18 = increment(x6)\n    x19 = canvas(ZERO, x18)\n    x20 = asobject(I)\n    x21 = shift(x20, UNITY)\n    x22 = paint(x19, x21)\n    x23 = compress(x22)\n    x24 =28825342_x23)\n    x25 = branch(x4, x27, x24)\n    x26 = asindices(x25)\n    x27 = box(x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = matcher(first, x29)\n    x31 = compose(flip, x30)\n    x32 = sfilter(x26, x31)\n    x33 = normalize(x32)\n    x34 = color(x33)\n    x35 = toindices(x33)\n    x36 = compose(toindices, normalize)\n    x37 = matcher(x36, x35)\n    x38 = mfilter(x1, x37)\n    O = fill(x33, x4, x38)\n    return O"], [1.1, "def solve_156cb07e(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = fork(astuple, dmirror, identity)\n    x3 = x2(I)\n    x4 = argmin(x1, x2)\n    x5 = argmax(x1, x2)\n    x6 = x2(x5)\n    x7 = equality(x6, ONE)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(x5)\n    x10 = branch(x7, x5, x9)\n    x11 = x10(x7)\n    x12 = width(x11)\n    x13 = first(x12)\n    x14 = hupscale(x11, x13)\n    x15 = ofcolor(x14, ONE)\n    x16 = lefthalf(x15)\n    x17 = height(x16)\n    x18 = width(x16)\n    x19 = righthalf(x16)\n    x20 = lefthalf(x19)\n    x21 = righthalf(x16)\n    x22 = ofcolor(x21, ONE)\n    x23 = righthalf(x22)\n    x24 = palette(x17)\n    x25 = palette(x24)\n    x26 = difference(x24, x25)\n    x27 = palette(x21)\n    x28 = other(x27, ZERO)\n    x29 = replace(x14, x28, ONE)\n    x30 = ofcolor(x29, TWO)\n    x31 = rightmost(x30)\n    x32 = rightmost(x28)\n    x33 = greater(x61, x32)\n    x34 = LEFTmost(x30)\n    x35 = RIGHT(x34, x31)\n    x36 =14(x35)\n    x37 = center(x36)\n    x38 = branch(x33, x20, x37)\n    x39 = paint(x29, x38)\n    O = x8(x39)\n    return O"], [1.1, "def solve_b8d32e97(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = replace(I, SIX, TWO)\n    x2 =4112(x1)\n    x3 =8(x2)\n    x4 = apply(normalize, x3)\n    x5 = astuple(ONE, THREE)\n    x6 = x2(x5)\n    x7 =316(subtract, x6)\n    x8 = apply(ulcorner, x4)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    x11 = paint(I, x10)\n    O = rot90(x11)\n    return O"], [1.1, "def solve_6d474cf4(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, FOUR, x4)\n    x6 = argmax(x1, size)\n    x7 = x2(x6)\n    x8 = toindices(x7)\n    x9 = x2(x8)\n    x10 = fill(x5, ONE, x9)\n    x11 = apply(first, x10)\n    x12 =09argmin(x11, identity)\n    x13 = height(x12)\n    x14 = increment(x13)\n    x15 = frontiers(I)\n    x16 = color(x12)\n    x17 = astuple(x16, x14)\n    x18 = repeat(x17, ONE)\n    x19 = combine(x18, x15)\n    x20 = mpapply(recolor, x19, x15)\n    x21 = paint(x10, x20)\n    x22 = delta(x12)\n    x23 = asindices(x22)\n    x24 = box(x23)\n    x25 = toobject(x24, I)\n    x26 = identity(x25)\n    x27 = apply(center, x25)\n    x28 =167(x26)\n    x29 = increment(x28)\n    x30 = shift(x25, x29)\n    x31 = toobject(x30, I)\n    x32 =15, x31)\n    x33 = hmirror(x32)\n    x34 = shift(x29, x33)\n    x35 = toobject(x34, I)\n    x36 = apply(color, x35)\n    x37 = combine(x20, x36)\n    x38 = mapply(dmirror, x37)\n    O = paint(x21, x38)\n    return O"], [1.1, "def solve_c06373bc(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = equality(x2, I)\n    x4 = branch(x3, dmirror, identity)\n    x5 = x4(I)\n    x6 = shape(x5)\n    x7 = canvas(ZERO, x6)\n    x8 = hconcat(x5, x7)\n    x9 = objects(x8, T, F, F)\n    x10 = color(x2)\n    x11 = palette(x2)\n    x12 = other(x11, x10)\n    x13 = switch(x8, x12, I)\n    x14 =18601(x9)\n    x15 = lbind(colorfilter, x14)\n    x16 = compose(x15, color)\n    x17 = rbind(sfilter, x16)\n    x18 = chain(positive, size, x17)\n    x19 = dmirror(x8)\n    x20 = sfilter(x19, x18)\n    x21 = rbind(sizefilter, x20)\n    x22 = merge(x21)\n    x23 =7(x22)\n    x24 = apply(merge, x23)\n    x25 = mmirror(x24)\n    x26 = cellwise(x25, x8, ONE)\n    x27 = apply(llcorner, x24)\n    x28 = lbind(shift, x2)\n    x29 = mapply(x28, x27)\n    x30 = pair(x29, x26)\n    x31 = sfilter(x30, first)\n    x32 = mapply(sighalf, x31)\n    O = smirror(x32)\n    return O"], [1.1, "def solve_ea676d53(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmin(x2, size)\n    x4 = colorfilter(x2, x3)\n    x5 = merge(x4)\n    x6 = product(x4, x5)\n    x7 = fork(divide, first, last)\n    x8 =\n    x9 = order(x6, x7)\n    x9 = mpapply(recolor, x8, x9)\n    O = paint(I, x9)\n    return O"], [1.1, "def solve_22da92b5(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(add, NINE)\n    x2 =79655(x1)\n    x3 = apply(x2, x1)\n    x4 = fork(equality, identity, dmirror)\n    x5 = compose(x4, dedupe)\n    x6 = x5(x3)\n    x7 = size(x6)\n    x8 = rbind(repeat, x7)\n    x9 = apply(x8, x6)\n    O = x5(x9)\n    return O"], [1.1, "def solve_f52db621(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = rbind(Example output:\n    8888888888\n    8218998268\n    8113811228\n    8186760828\n    8180660828\n    8087188888\n    8888888888\n    \"\"\"\n    x2 = shape(I)\n    x3 = partition(I)\n    x4 = argmax(x3, size)\n    x5 = canvas(x4, x2)\n    x6 = argmin(x3, size)\n    x7 = palette(x6)\n    x8 = remove(x4, x7)\n    x9 =004(x8, x5)\n    x10 = ofcolor(I, x9)\n    x11 = normalize(x5)\n    x12 = shape(x11)\n    x13 = increment(x12)\n    x14 = lbind(multiply, x13)\n    x15 = toivec(x14)\n    x16 = shift(x11, x15)\n    O = fill(I, x9, x16)\n    return O"], [1.1, "def solve_8c411f50(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = partition(I)\n    x2 =1111(89, ONE)\n    x3 = argmin(x1, size)\n    x4 = cover(I, x3)\n    x5 = normalize(x3)\n    x6 = shift(x5, UNITY)\n    x7 =11f8(x2)\n    x8 = argmin(x1, size)\n    x9 = width(x6)\n    x10 = divide(x9, FIVE)\n    x11 = increment(x10)\n    x12 = width(x6)\n    x13 = interval(ZERO, x12, x11)\n    x14 = rbind(multiply, x6)\n    x15 = apply(x14, x13)\n    x16 = lbind(shift, x6)\n    x17 = mapply(x16, x15)\n    x18 = fill(x4, FIVE, x17)\n    x19 = objects(x18, T, F, T)\n    x20 = argmax(x19, size)\n    x21 = shift(x20, UNITY)\n    x22 = paint(x18, x21)\n    x23 =8216(x22, x8)\n    x24 = astuple(x23, x23)\n    x25 = x16(x24)\n    x26 = ofcolor(x25, FIVE)\n    x27 = fill(x22, ZERO, x26)\n    O = fill(x27, ONE, x25)\n    return O"], [1.1, "def solve_e5cc93b2(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 =445(I)\n    x2 =129(x1)\n    x3 = branch(x2, vsplit, hsplit)\n    x4 = x3(I, TWO)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = width(x6)\n    x8 = interval(ZERO, x7, ONE)\n    x9 = product(x8, x8)\n    x10 = rbind(multiply, x1)\n    x11 = apply(x10, x9)\n    x12 = lbind(colorcount, x5)\n    x13 = argmax(x11, x12)\n    x14 = shift(x3, x13)\n    x15 = apply(x5, x14)\n    x16 = product(x15, x15)\n    x17 = lbind(colorcount, x5)\n    x18 = apply(x17, x16)\n    x19 = product(x18, x18)\n    x20 = matcher(first, xIVE)\n    x21 = compose(flip, x20)\n    x22 = fork(both, x20, x21)\n    x23 = sfilter(x19, x22)\n    x24 = compose(hperiod, asobject)\n    x25 = height(x23)\n    x26 = increment(x25)\n    x27 = lbind(multiply, x26)\n    x28 = height(x23)\n    x29 = increment(x28)\n    x30 = astuple(x27, x29)\n    x31 = lbind(shift, x23)\n    x32 =20(x31)\n    x33 = multiply(x30, x32)\n    x34 = shift(x24, x33)\n    x35 = paint(x5, x34)\n    x36 =265(x35)\n    O = downscale(x35, x36)\n    return O"], [1.1, "def solve_b7de00be(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = initset(ORIGIN)\n    x2 = insert(ORIGIN, x1)\n    x3 = rbind(multiply, THREE)\n    x4 = apply(x3, x2)\n    x5 = astuple(NEG_TWO, NEG_TWO)\n    x6 = shift(x4, x5)\n    x7 = fork(insert, identity, backdrop)\n    x8 = apply(x7, x6)\n    x9 = rbind(toobject, I)\n    x10 = apply(x9, x8)\n    x11 = rbind(colorcount, TWO)\n    x12 = apply(x11, x10)\n    x13 = matcher(first, TWO)\n    x14 = compose(flip, x13)\n    x15 = rbind(sfilter, x14)\n    x16 = lbind(occurrences, I)\n    x17 = chain(positive, size, x16)\n    x18 = compose(x17, x19)\n    x19 = lbind(lbind, equality)\n    x20 = lbind(lbind, shift)\n    x21 = compose(x20, x12)\n    x22 = compose(x19, x21)\n    x23 = fork(argmax, x21, x22)\n    x24 = urcorner(x5)\n    x25 =9999(x24, x23)\n    x26 = cover(I, x25)\n    x27 = shoot(x26, x24)\n    x28 = fork(combine, x27, x23)\n    x29 = mapply(x28, x27)\n    O = fill(x26, ONE, x29)\n    return O"], [1.1, "def solve_e00f2949(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, toindices)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x12, x11)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(positive, size)\n    x17 = lbind(com SYs, I)\n    x18 = compose(x16, x17)\n    x19 = fork(shift, identity, x18)\n    x20 = mapply(x19, x4)\n    O = paint(I, x20)\n    return O"], [1.1, "def solve_90a7b12e(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = ONE\n    add, SEVEN, TEN)\n    x2 = rbind(add, x1)\n    x3 = compose(x2, last)\n    x4 = fork(equality, first, x3)\n    x5 = compose(flip, x4)\n    x6 = sfilter(x1, x5)\n    x7 =51645(x6)\n    x8 = objects(x7, T, T, T)\n    x9 = rbind(colorcount, vERO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, x7)\n    return O"], [1.1, "def solve_324842da(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = extract(x2, x4)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 =1817m5591(I):\n    x9 = add(UNITY, x6)\n    x10 = increment(x9)\n    x11 = power(x7, x10)\n    x12 = subtract(x6, x11)\n    x13 = astuple(x12, x12)\n    x14 = canvas(ZERO, x13)\n    x15 = shoot(x6, UNITY)\n    x16 = combine(x15, x14)\n    x17 = rbind(shoot, x16)\n    x18 = mapply(x17, x15)\n    x19 = fill(x14, x1, x18)\n    x20 = merge(x2)\n    x21 = fill(x19, TWO, x20)\n    O = replace(x21, x1, TWO)\n    return O"], [1.1, "def solve_b8c81847(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n     x14 = apply(x4, x13)\n    x15 = ofcolor(I, FOUR)\n    O = subgrid(x15, x14)\n    return O"], [1.1, "def solve_a51d8257(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(329, I)\n    x2 = compose(x1, dneighbors)\n    x3 = fork(equality, identity, x2)\n    x4 = compose(x3, I)\n    x5 = mostcolor(I)\n    x6 = fork(both, x3, x4)\n    x7 = fork(both, x5, x6)\n    x8 = compose(flip, x7)\n    x9 = sfilter(I, x8)\n    x10 = totuple(x9)\n    x11 = apply(color, x10)\n    x12 = size(x11)\n    x13 = increment(x12)\n    x14 =\n    x15 = canvas(x5, x13)\n    x16 = asobject(x11)\n    x17 = shift(x16, UNITY)\n    O = paint(x14, x17)\n    return O"], [1.1, "def solve_532aae3e(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 =Example output:\n    2332567233\n    2332567233\n    2332567233\n    4772365732\n    4723662323\n    6272324272\n    2271870723\n    1725315739\n    8854264224\n    2589222839\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [1.1, "def solve_d5e9ff86(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 =7fe24062(I)\n    x2 = fork(subtract, first, last)\n    x3 = compose(positive, size)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(center, first)\n    x6 = compose(center, last)\n    x7 = fork(subtract, x5, x6)\n    x8 = compose(x4, size)\n    x9 = rbind(intersection, x2)\n    x10 = fork(\n    x11 = compose(x8, size)\n    x10 = chain(x11, x9, size)\n    x11 = fork(both, x7, x10)\n    x12 = mfilter(x1, x11)\n    O = underfill(I, FOUR, x12)\n    return O"], [1.1, "def solve_3a01a087(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = frontiers(I)\n    x2 =599uple(x1,5168)\n    x3 = difference(x1, x2)\n    x4 = toobject(x3, I)\n    x5 = mostcolor(x4)\n    x6 = objects(I, T, F, T)\n    x7 = rbind(colorcount, ONE)\n    x8 = argmax(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [1.1, "def solve_c92dbd71(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = partition(I)\n    x2 = ONE(d511feca)\n    x3 = colorfilter(x1, ZERO)\n    x4 = compose(last, last)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = compose(first, last)\n    x8 = order(x6, x7)\n    x9 =5208(matcher, first)\n    x10 = compose(last, last)\n    x11 = fork(both, x9, x10)\n    x12 = extract(x8, x11)\n    x13 = last(x12)\n    x14 = decrement(x13)\n    x15 = last(x14)\n    x16 = toivec(x15)\n    x17 = initset(x16)\n    x18 = insert(x14, x17)\n    x19 = product(x18, x18)\n    x20 = rbind(shoot, DOWN)\n    x21 = mapply(x20, x19)\n    x22 = underfill(I, EIGHT, x21)\n    x23 = matcher(first, ZERO)\n    x24 = compose(flip, x23)\n    x25 = sfilter(x19, x24)\n    x26 = difference(x19, x25)\n    x27 = solve(x22, x26)\n    O = fill(x22, TWO, x27)\n    return O"], [1.1, "def solve_3dc8c44f(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = rot180(I)\n    x2 = lbind(subtract, TWO)\n    x3 = chain(even, x2, last)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(x4, dmirror)\n    x6 = chain(fewmost, x5, first)\n    x7 = order(x1, x6)\n    x8 = apply(last, x7)\n    x9 = merge(x8)\n    x10 = size(x9)\n    x11 = interval(ZERO, x10, ONE)\n    x12 = pair(x11, x8)\n    x13 = fork(multiply, first, last)\n    x14 = order(x12, x13)\n    x15 = lbind(canvas, ZERO)\n    x16 = chain(x15, mostcolor, first)\n    x17 = fork(paint, x16, last)\n    x18 = fork(multiply, height, width)\n    x19 =987(x17, x18)\n    x20 = lbind(occurrences, x9)\n    x21 = compose(x20, last)\n    x22 = fork(mapply, first, x21)\n    x23 = pair(x19, x22)\n    x24 =object(x23, x9)\n    x25 = difference(x24, x23)\n    x26 = apply(x22, x25)\n    x27 = rbind(object, x24)\n    x28 = compose(x27, last)\n    x29 = sfilter(x26, x28)\n    x30 = apply(color, x29)\n    x31 = pair(x29, x30)\n    x32 = mapply(x27, x31)\n    x33 = first(x32)\n    x34 = last(x32)\n    x35 = neighbors(UNITY)\n    x36 = recolor(ZERO, x35)\n    x37 = shift(x34, x36)\n    x38 = paint(x33, x37)\n    O = x30(x38)\n    return O"], [1.1, "def solve_52fd39e7(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 =af2able trim(I)\n    x2 =56(phalf, x1)\n    x3 =986e26(x2)\n    x4 =greater(THREE, x3)\n    x5 = width(x1)\n    x6 = tojvec(x5)\n    x7 = index(I, x6)\n    x8 =696(ORIGIN, UNITY)\n    x9 = equality(x7, x8)\n    x10 = branch(x4, x9, RIGHT)\n    x11 = branch(x4, LEFT, DOWN)\n    x12 = branch(x4, hfrontier, vfrontier)\n    x13 = x11(x12)\n    x14 = x10(x13)\n    x15 = increment(x5)\n    x16 = x11(x14)\n    x17 = shift(x13, x16)\n    x18 = paint(I, x17)\n    x19 = fill(x18, x7, x13)\n    O = x11(x19)\n    return O"], [1.1, "def solve_9bffa2ce(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, T, T)\n    x4 = order(x3, size)\n    x5 = apply(color, x4)\n    x6 = last(x5)\n    x7 = remove(x2, x5)\n    x8 = last(x7)\n    x9 = color(x6)\n    x10 = color(x8)\n    x11 = subgrid(x10, x1)\n    x12 = matcher(first, x9)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = lbind(toobject, x5)\n    x16 = chain(x14, x15, color)\n    x17 = compose(x5, x16)\n    x18 =9(x17)\n    x19 =18(x11)\n    x20 = lbind(palette, x9)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = fork(remove, x22, identity)\n    x24 = chain(x19, last, x23)\n    x25 = rbind(ofcolor, x9)\n    x26 = compose(last, x25)\n    x27 = fork(subtract, x26, x24)\n    x28 = fork(shift, x27, x26)\n    x29 = mapply(x28, x6)\n    O = paint(x11, x29)\n    return O"], [1.1, "def solve_8482bdf5(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, height)\n    x3 = branch(x1, decrement, height)\n    x4 = x2(I)\n    x5 = mostcolor(I)\n    x6 = x3(I)\n    x7 = hconcat(I, x4)\n    x8 = tophalf(x7)\n    x9 = leastcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = argmin(x7, x10)\n    x12 = x11(x8)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = leastcolor(x13)\n    x16 = matcher(identity, x15)\n    x17 =770000(x13, x16)\n    x18 = height(x17)\n    x19 = width(x17)\n    x20 = decrement(x19)\n    x21 = astuple(x20, x18)\n    x22 = crop(x17, ORIGIN, x21)\n    x23 = hmirror(x22)\n    x24 = replace(x23, ONE, x9)\n    x25 = width(x24)\n    x26 = interval(ZERO, x25, ONE)\n    x27 = rbind(rapply, x25)\n    x28 = initset(x15)\n    x29 = lbind(rapply, x28)\n    x30 = chain(first, x29, initset)\n    x31 = apply(x30, x26)\n    x32 = ofcolor(x24, x31)\n    x33 = sfilter(x32, x30)\n    x34 = mapply(toindices, x33)\n    x35 = portrait(x34)\n    x36 = branch(x35, identity, x20)\n    x37 = ofcolor(x24, x9)\n    x38 = difference(x37, x36)\n    x39 = canvas(x35, x38)\n    O = x21(x39)\n    return O"], [1.1, "def solve_506e39e4(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 =159(I)\n    x2 =44(x1, I)\n    x3 = hmirror(x2)\n    x4 = vmirror(x2)\n    x5 = dmirror(x2)\n    x6 = cmirror(x2)\n    x7 = paint(I, x3)\n    x8 = paint(x7, x4)\n    x9 = paint(x8, x5)\n    O = paint(x9, x6)\n    return O"], [1.1, "def solve_6b48d1e0(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = astuple(d687, cmirror)\n    x2 = astuple(x1, I)\n    x3 = initset(ORIGIN)\n    x4 = insert(ORIGIN, x3)\n    x5 = insert(x2, x4)\n    x6 = lbind(shift, x5)\n    x7 = rbind(compose, initset)\n    x8 = lbind(rbind, manhattan)\n    x9 = compose(x7, x8)\n    x10 =59(x7)\n    x11 = x9(I)\n    x12 = insert(x10, x11)\n    x13 = lbind(shift, x12)\n    x14 = rbind(compose, initset)\n    x15 = lbind(99bind, manhattan)\n    x16 = compose(x14, x15)\n    x17 = fork(shift, x13, x16)\n    x18 = fork(insert, x17, x9)\n    x19 = compose(box, x18)\n    x20 = mapply(x19, x4)\n    O = fill(I, THREE, x20)\n    return O"]], "3490cc26": [[0.08173484697705038, "def solve_6240a5e7(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_a2446404(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.08173484697705038, "def solve_4a3b8cc2(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_a1f709c7(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.08173484697705038, "def solve_b33f7689(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, FOUR, x5)\n    return O"], [0.08173484697705038, "def solve_b6c8f382(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.08173484697705038, "def solve_aa94830c(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_e73369c7(I):\n    x1 = objects(I, T, F, F)\n    x2 = sizefilter(x1, ONE)\n    x3 = merge(x2)\n    O = move(I, x3, TWO_BY_ZERO)\n    return O"], [0.08173484697705038, "def solve_3a25b7c3(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.08173484697705038, "def solve_db07b015(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.08173484697705038, "def solve_762af901(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, THREE)\n    x3 = sizefilter(x2, ONE)\n    x4 = difference(x2, x3)\n    x5 = merge(x4)\n    O = fill(I, THREE, x5)\n    return O"], [0.08173484697705038, "def solve_c566179a(I):\n    O = subgrid(I, I)\n    return O"], [0.08173484697705038, "def solve_82a79779(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.08173484697705038, "def solve_82b52372(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.08173484697705038, "def solve_83816c0a(I):\n    O = replace(I, FOUR, ZERO)\n    return O"], [0.08173484697705038, "def solve_743b00f3(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.08173484697705038, "def solve_b1174d58(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.08173484697705038, "def solve_421033c1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.08173484697705038, "def solve_6b859cac(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.08173484697705038, "def solve_a5ebd2ce(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.08173484697705038, "def solve_7f44ba7f(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.08173484697705038, "def solve_1540cbb5(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = fork(vmatching, first, last)\n    x5 = mfilter(x3, x4)\n    x6 = replace(I, THREE, ZERO)\n    O = fill(x6, EIGHT, x5)\n    return O"], [0.08184677086880399, "def solve_c42b3a2a(I):\n    x1 = initset(ORIGIN)\n    x2 = box(x1)\n    x3 = shape(I)\n    x4 = minimum(x3)\n    x5 = halve(x4)\n    x6 = interval(ONE, x5, ONE)\n    x7 = lbind(power, inbox)\n    x8 = rbind(rapply, x2)\n    x9 = compose(initset, x7)\n    x10 = chain(first, x8, x9)\n    x11 = apply(x10, x6)\n    x12 = repeat(x2, ONE)\n    x13 = combine(x12, x11)\n    x14 = rbind(toobject, I)\n    x15 = compose(color, x14)\n    x16 = apply(x15, x13)\n    x17 = interval(ZERO, x5, ONE)\n    x18 = pair(x17, x16)\n    x19 = compose(invert, first)\n    x20 = order(x18, x19)\n    x21 = apply(last, x20)\n    x22 = mpapply(recolor, x21, x13)\n    O = paint(I, x22)\n    return O"], [0.08283625757257641, "def solve_452b0c5a(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = center(x2)\n    x4 = dneighbors(x3)\n    x5 = insert(x3, x4)\n    O = fill(I, ZERO, x5)\n    return O"], [0.08318632736744225, "def solve_e4912a4a(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_0aa61d66(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_508145b8(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_f9764668(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_05885169(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_7674bbfa(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_734d86fa(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_08b0f41a(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_94579f3a(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_03970150(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.09977289344345569, "def solve_f4191f94(I):\n    O = switch(I, EIGHT, TWO)\n    return O"], [0.11499022260915734, "def solve_dc840d56(I):\n    x1 = ofcolor(I, THREE)\n    x2 = height(x1)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, ZERO_BY_TWO, TWO_BY_TWO)\n    x5 = ofcolor(I, TWO)\n    x6 = recolor(TWO, x5)\n    O = move(I, x6, x4)\n    return O"], [0.12814991617905258, "def solve_e36cd606(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [0.13468134728045977, "def solve_64c51887(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13468134728045977, "def solve_e663cc14(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_544d2d26(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13468134728045977, "def solve_444b77df(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13468134728045977, "def solve_40e5ab1c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13468134728045977, "def solve_c111c909(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_423ed807(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_01e61422(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13468134728045977, "def solve_1742a375(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13468134728045977, "def solve_c343d444(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_3e34b638(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13468134728045977, "def solve_e9c578f2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13468134728045977, "def solve_75c97c53(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13468134728045977, "def solve_339196ad(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13789761042599719, "def solve_c0cc875a(I):\n    x1 = ofcolor(I, TWO)\n    x2 = crop(I, ORIGIN, THREE_BY_THREE)\n    x3 = asobject(x2)\n    x4 = lbind(shift, x3)\n    x5 = compose(x4, decrement)\n    x6 = mapply(x5, x1)\n    O = paint(I, x6)\n    return O"], [0.13811265931525568, "def solve_81289ccc(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.13811265931525568, "def solve_1ce93324(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.14633502634498852, "def solve_fc7aacce(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.14633502634498852, "def solve_784a76b7(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.14633502634498852, "def solve_ec772d80(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.147039853263387, "def solve_9d80387e(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = fill(I, x8, x32)\n    return O"], [0.147039853263387, "def solve_1b01e792(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = fill(I, x8, x32)\n    return O"], [0.15201967101125663, "def solve_25108d8d(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = argmax(x1, x2)\n    x5 = remove(x3, x1)\n    x6 = other(x5, x4)\n    x7 = subgrid(x6, I)\n    x8 = frontiers(x7)\n    x9 = sfilter(x8, hline)\n    x10 = size(x9)\n    x11 = positive(x10)\n    x12 = branch(x11, dmirror, identity)\n    x13 = x12(I)\n    x14 = color(x6)\n    x15 = ofcolor(x13, x14)\n    x16 = subgrid(x15, x13)\n    x17 = trim(x16)\n    x18 = lefthalf(x17)\n    x19 = vmirror(x18)\n    x20 = asobject(x19)\n    x21 = righthalf(x17)\n    x22 = vmirror(x21)\n    x23 = asobject(x22)\n    x24 = color(x4)\n    x25 = inbox(x15)\n    x26 = backdrop(x25)\n    x27 = fill(x13, x24, x26)\n    x28 = urcorner(x15)\n    x29 = add(x28, UNITY)\n    x30 = shift(x23, x29)\n    x31 = ulcorner(x15)\n    x32 = width(x20)\n    x33 = invert(x32)\n    x34 = tojvec(x33)\n    x35 = add(DOWN, x34)\n    x36 = add(x31, x35)\n    x37 = shift(x20, x36)\n    x38 = combine(x30, x37)\n    x39 = paint(x27, x38)\n    O = x12(x39)\n    return O"], [0.15329845560571315, "def solve_6a3a259e(I):\n    x1 = partition(I)\n    x2 = fork(equality, toindices, box)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = color(x4)\n    x6 = palette(I)\n    x7 = remove(x5, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = toindices(x4)\n    x11 = apply(first, x10)\n    x12 = toindices(x4)\n    x13 = apply(last, x12)\n    x14 = rbind(contained, x11)\n    x15 = compose(x14, first)\n    x16 = rbind(contained, x13)\n    x17 = compose(x16, last)\n    x18 = fork(either, x15, x17)\n    x19 = ofcolor(I, x9)\n    x20 = sfilter(x19, x18)\n    x21 = rbind(gravitate, x4)\n    x22 = compose(x21, initset)\n    x23 = fork(add, identity, x22)\n    x24 = fork(connect, identity, x23)\n    x25 = mapply(x24, x20)\n    O = fill(I, x9, x25)\n    return O"], [0.167039853263387, "def solve_007cae4b(I):\n    x1 = objects(I, T, F, F)\n    x2 = palette(I)\n    x3 = other(x2, ZERO)\n    x4 = colorfilter(x1, x3)\n    x5 = sizefilter(x4, ONE)\n    x6 = difference(x4, x5)\n    x7 = merge(x6)\n    O = fill(I, THREE, x7)\n    return O"], [0.168463732206312, "def solve_5fdb3430(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.168463732206312, "def solve_c27ce434(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.168463732206312, "def solve_646aa8de(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.168463732206312, "def solve_f036f0c7(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.168463732206312, "def solve_5aff503e(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.1697728934434557, "def solve_43c6e29b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.1697728934434557, "def solve_541246fa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.1697728934434557, "def solve_47a1addc(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.1697728934434557, "def solve_f84c72e4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.17098233381512817, "def solve_5a2bf004(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.17098233381512817, "def solve_5dc37c90(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.17098233381512817, "def solve_d0cc205d(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.1816725678756399, "def solve_7eb2a11d(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = height(x2)\n    x4 = height(I)\n    x5 = interval(ZERO, x4, x3)\n    x6 = lbind(shift, x2)\n    x7 = compose(x6, toivec)\n    x8 = compose(x7, invert)\n    x9 = fork(combine, x7, x8)\n    x10 = mapply(x9, x5)\n    O = paint(I, x10)\n    return O"], [0.1816725678756399, "def solve_2eb3f024(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = height(x2)\n    x4 = height(I)\n    x5 = interval(ZERO, x4, x3)\n    x6 = lbind(shift, x2)\n    x7 = compose(x6, toivec)\n    x8 = compose(x7, invert)\n    x9 = fork(combine, x7, x8)\n    x10 = mapply(x9, x5)\n    O = paint(I, x10)\n    return O"], [0.1816725678756399, "def solve_e4ebdf9e(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = height(x2)\n    x4 = height(I)\n    x5 = interval(ZERO, x4, x3)\n    x6 = lbind(shift, x2)\n    x7 = compose(x6, toivec)\n    x8 = compose(x7, invert)\n    x9 = fork(combine, x7, x8)\n    x10 = mapply(x9, x5)\n    O = paint(I, x10)\n    return O"], [0.18182174559724157, "def solve_b9aee034(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = cover(I, x2)\n    x4 = shift(x2, DOWN)\n    x5 = paint(x3, x4)\n    x6 = shift(x2, RIGHT)\n    x7 = paint(x5, x6)\n    x8 = shift(x2, LEFT)\n    O = paint(x7, x8)\n    return O"], [0.19326297813860446, "def solve_a712debb(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.19326297813860446, "def solve_a669ed4f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.19986952115995066, "def solve_b1cb6271(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.19986952115995066, "def solve_a0033061(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.19986952115995066, "def solve_a96086ab(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.20252763457609518, "def solve_fff5abe6(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.20252763457609518, "def solve_fee01b8e(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.20977289344345568, "def solve_21a6ff0e(I):\n    x1 = objects(I, T, F, T)\n    x2 = apply(toindices, x1)\n    x3 = fork(either, vline, hline)\n    x4 = sfilter(x2, x3)\n    x5 = difference(x2, x4)\n    x6 = fork(equality, identity, box)\n    x7 = mfilter(x5, x6)\n    O = fill(I, THREE, x7)\n    return O"], [0.20977289344345568, "def solve_be665f33(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_035af0ce(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_0ef8e060(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_95242d09(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_95d56d68(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_0c28ea7b(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, SIX)\n    x3 = compose(flip, x2)\n    x4 = mfilter(x1, x2)\n    x5 = mfilter(x1, x3)\n    x6 = fill(I, TWO, x4)\n    O = fill(x6, ONE, x5)\n    return O"], [0.20977289344345568, "def solve_13518b4f(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_94527df4(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_95a96707(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_171722ab(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_7df58ffd(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.2110590985215381, "def solve_34bdd8d2(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = prapply(connect, x2, x2)\n    x4 = fgpartition(I)\n    x5 = merge(x4)\n    x6 = cover(I, x5)\n    x7 = fork(either, hline, vline)\n    x8 = box(x5)\n    x9 = rbind(difference, x8)\n    x10 = chain(positive, size, x9)\n    x11 = fork(both, x7, x10)\n    x12 = mfilter(x3, x11)\n    O = fill(x6, x1, x12)\n    return O"], [0.2164395601101224, "def solve_d5426d9c(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.2164395601101224, "def solve_0d3126ff(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.2164395601101224, "def solve_25d533b9(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.21724245422789054, "def solve_25c8825c(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(shoot, RIGHT)\n    x4 = compose(x3, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(x1, DOWN_LEFT)\n    x9 = initset(x8)\n    x10 = mostcolor(I)\n    x11 = recolor(x10, x9)\n    x12 = objects(x7, T, F, T)\n    x13 = insert(x11, x12)\n    x14 = order(x13, uppermost)\n    x15 = first(x14)\n    x16 = remove(x11, x14)\n    x17 = remove(x15, x14)\n    x18 = compose(lrcorner, first)\n    x19 = compose(lrcorner, last)\n    x20 = fork(connect, x18, x19)\n    x21 = compose(color, first)\n    x22 = fork(recolor, x21, x20)\n    x23 = pair(x16, x17)\n    x24 = mapply(x22, x23)\n    O = underpaint(x7, x24)\n    return O"], [0.22746637157822558, "def solve_c6031c1c(I):\n    O = vmirror(I)\n    return O"], [0.24440527968330814, "def solve_dd665c88(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.24440527968330814, "def solve_0ee9ca71(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, x1, I)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.2464702263154948, "def solve_ac8ef8e2(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = rbind(colorcount, ZERO)\n    x3 = lbind(toobject, x1)\n    x4 = compose(x2, x3)\n    x5 = vmirror(I)\n    x6 = hmirror(I)\n    x7 = astuple(x5, x6)\n    x8 = argmin(x7, x4)\n    O = subgrid(x1, x8)\n    return O"], [0.2473346261417366, "def solve_2c584159(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.2473346261417366, "def solve_20c45a08(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.2473346261417366, "def solve_853baa07(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.24802713735066675, "def solve_aecd87b5(I):\n    x1 = rot270(I)\n    x2 = hconcat(I, x1)\n    x3 = hsplit(x2, THREE)\n    O = first(x3)\n    return O"], [0.25543417203130403, "def solve_55843ee0(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.25586824336349373, "def solve_7b00b0e2(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.25586824336349373, "def solve_5ae7aad6(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.25986952115995066, "def solve_31760b9c(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, THREE, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.27303110982313544, "def solve_cbd19292(I):\n    x1 = dmirror(I)\n    x2 = cmirror(x1)\n    x3 = hmirror(I)\n    x4 = hmirror(x3)\n    x5 = vconcat(x4, x4)\n    x6 = vconcat(x5, x3)\n    O = cellwise(x2, x6, ZERO)\n    return O"], [0.2735505434325868, "def solve_96923ba7(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.2735505434325868, "def solve_20c82e19(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.2735505434325868, "def solve_3e23124e(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.2756213575913099, "def solve_cc399320(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.2781097602204145, "def solve_4d5b4592(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.2781097602204145, "def solve_cf765f7b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.28257229929506134, "def solve_4f3ca617(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.28257229929506134, "def solve_76dd7606(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.28257229929506134, "def solve_6b5f39a8(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.28271352439090625, "def solve_569e5a0b(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.28271352439090625, "def solve_948dcfcd(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.28271352439090625, "def solve_e1406122(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.28271352439090625, "def solve_92d5bfd6(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.28271352439090625, "def solve_51f25776(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.28271352439090625, "def solve_4588d57b(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.28271352439090625, "def solve_f11ca90b(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.28271352439090625, "def solve_559104ca(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.2912996173225872, "def solve_d605d80a(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    O = x5(I)\n    return O"], [0.2912996173225872, "def solve_7b9e592a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_11d42256(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_e0b1611a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_3c315dc0(I):\n    O = tophalf(I)\n    return O"], [0.2912996173225872, "def solve_c7b130d6(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_881525a4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_f6395595(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.29211676764739275, "def solve_97e2fd0c(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = apply(toindices, x6)\n    x8 = rbind(shoot, RIGHT)\n    x9 = compose(x8, center)\n    x10 = fork(recolor, color, x9)\n    x11 = mapply(x10, x6)\n    x12 = paint(I, x11)\n    x13 = width(I)\n    x14 = interval(ZERO, x13, ONE)\n    x15 = apply(double, x14)\n    x16 = apply(increment, x15)\n    x17 = apply(tojvec, x16)\n    x18 = prapply(shift, x7, x17)\n    x19 = merge(x18)\n    O = fill(x12, FIVE, x19)\n    return O"], [0.2957105825141008, "def solve_3443aeb4(I):\n    x1 = switch(I, ORIGIN, THREE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [0.29660861186373566, "def solve_cb51c93a(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.29660861186373566, "def solve_77c5a92b(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.29660861186373566, "def solve_cdb65a39(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.3040514825339552, "def solve_a852a024(I):\n    x1 = hmirror(I)\n    x2 = fgpartition(x1)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = compose(double, halve)\n    x6 = fork(equality, identity, x5)\n    x7 = compose(x6, last)\n    x8 = sfilter(x4, x7)\n    x9 = fill(x1, THREE, x8)\n    O = vmirror(x9)\n    return O"], [0.3074019960118805, "def solve_c634772b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.31572456964802403, "def solve_68da113f(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.3315011728051802, "def solve_dd7cbc25(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.33302817873157914, "def solve_e5733138(I):\n    x1 = objects(I, T, F, F)\n    x2 = fork(combine, vfrontier, hfrontier)\n    x3 = compose(x2, center)\n    x4 = mapply(x3, x1)\n    O = underfill(I, SIX, x4)\n    return O"], [0.34510675848655514, "def solve_2d85fb7c(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.34510675848655514, "def solve_5a0ee9f3(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.36791347770439387, "def solve_c5525c8a(I):\n    O = dmirror(I)\n    return O"], [0.36791347770439387, "def solve_31fd98ec(I):\n    O = dmirror(I)\n    return O"], [0.37804512752039743, "def solve_0acf92b5(I):\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.3807233128441688, "def solve_b1617fab(I):\n    O = rot270(I)\n    return O"], [0.389126496854825, "def solve_1c6f527b(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot270(x3)\n    return O"], [0.3997728934434557, "def solve_6bfd2630(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.3997728934434557, "def solve_13311d98(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.3997728934434557, "def solve_eeb47269(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.40355292428713774, "def solve_f0016d39(I):\n    x1 = rbind(greater, ONE)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [0.40355292428713774, "def solve_91079819(I):\n    x1 = rbind(greater, ONE)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [0.4121180954681841, "def solve_7858da89(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.4221658498666133, "def solve_32d71867(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.4221658498666133, "def solve_a62d0e88(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.44421029663584294, "def solve_6cf6f287(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_1ffae2fa(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_5e21d698(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_6bc3ca92(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.4496658498666134, "def solve_c4492498(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, ONE, x2)\n    return O"], [0.4853084736970792, "def solve_bcef05a7(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, vmirror, hmirror)\n    x9 = x8(x6)\n    x10 = branch(x7, leftmost, uppermost)\n    x11 = branch(x7, tojvec, toivec)\n    x12 = x10(x5)\n    x13 = x10(x6)\n    x14 = greater(x12, x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = x11(x16)\n    x18 = shape(x6)\n    x19 = multiply(x17, x18)\n    x20 = shift(x9, x19)\n    x21 = fill(I, THREE, x3)\n    O = paint(x21, x20)\n    return O"], [0.5235791174015115, "def solve_02c549c5(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5235791174015115, "def solve_88c35f0a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5235791174015115, "def solve_ae109171(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5235791174015115, "def solve_51d6def0(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5235791174015115, "def solve_789764f1(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5235791174015115, "def solve_b88191a0(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5235791174015115, "def solve_71819341(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5235791174015115, "def solve_a9301661(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = combine(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5336172007998716, "def solve_aeae0702(I):\n    x1 = hsplit(I, THREE)\n    x2 = first(x1)\n    x3 = remove(x2, x1)\n    x4 = first(x3)\n    x5 = last(x3)\n    x6 = ofcolor(x4, NINE)\n    x7 = ofcolor(x2, FOUR)\n    x8 = fill(x5, NINE, x6)\n    O = fill(x8, FOUR, x7)\n    return O"], [0.5430215763602573, "def solve_d7160e25(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = subgrid(x5, I)\n    x7 = mostcolor(x6)\n    x8 = leastcolor(x6)\n    O = switch(x6, x7, x8)\n    return O"], [0.5430215763602573, "def solve_0b6864cf(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = subgrid(x5, I)\n    x7 = mostcolor(x6)\n    x8 = leastcolor(x6)\n    O = switch(x6, x7, x8)\n    return O"], [0.5430215763602573, "def solve_f6a12c87(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = subgrid(x5, I)\n    x7 = mostcolor(x6)\n    x8 = leastcolor(x6)\n    O = switch(x6, x7, x8)\n    return O"], [0.5542587288414367, "def solve_dff6181a(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5542587288414367, "def solve_bc780504(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5542587288414367, "def solve_bc348caf(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5641693586048402, "def solve_00354818(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.5648229277707709, "def solve_362bfae8(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = subgrid(x20, I)\n    x22 = switch(x21, x18, x19)\n    x23 = replace(x22, x18, x4)\n    x24 = lbind(downscale, x23)\n    x25 = fork(upscale, x24, identity)\n    x26 = matcher(x25, x23)\n    x27 = shape(x23)\n    x28 = maximum(x27)\n    x29 = interval(ONE, x28, ONE)\n    x30 = sfilter(x29, x26)\n    x31 = maximum(x30)\n    O = downscale(x23, x31)\n    return O"], [0.5806814241086746, "def solve_36b1d5fa(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = ofcolor(x1, ZERO)\n    x4 = ofcolor(x2, ZERO)\n    x5 = intersection(x3, x4)\n    x6 = shape(x1)\n    x7 = canvas(ZERO, x6)\n    O = fill(x7, EIGHT, x5)\n    return O"], [0.6014849716551933, "def solve_512bcb78(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = rbind(equality, x4)\n    x7 = argmin(x5, x6)\n    x8 = asindices(I)\n    x9 = ofcolor(I, x4)\n    x10 = difference(x8, x9)\n    x11 = fill(I, x7, x10)\n    x12 = frontiers(x11)\n    x13 = sfilter(x12, vline)\n    x14 = difference(x12, x13)\n    x15 = astuple(x14, x13)\n    x16 = apply(size, x15)\n    x17 = increment(x16)\n    O = canvas(x4, x17)\n    return O"], [0.6014849716551933, "def solve_224f5db4(I):\n    x1 = mostcolor(I)\n    x2 = frontiers(I)\n    x3 = sfilter(x2, vline)\n    x4 = difference(x2, x3)\n    x5 = astuple(x4, x3)\n    x6 = apply(size, x5)\n    x7 = increment(x6)\n    O = canvas(x1, x7)\n    return O"], [0.641276367065674, "def solve_7e30d78b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.641276367065674, "def solve_0dfc0a99(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.641276367065674, "def solve_7991406b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.641276367065674, "def solve_e7d03285(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.641276367065674, "def solve_0e84b41d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.641276367065674, "def solve_e04f8cb1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.6460408141864922, "def solve_490de5bc(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.6460408141864922, "def solve_98f30818(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6460408141864922, "def solve_d295afd4(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.6460408141864922, "def solve_8b29d585(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6460408141864922, "def solve_10f4d295(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.6460408141864922, "def solve_8ce23322(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6460408141864922, "def solve_383060ef(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6460408141864922, "def solve_99673455(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6460408141864922, "def solve_1a59a9cc(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6968040052377024, "def solve_2dc7e85b(I):\n    x1 = replace(I, FOUR, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.6968040052377024, "def solve_9c3c256b(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.7250874317080771, "def solve_94625438(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = ofcolor(x1, ZERO)\n    x4 = ofcolor(x2, ZERO)\n    x5 = intersection(x3, x4)\n    x6 = astuple(NINE, NINE)\n    x7 = canvas(ZERO, x6)\n    O = fill(x7, EIGHT, x5)\n    return O"], [0.7312448582166898, "def solve_b706875e(I):\n    x1 = replace(I, TWO, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.7540848163604722, "def solve_b1510865(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [0.7540848163604722, "def solve_0aac7f25(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [0.7779700058051356, "def solve_946ad92c(I):\n    x1 = partition(I)\n    x2 = chain(size, dedupe, neighbors)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, dmirror, identity)\n    x5 = x4(I)\n    x6 = objects(x5, T, F, F)\n    x7 = order(x6, leftmost)\n    x8 = apply(color, x7)\n    x9 = repeat(x8, ONE)\n    O = x4(x9)\n    return O"], [0.7780474307942749, "def solve_5f7fd0ff(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(shoot, UNITY)\n    x3 = compose(x2, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    x6 = astuple(SIX, SIX)\n    x7 = canvas(ZERO, x6)\n    O = paint(x7, x5)\n    return O"], [0.7915392052312495, "def solve_8581db70(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_8e882022(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_2df84732(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_8380b72d(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.8413333333333334, "def solve_509e1e37(I):\n    x1 = rbind(subgrid, I)\n    x2 = chain(mostcolor, x1, numcolors)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, identity, dmirror)\n    x5 = x4(I)\n    x6 = objects(x5, T, F, T)\n    x7 = difference(x6, x5)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x4(x10)\n    return O"], [0.9081403808721191, "def solve_ac362628(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_39f8ebdd(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_5388b651(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_5ffb29a7(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_5afaeb8b(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_1a5dc52d(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9182807290875006, "def solve_862d52aa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_d48d374f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_4d041841(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_78197862(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_68d522af(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_9c414443(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_5d120429(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_7c30e93a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_03a44524(I):\n    x1 = objects(I, T, F, T)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = mostcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = extract(x1, x5)\n    O = subgrid(x6, I)\n    return O"], [0.9182807290875006, "def solve_06184eff(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_48aab6c1(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = mostcolor(x2)\n    x4 = matcher(first, x3)\n    x5 = sfilter(x2, x4)\n    x6 = shape(x5)\n    x7 = normalize(x5)\n    x8 = mostcolor(I)\n    x9 = canvas(x8, x6)\n    O = paint(x9, x7)\n    return O"], [0.9182807290875006, "def solve_7c35cb86(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_960e5d52(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_766e4681(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_9983940e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_0d83159d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_8f932125(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, F, F, T)\n    x6 = rbind(colorcount, ONE)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.9182807290875006, "def solve_7c329b5f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_7e191ea1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_d7d88984(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_19971b9f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9183491285403049, "def solve_f34e1612(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.95, "def solve_d6569984(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.95, "def solve_71425b0b(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [1.0, "def solve_2f78e29a(I):\n    x1 = astuple(identity, identity)\n    x2 = astuple(rot90, rot270)\n    x3 = astuple(x1, x2)\n    x4 = astuple(rot180, rot180)\n    x5 = astuple(rot270, rot90)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = leastcolor(I)\n    x9 = repeat(x8, ONE)\n    x10 = rbind(rapply, I)\n    x11 = chain(x10, initset, first)\n    x12 = compose(first, x11)\n    x13 = chain(dedupe, first, x12)\n    x14 = matcher(x13, x9)\n    x15 = extract(x7, x14)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = x16(I)\n    x19 = ofcolor(x18, x8)\n    x20 = height(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = lbind(astuple, x20)\n    x23 = apply(x22, x21)\n    x24 = rbind(shoot, DOWN)\n    x25 = mapply(x24, x23)\n    x26 = fill(x18, FOUR, x25)\n    x27 = astuple(x20, x20)\n    x28 = canvas(ZERO, x27)\n    x29 = asindices(x28)\n    x30 = shift(x29, x27)\n    x31 = shape(I)\n    x32 = maximum(x31)\n    x33 = lbind(shift, x30)\n    x34 = interval(ZERO, x32, x20)\n    x35 = pair(x34, x34)\n    x36 = mapply(x33, x35)\n    x37 = fill(x26, TWO, x36)\n    O = x17(x37)\n    return O"], [1.0, "def solve_16d846d0(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(normalize, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [1.0, "def solve_2a2cae48(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = compose(size, dedupe)\n    x5 = apply(x4, x3)\n    x6 = totuple(x5)\n    x7 = sfilter(x6, first)\n    x8 = compose(last, last)\n    x9 = totuple(x7)\n    x10 = apply(x8, x9)\n    x11 = mostcommon(x10)\n    x12 = lbind(matcher, first)\n    x13 = compose(x12, x7)\n    x14 = fork(sfilter, identity, x13)\n    x15 = compose(rot90, x14)\n    x16 = lbind(matcher, first)\n    x17 = compose(x16, x7)\n    x18 = fork(sfilter, identity, x17)\n    x19 = compose(rot180, x18)\n    x20 = lbind(occurrences, I)\n    x21 = compose(x20, x14)\n    x22 = compose(xpositive, size)\n    x23 = fork(shift, x21, x22)\n    x24 = fork(mapply, x19, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = dedupe(x27)\n    x29 = rot90(x28)\n    x30 = dedupe(x29)\n    O = rot270(x30)\n    return O"], [1.0, "def solve_35d28584(I):\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [1.0, "def solve_bd073e07(I):\n    x1 = compose(positive, size)\n    x2 = rbind(sfilter, hline)\n    x3 = chain(x1, x2, frontiers)\n    x4 = chain(size, dedupe, first)\n    x5 = chain(size, dedupe, last)\n    x6 = fork(greater, x4, x5)\n    x7 = fork(both, x3, x6)\n    x8 = astuple(identity, rot90)\n    x9 = astuple(rot180, rot270)\n    x10 = combine(x8, x9)\n    x11 = astuple(identity, rot270)\n    x12 = astuple(rot180, rot90)\n    x13 = combine(x11, x12)\n    x14 = pair(x10, x13)\n    x15 = rbind(rapply, I)\n    x16 = compose(initset, first)\n    x17 = chain(first, x15, x16)\n    x18 = compose(x7, x17)\n    x19 = extract(x14, x18)\n    x20 = first(x19)\n    x21 = last(x19)\n    x22 = x20(I)\n    x23 = first(x22)\n    x24 = repeat(x23, ONE)\n    x25 = dmirror(x24)\n    x26 = width(x22)\n    x27 = hupscale(x25, x26)\n    x28 = asobject(x27)\n    x29 = height(x22)\n    x30 = height(x28)\n    x31 = interval(ZERO, x29, x30)\n    x32 = lbind(shift, x28)\n    x33 = apply(toivec, x31)\n    x34 = mapply(x32, x33)\n    x35 = shift(x34, TWO_BY_ZERO)\n    x36 = paint(x22, x35)\n    O = x21(x36)\n    return O"], [1.0, "def solve_485062d7(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_d30d557a(I):\n    x1 = rbind(shoot, UNITY)\n    x2 = compose(x1, center)\n    x3 = fork(recolor, color, x2)\n    x4 = mapply(x3, x1)\n    x5 = shape(I)\n    x6 = add(TWO, x5)\n    x7 = canvas(ZERO, x6)\n    x8 = asobject(I)\n    x9 = shift(x8, UNITY)\n    O = paint(x7, x9)\n    return O"], [1.0, "def solve_247b5bf2(I):\n    x1 = objects(I, F, F, T)\n    x2 = rbind(valmax, numcolors)\n    x3 = matcher(x2, ONE)\n    x4 = extract(x1, x3)\n    x5 = remove(x4, x1)\n    x6 = lbind(shift, x4)\n    x7 = mapply(x6, x5)\n    x8 = paint(I, x7)\n    O = cover(x8, x4)\n    return O"], [1.0, "def solve_5c2eac65(I):\n    x1 = TWO(I, THREE)\n    x2 = height(x1)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(x1)\n    return O"], [1.0, "def solve_263c85d8(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = lbind(sfilter, x1)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(insert, x104, x14)\n    x16 = compose(backdrop, x15)\n    x17 = shape(I)\n    x18 = decrement(x17)\n    x19 = multiply(x18, x18)\n    x20 = initset(x19)\n    x21 = insert(x14, x20)\n    x22 = product(x21, x21)\n    x23 = argmax(x22, x16)\n    x24 = asindices(x23)\n    x25 = contained(ZERO, x24)\n    x26 = insert(x21, x25)\n    x27 = rbind(argmin, x26)\n    x28 = lbind(shift, x23)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [1.0, "def solve_d0156e52(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_9bf5ae6f(I):\n    x1 = rot180(I)\n    x2 = hconcat(I, x1)\n    O = vconcat(x2, x2)\n    return O"], [1.0, "def solve_2fa55978(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = branch(x1, vsplit, hsplit)\n    return O"], [1.0, "def solve_0ccfb650(I):\n    x1 = lbind(apply, normalize)\n    x2 = chain(maximum, x1, shape)\n    x3 = subtract(TWO, x2)\n    x4 = interval(ZERO, x3, ONE)\n    x5 = rbind(multiply, x4)\n    x6 = apply(x5, x4)\n    x7 = rbind(shift, x6)\n    x8 = mapply(x7, x3)\n    x9 = double(x3)\n    x10 = astuple(x9, x8)\n    x11 = add(x10, x3)\n    x12 = index(I, x11)\n    x13 = astuple(x12, x4)\n    x14 = canvas(x12, x13)\n    x15 = asobject(I)\n    x16 = shift(x15, UNITY)\n    x17 = paint(x14, x16)\n    x18 = objects(x17, T, F, T)\n    x19 = apply(color, x18)\n    x20 = rbind(shift, ORIGIN)\n    x21 = mapply(x20, x19)\n    x22 = fill(x17, x12, x21)\n    x23 = paint(x22, x15)\n    x24 = apply(ulcorner, x15)\n    x25 = mapply(x24, x24)\n    x26 = paint(x25, x15)\n    x27 = fill(x26, x12, x25)\n    O = paint(x27, x15)\n    return O"], [1.0, "def solve_41694d36(I):\n    O = hconcat(I, I)\n    return O"], [1.0, "def solve_b3ecc366(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_7c1e6d5c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = index(I, ORIGIN)\n    x8 = shoot(ORIGIN, DOWN)\n    O = fill(x6, x7, x8)\n    return O"], [1.0, "def solve_18f7a7a2(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, E730, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [1.0, "def solve_01f6f72c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_124a1120(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [1.0, "def solve_fec6ffd8(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, F, F, T)\n    x4 = merge(x3)\n    x5 = palette(x4)\n    x6 = intersection(x1, x5)\n    x7 = lbind(colorcount, x4)\n    x8 = argmin(x6, x7)\n    x9 = ofcolor(x4, x8)\n    x10 = difference(x1, x9)\n    x11 = rbind(toobject, x4)\n    x12 = lbind(rbind, occurrences)\n    x13 = chain(first, x11, x12)\n    x14 = rbind(colorcount, x8)\n    x15 = chain(x13, x14, x9)\n    x16 = fork(argmax, x15, x13)\n    x17 = fork(colorcount, x16, outbox)\n    x18 = ofcolor(x4, x8)\n    x19 = difference(x19, x18)\n    x20 = subgrid(x18, x1)\n    x21 = rbind(occurrences, x20)\n    x22 = compose(x21, normalize)\n    x23 = fork(argmin, x22, x21)\n    x24 = ofcolor(x4, x8)\n    x25 = difference(x24, x18)\n    x26 = intersection(x24, x25)\n    x27 = fill(x20, x8, x26)\n    x28 = urcorner(x27)\n    x29 = lbind(toindices, x28)\n    x30 = fork(shoot, identity, x29)\n    x31 = mapply(x30, x2222)\n    x32 = fill(x27, x8, x31)\n    O = replace(x32, x8, x4)\n    return O"], [1.0, "def solve_a03889dd(I):\n    x1 = ofcolor(I, TWO)\n    x2 = rbind(colorcount, TWO)\n    x3 = subgrid(x1, I)\n    x4 = argmax(x1, x2)\n    x5 = replace(x3, ONE, ZERO)\n    O = fill(x5, TWO, x4)\n    return O"], [1.0, "def solve_663ad284(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = positive(x2)\n    x4 = branch(x3, dmirror, identity)\n    x5 = x4(I)\n    x6 = objects(x5, T, F, F)\n    x7 = order(x6, leftmost)\n    x8 = apply(color, x7)\n    x9 = repeat(x8, ONE)\n    O = x4(x9)\n    return O"], [1.0, "def solve_36e1d64f(I):\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [1.0, "def solve_8722bcfd(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = x6(I)\n    x8 = dmirror(x7)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_c4005486(I):\n    x1 = asindices(I)\n    x2 = fgpartition(I)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = compose(double, halve)\n    x6 = fork(equality, identity, x5)\n    x7 = compose(x6, last)\n    x8 = sfilter(x4, x7)\n    x9 = fill(I, FOUR, x8)\n    x10 = increment(x6)\n    x11 = width(I)\n    x12 = halve(x11)\n    x13 = tojvec(x12)\n    x14 = height(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = rbind(greater, ONE)\n    x19 = compose(x18, last)\n    x20 = sfilter(x17, x19)\n    x21 = totuple(x20)\n    x22 = apply(toindices, x21)\n    x23 = fork(either, x21, x22)\n    x24 = sfilter(x22, x23)\n    x25 = paint(x9, x24)\n    O = size(x25)\n    return O"], [1.0, "def solve_8aaa40a3(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = fgpartition(x4)\n    x6 = merge(x5)\n    x7 = chain(double, decrement, width)\n    x8 = x7(x6)\n    x9 = argmin(x5, x8)\n    x10 = leastcolor(x9)\n    x11 = palette(x9)\n    x12 = remove(x10, x11)\n    x13 = other(x12, x18)\n    x14 = ofcolor(x4, x10)\n    x15 = ofcolor(x4, x13)\n    x16 = combine(x14, x15)\n    x17 = fill(x6, x13, x16)\n    x18 = difference(x17, x15)\n    O = fill(x17, FOUR, x18)\n    return O"], [1.0, "def solve_ab9e8f08(I):\n    x1 = mostcolor(I)\n    x2 = vmirror(I)\n    O = objects(I, T, F, T)\n    return O"], [1.0, "def solve_9c3a204b(I):\n    x1 = compress(I)\n    x2 = objects(x1, F, F, T)\n    x3 = rbind(colorcount, ZERO)\n    x4 = argmax(x2, x3)\n    x5 = rbind(colorcount, ZERO)\n    x6 = matcher(x5, x4)\n    x7 = extract(x1, x6)\n    x8 = remove(x7, x1)\n    x9 = extract(x8, x4)\n    x10 = shape(x9)\n    x11 = multiply(x10, x10)\n    x12 = canvas(ZERO, x11)\n    x13 = ofcolor(x1, x4)\n    x14 = shift(x13, x12)\n    O = fill(x12, ZERO, x14)\n    return O"], [1.0, "def solve_ef983aba(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_5dae6507(I):\n    x1 = objects(I, T, F, T)\n    x2 = neighbors(ORIGIN)\n    x3 = mapply(neighbors, x2)\n    x4 = toobject(x3, I)\n    x5 = mostcolor(x4)\n    x6 = ofcolor(I, x5)\n    x7 = backdrop(x6)\n    x8 = multiply(xfill, THREE)\n    x9 = canvas(x5, x8)\n    x10 = astuple(x4, x10)\n    x11 = ofcolor(I, x5)\n    x12 = first(x11)\n    x13 = shift(x12, UP)\n    x14 = ulcorner(x6)\n    x15 = urcorner(x6)\n    x16 = shoot(x14, NEG_UNITY)\n    x17 = shoot(x15, UP_RIGHT)\n    x18 = combine(x16, x17)\n    x19 = underfill(I, x5, x18)\n    O = canvas(x5, UNITY)\n    return O"], [1.0, "def solve_ed5e2388(I):\n    x1 = mostcolor(I)\n    x2 =mirror(I)\n    O = rot90(x2)\n    return O"], [1.0, "def solve_7ef81eac(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_5f116d44(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_e9aabceb(I):\n    x1 = objects(I, T, F, T)\n    x2 = order(x1, height)\n    x3 = fork(recolor, color, x2)\n    x4 = mapply(x3, x2)\n    O = paint(I, x4)\n    return O"], [1.0, "def solve_afc32684(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_38096dfa(I):\n    x1 = asindices(I)\n    x2 = objects(I, T, F, T)\n    x3 = fork(multiply, sign, identity)\n    x4 = lbind(apply, x3)\n    x5 = chain(even, maximum, x4)\n    x6 = lbind(sfilter, x1)\n    x7 = fork(add, dmirror, identity)\n    x8 = rbind(rapply, I)\n    x9 = compose(x8, initset)\n    x10 = chain(first, x7, x9)\n    x11 = x10(I)\n    x12 = ofcolor(x11, ZERO)\n    x13 = rbind(add, DOWN)\n    x14 = chain(x13, ulcorner, x9)\n    x15 = fork(subtract, x14, x12)\n    x16 = fork(shift, x12, x15)\n    x17 = mapply(x16, x12)\n    x18 = interval(ZERO, x17, ONE)\n    x19 = paint(I, x18)\n    O = x10(x19)\n    return O"], [1.0, "def solve_b2f9b3f2(I):\n    x1 = astuple(identity, identity)\n    x2 = astuple(rot90, rot270)\n    x3 = astuple(x1, x2)\n    x4 = astuple(rot180, rot180)\n    x5 = astuple(rot270, rot90)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = leastcolor(I)\n    x9 = repeat(x8, ONE)\n    x10 = rbind(rapply, I)\n    x11 = chain(x10, initset, first)\n    x12 = compose(first, x11)\n    x13 = chain(dedupe, first, x12)\n    x14 = matcher(x13, x9)\n    x15 = extract(x7, x14)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = x16(I)\n    x19 = ofcolor(x18, x8)\n    x20 = height(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = lbind(astuple, x20)\n    x23 = apply(x22, x21)\n    x24 = rbind(shoot, DOWN)\n    x25 = mapply(x24, x23)\n    x26 = fill(x18, FOUR, x25)\n    x27 = astuple(x20, x20)\n    x28 = canvas(ZERO, x27)\n    x29 = asindices(x28)\n    x30 = shift(x29, x27)\n    x31 = shape(I)\n    x32 = maximum(x31)\n    x33 = lbind(shift, x30)\n    x34 = interval(ZERO, x32, x20)\n    x35 = pair(x34, x34)\n    x36 = mapply(x33, x35)\n    x37 = fill(x26, TWO, x36)\n    O = x17(x37)\n    return O"], [1.0, "def solve_129ebbfc(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = lbind(mapply, neighbors)\n    x13 = compose(x12, toindices)\n    x14 = fork(sfilter, x13, x10)\n    x15 = mapply(x14, x11)\n    x16 = lbind(argmin, x5)\n    x17 = compose(first, last)\n    x18 = fork(sfilter, x17, x10)\n    x19 = mapply(x18, x13)\n    x20 = fill(I, x1, x15)\n    O = fill(x20, FIVE, x19)\n    return O"], [1.0, "def solve_9338d607(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = other(x4, x5)\n    x7 = palette(I)\n    x8 = lrcorner(x5)\n    x9 = add(x8, UNITY)\n    x10 = llcorner(x5)\n    x11 = add(x10, DOWN_LEFT)\n    x12 = urcorner(x5)\n    x13 = add(x12, UP_RIGHT)\n    x14 = ulcorner(x5)\n    x15 = add(x14, NEG_UNITY)\n    x16 = shoot(x9, UNITY)\n    x17 = shoot(x11, DOWN_LEFT)\n    x18 = shoot(x13, UP_RIGHT)\n    x19 = shoot(x15, TEN_UNITY)\n    x20 = combine(x16, x17)\n    x21 = combine(x18, x19)\n    x22 = combine(x20, x21)\n    x23 = color(x6)\n    O = fill(I, x23, x22)\n    return O"], [1.0, "def solve_6ae90a4a(I):\n    x1 = initset(ORIGIN)\n    x2 = rbind(shoot, RIGHT)\n    x3 = compose(x2, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    O = paint(I, x5)\n    return O"], [1.0, "def solve_aa37010f(I):\n    x1 = objects(I, T, F, F)\n    x2 = mapply(toindices, x1)\n    x3 = box(x2)\n    x4 = difference(x3, x2)\n    x5 = delta(x2)\n    x6 = position(x5, x4)\n    x7 = interval(difference, x6, ONE)\n    x8 = lbind(toivec, x5)\n    x9 = lbind(shift, x4)\n    x10 = apply(x8, x7)\n    x11 = last(x10)\n    x12 = lbind(tojvec, x5)\n    x13 = lbind(shift, x4)\n    x14 = apply(x12, x13)\n    x15 = lbind(astuple, x6)\n    x16 = chain(x11, x15, uppermost)\n    x17 = fork(recolor, color, x16)\n    x18 = mapply(x17, x29)\n    x19 = paint(I, x18)\n    x20 = branch(x9, identity, identity)\n    x21 = shape(I)\n    x22 = canvas(ZERO, x21)\n    x23 = hconcat(x22, x10)\n    x24 = objects(x23, F, F, T)\n    x25 = compose(toivec, uppermost)\n    x26 = lbind(shift, x24)\n    x27 = order(x25, x26)\n    x28 = paint(x19, x27)\n    x29 = ofcolor(x28, ZERO)\n    x30 = rbind(mapply, x29)\n    x31 = compose(x30, dneighbors)\n    x32 = fork(recolor, x31, ulcorner)\n    x33 = size(x259)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = pair(x34, x34)\n    x36 = mpapply(recolor, x35, x31)\n    O = paint(x12, x36)\n    return O"], [1.0, "def solve_7d1641e2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_035afcd0(I):\n    x1 = replace(I, THREE, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    x14 = apply(x4, x13)\n    x15 = ofcolor(I, THREE)\n    O = subgrid(x15, x14)\n    return O"], [1.0, "def solve_dfe5a8a3(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_f69d7e7e(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_d876aea6(I):\n    x1 = objects(I, T, F, F)\n    x2 = sfilter(x1, hline)\n    x3 = sfilter(x1, vline)\n    x4 = compose(hfrontier, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = compose(vfrontier, center)\n    x80 = fork(recolor, color, x7)\n    x9 = mapply(x8, x3)\n    x10 = combine(x6, x9)\n    x11 = paint(I, x10)\n    x12 = toindices(x6)\n    x13 = toindices(x9)\n    x14 = intersection(x12, x13)\n    O = fill(x11, FOUR, x14)\n    return O"], [1.0, "def solve_309e98ea(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = sfilter(x10, x12)\n    x14 = rbind(0000000, THREE)\n    x15 = lbind(ofcolor, THREE)\n    x16 = sfilter(x13, x15)\n    x17 = compose(size, dmirror)\n    x18 = argmax(x16, x17)\n    x19 = mostcolor(x18)\n    x20 = matcher(first, x19)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x18, x21)\n    x23 = difference(x18, x22)\n    x24 = sfilter(x23, x4)\n    x25 = compose(hfrontier, center)\n    x26 = fork(recolor, color, x25)\n    x27 = mapply(x26, x24)\n    x28 = paint(I, x27)\n    x29 = replace(x28, x19, EIGHT)\n    O = paint(x29, x27)\n    return O"], [1.0, "def solve_b9942cd1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = shift(x3, UP)\n    x5 = decrement(x1)\n    x6 = lbind(astuple, x5)\n    x7 = apply(x6, x4)\n    x8 = order(x7, identity)\n    x9 = lbind(shift, x8)\n    x10 = mapply(x9, x4)\n    O = fill(I, x1, x10)\n    return O"], [1.0, "def solve_8b03e3ef(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = positive(x2)\n    x4 = branch(x3, hsplit, vsplit)\n    x5 = x4(I, TWO)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 = palette(x6)\n    x9 = palette(x7)\n    x10 = intersection(x8, x9)\n    x11 = first(x10)\n    x12 = shape(x6)\n    x13 = canvas(x11, x12)\n    x14 = ofcolor(x6, x31)\n    x15 = ofcolor(x7, x31)\n    x16 = intersection(x14, x15)\n    O = fill(x13, TWO, x16)\n    return O"], [1.0, "def solve_645f9a5e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_185a435d(I):\n    x1 = rot180(I)\n    x2 = shoot(x1,ORIGIN)\n    x3 = apply(urcorner, x2)\n    x4 = astuple(SIX, TEN)\n    x5 = canvas(ZERO, x4)\n    x6 = asindices(x5)\n    x7 = box(x6)\n    x8 = center(x6)\n    x9 = lbind(contained, ZERO)\n    x10 = increment(x8)\n    x11 = interval(x9, x10, x8)\n    x12 = lbind(outbox, x6)\n    x13 = apply(x12, x11)\n    x14 = FOUR(x13)\n    x15 =alks500(x14)\n    x16 = apply(first, x15)\n    x17 = FOUR(x16)\n    x18 = sfilter(x17, ONE)\n    x19 = compose(backdrop, inbox)\n    x20 = mapply(x19, x18)\n    x21 = fill(x5, THREE, x20)\n    O = replace(x21, ZERO, ONE)\n    return O"], [1.0, "def solve_32f8fbbe(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [1.0, "def solve_39d84dae(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = asindices(I)\n    x5 = apply(first, x4)\n    x6 = difference(x5, x3)\n    x7 = ofcolor(I, x1)\n    x8 = rbind(adjacent, x7)\n    x9 = mfilter(x6, x8)\n    x10 = objects(I, T, F, T)\n    x11 = sizefilter(x10, ONE)\n    x12 = difference(x5, x11)\n    x13 = rbind(greater, ONE)\n    x14 = compose(x13, size)\n    x15 = sfilter(x12, x14)\n    x16 = difference(x5, x15)\n    x17 = fill(I, x1, x15)\n    O = fill(x17, x1, x16)\n    return O"], [1.0, "def solve_b66c331e(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = rbind(tosfilter, x2)\n    x4 = chain(size, x3, asindices)\n    x5 = matcher(x4, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x1, x6)\n    x8 = argmax(x7, size)\n    x9 = width(x8)\n    x10 = increment(x9)\n    x11 = matcher(last, x10)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x8, x12)\n    x14 = fill(I, ZERO, x13)\n    x15 = double(x509)\n    x16 = asindices(x8)\n    x17 = contained(ZERO, x16)\n    x18 = asindices(x8)\n    x19 = center(x18)\n    x20 = invert(x19)\n    x21 = shift(x15, x20)\n    x22 = compose(initset, last)\n    x23 = center(x18)\n    x24 = insert(x23, x1)\n    x25 = product(x27, x24)\n    x26 = sfilter(x25, x22)\n    x27 = compose(toindices, first)\n    x28 = mapply(x27, x26)\n    x29 = paint(x14, x28)\n    x30 = double(x9)\n    x31 = matcher(first, ZERO)\n    x32 = compose(flip, x31)\n    x33 = fork(both, x30, x32)\n    x34 = sfilter(x26, x33)\n    x35 = paint(x29, x34)\n    O = double(x50)\n    return O"], [1.0, "def solve_9a990061(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = color(x2)\n    return O"], [1.0, "def solve_25abd07d(I):\n    x1 = replace(I, SIX, TWO)\n    x2 = objects(x1, T, F, T)\n    x3 = apply(normalize, x2)\n    x4 = astuple(NINE, NINE)\n    x5 = canvas(ZERO, x4)\n    x6 = asindices(x5)\n    x7 = box(x6)\n    x8 = center(x6)\n    x9 = lbind(contained, ZERO)\n    x10 = rbind(subtract, x8)\n    x11 = compose(x9, x10)\n    x12 = chain(outbox, outbox, initset)\n    x13 = corners(x6)\n    x14 = mapply(x12, x13)\n    x15 = difference(x7, x14)\n    x16 = inbox(x7)\n    x17 = sfilter(x16, x11)\n    x18 = combine(x15, x17)\n    x19 = fill(x5, THREE, x18)\n    x20 = objects(x19, T, F, T)\n    x21 = apply(toindices, x20)\n    x22 = lbind(matcher, normalize)\n    x23 = lbind(extract, x21)\n    x24 = chain(ulcorner, x23, x22)\n    x25 = compose(x24, toindices)\n    x26 = fork(shift, identity, x25)\n    x27 = mapply(x26, x3)\n    O = paint(x5, x27)\n    return O"], [1.0, "def solve_5820abe7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = fork(combine, hfrontier, vfrontier)\n    x5 = width(I)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x3, x6)\n    x8 = tojvec(x7)\n    x9 = height(I)\n    x10 = decrement(x9)\n    x11 = lbind(astuple, x10)\n    x12 = apply(x11, x8)\n    x13 = lbind(shift, x12)\n    x14 = mapply(x13, x12)\n    O = fill(x7, ZERO, x14)\n    return O"], [1.0, "def solve_0d7f1e70(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = subgrid(x8, I)\n    x10 = increment(x4)\n    x11 = frontiers(x10)\n    x12 = divide(x11, FOUR)\n    x13 = increment(x12)\n    x14 = divide(x13, FOUR)\n    x15 = width(x9)\n    x16 = interval(ZERO, x15, ONE)\n    x17 = height(x9)\n    x18 = interval(ZERO, x17, ONE)\n    x19 = lbind(multiply, x14)\n    x20 = apply(x19, x17)\n    x21 = rbind(multiply, x14)\n    x22 = apply(x21, x18)\n    x23 = pair(x20, x22)\n    x24 = sfilter(x23, first)\n    x25 = mapply( last, x24)\n    x26 = fill(x9, x3, x25)\n    x27 =O = fill(x26, x3, x2)\n    x28 = O = x17(x27)\n    x29 = asobject(x28)\n    x30 = shape(I)\n    x31 = canvas(x3, x30)\n    x32 = objects(x29, F, F, T)\n    x33 = paint(x31, x32)\n    O = subgrid(x33, x30)\n    return O"], [1.0, "def solve_387e6ada(I):\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = order(x1, x2)\n    x4 = lbind(apply, last)\n    x5 = chain(x4, first, last)\n    x6 = lbind(colorfilter, x3)\n    x7 = compose(x6, first)\n    x8 = chain(size, x7, rightmost)\n    x9 = astuple(ONE, x8)\n    x10 = palette(I)\n    x11 = x9(x10)\n    x12 = x8(x11)\n    x13 = shape(x12)\n    x14 = canvas(ZERO, x13)\n    x15 = lbind(shift, x12)\n    x16 = lbind(multiply, x14)\n    x17 = compose(x15, x16)\n    x18 = fork(equality, identity, x17)\n    x19 = compose(x18, first)\n    x20 = labeled(x11)\n    x21 = positive(x20)\n    x22 = rbind(multiply, x14)\n    x23 = apply(x22, x3)\n    x24 = lbind(shift, x11)\n    x25 = mapply(x24, x23)\n    O = fill(x14, THREE, x25)\n    return O"], [1.0, "def solve_401fcf95(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = divide(x9, x6)\n    x11 = height(I)\n    x12 = increment(x11)\n    x13 = interval(ZERO, x12, ONE)\n    x14 = apply(tojvec, x13)\n    x15 = lbind(shift, x2)\n    x16 = mapply(x15, x14)\n    x17 = fill(I, x3, x16)\n    x18 = add(SIX, SIX)\n    x19 = canvas(x3, x18)\n    x20 = asobject(x19)\n    x21 = occurrences(x17, x20)\n    x22 = lbind(shift, x2)\n    x23 = mapply(x22, x21)\n    O = fill(x17, x3, x23)\n    return O"], [1.0, "def solve_8389c445(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_dadcdf76(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = ofcolor(I, ZERO)\n    x4 = toindices(x3)\n    x5 = ofcolor(I, x2)\n    x6 = toindices(x5)\n    x7 = ofcolor(I, ZERO)\n    x8 = toindices(x7)\n    x9 = ofcolor(I, ONE)\n    x10 = fill(I, NINE, x4)\n    x11 = fill(x10, RIGHT, x6)\n    x12 = fill(x11, leftmost, x6)\n    x13 = fill(x12, ZERO, x9)\n    x14 = fill(x13, ONE, x9)\n    x15 = fill(x14, TWO, x10)\n    x16 = ofcolor(I, THREE)\n    x17 = fill(x15, x16, x3)\n    x18 = normalize(x3)\n    x19 = shape(x38)\n    x20 = halve(x19)\n    x21 = invert(x20)\n    x22 = shift(x38, x21)\n    x23 = apply(outbox, x22)\n    x24 = rbind(shoot, x23)\n    x25 = mapply(x24, x2)\n    O = fill(x17, ONE, x25)\n    return O"], [1.0, "def solve_0e1ed7e3(I):\n    x1 = index(I, ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = lbind(shift, x2)\n    x4 = height(I)\n    x5 = lbind(multiply, x4)\n    x6 = apply(x5, x3)\n    x7 = mapply(x6, x2)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_30fd0017(I):\n    x1 = rbind(toobject, I)\n    x2 = chain(x1, numcolors, shape)\n    x3 = partition(I)\n    x4 = matcher(x2, ONE)\n    x5 = fork(both, x4, x3)\n    x6 = sfilter(x3, x5)\n    x7 = argmax(x6, size)\n    x8 = color(x7)\n    x9 = objects(I, T, F, F)\n    x10 = colorfilter(x9, x8)\n    x11 = difference(x9, x10)\n    x12 = rbind(toobject, I)\n    x13 = chain(x12, delta, rbind)\n    x14 = rbind(apply, x11)\n    x15 = lbind(chain, center)\n    x16 = lbind(lbind, shift)\n    x17 = rbind(apply, x15)\n    x18 = lbind(lbind, shoot)\n    x19 = chain(x17, x18, last)\n    x20 = fork(recolor, first, x19)\n    x21 = mapply(x20, x11)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_a71c49b7(I):\n    x1 = merge(I)\n    x2 = subgrid(x1, I)\n    x3 = replace(I, ZERO, TWO)\n    x4 = replace(x3, ONE, ZERO)\n    x5 = compress(x4)\n    x6 = width(x2)\n    x7 = halve(x6)\n    x8 = upscale(x5, x7)\n    x9 = ofcolor(x2, ZERO)\n    O = fill(x9, ZERO, x9)\n    return O"], [1.0, "def solve_e1e4e994(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = color(x6)\n    x8 = shape(I)\n    x9 = canvas(x7, x8)\n    x10 = normalize(x6)\n    x11 = objects(x9, F, F, T)\n    x12 = color(x11)\n    x13 = remove(ZERO, x11)\n    x14 = other(x13, x12)\n    x15 = rbind(colorcount, x7)\n    x16 = matcher(x15, ZERO)\n    x17 = sfilter(x12, x16)\n    x18 = difference(x5, x17)\n    x19 = fill(I, x6, x18)\n    x20 = normalize(x6)\n    O = paint(x19, x20)\n    return O"], [1.0, "def solve_03a9ee50(I):\n    x1 = initset(ORIGIN)\n    x2 = insert(x14, x1)\n    x3 = order(x2, identity)\n    x4 = last(x3)\n    x5 = remove(x4, x3)\n    x6 = last(x5)\n    x7 = ofcolor(I, x6)\n    x8 = inbox(x7)\n    O = fill(I, x6, x8)\n    return O"], [1.0, "def solve_9e1f94a3(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_1176101d(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_f32dd5cf(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = argmin(x2, size)\n    x4 = argmax(x2, size)\n    x5 = x4(I)\n    x6 = x4(I)\n    x7 = power(outbox, ONE)\n    x8 = chain(first, x7, initset)\n    x9 = mapply(x8, x3)\n    x10 = fill(I, x1, x9)\n    O = fill(x10, TWO, x4)\n    return O"], [1.0, "def solve_d1a08eac(I):\n    x1 = ofcolor(I, FOUR)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = equality(x5, ZERO)\n    x7 = branch(x6, identity, vmirror)\n    x8 = x7(x4)\n    x9 = ofcolor(x8, EIGHT)\n    x10 = uppermost(x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, identity, hmirror)\n    x13 = x12(x8)\n    x14 = ofcolor(x13, EIGHT)\n    x15 = gravitate(x14, x9)\n    x16 = shift(x14, x15)\n    O = move(x13, x16, x2)\n    return O"], [1.0, "def solve_72611a63(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_20489b83(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_89e80634(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(e349, x5)\n    x7 = lbind(chain, positive)\n    x8 = lbind(x7, size)\n    x9 = lbind(x8, x4)\n    x10 = rbind(sfilter, x9)\n    x11 = compose(e349, x10)\n    x12 = chain(x11, x9, size)\n    x13 = compose(normalize, x6)\n    x14 = fork(add, x13, x12)\n    x15 = chain(invert, x14, x12)\n    x16 = fork(shift, x15, x11)\n    x17 = fork(combine, x15, x16)\n    x18 = compose(x17, x18)\n    x19 = uppermost(x3)\n    x20 = rbind(add, x19)\n    x21 = chain(toivec, x20, x18)\n    x22 = rbind(apply, x2)\n    x23 = chain(x22, x21, x18)\n    x24 = fork(mapply, x18, x23)\n    x25 = power(x24, FOUR)\n    x26 = astuple(x21, x25)\n    x27 = rbind(shoot, UP_RIGHT)\n    x28 = compose(x27, x26)\n    x29 = fork(recolor, color, x28)\n    x30 = mapply(x29, x6)\n    x31 = paint(I, x30)\n    O = x1(x31)\n    return O"], [1.0, "def solve_b42bc093(I):\n    x1 =vellcorner(I)\n    x2 = shift(x1, NEG_UNITY)\n    x3 = recolor(THREE, x2)\n    x4 = shift(x3, UNITY)\n    x5 = recolor(SEVEN, x4)\n    x6 = shift(x5, DOWN_LEFT)\n    x7 = recolor(EIGHT, x6)\n    x8 = shift(x7, UP_RIGHT)\n    x9 = combine(x3, x8)\n    x10 = shift(x9, RIGHT)\n    x11 = complaints(I, x10)\n    x12 = product(x11, x11)\n    x13 = fork(combine, vfrontier, hfrontier)\n    x14 = mapply(x13, x12)\n    O = fill(I, ZERO, x14)\n    return O"], [1.0, "def solve_b4e2978a(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = insert(dmirror, x1)\n    x3 = insert(vmirror, x2)\n    x4 = insert(hmirror, x3)\n    x5 = insert(vmirror, x4)\n    x6 = shape(I)\n    x7 = canvas(FIVE, x6)\n    x8 = asobject(I)\n    x9 = shift(x8, UNITY)\n    x10 = paint(x7, x9)\n    x11 = objects(x10, toindices, identity)\n    x12 = apply(urcorner, x11)\n    x13 = shift(x12, RIGHT)\n    x14 = paint(x10, x13)\n    x15 = toindices(x14)\n    x16 = shape(x15)\n    x17 = increment(x16)\n    x18 = shift(x15, x17)\n    x19 = lbind(shift, x18)\n    x20 = objects(x14, T, apply, x19)\n    x21 = apply(x21, x20)\n    x22 = mapply(x19, x21)\n    x23 = paint(x10, x22)\n    x24 = objects(x23, T, F, T)\n    x25 = apply(x21, x24)\n    x26 = mapply(x25, x25)\n    O = paint(x23, x26)\n    return O"], [1.0, "def solve_dcebb587(I):\n    x1 = ofcolor(I, TWO)\n    x2 = equality(x1, THREE)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = difference(x3, x6)\n    x8 = mostcolor(I)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = rbind(colorcount, TWO)\n    x14 = argmax(x12, x13)\n    O = subgrid(x14, I)\n    return O"], [1.0, "def solve_3ae6206e(I):\n    x1 = rot180(I)\n    x2 = rbind(shoot, UP)\n    x3 = compose(x2, last)\n    x4 = fork(recolor, first, x3)\n    x5 = mapply(x4, x1)\n    O = paint(x1, x5)\n    return O"], [1.0, "def solve_3501ddc1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = underfill(I, EIGHT, x2)\n    x4 = apply(dneighbors, x3)\n    x5 = mapply(dneighbors, x4)\n    x6 = difference(x5, x3)\n    O = fill(x3, ONE, x6)\n    return O"], [1.0, "def solve_5cc60881(I):\n    x1 = rot270(I)\n    x2 =bind(order, identity)\n    x3 = switch(x1, ONE, TWO)\n    x4 = apply(x2, x3)\n    x5 = switch(x4, ONE, TWO)\n    O = cmirror(x5)\n    return O"], [1.0, "def solve_6c2d122f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [1.0, "def solve_c8daab4a(I):\n    x1 = mostcolor(I)\n    x2 = valmax(I, NINE)\n    x3 = matcher(Nnormal, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(size, x4)\n    x6 = apply(x5, I)\n    x7 = asindices(I)\n    x8 = ofcolor(I, x1)\n    x9 = difference(x7, x8)\n    x10 = fill(I, NEG_ONE, x9)\n    x11 = lbind(shift, x8)\n    x12 = mapply(x11, x10)\n    O = fill(x10, double, x12)\n    return O"], [1.0, "def solve_cff50689(I):\n    x1 = astuple(SIX, FIVE)\n    x2 = canvas(numcolors, x1)\n    x3 = equality(lowermost, TWO)\n    x4 = portrait(I)\n    x5 = branch(x3, x2, x4)\n    x6 = branch(x5, TWO, x5)\n    x7 = canvas(apply, x6)\n    x8 = double(SIX)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = branch(x7, x2, x9)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = repeat(x10, x12)\n    x14 = merge(x13)\n    x15 = objects(I, T, F, F)\n    x16 = colorfilter(x15, TWO)\n    x17 = compose(center, ulcorner)\n    x18 = subgrid(x17, I)\n    x19 = add(DOWN, x10)\n    x20 = add(x19, astuple)\n    x21 = add(x20, x4)\n    x22 = canvas(ZERO, x21)\n    x23 = paint(x22, x19)\n    x24 = normalize(x2)\n    x25 = shift(x24, x4)\n    x26 = lbind(shift, x25)\n    x27 = objects(x23, T, F, F)\n    x28 = compose(x26, x4)\n    x29 = apply(x28, x27)\n    x30 = mapply(x23, x29)\n    O = paint(x23, x30)\n    return O"], [1.0, "def solve_9565e023(I):\n    x1 = shape(I)\n    x2 = add(DOWN, x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = toivec(x11)\n    x13 = width(I)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = connect(x12, x15)\n    x17 = height(I)\n    x18 = decrement(x17)\n    x19 = toivec(x18)\n    x20 = connect(x16, x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = tojvec(x22)\n    x24 = connect(x19, x23)\n    x25 = astuple(x14, x24)\n    x26 = astuple(x17, x24)\n    x27 = astuple(x66666666, x17)\n    x28 = astuple(x27, x28)\n    x29 = astuple(x22, x27)\n    x30 = astuple(x003, x30)\n    x31 = mostcolor(I)\n    x32 = canvas(x31, x29)\n    x33 = matcher(first, x31)\n    x34 = compose(flip, x33)\n    x35 = sfilter(x12, x34)\n    x36 = fork(combine, hfrontier, vfrontier)\n    x37 = mapply(x36, x35)\n    O = fill(x32, x1, x37)\n    return O"], [1.0, "def solve_13d76093(I):\n    x1 = fgpartition(I)\n    x2 = matcher(color, ZERO)\n    x3 = extract(x1, x2)\n    x4 = ulcorner(x3)\n    x5 = subtract(x4, DOWN)\n    x6 = shape(x3)\n    x7 = add(x6, TWOBY_ZERO)\n    O = crop(I, x5, x7)\n    return O"], [1.0, "def solve_7cfcae63(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_ae64b7eb(I):\n    x1 = ofcolor(I, TWO)\n    x2 = shape(I)\n    x3 = multiply(x2, x2)\n    x4 = canvas(ZERO, x3)\n    x5 = rbind(multiply, x2)\n    x6 = apply(x5, x1)\n    x7 = asobject(I)\n    x8 = lbind(shift, x7)\n    x9 = mapply(x8, x6)\n    O = paint(x4, x9)\n    return O"], [1.0, "def solve_62d1b9ec(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(THREE, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = contained(I, x10)\n    x12 = branch(x11, ulcorner, urcorner)\n    x13 = shape(I)\n    x14 = decrement(x13)\n    x15 = index(I, x14)\n    x16 = ulcorner(x14)\n    x17 = crop(I, x14, x16)\n    x18 = branch(x11, llcorner, uppermost)\n    x19 = shape(I)\n    x20 = increment(x19)\n    x21 = index(I, x20)\n    x22 = llcorner(x14)\n    x23 = remove(x21, x10)\n    x24 = recolor(x21, x22)\n    x25 = compose( lrcorner, last)\n    x26 = remove(x23, x10)\n    x27 = combine(x24, x26)\n    x28 = fork(connect, first, last)\n    x29 = product(x27, x43)\n    x30 = size(x29)\n    x31 = power(x28, x30)\n    x32 = astuple(x31, x31)\n    x33 = x12(x12)\n    x34 = x24(x12)\n    x35 = canvas(x21, x33)\n    x36 = fill(x35, x3, x32)\n    x37 = paint(x36, x12)\n    O = replace(x37, x10, x5)\n    return O"], [1.0, "def solve_17a35cb3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = merge(x5)\n    x7 = fill(I, x3, x6)\n    x8 = compose(hmirror, vmirror)\n    x9 = x8(x7)\n    x10 = hmirror(x7)\n    x11 = vmirror(x10)\n    x12 = x8(x11)\n    x13 = combine(x9, x12)\n    x14 = pair(x1, x13)\n    x15 = sfilter(x14, hline)\n    x16 = mapply(neighbors, x15)\n    x17 = mapply(neighbors, x12)\n    x18 = height(x17)\n    x19 = height(x12)\n    x20 = divide(x18, x19)\n    x21 = width(x21)\n    x22 = width(x12)\n    x23 = divide(x21, x22)\n    x24 = vmirror(x23)\n    x25 = multiply(x24, x19)\n    x26 = add(x25, x20)\n    x27 = subtract(x25, x22)\n    x28 = divide(x26, x22)\n    x29 = increment(x28)\n    x30 = multiply(x27, x29)\n    x31 = rbind(multiply, x30)\n    x32 = apply(x31, x15)\n    x33 = merge(x12)\n    x34 = lbind(shift, x33)\n    x35 = mapply(x34, x32)\n    O = paint(x7, x35)\n    return O"], [1.0, "def solve_fedb65bb(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_9c63af10(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_9d032616(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_fba391a1(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = merge(x3)\n    x9 = cmirror(x8)\n    x10 = astuple(x11, x10)\n    x11 = hmirror(x10)\n    x12 = vmirror(x11)\n    x13 = hconcat(x11, x12)\n    x14 = hconcat(x13, x1)\n    O = vconcat(x13, x14)\n    return O"], [1.0, "def solve_b008b917(I):\n    x1 = partition(I)\n    x2 = fork(equality, toindices, box)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = color(x4)\n    x6 = palette(I)\n    x7 = remove(x5, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = toindices(x4)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = sfilter(x11, vline)\n    x16 = size(x15)\n    x17 = increment(x16)\n    x18 = height(I)\n    x19 = divide(x17, x12)\n    x20 = increment(x19)\n    x21 = width(I)\n    x22 = divide(x21, x12)\n    x23 = increment(x22)\n    x24 = astuple(x16, x23)\n    x25 = canvas(x9, x24)\n    x26 = asindices(I)\n    x27 = ofcolor(I, x5)\n    x28 = outbox(x25)\n    x29 = intersection(x27, x28)\n    x30 = apply(initset, x29)\n    x31 = rbind(rapply, x20)\n    x32 = compose(first, x31)\n    x33 = apply(x32, x30)\n    x34 = ofcolor(I, x5)\n    x35 = difference(x34, x29)\n    x36 = ofcolor(I, x5)\n    x37 = fill(x25, THREE, x36)\n    x38 = shift(x31, x37)\n    x39 = ofcolor(I, x5)\n    x40 = difference(x39, x38)\n    O = fill(x37, THREE, x40)\n    return O"], [1.0, "def solve_16f62bb0(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_58ace031(I):\n    x1 = frontiers(I)\n    x2 = mostcolor(I)\n    x3 = shape(I)\n    x4 = canvas(x2, x3)\n    x5 = hconcat(I, x4)\n    x6 = objects(x5, F, F, T)\n    x7 = argmax(x6, size)\n    x8 = toindices(x7)\n    x9 = ZERO(x2)\n    x10 = equality(x9, x8)\n    x11 = shift(x7, x10)\n    x12 = toindices(x7)\n    x13 = compose(x11, x12)\n    x14 = rbind(intersection, x13)\n    x15 = chain(size, x14, toindices)\n    x16 = matcher(x15, ZERO)\n    x17 = objects(x10, T, F, T)\n    x18 = sfilter(x17, x16)\n    x19 = argmax(x18, size)\n    x20 = matcher(first, x2)\n    x21 = sfilter(x19, x20)\n    x22 = difference(x19, x21)\n    x23 = color(x12)\n    x24 = fill(x22, x23, x27)\n    O = fill(x24, x23, x22)\n    return O"], [1.0, "def solve_b2e353cf(I):\n    x1 = THREEe21\n    x2 = dmirror(I)\n    x3 = equality(x1, x2)\n    x4 = flip(x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = combine(x15, x16)\n    x18 = intersection(x15, x16)\n    x19 = difference(x17, x18)\n    O = fill(x14, THREE, x19)\n    return O"], [1.0, "def solve_7df7b8a3(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_e15f254f(I):\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = mapply(x11, x5)\n    x13 = combine(x7, x12)\n    x14 = llcorner(x7)\n    x15 = mapply(x14, x9)\n    x16 = combine(x13, x15)\n    x17 = branch(x1, identity, height)\n    x18 = x17(x10)\n    x19 = astuple(ONE, x18)\n    x20 = canvas(ZERO, x19)\n    x21 = asobject(x20)\n    x22 = occurrences(x2, x21)\n    x23 = intersection(x2, x22)\n    O = fill(x2, ONE, x23)\n    return O"], [1.0, "def solve_f2f1d57a(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_337ab09e(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, rbind, tophalf)\n    x6 = x5(I)\n    x7 = fork(add, height, width)\n    x8 = x7(I)\n    x9 = width(x6)\n    x10 = increment(x9)\n    x11 = interval(ZERO, x10, ONE)\n    x12 = apply(x7, x11)\n    x13 = lbind(intersection, x12)\n    x14 = lbind(shift, x12)\n    x15 = mapply(x14, x13)\n    O = fill(x6, FOUR, x15)\n    return O"], [1.0, "def solve_56c0e686(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_045c5e79(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_63beaf5c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_41988ee7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = interval(ONE, NINE, ONE)\n    x8 = apply(tojvec, x7)\n    x9 = lbind(shift, x8)\n    x10 = mapply(x9, x6)\n    O = fill(x10, FIVE, x3)\n    return O"], [1.0, "def solve_7ac31386(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = argmax(x1, size)\n    x3 = remove(x2, x1)\n    x4 = merge(x3)\n    x5 = subgrid(x4, I)\n    x6 = chain(ulcorner, asindices, objects)\n    x7 = x6(x5)\n    x8 = argmin(x7, x7)\n    x9 = mostcolor(x8)\n    x10 = shape(x2)\n    x11 = canvas(x9, x10)\n    x12 = lbind(shift, x8)\n    x13 = mapply(x12, x11)\n    O = paint(x11, x13)\n    return O"], [1.0, "def solve_dcce0a14(I):\n    x1 = ofcolor(I, TWO)\n    x2 = papply(neighbors, x1)\n    x3 = lbind(shift, x2)\n    x4 = mapply(x3, x5)\n    O = fill(I, ONE, x4)\n    return O"], [1.0, "def solve_d2a950fe(I):\n    x1 = ofcolor(I, THREE)\n    x2 = ofcolor(I, TWO)\n    x3 = mapply(first, x1)\n    x4 = mapply(last, x1)\n    x5 = fill(I, SIX, x3)\n    x6 = fill(x5, SEVEN, x4)\n    O = fill(x6, EIGHT, x5)\n    return O"], [1.0, "def solve_9676bc05(I):\n    x1 = trim(I)\n    x2 = objects(x1, F, T, T)\n    x3 = argmax(x2, numcolors)\n    x4 = toindices(x3)\n    x5 = normalize(x3)\n    x6 = toindices(x5)\n    x7 = combine(x4, x6)\n    x8 = intersection(x4, x6)\n    x9 = difference(x7, x8)\n    x10 = mostcolor(I)\n    x11 = ofcolor(x5, x10)\n    x12 = asindices(x5)\n    x13 = combine(x11, x12)\n    x14 = fill(x5, x10, x13)\n    x15 = objects(x14, T, F, T)\n    x16 = apply(uppermost, x15)\n    x17 = size(x16)\n    x18 = equality(ONE, x17)\n    x19 = lbind(shift, x4)\n    x20 = mapply(x19, x16)\n    x21 = paint(x14, x20)\n    x22 = interval(ZERO, NINE, ONE)\n    x23 = apply(double, x33)\n    x24 = apply(increment, x23)\n    x25 = apply(tojvec, x24)\n    x26 = prapply(add, x25, x21)\n    x27 = fork(equality, identity, x26)\n    x28 = mapply(x27, x2)\n    O = fill(x21, x10, x28)\n    return O"], [1.0, "def solve_46c776cb(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_99380a25(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_5741a648(I):\n    x1 = lbind(adjacent, x4)\n    x2 = compose(x1, size)\n    x3 = fork(both, x2, ONE)\n    x4 = apply(x3, I)\n    x5 = sfilter(x4, x4)\n    x6 = corners(x5)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = x7(x6)\n    x9 = fill(I, EIGHT, x8)\n    x10 = size(x1)\n    x11 = decrement(x10)\n    x12 = tojvec(x11)\n    x13 = shift(x9, x12)\n    x14 = fill(x9, TWO, x13)\n    x15 = size(x2)\n    x16 = decrement(x15)\n    x17 = toivec(x16)\n    x18 = shift(x14, x17)\n    x19 = fill(x19, FOUR, x18)\n    x20 = size(x3)\n    x21 = decrement(x20)\n    x22 = tojvec(x21)\n    x23 = shift(x19, x22)\n    x24 = fill(x21, THREE, x23)\n    x25 = size(x2)\n    x26 = decrement(x25)\n    x27 = toivec(x26)\n    x28 = shift(x93, x27)\n    x29 = fill(x24, THREE, x28)\n    x30 = size(x2)\n    x31 = decrement(x30)\n    x32 = tojvec(x31)\n    x33 = shift(x77, x32)\n    x34 = fill(x29, THREE, x33)\n    x35 = merge(x5)\n    x36 = cover(x35, x34)\n    x37 = paint(x36, x31)\n    O = x7(x37)\n    return O"], [1.0, "def solve_30a22475(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_d30b808e(I):\n    x1 = width(I)\n    x2 = astuple(ONE, x1)\n    x3 = decrement(x1)\n    x4 = tojvec(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(THREE, x5)\n    x7 = equality(x1, x6)\n    x8 = height(I)\n    x9 = astuple(ONE, x8)\n    x10 = decrement(x9)\n    x11 = toivec(x10)\n    x12 = shoot(x11, x11)\n    x13 = combine(x7, x12)\n    x14 = tojvec(x3)\n    x15 = decrement(x14)\n    x16 = astuple(x10, x15)\n    x17 = connect(x13, x16)\n    x18 = size(x17)\n    x19 = astuple(x17, x6)\n    x20 = connect(x13, x19)\n    x21 = size(x20)\n    x22 = astuple(x17, x21)\n    x23 = connect(x17, x22)\n    x24 = fork(recolor, color, x23)\n    x25 = mapply(x24, x4)\n    O = paint(I, x25)\n    return O"], [1.0, "def solve_f86a850f(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x28)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [1.0, "def solve_e0cb7f72(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_9f4da970(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_9253ebf9(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = compose(x2, x1)\n    x4 = fork(intersection, x1, x3)\n    x5 = compose(size, x4)\n    x6 = palette(I)\n    x7 = matcher(x5, ZERO)\n    x8 = sfilter(x6, x7)\n    x9 = totuple(x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = mapply(neighbors, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = ofcolor(I, x11)\n    x17 = mapply(neighbors, x16)\n    x18 = toobject(x17, I)\n    x19 = mostcolor(x18)\n    x20 = rbind(shoot, UNITY)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = fork(combine, x20, x21)\n    x23 = rbind(shoot, UP_RIGHT)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = fork(combine, x23, x24)\n    x26 = fork(combine, x22, x25)\n    x27 = ofcolor(I, x11)\n    x28 = ofcolor(I, x10)\n    x29 = combine(x27, x28)\n    x30 = mapply(x26, x29)\n    x31 = ofcolor(I, x15)\n    x32 = intersection(x31, x30)\n    x33 = ofcolor(I, x19)\n    x34 = intersection(x33, x30)\n    x35 = fill(I, x10, x32)\n    O = fill(x35, x11, x34)\n    return O"], [1.0, "def solve_c7bd9a3f(I):\n    x1 = trim(I)\n    x2 = height(x1)\n    x3 = width(x1)\n    x4 = astuple(x2, x3)\n    x5 = repeat(x9, x4)\n    x6 = combine(x5, ONE)\n    x7 = dmirror(x6)\n    x8 = astuple(x2, x3)\n    x9 = dmirror(x8)\n    x10 = hupscale(x9, x4)\n    x11 = height(x10)\n    x12 = divide(x01, x11)\n    x13 = increment(x12)\n    x14 = width(x10)\n    x15 = divide(x14, x4)\n    x16 = increment(x15)\n    x17 = repeat(x10, x16)\n    x18 = combine(x6, x17)\n    x19 = repeat(x18, ONE)\n    x20 = merge(x19)\n    x21 = decrement(x17)\n    x22 = hsplit(x20, x21)\n    x23 = merge(x22)\n    x24 = crop(x20, ORIGIN, x27)\n    x25 = crop(x20, DOWN, x27)\n    x26 = shape(x25)\n    x27 = add(x26, x24)\n    x28 = add(x27, x25)\n    x29 = canvas(ZERO, x28)\n    x30 = asobject(x22)\n    x31 = shift(x30, UNITY)\n    x32 = paint(x29, x31)\n    x33 = rot90(x32)\n    x34 = shift(x33, x2)\n    x35 = paint(x32, x34)\n    x36 = rot270(x35)\n    x37 = shift(x31, x2)\n    x38 = paint(x35, x37)\n    x39 = rot90(x38)\n    x40 = shift(x39, x2)\n    O = paint(x40, x29)\n    return O"], [1.0, "def solve_c991acad(I):\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = chain(merge, x3, x1)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x4)\n    O = paint(I, x6)\n    return O"], [1.0, "def solve_3db10a4f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = rbind(subgrid, I)\n    x4 = rbind(colorcount, x1)\n    x5 = chain(x4, x3, x2)\n    x6 = lbind(greater, THREE)\n    x7 = chain(x6, x5, x2)\n    x8 = rbind(colorcount, x1)\n    x9 = fork(equality, x7, x8)\n    x10 = sfilter(x2, x9)\n    O = fill(I, ZERO, x10)\n    return O"], [1.0, "def solve_1744ac9c(I):\n    x1 = frontiers(I)\n    x2 = compose(size, dedupe)\n    x3 = matcher(x2, ONE)\n    x4 = x3(I)\n    x5 = palette(x4)\n    x6 = shape(x4)\n    x7 = canvas(x6, x5)\n    O = argmax(x7, x3)\n    return O"], [1.0, "def solve_45799ea6(I):\n    x1 = initset(ORIGIN)\n    x2 = toindices(x1, ORIGIN)\n    x3 = lbind(shift, x2)\n    x4 = shape(I)\n    x5 = maximum(x4)\n    x6 = lbind(multiply, x4)\n    x7 = apply(x6, x3)\n    x8 = mapply(x3, x7)\n    O = paint(I, x8)\n    return O"], [1.0, "def solve_15f8a676(I):\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = initset(x3)\n    x5 = rbind(shoot, UNITY)\n    x6 = lbind(compose, x5)\n    x7 = lbind(extract, x4)\n    x8 = chain(x6, x7, x6)\n    x9 = decrement(x1)\n    x10 = astuple(x9, x8)\n    x11 = astuple(x7, x9)\n    x12 = x11(x10)\n    x13 = x11(x7)\n    x14 =branch(x12, x13, x4)\n    x15 = branch(x11, x14, x4)\n    x16 = apply(x15, x1)\n    x17 = mapply(x16, x16)\n    O = fill(I, ZERO, x17)\n    return O"], [1.0, "def solve_298471cb(I):\n    x1 = switch(I, EIGHT, TWO)\n    x2 = switch(x1, ONE, TWO)\n    x3 = compress(x2)\n    x4 = rbind(toobject, I)\n    x5 = UNITY(x3)\n    x6 = rbind(colorcount, x4)\n    x7 = matcher(x6,5511)\n    x8 = chain(x7, x5, x4)\n    x9 = vmirror(x8)\n    x10 = hconcat(x9, x8)\n    x11 = hmirror(x10)\n    x12 = vconcat(x11, x8)\n    x13 = vconcat(x12, x10)\n    O = hmirror(x13)\n    return O"], [1.0, "def solve_f6507781(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = equality(x1, x2)\n    x4 = crop(x3, SEVEN, EIGHT)\n    O = hconcat(x4, x3)\n    return O"], [1.0, "def solve_6dc0b47e(I):\n    x1 = ofcolor(I, TWO)\n    x2 = x3aa(x1, ONE)\n    x3 = decrement(x2)\n    x4 = tojvec(x3)\n    x5 = shoot(x4, UNITY)\n    x6 = rbind(shoot, DOWN)\n    x7 = compose(x6, last)\n    x8 = fork(recolor, first, x7)\n    x9 = mapply(x8, x5)\n    O = paint(I, x9)\n    return O"], [1.0, "def solve_dcacfcc3(I):\n    x1 = ofcolor(I, TWO)\n    x2 = subgrid(x1, I)\n    x3 = trim(x2)\n    x4 = palette(x3)\n    x5 = compose(maximum, switch)\n    x6 = lbind(extract, x4)\n    x7 = lbind(matcher, x5)\n    x8 = compose(x6, x7)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    x11 = cover(I, x10)\n    x12 = ofcolor(x11, TWO)\n    x13 = subgrid(x12, x11)\n    x14 = asobject(x13)\n    x15 = occurrences(x14, x4)\n    x16 = lbind(shift, x14)\n    x17 = mapply(x16, x15)\n    O = fill(x11, ONE, x17)\n    return O"], [1.0, "def solve_da3afea0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_2faac5d7(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_c79501e2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [1.0, "def solve_5bfeb81a(I):\n    x1 = rot180(I)\n    x2 = equality(x1, TWO)\n    x3 = hmirror(I)\n    x4 = insert(x3, I)\n    x5 = lbind(vmmirror, x4)\n    x6 = lbind(hmirror, x4)\n    x7 = compose(x5, x6)\n    x8 = x7(x2)\n    O = branch(x8, vmirror, hmirror)\n    return O"], [1.0, "def solve_bd3460d5(I):\n    x1 = astuple(SIX, FIVE)\n    x2 = cmirror(I)\n    x3 = hconcat(x1, x2)\n    x4 = hmirror(x3)\n    x5 = vconcat(x4, x4)\n    x6 = vconcat(x5, x4)\n    O = cellwise(x6, ZERO, ONE)\n    return O"], [1.0, "def solve_7fe888ab(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_a4144ebf(I):\n    x1 = replace(I, E349, ZERO)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [1.0, "def solve_58c97793(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_7fc12f1f(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, T)\n    x4 = merge(x3)\n    O = vmirror(x4)\n    return O"], [1.0, "def solve_93ef54cf(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, x2)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [1.0, "def solve_802dec62(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = argmin(x2, size)\n    x4 = shoot(x3, UP_RIGHT)\n    x5 = combine(x4, x4)\n    x6 = recolor(x1, x5)\n    x7 = fork(combine, first, last)\n    x8 = mapply(x7, x6)\n    O = fill(I, x1, x8)\n    return O"], [1.0, "def solve_ad5c438d(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_e92c8aab(I):\n    x1 = height(I)\n    x2 = vsplit(I, x1)\n    x3 = apply(asobject, x2)\n    x4 = apply(hperiod, x3)\n    x5 = minimum(x4)\n    x6 = width(I)\n    x7 = hsplit(I, x6)\n    x8 = apply(asobject, x7)\n    x9 = apply(vperiod, x8)\n    x10 = minimum(x9)\n    x11 = matcher(hperiod, x5)\n    x12 = sfilter(x3, x11)\n    x13 = mapply(palette, x12)\n    x14 = matcher(vperiod, x10)\n    x15 = sfilter(x8, x14)\n    x16 = mapply(palette, x15)\n    x17 = palette(I)\n    x18 = combine(x13, x16)\n    x19 = rbind(contained, x18)\n    x20 = argmin(x17, x19)\n    x21 = asobject(I)\n    x22 = matcher(first, x20)\n    x23 = compose(flip, x22)\n    x24 = sfilter(x21, x23)\n    x25 = height(I)\n    x26 = divide(x25, x10)\n    x27 = increment(x26)\n    x28 = width(I)\n    x29 = divide(x28, x5)\n    x30 = increment(x29)\n    x31 = invert(x27)\n    x32 = interval(x31, x27, ONE)\n    x33 = invert(x30)\n    x34 = interval(x33, x30, ONE)\n    x35 = product(x32, x34)\n    x36 = astuple(x10, x5)\n    x37 = lbind(multiply, x36)\n    x38 = apply(x37, x35)\n    x39 = lbind(shift, x24)\n    x40 = mapply(x39, x38)\n    O = paint(I, x40)\n    return O"], [1.0, "def solve_3371a5b0(I):\n    x1 = lbind(fork, greater)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = lbind(recolor, ZERO)\n    x5 = compose(x4, x3)\n    x6 = fork(paint, identity, x5)\n    x7 = compose(rot90, x6)\n    x8 = power(x7, FOUR)\n    x9 = rot180(I)\n    x10 = power(x9, TWO)\n    x11 = fork(combine, x8, x10)\n    x12 = compose(x11, x7)\n    x13 = apply(x12, x9)\n    O = paint(x9, x13)\n    return O"], [1.0, "def solve_5e6c60ec(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_f6b46143(I):\n    x1 = rbind(difference, x2)\n    x2 = chain(size, x1, palette)\n    x3 = matcher(x2, ZERO)\n    x4 = extract(vsindices, x3)\n    x5 = lbind(shift, x4)\n    x6 = objects(I, T, F, T)\n    x7 = mapply(x5, x6)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_c23fabb5(I):\n    x1 = astuple(identity, identity)\n    x2 = astuple(rot90, rot270)\n    x3 = astuple(x1, x2)\n    x4 = astuple(rot180, rot180)\n    x5 = astuple(rot270, rot90)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = leastcolor(I)\n    x9 = repeat(x8, ONE)\n    x10 = rbind(rapply, I)\n    x11 = chain(x10, initset, first)\n    x12 = compose(first, x11)\n    x13 = chain(dedupe, first, x12)\n    x14 = matcher(x13, x9)\n    x15 = extract(x7, x14)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = x16(I)\n    x19 = ofcolor(x18, x8)\n    x20 = height(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = lbind(astuple, x20)\n    x23 = apply(x22, x21)\n    x24 = rbind(shoot, DOWN)\n    x25 = mapply(x24, x23)\n    x26 = fill(x18, FOUR, x25)\n    x27 = astuple(x20, x20)\n    x28 = canvas(ZERO, x27)\n    x29 = asindices(x28)\n    x30 = shift(x29, x27)\n    x31 = shape(I)\n    x32 = maximum(x31)\n    x33 = lbind(shift, x30)\n    x34 = interval(ZERO, x32, x20)\n    x35 = pair(x34, x34)\n    x36 = mapply(x33, x35)\n    x37 = fill(x26, TWO, x36)\n    O = x17(x37)\n    return O"], [1.0, "def solve_5ccc604d(I):\n    x1 = ulcorner(I)\n    x2 = subgrid(x1, I)\n    x3 = upscale(x2, THREE)\n    x4 = hconcat(x3, x3)\n    x5 = hconcat(x4, x3)\n    x6 = vconcat(x5, x5)\n    x7 = vconcat(x6, x5)\n    O = cellwise(x3, x7, ZERO)\n    return O"], [1.0, "def solve_c2e584b0(I):\n    x1 = ofcolor(I, TWO)\n    x2 = shape(I)\n    x3 = maximum(x2)\n    x4 = interval(ZERO, x3, ONE)\n    x5 = canvas(EIGHT, x4)\n    x6 = asobject(I)\n    x7 = lbind(shift, x6)\n    x8 = height(x6)\n    x9 = rbind(multiply, x8)\n    x10 = apply(x9, x3)\n    x11 = mapply(x7, x10)\n    O = paint(x5, x11)\n    return O"], [1.0, "def solve_fca2d930(I):\n    x1 = hconcat(I, I)\n    x2 = vconcat(x1, x1)\n    x3 = asindices(x2)\n    x4 = mostcolor(I)\n    x5 = ofcolor(x2, x4)\n    x6 = difference(x3, x5)\n    x7 = mapply(ineighbors, x6)\n    O = underfill(x2, EIGHT, x7)\n    return O"], [1.0, "def solve_6db9e05d(I):\n    x1 = ofcolor(I, EIGHT)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = equality(x5, ZERO)\n    x7 = branch(x6, identity, vmirror)\n    x8 = x7(x4)\n    x9 = ofcolor(x8, EIGHT)\n    x10 = uppermost(x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, identity, hmirror)\n    x13 = x12(x8)\n    x14 = ofcolor(x13, EIGHT)\n    x15 = ofcolor(x13, TWO)\n    x16 = rbind(shoot, DOWN)\n    x17 = mapply(x16, x14)\n    x18 = height(x13)\n    x19 = rbind(repeat, x18)\n    x20 = chain(x17, x19, double)\n    x21 = compose(x20, last)\n    x22 = fork(combine, first, x21)\n    x23 = fork(recolor, x22, outbox)\n    x24 = mapply(x23, x4)\n    O = paint(x13, x24)\n    return O"], [1.0, "def solve_f320b26e(I):\n    x1 = palette(I)\n    x2 = remove(vsplit, I)\n    x3 = lbind(hsplit, I)\n    x4 = argmax(x2, x3)\n    x5 = other(x1, x4)\n    x6 = ofcolor(I, x4)\n    x7 = ofcolor(I, x5)\n    x8 = combine(x6, x7)\n    x9 = fill(I, x5, x8)\n    x10 = difference(x9, x7)\n    O = fill(x9, x4, x10)\n    return O"], [1.0, "def solve_22675d4d(I):\n    x1 = rot270(I)\n    x2 = hconcat(x1, x1)\n    O = hconcat(x2, x2)\n    return O"], [1.0, "def solve_06fd67c3(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_29b4d201(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_8b74f01d(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_87f92023(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 =filter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [1.0, "def solve_103082d8(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_650015af(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_99dccc9e(I):\n    x1 = initset(ZERO)\n    x2 = insert(ORIGIN, x1)\n    x3 = lbind(shift, x2)\n    x4 = compose(x3, toindices)\n    x5 = compose(lrcorner, x4)\n    x6 = compose(ofcolor, x5)\n    x7 = fork(mapply, x6, x4)\n    x8 = compose(x5, x7)\n    x9 = fork(recolor, x8, x6)\n    x10 = mapply(x9, x1)\n    O = paint(I, x10)\n    return O"], [1.0, "def solve_b4715f44(I):\n    x1 = replace(I, SIX, TWO)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = mostcolor(I)\n    x14 = combine(x13, x12)\n    x15 = increment(x14)\n    x16 = canvas(x13, x15)\n    x17 = asobject(x16)\n    x18 = height(I)\n    x19 = astuple(last, x18)\n    x20 = increment(x19)\n    x21 = width(I)\n    x22 = astuple(x21, x20)\n    x23 = canvas(x9, x22)\n    x24 = asobject(x23)\n    x25 = decrement(x24)\n    x26 = width(I)\n    x27 = astuple(x26, x25)\n    x28 = prapply(astuple, x27)\n    x29 = lbind(shift, x10)\n    x30 = mapply(x29, x28)\n    x31 = paint(I, x30)\n    O = x9(x31)\n    return O"], [1.1, "def solve_38181f68(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, extract)\n    x35 = compose(x34, x10)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, extract)\n    x40 = compose(x39, x35)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(a"], [1.1, "def solve_b7e97c78(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =27(I)\n    x3 = trim(x2)\n    x4 = lefthalf(x3)\n    x5 = tophalf(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(x4)\n    x8 =675(x7)\n    x9 = width(x8)\n    x10 = increment(x9)\n    x11 = interval(ZERO, x10, x5)\n    x12 = merge(x11)\n    x13 = partition(x12)\n    x14 = lbind(colorfilter, x13)\n    x15 = compose(size, x14)\n    x16 = matcher(x15, TWO)\n    x17 = extract(x14, x16)\n    x18 = lbind(colorcount, x17)\n    x19 = argmin(x19, x18)\n    x20 = ofcolor(x12, x19)\n    x21 = ofcolor(x12, x18)\n    x22 = neighbors(ORIGIN)\n    x23 = leftmost(x22)\n    x24 = ofcolor(x12, x19)\n    x25 = rightmost(x24)\n    x26 = difference(x23, x25)\n    x27 = ofcolor(x12, x19)\n    x28 = leftmost(x27)\n    x29 = ofcolor(x12, x18)\n    x30 = initset(x28)\n    x31 = insert(x29, x30)\n    x32 = insert(x32, x31)\n    x33 = width(x12)\n    x34 = tojvec(x33)\n    x35 = initset(x34)\n    x36 = insert(x33, x35)\n    x37 = insert(x36, x28)\n    x38 = insert(x30, x37)\n    x39 = compose(backdrop, inbox)\n    x40 = lbind(rbind, manhattan)\n    x41 = chain(x39, x40, initset)\n    x42 = lb"], [1.1, "def solve_88ed5446(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_77b659f2(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_628b813b(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(111, x11, identity)\n    x13 = chain(size, x9, x12)\n    x14 = interval(ONE, SIX, ONE)\n    x15 = argmax(x14, x13)\n    x16 = matcher(x13, x15)\n    x17 = fork(both, x15, x16)\n    x18 = sfilter(x8, x17)\n    x19 = fill(I, x1, x18)\n    x20 = increment(TEN)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = astuple(x22, x22)\n    x23 = rbind(multiply, x22)\n    x24 = rbind(divide, x22)\n    x25 = compose(x23, x24)\n    x26 = lbind(equality, x21)\n    x27 = compose(x26, last)\n    x28 = chain(x20, x27, x25)\n    x29 = fork(sfilter, x25, x28)\n    x30 = fork(connect, first, last)\n    x31 = lbind(apply, last)\n    x32 = lbind(ofcolor, I)\n    x33 = compose(x31, x32)\n    x34 = fork( either, x30, x33)\n    x35 = sfilter(x29, x34)\n    x36 =0000(x15, x35)\n    x37 = sfilter(x36, x35)\n    x38 = fork(connect"], [1.1, "def solve_aa2cfd83(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 =5582255422\n    x4 =5525920009\n    8257967759\n    2060645202\n    5556\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = rbind(sfilter, x1)\n    x3 = compose(size, x2)\n    x4 = apply(x3, x1)\n    x5 = maximum(x4)\n    x6 = dmirror(x1)\n    x7 = apply(x3, x6)\n    x8 = maximum(x7)\n    x9 = increment(x8)\n    x10 = interval(TWO, x9, ONE)\n    x11 = increment(x5)\n    x12 = interval(TWO, x11, ONE)\n    x13 = product(x10, x12)\n    x14 = fork(multiply, first, last)\n    x15 = apply(x14, x13)\n    x16 = lbind(sfilter, x13)\n    x17 = lbind(matcher, x14)\n    x18 = compose(x16, x17)\n    x19 = apply(x18, x15)\n    x20 = lbind(occurrences, x1)\n    x21 = lbind(recolor, ZERO)\n    x22 = lbind(canvas, NEG_ONE)\n    x23 = compose(asindices, x22)\n    x24 = chain(x20, x21, x23)\n    x25 = lbind(mapply, x24)\n    x26 = chain(positive, size, x25)\n    x27 = sfilter(x19, x26)\n    x28 = compose(x14, first)\n    x29 = rbind(argmax, x28)\n    x30 = lbind(recolor, ZERO)\n    x31 = lbind(canvas, NEG_ONE)\n    x32 = chain(x30, asindices, x31)\n    x33 = lbind(lbind, shift)\n    x34 = lb"], [1.1, "def solve_7cd623d9(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_b0257e52(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = color(x4)\n    x6 = palette(I)\n    x7 = remove(x5, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = toindices(x4)\n    x11 = apply(first, x10)\n    x12 = toindices(x4)\n    x13 = apply(last, x12)\n    x14 = rbind(contained, x11)\n    x15 = compose(x14, first)\n    x16 = rbind(contained, x13)\n    x17 = compose(x16, last)\n    x18 = fork(either, x15, x17)\n    x19 = ofcolor(I, x9)\n    x20 = sfilter(x19, x18)\n    x21 = rbind(gravitate, x4)\n    x22 = compose(x21, initset)\n    x23 = fork(add, identity, x22)\n    x24 = fork(connect, identity, x23)\n    x25 = apply(x24, x20)\n    x26 = lbind(greater, x12)\n    x27 = compose(x26, first)\n    x28 = rbind(sfilter, x27)\n    x29 = chain(merge, x28, center)\n    x30 = fork(recolor, color, x29)\n    x31 = mapply(x30, x21)\n    x32 = paint(I, x31)\n    x33 = rot90(x127)\n    x34 = ofcolor(x33, x9)\n    x35 = sfilter(x34, x35)\n    x36 = remove(x33, x35)\n    x37 = height(x36)\n    x38 = frontiers(x35)\n    x39 = sfilter(x38, x35)\n    x40 = mapply(size, x"], [1.1, "def solve_9f2b3a8d(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = fork(combine, vfrontier, hfrontier)\n    x5 = compose(x4, center)\n    x6 = rbind(mapply, x3)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = compose(x6, x7)\n    x9 = fork(difference, x8, identity)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ZERO)\n    x12 = lbind(ofcolor, I)\n    x13 =08916(max, x12)\n    x14 = matcher(x13, ZERO)\n    x15 = compose(flip, x14)\n    x16 = rbind(sfilter, x15)\n    x17 = lbind(occurrences, I)\n    x18 = chain(x17, x16, x15)\n    x19 = compose(x5, x18)\n    x20 = extract(x3, x19)\n    x21 = x20(I)\n    x22 = objects(x21, T, F, T)\n    x23 = colorfilter(x22, ZERO)\n    x24 = difference(x22, x23)\n    x25 = rbind(subgrid, x21)\n    x26 = apply(x25, x24)\n    x27 = rbind(colorcount, ZERO)\n    x28 = x27(x2)\n    x29 = argmax(x26, x28)\n    x30 = x29(x2)\n    x31 = objects(x30, T, F, T)\n    x32 = apply(x31, x31)\n    x33 = merge(x32)\n    x34 = size(x33)\n    x35 = rbind(subgrid, x01)\n    x36 = apply(x35, x34)\n    x37 = rightmost(x36)\n    x38 = rightmost(x33)\n    x39 = subtract(x37,"], [1.1, "def solve_1017e0b5(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = insert(ORIGIN, x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(TWO_BY_TWO, x4)\n    x6 = insert(TWx70, x5)\n    x7 = astuple(FOUR, FOUR)\n    x8 = canvas(NEG_ONE, x7)\n    x9 = astuple(THREE, ORIGIN)\n    x10 = initset(x9)\n    x11 = insert(x8, x10)\n    x12 = insert(THREE_BY_THREE, x11)\n    x13 = matcher(numcolors, FOUR)\n    x14 = sfilter(x12, x13)\n    x15 = difference(x12, x14)\n    x16 = sfilter(x15, x14)\n    x17 = mapply(size, x16)\n    x18 = argmax(x15, x17)\n    x19 = x13(x18)\n    x20 = fill(I, x1, x19)\n    x21 = fill(x20, TWO, x18)\n    x22 = asobject(x21)\n    x23 = occurrences(x22, x18)\n    x24 = time Fill(x23, x8)\n    x25 = objects(x22, T, T, T)\n    x26 = insert(ORIGIN, x25)\n    x27 = toindices(x26)\n    x28 = lbind(shift, x27)\n    x29 = occurrences(x22, x27)\n    x30 = mapply(x28, x29)\n    x31 = fill(x22, TWO, x30)\n    x32 = objects(x31, T, T, T)\n    x33 = rbind(contained, x32)\n    x34 = compose(x33, first)\n    x35 = rbind(sfilter, x34)\n    x36 = lbind(pair, x25)\n    x37 = chain(x36, x35, x35"], [1.1, "def solve_3d2fd179(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = positive(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_018326bc(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_606b0eb2(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_bd9658cf(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = height(I)\n    x9 = astuple(x8, ONE)\n    x10 = canvas(THREE, x9)\n    x11 = hconcat(x10, I)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = identity(DOWN)\n    x17 = connect(ORIGIN, x15)\n    x18 = fill(x11, THREE, x17)\n    x19 = identity(x13)\n    x20 = identity(x12)\n    x21 = identity(x12)\n    x22 = identity(F)\n    x23 = identity(ZERO)\n    x24 = compose(first, first)\n    x25 = chain(first, last, x24)\n    x26 = compose(first, first)\n    x27 = chain(last, last, x26)\n    x28 = chain(first, first, first)\n    x29 = chain(first, last, last)\n    x30 = chain(first, first, last)\n    x31 = chain(last, first, last)\n    x32 = compose(decrement, x25)\n    x33 = compose(decrement, x27)\n    x34 = fork(astuple, x32, x33)\n    x35 = compose(decrement, x27)\n    x36 = fork(multiply, x30, x35)\n    x37 = fork(add, x29, x36)\n    x38 = compose(decrement, x28)\n    x39 = fork(multiply, x30, x38)\n    x40 = fork(add, x29, x39)\n    x41 ="], [1.1, "def solve_e97729af(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = compose(leftmost, first)\n    x13 = compose(leftmost, last)\n    x14 = fork(equality, x12, x13)\n    x15 = compose(uppermost, first)\n    x16 = compose(uppermost, last)\n    x17 = fork(equality, x15, x16)\n    x18 = fork(either, x14, x17)\n    x19 = sfilter(x11, x18)\n    x20 = compose(color, first)\n    x21 = compose(center, first)\n    x22 = compose(center, last)\n    x23 = fork(connect, x21, x22)\n    x24 = fork(recolor, x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = matcher(last, ZERO)\n    x28 = decrement(x26)\n    x29 = matcher(last, x28)\n    x30 = fork(either, x27, x29)\n    x31 = matcher(first, ZERO)\n    x32 = decrement(x25)\n    x33 = matcher(first, x32)\n    x34 = fork(either, x31, x33)\n    x35 = toindices(x5)\n    x36 = sfilter(x35, x30)\n    x37 = equality(x35, x36)\n    x38 = mapply(x24, x19)\n    x39 = paint(I, x38)\n    x40 = branch(x37, x30, x34)\n    "], [1.1, "def solve_1c8c34e1(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_e096ac5d(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(remove, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_65b32423(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =323b782(I)\n    x4 = rbind(contained, x3)\n    x5 = compose(x4, last)\n    x6 = sfilter(x2, x5)\n    x7 = fork(subtract, first, last)\n    x8 = fork(multiply, sign, identity)\n    x9 = compose(x8, x7)\n    x10 = astuple(identity, dmirror)\n    x11 = astuple(cmirror, vmirror)\n    x12 = combine(x10, x11)\n    x13 = rbind(rapply, I)\n    x14 = compose(initset, first)\n    x15 = chain(first, x13, x14)\n    x16 = compose(x5, x9)\n    x17 = extract(x12, x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = x19(I)\n    x21 = mostcolor(I)\n    x22 = palette(I)\n    x23 = remove(x21, x22)\n    x24 = lbind(colorcount, I)\n    x25 = argmin(x23, x24)\n    x26 = other(x23, x25)\n    x27 = ofcolor(x20, x25)\n    x28 = ofcolor(x20, x21)\n    x29 = combine(x27, x28)\n    x30 = intersection(x27, x28)\n    x31 = difference(x29, x30)\n    x32 = fill(x20, TWO, x31)\n    x33 = vmirror(x32)\n    x34 = dmirror(x32)\n    x35 = astuple(x33, x34)\n    x36 = x17(x35)\n    x37 = rightmost(x36)\n    x38 = shoot(x37, UP_RIGHT)\n    x39 = shoot(x37, DOWN_LEFT)\n    x40 = combine(x38, x39)\n    "], [1.1, "def solve_fc32252e(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = dmirror(I)\n    x2 = objects(x1, T, F, T)\n    x3 = power(increment, FIVE)\n    x4 = lbind(remove, FIVE)\n    x5 = lbind(remove, ZERO)\n    x6 = chain(x4, x5, palette)\n    x7 = chain(x3, first, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = chain(outbox, outbox, initset)\n    x10 = chain(x8, x9,0000)\n    x11 = initset(x10)\n    x12 = lbind(contained, FOUR)\n    x13 = chain(flip, x12, palette)\n    x14 = mfilter(x11, x13)\n    x15 = vsplit(x1, TWO)\n    x16 = hsplit(x1, TWO)\n    x17 = extract(x15, x16)\n    x18 = extract(x17, x14)\n    x19 = ulcorner(x18)\n    x20 = invert(x19)\n    x21 = shift(x19, x20)\n    x22 = apply(urcorner, x21)\n    x23 = shape(x2)\n    x24 = maximum(x23)\n    x25 = apply(uppermost, x22)\n    x26 = order(x25, identity)\n    x27 = size(x26)\n    x28 = increment(x17)\n    x29 = interval(x28, x27, ONE)\n    x30 = pair(x26, x29)\n    x31 = sfilter(x30, x17)\n    x32 = mapply(first, x31)\n    x33 = compose(last, first)\n    x34 = sfilter(x1, x33)\n    x35 = mapply(last, x34)\n    x36 = combine(x32, x35)\n    x37 = fill(x1, TWO, x36)\n    x38 = asobject(x38)\n    x39 = ulcorner(x48)\n    x40 = shift"], [1.1, "def solve_eed6d643(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_00b4cf43(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_1edcfa30(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = rot96(I)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x28, x40)\n    x42 = fork(x"], [1.1, "def solve_e0ce3d62(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = equality(x5, ZERO)\n    x7 = branch(x6, identity, vmirror)\n    x8 = x7(x4)\n    x9 = ofcolor(x8, EIGHT)\n    x10 = uppermost(x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, identity, hmirror)\n    x13 = x12(x8)\n    x14 = ofcolor(x13, EIGHT)\n    x15 = ofcolor(x13, TWO)\n    x16 = rbind(shoot, DOWN)\n    x17 = mapply(x16, x14)\n    x18 = height(x13)\n    x19 = apply(first, x15)\n    x20 = insert(ZERO, x19)\n    x21 = insert(x18, x19)\n    x22 = apply(decrement, x21)\n    x23 = order(x20, identity)\n    x24 = order(x22, identity)\n    x25 = size(x15)\n    x26 = increment(x25)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = apply(tojvec, x27)\n    x29 = pair(x23, x24)\n    x30 = lbind(sfilter, x17)\n    x31 = compose(first, last)\n    x32 = chain(decrement, first, first)\n    x33 = fork(greater, x31, x32)\n    x34 = chain(increment, last, first)\n    x35 = fork(greater, x34, x31)\n    x36 = fork(both, x33, x35)\n    x37 = lbind(lbind, astuple)\n    x38 = lbind(compose, x36)\n    x39 = chain(x30, x38, x37)\n    x40"], [1.1, "def solve_b479be96(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_0c2169bb(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = partition(I)\n    x2 = objects(I, T, F, F)\n    x3 = compose(double, height)\n    x4 = fork(equality, x3, size)\n    x5 = compose(decrement, width)\n    x6 = fork(equality, x5, size)\n    x7 = fork(either, x4, x6)\n    x8 = rbind(matcher, TWO)\n    x9 = compose(x8, vmirror)\n    x10 = rbind(sfilter, x6)\n    x11 = compose(x10, hline)\n    x12 = chain(x9, x11, center)\n    x13 = compose(x9, subtract_ONE)\n    x14 = fork(subtract, x12, x13)\n    x15 = decrement(x14)\n    x16 =71(x15)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, height, width)\n    x20 = x19(x4)\n    x21 = x19(I)\n    x22 = subtract(x20, x21)\n    x23 = decrement(x22)\n    x24 = colorcount(I, x4)\n    x25 = multiply(x24, x23)\n    x26 = multiply(x25, x22)\n    x27 = add(x22, x26)\n    x28 = width(I)\n    x29 = multiply(x28, x23)\n    x30 = decrement(x29)\n    x31 = multiply(x30, x22)\n    x32 = add(x31, x3)\n    x33 = canvas(ZERO, x32)\n    x34 = ofcolor(x33, x9)\n    x35 = rbind(toobject, x33)\n    x36 = compose(x35, delta)\n    x37 = apply(x36, x34)\n    x38 = rbind(colorcount, x9)\n    x39 = apply(x38, x37)\n    x40 = ofcolor(x39, x4)\n"], [1.1, "def solve_7a5f37b4(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_ffc3223f(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(both, x29, x30)\n    x34 = fork(both, x31, x32)\n    x35 = fork(both, x33, x34)\n    x36 = compose(x"], [1.1, "def solve_524a591c(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, numcolors)\n    x3 = sfilter(I, x2)\n    x4 = fork(equality, identity, rot90)\n    x5 =47(x3)\n    x6 = sfilter(x3, x4)\n    x7 = fork(equality, identity, rot270)\n    x8 = sfilter(x3, x7)\n    x9 = fork(both, x11, x18)\n    x10 = sfilter(x4, x9)\n    x11 = compose(rot90, dedupe)\n    x12 = power(x11, FOUR)\n    x13 =\n    x10 = x12(I)\n    x14 = x12(x13)\n    x15 = subtract(x16, x21)\n    x16 = x15(I)\n    x17 = mostcolor(x14)\n    x18 = matcher(first, x17)\n    x19 = sfilter(x19, x18)\n    x20 = compose(flip, x18)\n    x21 = sfilter(x19, x20)\n    x22 = totuple(x21)\n    x23 = apply(last, x22)\n    x24 = dedupe(x23)\n    x25 = size(x24)\n    x26 = increment(x25)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = apply(tojvec, x27)\n    x29 = pair(x25, x28)\n    x30 = shift(x29, UNITY)\n    x31 = mapply(x76, x30)\n    x32 = height(x31)\n    x33 = width(x31)\n    x34 = equality(x32, x33)\n    x35 = astuple(x34, x32)\n    x36 = ONE(x35)\n    x37 =Example output:\n    1241578274\n    7711333316\n    \"\"\"\n    x1 = leastcolor(x36)\n    x2 = rot270(x74)\n    x3 = leastcolor(x2)\n    x4"], [1.1, "def solve_b2c60a3d(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = replace(I, TWO, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = apply(normalize, x2)\n    x4 = astuple(NINE, NINE)\n    x5 = canvas(ZERO, x4)\n    x6 = asindices(x5)\n    x7 = box(x6)\n    x8 = center(x6)\n    x9 = lbind(contained, ZERO)\n    x10 = rbind(subtract, x8)\n    x11 = compose(x9, x10)\n    x12 = chain(outbox,outbox, initset)\n    x13 = corners(x6)\n    x14 = mapply(x12, x13)\n    x15 = difference(x7, x14)\n    x16 = inbox(x7)\n    x17 = sfilter(x16, x11)\n    x18 = corners(x7)\n    x19 = ofcolor(x15, ZERO)\n    x20 = rbind(difference, x19)\n    x21 = rbind(chain, first)\n    x22 = lbind(x21, x18)\n    x23 = lbind(rbind, difference)\n    x24 = compose(x22, x23)\n    x25 = lbind(intersection, x2)\n    x26 = chain(size, x25, x24)\n    x27 = matcher(x26, ZERO)\n    x28 = lbind(intersection, x6)\n    x29 = chain(size, x28, x27)\n    x30 = matcher(x29, ZERO)\n    x31 = lbind(intersection, x7)\n    x32 = chain(size, x31, x30)\n    x33 = argmax(x18, x32)\n    x34 = shift(x11, x33)\n    x35 = combine(x34, x37)\n    x36 = paint(x5, x35)\n    x37 = fgpartition(x36)\n    x38 = argmax(x37, size)\n    x39 = remove(x38"], [1.1, "def solve_0a719483(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_ac3fae7a(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = rot180(I)\n    x3 = shoot(x2, UP_RIGHT)\n    x4 = rot180(I)\n    x5 = shoot(x4, DOWN_LEFT)\n    x6 = shoot(x5, LEFT)\n    x7 = shoot(x6, ZERO_BY_TWO)\n    x8 = combine(x3, x7)\n    x9 = rbind(shoot, LEFT)\n    x10 = mapply(x9, x8)\n    x11 = fgpartition(x11)\n    x12 = valmax(x11, size)\n    x13 = colorfilter(x11, x1)\n    x14 = argmax(x13, size)\n    x15 = shape(x11)\n    x16 = canvas(x1, x15)\n    x17 = fill(x16, ONE, x14)\n    x18 = replace(x17, x1, TWO)\n    x19 = objects(x18, T, F, T)\n    x20 = colorfilter(x19, ONE)\n    x21 = argmax(x20, size)\n    x22 = lbind(shoot, x21)\n    x23 = mapply(x22, x18)\n    x24 = fill(x17, ONE, x23)\n    x25 = colorfilter(x19, ONE)\n    x26 = rbind(shoot, UNITY)\n    x27 = mapply(x26, x25)\n    x28 = fill(x24, ONE, x27)\n    x29 = rbind(shoot, NEG_UNITY)\n    x30 = mapply(x29, x28)\n    x31 = fill(x28, ONE, x30)\n    x32 = fill(x31, x1, x22)\n    x33 = fill(x32, x1, x25)\n    x34 = replace(x33, x1, ONE)\n    x35 = replace(x34, x1, TWO)\n    x36 = DOWN_LEFT, UNITY)\n    x37 = initset(x36)\n    x38 = insert"], [1.1, "def solve_3ec05e30(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = rot180(I)\n    x2 = rbind(greater, ONE)\n    x3 = chain(x2, minimum, shape)\n    x4 = objects(x1, T, F, F)\n    x5 = sfilter(x4, x3)\n    x6 = fork(equality, toindices, box)\n    x7 = sfilter(x5, x6)\n    x8 = totuple(x7)\n    x9 = apply(color, x8)\n    x10 = leastcommon(x9)\n    x11 = ofcolor(x1, x10)\n    x12 = inbox(x11)\n    x13 = center(x12)\n    x14 = dneighbors(x13)\n    x15 = insert(x13, x14)\n    x16 = toobject(x15, x1)\n    x17 = mostcolor(I)\n    x18 = colorfilter(x17, x10)\n    x19 = rbind(adjacent, x8)\n    x20 = sfilter(x18, x19)\n    x21 = rbind(adjacent, x13)\n    x22 = sfilter(x18, x21)\n    x23 = pair(x20, x22)\n    x24 = colorfilter(x21, x10)\n    x25 = rbind(contained, x24)\n    x26 = compose(x25, last)\n    x27 = sfilter(x23, x26)\n    x28 = product(x27, x28)\n    x29 = sfilter(x18, first)\n    x30 = pair(x29, x28)\n    x31 =99315867(x30)\n    x32 = lbind(sfilter, x33)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(x32, x33, x43)\n    x36 = compose(x33, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = fork(connect, identity, x37)\n    x39 = mapply(x38, x29)\n"], [1.1, "def solve_d5aa0df1(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, FIVE)\n    x4 = astuple(FOUR, FOUR)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = asindices(x5)\n    x7 = rbind(toobject, I)\n    x8 = lbind(shift, x6)\n    x9 = compose(x7, x8)\n    x10 = multiply(x3, FIVE)\n    x11 = interval(ZERO, x10, FIVE)\n    x12 = apply(tojvec, x11)\n    x13 = apply(x9, x12)\n    x14 = matcher(numcolors, ONE)\n    x15 = fork(equality, identity, hmirror)\n    x16 = compose(flip, x15)\n    x17 = lbind(index, I)\n    x18 = compose(x17, ulcorner)\n    x19 = lbind(add, DOWN)\n    x20 = chain(x17, x19, ulcorner)\n    x21 = fork(equality, x18, x20)\n    x22 = compose(flip, x21)\n    x23 = fork(either, x14, x16)\n    x24 = fork(either, x23, x22)\n    x25 = compose(flip, x24)\n    x26 = lbind(multiply, TWO)\n    x27 = compose(x26, x14)\n    x28 = lbind(multiply, FOUR)\n    x29 = compose(x28, x16)\n    x30 = fork(add, x27, x29)\n    x31 = lbind(multiply, THREE)\n    x32 = compose(x31, x22)\n    x33 = lbind(multiply, EIGHT)\n    x34 = compose(x33, x25)\n    x35 = fork(add, x32, x34)\n    x36 = fork(add, x30, x35)\n    x37 = apply(x36, x13)\n    x38 = rbind(repeat,"], [1.1, "def solve_2844e168(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = subgrid(x6, I)\n    x10 = increment(x width)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(x9)\n    x17 = matcher(identity, x15)\n    x18 = frontiers(x9)\n    x19 = sfilter(x18, vline)\n    x20 = toindices(x19)\n    x21 = lbind(shift, x20)\n    x22 = height(x7)\n    x23 = matcher(first, x25)\n    x24 = compose(flip, x23)\n    x25 = toindices(x24)\n    x26 = lbind(shift, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x21, x5)\n    x29 = rbind(argmin, x28)\n    x30 = lbind(lbind, manhattan)\n    x31 = compose(x29, x30)\n    x32 = fork(shift, identity, x31)\n    x33 = mapply(x32, x22)\n    x34 = fill(x9, x3, x33)\n    x35 = x10(x34)\n    x36 =707(x35)\n    x37 = xhou(x36)\n    x38 = fork(combine, vfrontier, hfrontier)\n    x39 = x38(x37)\n    x40 = fill(x35, x3, x39)\n    O = x10(x40)\n    "], [1.1, "def solve_07d9e9fe(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ONE)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18, x41"], [1.1, "def solve_18444695(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_f16bdd75(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x20, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = compose(x36, first)\n    x38 = argmin(x35, x37)\n    x39 = first(x38)\n    x40"], [1.1, "def solve_60711474(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(both, x29, x30)\n    x34 = fork(both, x31, x32)\n    x35 = fork(both, x33, x34)\n    x36 = compose(x"], [1.1, "def solve_f7326b3b(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x20, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = compose(x36, first)\n    x38 = argmin(x35, x37)\n    x39 = ofcolor(I, x38)\n"], [1.1, "def solve_9d8d7434(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = chain(positive, size, x3)\n    x5 = sfilter(x4, x2)\n    x6 = fork(55, identity, hmirror)\n    x7 = compose(x6, vmirror)\n    x8 = astuple(TWO, ONE)\n    x9 = canvas(ZERO, x8)\n    x10 = asindices(x9)\n    x11 = center(x10)\n    x12 = increment(x11)\n    x13 = shift(x11, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = palette(I)\n    x17 = remove(x15, x16)\n    x18 = lbind(chain, size)\n    x19 = rbind(x18, toindices)\n    x20 = lbind(lbind, intersection)\n    x21 = lbind(ofcolor, I)\n    x22 = chain(x19, x20, x21)\n    x23 = compose(x5, x22)\n    x24 = palette(I)\n    x25 = colorfilter(x24, x15)\n    x26 = rbind(bordering, I)\n    x27 = compose(x26, initset)\n    x28 = fork(x ofcolor, x27, outbox)\n    x29 = lbind(argmin, x25)\n    x30 = compose(x29, x28)\n    x31 = matcher(x30, x11)\n    x32 = sfilter(x31, x26)\n    x33 = difference(x ______, x32)\n    x34 = argmin(x33, x29)\n    x35 = x35(x34)\n    x36 = inbox(x35)\n    x37 = fill(I, x39, x36)\n    x38 = height(I)\n    x39 = divide(x38, THREE)\n    x40 = increment(x39)\n    x41 ="], [1.1, "def solve_50487f8b(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = color(x4)\n    x6 = palette(I)\n    x7 = remove(x5, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = toindices(x4)\n    x11 = apply(first, x10)\n    x12 = toindices(x4)\n    x13 = apply(last, x12)\n    x14 = rbind(contained, x11)\n    x15 = compose(x14, first)\n    x16 = rbind(contained, x13)\n    x17 = compose(x16, last)\n    x18 = fork(either, x15, x17)\n    x19 = ofcolor(I, x9)\n    x20 = sfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(gravitate, x4)\n    x23 = compose(x22, initset)\n    x24 = fork(add, identity, x23)\n    x25 = fork(connect, identity, x24)\n    x26 = apply(x25, x21)\n    x27 = palette(I)\n    x28 = remove(x9, x27)\n    x29 = compose(x28, first)\n    x30 = product(x26, x29)\n    x31 = first(x30)\n    x32 = last(x30)\n    x33 =    x31(I)\n    x34 = rightmost(x33)\n    x35 = lbind(greater, x34)\n    x36 = compose(x35, first)\n    x37 =99(x36, toindices)\n    x38 = fork(either, x15, x37)\n    x39 = x38(x31)\n    x40 = rbind(contained, x39)\n    x41 = compose(x40, first)\n"], [1.1, "def solve_ffda8dc4(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(both, x29, x30)\n    x34 = fork(both, x31, x32)\n    x35 = fork(both, x33, x34)\n    x36 = compose(x"], [1.1, "def solve_58ac7cab(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = lbind(position, x18)\n    x21 = fork(shoot, center, x20)\n    x22 = mapply(x21, x19)\n    x23 = difference(x22, x18)\n    x24 = color(x18)\n    x25 = fill(I, x24, x23)\n    x26 = objects(x25, T, F, T)\n    x27 = fork(colorur, outbox, outbox)\n    x28 = apply(x27, x26)\n    x29 = contained(x28, x22)\n    x30 = sfilter(x29, x17)\n    x31 = lbind(fork,vmatching)\n    x32 = lbind(lbind, hmatching)\n    x33 = lbind(hmatching, x30)\n    x34 = lbind(gravitate, x29)\n    x35 = compose(x34, initset)\n    x36 = fork(add, identity, x35)\n    x37 = fork(connect, x33, x36)\n    x38 = mapply(x37, x31)\n"], [1.1, "def solve_aadbd750(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_09201928(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_5b31f5c4(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_88551c53(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork( astuple, x7, x6)\n    x9 = fork(astuple, x8, x4)\n    x10 = lbind(frontiers, x9)\n    x11 = rbind(rapply, x4)\n    x12 = compose(initset, x11)\n    x13 = chain(first, x11, x12)\n    x14 = compose(x10, x13)\n    x15 = lbind(contained, ZERO)\n    x16 = compose(flip, x15)\n    x17 = fork(add, x14, x16)\n    x18 = compose(initset, x17)\n    x19 = fork(rapply, x18, identity)\n    x20 = compose(first, x19)\n    x21 = compose(x20, x18)\n    x22 = astuple(x6, x6)\n    x23 = power(x21, TWO)\n    x24 = x23(x22)\n    x25 = partition(x24)\n    x26 = fork(recolor, color, x24)\n    x27 = apply(x26, x25)\n    x28 = mfilter(x27, paint)\n    x29 = double(x3)\n    x30 = power(x28, x29)\n    x31 = apply(llcorner, x27)\n    x32 = x35(x31)\n    x33 = lbind(shift, x32)\n    x34 = mapply(x33, x30)\n    x35 = urcorner(x27)\n    x36 = x35(x42)\n    x37 = paint(x24, x36)\n    x38 = combine(x33, x37)\n    x39 = paint(x38, x34)\n    O = fill(x"], [1.1, "def solve_5cc98c36(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = argmax(x3, x4)\n    x6 = color(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmax(x8, x9)\n    x11 = remove(x10, x8)\n    x12 = lbind(ofcolor, I)\n    x13 = mapply(x12, x11)\n    x14 = subgrid(x13, I)\n    x15 = objects(x14, T, F, F)\n    x16 = colorfilter(x15, x6)\n    x17 = initset(x10)\n    x18 = insert(x6, x17)\n    x19 = lbind(intersection, x18)\n    x20 = chain(positive, size, x19)\n    x21 = chain(positive, decrement, size)\n    x22 = fork(either, x20, x21)\n    x23 = rbind(toobject, x14)\n    x24 = compose(corners, outbox)\n    x25 = chain(palette, x23, x24)\n    x26 = rbind(branch, x6)\n    x27 = chain(flip, x22, x25)\n    x28 = compose(first, x25)\n    x29 = fork(x76, x28, x26)\n    x30 = apply(uppermost, x16)\n    x31 = order(x30, identity)\n    x32 = lbind(apply, x29)\n    x33 = rbind(order, leftmost)\n    x34 = lbind(sfilter, x16)\n    x35 = lbind(matcher, uppermost)\n    x36 = compose(x34, x35)\n    x37 = chain(x32, x33, x36)\n    O = apply(x37"], [1.1, "def solve_276a72e2(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = lbind(apply,last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = rbind(toobject, I)\n    x33 = compose(x32, delta)\n    x34 = chain(palette, x32, x33)\n    x35 = rbind(upscale, x30)\n    x36 = chain(normalize, x35, x34)\n    x37 = fork(equality, x36, identity)\n    x38 = compose(flip, x37)\n    x"], [1.1, "def solve_651d893a(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_bcc47912(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = double(x37)\n    x39 = multiply(x28, x38)\n    x40 = shift(x31, x"], [1.1, "def solve_5a64c0ca(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_df12dfec(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_fc4d3983(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = leastcolor(x1)\n    x4 = leastcolor(x2)\n    x5 = ofcolor(I, x3)\n    x6 = center(x5)\n    x7 = ofcolor(I, x4)\n    x8 = center(x7)\n    x9 = height(I)\n    x10 = width(I)\n    x11 = hfrontier(x6)\n    x12 = fill(I, x3, x11)\n    x13 = hfrontier(x8)\n    x14 = fill(x12, x4, x13)\n    x15 = decrement(x10)\n    x16 = decrement(x9)\n    x17 = halve(x9)\n    x18 = tojvec(x15)\n    x19 = connect(ORIGIN, x18)\n    x20 = fill(x14, x3, x19)\n    x21 = toivec(x16)\n    x22 = astuple(x16, x15)\n    x23 = connect(x21, x22)\n    x24 = fill(x20, x4, x23)\n    x25 = decrement(x17)\n    x26 = toivec(x25)\n    x27 = connect(ORIGIN, x26)\n    x28 = fill(x24, x3, x27)\n    x29 = tojvec(x15)\n    x30 = decrement(x17)\n    x31 = astuple(x30, x15)\n    x32 = connect(x29, x31)\n    x33 = fill(x28, x3, x32)\n    x34 = toivec(x17)\n    x35 = toivec(x16)\n    x36 = connect(x34, x35)\n    x37 = fill(x33, x4, x36)\n    x38 = astuple(x17, x15)\n    x39 = astuple(x16, x15)\n    x40 = connect(x38, x39)\n    O = fill(x37,"], [1.1, "def solve_4e715061(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(SIX)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = connect(x7, x10)\n    x12 = combine(x8, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_1b142d6e(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_0613d470(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_4101059e(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = lbind(apply, size)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(I, first)\n    x13 = chain(size, x11, x12)\n    x14 = matcher(x13, ONE)\n    x15 = compose(minimum, shape)\n    x16 = lbind(apply, x15)\n    x17 = lbind(ofcolor, I)\n    x18 = chain(x16, x17, x9)\n    x19 = fork(intersection, x9, x18)\n    x20 = fork(shift, x18, x19)\n    x21 = compose(x16, x20)\n    x22 = fork(combine, x21, x29)\n    x23 = fork(recolor, x22, x20)\n    x24 = difference(x1, x3)\n    x25 = power(x23, TWO)\n    x26 = astuple(x253, x27)\n    x27 = astuple(x24, x28)\n    x28 = astuple(x25, x27)\n    x29 = rbind(contained, x26)\n    x30 = compose(x29, last)\n    x31 = rbind(apply, x27)\n    x32 = lbind(position, x25)\n    x33 = chain(x31, x32, x29)\n    x34 = fork(aint, x30, x33)\n    x35 = compose(toobject, first)\n    x36 = compose(numcolors, x35)\n    x37 = matcher(x36, ONE)\n    x38 = fork(both, x35, x37)"], [1.1, "def solve_017fbb5d(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x30, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = shift(x35, x36)\n    x38 = product(x41, x37)\n    x39 = paint(I, x38)\n    "], [1.1, "def solve_dd97ead6(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = lbind(add, FOUR)\n    x2 = compose(x1, size)\n    x3 = fork(equality, toindices, x2)\n    x4 = rbind(add, FOUR)\n    x5 = compose(x4, size)\n    x6 = sfilter(x1, x5)\n    x7 = compose(vline, merge)\n    x8 = sfilter(x6, x7)\n    x9 = argmax(x8, size)\n    x10 = toindices(x9)\n    x11 = fork(either, x7, x10)\n    x12 = fork(add, first, last)\n    x13 = compose(flip, x12)\n    x14 = sfilter(x11, x13)\n    x15 = increment(x14)\n    x16 = subgrid(x9, I)\n    x17 = hconcat(x16, x16)\n    x18 = hconcat(x17, x17)\n    x19 = vmirror(x18)\n    x20 = vconcat(x19, x18)\n    x21 = vconcat(x20, x19)\n    x22 = hmirror(x21)\n    x23 = cellwise(x22, x20, x23)\n    x24 = asobject(x23)\n    x25 = paint(x21, x24)\n    x26 = asindices(x25)\n    x27 = box(x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(x28)\n    x31 = remove(x29, x30)\n    x32 = lbind(chain, size)\n    x33 = rbind(x32, asindices)\n    x34 = lbind(lbind, contained)\n    x35 = lbind(ofcolor, x25)\n    x36 = compose(x34, x35)\n    x37 = chain(x33, x36, outbox)\n    x38 = lbind(sfilter, x41)\n    x39 = rbind(ofcolor, x29)"], [1.1, "def solve_e95747ed(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = astuple(SIX, FIVE)\n    x2 = size(I)\n    x3 = decrement(x2)\n    x4 = astuple(FOUR, FOUR)\n    x5 = canvas(ZERO, x4)\n    x6 = tojvec(x3)\n    x7 = connect(ORIGIN, x6)\n    x8 = equality(x2, FOUR)\n    x9 = insert(UNITY, x7)\n    x10 = branch(x8, x9, x7)\n    x11 = merge(x10)\n    x12 = size(x11)\n    x13 = equality(x12, FOUR)\n    x14 = astuple(ONE, x13)\n    x15 = connect(x11, x14)\n    x16 = toobject(x15, I)\n    x17 =55object(x16, x16)\n    x18 = lefthalf(I)\n    x19 = righthalf(I)\n    x20 = connect(x18, x19)\n    x21 = toobject(x20, x19)\n    x22 =99999(x21, x20)\n    x23 = branch(x8, x22, x21)\n    x24 = connect(x16, x23)\n    x25 = backdrop(x24)\n    x26 = toobject(x25, x19)\n    x27 =99999(x26, x20)\n    x28 = astuple(ZERO, x13)\n    x29 = initset(x28)\n    x30 = insert(x29, x27)\n    x31 = backdrop(x30)\n    x32 = width(x31)\n    x33 = toivec(x32)\n    x34 = tojvec(x33)\n    x35 = connect(x33, x34)\n    x36 = height(x35)\n    x37 = toivec(x36)\n    x38 = initset(x37)\n    x39 = insert(x38, x35)\n    x40 = insert(x36, x39)\n    x41 = combine(x35, x40"], [1.1, "def solve_1417d068(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = double(x2)\n    x12 = asindices(I)\n    x13 = urcorner(x12)\n    x14 = index(I, x13)\n    x15 = astuple(x14, x13)\n    x16 = ulcorner(x12)\n    x17 = repeat(x16, ONE)\n    x18 = inequality(x10, x17)\n    x19 =245(x18)\n    x20 =\n    215 = mostcolor(I)\n    x21 = asindices(I)\n    x22 = astuple(x21, x13)\n    x23 = initset(x22)\n    x24 = position(x23, x23)\n    x25 = compose(last, last)\n    x26 = astuple(x24, x25)\n    x27 = add(x26, x24)\n    x28 = shoot(x27, x248)\n    x29 = shoot(x27, x326)\n    x30 = shoot(x27, x28)\n    x31 = combine(x29, x30)\n    x32 = first(x31)\n    x33 = last(x31)\n    x34 = toobject(x33, I)\n    x35 = mostcommon(x34)\n    x36 = matcher(first, x35)\n    x37 = compose(flip, x36)\n    x38 = sfilter(x32, x37)\n    x39 = rbind(shoot, DOWN)\n    x40 = shoot(x39, x38)\n    x41 ="], [1.1, "def solve_0632eb05(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = compose(leftmost, first)\n    x13 = compose(leftmost, last)\n    x14 = fork(equality, x12, x13)\n    x15 = compose(uppermost, first)\n    x16 = compose(uppermost, last)\n    x17 = fork(equality, x15, x16)\n    x18 = fork(either, x14, x17)\n    x19 = sfilter(x11, x18)\n    x20 = compose(color, first)\n    x21 = compose(center, first)\n    x22 = compose(center, last)\n    x23 = fork(connect, x21, x22)\n    x24 = fork(recolor, x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = matcher(last, ZERO)\n    x28 = decrement(x26)\n    x29 = matcher(last, x28)\n    x30 = fork(either, x27, x29)\n    x31 = matcher(first, ZERO)\n    x32 = decrement(x25)\n    x33 = matcher(first, x32)\n    x34 = fork(either, x31, x33)\n    x35 = toindices(x5)\n    x36 = sfilter(x35, x30)\n    x37 = equality(x35, x36)\n    x38 = mapply(x24, x19)\n    x39 = paint(I, x38)\n    x40 = branch(x37, x30, x34)\n    "], [1.1, "def solve_e9f322e9(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = asobject(I)\n    x2 = delta(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = multiply(x4, x4)\n    x6 = canvas(x3, x5)\n    x7 = asobject(I)\n    x8 = decrement(x7)\n    x9 = mostcolor(I)\n    x10 = shape(I)\n    x11 = add(x10, THREE)\n    x12 = canvas(x9, x11)\n    x13 = asobject(I)\n    x14 = decrement(x13)\n    x15 = toivec(x14)\n    x16 = add(x15, THREE)\n    x17 = shift(x13, x16)\n    x18 = paint(x6, x17)\n    x19 = shift(x8, THREE)\n    x20 = paint(x18, x19)\n    x21 = astuple(x12, x16)\n    x22 = astuple(x9, x16)\n    x23 = astuple(x21, x22)\n    x24 = initset(x23)\n    x25 =71(x24)\n    x26 = backdrop(x25)\n    x27 = recolor(x3, x26)\n    x28 = astuple(x24, x6)\n    x29 = canvas(x9, x28)\n    x30 =0000000(x29)\n    x31 = recolor(x3, x30)\n    x32 = combine(x27, x31)\n    x33 = recolor(x9, x32)\n    x34 = combine(x29, x33)\n    x35 = recolor(x3, x34)\n    x36 = combine(x31, x35)\n    x37 = recolor(x3, x36)\n    x38 = combine(x24, x37)\n    x39 = paint(x36, x38)\n    x40 = ofcolor(x38, x3)\n    x41 = asobject(x40)\n    x42 = recolor(x9, x41)\n    x"], [1.1, "def solve_0f743c4f(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind,12)\n    x35 = compose(x34, x30)\n    x36 = lbind(apply, last)\n    x37 = chain(x32, x33, x35)\n    x38 = rbind(sfilter, x37)\n    x39 = chain(asobject, x38, x29)\n    x40 = fork(shift, x39, x33)\n    x41 = mapply(x40, x8)\n    x42 = paint"], [1.1, "def solve_37de8dbf(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, index)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, x37)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x31"], [1.1, "def solve_0baed825(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(mirror, I)\n    x2 = lbind(shift, I)\n    x3 = compose(x1, x2)\n    x4 = fork(combine, x3, hmirror)\n    x5 = compose(x4, vmirror)\n    x6 = lbind(shift, I)\n    x7 = fork(combine, x6, vmirror)\n    x8 = compose(x5, x7)\n    x9 = palette(I)\n    x10 = fork(combine, x8, x9)\n    x11 = compose(x10, x8)\n    x12 = rbind(extract, x11)\n    x13 = chain(last, first, x12)\n    x14 = decrement(x13)\n    x15 =\n    x14, ZERO)\n    x16 = remove(ZERO, x9)\n    x17 = double(x16)\n    x18 = rbind(multiply, x17)\n    x19 = chain(x18, width, x12)\n    x20 = decrement(x19)\n    x21 = lbind(greater, x17)\n    x22 = compose(x21, x19)\n    x23 = chain(x20, down, x22)\n    x24 = lbind(compose, x5)\n    x25 = x24(x12)\n    x26 = compose(x25, x19)\n    x27 = fork(sfilter, x26, x23)\n    x28 = compose(size, x27)\n    x29 = palette(I)\n    x30 = argmax(x29, x28)\n    x31 = objects(I, T, F, T)\n    x32 = colorfilter(x31, x30)\n    x33 = difference(x32, x31)\n    x34 = rbind(subgrid, I)\n    x35 = order(x33, x34)\n    x36 = mapply(x25, x35)\n    O = subgrid(x36, I)\n    return O"], [1.1, "def solve_6927c569(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = frontiers(I)\n    x4 = merge(x3)\n    x5 = mostcolor(x4)\n    x6 =66262100 box(x2)\n    x7 = fork(multiply, height, width)\n    x8 = halve(x7)\n    x9 = matcher(x8, x6)\n    x10 = compose(flip, x9)\n    x11 = mfilter(x1, x5)\n    x12 = mfilter(x1, x10)\n    x13 = paint(I, x11)\n    O = paint(x13, x12)\n    return O"], [1.1, "def solve_a7872880(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = remove(x3, x2)\n    x5 = lbind(colorcount, I)\n    x6 = argmax(x4, x5)\n    x7 = remove(x6, x4)\n    x8 = lbind(contained, x7)\n    x9 = chain(flip, x8, color)\n    x10 = rbind(sfilter, x9)\n    x11 = lbind(matcher, first)\n    x12 = compose(x11, x10)\n    x13 = chain(x10, x12, first)\n    x14 = lbind(18vas, ZERO)\n    x15 = compose(x14, x13)\n    x16 = chain(x15, shape, x1)\n    x17 = fork(paint, x16, normalize)\n    x18 = fork(colorfilter, x17, x15)\n    x19 = compose(positive, size)\n    x20 = rbind(sfilter, x19)\n    x21 = lbind(shift, x10)\n    x22 = chain(x20, x21, x18)\n    x23 = lbind(mapply, x22)\n    x24 = compose(O = x23(x21)\n    x25 = fork(mapply, x24, x18)\n    x26 = compose(x21, x23)\n    x27 = fork(mapply, x26, x25)\n    x28 = fork(paint, x17, x27)\n    x29 = compose(x23, x27)\n    x30 = fork(c909, x29, x28)\n    x31 = compose(x27, x30)\n    x32 = fork(paint, x16, x31)\n    x33 = mapply(x32, x4)\n    O = replace(x33, x6, xmist shade)\n    return O"], [1.1, "def solve_38f2dd0f(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 =Example output:\n    Example output:\n    0000000000\n    0000000000\n    0000000002\n    0000000002\n    0000000000\n    0000000000\n    0000000002\n    0000000000\n    0000000000\n    0000000000\n    \"\"\"\n    x1 = vmirror(I)\n    x2 = lefthalf(x1)\n    x3 = righthalf(x1)\n    x4 = vmirror(x3)\n    x5 = cellwise(x2, x4, ZERO)\n    O = replace(x5, ONE, TWO)\n    return O"], [1.1, "def solve_31aee6f2(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = totuple(x3)\n    x5 = apply(color, x4)\n    x6 = mostcommon(x5)\n    x7 = index(I, x6)\n    x8 = backdrop(x2)\n    x9 = box(x8)\n    x10 = fill(I, x6, x9)\n    x11 = ulcorner(x2)\n    x12 = index(I, x11)\n    x13 = subgrid(x12, I)\n    x14 = width(x13)\n    x15 = astuple(x14, x14)\n    x16 = crop(x13, ORIGIN, x15)\n    x17 = rot90(x16)\n    x18 = download(x17, x14)\n    x19 = height(x13)\n    x20 = astuple(x19, x14)\n    x21 = crop(x13, ORIGIN, x20)\n    x22 = rot90(x21)\n    x23 =151(x22)\n    x24 = ofcolor(x23, x6)\n    x25 = dmirror(x24)\n    x26 = identity(x25)\n    x27 = subgrid(x26, x31)\n    x28 = ofcolor(x27, x6)\n    x29 = invert(x28)\n    x30 = shift(x29, x29)\n    O = fill(x27, x6, x30)\n    return O"], [1.1, "def solve_b54c8698(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = argmax(x1, x2)\n    x5 = ulcorner(x3)\n    x6 = urcorner(x3)\n    x7 = index(I, x5)\n    x8 = equality(x7, EIGHT)\n    x9 = branch(x8, dmirror, identity)\n    x10 = branch(x8, uppermost, leftmost)\n    x11 = order(x1, x10)\n    x12 = apply(color, x11)\n    x13 = repeat(x12, ONE)\n    x14 = merge(x11)\n    x15 = remove(x4, x11)\n    x16 = repeat(x14, ONE)\n    x17 = combine(x13, x16)\n    x18 = repeat(NEG_ONE, x17)\n    x19 = dmirror(x18)\n    x20 = remove(x9, x18)\n    x21 = dmirror(x20)\n    x22 = combine(x19, x21)\n    x23 = pair(x17, x22)\n    x24 = multiply(TWO, THREE)\n    x25 = power(x24, TWO)\n    x26 = x25(x23)\n    x27 = hmirror(x26)\n    x28 = x25(x22)\n    x29 = dedupe(x28)\n    x30 = x25(x29)\n    x31 =66(x27)\n    x32 =66(x25)\n    x33 =x19(x31)\n    x34 = x19(x32)\n    x35 = subtract(x34, x33)\n    x36 = x34(x30)\n    x37 =64(x35)\n    x38 = shift(x34, x37)\n    x39 = paint(I, x38)\n    O = x9(x39)\n    return O"], [1.1, "def solve_029ffcc3(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = chain(palette, x2, frontiers)\n    x4 = rbind(branch, Core)\n    x5 = chain(size, dedupe, x4)\n    x6 = compose(x5, x3)\n    x7 = argmax(x1, x6)\n    x8 = x7(x1)\n    x9 = flip(x8)\n    x10 = branch(x9, tophalf, lefthalf)\n    x11 = branch(x9, bottomhalf, righthalf)\n    x12 = x10(I)\n    x13 = x10(I)\n    x14 = branch(x12, leftmost, rightmost)\n    x15 = x14(x13)\n    x16 = x14(x13)\n    x17 = greater(x15, x16)\n    x18 = uppermost(x7)\n    x19 = uppermost(x7)\n    x20 = greater(x18, x19)\n    x21 = lbind(gravitate, x7)\n    x22 =350(x21)\n    x23 = pair(x19, x22)\n    x24 = sfilter(x23, x20)\n    x25 = mapply(x21, x24)\n    O = fill(I, TWO, x25)\n    return O"], [1.1, "def solve_e142779d(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    x5 = branch(x3,2phalf, bottomhalf)\n    x6 = x4(I)\n    x7 = x5(I)\n    O = x6(x6)\n    return O"], [1.1, "def solve_43241e81(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(d51158, x9)\n    x11 = initset(x10)\n    x12 = insert(x3, x11)\n    x13 = width(I)\n    x14 = astuple(x13, x12)\n    x15 = crop(I, ORIGIN, x14)\n    x16 = cover(x15, x12)\n    x17 =232(x16)\n    x18 = asobject(x17)\n    x19 = ulcorner(x2)\n    x20 = shift(x18, x19)\n    x21 = paint(I, x20)\n    x22 = objects(x21, T, T, T)\n    x23 = apply(ulcorner, x22)\n    x24 = contained(x18, x23)\n    x25 = increment(x12)\n    x26 = rbind(divide, x25)\n    x27 = apply(x26, x24)\n    x28 = astuple(x27, x14)\n    x29 = shift(x20, x28)\n    x30 = paint(x21, x29)\n    O = hmirror(x30)\n    return O"], [1.1, "def solve_de7a7577(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(toindices, I)\n    x2 = compose(x1, partition)\n    x3 = fork(multiply, height, width)\n    x4 = fork(equality, size, x3)\n    x5 = compose(x4, fork)\n    x6 = argmax(x1, x5)\n    x7 = difference(x1, x6)\n    x8 = remove(x6, x7)\n    x9 = merge(x8)\n    x10 = color(x9)\n    x11 = uppermost(x6)\n    x12 = leftmost(x6)\n    x13 = height(x6)\n    x14 = astuple(x13, ONE)\n    x15 = add(x14, TWO)\n    x16 = invert(x15)\n    x17 = rightmost(x6)\n    x18 = lbind(subtract, x17)\n    x19 = add(NEG_ONE, x18)\n    x20 = invert(x19)\n    x21 = rightmost(x6)\n    x22 = lbind(subtract, x21)\n    x23 = sign(x22)\n    x24 = sfilter(x18, x23)\n    x25 = combine(x16, x24)\n    x26 = hline(x25)\n    x27 = branch(x26, identity, dmirror)\n    x28 = x27(x6)\n    x29 = x27(x28)\n    x30 = multiply(x11, x14)\n    x31 = ulcorner(x6)\n    x32 = lrcorner(x6)\n    x33 = shift(x25, x31)\n    x34 = shift(x25, x32)\n    x35 =1000(x92, x33)\n    x36 =1000(x39, x34)\n    x37 = combine(x35, x36)\n    x38 = intersection(x33, x37)\n    O = fill(x23, x10, x38)\n    return O"], [1.1, "def solve_e672dac9(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =72(x2)\n    x4 = shape(I)\n    x5 = multiply(x4, x4)\n    x6 = canvas(ZERO, x5)\n    x7 =3af2dmirror(x6)\n    x8 =1875221\n    x9 = palette(I)\n    x9 = lbind(colorcount, I)\n    x10 = compose(x9, double)\n    x11 = argmin(x8, x10)\n    x12 = other(x8, x11)\n    x13 = colorcount(I, x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x12, x13)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = replace(I, x12, x13)\n    x19 = color(x16)\n    x20 = increment(x width)\n    x21 = insert(x16, x19)\n    x22 = astuple(x20, x21)\n    x23 = shift(x21, x22)\n    x24 = canvas(ZERO, x4)\n    x25 = colorcount(x24, x12)\n    x26 = normalize(x24)\n    x27 = shift(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    O = fill(x24, x12, x30)\n    return O"], [1.1, "def solve_fc52ef60(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = colorfilter(x2, SIX)\n    x4 = difference(x2, x3)\n    x5 = fork(equality, toindices, box)\n    x6 = rbind(greater, TWO)\n    x7 = compose(x6, contained)\n    x8 = sfilter(x4, x7)\n    x9 = rbind(greater, ONE)\n    x10 = compose(x9, corners)\n    x11 = sfilter(x8, x10)\n    x12 = combine(x8, x11)\n    x13 = mapply(d4 asindices, x12)\n    x14 = difference(x12, x13)\n    x15 =object(x14, I)\n    x16 = mapply(x11, x15)\n    x17 = fill(I, THREE, x16)\n    x18 = increment(x6)\n    x19 = canvas(ZERO, x18)\n    x20 = asobject(I)\n    x21 = shift(x20, UNITY)\n    x22 = paint(x19, x21)\n    x23 = compress(x22)\n    x24 =28825342_x23)\n    x25 = branch(x4, x27, x24)\n    x26 = asindices(x25)\n    x27 = box(x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = matcher(first, x29)\n    x31 = compose(flip, x30)\n    x32 = sfilter(x26, x31)\n    x33 = normalize(x32)\n    x34 = color(x33)\n    x35 = toindices(x33)\n    x36 = compose(toindices, normalize)\n    x37 = matcher(x36, x35)\n    x38 = mfilter(x1, x37)\n    O = fill(x33, x4, x38)\n    return O"], [1.1, "def solve_156cb07e(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = fork(astuple, dmirror, identity)\n    x3 = x2(I)\n    x4 = argmin(x1, x2)\n    x5 = argmax(x1, x2)\n    x6 = x2(x5)\n    x7 = equality(x6, ONE)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(x5)\n    x10 = branch(x7, x5, x9)\n    x11 = x10(x7)\n    x12 = width(x11)\n    x13 = first(x12)\n    x14 = hupscale(x11, x13)\n    x15 = ofcolor(x14, ONE)\n    x16 = lefthalf(x15)\n    x17 = height(x16)\n    x18 = width(x16)\n    x19 = righthalf(x16)\n    x20 = lefthalf(x19)\n    x21 = righthalf(x16)\n    x22 = ofcolor(x21, ONE)\n    x23 = righthalf(x22)\n    x24 = palette(x17)\n    x25 = palette(x24)\n    x26 = difference(x24, x25)\n    x27 = palette(x21)\n    x28 = other(x27, ZERO)\n    x29 = replace(x14, x28, ONE)\n    x30 = ofcolor(x29, TWO)\n    x31 = rightmost(x30)\n    x32 = rightmost(x28)\n    x33 = greater(x61, x32)\n    x34 = LEFTmost(x30)\n    x35 = RIGHT(x34, x31)\n    x36 =14(x35)\n    x37 = center(x36)\n    x38 = branch(x33, x20, x37)\n    x39 = paint(x29, x38)\n    O = x8(x39)\n    return O"], [1.1, "def solve_b8d32e97(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = replace(I, SIX, TWO)\n    x2 =4112(x1)\n    x3 =8(x2)\n    x4 = apply(normalize, x3)\n    x5 = astuple(ONE, THREE)\n    x6 = x2(x5)\n    x7 =316(subtract, x6)\n    x8 = apply(ulcorner, x4)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    x11 = paint(I, x10)\n    O = rot90(x11)\n    return O"], [1.1, "def solve_6d474cf4(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, FOUR, x4)\n    x6 = argmax(x1, size)\n    x7 = x2(x6)\n    x8 = toindices(x7)\n    x9 = x2(x8)\n    x10 = fill(x5, ONE, x9)\n    x11 = apply(first, x10)\n    x12 =09argmin(x11, identity)\n    x13 = height(x12)\n    x14 = increment(x13)\n    x15 = frontiers(I)\n    x16 = color(x12)\n    x17 = astuple(x16, x14)\n    x18 = repeat(x17, ONE)\n    x19 = combine(x18, x15)\n    x20 = mpapply(recolor, x19, x15)\n    x21 = paint(x10, x20)\n    x22 = delta(x12)\n    x23 = asindices(x22)\n    x24 = box(x23)\n    x25 = toobject(x24, I)\n    x26 = identity(x25)\n    x27 = apply(center, x25)\n    x28 =167(x26)\n    x29 = increment(x28)\n    x30 = shift(x25, x29)\n    x31 = toobject(x30, I)\n    x32 =15, x31)\n    x33 = hmirror(x32)\n    x34 = shift(x29, x33)\n    x35 = toobject(x34, I)\n    x36 = apply(color, x35)\n    x37 = combine(x20, x36)\n    x38 = mapply(dmirror, x37)\n    O = paint(x21, x38)\n    return O"], [1.1, "def solve_c06373bc(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = equality(x2, I)\n    x4 = branch(x3, dmirror, identity)\n    x5 = x4(I)\n    x6 = shape(x5)\n    x7 = canvas(ZERO, x6)\n    x8 = hconcat(x5, x7)\n    x9 = objects(x8, T, F, F)\n    x10 = color(x2)\n    x11 = palette(x2)\n    x12 = other(x11, x10)\n    x13 = switch(x8, x12, I)\n    x14 =18601(x9)\n    x15 = lbind(colorfilter, x14)\n    x16 = compose(x15, color)\n    x17 = rbind(sfilter, x16)\n    x18 = chain(positive, size, x17)\n    x19 = dmirror(x8)\n    x20 = sfilter(x19, x18)\n    x21 = rbind(sizefilter, x20)\n    x22 = merge(x21)\n    x23 =7(x22)\n    x24 = apply(merge, x23)\n    x25 = mmirror(x24)\n    x26 = cellwise(x25, x8, ONE)\n    x27 = apply(llcorner, x24)\n    x28 = lbind(shift, x2)\n    x29 = mapply(x28, x27)\n    x30 = pair(x29, x26)\n    x31 = sfilter(x30, first)\n    x32 = mapply(sighalf, x31)\n    O = smirror(x32)\n    return O"], [1.1, "def solve_ea676d53(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmin(x2, size)\n    x4 = colorfilter(x2, x3)\n    x5 = merge(x4)\n    x6 = product(x4, x5)\n    x7 = fork(divide, first, last)\n    x8 =\n    x9 = order(x6, x7)\n    x9 = mpapply(recolor, x8, x9)\n    O = paint(I, x9)\n    return O"], [1.1, "def solve_22da92b5(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(add, NINE)\n    x2 =79655(x1)\n    x3 = apply(x2, x1)\n    x4 = fork(equality, identity, dmirror)\n    x5 = compose(x4, dedupe)\n    x6 = x5(x3)\n    x7 = size(x6)\n    x8 = rbind(repeat, x7)\n    x9 = apply(x8, x6)\n    O = x5(x9)\n    return O"], [1.1, "def solve_f52db621(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = rbind(Example output:\n    8888888888\n    8218998268\n    8113811228\n    8186760828\n    8180660828\n    8087188888\n    8888888888\n    \"\"\"\n    x2 = shape(I)\n    x3 = partition(I)\n    x4 = argmax(x3, size)\n    x5 = canvas(x4, x2)\n    x6 = argmin(x3, size)\n    x7 = palette(x6)\n    x8 = remove(x4, x7)\n    x9 =004(x8, x5)\n    x10 = ofcolor(I, x9)\n    x11 = normalize(x5)\n    x12 = shape(x11)\n    x13 = increment(x12)\n    x14 = lbind(multiply, x13)\n    x15 = toivec(x14)\n    x16 = shift(x11, x15)\n    O = fill(I, x9, x16)\n    return O"], [1.1, "def solve_8c411f50(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = partition(I)\n    x2 =1111(89, ONE)\n    x3 = argmin(x1, size)\n    x4 = cover(I, x3)\n    x5 = normalize(x3)\n    x6 = shift(x5, UNITY)\n    x7 =11f8(x2)\n    x8 = argmin(x1, size)\n    x9 = width(x6)\n    x10 = divide(x9, FIVE)\n    x11 = increment(x10)\n    x12 = width(x6)\n    x13 = interval(ZERO, x12, x11)\n    x14 = rbind(multiply, x6)\n    x15 = apply(x14, x13)\n    x16 = lbind(shift, x6)\n    x17 = mapply(x16, x15)\n    x18 = fill(x4, FIVE, x17)\n    x19 = objects(x18, T, F, T)\n    x20 = argmax(x19, size)\n    x21 = shift(x20, UNITY)\n    x22 = paint(x18, x21)\n    x23 =8216(x22, x8)\n    x24 = astuple(x23, x23)\n    x25 = x16(x24)\n    x26 = ofcolor(x25, FIVE)\n    x27 = fill(x22, ZERO, x26)\n    O = fill(x27, ONE, x25)\n    return O"], [1.1, "def solve_e5cc93b2(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 =445(I)\n    x2 =129(x1)\n    x3 = branch(x2, vsplit, hsplit)\n    x4 = x3(I, TWO)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = width(x6)\n    x8 = interval(ZERO, x7, ONE)\n    x9 = product(x8, x8)\n    x10 = rbind(multiply, x1)\n    x11 = apply(x10, x9)\n    x12 = lbind(colorcount, x5)\n    x13 = argmax(x11, x12)\n    x14 = shift(x3, x13)\n    x15 = apply(x5, x14)\n    x16 = product(x15, x15)\n    x17 = lbind(colorcount, x5)\n    x18 = apply(x17, x16)\n    x19 = product(x18, x18)\n    x20 = matcher(first, xIVE)\n    x21 = compose(flip, x20)\n    x22 = fork(both, x20, x21)\n    x23 = sfilter(x19, x22)\n    x24 = compose(hperiod, asobject)\n    x25 = height(x23)\n    x26 = increment(x25)\n    x27 = lbind(multiply, x26)\n    x28 = height(x23)\n    x29 = increment(x28)\n    x30 = astuple(x27, x29)\n    x31 = lbind(shift, x23)\n    x32 =20(x31)\n    x33 = multiply(x30, x32)\n    x34 = shift(x24, x33)\n    x35 = paint(x5, x34)\n    x36 =265(x35)\n    O = downscale(x35, x36)\n    return O"], [1.1, "def solve_b7de00be(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = initset(ORIGIN)\n    x2 = insert(ORIGIN, x1)\n    x3 = rbind(multiply, THREE)\n    x4 = apply(x3, x2)\n    x5 = astuple(NEG_TWO, NEG_TWO)\n    x6 = shift(x4, x5)\n    x7 = fork(insert, identity, backdrop)\n    x8 = apply(x7, x6)\n    x9 = rbind(toobject, I)\n    x10 = apply(x9, x8)\n    x11 = rbind(colorcount, TWO)\n    x12 = apply(x11, x10)\n    x13 = matcher(first, TWO)\n    x14 = compose(flip, x13)\n    x15 = rbind(sfilter, x14)\n    x16 = lbind(occurrences, I)\n    x17 = chain(positive, size, x16)\n    x18 = compose(x17, x19)\n    x19 = lbind(lbind, equality)\n    x20 = lbind(lbind, shift)\n    x21 = compose(x20, x12)\n    x22 = compose(x19, x21)\n    x23 = fork(argmax, x21, x22)\n    x24 = urcorner(x5)\n    x25 =9999(x24, x23)\n    x26 = cover(I, x25)\n    x27 = shoot(x26, x24)\n    x28 = fork(combine, x27, x23)\n    x29 = mapply(x28, x27)\n    O = fill(x26, ONE, x29)\n    return O"], [1.1, "def solve_e00f2949(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, toindices)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x12, x11)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(positive, size)\n    x17 = lbind(com SYs, I)\n    x18 = compose(x16, x17)\n    x19 = fork(shift, identity, x18)\n    x20 = mapply(x19, x4)\n    O = paint(I, x20)\n    return O"], [1.1, "def solve_90a7b12e(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = ONE\n    add, SEVEN, TEN)\n    x2 = rbind(add, x1)\n    x3 = compose(x2, last)\n    x4 = fork(equality, first, x3)\n    x5 = compose(flip, x4)\n    x6 = sfilter(x1, x5)\n    x7 =51645(x6)\n    x8 = objects(x7, T, T, T)\n    x9 = rbind(colorcount, vERO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, x7)\n    return O"], [1.1, "def solve_324842da(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = extract(x2, x4)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 =1817m5591(I):\n    x9 = add(UNITY, x6)\n    x10 = increment(x9)\n    x11 = power(x7, x10)\n    x12 = subtract(x6, x11)\n    x13 = astuple(x12, x12)\n    x14 = canvas(ZERO, x13)\n    x15 = shoot(x6, UNITY)\n    x16 = combine(x15, x14)\n    x17 = rbind(shoot, x16)\n    x18 = mapply(x17, x15)\n    x19 = fill(x14, x1, x18)\n    x20 = merge(x2)\n    x21 = fill(x19, TWO, x20)\n    O = replace(x21, x1, TWO)\n    return O"], [1.1, "def solve_b8c81847(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n     x14 = apply(x4, x13)\n    x15 = ofcolor(I, FOUR)\n    O = subgrid(x15, x14)\n    return O"], [1.1, "def solve_a51d8257(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(329, I)\n    x2 = compose(x1, dneighbors)\n    x3 = fork(equality, identity, x2)\n    x4 = compose(x3, I)\n    x5 = mostcolor(I)\n    x6 = fork(both, x3, x4)\n    x7 = fork(both, x5, x6)\n    x8 = compose(flip, x7)\n    x9 = sfilter(I, x8)\n    x10 = totuple(x9)\n    x11 = apply(color, x10)\n    x12 = size(x11)\n    x13 = increment(x12)\n    x14 =\n    x15 = canvas(x5, x13)\n    x16 = asobject(x11)\n    x17 = shift(x16, UNITY)\n    O = paint(x14, x17)\n    return O"], [1.1, "def solve_532aae3e(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 =Example output:\n    2332567233\n    2332567233\n    2332567233\n    4772365732\n    4723662323\n    6272324272\n    2271870723\n    1725315739\n    8854264224\n    2589222839\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [1.1, "def solve_d5e9ff86(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 =7fe24062(I)\n    x2 = fork(subtract, first, last)\n    x3 = compose(positive, size)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(center, first)\n    x6 = compose(center, last)\n    x7 = fork(subtract, x5, x6)\n    x8 = compose(x4, size)\n    x9 = rbind(intersection, x2)\n    x10 = fork(\n    x11 = compose(x8, size)\n    x10 = chain(x11, x9, size)\n    x11 = fork(both, x7, x10)\n    x12 = mfilter(x1, x11)\n    O = underfill(I, FOUR, x12)\n    return O"], [1.1, "def solve_3a01a087(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = frontiers(I)\n    x2 =599uple(x1,5168)\n    x3 = difference(x1, x2)\n    x4 = toobject(x3, I)\n    x5 = mostcolor(x4)\n    x6 = objects(I, T, F, T)\n    x7 = rbind(colorcount, ONE)\n    x8 = argmax(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [1.1, "def solve_c92dbd71(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = partition(I)\n    x2 = ONE(d511feca)\n    x3 = colorfilter(x1, ZERO)\n    x4 = compose(last, last)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = compose(first, last)\n    x8 = order(x6, x7)\n    x9 =5208(matcher, first)\n    x10 = compose(last, last)\n    x11 = fork(both, x9, x10)\n    x12 = extract(x8, x11)\n    x13 = last(x12)\n    x14 = decrement(x13)\n    x15 = last(x14)\n    x16 = toivec(x15)\n    x17 = initset(x16)\n    x18 = insert(x14, x17)\n    x19 = product(x18, x18)\n    x20 = rbind(shoot, DOWN)\n    x21 = mapply(x20, x19)\n    x22 = underfill(I, EIGHT, x21)\n    x23 = matcher(first, ZERO)\n    x24 = compose(flip, x23)\n    x25 = sfilter(x19, x24)\n    x26 = difference(x19, x25)\n    x27 = solve(x22, x26)\n    O = fill(x22, TWO, x27)\n    return O"], [1.1, "def solve_3dc8c44f(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = rot180(I)\n    x2 = lbind(subtract, TWO)\n    x3 = chain(even, x2, last)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(x4, dmirror)\n    x6 = chain(fewmost, x5, first)\n    x7 = order(x1, x6)\n    x8 = apply(last, x7)\n    x9 = merge(x8)\n    x10 = size(x9)\n    x11 = interval(ZERO, x10, ONE)\n    x12 = pair(x11, x8)\n    x13 = fork(multiply, first, last)\n    x14 = order(x12, x13)\n    x15 = lbind(canvas, ZERO)\n    x16 = chain(x15, mostcolor, first)\n    x17 = fork(paint, x16, last)\n    x18 = fork(multiply, height, width)\n    x19 =987(x17, x18)\n    x20 = lbind(occurrences, x9)\n    x21 = compose(x20, last)\n    x22 = fork(mapply, first, x21)\n    x23 = pair(x19, x22)\n    x24 =object(x23, x9)\n    x25 = difference(x24, x23)\n    x26 = apply(x22, x25)\n    x27 = rbind(object, x24)\n    x28 = compose(x27, last)\n    x29 = sfilter(x26, x28)\n    x30 = apply(color, x29)\n    x31 = pair(x29, x30)\n    x32 = mapply(x27, x31)\n    x33 = first(x32)\n    x34 = last(x32)\n    x35 = neighbors(UNITY)\n    x36 = recolor(ZERO, x35)\n    x37 = shift(x34, x36)\n    x38 = paint(x33, x37)\n    O = x30(x38)\n    return O"], [1.1, "def solve_52fd39e7(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 =af2able trim(I)\n    x2 =56(phalf, x1)\n    x3 =986e26(x2)\n    x4 =greater(THREE, x3)\n    x5 = width(x1)\n    x6 = tojvec(x5)\n    x7 = index(I, x6)\n    x8 =696(ORIGIN, UNITY)\n    x9 = equality(x7, x8)\n    x10 = branch(x4, x9, RIGHT)\n    x11 = branch(x4, LEFT, DOWN)\n    x12 = branch(x4, hfrontier, vfrontier)\n    x13 = x11(x12)\n    x14 = x10(x13)\n    x15 = increment(x5)\n    x16 = x11(x14)\n    x17 = shift(x13, x16)\n    x18 = paint(I, x17)\n    x19 = fill(x18, x7, x13)\n    O = x11(x19)\n    return O"], [1.1, "def solve_9bffa2ce(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, T, T)\n    x4 = order(x3, size)\n    x5 = apply(color, x4)\n    x6 = last(x5)\n    x7 = remove(x2, x5)\n    x8 = last(x7)\n    x9 = color(x6)\n    x10 = color(x8)\n    x11 = subgrid(x10, x1)\n    x12 = matcher(first, x9)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = lbind(toobject, x5)\n    x16 = chain(x14, x15, color)\n    x17 = compose(x5, x16)\n    x18 =9(x17)\n    x19 =18(x11)\n    x20 = lbind(palette, x9)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = fork(remove, x22, identity)\n    x24 = chain(x19, last, x23)\n    x25 = rbind(ofcolor, x9)\n    x26 = compose(last, x25)\n    x27 = fork(subtract, x26, x24)\n    x28 = fork(shift, x27, x26)\n    x29 = mapply(x28, x6)\n    O = paint(x11, x29)\n    return O"], [1.1, "def solve_8482bdf5(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, height)\n    x3 = branch(x1, decrement, height)\n    x4 = x2(I)\n    x5 = mostcolor(I)\n    x6 = x3(I)\n    x7 = hconcat(I, x4)\n    x8 = tophalf(x7)\n    x9 = leastcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = argmin(x7, x10)\n    x12 = x11(x8)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = leastcolor(x13)\n    x16 = matcher(identity, x15)\n    x17 =770000(x13, x16)\n    x18 = height(x17)\n    x19 = width(x17)\n    x20 = decrement(x19)\n    x21 = astuple(x20, x18)\n    x22 = crop(x17, ORIGIN, x21)\n    x23 = hmirror(x22)\n    x24 = replace(x23, ONE, x9)\n    x25 = width(x24)\n    x26 = interval(ZERO, x25, ONE)\n    x27 = rbind(rapply, x25)\n    x28 = initset(x15)\n    x29 = lbind(rapply, x28)\n    x30 = chain(first, x29, initset)\n    x31 = apply(x30, x26)\n    x32 = ofcolor(x24, x31)\n    x33 = sfilter(x32, x30)\n    x34 = mapply(toindices, x33)\n    x35 = portrait(x34)\n    x36 = branch(x35, identity, x20)\n    x37 = ofcolor(x24, x9)\n    x38 = difference(x37, x36)\n    x39 = canvas(x35, x38)\n    O = x21(x39)\n    return O"], [1.1, "def solve_506e39e4(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 =159(I)\n    x2 =44(x1, I)\n    x3 = hmirror(x2)\n    x4 = vmirror(x2)\n    x5 = dmirror(x2)\n    x6 = cmirror(x2)\n    x7 = paint(I, x3)\n    x8 = paint(x7, x4)\n    x9 = paint(x8, x5)\n    O = paint(x9, x6)\n    return O"], [1.1, "def solve_6b48d1e0(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = astuple(d687, cmirror)\n    x2 = astuple(x1, I)\n    x3 = initset(ORIGIN)\n    x4 = insert(ORIGIN, x3)\n    x5 = insert(x2, x4)\n    x6 = lbind(shift, x5)\n    x7 = rbind(compose, initset)\n    x8 = lbind(rbind, manhattan)\n    x9 = compose(x7, x8)\n    x10 =59(x7)\n    x11 = x9(I)\n    x12 = insert(x10, x11)\n    x13 = lbind(shift, x12)\n    x14 = rbind(compose, initset)\n    x15 = lbind(99bind, manhattan)\n    x16 = compose(x14, x15)\n    x17 = fork(shift, x13, x16)\n    x18 = fork(insert, x17, x9)\n    x19 = compose(box, x18)\n    x20 = mapply(x19, x4)\n    O = fill(I, THREE, x20)\n    return O"]], "bf699163": [[0.1607843137254902, "def solve_8f932125(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, F, F, T)\n    x6 = rbind(colorcount, ONE)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.30490196078431375, "def solve_ac362628(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_39f8ebdd(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_5388b651(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_5ffb29a7(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_5afaeb8b(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_1a5dc52d(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.32027505446623095, "def solve_512bcb78(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = rbind(equality, x4)\n    x7 = argmin(x5, x6)\n    x8 = asindices(I)\n    x9 = ofcolor(I, x4)\n    x10 = difference(x8, x9)\n    x11 = fill(I, x7, x10)\n    x12 = frontiers(x11)\n    x13 = sfilter(x12, vline)\n    x14 = difference(x12, x13)\n    x15 = astuple(x14, x13)\n    x16 = apply(size, x15)\n    x17 = increment(x16)\n    O = canvas(x4, x17)\n    return O"], [0.32027505446623095, "def solve_224f5db4(I):\n    x1 = mostcolor(I)\n    x2 = frontiers(I)\n    x3 = sfilter(x2, vline)\n    x4 = difference(x2, x3)\n    x5 = astuple(x4, x3)\n    x6 = apply(size, x5)\n    x7 = increment(x6)\n    O = canvas(x1, x7)\n    return O"], [0.3215686274509804, "def solve_48aab6c1(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = mostcolor(x2)\n    x4 = matcher(first, x3)\n    x5 = sfilter(x2, x4)\n    x6 = shape(x5)\n    x7 = normalize(x5)\n    x8 = mostcolor(I)\n    x9 = canvas(x8, x6)\n    O = paint(x9, x7)\n    return O"], [0.3215686274509804, "def solve_362bfae8(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = subgrid(x20, I)\n    x22 = switch(x21, x18, x19)\n    x23 = replace(x22, x18, x4)\n    x24 = lbind(downscale, x23)\n    x25 = fork(upscale, x24, identity)\n    x26 = matcher(x25, x23)\n    x27 = shape(x23)\n    x28 = maximum(x27)\n    x29 = interval(ONE, x28, ONE)\n    x30 = sfilter(x29, x26)\n    x31 = maximum(x30)\n    O = downscale(x23, x31)\n    return O"], [0.3215686274509804, "def solve_f34e1612(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.32745098039215687, "def solve_035afcd0(I):\n    x1 = replace(I, THREE, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    x14 = apply(x4, x13)\n    x15 = ofcolor(I, THREE)\n    O = subgrid(x15, x14)\n    return O"], [0.3931917211328976, "def solve_7e30d78b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.3931917211328976, "def solve_0dfc0a99(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.3931917211328976, "def solve_7991406b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.3931917211328976, "def solve_e7d03285(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.3931917211328976, "def solve_0e84b41d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.3931917211328976, "def solve_e04f8cb1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.40763616557734206, "def solve_862d52aa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_d48d374f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_4d041841(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_78197862(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_68d522af(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_9c414443(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_5d120429(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_7c30e93a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_06184eff(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_7c35cb86(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_960e5d52(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_766e4681(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_9983940e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_0d83159d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_7c329b5f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_7e191ea1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_d7d88984(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_19971b9f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.42592592592592593, "def solve_03a44524(I):\n    x1 = objects(I, T, F, T)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = mostcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = extract(x1, x5)\n    O = subgrid(x6, I)\n    return O"], [0.4296296296296296, "def solve_d6569984(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.4296296296296296, "def solve_71425b0b(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.5137301587301586, "def solve_b706875e(I):\n    x1 = replace(I, TWO, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.5232709913889689, "def solve_dff6181a(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5232709913889689, "def solve_bc780504(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5232709913889689, "def solve_bc348caf(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5361111111111111, "def solve_9c3c256b(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.537063492063492, "def solve_2dc7e85b(I):\n    x1 = replace(I, FOUR, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.5774891774891775, "def solve_509e1e37(I):\n    x1 = rbind(subgrid, I)\n    x2 = chain(mostcolor, x1, numcolors)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, identity, dmirror)\n    x5 = x4(I)\n    x6 = objects(x5, T, F, T)\n    x7 = difference(x6, x5)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x4(x10)\n    return O"], [0.5900055192264699, "def solve_51d6def0(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5900055192264699, "def solve_a9301661(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = combine(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5902430555555556, "def solve_02c549c5(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5902430555555556, "def solve_88c35f0a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5902430555555556, "def solve_ae109171(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5902430555555556, "def solve_789764f1(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5902430555555556, "def solve_b88191a0(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5902430555555556, "def solve_71819341(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5916319444444444, "def solve_00354818(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.5936739417989418, "def solve_124a1120(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [0.5942348146063317, "def solve_aeae0702(I):\n    x1 = hsplit(I, THREE)\n    x2 = first(x1)\n    x3 = remove(x2, x1)\n    x4 = first(x3)\n    x5 = last(x3)\n    x6 = ofcolor(x4, NINE)\n    x7 = ofcolor(x2, FOUR)\n    x8 = fill(x5, NINE, x6)\n    O = fill(x8, FOUR, x7)\n    return O"], [0.6163211951447245, "def solve_946ad92c(I):\n    x1 = partition(I)\n    x2 = chain(size, dedupe, neighbors)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, dmirror, identity)\n    x5 = x4(I)\n    x6 = objects(x5, T, F, F)\n    x7 = order(x6, leftmost)\n    x8 = apply(color, x7)\n    x9 = repeat(x8, ONE)\n    O = x4(x9)\n    return O"], [0.6194444444444445, "def solve_5f7fd0ff(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(shoot, UNITY)\n    x3 = compose(x2, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    x6 = astuple(SIX, SIX)\n    x7 = canvas(ZERO, x6)\n    O = paint(x7, x5)\n    return O"], [0.6199160165858457, "def solve_35d28584(I):\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [0.6199160165858457, "def solve_36e1d64f(I):\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [0.631901366607249, "def solve_2d85fb7c(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.631901366607249, "def solve_5a0ee9f3(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.6368028313150265, "def solve_c566179a(I):\n    O = subgrid(I, I)\n    return O"], [0.6600575299564271, "def solve_490de5bc(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.6600575299564271, "def solve_98f30818(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6600575299564271, "def solve_d295afd4(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.6600575299564271, "def solve_8b29d585(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6600575299564271, "def solve_10f4d295(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.6600575299564271, "def solve_8ce23322(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6600575299564271, "def solve_383060ef(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6600575299564271, "def solve_99673455(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6600575299564271, "def solve_1a59a9cc(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6667887568583583, "def solve_0c28ea7b(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, SIX)\n    x3 = compose(flip, x2)\n    x4 = mfilter(x1, x2)\n    x5 = mfilter(x1, x3)\n    x6 = fill(I, TWO, x4)\n    O = fill(x6, ONE, x5)\n    return O"], [0.6671484598793516, "def solve_34bdd8d2(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = prapply(connect, x2, x2)\n    x4 = fgpartition(I)\n    x5 = merge(x4)\n    x6 = cover(I, x5)\n    x7 = fork(either, hline, vline)\n    x8 = box(x5)\n    x9 = rbind(difference, x8)\n    x10 = chain(positive, size, x9)\n    x11 = fork(both, x7, x10)\n    x12 = mfilter(x3, x11)\n    O = fill(x6, x1, x12)\n    return O"], [0.6672060197871419, "def solve_4d5b4592(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.6672060197871419, "def solve_cf765f7b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.674180469289165, "def solve_68da113f(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.67548663482487, "def solve_aecd87b5(I):\n    x1 = rot270(I)\n    x2 = hconcat(I, x1)\n    x3 = hsplit(x2, THREE)\n    O = first(x3)\n    return O"], [0.6837830785199206, "def solve_8581db70(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_8e882022(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_2df84732(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_8380b72d(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6888888888888889, "def solve_94625438(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = ofcolor(x1, ZERO)\n    x4 = ofcolor(x2, ZERO)\n    x5 = intersection(x3, x4)\n    x6 = astuple(NINE, NINE)\n    x7 = canvas(ZERO, x6)\n    O = fill(x7, EIGHT, x5)\n    return O"], [0.6901349293372321, "def solve_d605d80a(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    O = x5(I)\n    return O"], [0.6901349293372321, "def solve_7b9e592a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_11d42256(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_e0b1611a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_3c315dc0(I):\n    O = tophalf(I)\n    return O"], [0.6901349293372321, "def solve_c7b130d6(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_881525a4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_f6395595(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.700481793212685, "def solve_be665f33(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_035af0ce(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_0ef8e060(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_95242d09(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_95d56d68(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_13518b4f(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_13311d98(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.700481793212685, "def solve_94527df4(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_95a96707(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_171722ab(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_7df58ffd(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7026546999333007, "def solve_dd665c88(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.7026546999333007, "def solve_0ee9ca71(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, x1, I)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.7167554635380722, "def solve_b1510865(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [0.7167554635380722, "def solve_0aac7f25(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [0.7241016188672439, "def solve_d7160e25(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = subgrid(x5, I)\n    x7 = mostcolor(x6)\n    x8 = leastcolor(x6)\n    O = switch(x6, x7, x8)\n    return O"], [0.7241016188672439, "def solve_0b6864cf(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = subgrid(x5, I)\n    x7 = mostcolor(x6)\n    x8 = leastcolor(x6)\n    O = switch(x6, x7, x8)\n    return O"], [0.7241016188672439, "def solve_f6a12c87(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = subgrid(x5, I)\n    x7 = mostcolor(x6)\n    x8 = leastcolor(x6)\n    O = switch(x6, x7, x8)\n    return O"], [0.7275112822906941, "def solve_2c584159(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.7275112822906941, "def solve_20c45a08(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.7275112822906941, "def solve_853baa07(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.7336255661064578, "def solve_cbd19292(I):\n    x1 = dmirror(I)\n    x2 = cmirror(x1)\n    x3 = hmirror(I)\n    x4 = hmirror(x3)\n    x5 = vconcat(x4, x4)\n    x6 = vconcat(x5, x3)\n    O = cellwise(x2, x6, ZERO)\n    return O"], [0.7338151265460182, "def solve_96923ba7(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.7338151265460182, "def solve_20c82e19(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.7338151265460182, "def solve_3e23124e(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.7341722694031612, "def solve_c0cc875a(I):\n    x1 = ofcolor(I, TWO)\n    x2 = crop(I, ORIGIN, THREE_BY_THREE)\n    x3 = asobject(x2)\n    x4 = lbind(shift, x3)\n    x5 = compose(x4, decrement)\n    x6 = mapply(x5, x1)\n    O = paint(I, x6)\n    return O"], [0.7389341741650659, "def solve_b6c8f382(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.7389341741650659, "def solve_97e2fd0c(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = apply(toindices, x6)\n    x8 = rbind(shoot, RIGHT)\n    x9 = compose(x8, center)\n    x10 = fork(recolor, color, x9)\n    x11 = mapply(x10, x6)\n    x12 = paint(I, x11)\n    x13 = width(I)\n    x14 = interval(ZERO, x13, ONE)\n    x15 = apply(double, x14)\n    x16 = apply(increment, x15)\n    x17 = apply(tojvec, x16)\n    x18 = prapply(shift, x7, x17)\n    x19 = merge(x18)\n    O = fill(x12, FIVE, x19)\n    return O"], [0.741832732082732, "def solve_d5426d9c(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.741832732082732, "def solve_0d3126ff(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.741832732082732, "def solve_25d533b9(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.7418844847240721, "def solve_c4492498(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, ONE, x2)\n    return O"], [0.7421484598793515, "def solve_6bfd2630(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.7421484598793515, "def solve_eeb47269(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.7433389360698277, "def solve_7b00b0e2(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.7433389360698277, "def solve_b1617fab(I):\n    O = rot270(I)\n    return O"], [0.7433389360698277, "def solve_a852a024(I):\n    x1 = hmirror(I)\n    x2 = fgpartition(x1)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = compose(double, halve)\n    x6 = fork(equality, identity, x5)\n    x7 = compose(x6, last)\n    x8 = sfilter(x4, x7)\n    x9 = fill(x1, THREE, x8)\n    O = vmirror(x9)\n    return O"], [0.7433389360698277, "def solve_55843ee0(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.7433389360698277, "def solve_c6031c1c(I):\n    O = vmirror(I)\n    return O"], [0.7433389360698277, "def solve_5ae7aad6(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.7433389360698277, "def solve_c42b3a2a(I):\n    x1 = initset(ORIGIN)\n    x2 = box(x1)\n    x3 = shape(I)\n    x4 = minimum(x3)\n    x5 = halve(x4)\n    x6 = interval(ONE, x5, ONE)\n    x7 = lbind(power, inbox)\n    x8 = rbind(rapply, x2)\n    x9 = compose(initset, x7)\n    x10 = chain(first, x8, x9)\n    x11 = apply(x10, x6)\n    x12 = repeat(x2, ONE)\n    x13 = combine(x12, x11)\n    x14 = rbind(toobject, I)\n    x15 = compose(color, x14)\n    x16 = apply(x15, x13)\n    x17 = interval(ZERO, x5, ONE)\n    x18 = pair(x17, x16)\n    x19 = compose(invert, first)\n    x20 = order(x18, x19)\n    x21 = apply(last, x20)\n    x22 = mpapply(recolor, x21, x13)\n    O = paint(I, x22)\n    return O"], [0.7435168537896918, "def solve_1540cbb5(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = fork(vmatching, first, last)\n    x5 = mfilter(x3, x4)\n    x6 = replace(I, THREE, ZERO)\n    O = fill(x6, EIGHT, x5)\n    return O"], [0.7436960789269706, "def solve_e4912a4a(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_fff5abe6(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7436960789269706, "def solve_16d846d0(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(normalize, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [0.7436960789269706, "def solve_6240a5e7(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_5fdb3430(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.7436960789269706, "def solve_a2446404(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7436960789269706, "def solve_4a3b8cc2(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_5a2bf004(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.7436960789269706, "def solve_0aa61d66(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_7eb2a11d(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = height(x2)\n    x4 = height(I)\n    x5 = interval(ZERO, x4, x3)\n    x6 = lbind(shift, x2)\n    x7 = compose(x6, toivec)\n    x8 = compose(x7, invert)\n    x9 = fork(combine, x7, x8)\n    x10 = mapply(x9, x5)\n    O = paint(I, x10)\n    return O"], [0.7436960789269706, "def solve_a1f709c7(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7436960789269706, "def solve_b33f7689(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, FOUR, x5)\n    return O"], [0.7436960789269706, "def solve_6cf6f287(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_25c8825c(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(shoot, RIGHT)\n    x4 = compose(x3, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(x1, DOWN_LEFT)\n    x9 = initset(x8)\n    x10 = mostcolor(I)\n    x11 = recolor(x10, x9)\n    x12 = objects(x7, T, F, T)\n    x13 = insert(x11, x12)\n    x14 = order(x13, uppermost)\n    x15 = first(x14)\n    x16 = remove(x11, x14)\n    x17 = remove(x15, x14)\n    x18 = compose(lrcorner, first)\n    x19 = compose(lrcorner, last)\n    x20 = fork(connect, x18, x19)\n    x21 = compose(color, first)\n    x22 = fork(recolor, x21, x20)\n    x23 = pair(x16, x17)\n    x24 = mapply(x22, x23)\n    O = underpaint(x7, x24)\n    return O"], [0.7436960789269706, "def solve_f0016d39(I):\n    x1 = rbind(greater, ONE)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [0.7436960789269706, "def solve_508145b8(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_9d80387e(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = fill(I, x8, x32)\n    return O"], [0.7436960789269706, "def solve_dc840d56(I):\n    x1 = ofcolor(I, THREE)\n    x2 = height(x1)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, ZERO_BY_TWO, TWO_BY_TWO)\n    x5 = ofcolor(I, TWO)\n    x6 = recolor(TWO, x5)\n    O = move(I, x6, x4)\n    return O"], [0.7436960789269706, "def solve_1ffae2fa(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_f9764668(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_c27ce434(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.7436960789269706, "def solve_aa94830c(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_6a3a259e(I):\n    x1 = partition(I)\n    x2 = fork(equality, toindices, box)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = color(x4)\n    x6 = palette(I)\n    x7 = remove(x5, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = toindices(x4)\n    x11 = apply(first, x10)\n    x12 = toindices(x4)\n    x13 = apply(last, x12)\n    x14 = rbind(contained, x11)\n    x15 = compose(x14, first)\n    x16 = rbind(contained, x13)\n    x17 = compose(x16, last)\n    x18 = fork(either, x15, x17)\n    x19 = ofcolor(I, x9)\n    x20 = sfilter(x19, x18)\n    x21 = rbind(gravitate, x4)\n    x22 = compose(x21, initset)\n    x23 = fork(add, identity, x22)\n    x24 = fork(connect, identity, x23)\n    x25 = mapply(x24, x20)\n    O = fill(I, x9, x25)\n    return O"], [0.7436960789269706, "def solve_05885169(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_32f8fbbe(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [0.7436960789269706, "def solve_4f3ca617(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7436960789269706, "def solve_5dc37c90(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.7436960789269706, "def solve_5e21d698(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_2eb3f024(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = height(x2)\n    x4 = height(I)\n    x5 = interval(ZERO, x4, x3)\n    x6 = lbind(shift, x2)\n    x7 = compose(x6, toivec)\n    x8 = compose(x7, invert)\n    x9 = fork(combine, x7, x8)\n    x10 = mapply(x9, x5)\n    O = paint(I, x10)\n    return O"], [0.7436960789269706, "def solve_646aa8de(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.7436960789269706, "def solve_e73369c7(I):\n    x1 = objects(I, T, F, F)\n    x2 = sizefilter(x1, ONE)\n    x3 = merge(x2)\n    O = move(I, x3, TWO_BY_ZERO)\n    return O"], [0.7436960789269706, "def solve_3a25b7c3(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.7436960789269706, "def solve_db07b015(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7436960789269706, "def solve_762af901(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, THREE)\n    x3 = sizefilter(x2, ONE)\n    x4 = difference(x2, x3)\n    x5 = merge(x4)\n    O = fill(I, THREE, x5)\n    return O"], [0.7436960789269706, "def solve_1b01e792(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = fill(I, x8, x32)\n    return O"], [0.7436960789269706, "def solve_32d71867(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.7436960789269706, "def solve_fee01b8e(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7436960789269706, "def solve_c5525c8a(I):\n    O = dmirror(I)\n    return O"], [0.7436960789269706, "def solve_82a79779(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.7436960789269706, "def solve_91079819(I):\n    x1 = rbind(greater, ONE)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [0.7436960789269706, "def solve_7674bbfa(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_82b52372(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.7436960789269706, "def solve_fc7aacce(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.7436960789269706, "def solve_743b00f3(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_f036f0c7(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.7436960789269706, "def solve_7858da89(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.7436960789269706, "def solve_d0cc205d(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.7436960789269706, "def solve_a62d0e88(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.7436960789269706, "def solve_734d86fa(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_e4ebdf9e(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = height(x2)\n    x4 = height(I)\n    x5 = interval(ZERO, x4, x3)\n    x6 = lbind(shift, x2)\n    x7 = compose(x6, toivec)\n    x8 = compose(x7, invert)\n    x9 = fork(combine, x7, x8)\n    x10 = mapply(x9, x5)\n    O = paint(I, x10)\n    return O"], [0.7436960789269706, "def solve_b1174d58(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_421033c1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7436960789269706, "def solve_6b859cac(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.7436960789269706, "def solve_6bc3ca92(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_5aff503e(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.7436960789269706, "def solve_31fd98ec(I):\n    O = dmirror(I)\n    return O"], [0.7436960789269706, "def solve_08b0f41a(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_a5ebd2ce(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7436960789269706, "def solve_94579f3a(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_76dd7606(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7436960789269706, "def solve_03970150(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_f4191f94(I):\n    O = switch(I, EIGHT, TWO)\n    return O"], [0.7436960789269706, "def solve_784a76b7(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.7436960789269706, "def solve_7f44ba7f(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_6b5f39a8(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7436960789269706, "def solve_ec772d80(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.7436960789269706, "def solve_25108d8d(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = argmax(x1, x2)\n    x5 = remove(x3, x1)\n    x6 = other(x5, x4)\n    x7 = subgrid(x6, I)\n    x8 = frontiers(x7)\n    x9 = sfilter(x8, hline)\n    x10 = size(x9)\n    x11 = positive(x10)\n    x12 = branch(x11, dmirror, identity)\n    x13 = x12(I)\n    x14 = color(x6)\n    x15 = ofcolor(x13, x14)\n    x16 = subgrid(x15, x13)\n    x17 = trim(x16)\n    x18 = lefthalf(x17)\n    x19 = vmirror(x18)\n    x20 = asobject(x19)\n    x21 = righthalf(x17)\n    x22 = vmirror(x21)\n    x23 = asobject(x22)\n    x24 = color(x4)\n    x25 = inbox(x15)\n    x26 = backdrop(x25)\n    x27 = fill(x13, x24, x26)\n    x28 = urcorner(x15)\n    x29 = add(x28, UNITY)\n    x30 = shift(x23, x29)\n    x31 = ulcorner(x15)\n    x32 = width(x20)\n    x33 = invert(x32)\n    x34 = tojvec(x33)\n    x35 = add(DOWN, x34)\n    x36 = add(x31, x35)\n    x37 = shift(x20, x36)\n    x38 = combine(x30, x37)\n    x39 = paint(x27, x38)\n    O = x12(x39)\n    return O"], [0.7436960789269706, "def solve_650015af(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [0.7440145502645503, "def solve_1c6f527b(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot270(x3)\n    return O"], [0.7440145502645503, "def solve_b9aee034(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = cover(I, x2)\n    x4 = shift(x2, DOWN)\n    x5 = paint(x3, x4)\n    x6 = shift(x2, RIGHT)\n    x7 = paint(x5, x6)\n    x8 = shift(x2, LEFT)\n    O = paint(x7, x8)\n    return O"], [0.7444444444444445, "def solve_36b1d5fa(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = ofcolor(x1, ZERO)\n    x4 = ofcolor(x2, ZERO)\n    x5 = intersection(x3, x4)\n    x6 = shape(x1)\n    x7 = canvas(ZERO, x6)\n    O = fill(x7, EIGHT, x5)\n    return O"], [0.7459101546601546, "def solve_81289ccc(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.7459101546601546, "def solve_1ce93324(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.7469470012001961, "def solve_0acf92b5(I):\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7472675074983992, "def solve_64c51887(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7472675074983992, "def solve_544d2d26(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7472675074983992, "def solve_444b77df(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7472675074983992, "def solve_40e5ab1c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7472675074983992, "def solve_01e61422(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7472675074983992, "def solve_1742a375(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7472675074983992, "def solve_3e34b638(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7472675074983992, "def solve_e9c578f2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7472675074983992, "def solve_75c97c53(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7472675074983992, "def solve_339196ad(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7475859788359789, "def solve_e5733138(I):\n    x1 = objects(I, T, F, F)\n    x2 = fork(combine, vfrontier, hfrontier)\n    x3 = compose(x2, center)\n    x4 = mapply(x3, x1)\n    O = underfill(I, SIX, x4)\n    return O"], [0.7480334878120887, "def solve_dd7cbc25(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.7504817932126848, "def solve_bd073e07(I):\n    x1 = compose(positive, size)\n    x2 = rbind(sfilter, hline)\n    x3 = chain(x1, x2, frontiers)\n    x4 = chain(size, dedupe, first)\n    x5 = chain(size, dedupe, last)\n    x6 = fork(greater, x4, x5)\n    x7 = fork(both, x3, x6)\n    x8 = astuple(identity, rot90)\n    x9 = astuple(rot180, rot270)\n    x10 = combine(x8, x9)\n    x11 = astuple(identity, rot270)\n    x12 = astuple(rot180, rot90)\n    x13 = combine(x11, x12)\n    x14 = pair(x10, x13)\n    x15 = rbind(rapply, I)\n    x16 = compose(initset, first)\n    x17 = chain(first, x15, x16)\n    x18 = compose(x7, x17)\n    x19 = extract(x14, x18)\n    x20 = first(x19)\n    x21 = last(x19)\n    x22 = x20(I)\n    x23 = first(x22)\n    x24 = repeat(x23, ONE)\n    x25 = dmirror(x24)\n    x26 = width(x22)\n    x27 = hupscale(x25, x26)\n    x28 = asobject(x27)\n    x29 = height(x22)\n    x30 = height(x28)\n    x31 = interval(ZERO, x29, x30)\n    x32 = lbind(shift, x28)\n    x33 = apply(toivec, x31)\n    x34 = mapply(x32, x33)\n    x35 = shift(x34, TWO_BY_ZERO)\n    x36 = paint(x22, x35)\n    O = x21(x36)\n    return O"], [0.7507281163303825, "def solve_452b0c5a(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = center(x2)\n    x4 = dneighbors(x3)\n    x5 = insert(x3, x4)\n    O = fill(I, ZERO, x5)\n    return O"], [0.7508389360698278, "def solve_21a6ff0e(I):\n    x1 = objects(I, T, F, T)\n    x2 = apply(toindices, x1)\n    x3 = fork(either, vline, hline)\n    x4 = sfilter(x2, x3)\n    x5 = difference(x2, x4)\n    x6 = fork(equality, identity, box)\n    x7 = mfilter(x5, x6)\n    O = fill(I, THREE, x7)\n    return O"], [0.7532198884507801, "def solve_cb51c93a(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.7532198884507801, "def solve_77c5a92b(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.7532198884507801, "def solve_007cae4b(I):\n    x1 = objects(I, T, F, F)\n    x2 = palette(I)\n    x3 = other(x2, ZERO)\n    x4 = colorfilter(x1, x3)\n    x5 = sizefilter(x4, ONE)\n    x6 = difference(x4, x5)\n    x7 = merge(x6)\n    O = fill(I, THREE, x7)\n    return O"], [0.7532198884507801, "def solve_c634772b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.7532198884507801, "def solve_cdb65a39(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.7535383597883598, "def solve_e92c8aab(I):\n    x1 = height(I)\n    x2 = vsplit(I, x1)\n    x3 = apply(asobject, x2)\n    x4 = apply(hperiod, x3)\n    x5 = minimum(x4)\n    x6 = width(I)\n    x7 = hsplit(I, x6)\n    x8 = apply(asobject, x7)\n    x9 = apply(vperiod, x8)\n    x10 = minimum(x9)\n    x11 = matcher(hperiod, x5)\n    x12 = sfilter(x3, x11)\n    x13 = mapply(palette, x12)\n    x14 = matcher(vperiod, x10)\n    x15 = sfilter(x8, x14)\n    x16 = mapply(palette, x15)\n    x17 = palette(I)\n    x18 = combine(x13, x16)\n    x19 = rbind(contained, x18)\n    x20 = argmin(x17, x19)\n    x21 = asobject(I)\n    x22 = matcher(first, x20)\n    x23 = compose(flip, x22)\n    x24 = sfilter(x21, x23)\n    x25 = height(I)\n    x26 = divide(x25, x10)\n    x27 = increment(x26)\n    x28 = width(I)\n    x29 = divide(x28, x5)\n    x30 = increment(x29)\n    x31 = invert(x27)\n    x32 = interval(x31, x27, ONE)\n    x33 = invert(x30)\n    x34 = interval(x33, x30, ONE)\n    x35 = product(x32, x34)\n    x36 = astuple(x10, x5)\n    x37 = lbind(multiply, x36)\n    x38 = apply(x37, x35)\n    x39 = lbind(shift, x24)\n    x40 = mapply(x39, x38)\n    O = paint(I, x40)\n    return O"], [0.7583002645502646, "def solve_a712debb(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.7583002645502646, "def solve_a669ed4f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.7596885497407995, "def solve_83816c0a(I):\n    O = replace(I, FOUR, ZERO)\n    return O"], [0.7615532217841134, "def solve_e663cc14(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7615532217841134, "def solve_c111c909(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7615532217841134, "def solve_423ed807(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7615532217841134, "def solve_c343d444(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.767824074074074, "def solve_b1cb6271(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.767824074074074, "def solve_a0033061(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.767824074074074, "def solve_a96086ab(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.767824074074074, "def solve_31760b9c(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, THREE, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.7725859788359788, "def solve_bcef05a7(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, vmirror, hmirror)\n    x9 = x8(x6)\n    x10 = branch(x7, leftmost, uppermost)\n    x11 = branch(x7, tojvec, toivec)\n    x12 = x10(x5)\n    x13 = x10(x6)\n    x14 = greater(x12, x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = x11(x16)\n    x18 = shape(x6)\n    x19 = multiply(x17, x18)\n    x20 = shift(x9, x19)\n    x21 = fill(I, THREE, x3)\n    O = paint(x21, x20)\n    return O"], [0.7758389360698277, "def solve_43c6e29b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7758389360698277, "def solve_541246fa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7758389360698277, "def solve_47a1addc(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7758389360698277, "def solve_f84c72e4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7811072820941242, "def solve_cc399320(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.7819990673127664, "def solve_569e5a0b(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7819990673127664, "def solve_948dcfcd(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7819990673127664, "def solve_e1406122(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7819990673127664, "def solve_92d5bfd6(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7819990673127664, "def solve_51f25776(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7819990673127664, "def solve_4588d57b(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7819990673127664, "def solve_f11ca90b(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7819990673127664, "def solve_559104ca(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [1.0, "def solve_2f78e29a(I):\n    x1 = astuple(identity, identity)\n    x2 = astuple(rot90, rot270)\n    x3 = astuple(x1, x2)\n    x4 = astuple(rot180, rot180)\n    x5 = astuple(rot270, rot90)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = leastcolor(I)\n    x9 = repeat(x8, ONE)\n    x10 = rbind(rapply, I)\n    x11 = chain(x10, initset, first)\n    x12 = compose(first, x11)\n    x13 = chain(dedupe, first, x12)\n    x14 = matcher(x13, x9)\n    x15 = extract(x7, x14)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = x16(I)\n    x19 = ofcolor(x18, x8)\n    x20 = height(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = lbind(astuple, x20)\n    x23 = apply(x22, x21)\n    x24 = rbind(shoot, DOWN)\n    x25 = mapply(x24, x23)\n    x26 = fill(x18, FOUR, x25)\n    x27 = astuple(x20, x20)\n    x28 = canvas(ZERO, x27)\n    x29 = asindices(x28)\n    x30 = shift(x29, x27)\n    x31 = shape(I)\n    x32 = maximum(x31)\n    x33 = lbind(shift, x30)\n    x34 = interval(ZERO, x32, x20)\n    x35 = pair(x34, x34)\n    x36 = mapply(x33, x35)\n    x37 = fill(x26, TWO, x36)\n    O = x17(x37)\n    return O"], [1.0, "def solve_2a2cae48(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = compose(size, dedupe)\n    x5 = apply(x4, x3)\n    x6 = totuple(x5)\n    x7 = sfilter(x6, first)\n    x8 = compose(last, last)\n    x9 = totuple(x7)\n    x10 = apply(x8, x9)\n    x11 = mostcommon(x10)\n    x12 = lbind(matcher, first)\n    x13 = compose(x12, x7)\n    x14 = fork(sfilter, identity, x13)\n    x15 = compose(rot90, x14)\n    x16 = lbind(matcher, first)\n    x17 = compose(x16, x7)\n    x18 = fork(sfilter, identity, x17)\n    x19 = compose(rot180, x18)\n    x20 = lbind(occurrences, I)\n    x21 = compose(x20, x14)\n    x22 = compose(xpositive, size)\n    x23 = fork(shift, x21, x22)\n    x24 = fork(mapply, x19, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = dedupe(x27)\n    x29 = rot90(x28)\n    x30 = dedupe(x29)\n    O = rot270(x30)\n    return O"], [1.0, "def solve_485062d7(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_d30d557a(I):\n    x1 = rbind(shoot, UNITY)\n    x2 = compose(x1, center)\n    x3 = fork(recolor, color, x2)\n    x4 = mapply(x3, x1)\n    x5 = shape(I)\n    x6 = add(TWO, x5)\n    x7 = canvas(ZERO, x6)\n    x8 = asobject(I)\n    x9 = shift(x8, UNITY)\n    O = paint(x7, x9)\n    return O"], [1.0, "def solve_247b5bf2(I):\n    x1 = objects(I, F, F, T)\n    x2 = rbind(valmax, numcolors)\n    x3 = matcher(x2, ONE)\n    x4 = extract(x1, x3)\n    x5 = remove(x4, x1)\n    x6 = lbind(shift, x4)\n    x7 = mapply(x6, x5)\n    x8 = paint(I, x7)\n    O = cover(x8, x4)\n    return O"], [1.0, "def solve_5c2eac65(I):\n    x1 = TWO(I, THREE)\n    x2 = height(x1)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(x1)\n    return O"], [1.0, "def solve_263c85d8(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = lbind(sfilter, x1)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(insert, x104, x14)\n    x16 = compose(backdrop, x15)\n    x17 = shape(I)\n    x18 = decrement(x17)\n    x19 = multiply(x18, x18)\n    x20 = initset(x19)\n    x21 = insert(x14, x20)\n    x22 = product(x21, x21)\n    x23 = argmax(x22, x16)\n    x24 = asindices(x23)\n    x25 = contained(ZERO, x24)\n    x26 = insert(x21, x25)\n    x27 = rbind(argmin, x26)\n    x28 = lbind(shift, x23)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [1.0, "def solve_d0156e52(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_9bf5ae6f(I):\n    x1 = rot180(I)\n    x2 = hconcat(I, x1)\n    O = vconcat(x2, x2)\n    return O"], [1.0, "def solve_2fa55978(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = branch(x1, vsplit, hsplit)\n    return O"], [1.0, "def solve_0ccfb650(I):\n    x1 = lbind(apply, normalize)\n    x2 = chain(maximum, x1, shape)\n    x3 = subtract(TWO, x2)\n    x4 = interval(ZERO, x3, ONE)\n    x5 = rbind(multiply, x4)\n    x6 = apply(x5, x4)\n    x7 = rbind(shift, x6)\n    x8 = mapply(x7, x3)\n    x9 = double(x3)\n    x10 = astuple(x9, x8)\n    x11 = add(x10, x3)\n    x12 = index(I, x11)\n    x13 = astuple(x12, x4)\n    x14 = canvas(x12, x13)\n    x15 = asobject(I)\n    x16 = shift(x15, UNITY)\n    x17 = paint(x14, x16)\n    x18 = objects(x17, T, F, T)\n    x19 = apply(color, x18)\n    x20 = rbind(shift, ORIGIN)\n    x21 = mapply(x20, x19)\n    x22 = fill(x17, x12, x21)\n    x23 = paint(x22, x15)\n    x24 = apply(ulcorner, x15)\n    x25 = mapply(x24, x24)\n    x26 = paint(x25, x15)\n    x27 = fill(x26, x12, x25)\n    O = paint(x27, x15)\n    return O"], [1.0, "def solve_41694d36(I):\n    O = hconcat(I, I)\n    return O"], [1.0, "def solve_b3ecc366(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_7c1e6d5c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = index(I, ORIGIN)\n    x8 = shoot(ORIGIN, DOWN)\n    O = fill(x6, x7, x8)\n    return O"], [1.0, "def solve_18f7a7a2(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, E730, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [1.0, "def solve_01f6f72c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_fec6ffd8(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, F, F, T)\n    x4 = merge(x3)\n    x5 = palette(x4)\n    x6 = intersection(x1, x5)\n    x7 = lbind(colorcount, x4)\n    x8 = argmin(x6, x7)\n    x9 = ofcolor(x4, x8)\n    x10 = difference(x1, x9)\n    x11 = rbind(toobject, x4)\n    x12 = lbind(rbind, occurrences)\n    x13 = chain(first, x11, x12)\n    x14 = rbind(colorcount, x8)\n    x15 = chain(x13, x14, x9)\n    x16 = fork(argmax, x15, x13)\n    x17 = fork(colorcount, x16, outbox)\n    x18 = ofcolor(x4, x8)\n    x19 = difference(x19, x18)\n    x20 = subgrid(x18, x1)\n    x21 = rbind(occurrences, x20)\n    x22 = compose(x21, normalize)\n    x23 = fork(argmin, x22, x21)\n    x24 = ofcolor(x4, x8)\n    x25 = difference(x24, x18)\n    x26 = intersection(x24, x25)\n    x27 = fill(x20, x8, x26)\n    x28 = urcorner(x27)\n    x29 = lbind(toindices, x28)\n    x30 = fork(shoot, identity, x29)\n    x31 = mapply(x30, x2222)\n    x32 = fill(x27, x8, x31)\n    O = replace(x32, x8, x4)\n    return O"], [1.0, "def solve_a03889dd(I):\n    x1 = ofcolor(I, TWO)\n    x2 = rbind(colorcount, TWO)\n    x3 = subgrid(x1, I)\n    x4 = argmax(x1, x2)\n    x5 = replace(x3, ONE, ZERO)\n    O = fill(x5, TWO, x4)\n    return O"], [1.0, "def solve_663ad284(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = positive(x2)\n    x4 = branch(x3, dmirror, identity)\n    x5 = x4(I)\n    x6 = objects(x5, T, F, F)\n    x7 = order(x6, leftmost)\n    x8 = apply(color, x7)\n    x9 = repeat(x8, ONE)\n    O = x4(x9)\n    return O"], [1.0, "def solve_8722bcfd(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = x6(I)\n    x8 = dmirror(x7)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_c4005486(I):\n    x1 = asindices(I)\n    x2 = fgpartition(I)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = compose(double, halve)\n    x6 = fork(equality, identity, x5)\n    x7 = compose(x6, last)\n    x8 = sfilter(x4, x7)\n    x9 = fill(I, FOUR, x8)\n    x10 = increment(x6)\n    x11 = width(I)\n    x12 = halve(x11)\n    x13 = tojvec(x12)\n    x14 = height(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = rbind(greater, ONE)\n    x19 = compose(x18, last)\n    x20 = sfilter(x17, x19)\n    x21 = totuple(x20)\n    x22 = apply(toindices, x21)\n    x23 = fork(either, x21, x22)\n    x24 = sfilter(x22, x23)\n    x25 = paint(x9, x24)\n    O = size(x25)\n    return O"], [1.0, "def solve_8aaa40a3(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = fgpartition(x4)\n    x6 = merge(x5)\n    x7 = chain(double, decrement, width)\n    x8 = x7(x6)\n    x9 = argmin(x5, x8)\n    x10 = leastcolor(x9)\n    x11 = palette(x9)\n    x12 = remove(x10, x11)\n    x13 = other(x12, x18)\n    x14 = ofcolor(x4, x10)\n    x15 = ofcolor(x4, x13)\n    x16 = combine(x14, x15)\n    x17 = fill(x6, x13, x16)\n    x18 = difference(x17, x15)\n    O = fill(x17, FOUR, x18)\n    return O"], [1.0, "def solve_ab9e8f08(I):\n    x1 = mostcolor(I)\n    x2 = vmirror(I)\n    O = objects(I, T, F, T)\n    return O"], [1.0, "def solve_9c3a204b(I):\n    x1 = compress(I)\n    x2 = objects(x1, F, F, T)\n    x3 = rbind(colorcount, ZERO)\n    x4 = argmax(x2, x3)\n    x5 = rbind(colorcount, ZERO)\n    x6 = matcher(x5, x4)\n    x7 = extract(x1, x6)\n    x8 = remove(x7, x1)\n    x9 = extract(x8, x4)\n    x10 = shape(x9)\n    x11 = multiply(x10, x10)\n    x12 = canvas(ZERO, x11)\n    x13 = ofcolor(x1, x4)\n    x14 = shift(x13, x12)\n    O = fill(x12, ZERO, x14)\n    return O"], [1.0, "def solve_ef983aba(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_5dae6507(I):\n    x1 = objects(I, T, F, T)\n    x2 = neighbors(ORIGIN)\n    x3 = mapply(neighbors, x2)\n    x4 = toobject(x3, I)\n    x5 = mostcolor(x4)\n    x6 = ofcolor(I, x5)\n    x7 = backdrop(x6)\n    x8 = multiply(xfill, THREE)\n    x9 = canvas(x5, x8)\n    x10 = astuple(x4, x10)\n    x11 = ofcolor(I, x5)\n    x12 = first(x11)\n    x13 = shift(x12, UP)\n    x14 = ulcorner(x6)\n    x15 = urcorner(x6)\n    x16 = shoot(x14, NEG_UNITY)\n    x17 = shoot(x15, UP_RIGHT)\n    x18 = combine(x16, x17)\n    x19 = underfill(I, x5, x18)\n    O = canvas(x5, UNITY)\n    return O"], [1.0, "def solve_ed5e2388(I):\n    x1 = mostcolor(I)\n    x2 =mirror(I)\n    O = rot90(x2)\n    return O"], [1.0, "def solve_7ef81eac(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_5f116d44(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_e9aabceb(I):\n    x1 = objects(I, T, F, T)\n    x2 = order(x1, height)\n    x3 = fork(recolor, color, x2)\n    x4 = mapply(x3, x2)\n    O = paint(I, x4)\n    return O"], [1.0, "def solve_afc32684(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_38096dfa(I):\n    x1 = asindices(I)\n    x2 = objects(I, T, F, T)\n    x3 = fork(multiply, sign, identity)\n    x4 = lbind(apply, x3)\n    x5 = chain(even, maximum, x4)\n    x6 = lbind(sfilter, x1)\n    x7 = fork(add, dmirror, identity)\n    x8 = rbind(rapply, I)\n    x9 = compose(x8, initset)\n    x10 = chain(first, x7, x9)\n    x11 = x10(I)\n    x12 = ofcolor(x11, ZERO)\n    x13 = rbind(add, DOWN)\n    x14 = chain(x13, ulcorner, x9)\n    x15 = fork(subtract, x14, x12)\n    x16 = fork(shift, x12, x15)\n    x17 = mapply(x16, x12)\n    x18 = interval(ZERO, x17, ONE)\n    x19 = paint(I, x18)\n    O = x10(x19)\n    return O"], [1.0, "def solve_b2f9b3f2(I):\n    x1 = astuple(identity, identity)\n    x2 = astuple(rot90, rot270)\n    x3 = astuple(x1, x2)\n    x4 = astuple(rot180, rot180)\n    x5 = astuple(rot270, rot90)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = leastcolor(I)\n    x9 = repeat(x8, ONE)\n    x10 = rbind(rapply, I)\n    x11 = chain(x10, initset, first)\n    x12 = compose(first, x11)\n    x13 = chain(dedupe, first, x12)\n    x14 = matcher(x13, x9)\n    x15 = extract(x7, x14)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = x16(I)\n    x19 = ofcolor(x18, x8)\n    x20 = height(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = lbind(astuple, x20)\n    x23 = apply(x22, x21)\n    x24 = rbind(shoot, DOWN)\n    x25 = mapply(x24, x23)\n    x26 = fill(x18, FOUR, x25)\n    x27 = astuple(x20, x20)\n    x28 = canvas(ZERO, x27)\n    x29 = asindices(x28)\n    x30 = shift(x29, x27)\n    x31 = shape(I)\n    x32 = maximum(x31)\n    x33 = lbind(shift, x30)\n    x34 = interval(ZERO, x32, x20)\n    x35 = pair(x34, x34)\n    x36 = mapply(x33, x35)\n    x37 = fill(x26, TWO, x36)\n    O = x17(x37)\n    return O"], [1.0, "def solve_129ebbfc(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = lbind(mapply, neighbors)\n    x13 = compose(x12, toindices)\n    x14 = fork(sfilter, x13, x10)\n    x15 = mapply(x14, x11)\n    x16 = lbind(argmin, x5)\n    x17 = compose(first, last)\n    x18 = fork(sfilter, x17, x10)\n    x19 = mapply(x18, x13)\n    x20 = fill(I, x1, x15)\n    O = fill(x20, FIVE, x19)\n    return O"], [1.0, "def solve_9338d607(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = other(x4, x5)\n    x7 = palette(I)\n    x8 = lrcorner(x5)\n    x9 = add(x8, UNITY)\n    x10 = llcorner(x5)\n    x11 = add(x10, DOWN_LEFT)\n    x12 = urcorner(x5)\n    x13 = add(x12, UP_RIGHT)\n    x14 = ulcorner(x5)\n    x15 = add(x14, NEG_UNITY)\n    x16 = shoot(x9, UNITY)\n    x17 = shoot(x11, DOWN_LEFT)\n    x18 = shoot(x13, UP_RIGHT)\n    x19 = shoot(x15, TEN_UNITY)\n    x20 = combine(x16, x17)\n    x21 = combine(x18, x19)\n    x22 = combine(x20, x21)\n    x23 = color(x6)\n    O = fill(I, x23, x22)\n    return O"], [1.0, "def solve_6ae90a4a(I):\n    x1 = initset(ORIGIN)\n    x2 = rbind(shoot, RIGHT)\n    x3 = compose(x2, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    O = paint(I, x5)\n    return O"], [1.0, "def solve_aa37010f(I):\n    x1 = objects(I, T, F, F)\n    x2 = mapply(toindices, x1)\n    x3 = box(x2)\n    x4 = difference(x3, x2)\n    x5 = delta(x2)\n    x6 = position(x5, x4)\n    x7 = interval(difference, x6, ONE)\n    x8 = lbind(toivec, x5)\n    x9 = lbind(shift, x4)\n    x10 = apply(x8, x7)\n    x11 = last(x10)\n    x12 = lbind(tojvec, x5)\n    x13 = lbind(shift, x4)\n    x14 = apply(x12, x13)\n    x15 = lbind(astuple, x6)\n    x16 = chain(x11, x15, uppermost)\n    x17 = fork(recolor, color, x16)\n    x18 = mapply(x17, x29)\n    x19 = paint(I, x18)\n    x20 = branch(x9, identity, identity)\n    x21 = shape(I)\n    x22 = canvas(ZERO, x21)\n    x23 = hconcat(x22, x10)\n    x24 = objects(x23, F, F, T)\n    x25 = compose(toivec, uppermost)\n    x26 = lbind(shift, x24)\n    x27 = order(x25, x26)\n    x28 = paint(x19, x27)\n    x29 = ofcolor(x28, ZERO)\n    x30 = rbind(mapply, x29)\n    x31 = compose(x30, dneighbors)\n    x32 = fork(recolor, x31, ulcorner)\n    x33 = size(x259)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = pair(x34, x34)\n    x36 = mpapply(recolor, x35, x31)\n    O = paint(x12, x36)\n    return O"], [1.0, "def solve_7d1641e2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_dfe5a8a3(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_f69d7e7e(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_d876aea6(I):\n    x1 = objects(I, T, F, F)\n    x2 = sfilter(x1, hline)\n    x3 = sfilter(x1, vline)\n    x4 = compose(hfrontier, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = compose(vfrontier, center)\n    x80 = fork(recolor, color, x7)\n    x9 = mapply(x8, x3)\n    x10 = combine(x6, x9)\n    x11 = paint(I, x10)\n    x12 = toindices(x6)\n    x13 = toindices(x9)\n    x14 = intersection(x12, x13)\n    O = fill(x11, FOUR, x14)\n    return O"], [1.0, "def solve_309e98ea(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = sfilter(x10, x12)\n    x14 = rbind(0000000, THREE)\n    x15 = lbind(ofcolor, THREE)\n    x16 = sfilter(x13, x15)\n    x17 = compose(size, dmirror)\n    x18 = argmax(x16, x17)\n    x19 = mostcolor(x18)\n    x20 = matcher(first, x19)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x18, x21)\n    x23 = difference(x18, x22)\n    x24 = sfilter(x23, x4)\n    x25 = compose(hfrontier, center)\n    x26 = fork(recolor, color, x25)\n    x27 = mapply(x26, x24)\n    x28 = paint(I, x27)\n    x29 = replace(x28, x19, EIGHT)\n    O = paint(x29, x27)\n    return O"], [1.0, "def solve_b9942cd1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = shift(x3, UP)\n    x5 = decrement(x1)\n    x6 = lbind(astuple, x5)\n    x7 = apply(x6, x4)\n    x8 = order(x7, identity)\n    x9 = lbind(shift, x8)\n    x10 = mapply(x9, x4)\n    O = fill(I, x1, x10)\n    return O"], [1.0, "def solve_8b03e3ef(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = positive(x2)\n    x4 = branch(x3, hsplit, vsplit)\n    x5 = x4(I, TWO)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 = palette(x6)\n    x9 = palette(x7)\n    x10 = intersection(x8, x9)\n    x11 = first(x10)\n    x12 = shape(x6)\n    x13 = canvas(x11, x12)\n    x14 = ofcolor(x6, x31)\n    x15 = ofcolor(x7, x31)\n    x16 = intersection(x14, x15)\n    O = fill(x13, TWO, x16)\n    return O"], [1.0, "def solve_645f9a5e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_185a435d(I):\n    x1 = rot180(I)\n    x2 = shoot(x1,ORIGIN)\n    x3 = apply(urcorner, x2)\n    x4 = astuple(SIX, TEN)\n    x5 = canvas(ZERO, x4)\n    x6 = asindices(x5)\n    x7 = box(x6)\n    x8 = center(x6)\n    x9 = lbind(contained, ZERO)\n    x10 = increment(x8)\n    x11 = interval(x9, x10, x8)\n    x12 = lbind(outbox, x6)\n    x13 = apply(x12, x11)\n    x14 = FOUR(x13)\n    x15 =alks500(x14)\n    x16 = apply(first, x15)\n    x17 = FOUR(x16)\n    x18 = sfilter(x17, ONE)\n    x19 = compose(backdrop, inbox)\n    x20 = mapply(x19, x18)\n    x21 = fill(x5, THREE, x20)\n    O = replace(x21, ZERO, ONE)\n    return O"], [1.0, "def solve_39d84dae(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = asindices(I)\n    x5 = apply(first, x4)\n    x6 = difference(x5, x3)\n    x7 = ofcolor(I, x1)\n    x8 = rbind(adjacent, x7)\n    x9 = mfilter(x6, x8)\n    x10 = objects(I, T, F, T)\n    x11 = sizefilter(x10, ONE)\n    x12 = difference(x5, x11)\n    x13 = rbind(greater, ONE)\n    x14 = compose(x13, size)\n    x15 = sfilter(x12, x14)\n    x16 = difference(x5, x15)\n    x17 = fill(I, x1, x15)\n    O = fill(x17, x1, x16)\n    return O"], [1.0, "def solve_b66c331e(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = rbind(tosfilter, x2)\n    x4 = chain(size, x3, asindices)\n    x5 = matcher(x4, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x1, x6)\n    x8 = argmax(x7, size)\n    x9 = width(x8)\n    x10 = increment(x9)\n    x11 = matcher(last, x10)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x8, x12)\n    x14 = fill(I, ZERO, x13)\n    x15 = double(x509)\n    x16 = asindices(x8)\n    x17 = contained(ZERO, x16)\n    x18 = asindices(x8)\n    x19 = center(x18)\n    x20 = invert(x19)\n    x21 = shift(x15, x20)\n    x22 = compose(initset, last)\n    x23 = center(x18)\n    x24 = insert(x23, x1)\n    x25 = product(x27, x24)\n    x26 = sfilter(x25, x22)\n    x27 = compose(toindices, first)\n    x28 = mapply(x27, x26)\n    x29 = paint(x14, x28)\n    x30 = double(x9)\n    x31 = matcher(first, ZERO)\n    x32 = compose(flip, x31)\n    x33 = fork(both, x30, x32)\n    x34 = sfilter(x26, x33)\n    x35 = paint(x29, x34)\n    O = double(x50)\n    return O"], [1.0, "def solve_9a990061(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = color(x2)\n    return O"], [1.0, "def solve_25abd07d(I):\n    x1 = replace(I, SIX, TWO)\n    x2 = objects(x1, T, F, T)\n    x3 = apply(normalize, x2)\n    x4 = astuple(NINE, NINE)\n    x5 = canvas(ZERO, x4)\n    x6 = asindices(x5)\n    x7 = box(x6)\n    x8 = center(x6)\n    x9 = lbind(contained, ZERO)\n    x10 = rbind(subtract, x8)\n    x11 = compose(x9, x10)\n    x12 = chain(outbox, outbox, initset)\n    x13 = corners(x6)\n    x14 = mapply(x12, x13)\n    x15 = difference(x7, x14)\n    x16 = inbox(x7)\n    x17 = sfilter(x16, x11)\n    x18 = combine(x15, x17)\n    x19 = fill(x5, THREE, x18)\n    x20 = objects(x19, T, F, T)\n    x21 = apply(toindices, x20)\n    x22 = lbind(matcher, normalize)\n    x23 = lbind(extract, x21)\n    x24 = chain(ulcorner, x23, x22)\n    x25 = compose(x24, toindices)\n    x26 = fork(shift, identity, x25)\n    x27 = mapply(x26, x3)\n    O = paint(x5, x27)\n    return O"], [1.0, "def solve_5820abe7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = fork(combine, hfrontier, vfrontier)\n    x5 = width(I)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x3, x6)\n    x8 = tojvec(x7)\n    x9 = height(I)\n    x10 = decrement(x9)\n    x11 = lbind(astuple, x10)\n    x12 = apply(x11, x8)\n    x13 = lbind(shift, x12)\n    x14 = mapply(x13, x12)\n    O = fill(x7, ZERO, x14)\n    return O"], [1.0, "def solve_0d7f1e70(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = subgrid(x8, I)\n    x10 = increment(x4)\n    x11 = frontiers(x10)\n    x12 = divide(x11, FOUR)\n    x13 = increment(x12)\n    x14 = divide(x13, FOUR)\n    x15 = width(x9)\n    x16 = interval(ZERO, x15, ONE)\n    x17 = height(x9)\n    x18 = interval(ZERO, x17, ONE)\n    x19 = lbind(multiply, x14)\n    x20 = apply(x19, x17)\n    x21 = rbind(multiply, x14)\n    x22 = apply(x21, x18)\n    x23 = pair(x20, x22)\n    x24 = sfilter(x23, first)\n    x25 = mapply( last, x24)\n    x26 = fill(x9, x3, x25)\n    x27 =O = fill(x26, x3, x2)\n    x28 = O = x17(x27)\n    x29 = asobject(x28)\n    x30 = shape(I)\n    x31 = canvas(x3, x30)\n    x32 = objects(x29, F, F, T)\n    x33 = paint(x31, x32)\n    O = subgrid(x33, x30)\n    return O"], [1.0, "def solve_387e6ada(I):\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = order(x1, x2)\n    x4 = lbind(apply, last)\n    x5 = chain(x4, first, last)\n    x6 = lbind(colorfilter, x3)\n    x7 = compose(x6, first)\n    x8 = chain(size, x7, rightmost)\n    x9 = astuple(ONE, x8)\n    x10 = palette(I)\n    x11 = x9(x10)\n    x12 = x8(x11)\n    x13 = shape(x12)\n    x14 = canvas(ZERO, x13)\n    x15 = lbind(shift, x12)\n    x16 = lbind(multiply, x14)\n    x17 = compose(x15, x16)\n    x18 = fork(equality, identity, x17)\n    x19 = compose(x18, first)\n    x20 = labeled(x11)\n    x21 = positive(x20)\n    x22 = rbind(multiply, x14)\n    x23 = apply(x22, x3)\n    x24 = lbind(shift, x11)\n    x25 = mapply(x24, x23)\n    O = fill(x14, THREE, x25)\n    return O"], [1.0, "def solve_401fcf95(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = divide(x9, x6)\n    x11 = height(I)\n    x12 = increment(x11)\n    x13 = interval(ZERO, x12, ONE)\n    x14 = apply(tojvec, x13)\n    x15 = lbind(shift, x2)\n    x16 = mapply(x15, x14)\n    x17 = fill(I, x3, x16)\n    x18 = add(SIX, SIX)\n    x19 = canvas(x3, x18)\n    x20 = asobject(x19)\n    x21 = occurrences(x17, x20)\n    x22 = lbind(shift, x2)\n    x23 = mapply(x22, x21)\n    O = fill(x17, x3, x23)\n    return O"], [1.0, "def solve_8389c445(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_dadcdf76(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = ofcolor(I, ZERO)\n    x4 = toindices(x3)\n    x5 = ofcolor(I, x2)\n    x6 = toindices(x5)\n    x7 = ofcolor(I, ZERO)\n    x8 = toindices(x7)\n    x9 = ofcolor(I, ONE)\n    x10 = fill(I, NINE, x4)\n    x11 = fill(x10, RIGHT, x6)\n    x12 = fill(x11, leftmost, x6)\n    x13 = fill(x12, ZERO, x9)\n    x14 = fill(x13, ONE, x9)\n    x15 = fill(x14, TWO, x10)\n    x16 = ofcolor(I, THREE)\n    x17 = fill(x15, x16, x3)\n    x18 = normalize(x3)\n    x19 = shape(x38)\n    x20 = halve(x19)\n    x21 = invert(x20)\n    x22 = shift(x38, x21)\n    x23 = apply(outbox, x22)\n    x24 = rbind(shoot, x23)\n    x25 = mapply(x24, x2)\n    O = fill(x17, ONE, x25)\n    return O"], [1.0, "def solve_0e1ed7e3(I):\n    x1 = index(I, ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = lbind(shift, x2)\n    x4 = height(I)\n    x5 = lbind(multiply, x4)\n    x6 = apply(x5, x3)\n    x7 = mapply(x6, x2)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_30fd0017(I):\n    x1 = rbind(toobject, I)\n    x2 = chain(x1, numcolors, shape)\n    x3 = partition(I)\n    x4 = matcher(x2, ONE)\n    x5 = fork(both, x4, x3)\n    x6 = sfilter(x3, x5)\n    x7 = argmax(x6, size)\n    x8 = color(x7)\n    x9 = objects(I, T, F, F)\n    x10 = colorfilter(x9, x8)\n    x11 = difference(x9, x10)\n    x12 = rbind(toobject, I)\n    x13 = chain(x12, delta, rbind)\n    x14 = rbind(apply, x11)\n    x15 = lbind(chain, center)\n    x16 = lbind(lbind, shift)\n    x17 = rbind(apply, x15)\n    x18 = lbind(lbind, shoot)\n    x19 = chain(x17, x18, last)\n    x20 = fork(recolor, first, x19)\n    x21 = mapply(x20, x11)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_a71c49b7(I):\n    x1 = merge(I)\n    x2 = subgrid(x1, I)\n    x3 = replace(I, ZERO, TWO)\n    x4 = replace(x3, ONE, ZERO)\n    x5 = compress(x4)\n    x6 = width(x2)\n    x7 = halve(x6)\n    x8 = upscale(x5, x7)\n    x9 = ofcolor(x2, ZERO)\n    O = fill(x9, ZERO, x9)\n    return O"], [1.0, "def solve_e1e4e994(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = color(x6)\n    x8 = shape(I)\n    x9 = canvas(x7, x8)\n    x10 = normalize(x6)\n    x11 = objects(x9, F, F, T)\n    x12 = color(x11)\n    x13 = remove(ZERO, x11)\n    x14 = other(x13, x12)\n    x15 = rbind(colorcount, x7)\n    x16 = matcher(x15, ZERO)\n    x17 = sfilter(x12, x16)\n    x18 = difference(x5, x17)\n    x19 = fill(I, x6, x18)\n    x20 = normalize(x6)\n    O = paint(x19, x20)\n    return O"], [1.0, "def solve_03a9ee50(I):\n    x1 = initset(ORIGIN)\n    x2 = insert(x14, x1)\n    x3 = order(x2, identity)\n    x4 = last(x3)\n    x5 = remove(x4, x3)\n    x6 = last(x5)\n    x7 = ofcolor(I, x6)\n    x8 = inbox(x7)\n    O = fill(I, x6, x8)\n    return O"], [1.0, "def solve_9e1f94a3(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_1176101d(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_f32dd5cf(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = argmin(x2, size)\n    x4 = argmax(x2, size)\n    x5 = x4(I)\n    x6 = x4(I)\n    x7 = power(outbox, ONE)\n    x8 = chain(first, x7, initset)\n    x9 = mapply(x8, x3)\n    x10 = fill(I, x1, x9)\n    O = fill(x10, TWO, x4)\n    return O"], [1.0, "def solve_d1a08eac(I):\n    x1 = ofcolor(I, FOUR)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = equality(x5, ZERO)\n    x7 = branch(x6, identity, vmirror)\n    x8 = x7(x4)\n    x9 = ofcolor(x8, EIGHT)\n    x10 = uppermost(x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, identity, hmirror)\n    x13 = x12(x8)\n    x14 = ofcolor(x13, EIGHT)\n    x15 = gravitate(x14, x9)\n    x16 = shift(x14, x15)\n    O = move(x13, x16, x2)\n    return O"], [1.0, "def solve_72611a63(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_20489b83(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_89e80634(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(e349, x5)\n    x7 = lbind(chain, positive)\n    x8 = lbind(x7, size)\n    x9 = lbind(x8, x4)\n    x10 = rbind(sfilter, x9)\n    x11 = compose(e349, x10)\n    x12 = chain(x11, x9, size)\n    x13 = compose(normalize, x6)\n    x14 = fork(add, x13, x12)\n    x15 = chain(invert, x14, x12)\n    x16 = fork(shift, x15, x11)\n    x17 = fork(combine, x15, x16)\n    x18 = compose(x17, x18)\n    x19 = uppermost(x3)\n    x20 = rbind(add, x19)\n    x21 = chain(toivec, x20, x18)\n    x22 = rbind(apply, x2)\n    x23 = chain(x22, x21, x18)\n    x24 = fork(mapply, x18, x23)\n    x25 = power(x24, FOUR)\n    x26 = astuple(x21, x25)\n    x27 = rbind(shoot, UP_RIGHT)\n    x28 = compose(x27, x26)\n    x29 = fork(recolor, color, x28)\n    x30 = mapply(x29, x6)\n    x31 = paint(I, x30)\n    O = x1(x31)\n    return O"], [1.0, "def solve_b42bc093(I):\n    x1 =vellcorner(I)\n    x2 = shift(x1, NEG_UNITY)\n    x3 = recolor(THREE, x2)\n    x4 = shift(x3, UNITY)\n    x5 = recolor(SEVEN, x4)\n    x6 = shift(x5, DOWN_LEFT)\n    x7 = recolor(EIGHT, x6)\n    x8 = shift(x7, UP_RIGHT)\n    x9 = combine(x3, x8)\n    x10 = shift(x9, RIGHT)\n    x11 = complaints(I, x10)\n    x12 = product(x11, x11)\n    x13 = fork(combine, vfrontier, hfrontier)\n    x14 = mapply(x13, x12)\n    O = fill(I, ZERO, x14)\n    return O"], [1.0, "def solve_b4e2978a(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = insert(dmirror, x1)\n    x3 = insert(vmirror, x2)\n    x4 = insert(hmirror, x3)\n    x5 = insert(vmirror, x4)\n    x6 = shape(I)\n    x7 = canvas(FIVE, x6)\n    x8 = asobject(I)\n    x9 = shift(x8, UNITY)\n    x10 = paint(x7, x9)\n    x11 = objects(x10, toindices, identity)\n    x12 = apply(urcorner, x11)\n    x13 = shift(x12, RIGHT)\n    x14 = paint(x10, x13)\n    x15 = toindices(x14)\n    x16 = shape(x15)\n    x17 = increment(x16)\n    x18 = shift(x15, x17)\n    x19 = lbind(shift, x18)\n    x20 = objects(x14, T, apply, x19)\n    x21 = apply(x21, x20)\n    x22 = mapply(x19, x21)\n    x23 = paint(x10, x22)\n    x24 = objects(x23, T, F, T)\n    x25 = apply(x21, x24)\n    x26 = mapply(x25, x25)\n    O = paint(x23, x26)\n    return O"], [1.0, "def solve_ac8ef8e2(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = rbind(colorcount, ZERO)\n    x3 = lbind(toobject, x1)\n    x4 = compose(x2, x3)\n    x5 = vmirror(I)\n    x6 = hmirror(I)\n    x7 = astuple(x5, x6)\n    x8 = argmin(x7, x4)\n    O = subgrid(x1, x8)\n    return O"], [1.0, "def solve_dcebb587(I):\n    x1 = ofcolor(I, TWO)\n    x2 = equality(x1, THREE)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = difference(x3, x6)\n    x8 = mostcolor(I)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = rbind(colorcount, TWO)\n    x14 = argmax(x12, x13)\n    O = subgrid(x14, I)\n    return O"], [1.0, "def solve_3ae6206e(I):\n    x1 = rot180(I)\n    x2 = rbind(shoot, UP)\n    x3 = compose(x2, last)\n    x4 = fork(recolor, first, x3)\n    x5 = mapply(x4, x1)\n    O = paint(x1, x5)\n    return O"], [1.0, "def solve_3501ddc1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = underfill(I, EIGHT, x2)\n    x4 = apply(dneighbors, x3)\n    x5 = mapply(dneighbors, x4)\n    x6 = difference(x5, x3)\n    O = fill(x3, ONE, x6)\n    return O"], [1.0, "def solve_5cc60881(I):\n    x1 = rot270(I)\n    x2 =bind(order, identity)\n    x3 = switch(x1, ONE, TWO)\n    x4 = apply(x2, x3)\n    x5 = switch(x4, ONE, TWO)\n    O = cmirror(x5)\n    return O"], [1.0, "def solve_6c2d122f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [1.0, "def solve_c8daab4a(I):\n    x1 = mostcolor(I)\n    x2 = valmax(I, NINE)\n    x3 = matcher(Nnormal, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(size, x4)\n    x6 = apply(x5, I)\n    x7 = asindices(I)\n    x8 = ofcolor(I, x1)\n    x9 = difference(x7, x8)\n    x10 = fill(I, NEG_ONE, x9)\n    x11 = lbind(shift, x8)\n    x12 = mapply(x11, x10)\n    O = fill(x10, double, x12)\n    return O"], [1.0, "def solve_cff50689(I):\n    x1 = astuple(SIX, FIVE)\n    x2 = canvas(numcolors, x1)\n    x3 = equality(lowermost, TWO)\n    x4 = portrait(I)\n    x5 = branch(x3, x2, x4)\n    x6 = branch(x5, TWO, x5)\n    x7 = canvas(apply, x6)\n    x8 = double(SIX)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = branch(x7, x2, x9)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = repeat(x10, x12)\n    x14 = merge(x13)\n    x15 = objects(I, T, F, F)\n    x16 = colorfilter(x15, TWO)\n    x17 = compose(center, ulcorner)\n    x18 = subgrid(x17, I)\n    x19 = add(DOWN, x10)\n    x20 = add(x19, astuple)\n    x21 = add(x20, x4)\n    x22 = canvas(ZERO, x21)\n    x23 = paint(x22, x19)\n    x24 = normalize(x2)\n    x25 = shift(x24, x4)\n    x26 = lbind(shift, x25)\n    x27 = objects(x23, T, F, F)\n    x28 = compose(x26, x4)\n    x29 = apply(x28, x27)\n    x30 = mapply(x23, x29)\n    O = paint(x23, x30)\n    return O"], [1.0, "def solve_9565e023(I):\n    x1 = shape(I)\n    x2 = add(DOWN, x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = toivec(x11)\n    x13 = width(I)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = connect(x12, x15)\n    x17 = height(I)\n    x18 = decrement(x17)\n    x19 = toivec(x18)\n    x20 = connect(x16, x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = tojvec(x22)\n    x24 = connect(x19, x23)\n    x25 = astuple(x14, x24)\n    x26 = astuple(x17, x24)\n    x27 = astuple(x66666666, x17)\n    x28 = astuple(x27, x28)\n    x29 = astuple(x22, x27)\n    x30 = astuple(x003, x30)\n    x31 = mostcolor(I)\n    x32 = canvas(x31, x29)\n    x33 = matcher(first, x31)\n    x34 = compose(flip, x33)\n    x35 = sfilter(x12, x34)\n    x36 = fork(combine, hfrontier, vfrontier)\n    x37 = mapply(x36, x35)\n    O = fill(x32, x1, x37)\n    return O"], [1.0, "def solve_13d76093(I):\n    x1 = fgpartition(I)\n    x2 = matcher(color, ZERO)\n    x3 = extract(x1, x2)\n    x4 = ulcorner(x3)\n    x5 = subtract(x4, DOWN)\n    x6 = shape(x3)\n    x7 = add(x6, TWOBY_ZERO)\n    O = crop(I, x5, x7)\n    return O"], [1.0, "def solve_7cfcae63(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_ae64b7eb(I):\n    x1 = ofcolor(I, TWO)\n    x2 = shape(I)\n    x3 = multiply(x2, x2)\n    x4 = canvas(ZERO, x3)\n    x5 = rbind(multiply, x2)\n    x6 = apply(x5, x1)\n    x7 = asobject(I)\n    x8 = lbind(shift, x7)\n    x9 = mapply(x8, x6)\n    O = paint(x4, x9)\n    return O"], [1.0, "def solve_62d1b9ec(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(THREE, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = contained(I, x10)\n    x12 = branch(x11, ulcorner, urcorner)\n    x13 = shape(I)\n    x14 = decrement(x13)\n    x15 = index(I, x14)\n    x16 = ulcorner(x14)\n    x17 = crop(I, x14, x16)\n    x18 = branch(x11, llcorner, uppermost)\n    x19 = shape(I)\n    x20 = increment(x19)\n    x21 = index(I, x20)\n    x22 = llcorner(x14)\n    x23 = remove(x21, x10)\n    x24 = recolor(x21, x22)\n    x25 = compose( lrcorner, last)\n    x26 = remove(x23, x10)\n    x27 = combine(x24, x26)\n    x28 = fork(connect, first, last)\n    x29 = product(x27, x43)\n    x30 = size(x29)\n    x31 = power(x28, x30)\n    x32 = astuple(x31, x31)\n    x33 = x12(x12)\n    x34 = x24(x12)\n    x35 = canvas(x21, x33)\n    x36 = fill(x35, x3, x32)\n    x37 = paint(x36, x12)\n    O = replace(x37, x10, x5)\n    return O"], [1.0, "def solve_17a35cb3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = merge(x5)\n    x7 = fill(I, x3, x6)\n    x8 = compose(hmirror, vmirror)\n    x9 = x8(x7)\n    x10 = hmirror(x7)\n    x11 = vmirror(x10)\n    x12 = x8(x11)\n    x13 = combine(x9, x12)\n    x14 = pair(x1, x13)\n    x15 = sfilter(x14, hline)\n    x16 = mapply(neighbors, x15)\n    x17 = mapply(neighbors, x12)\n    x18 = height(x17)\n    x19 = height(x12)\n    x20 = divide(x18, x19)\n    x21 = width(x21)\n    x22 = width(x12)\n    x23 = divide(x21, x22)\n    x24 = vmirror(x23)\n    x25 = multiply(x24, x19)\n    x26 = add(x25, x20)\n    x27 = subtract(x25, x22)\n    x28 = divide(x26, x22)\n    x29 = increment(x28)\n    x30 = multiply(x27, x29)\n    x31 = rbind(multiply, x30)\n    x32 = apply(x31, x15)\n    x33 = merge(x12)\n    x34 = lbind(shift, x33)\n    x35 = mapply(x34, x32)\n    O = paint(x7, x35)\n    return O"], [1.0, "def solve_fedb65bb(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_9c63af10(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_9d032616(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_fba391a1(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = merge(x3)\n    x9 = cmirror(x8)\n    x10 = astuple(x11, x10)\n    x11 = hmirror(x10)\n    x12 = vmirror(x11)\n    x13 = hconcat(x11, x12)\n    x14 = hconcat(x13, x1)\n    O = vconcat(x13, x14)\n    return O"], [1.0, "def solve_b008b917(I):\n    x1 = partition(I)\n    x2 = fork(equality, toindices, box)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = color(x4)\n    x6 = palette(I)\n    x7 = remove(x5, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = toindices(x4)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = sfilter(x11, vline)\n    x16 = size(x15)\n    x17 = increment(x16)\n    x18 = height(I)\n    x19 = divide(x17, x12)\n    x20 = increment(x19)\n    x21 = width(I)\n    x22 = divide(x21, x12)\n    x23 = increment(x22)\n    x24 = astuple(x16, x23)\n    x25 = canvas(x9, x24)\n    x26 = asindices(I)\n    x27 = ofcolor(I, x5)\n    x28 = outbox(x25)\n    x29 = intersection(x27, x28)\n    x30 = apply(initset, x29)\n    x31 = rbind(rapply, x20)\n    x32 = compose(first, x31)\n    x33 = apply(x32, x30)\n    x34 = ofcolor(I, x5)\n    x35 = difference(x34, x29)\n    x36 = ofcolor(I, x5)\n    x37 = fill(x25, THREE, x36)\n    x38 = shift(x31, x37)\n    x39 = ofcolor(I, x5)\n    x40 = difference(x39, x38)\n    O = fill(x37, THREE, x40)\n    return O"], [1.0, "def solve_16f62bb0(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_58ace031(I):\n    x1 = frontiers(I)\n    x2 = mostcolor(I)\n    x3 = shape(I)\n    x4 = canvas(x2, x3)\n    x5 = hconcat(I, x4)\n    x6 = objects(x5, F, F, T)\n    x7 = argmax(x6, size)\n    x8 = toindices(x7)\n    x9 = ZERO(x2)\n    x10 = equality(x9, x8)\n    x11 = shift(x7, x10)\n    x12 = toindices(x7)\n    x13 = compose(x11, x12)\n    x14 = rbind(intersection, x13)\n    x15 = chain(size, x14, toindices)\n    x16 = matcher(x15, ZERO)\n    x17 = objects(x10, T, F, T)\n    x18 = sfilter(x17, x16)\n    x19 = argmax(x18, size)\n    x20 = matcher(first, x2)\n    x21 = sfilter(x19, x20)\n    x22 = difference(x19, x21)\n    x23 = color(x12)\n    x24 = fill(x22, x23, x27)\n    O = fill(x24, x23, x22)\n    return O"], [1.0, "def solve_b2e353cf(I):\n    x1 = THREEe21\n    x2 = dmirror(I)\n    x3 = equality(x1, x2)\n    x4 = flip(x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = combine(x15, x16)\n    x18 = intersection(x15, x16)\n    x19 = difference(x17, x18)\n    O = fill(x14, THREE, x19)\n    return O"], [1.0, "def solve_7df7b8a3(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_e15f254f(I):\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = mapply(x11, x5)\n    x13 = combine(x7, x12)\n    x14 = llcorner(x7)\n    x15 = mapply(x14, x9)\n    x16 = combine(x13, x15)\n    x17 = branch(x1, identity, height)\n    x18 = x17(x10)\n    x19 = astuple(ONE, x18)\n    x20 = canvas(ZERO, x19)\n    x21 = asobject(x20)\n    x22 = occurrences(x2, x21)\n    x23 = intersection(x2, x22)\n    O = fill(x2, ONE, x23)\n    return O"], [1.0, "def solve_f2f1d57a(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_337ab09e(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, rbind, tophalf)\n    x6 = x5(I)\n    x7 = fork(add, height, width)\n    x8 = x7(I)\n    x9 = width(x6)\n    x10 = increment(x9)\n    x11 = interval(ZERO, x10, ONE)\n    x12 = apply(x7, x11)\n    x13 = lbind(intersection, x12)\n    x14 = lbind(shift, x12)\n    x15 = mapply(x14, x13)\n    O = fill(x6, FOUR, x15)\n    return O"], [1.0, "def solve_56c0e686(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_045c5e79(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_63beaf5c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_41988ee7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = interval(ONE, NINE, ONE)\n    x8 = apply(tojvec, x7)\n    x9 = lbind(shift, x8)\n    x10 = mapply(x9, x6)\n    O = fill(x10, FIVE, x3)\n    return O"], [1.0, "def solve_7ac31386(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = argmax(x1, size)\n    x3 = remove(x2, x1)\n    x4 = merge(x3)\n    x5 = subgrid(x4, I)\n    x6 = chain(ulcorner, asindices, objects)\n    x7 = x6(x5)\n    x8 = argmin(x7, x7)\n    x9 = mostcolor(x8)\n    x10 = shape(x2)\n    x11 = canvas(x9, x10)\n    x12 = lbind(shift, x8)\n    x13 = mapply(x12, x11)\n    O = paint(x11, x13)\n    return O"], [1.0, "def solve_dcce0a14(I):\n    x1 = ofcolor(I, TWO)\n    x2 = papply(neighbors, x1)\n    x3 = lbind(shift, x2)\n    x4 = mapply(x3, x5)\n    O = fill(I, ONE, x4)\n    return O"], [1.0, "def solve_d2a950fe(I):\n    x1 = ofcolor(I, THREE)\n    x2 = ofcolor(I, TWO)\n    x3 = mapply(first, x1)\n    x4 = mapply(last, x1)\n    x5 = fill(I, SIX, x3)\n    x6 = fill(x5, SEVEN, x4)\n    O = fill(x6, EIGHT, x5)\n    return O"], [1.0, "def solve_9676bc05(I):\n    x1 = trim(I)\n    x2 = objects(x1, F, T, T)\n    x3 = argmax(x2, numcolors)\n    x4 = toindices(x3)\n    x5 = normalize(x3)\n    x6 = toindices(x5)\n    x7 = combine(x4, x6)\n    x8 = intersection(x4, x6)\n    x9 = difference(x7, x8)\n    x10 = mostcolor(I)\n    x11 = ofcolor(x5, x10)\n    x12 = asindices(x5)\n    x13 = combine(x11, x12)\n    x14 = fill(x5, x10, x13)\n    x15 = objects(x14, T, F, T)\n    x16 = apply(uppermost, x15)\n    x17 = size(x16)\n    x18 = equality(ONE, x17)\n    x19 = lbind(shift, x4)\n    x20 = mapply(x19, x16)\n    x21 = paint(x14, x20)\n    x22 = interval(ZERO, NINE, ONE)\n    x23 = apply(double, x33)\n    x24 = apply(increment, x23)\n    x25 = apply(tojvec, x24)\n    x26 = prapply(add, x25, x21)\n    x27 = fork(equality, identity, x26)\n    x28 = mapply(x27, x2)\n    O = fill(x21, x10, x28)\n    return O"], [1.0, "def solve_46c776cb(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_99380a25(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_5741a648(I):\n    x1 = lbind(adjacent, x4)\n    x2 = compose(x1, size)\n    x3 = fork(both, x2, ONE)\n    x4 = apply(x3, I)\n    x5 = sfilter(x4, x4)\n    x6 = corners(x5)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = x7(x6)\n    x9 = fill(I, EIGHT, x8)\n    x10 = size(x1)\n    x11 = decrement(x10)\n    x12 = tojvec(x11)\n    x13 = shift(x9, x12)\n    x14 = fill(x9, TWO, x13)\n    x15 = size(x2)\n    x16 = decrement(x15)\n    x17 = toivec(x16)\n    x18 = shift(x14, x17)\n    x19 = fill(x19, FOUR, x18)\n    x20 = size(x3)\n    x21 = decrement(x20)\n    x22 = tojvec(x21)\n    x23 = shift(x19, x22)\n    x24 = fill(x21, THREE, x23)\n    x25 = size(x2)\n    x26 = decrement(x25)\n    x27 = toivec(x26)\n    x28 = shift(x93, x27)\n    x29 = fill(x24, THREE, x28)\n    x30 = size(x2)\n    x31 = decrement(x30)\n    x32 = tojvec(x31)\n    x33 = shift(x77, x32)\n    x34 = fill(x29, THREE, x33)\n    x35 = merge(x5)\n    x36 = cover(x35, x34)\n    x37 = paint(x36, x31)\n    O = x7(x37)\n    return O"], [1.0, "def solve_30a22475(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_d30b808e(I):\n    x1 = width(I)\n    x2 = astuple(ONE, x1)\n    x3 = decrement(x1)\n    x4 = tojvec(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(THREE, x5)\n    x7 = equality(x1, x6)\n    x8 = height(I)\n    x9 = astuple(ONE, x8)\n    x10 = decrement(x9)\n    x11 = toivec(x10)\n    x12 = shoot(x11, x11)\n    x13 = combine(x7, x12)\n    x14 = tojvec(x3)\n    x15 = decrement(x14)\n    x16 = astuple(x10, x15)\n    x17 = connect(x13, x16)\n    x18 = size(x17)\n    x19 = astuple(x17, x6)\n    x20 = connect(x13, x19)\n    x21 = size(x20)\n    x22 = astuple(x17, x21)\n    x23 = connect(x17, x22)\n    x24 = fork(recolor, color, x23)\n    x25 = mapply(x24, x4)\n    O = paint(I, x25)\n    return O"], [1.0, "def solve_f86a850f(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x28)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [1.0, "def solve_e0cb7f72(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_9f4da970(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_9253ebf9(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = compose(x2, x1)\n    x4 = fork(intersection, x1, x3)\n    x5 = compose(size, x4)\n    x6 = palette(I)\n    x7 = matcher(x5, ZERO)\n    x8 = sfilter(x6, x7)\n    x9 = totuple(x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = mapply(neighbors, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = ofcolor(I, x11)\n    x17 = mapply(neighbors, x16)\n    x18 = toobject(x17, I)\n    x19 = mostcolor(x18)\n    x20 = rbind(shoot, UNITY)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = fork(combine, x20, x21)\n    x23 = rbind(shoot, UP_RIGHT)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = fork(combine, x23, x24)\n    x26 = fork(combine, x22, x25)\n    x27 = ofcolor(I, x11)\n    x28 = ofcolor(I, x10)\n    x29 = combine(x27, x28)\n    x30 = mapply(x26, x29)\n    x31 = ofcolor(I, x15)\n    x32 = intersection(x31, x30)\n    x33 = ofcolor(I, x19)\n    x34 = intersection(x33, x30)\n    x35 = fill(I, x10, x32)\n    O = fill(x35, x11, x34)\n    return O"], [1.0, "def solve_c7bd9a3f(I):\n    x1 = trim(I)\n    x2 = height(x1)\n    x3 = width(x1)\n    x4 = astuple(x2, x3)\n    x5 = repeat(x9, x4)\n    x6 = combine(x5, ONE)\n    x7 = dmirror(x6)\n    x8 = astuple(x2, x3)\n    x9 = dmirror(x8)\n    x10 = hupscale(x9, x4)\n    x11 = height(x10)\n    x12 = divide(x01, x11)\n    x13 = increment(x12)\n    x14 = width(x10)\n    x15 = divide(x14, x4)\n    x16 = increment(x15)\n    x17 = repeat(x10, x16)\n    x18 = combine(x6, x17)\n    x19 = repeat(x18, ONE)\n    x20 = merge(x19)\n    x21 = decrement(x17)\n    x22 = hsplit(x20, x21)\n    x23 = merge(x22)\n    x24 = crop(x20, ORIGIN, x27)\n    x25 = crop(x20, DOWN, x27)\n    x26 = shape(x25)\n    x27 = add(x26, x24)\n    x28 = add(x27, x25)\n    x29 = canvas(ZERO, x28)\n    x30 = asobject(x22)\n    x31 = shift(x30, UNITY)\n    x32 = paint(x29, x31)\n    x33 = rot90(x32)\n    x34 = shift(x33, x2)\n    x35 = paint(x32, x34)\n    x36 = rot270(x35)\n    x37 = shift(x31, x2)\n    x38 = paint(x35, x37)\n    x39 = rot90(x38)\n    x40 = shift(x39, x2)\n    O = paint(x40, x29)\n    return O"], [1.0, "def solve_c991acad(I):\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = chain(merge, x3, x1)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x4)\n    O = paint(I, x6)\n    return O"], [1.0, "def solve_3db10a4f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = rbind(subgrid, I)\n    x4 = rbind(colorcount, x1)\n    x5 = chain(x4, x3, x2)\n    x6 = lbind(greater, THREE)\n    x7 = chain(x6, x5, x2)\n    x8 = rbind(colorcount, x1)\n    x9 = fork(equality, x7, x8)\n    x10 = sfilter(x2, x9)\n    O = fill(I, ZERO, x10)\n    return O"], [1.0, "def solve_1744ac9c(I):\n    x1 = frontiers(I)\n    x2 = compose(size, dedupe)\n    x3 = matcher(x2, ONE)\n    x4 = x3(I)\n    x5 = palette(x4)\n    x6 = shape(x4)\n    x7 = canvas(x6, x5)\n    O = argmax(x7, x3)\n    return O"], [1.0, "def solve_45799ea6(I):\n    x1 = initset(ORIGIN)\n    x2 = toindices(x1, ORIGIN)\n    x3 = lbind(shift, x2)\n    x4 = shape(I)\n    x5 = maximum(x4)\n    x6 = lbind(multiply, x4)\n    x7 = apply(x6, x3)\n    x8 = mapply(x3, x7)\n    O = paint(I, x8)\n    return O"], [1.0, "def solve_15f8a676(I):\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = initset(x3)\n    x5 = rbind(shoot, UNITY)\n    x6 = lbind(compose, x5)\n    x7 = lbind(extract, x4)\n    x8 = chain(x6, x7, x6)\n    x9 = decrement(x1)\n    x10 = astuple(x9, x8)\n    x11 = astuple(x7, x9)\n    x12 = x11(x10)\n    x13 = x11(x7)\n    x14 =branch(x12, x13, x4)\n    x15 = branch(x11, x14, x4)\n    x16 = apply(x15, x1)\n    x17 = mapply(x16, x16)\n    O = fill(I, ZERO, x17)\n    return O"], [1.0, "def solve_298471cb(I):\n    x1 = switch(I, EIGHT, TWO)\n    x2 = switch(x1, ONE, TWO)\n    x3 = compress(x2)\n    x4 = rbind(toobject, I)\n    x5 = UNITY(x3)\n    x6 = rbind(colorcount, x4)\n    x7 = matcher(x6,5511)\n    x8 = chain(x7, x5, x4)\n    x9 = vmirror(x8)\n    x10 = hconcat(x9, x8)\n    x11 = hmirror(x10)\n    x12 = vconcat(x11, x8)\n    x13 = vconcat(x12, x10)\n    O = hmirror(x13)\n    return O"], [1.0, "def solve_f6507781(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = equality(x1, x2)\n    x4 = crop(x3, SEVEN, EIGHT)\n    O = hconcat(x4, x3)\n    return O"], [1.0, "def solve_6dc0b47e(I):\n    x1 = ofcolor(I, TWO)\n    x2 = x3aa(x1, ONE)\n    x3 = decrement(x2)\n    x4 = tojvec(x3)\n    x5 = shoot(x4, UNITY)\n    x6 = rbind(shoot, DOWN)\n    x7 = compose(x6, last)\n    x8 = fork(recolor, first, x7)\n    x9 = mapply(x8, x5)\n    O = paint(I, x9)\n    return O"], [1.0, "def solve_dcacfcc3(I):\n    x1 = ofcolor(I, TWO)\n    x2 = subgrid(x1, I)\n    x3 = trim(x2)\n    x4 = palette(x3)\n    x5 = compose(maximum, switch)\n    x6 = lbind(extract, x4)\n    x7 = lbind(matcher, x5)\n    x8 = compose(x6, x7)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    x11 = cover(I, x10)\n    x12 = ofcolor(x11, TWO)\n    x13 = subgrid(x12, x11)\n    x14 = asobject(x13)\n    x15 = occurrences(x14, x4)\n    x16 = lbind(shift, x14)\n    x17 = mapply(x16, x15)\n    O = fill(x11, ONE, x17)\n    return O"], [1.0, "def solve_da3afea0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_2faac5d7(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_c79501e2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [1.0, "def solve_3443aeb4(I):\n    x1 = switch(I, ORIGIN, THREE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [1.0, "def solve_5bfeb81a(I):\n    x1 = rot180(I)\n    x2 = equality(x1, TWO)\n    x3 = hmirror(I)\n    x4 = insert(x3, I)\n    x5 = lbind(vmmirror, x4)\n    x6 = lbind(hmirror, x4)\n    x7 = compose(x5, x6)\n    x8 = x7(x2)\n    O = branch(x8, vmirror, hmirror)\n    return O"], [1.0, "def solve_bd3460d5(I):\n    x1 = astuple(SIX, FIVE)\n    x2 = cmirror(I)\n    x3 = hconcat(x1, x2)\n    x4 = hmirror(x3)\n    x5 = vconcat(x4, x4)\n    x6 = vconcat(x5, x4)\n    O = cellwise(x6, ZERO, ONE)\n    return O"], [1.0, "def solve_7fe888ab(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_a4144ebf(I):\n    x1 = replace(I, E349, ZERO)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [1.0, "def solve_58c97793(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_7fc12f1f(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, T)\n    x4 = merge(x3)\n    O = vmirror(x4)\n    return O"], [1.0, "def solve_e36cd606(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_93ef54cf(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, x2)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [1.0, "def solve_802dec62(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = argmin(x2, size)\n    x4 = shoot(x3, UP_RIGHT)\n    x5 = combine(x4, x4)\n    x6 = recolor(x1, x5)\n    x7 = fork(combine, first, last)\n    x8 = mapply(x7, x6)\n    O = fill(I, x1, x8)\n    return O"], [1.0, "def solve_ad5c438d(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_3371a5b0(I):\n    x1 = lbind(fork, greater)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = lbind(recolor, ZERO)\n    x5 = compose(x4, x3)\n    x6 = fork(paint, identity, x5)\n    x7 = compose(rot90, x6)\n    x8 = power(x7, FOUR)\n    x9 = rot180(I)\n    x10 = power(x9, TWO)\n    x11 = fork(combine, x8, x10)\n    x12 = compose(x11, x7)\n    x13 = apply(x12, x9)\n    O = paint(x9, x13)\n    return O"], [1.0, "def solve_5e6c60ec(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_f6b46143(I):\n    x1 = rbind(difference, x2)\n    x2 = chain(size, x1, palette)\n    x3 = matcher(x2, ZERO)\n    x4 = extract(vsindices, x3)\n    x5 = lbind(shift, x4)\n    x6 = objects(I, T, F, T)\n    x7 = mapply(x5, x6)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_c23fabb5(I):\n    x1 = astuple(identity, identity)\n    x2 = astuple(rot90, rot270)\n    x3 = astuple(x1, x2)\n    x4 = astuple(rot180, rot180)\n    x5 = astuple(rot270, rot90)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = leastcolor(I)\n    x9 = repeat(x8, ONE)\n    x10 = rbind(rapply, I)\n    x11 = chain(x10, initset, first)\n    x12 = compose(first, x11)\n    x13 = chain(dedupe, first, x12)\n    x14 = matcher(x13, x9)\n    x15 = extract(x7, x14)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = x16(I)\n    x19 = ofcolor(x18, x8)\n    x20 = height(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = lbind(astuple, x20)\n    x23 = apply(x22, x21)\n    x24 = rbind(shoot, DOWN)\n    x25 = mapply(x24, x23)\n    x26 = fill(x18, FOUR, x25)\n    x27 = astuple(x20, x20)\n    x28 = canvas(ZERO, x27)\n    x29 = asindices(x28)\n    x30 = shift(x29, x27)\n    x31 = shape(I)\n    x32 = maximum(x31)\n    x33 = lbind(shift, x30)\n    x34 = interval(ZERO, x32, x20)\n    x35 = pair(x34, x34)\n    x36 = mapply(x33, x35)\n    x37 = fill(x26, TWO, x36)\n    O = x17(x37)\n    return O"], [1.0, "def solve_5ccc604d(I):\n    x1 = ulcorner(I)\n    x2 = subgrid(x1, I)\n    x3 = upscale(x2, THREE)\n    x4 = hconcat(x3, x3)\n    x5 = hconcat(x4, x3)\n    x6 = vconcat(x5, x5)\n    x7 = vconcat(x6, x5)\n    O = cellwise(x3, x7, ZERO)\n    return O"], [1.0, "def solve_c2e584b0(I):\n    x1 = ofcolor(I, TWO)\n    x2 = shape(I)\n    x3 = maximum(x2)\n    x4 = interval(ZERO, x3, ONE)\n    x5 = canvas(EIGHT, x4)\n    x6 = asobject(I)\n    x7 = lbind(shift, x6)\n    x8 = height(x6)\n    x9 = rbind(multiply, x8)\n    x10 = apply(x9, x3)\n    x11 = mapply(x7, x10)\n    O = paint(x5, x11)\n    return O"], [1.0, "def solve_fca2d930(I):\n    x1 = hconcat(I, I)\n    x2 = vconcat(x1, x1)\n    x3 = asindices(x2)\n    x4 = mostcolor(I)\n    x5 = ofcolor(x2, x4)\n    x6 = difference(x3, x5)\n    x7 = mapply(ineighbors, x6)\n    O = underfill(x2, EIGHT, x7)\n    return O"], [1.0, "def solve_6db9e05d(I):\n    x1 = ofcolor(I, EIGHT)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = equality(x5, ZERO)\n    x7 = branch(x6, identity, vmirror)\n    x8 = x7(x4)\n    x9 = ofcolor(x8, EIGHT)\n    x10 = uppermost(x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, identity, hmirror)\n    x13 = x12(x8)\n    x14 = ofcolor(x13, EIGHT)\n    x15 = ofcolor(x13, TWO)\n    x16 = rbind(shoot, DOWN)\n    x17 = mapply(x16, x14)\n    x18 = height(x13)\n    x19 = rbind(repeat, x18)\n    x20 = chain(x17, x19, double)\n    x21 = compose(x20, last)\n    x22 = fork(combine, first, x21)\n    x23 = fork(recolor, x22, outbox)\n    x24 = mapply(x23, x4)\n    O = paint(x13, x24)\n    return O"], [1.0, "def solve_f320b26e(I):\n    x1 = palette(I)\n    x2 = remove(vsplit, I)\n    x3 = lbind(hsplit, I)\n    x4 = argmax(x2, x3)\n    x5 = other(x1, x4)\n    x6 = ofcolor(I, x4)\n    x7 = ofcolor(I, x5)\n    x8 = combine(x6, x7)\n    x9 = fill(I, x5, x8)\n    x10 = difference(x9, x7)\n    O = fill(x9, x4, x10)\n    return O"], [1.0, "def solve_22675d4d(I):\n    x1 = rot270(I)\n    x2 = hconcat(x1, x1)\n    O = hconcat(x2, x2)\n    return O"], [1.0, "def solve_06fd67c3(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_29b4d201(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_8b74f01d(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_87f92023(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 =filter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [1.0, "def solve_103082d8(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_99dccc9e(I):\n    x1 = initset(ZERO)\n    x2 = insert(ORIGIN, x1)\n    x3 = lbind(shift, x2)\n    x4 = compose(x3, toindices)\n    x5 = compose(lrcorner, x4)\n    x6 = compose(ofcolor, x5)\n    x7 = fork(mapply, x6, x4)\n    x8 = compose(x5, x7)\n    x9 = fork(recolor, x8, x6)\n    x10 = mapply(x9, x1)\n    O = paint(I, x10)\n    return O"], [1.0, "def solve_b4715f44(I):\n    x1 = replace(I, SIX, TWO)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = mostcolor(I)\n    x14 = combine(x13, x12)\n    x15 = increment(x14)\n    x16 = canvas(x13, x15)\n    x17 = asobject(x16)\n    x18 = height(I)\n    x19 = astuple(last, x18)\n    x20 = increment(x19)\n    x21 = width(I)\n    x22 = astuple(x21, x20)\n    x23 = canvas(x9, x22)\n    x24 = asobject(x23)\n    x25 = decrement(x24)\n    x26 = width(I)\n    x27 = astuple(x26, x25)\n    x28 = prapply(astuple, x27)\n    x29 = lbind(shift, x10)\n    x30 = mapply(x29, x28)\n    x31 = paint(I, x30)\n    O = x9(x31)\n    return O"], [1.1, "def solve_38181f68(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, extract)\n    x35 = compose(x34, x10)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, extract)\n    x40 = compose(x39, x35)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(a"], [1.1, "def solve_b7e97c78(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =27(I)\n    x3 = trim(x2)\n    x4 = lefthalf(x3)\n    x5 = tophalf(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(x4)\n    x8 =675(x7)\n    x9 = width(x8)\n    x10 = increment(x9)\n    x11 = interval(ZERO, x10, x5)\n    x12 = merge(x11)\n    x13 = partition(x12)\n    x14 = lbind(colorfilter, x13)\n    x15 = compose(size, x14)\n    x16 = matcher(x15, TWO)\n    x17 = extract(x14, x16)\n    x18 = lbind(colorcount, x17)\n    x19 = argmin(x19, x18)\n    x20 = ofcolor(x12, x19)\n    x21 = ofcolor(x12, x18)\n    x22 = neighbors(ORIGIN)\n    x23 = leftmost(x22)\n    x24 = ofcolor(x12, x19)\n    x25 = rightmost(x24)\n    x26 = difference(x23, x25)\n    x27 = ofcolor(x12, x19)\n    x28 = leftmost(x27)\n    x29 = ofcolor(x12, x18)\n    x30 = initset(x28)\n    x31 = insert(x29, x30)\n    x32 = insert(x32, x31)\n    x33 = width(x12)\n    x34 = tojvec(x33)\n    x35 = initset(x34)\n    x36 = insert(x33, x35)\n    x37 = insert(x36, x28)\n    x38 = insert(x30, x37)\n    x39 = compose(backdrop, inbox)\n    x40 = lbind(rbind, manhattan)\n    x41 = chain(x39, x40, initset)\n    x42 = lb"], [1.1, "def solve_88ed5446(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_77b659f2(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_628b813b(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(111, x11, identity)\n    x13 = chain(size, x9, x12)\n    x14 = interval(ONE, SIX, ONE)\n    x15 = argmax(x14, x13)\n    x16 = matcher(x13, x15)\n    x17 = fork(both, x15, x16)\n    x18 = sfilter(x8, x17)\n    x19 = fill(I, x1, x18)\n    x20 = increment(TEN)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = astuple(x22, x22)\n    x23 = rbind(multiply, x22)\n    x24 = rbind(divide, x22)\n    x25 = compose(x23, x24)\n    x26 = lbind(equality, x21)\n    x27 = compose(x26, last)\n    x28 = chain(x20, x27, x25)\n    x29 = fork(sfilter, x25, x28)\n    x30 = fork(connect, first, last)\n    x31 = lbind(apply, last)\n    x32 = lbind(ofcolor, I)\n    x33 = compose(x31, x32)\n    x34 = fork( either, x30, x33)\n    x35 = sfilter(x29, x34)\n    x36 =0000(x15, x35)\n    x37 = sfilter(x36, x35)\n    x38 = fork(connect"], [1.1, "def solve_aa2cfd83(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 =5582255422\n    x4 =5525920009\n    8257967759\n    2060645202\n    5556\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = rbind(sfilter, x1)\n    x3 = compose(size, x2)\n    x4 = apply(x3, x1)\n    x5 = maximum(x4)\n    x6 = dmirror(x1)\n    x7 = apply(x3, x6)\n    x8 = maximum(x7)\n    x9 = increment(x8)\n    x10 = interval(TWO, x9, ONE)\n    x11 = increment(x5)\n    x12 = interval(TWO, x11, ONE)\n    x13 = product(x10, x12)\n    x14 = fork(multiply, first, last)\n    x15 = apply(x14, x13)\n    x16 = lbind(sfilter, x13)\n    x17 = lbind(matcher, x14)\n    x18 = compose(x16, x17)\n    x19 = apply(x18, x15)\n    x20 = lbind(occurrences, x1)\n    x21 = lbind(recolor, ZERO)\n    x22 = lbind(canvas, NEG_ONE)\n    x23 = compose(asindices, x22)\n    x24 = chain(x20, x21, x23)\n    x25 = lbind(mapply, x24)\n    x26 = chain(positive, size, x25)\n    x27 = sfilter(x19, x26)\n    x28 = compose(x14, first)\n    x29 = rbind(argmax, x28)\n    x30 = lbind(recolor, ZERO)\n    x31 = lbind(canvas, NEG_ONE)\n    x32 = chain(x30, asindices, x31)\n    x33 = lbind(lbind, shift)\n    x34 = lb"], [1.1, "def solve_7cd623d9(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_b0257e52(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = color(x4)\n    x6 = palette(I)\n    x7 = remove(x5, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = toindices(x4)\n    x11 = apply(first, x10)\n    x12 = toindices(x4)\n    x13 = apply(last, x12)\n    x14 = rbind(contained, x11)\n    x15 = compose(x14, first)\n    x16 = rbind(contained, x13)\n    x17 = compose(x16, last)\n    x18 = fork(either, x15, x17)\n    x19 = ofcolor(I, x9)\n    x20 = sfilter(x19, x18)\n    x21 = rbind(gravitate, x4)\n    x22 = compose(x21, initset)\n    x23 = fork(add, identity, x22)\n    x24 = fork(connect, identity, x23)\n    x25 = apply(x24, x20)\n    x26 = lbind(greater, x12)\n    x27 = compose(x26, first)\n    x28 = rbind(sfilter, x27)\n    x29 = chain(merge, x28, center)\n    x30 = fork(recolor, color, x29)\n    x31 = mapply(x30, x21)\n    x32 = paint(I, x31)\n    x33 = rot90(x127)\n    x34 = ofcolor(x33, x9)\n    x35 = sfilter(x34, x35)\n    x36 = remove(x33, x35)\n    x37 = height(x36)\n    x38 = frontiers(x35)\n    x39 = sfilter(x38, x35)\n    x40 = mapply(size, x"], [1.1, "def solve_9f2b3a8d(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = fork(combine, vfrontier, hfrontier)\n    x5 = compose(x4, center)\n    x6 = rbind(mapply, x3)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = compose(x6, x7)\n    x9 = fork(difference, x8, identity)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ZERO)\n    x12 = lbind(ofcolor, I)\n    x13 =08916(max, x12)\n    x14 = matcher(x13, ZERO)\n    x15 = compose(flip, x14)\n    x16 = rbind(sfilter, x15)\n    x17 = lbind(occurrences, I)\n    x18 = chain(x17, x16, x15)\n    x19 = compose(x5, x18)\n    x20 = extract(x3, x19)\n    x21 = x20(I)\n    x22 = objects(x21, T, F, T)\n    x23 = colorfilter(x22, ZERO)\n    x24 = difference(x22, x23)\n    x25 = rbind(subgrid, x21)\n    x26 = apply(x25, x24)\n    x27 = rbind(colorcount, ZERO)\n    x28 = x27(x2)\n    x29 = argmax(x26, x28)\n    x30 = x29(x2)\n    x31 = objects(x30, T, F, T)\n    x32 = apply(x31, x31)\n    x33 = merge(x32)\n    x34 = size(x33)\n    x35 = rbind(subgrid, x01)\n    x36 = apply(x35, x34)\n    x37 = rightmost(x36)\n    x38 = rightmost(x33)\n    x39 = subtract(x37,"], [1.1, "def solve_1017e0b5(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = insert(ORIGIN, x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(TWO_BY_TWO, x4)\n    x6 = insert(TWx70, x5)\n    x7 = astuple(FOUR, FOUR)\n    x8 = canvas(NEG_ONE, x7)\n    x9 = astuple(THREE, ORIGIN)\n    x10 = initset(x9)\n    x11 = insert(x8, x10)\n    x12 = insert(THREE_BY_THREE, x11)\n    x13 = matcher(numcolors, FOUR)\n    x14 = sfilter(x12, x13)\n    x15 = difference(x12, x14)\n    x16 = sfilter(x15, x14)\n    x17 = mapply(size, x16)\n    x18 = argmax(x15, x17)\n    x19 = x13(x18)\n    x20 = fill(I, x1, x19)\n    x21 = fill(x20, TWO, x18)\n    x22 = asobject(x21)\n    x23 = occurrences(x22, x18)\n    x24 = time Fill(x23, x8)\n    x25 = objects(x22, T, T, T)\n    x26 = insert(ORIGIN, x25)\n    x27 = toindices(x26)\n    x28 = lbind(shift, x27)\n    x29 = occurrences(x22, x27)\n    x30 = mapply(x28, x29)\n    x31 = fill(x22, TWO, x30)\n    x32 = objects(x31, T, T, T)\n    x33 = rbind(contained, x32)\n    x34 = compose(x33, first)\n    x35 = rbind(sfilter, x34)\n    x36 = lbind(pair, x25)\n    x37 = chain(x36, x35, x35"], [1.1, "def solve_3d2fd179(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = positive(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_018326bc(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_606b0eb2(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_bd9658cf(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = height(I)\n    x9 = astuple(x8, ONE)\n    x10 = canvas(THREE, x9)\n    x11 = hconcat(x10, I)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = identity(DOWN)\n    x17 = connect(ORIGIN, x15)\n    x18 = fill(x11, THREE, x17)\n    x19 = identity(x13)\n    x20 = identity(x12)\n    x21 = identity(x12)\n    x22 = identity(F)\n    x23 = identity(ZERO)\n    x24 = compose(first, first)\n    x25 = chain(first, last, x24)\n    x26 = compose(first, first)\n    x27 = chain(last, last, x26)\n    x28 = chain(first, first, first)\n    x29 = chain(first, last, last)\n    x30 = chain(first, first, last)\n    x31 = chain(last, first, last)\n    x32 = compose(decrement, x25)\n    x33 = compose(decrement, x27)\n    x34 = fork(astuple, x32, x33)\n    x35 = compose(decrement, x27)\n    x36 = fork(multiply, x30, x35)\n    x37 = fork(add, x29, x36)\n    x38 = compose(decrement, x28)\n    x39 = fork(multiply, x30, x38)\n    x40 = fork(add, x29, x39)\n    x41 ="], [1.1, "def solve_e97729af(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = compose(leftmost, first)\n    x13 = compose(leftmost, last)\n    x14 = fork(equality, x12, x13)\n    x15 = compose(uppermost, first)\n    x16 = compose(uppermost, last)\n    x17 = fork(equality, x15, x16)\n    x18 = fork(either, x14, x17)\n    x19 = sfilter(x11, x18)\n    x20 = compose(color, first)\n    x21 = compose(center, first)\n    x22 = compose(center, last)\n    x23 = fork(connect, x21, x22)\n    x24 = fork(recolor, x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = matcher(last, ZERO)\n    x28 = decrement(x26)\n    x29 = matcher(last, x28)\n    x30 = fork(either, x27, x29)\n    x31 = matcher(first, ZERO)\n    x32 = decrement(x25)\n    x33 = matcher(first, x32)\n    x34 = fork(either, x31, x33)\n    x35 = toindices(x5)\n    x36 = sfilter(x35, x30)\n    x37 = equality(x35, x36)\n    x38 = mapply(x24, x19)\n    x39 = paint(I, x38)\n    x40 = branch(x37, x30, x34)\n    "], [1.1, "def solve_1c8c34e1(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_e096ac5d(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(remove, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_65b32423(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =323b782(I)\n    x4 = rbind(contained, x3)\n    x5 = compose(x4, last)\n    x6 = sfilter(x2, x5)\n    x7 = fork(subtract, first, last)\n    x8 = fork(multiply, sign, identity)\n    x9 = compose(x8, x7)\n    x10 = astuple(identity, dmirror)\n    x11 = astuple(cmirror, vmirror)\n    x12 = combine(x10, x11)\n    x13 = rbind(rapply, I)\n    x14 = compose(initset, first)\n    x15 = chain(first, x13, x14)\n    x16 = compose(x5, x9)\n    x17 = extract(x12, x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = x19(I)\n    x21 = mostcolor(I)\n    x22 = palette(I)\n    x23 = remove(x21, x22)\n    x24 = lbind(colorcount, I)\n    x25 = argmin(x23, x24)\n    x26 = other(x23, x25)\n    x27 = ofcolor(x20, x25)\n    x28 = ofcolor(x20, x21)\n    x29 = combine(x27, x28)\n    x30 = intersection(x27, x28)\n    x31 = difference(x29, x30)\n    x32 = fill(x20, TWO, x31)\n    x33 = vmirror(x32)\n    x34 = dmirror(x32)\n    x35 = astuple(x33, x34)\n    x36 = x17(x35)\n    x37 = rightmost(x36)\n    x38 = shoot(x37, UP_RIGHT)\n    x39 = shoot(x37, DOWN_LEFT)\n    x40 = combine(x38, x39)\n    "], [1.1, "def solve_fc32252e(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = dmirror(I)\n    x2 = objects(x1, T, F, T)\n    x3 = power(increment, FIVE)\n    x4 = lbind(remove, FIVE)\n    x5 = lbind(remove, ZERO)\n    x6 = chain(x4, x5, palette)\n    x7 = chain(x3, first, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = chain(outbox, outbox, initset)\n    x10 = chain(x8, x9,0000)\n    x11 = initset(x10)\n    x12 = lbind(contained, FOUR)\n    x13 = chain(flip, x12, palette)\n    x14 = mfilter(x11, x13)\n    x15 = vsplit(x1, TWO)\n    x16 = hsplit(x1, TWO)\n    x17 = extract(x15, x16)\n    x18 = extract(x17, x14)\n    x19 = ulcorner(x18)\n    x20 = invert(x19)\n    x21 = shift(x19, x20)\n    x22 = apply(urcorner, x21)\n    x23 = shape(x2)\n    x24 = maximum(x23)\n    x25 = apply(uppermost, x22)\n    x26 = order(x25, identity)\n    x27 = size(x26)\n    x28 = increment(x17)\n    x29 = interval(x28, x27, ONE)\n    x30 = pair(x26, x29)\n    x31 = sfilter(x30, x17)\n    x32 = mapply(first, x31)\n    x33 = compose(last, first)\n    x34 = sfilter(x1, x33)\n    x35 = mapply(last, x34)\n    x36 = combine(x32, x35)\n    x37 = fill(x1, TWO, x36)\n    x38 = asobject(x38)\n    x39 = ulcorner(x48)\n    x40 = shift"], [1.1, "def solve_eed6d643(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_00b4cf43(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_1edcfa30(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = rot96(I)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x28, x40)\n    x42 = fork(x"], [1.1, "def solve_e0ce3d62(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = equality(x5, ZERO)\n    x7 = branch(x6, identity, vmirror)\n    x8 = x7(x4)\n    x9 = ofcolor(x8, EIGHT)\n    x10 = uppermost(x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, identity, hmirror)\n    x13 = x12(x8)\n    x14 = ofcolor(x13, EIGHT)\n    x15 = ofcolor(x13, TWO)\n    x16 = rbind(shoot, DOWN)\n    x17 = mapply(x16, x14)\n    x18 = height(x13)\n    x19 = apply(first, x15)\n    x20 = insert(ZERO, x19)\n    x21 = insert(x18, x19)\n    x22 = apply(decrement, x21)\n    x23 = order(x20, identity)\n    x24 = order(x22, identity)\n    x25 = size(x15)\n    x26 = increment(x25)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = apply(tojvec, x27)\n    x29 = pair(x23, x24)\n    x30 = lbind(sfilter, x17)\n    x31 = compose(first, last)\n    x32 = chain(decrement, first, first)\n    x33 = fork(greater, x31, x32)\n    x34 = chain(increment, last, first)\n    x35 = fork(greater, x34, x31)\n    x36 = fork(both, x33, x35)\n    x37 = lbind(lbind, astuple)\n    x38 = lbind(compose, x36)\n    x39 = chain(x30, x38, x37)\n    x40"], [1.1, "def solve_b479be96(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_0c2169bb(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = partition(I)\n    x2 = objects(I, T, F, F)\n    x3 = compose(double, height)\n    x4 = fork(equality, x3, size)\n    x5 = compose(decrement, width)\n    x6 = fork(equality, x5, size)\n    x7 = fork(either, x4, x6)\n    x8 = rbind(matcher, TWO)\n    x9 = compose(x8, vmirror)\n    x10 = rbind(sfilter, x6)\n    x11 = compose(x10, hline)\n    x12 = chain(x9, x11, center)\n    x13 = compose(x9, subtract_ONE)\n    x14 = fork(subtract, x12, x13)\n    x15 = decrement(x14)\n    x16 =71(x15)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, height, width)\n    x20 = x19(x4)\n    x21 = x19(I)\n    x22 = subtract(x20, x21)\n    x23 = decrement(x22)\n    x24 = colorcount(I, x4)\n    x25 = multiply(x24, x23)\n    x26 = multiply(x25, x22)\n    x27 = add(x22, x26)\n    x28 = width(I)\n    x29 = multiply(x28, x23)\n    x30 = decrement(x29)\n    x31 = multiply(x30, x22)\n    x32 = add(x31, x3)\n    x33 = canvas(ZERO, x32)\n    x34 = ofcolor(x33, x9)\n    x35 = rbind(toobject, x33)\n    x36 = compose(x35, delta)\n    x37 = apply(x36, x34)\n    x38 = rbind(colorcount, x9)\n    x39 = apply(x38, x37)\n    x40 = ofcolor(x39, x4)\n"], [1.1, "def solve_7a5f37b4(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_ffc3223f(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(both, x29, x30)\n    x34 = fork(both, x31, x32)\n    x35 = fork(both, x33, x34)\n    x36 = compose(x"], [1.1, "def solve_524a591c(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, numcolors)\n    x3 = sfilter(I, x2)\n    x4 = fork(equality, identity, rot90)\n    x5 =47(x3)\n    x6 = sfilter(x3, x4)\n    x7 = fork(equality, identity, rot270)\n    x8 = sfilter(x3, x7)\n    x9 = fork(both, x11, x18)\n    x10 = sfilter(x4, x9)\n    x11 = compose(rot90, dedupe)\n    x12 = power(x11, FOUR)\n    x13 =\n    x10 = x12(I)\n    x14 = x12(x13)\n    x15 = subtract(x16, x21)\n    x16 = x15(I)\n    x17 = mostcolor(x14)\n    x18 = matcher(first, x17)\n    x19 = sfilter(x19, x18)\n    x20 = compose(flip, x18)\n    x21 = sfilter(x19, x20)\n    x22 = totuple(x21)\n    x23 = apply(last, x22)\n    x24 = dedupe(x23)\n    x25 = size(x24)\n    x26 = increment(x25)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = apply(tojvec, x27)\n    x29 = pair(x25, x28)\n    x30 = shift(x29, UNITY)\n    x31 = mapply(x76, x30)\n    x32 = height(x31)\n    x33 = width(x31)\n    x34 = equality(x32, x33)\n    x35 = astuple(x34, x32)\n    x36 = ONE(x35)\n    x37 =Example output:\n    1241578274\n    7711333316\n    \"\"\"\n    x1 = leastcolor(x36)\n    x2 = rot270(x74)\n    x3 = leastcolor(x2)\n    x4"], [1.1, "def solve_b2c60a3d(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = replace(I, TWO, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = apply(normalize, x2)\n    x4 = astuple(NINE, NINE)\n    x5 = canvas(ZERO, x4)\n    x6 = asindices(x5)\n    x7 = box(x6)\n    x8 = center(x6)\n    x9 = lbind(contained, ZERO)\n    x10 = rbind(subtract, x8)\n    x11 = compose(x9, x10)\n    x12 = chain(outbox,outbox, initset)\n    x13 = corners(x6)\n    x14 = mapply(x12, x13)\n    x15 = difference(x7, x14)\n    x16 = inbox(x7)\n    x17 = sfilter(x16, x11)\n    x18 = corners(x7)\n    x19 = ofcolor(x15, ZERO)\n    x20 = rbind(difference, x19)\n    x21 = rbind(chain, first)\n    x22 = lbind(x21, x18)\n    x23 = lbind(rbind, difference)\n    x24 = compose(x22, x23)\n    x25 = lbind(intersection, x2)\n    x26 = chain(size, x25, x24)\n    x27 = matcher(x26, ZERO)\n    x28 = lbind(intersection, x6)\n    x29 = chain(size, x28, x27)\n    x30 = matcher(x29, ZERO)\n    x31 = lbind(intersection, x7)\n    x32 = chain(size, x31, x30)\n    x33 = argmax(x18, x32)\n    x34 = shift(x11, x33)\n    x35 = combine(x34, x37)\n    x36 = paint(x5, x35)\n    x37 = fgpartition(x36)\n    x38 = argmax(x37, size)\n    x39 = remove(x38"], [1.1, "def solve_0a719483(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_ac3fae7a(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = rot180(I)\n    x3 = shoot(x2, UP_RIGHT)\n    x4 = rot180(I)\n    x5 = shoot(x4, DOWN_LEFT)\n    x6 = shoot(x5, LEFT)\n    x7 = shoot(x6, ZERO_BY_TWO)\n    x8 = combine(x3, x7)\n    x9 = rbind(shoot, LEFT)\n    x10 = mapply(x9, x8)\n    x11 = fgpartition(x11)\n    x12 = valmax(x11, size)\n    x13 = colorfilter(x11, x1)\n    x14 = argmax(x13, size)\n    x15 = shape(x11)\n    x16 = canvas(x1, x15)\n    x17 = fill(x16, ONE, x14)\n    x18 = replace(x17, x1, TWO)\n    x19 = objects(x18, T, F, T)\n    x20 = colorfilter(x19, ONE)\n    x21 = argmax(x20, size)\n    x22 = lbind(shoot, x21)\n    x23 = mapply(x22, x18)\n    x24 = fill(x17, ONE, x23)\n    x25 = colorfilter(x19, ONE)\n    x26 = rbind(shoot, UNITY)\n    x27 = mapply(x26, x25)\n    x28 = fill(x24, ONE, x27)\n    x29 = rbind(shoot, NEG_UNITY)\n    x30 = mapply(x29, x28)\n    x31 = fill(x28, ONE, x30)\n    x32 = fill(x31, x1, x22)\n    x33 = fill(x32, x1, x25)\n    x34 = replace(x33, x1, ONE)\n    x35 = replace(x34, x1, TWO)\n    x36 = DOWN_LEFT, UNITY)\n    x37 = initset(x36)\n    x38 = insert"], [1.1, "def solve_3ec05e30(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = rot180(I)\n    x2 = rbind(greater, ONE)\n    x3 = chain(x2, minimum, shape)\n    x4 = objects(x1, T, F, F)\n    x5 = sfilter(x4, x3)\n    x6 = fork(equality, toindices, box)\n    x7 = sfilter(x5, x6)\n    x8 = totuple(x7)\n    x9 = apply(color, x8)\n    x10 = leastcommon(x9)\n    x11 = ofcolor(x1, x10)\n    x12 = inbox(x11)\n    x13 = center(x12)\n    x14 = dneighbors(x13)\n    x15 = insert(x13, x14)\n    x16 = toobject(x15, x1)\n    x17 = mostcolor(I)\n    x18 = colorfilter(x17, x10)\n    x19 = rbind(adjacent, x8)\n    x20 = sfilter(x18, x19)\n    x21 = rbind(adjacent, x13)\n    x22 = sfilter(x18, x21)\n    x23 = pair(x20, x22)\n    x24 = colorfilter(x21, x10)\n    x25 = rbind(contained, x24)\n    x26 = compose(x25, last)\n    x27 = sfilter(x23, x26)\n    x28 = product(x27, x28)\n    x29 = sfilter(x18, first)\n    x30 = pair(x29, x28)\n    x31 =99315867(x30)\n    x32 = lbind(sfilter, x33)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(x32, x33, x43)\n    x36 = compose(x33, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = fork(connect, identity, x37)\n    x39 = mapply(x38, x29)\n"], [1.1, "def solve_d5aa0df1(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, FIVE)\n    x4 = astuple(FOUR, FOUR)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = asindices(x5)\n    x7 = rbind(toobject, I)\n    x8 = lbind(shift, x6)\n    x9 = compose(x7, x8)\n    x10 = multiply(x3, FIVE)\n    x11 = interval(ZERO, x10, FIVE)\n    x12 = apply(tojvec, x11)\n    x13 = apply(x9, x12)\n    x14 = matcher(numcolors, ONE)\n    x15 = fork(equality, identity, hmirror)\n    x16 = compose(flip, x15)\n    x17 = lbind(index, I)\n    x18 = compose(x17, ulcorner)\n    x19 = lbind(add, DOWN)\n    x20 = chain(x17, x19, ulcorner)\n    x21 = fork(equality, x18, x20)\n    x22 = compose(flip, x21)\n    x23 = fork(either, x14, x16)\n    x24 = fork(either, x23, x22)\n    x25 = compose(flip, x24)\n    x26 = lbind(multiply, TWO)\n    x27 = compose(x26, x14)\n    x28 = lbind(multiply, FOUR)\n    x29 = compose(x28, x16)\n    x30 = fork(add, x27, x29)\n    x31 = lbind(multiply, THREE)\n    x32 = compose(x31, x22)\n    x33 = lbind(multiply, EIGHT)\n    x34 = compose(x33, x25)\n    x35 = fork(add, x32, x34)\n    x36 = fork(add, x30, x35)\n    x37 = apply(x36, x13)\n    x38 = rbind(repeat,"], [1.1, "def solve_2844e168(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = subgrid(x6, I)\n    x10 = increment(x width)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(x9)\n    x17 = matcher(identity, x15)\n    x18 = frontiers(x9)\n    x19 = sfilter(x18, vline)\n    x20 = toindices(x19)\n    x21 = lbind(shift, x20)\n    x22 = height(x7)\n    x23 = matcher(first, x25)\n    x24 = compose(flip, x23)\n    x25 = toindices(x24)\n    x26 = lbind(shift, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x21, x5)\n    x29 = rbind(argmin, x28)\n    x30 = lbind(lbind, manhattan)\n    x31 = compose(x29, x30)\n    x32 = fork(shift, identity, x31)\n    x33 = mapply(x32, x22)\n    x34 = fill(x9, x3, x33)\n    x35 = x10(x34)\n    x36 =707(x35)\n    x37 = xhou(x36)\n    x38 = fork(combine, vfrontier, hfrontier)\n    x39 = x38(x37)\n    x40 = fill(x35, x3, x39)\n    O = x10(x40)\n    "], [1.1, "def solve_07d9e9fe(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ONE)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18, x41"], [1.1, "def solve_18444695(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_f16bdd75(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x20, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = compose(x36, first)\n    x38 = argmin(x35, x37)\n    x39 = first(x38)\n    x40"], [1.1, "def solve_60711474(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(both, x29, x30)\n    x34 = fork(both, x31, x32)\n    x35 = fork(both, x33, x34)\n    x36 = compose(x"], [1.1, "def solve_f7326b3b(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x20, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = compose(x36, first)\n    x38 = argmin(x35, x37)\n    x39 = ofcolor(I, x38)\n"], [1.1, "def solve_9d8d7434(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = chain(positive, size, x3)\n    x5 = sfilter(x4, x2)\n    x6 = fork(55, identity, hmirror)\n    x7 = compose(x6, vmirror)\n    x8 = astuple(TWO, ONE)\n    x9 = canvas(ZERO, x8)\n    x10 = asindices(x9)\n    x11 = center(x10)\n    x12 = increment(x11)\n    x13 = shift(x11, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = palette(I)\n    x17 = remove(x15, x16)\n    x18 = lbind(chain, size)\n    x19 = rbind(x18, toindices)\n    x20 = lbind(lbind, intersection)\n    x21 = lbind(ofcolor, I)\n    x22 = chain(x19, x20, x21)\n    x23 = compose(x5, x22)\n    x24 = palette(I)\n    x25 = colorfilter(x24, x15)\n    x26 = rbind(bordering, I)\n    x27 = compose(x26, initset)\n    x28 = fork(x ofcolor, x27, outbox)\n    x29 = lbind(argmin, x25)\n    x30 = compose(x29, x28)\n    x31 = matcher(x30, x11)\n    x32 = sfilter(x31, x26)\n    x33 = difference(x ______, x32)\n    x34 = argmin(x33, x29)\n    x35 = x35(x34)\n    x36 = inbox(x35)\n    x37 = fill(I, x39, x36)\n    x38 = height(I)\n    x39 = divide(x38, THREE)\n    x40 = increment(x39)\n    x41 ="], [1.1, "def solve_50487f8b(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = color(x4)\n    x6 = palette(I)\n    x7 = remove(x5, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = toindices(x4)\n    x11 = apply(first, x10)\n    x12 = toindices(x4)\n    x13 = apply(last, x12)\n    x14 = rbind(contained, x11)\n    x15 = compose(x14, first)\n    x16 = rbind(contained, x13)\n    x17 = compose(x16, last)\n    x18 = fork(either, x15, x17)\n    x19 = ofcolor(I, x9)\n    x20 = sfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(gravitate, x4)\n    x23 = compose(x22, initset)\n    x24 = fork(add, identity, x23)\n    x25 = fork(connect, identity, x24)\n    x26 = apply(x25, x21)\n    x27 = palette(I)\n    x28 = remove(x9, x27)\n    x29 = compose(x28, first)\n    x30 = product(x26, x29)\n    x31 = first(x30)\n    x32 = last(x30)\n    x33 =    x31(I)\n    x34 = rightmost(x33)\n    x35 = lbind(greater, x34)\n    x36 = compose(x35, first)\n    x37 =99(x36, toindices)\n    x38 = fork(either, x15, x37)\n    x39 = x38(x31)\n    x40 = rbind(contained, x39)\n    x41 = compose(x40, first)\n"], [1.1, "def solve_ffda8dc4(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(both, x29, x30)\n    x34 = fork(both, x31, x32)\n    x35 = fork(both, x33, x34)\n    x36 = compose(x"], [1.1, "def solve_58ac7cab(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = lbind(position, x18)\n    x21 = fork(shoot, center, x20)\n    x22 = mapply(x21, x19)\n    x23 = difference(x22, x18)\n    x24 = color(x18)\n    x25 = fill(I, x24, x23)\n    x26 = objects(x25, T, F, T)\n    x27 = fork(colorur, outbox, outbox)\n    x28 = apply(x27, x26)\n    x29 = contained(x28, x22)\n    x30 = sfilter(x29, x17)\n    x31 = lbind(fork,vmatching)\n    x32 = lbind(lbind, hmatching)\n    x33 = lbind(hmatching, x30)\n    x34 = lbind(gravitate, x29)\n    x35 = compose(x34, initset)\n    x36 = fork(add, identity, x35)\n    x37 = fork(connect, x33, x36)\n    x38 = mapply(x37, x31)\n"], [1.1, "def solve_aadbd750(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_09201928(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_5b31f5c4(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_88551c53(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork( astuple, x7, x6)\n    x9 = fork(astuple, x8, x4)\n    x10 = lbind(frontiers, x9)\n    x11 = rbind(rapply, x4)\n    x12 = compose(initset, x11)\n    x13 = chain(first, x11, x12)\n    x14 = compose(x10, x13)\n    x15 = lbind(contained, ZERO)\n    x16 = compose(flip, x15)\n    x17 = fork(add, x14, x16)\n    x18 = compose(initset, x17)\n    x19 = fork(rapply, x18, identity)\n    x20 = compose(first, x19)\n    x21 = compose(x20, x18)\n    x22 = astuple(x6, x6)\n    x23 = power(x21, TWO)\n    x24 = x23(x22)\n    x25 = partition(x24)\n    x26 = fork(recolor, color, x24)\n    x27 = apply(x26, x25)\n    x28 = mfilter(x27, paint)\n    x29 = double(x3)\n    x30 = power(x28, x29)\n    x31 = apply(llcorner, x27)\n    x32 = x35(x31)\n    x33 = lbind(shift, x32)\n    x34 = mapply(x33, x30)\n    x35 = urcorner(x27)\n    x36 = x35(x42)\n    x37 = paint(x24, x36)\n    x38 = combine(x33, x37)\n    x39 = paint(x38, x34)\n    O = fill(x"], [1.1, "def solve_5cc98c36(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = argmax(x3, x4)\n    x6 = color(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmax(x8, x9)\n    x11 = remove(x10, x8)\n    x12 = lbind(ofcolor, I)\n    x13 = mapply(x12, x11)\n    x14 = subgrid(x13, I)\n    x15 = objects(x14, T, F, F)\n    x16 = colorfilter(x15, x6)\n    x17 = initset(x10)\n    x18 = insert(x6, x17)\n    x19 = lbind(intersection, x18)\n    x20 = chain(positive, size, x19)\n    x21 = chain(positive, decrement, size)\n    x22 = fork(either, x20, x21)\n    x23 = rbind(toobject, x14)\n    x24 = compose(corners, outbox)\n    x25 = chain(palette, x23, x24)\n    x26 = rbind(branch, x6)\n    x27 = chain(flip, x22, x25)\n    x28 = compose(first, x25)\n    x29 = fork(x76, x28, x26)\n    x30 = apply(uppermost, x16)\n    x31 = order(x30, identity)\n    x32 = lbind(apply, x29)\n    x33 = rbind(order, leftmost)\n    x34 = lbind(sfilter, x16)\n    x35 = lbind(matcher, uppermost)\n    x36 = compose(x34, x35)\n    x37 = chain(x32, x33, x36)\n    O = apply(x37"], [1.1, "def solve_276a72e2(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = lbind(apply,last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = rbind(toobject, I)\n    x33 = compose(x32, delta)\n    x34 = chain(palette, x32, x33)\n    x35 = rbind(upscale, x30)\n    x36 = chain(normalize, x35, x34)\n    x37 = fork(equality, x36, identity)\n    x38 = compose(flip, x37)\n    x"], [1.1, "def solve_651d893a(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_bcc47912(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = double(x37)\n    x39 = multiply(x28, x38)\n    x40 = shift(x31, x"], [1.1, "def solve_5a64c0ca(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_df12dfec(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_fc4d3983(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = leastcolor(x1)\n    x4 = leastcolor(x2)\n    x5 = ofcolor(I, x3)\n    x6 = center(x5)\n    x7 = ofcolor(I, x4)\n    x8 = center(x7)\n    x9 = height(I)\n    x10 = width(I)\n    x11 = hfrontier(x6)\n    x12 = fill(I, x3, x11)\n    x13 = hfrontier(x8)\n    x14 = fill(x12, x4, x13)\n    x15 = decrement(x10)\n    x16 = decrement(x9)\n    x17 = halve(x9)\n    x18 = tojvec(x15)\n    x19 = connect(ORIGIN, x18)\n    x20 = fill(x14, x3, x19)\n    x21 = toivec(x16)\n    x22 = astuple(x16, x15)\n    x23 = connect(x21, x22)\n    x24 = fill(x20, x4, x23)\n    x25 = decrement(x17)\n    x26 = toivec(x25)\n    x27 = connect(ORIGIN, x26)\n    x28 = fill(x24, x3, x27)\n    x29 = tojvec(x15)\n    x30 = decrement(x17)\n    x31 = astuple(x30, x15)\n    x32 = connect(x29, x31)\n    x33 = fill(x28, x3, x32)\n    x34 = toivec(x17)\n    x35 = toivec(x16)\n    x36 = connect(x34, x35)\n    x37 = fill(x33, x4, x36)\n    x38 = astuple(x17, x15)\n    x39 = astuple(x16, x15)\n    x40 = connect(x38, x39)\n    O = fill(x37,"], [1.1, "def solve_4e715061(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(SIX)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = connect(x7, x10)\n    x12 = combine(x8, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_1b142d6e(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_0613d470(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_4101059e(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = lbind(apply, size)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(I, first)\n    x13 = chain(size, x11, x12)\n    x14 = matcher(x13, ONE)\n    x15 = compose(minimum, shape)\n    x16 = lbind(apply, x15)\n    x17 = lbind(ofcolor, I)\n    x18 = chain(x16, x17, x9)\n    x19 = fork(intersection, x9, x18)\n    x20 = fork(shift, x18, x19)\n    x21 = compose(x16, x20)\n    x22 = fork(combine, x21, x29)\n    x23 = fork(recolor, x22, x20)\n    x24 = difference(x1, x3)\n    x25 = power(x23, TWO)\n    x26 = astuple(x253, x27)\n    x27 = astuple(x24, x28)\n    x28 = astuple(x25, x27)\n    x29 = rbind(contained, x26)\n    x30 = compose(x29, last)\n    x31 = rbind(apply, x27)\n    x32 = lbind(position, x25)\n    x33 = chain(x31, x32, x29)\n    x34 = fork(aint, x30, x33)\n    x35 = compose(toobject, first)\n    x36 = compose(numcolors, x35)\n    x37 = matcher(x36, ONE)\n    x38 = fork(both, x35, x37)"], [1.1, "def solve_017fbb5d(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x30, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = shift(x35, x36)\n    x38 = product(x41, x37)\n    x39 = paint(I, x38)\n    "], [1.1, "def solve_dd97ead6(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = lbind(add, FOUR)\n    x2 = compose(x1, size)\n    x3 = fork(equality, toindices, x2)\n    x4 = rbind(add, FOUR)\n    x5 = compose(x4, size)\n    x6 = sfilter(x1, x5)\n    x7 = compose(vline, merge)\n    x8 = sfilter(x6, x7)\n    x9 = argmax(x8, size)\n    x10 = toindices(x9)\n    x11 = fork(either, x7, x10)\n    x12 = fork(add, first, last)\n    x13 = compose(flip, x12)\n    x14 = sfilter(x11, x13)\n    x15 = increment(x14)\n    x16 = subgrid(x9, I)\n    x17 = hconcat(x16, x16)\n    x18 = hconcat(x17, x17)\n    x19 = vmirror(x18)\n    x20 = vconcat(x19, x18)\n    x21 = vconcat(x20, x19)\n    x22 = hmirror(x21)\n    x23 = cellwise(x22, x20, x23)\n    x24 = asobject(x23)\n    x25 = paint(x21, x24)\n    x26 = asindices(x25)\n    x27 = box(x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(x28)\n    x31 = remove(x29, x30)\n    x32 = lbind(chain, size)\n    x33 = rbind(x32, asindices)\n    x34 = lbind(lbind, contained)\n    x35 = lbind(ofcolor, x25)\n    x36 = compose(x34, x35)\n    x37 = chain(x33, x36, outbox)\n    x38 = lbind(sfilter, x41)\n    x39 = rbind(ofcolor, x29)"], [1.1, "def solve_e95747ed(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = astuple(SIX, FIVE)\n    x2 = size(I)\n    x3 = decrement(x2)\n    x4 = astuple(FOUR, FOUR)\n    x5 = canvas(ZERO, x4)\n    x6 = tojvec(x3)\n    x7 = connect(ORIGIN, x6)\n    x8 = equality(x2, FOUR)\n    x9 = insert(UNITY, x7)\n    x10 = branch(x8, x9, x7)\n    x11 = merge(x10)\n    x12 = size(x11)\n    x13 = equality(x12, FOUR)\n    x14 = astuple(ONE, x13)\n    x15 = connect(x11, x14)\n    x16 = toobject(x15, I)\n    x17 =55object(x16, x16)\n    x18 = lefthalf(I)\n    x19 = righthalf(I)\n    x20 = connect(x18, x19)\n    x21 = toobject(x20, x19)\n    x22 =99999(x21, x20)\n    x23 = branch(x8, x22, x21)\n    x24 = connect(x16, x23)\n    x25 = backdrop(x24)\n    x26 = toobject(x25, x19)\n    x27 =99999(x26, x20)\n    x28 = astuple(ZERO, x13)\n    x29 = initset(x28)\n    x30 = insert(x29, x27)\n    x31 = backdrop(x30)\n    x32 = width(x31)\n    x33 = toivec(x32)\n    x34 = tojvec(x33)\n    x35 = connect(x33, x34)\n    x36 = height(x35)\n    x37 = toivec(x36)\n    x38 = initset(x37)\n    x39 = insert(x38, x35)\n    x40 = insert(x36, x39)\n    x41 = combine(x35, x40"], [1.1, "def solve_1417d068(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = double(x2)\n    x12 = asindices(I)\n    x13 = urcorner(x12)\n    x14 = index(I, x13)\n    x15 = astuple(x14, x13)\n    x16 = ulcorner(x12)\n    x17 = repeat(x16, ONE)\n    x18 = inequality(x10, x17)\n    x19 =245(x18)\n    x20 =\n    215 = mostcolor(I)\n    x21 = asindices(I)\n    x22 = astuple(x21, x13)\n    x23 = initset(x22)\n    x24 = position(x23, x23)\n    x25 = compose(last, last)\n    x26 = astuple(x24, x25)\n    x27 = add(x26, x24)\n    x28 = shoot(x27, x248)\n    x29 = shoot(x27, x326)\n    x30 = shoot(x27, x28)\n    x31 = combine(x29, x30)\n    x32 = first(x31)\n    x33 = last(x31)\n    x34 = toobject(x33, I)\n    x35 = mostcommon(x34)\n    x36 = matcher(first, x35)\n    x37 = compose(flip, x36)\n    x38 = sfilter(x32, x37)\n    x39 = rbind(shoot, DOWN)\n    x40 = shoot(x39, x38)\n    x41 ="], [1.1, "def solve_0632eb05(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = compose(leftmost, first)\n    x13 = compose(leftmost, last)\n    x14 = fork(equality, x12, x13)\n    x15 = compose(uppermost, first)\n    x16 = compose(uppermost, last)\n    x17 = fork(equality, x15, x16)\n    x18 = fork(either, x14, x17)\n    x19 = sfilter(x11, x18)\n    x20 = compose(color, first)\n    x21 = compose(center, first)\n    x22 = compose(center, last)\n    x23 = fork(connect, x21, x22)\n    x24 = fork(recolor, x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = matcher(last, ZERO)\n    x28 = decrement(x26)\n    x29 = matcher(last, x28)\n    x30 = fork(either, x27, x29)\n    x31 = matcher(first, ZERO)\n    x32 = decrement(x25)\n    x33 = matcher(first, x32)\n    x34 = fork(either, x31, x33)\n    x35 = toindices(x5)\n    x36 = sfilter(x35, x30)\n    x37 = equality(x35, x36)\n    x38 = mapply(x24, x19)\n    x39 = paint(I, x38)\n    x40 = branch(x37, x30, x34)\n    "], [1.1, "def solve_e9f322e9(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = asobject(I)\n    x2 = delta(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = multiply(x4, x4)\n    x6 = canvas(x3, x5)\n    x7 = asobject(I)\n    x8 = decrement(x7)\n    x9 = mostcolor(I)\n    x10 = shape(I)\n    x11 = add(x10, THREE)\n    x12 = canvas(x9, x11)\n    x13 = asobject(I)\n    x14 = decrement(x13)\n    x15 = toivec(x14)\n    x16 = add(x15, THREE)\n    x17 = shift(x13, x16)\n    x18 = paint(x6, x17)\n    x19 = shift(x8, THREE)\n    x20 = paint(x18, x19)\n    x21 = astuple(x12, x16)\n    x22 = astuple(x9, x16)\n    x23 = astuple(x21, x22)\n    x24 = initset(x23)\n    x25 =71(x24)\n    x26 = backdrop(x25)\n    x27 = recolor(x3, x26)\n    x28 = astuple(x24, x6)\n    x29 = canvas(x9, x28)\n    x30 =0000000(x29)\n    x31 = recolor(x3, x30)\n    x32 = combine(x27, x31)\n    x33 = recolor(x9, x32)\n    x34 = combine(x29, x33)\n    x35 = recolor(x3, x34)\n    x36 = combine(x31, x35)\n    x37 = recolor(x3, x36)\n    x38 = combine(x24, x37)\n    x39 = paint(x36, x38)\n    x40 = ofcolor(x38, x3)\n    x41 = asobject(x40)\n    x42 = recolor(x9, x41)\n    x"], [1.1, "def solve_0f743c4f(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind,12)\n    x35 = compose(x34, x30)\n    x36 = lbind(apply, last)\n    x37 = chain(x32, x33, x35)\n    x38 = rbind(sfilter, x37)\n    x39 = chain(asobject, x38, x29)\n    x40 = fork(shift, x39, x33)\n    x41 = mapply(x40, x8)\n    x42 = paint"], [1.1, "def solve_37de8dbf(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, index)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, x37)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x31"], [1.1, "def solve_0baed825(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(mirror, I)\n    x2 = lbind(shift, I)\n    x3 = compose(x1, x2)\n    x4 = fork(combine, x3, hmirror)\n    x5 = compose(x4, vmirror)\n    x6 = lbind(shift, I)\n    x7 = fork(combine, x6, vmirror)\n    x8 = compose(x5, x7)\n    x9 = palette(I)\n    x10 = fork(combine, x8, x9)\n    x11 = compose(x10, x8)\n    x12 = rbind(extract, x11)\n    x13 = chain(last, first, x12)\n    x14 = decrement(x13)\n    x15 =\n    x14, ZERO)\n    x16 = remove(ZERO, x9)\n    x17 = double(x16)\n    x18 = rbind(multiply, x17)\n    x19 = chain(x18, width, x12)\n    x20 = decrement(x19)\n    x21 = lbind(greater, x17)\n    x22 = compose(x21, x19)\n    x23 = chain(x20, down, x22)\n    x24 = lbind(compose, x5)\n    x25 = x24(x12)\n    x26 = compose(x25, x19)\n    x27 = fork(sfilter, x26, x23)\n    x28 = compose(size, x27)\n    x29 = palette(I)\n    x30 = argmax(x29, x28)\n    x31 = objects(I, T, F, T)\n    x32 = colorfilter(x31, x30)\n    x33 = difference(x32, x31)\n    x34 = rbind(subgrid, I)\n    x35 = order(x33, x34)\n    x36 = mapply(x25, x35)\n    O = subgrid(x36, I)\n    return O"], [1.1, "def solve_6927c569(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = frontiers(I)\n    x4 = merge(x3)\n    x5 = mostcolor(x4)\n    x6 =66262100 box(x2)\n    x7 = fork(multiply, height, width)\n    x8 = halve(x7)\n    x9 = matcher(x8, x6)\n    x10 = compose(flip, x9)\n    x11 = mfilter(x1, x5)\n    x12 = mfilter(x1, x10)\n    x13 = paint(I, x11)\n    O = paint(x13, x12)\n    return O"], [1.1, "def solve_a7872880(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = remove(x3, x2)\n    x5 = lbind(colorcount, I)\n    x6 = argmax(x4, x5)\n    x7 = remove(x6, x4)\n    x8 = lbind(contained, x7)\n    x9 = chain(flip, x8, color)\n    x10 = rbind(sfilter, x9)\n    x11 = lbind(matcher, first)\n    x12 = compose(x11, x10)\n    x13 = chain(x10, x12, first)\n    x14 = lbind(18vas, ZERO)\n    x15 = compose(x14, x13)\n    x16 = chain(x15, shape, x1)\n    x17 = fork(paint, x16, normalize)\n    x18 = fork(colorfilter, x17, x15)\n    x19 = compose(positive, size)\n    x20 = rbind(sfilter, x19)\n    x21 = lbind(shift, x10)\n    x22 = chain(x20, x21, x18)\n    x23 = lbind(mapply, x22)\n    x24 = compose(O = x23(x21)\n    x25 = fork(mapply, x24, x18)\n    x26 = compose(x21, x23)\n    x27 = fork(mapply, x26, x25)\n    x28 = fork(paint, x17, x27)\n    x29 = compose(x23, x27)\n    x30 = fork(c909, x29, x28)\n    x31 = compose(x27, x30)\n    x32 = fork(paint, x16, x31)\n    x33 = mapply(x32, x4)\n    O = replace(x33, x6, xmist shade)\n    return O"], [1.1, "def solve_38f2dd0f(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 =Example output:\n    Example output:\n    0000000000\n    0000000000\n    0000000002\n    0000000002\n    0000000000\n    0000000000\n    0000000002\n    0000000000\n    0000000000\n    0000000000\n    \"\"\"\n    x1 = vmirror(I)\n    x2 = lefthalf(x1)\n    x3 = righthalf(x1)\n    x4 = vmirror(x3)\n    x5 = cellwise(x2, x4, ZERO)\n    O = replace(x5, ONE, TWO)\n    return O"], [1.1, "def solve_31aee6f2(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = totuple(x3)\n    x5 = apply(color, x4)\n    x6 = mostcommon(x5)\n    x7 = index(I, x6)\n    x8 = backdrop(x2)\n    x9 = box(x8)\n    x10 = fill(I, x6, x9)\n    x11 = ulcorner(x2)\n    x12 = index(I, x11)\n    x13 = subgrid(x12, I)\n    x14 = width(x13)\n    x15 = astuple(x14, x14)\n    x16 = crop(x13, ORIGIN, x15)\n    x17 = rot90(x16)\n    x18 = download(x17, x14)\n    x19 = height(x13)\n    x20 = astuple(x19, x14)\n    x21 = crop(x13, ORIGIN, x20)\n    x22 = rot90(x21)\n    x23 =151(x22)\n    x24 = ofcolor(x23, x6)\n    x25 = dmirror(x24)\n    x26 = identity(x25)\n    x27 = subgrid(x26, x31)\n    x28 = ofcolor(x27, x6)\n    x29 = invert(x28)\n    x30 = shift(x29, x29)\n    O = fill(x27, x6, x30)\n    return O"], [1.1, "def solve_b54c8698(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = argmax(x1, x2)\n    x5 = ulcorner(x3)\n    x6 = urcorner(x3)\n    x7 = index(I, x5)\n    x8 = equality(x7, EIGHT)\n    x9 = branch(x8, dmirror, identity)\n    x10 = branch(x8, uppermost, leftmost)\n    x11 = order(x1, x10)\n    x12 = apply(color, x11)\n    x13 = repeat(x12, ONE)\n    x14 = merge(x11)\n    x15 = remove(x4, x11)\n    x16 = repeat(x14, ONE)\n    x17 = combine(x13, x16)\n    x18 = repeat(NEG_ONE, x17)\n    x19 = dmirror(x18)\n    x20 = remove(x9, x18)\n    x21 = dmirror(x20)\n    x22 = combine(x19, x21)\n    x23 = pair(x17, x22)\n    x24 = multiply(TWO, THREE)\n    x25 = power(x24, TWO)\n    x26 = x25(x23)\n    x27 = hmirror(x26)\n    x28 = x25(x22)\n    x29 = dedupe(x28)\n    x30 = x25(x29)\n    x31 =66(x27)\n    x32 =66(x25)\n    x33 =x19(x31)\n    x34 = x19(x32)\n    x35 = subtract(x34, x33)\n    x36 = x34(x30)\n    x37 =64(x35)\n    x38 = shift(x34, x37)\n    x39 = paint(I, x38)\n    O = x9(x39)\n    return O"], [1.1, "def solve_029ffcc3(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = chain(palette, x2, frontiers)\n    x4 = rbind(branch, Core)\n    x5 = chain(size, dedupe, x4)\n    x6 = compose(x5, x3)\n    x7 = argmax(x1, x6)\n    x8 = x7(x1)\n    x9 = flip(x8)\n    x10 = branch(x9, tophalf, lefthalf)\n    x11 = branch(x9, bottomhalf, righthalf)\n    x12 = x10(I)\n    x13 = x10(I)\n    x14 = branch(x12, leftmost, rightmost)\n    x15 = x14(x13)\n    x16 = x14(x13)\n    x17 = greater(x15, x16)\n    x18 = uppermost(x7)\n    x19 = uppermost(x7)\n    x20 = greater(x18, x19)\n    x21 = lbind(gravitate, x7)\n    x22 =350(x21)\n    x23 = pair(x19, x22)\n    x24 = sfilter(x23, x20)\n    x25 = mapply(x21, x24)\n    O = fill(I, TWO, x25)\n    return O"], [1.1, "def solve_e142779d(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    x5 = branch(x3,2phalf, bottomhalf)\n    x6 = x4(I)\n    x7 = x5(I)\n    O = x6(x6)\n    return O"], [1.1, "def solve_43241e81(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(d51158, x9)\n    x11 = initset(x10)\n    x12 = insert(x3, x11)\n    x13 = width(I)\n    x14 = astuple(x13, x12)\n    x15 = crop(I, ORIGIN, x14)\n    x16 = cover(x15, x12)\n    x17 =232(x16)\n    x18 = asobject(x17)\n    x19 = ulcorner(x2)\n    x20 = shift(x18, x19)\n    x21 = paint(I, x20)\n    x22 = objects(x21, T, T, T)\n    x23 = apply(ulcorner, x22)\n    x24 = contained(x18, x23)\n    x25 = increment(x12)\n    x26 = rbind(divide, x25)\n    x27 = apply(x26, x24)\n    x28 = astuple(x27, x14)\n    x29 = shift(x20, x28)\n    x30 = paint(x21, x29)\n    O = hmirror(x30)\n    return O"], [1.1, "def solve_de7a7577(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(toindices, I)\n    x2 = compose(x1, partition)\n    x3 = fork(multiply, height, width)\n    x4 = fork(equality, size, x3)\n    x5 = compose(x4, fork)\n    x6 = argmax(x1, x5)\n    x7 = difference(x1, x6)\n    x8 = remove(x6, x7)\n    x9 = merge(x8)\n    x10 = color(x9)\n    x11 = uppermost(x6)\n    x12 = leftmost(x6)\n    x13 = height(x6)\n    x14 = astuple(x13, ONE)\n    x15 = add(x14, TWO)\n    x16 = invert(x15)\n    x17 = rightmost(x6)\n    x18 = lbind(subtract, x17)\n    x19 = add(NEG_ONE, x18)\n    x20 = invert(x19)\n    x21 = rightmost(x6)\n    x22 = lbind(subtract, x21)\n    x23 = sign(x22)\n    x24 = sfilter(x18, x23)\n    x25 = combine(x16, x24)\n    x26 = hline(x25)\n    x27 = branch(x26, identity, dmirror)\n    x28 = x27(x6)\n    x29 = x27(x28)\n    x30 = multiply(x11, x14)\n    x31 = ulcorner(x6)\n    x32 = lrcorner(x6)\n    x33 = shift(x25, x31)\n    x34 = shift(x25, x32)\n    x35 =1000(x92, x33)\n    x36 =1000(x39, x34)\n    x37 = combine(x35, x36)\n    x38 = intersection(x33, x37)\n    O = fill(x23, x10, x38)\n    return O"], [1.1, "def solve_e672dac9(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =72(x2)\n    x4 = shape(I)\n    x5 = multiply(x4, x4)\n    x6 = canvas(ZERO, x5)\n    x7 =3af2dmirror(x6)\n    x8 =1875221\n    x9 = palette(I)\n    x9 = lbind(colorcount, I)\n    x10 = compose(x9, double)\n    x11 = argmin(x8, x10)\n    x12 = other(x8, x11)\n    x13 = colorcount(I, x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x12, x13)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = replace(I, x12, x13)\n    x19 = color(x16)\n    x20 = increment(x width)\n    x21 = insert(x16, x19)\n    x22 = astuple(x20, x21)\n    x23 = shift(x21, x22)\n    x24 = canvas(ZERO, x4)\n    x25 = colorcount(x24, x12)\n    x26 = normalize(x24)\n    x27 = shift(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    O = fill(x24, x12, x30)\n    return O"], [1.1, "def solve_fc52ef60(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = colorfilter(x2, SIX)\n    x4 = difference(x2, x3)\n    x5 = fork(equality, toindices, box)\n    x6 = rbind(greater, TWO)\n    x7 = compose(x6, contained)\n    x8 = sfilter(x4, x7)\n    x9 = rbind(greater, ONE)\n    x10 = compose(x9, corners)\n    x11 = sfilter(x8, x10)\n    x12 = combine(x8, x11)\n    x13 = mapply(d4 asindices, x12)\n    x14 = difference(x12, x13)\n    x15 =object(x14, I)\n    x16 = mapply(x11, x15)\n    x17 = fill(I, THREE, x16)\n    x18 = increment(x6)\n    x19 = canvas(ZERO, x18)\n    x20 = asobject(I)\n    x21 = shift(x20, UNITY)\n    x22 = paint(x19, x21)\n    x23 = compress(x22)\n    x24 =28825342_x23)\n    x25 = branch(x4, x27, x24)\n    x26 = asindices(x25)\n    x27 = box(x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = matcher(first, x29)\n    x31 = compose(flip, x30)\n    x32 = sfilter(x26, x31)\n    x33 = normalize(x32)\n    x34 = color(x33)\n    x35 = toindices(x33)\n    x36 = compose(toindices, normalize)\n    x37 = matcher(x36, x35)\n    x38 = mfilter(x1, x37)\n    O = fill(x33, x4, x38)\n    return O"], [1.1, "def solve_156cb07e(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = fork(astuple, dmirror, identity)\n    x3 = x2(I)\n    x4 = argmin(x1, x2)\n    x5 = argmax(x1, x2)\n    x6 = x2(x5)\n    x7 = equality(x6, ONE)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(x5)\n    x10 = branch(x7, x5, x9)\n    x11 = x10(x7)\n    x12 = width(x11)\n    x13 = first(x12)\n    x14 = hupscale(x11, x13)\n    x15 = ofcolor(x14, ONE)\n    x16 = lefthalf(x15)\n    x17 = height(x16)\n    x18 = width(x16)\n    x19 = righthalf(x16)\n    x20 = lefthalf(x19)\n    x21 = righthalf(x16)\n    x22 = ofcolor(x21, ONE)\n    x23 = righthalf(x22)\n    x24 = palette(x17)\n    x25 = palette(x24)\n    x26 = difference(x24, x25)\n    x27 = palette(x21)\n    x28 = other(x27, ZERO)\n    x29 = replace(x14, x28, ONE)\n    x30 = ofcolor(x29, TWO)\n    x31 = rightmost(x30)\n    x32 = rightmost(x28)\n    x33 = greater(x61, x32)\n    x34 = LEFTmost(x30)\n    x35 = RIGHT(x34, x31)\n    x36 =14(x35)\n    x37 = center(x36)\n    x38 = branch(x33, x20, x37)\n    x39 = paint(x29, x38)\n    O = x8(x39)\n    return O"], [1.1, "def solve_b8d32e97(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = replace(I, SIX, TWO)\n    x2 =4112(x1)\n    x3 =8(x2)\n    x4 = apply(normalize, x3)\n    x5 = astuple(ONE, THREE)\n    x6 = x2(x5)\n    x7 =316(subtract, x6)\n    x8 = apply(ulcorner, x4)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    x11 = paint(I, x10)\n    O = rot90(x11)\n    return O"], [1.1, "def solve_6d474cf4(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, FOUR, x4)\n    x6 = argmax(x1, size)\n    x7 = x2(x6)\n    x8 = toindices(x7)\n    x9 = x2(x8)\n    x10 = fill(x5, ONE, x9)\n    x11 = apply(first, x10)\n    x12 =09argmin(x11, identity)\n    x13 = height(x12)\n    x14 = increment(x13)\n    x15 = frontiers(I)\n    x16 = color(x12)\n    x17 = astuple(x16, x14)\n    x18 = repeat(x17, ONE)\n    x19 = combine(x18, x15)\n    x20 = mpapply(recolor, x19, x15)\n    x21 = paint(x10, x20)\n    x22 = delta(x12)\n    x23 = asindices(x22)\n    x24 = box(x23)\n    x25 = toobject(x24, I)\n    x26 = identity(x25)\n    x27 = apply(center, x25)\n    x28 =167(x26)\n    x29 = increment(x28)\n    x30 = shift(x25, x29)\n    x31 = toobject(x30, I)\n    x32 =15, x31)\n    x33 = hmirror(x32)\n    x34 = shift(x29, x33)\n    x35 = toobject(x34, I)\n    x36 = apply(color, x35)\n    x37 = combine(x20, x36)\n    x38 = mapply(dmirror, x37)\n    O = paint(x21, x38)\n    return O"], [1.1, "def solve_c06373bc(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = equality(x2, I)\n    x4 = branch(x3, dmirror, identity)\n    x5 = x4(I)\n    x6 = shape(x5)\n    x7 = canvas(ZERO, x6)\n    x8 = hconcat(x5, x7)\n    x9 = objects(x8, T, F, F)\n    x10 = color(x2)\n    x11 = palette(x2)\n    x12 = other(x11, x10)\n    x13 = switch(x8, x12, I)\n    x14 =18601(x9)\n    x15 = lbind(colorfilter, x14)\n    x16 = compose(x15, color)\n    x17 = rbind(sfilter, x16)\n    x18 = chain(positive, size, x17)\n    x19 = dmirror(x8)\n    x20 = sfilter(x19, x18)\n    x21 = rbind(sizefilter, x20)\n    x22 = merge(x21)\n    x23 =7(x22)\n    x24 = apply(merge, x23)\n    x25 = mmirror(x24)\n    x26 = cellwise(x25, x8, ONE)\n    x27 = apply(llcorner, x24)\n    x28 = lbind(shift, x2)\n    x29 = mapply(x28, x27)\n    x30 = pair(x29, x26)\n    x31 = sfilter(x30, first)\n    x32 = mapply(sighalf, x31)\n    O = smirror(x32)\n    return O"], [1.1, "def solve_ea676d53(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmin(x2, size)\n    x4 = colorfilter(x2, x3)\n    x5 = merge(x4)\n    x6 = product(x4, x5)\n    x7 = fork(divide, first, last)\n    x8 =\n    x9 = order(x6, x7)\n    x9 = mpapply(recolor, x8, x9)\n    O = paint(I, x9)\n    return O"], [1.1, "def solve_22da92b5(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(add, NINE)\n    x2 =79655(x1)\n    x3 = apply(x2, x1)\n    x4 = fork(equality, identity, dmirror)\n    x5 = compose(x4, dedupe)\n    x6 = x5(x3)\n    x7 = size(x6)\n    x8 = rbind(repeat, x7)\n    x9 = apply(x8, x6)\n    O = x5(x9)\n    return O"], [1.1, "def solve_f52db621(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = rbind(Example output:\n    8888888888\n    8218998268\n    8113811228\n    8186760828\n    8180660828\n    8087188888\n    8888888888\n    \"\"\"\n    x2 = shape(I)\n    x3 = partition(I)\n    x4 = argmax(x3, size)\n    x5 = canvas(x4, x2)\n    x6 = argmin(x3, size)\n    x7 = palette(x6)\n    x8 = remove(x4, x7)\n    x9 =004(x8, x5)\n    x10 = ofcolor(I, x9)\n    x11 = normalize(x5)\n    x12 = shape(x11)\n    x13 = increment(x12)\n    x14 = lbind(multiply, x13)\n    x15 = toivec(x14)\n    x16 = shift(x11, x15)\n    O = fill(I, x9, x16)\n    return O"], [1.1, "def solve_8c411f50(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = partition(I)\n    x2 =1111(89, ONE)\n    x3 = argmin(x1, size)\n    x4 = cover(I, x3)\n    x5 = normalize(x3)\n    x6 = shift(x5, UNITY)\n    x7 =11f8(x2)\n    x8 = argmin(x1, size)\n    x9 = width(x6)\n    x10 = divide(x9, FIVE)\n    x11 = increment(x10)\n    x12 = width(x6)\n    x13 = interval(ZERO, x12, x11)\n    x14 = rbind(multiply, x6)\n    x15 = apply(x14, x13)\n    x16 = lbind(shift, x6)\n    x17 = mapply(x16, x15)\n    x18 = fill(x4, FIVE, x17)\n    x19 = objects(x18, T, F, T)\n    x20 = argmax(x19, size)\n    x21 = shift(x20, UNITY)\n    x22 = paint(x18, x21)\n    x23 =8216(x22, x8)\n    x24 = astuple(x23, x23)\n    x25 = x16(x24)\n    x26 = ofcolor(x25, FIVE)\n    x27 = fill(x22, ZERO, x26)\n    O = fill(x27, ONE, x25)\n    return O"], [1.1, "def solve_e5cc93b2(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 =445(I)\n    x2 =129(x1)\n    x3 = branch(x2, vsplit, hsplit)\n    x4 = x3(I, TWO)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = width(x6)\n    x8 = interval(ZERO, x7, ONE)\n    x9 = product(x8, x8)\n    x10 = rbind(multiply, x1)\n    x11 = apply(x10, x9)\n    x12 = lbind(colorcount, x5)\n    x13 = argmax(x11, x12)\n    x14 = shift(x3, x13)\n    x15 = apply(x5, x14)\n    x16 = product(x15, x15)\n    x17 = lbind(colorcount, x5)\n    x18 = apply(x17, x16)\n    x19 = product(x18, x18)\n    x20 = matcher(first, xIVE)\n    x21 = compose(flip, x20)\n    x22 = fork(both, x20, x21)\n    x23 = sfilter(x19, x22)\n    x24 = compose(hperiod, asobject)\n    x25 = height(x23)\n    x26 = increment(x25)\n    x27 = lbind(multiply, x26)\n    x28 = height(x23)\n    x29 = increment(x28)\n    x30 = astuple(x27, x29)\n    x31 = lbind(shift, x23)\n    x32 =20(x31)\n    x33 = multiply(x30, x32)\n    x34 = shift(x24, x33)\n    x35 = paint(x5, x34)\n    x36 =265(x35)\n    O = downscale(x35, x36)\n    return O"], [1.1, "def solve_b7de00be(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = initset(ORIGIN)\n    x2 = insert(ORIGIN, x1)\n    x3 = rbind(multiply, THREE)\n    x4 = apply(x3, x2)\n    x5 = astuple(NEG_TWO, NEG_TWO)\n    x6 = shift(x4, x5)\n    x7 = fork(insert, identity, backdrop)\n    x8 = apply(x7, x6)\n    x9 = rbind(toobject, I)\n    x10 = apply(x9, x8)\n    x11 = rbind(colorcount, TWO)\n    x12 = apply(x11, x10)\n    x13 = matcher(first, TWO)\n    x14 = compose(flip, x13)\n    x15 = rbind(sfilter, x14)\n    x16 = lbind(occurrences, I)\n    x17 = chain(positive, size, x16)\n    x18 = compose(x17, x19)\n    x19 = lbind(lbind, equality)\n    x20 = lbind(lbind, shift)\n    x21 = compose(x20, x12)\n    x22 = compose(x19, x21)\n    x23 = fork(argmax, x21, x22)\n    x24 = urcorner(x5)\n    x25 =9999(x24, x23)\n    x26 = cover(I, x25)\n    x27 = shoot(x26, x24)\n    x28 = fork(combine, x27, x23)\n    x29 = mapply(x28, x27)\n    O = fill(x26, ONE, x29)\n    return O"], [1.1, "def solve_e00f2949(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, toindices)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x12, x11)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(positive, size)\n    x17 = lbind(com SYs, I)\n    x18 = compose(x16, x17)\n    x19 = fork(shift, identity, x18)\n    x20 = mapply(x19, x4)\n    O = paint(I, x20)\n    return O"], [1.1, "def solve_90a7b12e(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = ONE\n    add, SEVEN, TEN)\n    x2 = rbind(add, x1)\n    x3 = compose(x2, last)\n    x4 = fork(equality, first, x3)\n    x5 = compose(flip, x4)\n    x6 = sfilter(x1, x5)\n    x7 =51645(x6)\n    x8 = objects(x7, T, T, T)\n    x9 = rbind(colorcount, vERO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, x7)\n    return O"], [1.1, "def solve_324842da(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = extract(x2, x4)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 =1817m5591(I):\n    x9 = add(UNITY, x6)\n    x10 = increment(x9)\n    x11 = power(x7, x10)\n    x12 = subtract(x6, x11)\n    x13 = astuple(x12, x12)\n    x14 = canvas(ZERO, x13)\n    x15 = shoot(x6, UNITY)\n    x16 = combine(x15, x14)\n    x17 = rbind(shoot, x16)\n    x18 = mapply(x17, x15)\n    x19 = fill(x14, x1, x18)\n    x20 = merge(x2)\n    x21 = fill(x19, TWO, x20)\n    O = replace(x21, x1, TWO)\n    return O"], [1.1, "def solve_b8c81847(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n     x14 = apply(x4, x13)\n    x15 = ofcolor(I, FOUR)\n    O = subgrid(x15, x14)\n    return O"], [1.1, "def solve_a51d8257(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(329, I)\n    x2 = compose(x1, dneighbors)\n    x3 = fork(equality, identity, x2)\n    x4 = compose(x3, I)\n    x5 = mostcolor(I)\n    x6 = fork(both, x3, x4)\n    x7 = fork(both, x5, x6)\n    x8 = compose(flip, x7)\n    x9 = sfilter(I, x8)\n    x10 = totuple(x9)\n    x11 = apply(color, x10)\n    x12 = size(x11)\n    x13 = increment(x12)\n    x14 =\n    x15 = canvas(x5, x13)\n    x16 = asobject(x11)\n    x17 = shift(x16, UNITY)\n    O = paint(x14, x17)\n    return O"], [1.1, "def solve_532aae3e(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 =Example output:\n    2332567233\n    2332567233\n    2332567233\n    4772365732\n    4723662323\n    6272324272\n    2271870723\n    1725315739\n    8854264224\n    2589222839\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [1.1, "def solve_d5e9ff86(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 =7fe24062(I)\n    x2 = fork(subtract, first, last)\n    x3 = compose(positive, size)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(center, first)\n    x6 = compose(center, last)\n    x7 = fork(subtract, x5, x6)\n    x8 = compose(x4, size)\n    x9 = rbind(intersection, x2)\n    x10 = fork(\n    x11 = compose(x8, size)\n    x10 = chain(x11, x9, size)\n    x11 = fork(both, x7, x10)\n    x12 = mfilter(x1, x11)\n    O = underfill(I, FOUR, x12)\n    return O"], [1.1, "def solve_3a01a087(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = frontiers(I)\n    x2 =599uple(x1,5168)\n    x3 = difference(x1, x2)\n    x4 = toobject(x3, I)\n    x5 = mostcolor(x4)\n    x6 = objects(I, T, F, T)\n    x7 = rbind(colorcount, ONE)\n    x8 = argmax(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [1.1, "def solve_c92dbd71(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = partition(I)\n    x2 = ONE(d511feca)\n    x3 = colorfilter(x1, ZERO)\n    x4 = compose(last, last)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = compose(first, last)\n    x8 = order(x6, x7)\n    x9 =5208(matcher, first)\n    x10 = compose(last, last)\n    x11 = fork(both, x9, x10)\n    x12 = extract(x8, x11)\n    x13 = last(x12)\n    x14 = decrement(x13)\n    x15 = last(x14)\n    x16 = toivec(x15)\n    x17 = initset(x16)\n    x18 = insert(x14, x17)\n    x19 = product(x18, x18)\n    x20 = rbind(shoot, DOWN)\n    x21 = mapply(x20, x19)\n    x22 = underfill(I, EIGHT, x21)\n    x23 = matcher(first, ZERO)\n    x24 = compose(flip, x23)\n    x25 = sfilter(x19, x24)\n    x26 = difference(x19, x25)\n    x27 = solve(x22, x26)\n    O = fill(x22, TWO, x27)\n    return O"], [1.1, "def solve_3dc8c44f(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = rot180(I)\n    x2 = lbind(subtract, TWO)\n    x3 = chain(even, x2, last)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(x4, dmirror)\n    x6 = chain(fewmost, x5, first)\n    x7 = order(x1, x6)\n    x8 = apply(last, x7)\n    x9 = merge(x8)\n    x10 = size(x9)\n    x11 = interval(ZERO, x10, ONE)\n    x12 = pair(x11, x8)\n    x13 = fork(multiply, first, last)\n    x14 = order(x12, x13)\n    x15 = lbind(canvas, ZERO)\n    x16 = chain(x15, mostcolor, first)\n    x17 = fork(paint, x16, last)\n    x18 = fork(multiply, height, width)\n    x19 =987(x17, x18)\n    x20 = lbind(occurrences, x9)\n    x21 = compose(x20, last)\n    x22 = fork(mapply, first, x21)\n    x23 = pair(x19, x22)\n    x24 =object(x23, x9)\n    x25 = difference(x24, x23)\n    x26 = apply(x22, x25)\n    x27 = rbind(object, x24)\n    x28 = compose(x27, last)\n    x29 = sfilter(x26, x28)\n    x30 = apply(color, x29)\n    x31 = pair(x29, x30)\n    x32 = mapply(x27, x31)\n    x33 = first(x32)\n    x34 = last(x32)\n    x35 = neighbors(UNITY)\n    x36 = recolor(ZERO, x35)\n    x37 = shift(x34, x36)\n    x38 = paint(x33, x37)\n    O = x30(x38)\n    return O"], [1.1, "def solve_52fd39e7(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 =af2able trim(I)\n    x2 =56(phalf, x1)\n    x3 =986e26(x2)\n    x4 =greater(THREE, x3)\n    x5 = width(x1)\n    x6 = tojvec(x5)\n    x7 = index(I, x6)\n    x8 =696(ORIGIN, UNITY)\n    x9 = equality(x7, x8)\n    x10 = branch(x4, x9, RIGHT)\n    x11 = branch(x4, LEFT, DOWN)\n    x12 = branch(x4, hfrontier, vfrontier)\n    x13 = x11(x12)\n    x14 = x10(x13)\n    x15 = increment(x5)\n    x16 = x11(x14)\n    x17 = shift(x13, x16)\n    x18 = paint(I, x17)\n    x19 = fill(x18, x7, x13)\n    O = x11(x19)\n    return O"], [1.1, "def solve_9bffa2ce(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, T, T)\n    x4 = order(x3, size)\n    x5 = apply(color, x4)\n    x6 = last(x5)\n    x7 = remove(x2, x5)\n    x8 = last(x7)\n    x9 = color(x6)\n    x10 = color(x8)\n    x11 = subgrid(x10, x1)\n    x12 = matcher(first, x9)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = lbind(toobject, x5)\n    x16 = chain(x14, x15, color)\n    x17 = compose(x5, x16)\n    x18 =9(x17)\n    x19 =18(x11)\n    x20 = lbind(palette, x9)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = fork(remove, x22, identity)\n    x24 = chain(x19, last, x23)\n    x25 = rbind(ofcolor, x9)\n    x26 = compose(last, x25)\n    x27 = fork(subtract, x26, x24)\n    x28 = fork(shift, x27, x26)\n    x29 = mapply(x28, x6)\n    O = paint(x11, x29)\n    return O"], [1.1, "def solve_8482bdf5(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, height)\n    x3 = branch(x1, decrement, height)\n    x4 = x2(I)\n    x5 = mostcolor(I)\n    x6 = x3(I)\n    x7 = hconcat(I, x4)\n    x8 = tophalf(x7)\n    x9 = leastcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = argmin(x7, x10)\n    x12 = x11(x8)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = leastcolor(x13)\n    x16 = matcher(identity, x15)\n    x17 =770000(x13, x16)\n    x18 = height(x17)\n    x19 = width(x17)\n    x20 = decrement(x19)\n    x21 = astuple(x20, x18)\n    x22 = crop(x17, ORIGIN, x21)\n    x23 = hmirror(x22)\n    x24 = replace(x23, ONE, x9)\n    x25 = width(x24)\n    x26 = interval(ZERO, x25, ONE)\n    x27 = rbind(rapply, x25)\n    x28 = initset(x15)\n    x29 = lbind(rapply, x28)\n    x30 = chain(first, x29, initset)\n    x31 = apply(x30, x26)\n    x32 = ofcolor(x24, x31)\n    x33 = sfilter(x32, x30)\n    x34 = mapply(toindices, x33)\n    x35 = portrait(x34)\n    x36 = branch(x35, identity, x20)\n    x37 = ofcolor(x24, x9)\n    x38 = difference(x37, x36)\n    x39 = canvas(x35, x38)\n    O = x21(x39)\n    return O"], [1.1, "def solve_506e39e4(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 =159(I)\n    x2 =44(x1, I)\n    x3 = hmirror(x2)\n    x4 = vmirror(x2)\n    x5 = dmirror(x2)\n    x6 = cmirror(x2)\n    x7 = paint(I, x3)\n    x8 = paint(x7, x4)\n    x9 = paint(x8, x5)\n    O = paint(x9, x6)\n    return O"], [1.1, "def solve_6b48d1e0(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = astuple(d687, cmirror)\n    x2 = astuple(x1, I)\n    x3 = initset(ORIGIN)\n    x4 = insert(ORIGIN, x3)\n    x5 = insert(x2, x4)\n    x6 = lbind(shift, x5)\n    x7 = rbind(compose, initset)\n    x8 = lbind(rbind, manhattan)\n    x9 = compose(x7, x8)\n    x10 =59(x7)\n    x11 = x9(I)\n    x12 = insert(x10, x11)\n    x13 = lbind(shift, x12)\n    x14 = rbind(compose, initset)\n    x15 = lbind(99bind, manhattan)\n    x16 = compose(x14, x15)\n    x17 = fork(shift, x13, x16)\n    x18 = fork(insert, x17, x9)\n    x19 = compose(box, x18)\n    x20 = mapply(x19, x4)\n    O = fill(I, THREE, x20)\n    return O"]], "2037f2c7": [[0.3957417187414136, "def solve_94625438(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = ofcolor(x1, ZERO)\n    x4 = ofcolor(x2, ZERO)\n    x5 = intersection(x3, x4)\n    x6 = astuple(NINE, NINE)\n    x7 = canvas(ZERO, x6)\n    O = fill(x7, EIGHT, x5)\n    return O"], [0.4923960902221772, "def solve_5f7fd0ff(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(shoot, UNITY)\n    x3 = compose(x2, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    x6 = astuple(SIX, SIX)\n    x7 = canvas(ZERO, x6)\n    O = paint(x7, x5)\n    return O"], [0.5124660219282645, "def solve_ac362628(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_39f8ebdd(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_5388b651(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_5ffb29a7(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_5afaeb8b(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_1a5dc52d(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5251570172671126, "def solve_512bcb78(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = rbind(equality, x4)\n    x7 = argmin(x5, x6)\n    x8 = asindices(I)\n    x9 = ofcolor(I, x4)\n    x10 = difference(x8, x9)\n    x11 = fill(I, x7, x10)\n    x12 = frontiers(x11)\n    x13 = sfilter(x12, vline)\n    x14 = difference(x12, x13)\n    x15 = astuple(x14, x13)\n    x16 = apply(size, x15)\n    x17 = increment(x16)\n    O = canvas(x4, x17)\n    return O"], [0.5251570172671126, "def solve_224f5db4(I):\n    x1 = mostcolor(I)\n    x2 = frontiers(I)\n    x3 = sfilter(x2, vline)\n    x4 = difference(x2, x3)\n    x5 = astuple(x4, x3)\n    x6 = apply(size, x5)\n    x7 = increment(x6)\n    O = canvas(x1, x7)\n    return O"], [0.5341705127937012, "def solve_d6569984(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.5341705127937012, "def solve_71425b0b(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.5651103618519248, "def solve_2dc7e85b(I):\n    x1 = replace(I, FOUR, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.5656761343415933, "def solve_48aab6c1(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = mostcolor(x2)\n    x4 = matcher(first, x3)\n    x5 = sfilter(x2, x4)\n    x6 = shape(x5)\n    x7 = normalize(x5)\n    x8 = mostcolor(I)\n    x9 = canvas(x8, x6)\n    O = paint(x9, x7)\n    return O"], [0.5664171211983221, "def solve_b706875e(I):\n    x1 = replace(I, TWO, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.5730284728096737, "def solve_9c3c256b(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.5738569689228531, "def solve_36b1d5fa(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = ofcolor(x1, ZERO)\n    x4 = ofcolor(x2, ZERO)\n    x5 = intersection(x3, x4)\n    x6 = shape(x1)\n    x7 = canvas(ZERO, x6)\n    O = fill(x7, EIGHT, x5)\n    return O"], [0.5962408498640382, "def solve_03a44524(I):\n    x1 = objects(I, T, F, T)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = mostcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = extract(x1, x5)\n    O = subgrid(x6, I)\n    return O"], [0.5963048638279206, "def solve_124a1120(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [0.6057341869347498, "def solve_8f932125(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, F, F, T)\n    x6 = rbind(colorcount, ONE)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.6076921592043171, "def solve_f34e1612(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.6194886937848373, "def solve_dff6181a(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.6194886937848373, "def solve_bc780504(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.6194886937848373, "def solve_bc348caf(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.6309126220053929, "def solve_8581db70(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_8e882022(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_2df84732(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_8380b72d(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.631933306897075, "def solve_7e30d78b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.631933306897075, "def solve_0dfc0a99(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.631933306897075, "def solve_7991406b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.631933306897075, "def solve_e7d03285(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.631933306897075, "def solve_0e84b41d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.631933306897075, "def solve_e04f8cb1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.652277101112151, "def solve_00354818(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.6557151442133381, "def solve_02c549c5(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.6557151442133381, "def solve_88c35f0a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.6557151442133381, "def solve_ae109171(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.6557151442133381, "def solve_51d6def0(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.6557151442133381, "def solve_789764f1(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.6557151442133381, "def solve_b88191a0(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.6557151442133381, "def solve_71819341(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.6557151442133381, "def solve_a9301661(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = combine(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.6748161707949084, "def solve_35d28584(I):\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [0.6748161707949084, "def solve_36e1d64f(I):\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [0.6938245927181472, "def solve_362bfae8(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = subgrid(x20, I)\n    x22 = switch(x21, x18, x19)\n    x23 = replace(x22, x18, x4)\n    x24 = lbind(downscale, x23)\n    x25 = fork(upscale, x24, identity)\n    x26 = matcher(x25, x23)\n    x27 = shape(x23)\n    x28 = maximum(x27)\n    x29 = interval(ONE, x28, ONE)\n    x30 = sfilter(x29, x26)\n    x31 = maximum(x30)\n    O = downscale(x23, x31)\n    return O"], [0.6997112669026319, "def solve_aeae0702(I):\n    x1 = hsplit(I, THREE)\n    x2 = first(x1)\n    x3 = remove(x2, x1)\n    x4 = first(x3)\n    x5 = last(x3)\n    x6 = ofcolor(x4, NINE)\n    x7 = ofcolor(x2, FOUR)\n    x8 = fill(x5, NINE, x6)\n    O = fill(x8, FOUR, x7)\n    return O"], [0.7120344565700184, "def solve_2d85fb7c(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.7120344565700184, "def solve_5a0ee9f3(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.7313689109828214, "def solve_490de5bc(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.7313689109828214, "def solve_98f30818(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.7313689109828214, "def solve_d295afd4(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.7313689109828214, "def solve_8b29d585(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.7313689109828214, "def solve_10f4d295(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.7313689109828214, "def solve_8ce23322(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.7313689109828214, "def solve_383060ef(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.7313689109828214, "def solve_99673455(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.7313689109828214, "def solve_1a59a9cc(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.7433461145839528, "def solve_035afcd0(I):\n    x1 = replace(I, THREE, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    x14 = apply(x4, x13)\n    x15 = ofcolor(I, THREE)\n    O = subgrid(x15, x14)\n    return O"], [0.7513894621344644, "def solve_68da113f(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.7514237970163009, "def solve_4d5b4592(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.7514237970163009, "def solve_cf765f7b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.7702738530895862, "def solve_d605d80a(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    O = x5(I)\n    return O"], [0.7702738530895862, "def solve_7b9e592a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_11d42256(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_e0b1611a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_3c315dc0(I):\n    O = tophalf(I)\n    return O"], [0.7702738530895862, "def solve_c7b130d6(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_881525a4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_f6395595(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702994509699451, "def solve_d7160e25(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = subgrid(x5, I)\n    x7 = mostcolor(x6)\n    x8 = leastcolor(x6)\n    O = switch(x6, x7, x8)\n    return O"], [0.7702994509699451, "def solve_0b6864cf(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = subgrid(x5, I)\n    x7 = mostcolor(x6)\n    x8 = leastcolor(x6)\n    O = switch(x6, x7, x8)\n    return O"], [0.7702994509699451, "def solve_f6a12c87(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = subgrid(x5, I)\n    x7 = mostcolor(x6)\n    x8 = leastcolor(x6)\n    O = switch(x6, x7, x8)\n    return O"], [0.785465096458934, "def solve_aecd87b5(I):\n    x1 = rot270(I)\n    x2 = hconcat(I, x1)\n    x3 = hsplit(x2, THREE)\n    O = first(x3)\n    return O"], [0.7946931652854432, "def solve_13311d98(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.8058042763965544, "def solve_96923ba7(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.8058042763965544, "def solve_6bfd2630(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.8058042763965544, "def solve_eeb47269(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.8058042763965544, "def solve_20c82e19(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.8058042763965544, "def solve_3e23124e(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.8141732132799135, "def solve_b1cb6271(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.8141732132799135, "def solve_a0033061(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.8141732132799135, "def solve_a96086ab(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.8220447986833391, "def solve_f4191f94(I):\n    O = switch(I, EIGHT, TWO)\n    return O"], [0.8277590843976249, "def solve_be665f33(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_035af0ce(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_0ef8e060(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_43c6e29b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.8277590843976249, "def solve_541246fa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.8277590843976249, "def solve_95242d09(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_47a1addc(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.8277590843976249, "def solve_95d56d68(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_f84c72e4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.8277590843976249, "def solve_13518b4f(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_94527df4(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_95a96707(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_171722ab(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_7df58ffd(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8280264986187765, "def solve_34bdd8d2(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = prapply(connect, x2, x2)\n    x4 = fgpartition(I)\n    x5 = merge(x4)\n    x6 = cover(I, x5)\n    x7 = fork(either, hline, vline)\n    x8 = box(x5)\n    x9 = rbind(difference, x8)\n    x10 = chain(positive, size, x9)\n    x11 = fork(both, x7, x10)\n    x12 = mfilter(x3, x11)\n    O = fill(x6, x1, x12)\n    return O"], [0.829564622162508, "def solve_4f3ca617(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.829564622162508, "def solve_76dd7606(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.829564622162508, "def solve_6b5f39a8(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.8341973243152688, "def solve_a712debb(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.8341973243152688, "def solve_a669ed4f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.8372727715830096, "def solve_6c2d122f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [0.8372727715830096, "def solve_c79501e2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [0.8376932799217021, "def solve_2c584159(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.8376932799217021, "def solve_20c45a08(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.8376932799217021, "def solve_853baa07(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.838870195508736, "def solve_0c28ea7b(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, SIX)\n    x3 = compose(flip, x2)\n    x4 = mfilter(x1, x2)\n    x5 = mfilter(x1, x3)\n    x6 = fill(I, TWO, x4)\n    O = fill(x6, ONE, x5)\n    return O"], [0.8424709430632212, "def solve_cbd19292(I):\n    x1 = dmirror(I)\n    x2 = cmirror(x1)\n    x3 = hmirror(I)\n    x4 = hmirror(x3)\n    x5 = vconcat(x4, x4)\n    x6 = vconcat(x5, x3)\n    O = cellwise(x2, x6, ZERO)\n    return O"], [0.8530872511837071, "def solve_dd7cbc25(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.8546978599078291, "def solve_c0cc875a(I):\n    x1 = ofcolor(I, TWO)\n    x2 = crop(I, ORIGIN, THREE_BY_THREE)\n    x3 = asobject(x2)\n    x4 = lbind(shift, x3)\n    x5 = compose(x4, decrement)\n    x6 = mapply(x5, x1)\n    O = paint(I, x6)\n    return O"], [0.8559241864624044, "def solve_dd665c88(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.8559241864624044, "def solve_0ee9ca71(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, x1, I)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.8571187181726726, "def solve_1c6f527b(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot270(x3)\n    return O"], [0.8580218561730018, "def solve_1540cbb5(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = fork(vmatching, first, last)\n    x5 = mfilter(x3, x4)\n    x6 = replace(I, THREE, ZERO)\n    O = fill(x6, EIGHT, x5)\n    return O"], [0.8581546500312859, "def solve_c634772b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.8581703987119509, "def solve_83816c0a(I):\n    O = replace(I, FOUR, ZERO)\n    return O"], [0.858844268759789, "def solve_e92c8aab(I):\n    x1 = height(I)\n    x2 = vsplit(I, x1)\n    x3 = apply(asobject, x2)\n    x4 = apply(hperiod, x3)\n    x5 = minimum(x4)\n    x6 = width(I)\n    x7 = hsplit(I, x6)\n    x8 = apply(asobject, x7)\n    x9 = apply(vperiod, x8)\n    x10 = minimum(x9)\n    x11 = matcher(hperiod, x5)\n    x12 = sfilter(x3, x11)\n    x13 = mapply(palette, x12)\n    x14 = matcher(vperiod, x10)\n    x15 = sfilter(x8, x14)\n    x16 = mapply(palette, x15)\n    x17 = palette(I)\n    x18 = combine(x13, x16)\n    x19 = rbind(contained, x18)\n    x20 = argmin(x17, x19)\n    x21 = asobject(I)\n    x22 = matcher(first, x20)\n    x23 = compose(flip, x22)\n    x24 = sfilter(x21, x23)\n    x25 = height(I)\n    x26 = divide(x25, x10)\n    x27 = increment(x26)\n    x28 = width(I)\n    x29 = divide(x28, x5)\n    x30 = increment(x29)\n    x31 = invert(x27)\n    x32 = interval(x31, x27, ONE)\n    x33 = invert(x30)\n    x34 = interval(x33, x30, ONE)\n    x35 = product(x32, x34)\n    x36 = astuple(x10, x5)\n    x37 = lbind(multiply, x36)\n    x38 = apply(x37, x35)\n    x39 = lbind(shift, x24)\n    x40 = mapply(x39, x38)\n    O = paint(I, x40)\n    return O"], [0.8594257510642915, "def solve_007cae4b(I):\n    x1 = objects(I, T, F, F)\n    x2 = palette(I)\n    x3 = other(x2, ZERO)\n    x4 = colorfilter(x1, x3)\n    x5 = sizefilter(x4, ONE)\n    x6 = difference(x4, x5)\n    x7 = merge(x6)\n    O = fill(I, THREE, x7)\n    return O"], [0.8604574970960375, "def solve_21a6ff0e(I):\n    x1 = objects(I, T, F, T)\n    x2 = apply(toindices, x1)\n    x3 = fork(either, vline, hline)\n    x4 = sfilter(x2, x3)\n    x5 = difference(x2, x4)\n    x6 = fork(equality, identity, box)\n    x7 = mfilter(x5, x6)\n    O = fill(I, THREE, x7)\n    return O"], [0.8604574970960375, "def solve_b6c8f382(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.8608398799465803, "def solve_31760b9c(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, THREE, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.8621335034579425, "def solve_25108d8d(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = argmax(x1, x2)\n    x5 = remove(x3, x1)\n    x6 = other(x5, x4)\n    x7 = subgrid(x6, I)\n    x8 = frontiers(x7)\n    x9 = sfilter(x8, hline)\n    x10 = size(x9)\n    x11 = positive(x10)\n    x12 = branch(x11, dmirror, identity)\n    x13 = x12(I)\n    x14 = color(x6)\n    x15 = ofcolor(x13, x14)\n    x16 = subgrid(x15, x13)\n    x17 = trim(x16)\n    x18 = lefthalf(x17)\n    x19 = vmirror(x18)\n    x20 = asobject(x19)\n    x21 = righthalf(x17)\n    x22 = vmirror(x21)\n    x23 = asobject(x22)\n    x24 = color(x4)\n    x25 = inbox(x15)\n    x26 = backdrop(x25)\n    x27 = fill(x13, x24, x26)\n    x28 = urcorner(x15)\n    x29 = add(x28, UNITY)\n    x30 = shift(x23, x29)\n    x31 = ulcorner(x15)\n    x32 = width(x20)\n    x33 = invert(x32)\n    x34 = tojvec(x33)\n    x35 = add(DOWN, x34)\n    x36 = add(x31, x35)\n    x37 = shift(x20, x36)\n    x38 = combine(x30, x37)\n    x39 = paint(x27, x38)\n    O = x12(x39)\n    return O"], [0.8632787798855505, "def solve_b1617fab(I):\n    O = rot270(I)\n    return O"], [0.8634207638517514, "def solve_ac8ef8e2(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = rbind(colorcount, ZERO)\n    x3 = lbind(toobject, x1)\n    x4 = compose(x2, x3)\n    x5 = vmirror(I)\n    x6 = hmirror(I)\n    x7 = astuple(x5, x6)\n    x8 = argmin(x7, x4)\n    O = subgrid(x1, x8)\n    return O"], [0.8634207638517514, "def solve_c6031c1c(I):\n    O = vmirror(I)\n    return O"], [0.863678348633302, "def solve_3a25b7c3(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.863678348633302, "def solve_82a79779(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.863678348633302, "def solve_82b52372(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.863678348633302, "def solve_6b859cac(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.863706518437685, "def solve_c5525c8a(I):\n    O = dmirror(I)\n    return O"], [0.863706518437685, "def solve_31fd98ec(I):\n    O = dmirror(I)\n    return O"], [0.8637867634430995, "def solve_5fdb3430(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.8637867634430995, "def solve_c27ce434(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.8637867634430995, "def solve_646aa8de(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.8637867634430995, "def solve_f036f0c7(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.8637867634430995, "def solve_5aff503e(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.8638512990612682, "def solve_e73369c7(I):\n    x1 = objects(I, T, F, F)\n    x2 = sizefilter(x1, ONE)\n    x3 = merge(x2)\n    O = move(I, x3, TWO_BY_ZERO)\n    return O"], [0.8638546543078182, "def solve_0acf92b5(I):\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.8638701955087361, "def solve_6240a5e7(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_d5426d9c(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.8638701955087361, "def solve_a2446404(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.8638701955087361, "def solve_4a3b8cc2(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_81289ccc(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.8638701955087361, "def solve_1ce93324(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.8638701955087361, "def solve_a1f709c7(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.8638701955087361, "def solve_b33f7689(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, FOUR, x5)\n    return O"], [0.8638701955087361, "def solve_9d80387e(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = fill(I, x8, x32)\n    return O"], [0.8638701955087361, "def solve_dc840d56(I):\n    x1 = ofcolor(I, THREE)\n    x2 = height(x1)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, ZERO_BY_TWO, TWO_BY_TWO)\n    x5 = ofcolor(I, TWO)\n    x6 = recolor(TWO, x5)\n    O = move(I, x6, x4)\n    return O"], [0.8638701955087361, "def solve_aa94830c(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_db07b015(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.8638701955087361, "def solve_762af901(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, THREE)\n    x3 = sizefilter(x2, ONE)\n    x4 = difference(x2, x3)\n    x5 = merge(x4)\n    O = fill(I, THREE, x5)\n    return O"], [0.8638701955087361, "def solve_c566179a(I):\n    O = subgrid(I, I)\n    return O"], [0.8638701955087361, "def solve_1b01e792(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = fill(I, x8, x32)\n    return O"], [0.8638701955087361, "def solve_0d3126ff(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.8638701955087361, "def solve_25d533b9(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.8638701955087361, "def solve_fc7aacce(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.8638701955087361, "def solve_743b00f3(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.8638701955087361, "def solve_c42b3a2a(I):\n    x1 = initset(ORIGIN)\n    x2 = box(x1)\n    x3 = shape(I)\n    x4 = minimum(x3)\n    x5 = halve(x4)\n    x6 = interval(ONE, x5, ONE)\n    x7 = lbind(power, inbox)\n    x8 = rbind(rapply, x2)\n    x9 = compose(initset, x7)\n    x10 = chain(first, x8, x9)\n    x11 = apply(x10, x6)\n    x12 = repeat(x2, ONE)\n    x13 = combine(x12, x11)\n    x14 = rbind(toobject, I)\n    x15 = compose(color, x14)\n    x16 = apply(x15, x13)\n    x17 = interval(ZERO, x5, ONE)\n    x18 = pair(x17, x16)\n    x19 = compose(invert, first)\n    x20 = order(x18, x19)\n    x21 = apply(last, x20)\n    x22 = mpapply(recolor, x21, x13)\n    O = paint(I, x22)\n    return O"], [0.8638701955087361, "def solve_b1174d58(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.8638701955087361, "def solve_421033c1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.8638701955087361, "def solve_452b0c5a(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = center(x2)\n    x4 = dneighbors(x3)\n    x5 = insert(x3, x4)\n    O = fill(I, ZERO, x5)\n    return O"], [0.8638701955087361, "def solve_a5ebd2ce(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.8638701955087361, "def solve_784a76b7(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.8638701955087361, "def solve_7f44ba7f(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = fill(I, ONE, x5)\n    return O"], [0.8638701955087361, "def solve_ec772d80(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.8638891638983809, "def solve_32d71867(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.8638891638983809, "def solve_a62d0e88(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.8639438916538609, "def solve_64c51887(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8639438916538609, "def solve_e663cc14(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_544d2d26(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8639438916538609, "def solve_444b77df(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8639438916538609, "def solve_40e5ab1c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8639438916538609, "def solve_c111c909(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_423ed807(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_01e61422(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8639438916538609, "def solve_1742a375(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8639438916538609, "def solve_c343d444(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_3e34b638(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8639438916538609, "def solve_e9c578f2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8639438916538609, "def solve_75c97c53(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8639438916538609, "def solve_339196ad(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8640253338383225, "def solve_e4912a4a(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_0aa61d66(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_508145b8(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_f9764668(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_05885169(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_7674bbfa(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_734d86fa(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_08b0f41a(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_94579f3a(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_03970150(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640827805427497, "def solve_7eb2a11d(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = height(x2)\n    x4 = height(I)\n    x5 = interval(ZERO, x4, x3)\n    x6 = lbind(shift, x2)\n    x7 = compose(x6, toivec)\n    x8 = compose(x7, invert)\n    x9 = fork(combine, x7, x8)\n    x10 = mapply(x9, x5)\n    O = paint(I, x10)\n    return O"], [0.8640827805427497, "def solve_2eb3f024(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = height(x2)\n    x4 = height(I)\n    x5 = interval(ZERO, x4, x3)\n    x6 = lbind(shift, x2)\n    x7 = compose(x6, toivec)\n    x8 = compose(x7, invert)\n    x9 = fork(combine, x7, x8)\n    x10 = mapply(x9, x5)\n    O = paint(I, x10)\n    return O"], [0.8640827805427497, "def solve_e4ebdf9e(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = height(x2)\n    x4 = height(I)\n    x5 = interval(ZERO, x4, x3)\n    x6 = lbind(shift, x2)\n    x7 = compose(x6, toivec)\n    x8 = compose(x7, invert)\n    x9 = fork(combine, x7, x8)\n    x10 = mapply(x9, x5)\n    O = paint(I, x10)\n    return O"], [0.8640899397638263, "def solve_f0016d39(I):\n    x1 = rbind(greater, ONE)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [0.8640899397638263, "def solve_91079819(I):\n    x1 = rbind(greater, ONE)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [0.8641376097298877, "def solve_7b00b0e2(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.8641376097298877, "def solve_a852a024(I):\n    x1 = hmirror(I)\n    x2 = fgpartition(x1)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = compose(double, halve)\n    x6 = fork(equality, identity, x5)\n    x7 = compose(x6, last)\n    x8 = sfilter(x4, x7)\n    x9 = fill(x1, THREE, x8)\n    O = vmirror(x9)\n    return O"], [0.8641376097298877, "def solve_55843ee0(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.8641376097298877, "def solve_5ae7aad6(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.8641453134548085, "def solve_fff5abe6(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.8641453134548085, "def solve_fee01b8e(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.8641474651177995, "def solve_7858da89(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.8642721744821437, "def solve_25c8825c(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(shoot, RIGHT)\n    x4 = compose(x3, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(x1, DOWN_LEFT)\n    x9 = initset(x8)\n    x10 = mostcolor(I)\n    x11 = recolor(x10, x9)\n    x12 = objects(x7, T, F, T)\n    x13 = insert(x11, x12)\n    x14 = order(x13, uppermost)\n    x15 = first(x14)\n    x16 = remove(x11, x14)\n    x17 = remove(x15, x14)\n    x18 = compose(lrcorner, first)\n    x19 = compose(lrcorner, last)\n    x20 = fork(connect, x18, x19)\n    x21 = compose(color, first)\n    x22 = fork(recolor, x21, x20)\n    x23 = pair(x16, x17)\n    x24 = mapply(x22, x23)\n    O = underpaint(x7, x24)\n    return O"], [0.864358858944693, "def solve_b9aee034(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = cover(I, x2)\n    x4 = shift(x2, DOWN)\n    x5 = paint(x3, x4)\n    x6 = shift(x2, RIGHT)\n    x7 = paint(x5, x6)\n    x8 = shift(x2, LEFT)\n    O = paint(x7, x8)\n    return O"], [0.8644669437834643, "def solve_cb51c93a(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.8644669437834643, "def solve_77c5a92b(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.8644669437834643, "def solve_cdb65a39(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.8659287967270011, "def solve_97e2fd0c(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = apply(toindices, x6)\n    x8 = rbind(shoot, RIGHT)\n    x9 = compose(x8, center)\n    x10 = fork(recolor, color, x9)\n    x11 = mapply(x10, x6)\n    x12 = paint(I, x11)\n    x13 = width(I)\n    x14 = interval(ZERO, x13, ONE)\n    x15 = apply(double, x14)\n    x16 = apply(increment, x15)\n    x17 = apply(tojvec, x16)\n    x18 = prapply(shift, x7, x17)\n    x19 = merge(x18)\n    O = fill(x12, FIVE, x19)\n    return O"], [0.8665487702073381, "def solve_e5733138(I):\n    x1 = objects(I, T, F, F)\n    x2 = fork(combine, vfrontier, hfrontier)\n    x3 = compose(x2, center)\n    x4 = mapply(x3, x1)\n    O = underfill(I, SIX, x4)\n    return O"], [0.867063767072984, "def solve_c4492498(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, ONE, x2)\n    return O"], [0.8672110874210567, "def solve_5a2bf004(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.8672110874210567, "def solve_5dc37c90(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.8672110874210567, "def solve_d0cc205d(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.8687415090376716, "def solve_6cf6f287(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_1ffae2fa(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_5e21d698(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_6bc3ca92(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8771624347494164, "def solve_cc399320(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.895840777338116, "def solve_bcef05a7(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = argmax(x4, size)\n    x7 = hmatching(x5, x6)\n    x8 = branch(x7, vmirror, hmirror)\n    x9 = x8(x6)\n    x10 = branch(x7, leftmost, uppermost)\n    x11 = branch(x7, tojvec, toivec)\n    x12 = x10(x5)\n    x13 = x10(x6)\n    x14 = greater(x12, x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = x11(x16)\n    x18 = shape(x6)\n    x19 = multiply(x17, x18)\n    x20 = shift(x9, x19)\n    x21 = fill(I, THREE, x3)\n    O = paint(x21, x20)\n    return O"], [0.8966427298715387, "def solve_569e5a0b(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.8966427298715387, "def solve_948dcfcd(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.8966427298715387, "def solve_e1406122(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.8966427298715387, "def solve_92d5bfd6(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.8966427298715387, "def solve_51f25776(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.8966427298715387, "def solve_4588d57b(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.8966427298715387, "def solve_f11ca90b(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.8966427298715387, "def solve_559104ca(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [1.0, "def solve_2f78e29a(I):\n    x1 = astuple(identity, identity)\n    x2 = astuple(rot90, rot270)\n    x3 = astuple(x1, x2)\n    x4 = astuple(rot180, rot180)\n    x5 = astuple(rot270, rot90)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = leastcolor(I)\n    x9 = repeat(x8, ONE)\n    x10 = rbind(rapply, I)\n    x11 = chain(x10, initset, first)\n    x12 = compose(first, x11)\n    x13 = chain(dedupe, first, x12)\n    x14 = matcher(x13, x9)\n    x15 = extract(x7, x14)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = x16(I)\n    x19 = ofcolor(x18, x8)\n    x20 = height(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = lbind(astuple, x20)\n    x23 = apply(x22, x21)\n    x24 = rbind(shoot, DOWN)\n    x25 = mapply(x24, x23)\n    x26 = fill(x18, FOUR, x25)\n    x27 = astuple(x20, x20)\n    x28 = canvas(ZERO, x27)\n    x29 = asindices(x28)\n    x30 = shift(x29, x27)\n    x31 = shape(I)\n    x32 = maximum(x31)\n    x33 = lbind(shift, x30)\n    x34 = interval(ZERO, x32, x20)\n    x35 = pair(x34, x34)\n    x36 = mapply(x33, x35)\n    x37 = fill(x26, TWO, x36)\n    O = x17(x37)\n    return O"], [1.0, "def solve_16d846d0(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(normalize, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [1.0, "def solve_2a2cae48(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = compose(size, dedupe)\n    x5 = apply(x4, x3)\n    x6 = totuple(x5)\n    x7 = sfilter(x6, first)\n    x8 = compose(last, last)\n    x9 = totuple(x7)\n    x10 = apply(x8, x9)\n    x11 = mostcommon(x10)\n    x12 = lbind(matcher, first)\n    x13 = compose(x12, x7)\n    x14 = fork(sfilter, identity, x13)\n    x15 = compose(rot90, x14)\n    x16 = lbind(matcher, first)\n    x17 = compose(x16, x7)\n    x18 = fork(sfilter, identity, x17)\n    x19 = compose(rot180, x18)\n    x20 = lbind(occurrences, I)\n    x21 = compose(x20, x14)\n    x22 = compose(xpositive, size)\n    x23 = fork(shift, x21, x22)\n    x24 = fork(mapply, x19, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = dedupe(x27)\n    x29 = rot90(x28)\n    x30 = dedupe(x29)\n    O = rot270(x30)\n    return O"], [1.0, "def solve_bd073e07(I):\n    x1 = compose(positive, size)\n    x2 = rbind(sfilter, hline)\n    x3 = chain(x1, x2, frontiers)\n    x4 = chain(size, dedupe, first)\n    x5 = chain(size, dedupe, last)\n    x6 = fork(greater, x4, x5)\n    x7 = fork(both, x3, x6)\n    x8 = astuple(identity, rot90)\n    x9 = astuple(rot180, rot270)\n    x10 = combine(x8, x9)\n    x11 = astuple(identity, rot270)\n    x12 = astuple(rot180, rot90)\n    x13 = combine(x11, x12)\n    x14 = pair(x10, x13)\n    x15 = rbind(rapply, I)\n    x16 = compose(initset, first)\n    x17 = chain(first, x15, x16)\n    x18 = compose(x7, x17)\n    x19 = extract(x14, x18)\n    x20 = first(x19)\n    x21 = last(x19)\n    x22 = x20(I)\n    x23 = first(x22)\n    x24 = repeat(x23, ONE)\n    x25 = dmirror(x24)\n    x26 = width(x22)\n    x27 = hupscale(x25, x26)\n    x28 = asobject(x27)\n    x29 = height(x22)\n    x30 = height(x28)\n    x31 = interval(ZERO, x29, x30)\n    x32 = lbind(shift, x28)\n    x33 = apply(toivec, x31)\n    x34 = mapply(x32, x33)\n    x35 = shift(x34, TWO_BY_ZERO)\n    x36 = paint(x22, x35)\n    O = x21(x36)\n    return O"], [1.0, "def solve_485062d7(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_d30d557a(I):\n    x1 = rbind(shoot, UNITY)\n    x2 = compose(x1, center)\n    x3 = fork(recolor, color, x2)\n    x4 = mapply(x3, x1)\n    x5 = shape(I)\n    x6 = add(TWO, x5)\n    x7 = canvas(ZERO, x6)\n    x8 = asobject(I)\n    x9 = shift(x8, UNITY)\n    O = paint(x7, x9)\n    return O"], [1.0, "def solve_862d52aa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_247b5bf2(I):\n    x1 = objects(I, F, F, T)\n    x2 = rbind(valmax, numcolors)\n    x3 = matcher(x2, ONE)\n    x4 = extract(x1, x3)\n    x5 = remove(x4, x1)\n    x6 = lbind(shift, x4)\n    x7 = mapply(x6, x5)\n    x8 = paint(I, x7)\n    O = cover(x8, x4)\n    return O"], [1.0, "def solve_5c2eac65(I):\n    x1 = TWO(I, THREE)\n    x2 = height(x1)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(x1)\n    return O"], [1.0, "def solve_263c85d8(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = lbind(sfilter, x1)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(insert, x104, x14)\n    x16 = compose(backdrop, x15)\n    x17 = shape(I)\n    x18 = decrement(x17)\n    x19 = multiply(x18, x18)\n    x20 = initset(x19)\n    x21 = insert(x14, x20)\n    x22 = product(x21, x21)\n    x23 = argmax(x22, x16)\n    x24 = asindices(x23)\n    x25 = contained(ZERO, x24)\n    x26 = insert(x21, x25)\n    x27 = rbind(argmin, x26)\n    x28 = lbind(shift, x23)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [1.0, "def solve_d0156e52(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_9bf5ae6f(I):\n    x1 = rot180(I)\n    x2 = hconcat(I, x1)\n    O = vconcat(x2, x2)\n    return O"], [1.0, "def solve_2fa55978(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = branch(x1, vsplit, hsplit)\n    return O"], [1.0, "def solve_0ccfb650(I):\n    x1 = lbind(apply, normalize)\n    x2 = chain(maximum, x1, shape)\n    x3 = subtract(TWO, x2)\n    x4 = interval(ZERO, x3, ONE)\n    x5 = rbind(multiply, x4)\n    x6 = apply(x5, x4)\n    x7 = rbind(shift, x6)\n    x8 = mapply(x7, x3)\n    x9 = double(x3)\n    x10 = astuple(x9, x8)\n    x11 = add(x10, x3)\n    x12 = index(I, x11)\n    x13 = astuple(x12, x4)\n    x14 = canvas(x12, x13)\n    x15 = asobject(I)\n    x16 = shift(x15, UNITY)\n    x17 = paint(x14, x16)\n    x18 = objects(x17, T, F, T)\n    x19 = apply(color, x18)\n    x20 = rbind(shift, ORIGIN)\n    x21 = mapply(x20, x19)\n    x22 = fill(x17, x12, x21)\n    x23 = paint(x22, x15)\n    x24 = apply(ulcorner, x15)\n    x25 = mapply(x24, x24)\n    x26 = paint(x25, x15)\n    x27 = fill(x26, x12, x25)\n    O = paint(x27, x15)\n    return O"], [1.0, "def solve_41694d36(I):\n    O = hconcat(I, I)\n    return O"], [1.0, "def solve_d48d374f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_b3ecc366(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_7c1e6d5c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = index(I, ORIGIN)\n    x8 = shoot(ORIGIN, DOWN)\n    O = fill(x6, x7, x8)\n    return O"], [1.0, "def solve_18f7a7a2(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, E730, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [1.0, "def solve_01f6f72c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_fec6ffd8(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, F, F, T)\n    x4 = merge(x3)\n    x5 = palette(x4)\n    x6 = intersection(x1, x5)\n    x7 = lbind(colorcount, x4)\n    x8 = argmin(x6, x7)\n    x9 = ofcolor(x4, x8)\n    x10 = difference(x1, x9)\n    x11 = rbind(toobject, x4)\n    x12 = lbind(rbind, occurrences)\n    x13 = chain(first, x11, x12)\n    x14 = rbind(colorcount, x8)\n    x15 = chain(x13, x14, x9)\n    x16 = fork(argmax, x15, x13)\n    x17 = fork(colorcount, x16, outbox)\n    x18 = ofcolor(x4, x8)\n    x19 = difference(x19, x18)\n    x20 = subgrid(x18, x1)\n    x21 = rbind(occurrences, x20)\n    x22 = compose(x21, normalize)\n    x23 = fork(argmin, x22, x21)\n    x24 = ofcolor(x4, x8)\n    x25 = difference(x24, x18)\n    x26 = intersection(x24, x25)\n    x27 = fill(x20, x8, x26)\n    x28 = urcorner(x27)\n    x29 = lbind(toindices, x28)\n    x30 = fork(shoot, identity, x29)\n    x31 = mapply(x30, x2222)\n    x32 = fill(x27, x8, x31)\n    O = replace(x32, x8, x4)\n    return O"], [1.0, "def solve_a03889dd(I):\n    x1 = ofcolor(I, TWO)\n    x2 = rbind(colorcount, TWO)\n    x3 = subgrid(x1, I)\n    x4 = argmax(x1, x2)\n    x5 = replace(x3, ONE, ZERO)\n    O = fill(x5, TWO, x4)\n    return O"], [1.0, "def solve_663ad284(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = positive(x2)\n    x4 = branch(x3, dmirror, identity)\n    x5 = x4(I)\n    x6 = objects(x5, T, F, F)\n    x7 = order(x6, leftmost)\n    x8 = apply(color, x7)\n    x9 = repeat(x8, ONE)\n    O = x4(x9)\n    return O"], [1.0, "def solve_4d041841(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_8722bcfd(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = x6(I)\n    x8 = dmirror(x7)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_c4005486(I):\n    x1 = asindices(I)\n    x2 = fgpartition(I)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = compose(double, halve)\n    x6 = fork(equality, identity, x5)\n    x7 = compose(x6, last)\n    x8 = sfilter(x4, x7)\n    x9 = fill(I, FOUR, x8)\n    x10 = increment(x6)\n    x11 = width(I)\n    x12 = halve(x11)\n    x13 = tojvec(x12)\n    x14 = height(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = rbind(greater, ONE)\n    x19 = compose(x18, last)\n    x20 = sfilter(x17, x19)\n    x21 = totuple(x20)\n    x22 = apply(toindices, x21)\n    x23 = fork(either, x21, x22)\n    x24 = sfilter(x22, x23)\n    x25 = paint(x9, x24)\n    O = size(x25)\n    return O"], [1.0, "def solve_8aaa40a3(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = fgpartition(x4)\n    x6 = merge(x5)\n    x7 = chain(double, decrement, width)\n    x8 = x7(x6)\n    x9 = argmin(x5, x8)\n    x10 = leastcolor(x9)\n    x11 = palette(x9)\n    x12 = remove(x10, x11)\n    x13 = other(x12, x18)\n    x14 = ofcolor(x4, x10)\n    x15 = ofcolor(x4, x13)\n    x16 = combine(x14, x15)\n    x17 = fill(x6, x13, x16)\n    x18 = difference(x17, x15)\n    O = fill(x17, FOUR, x18)\n    return O"], [1.0, "def solve_ab9e8f08(I):\n    x1 = mostcolor(I)\n    x2 = vmirror(I)\n    O = objects(I, T, F, T)\n    return O"], [1.0, "def solve_b1510865(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [1.0, "def solve_9c3a204b(I):\n    x1 = compress(I)\n    x2 = objects(x1, F, F, T)\n    x3 = rbind(colorcount, ZERO)\n    x4 = argmax(x2, x3)\n    x5 = rbind(colorcount, ZERO)\n    x6 = matcher(x5, x4)\n    x7 = extract(x1, x6)\n    x8 = remove(x7, x1)\n    x9 = extract(x8, x4)\n    x10 = shape(x9)\n    x11 = multiply(x10, x10)\n    x12 = canvas(ZERO, x11)\n    x13 = ofcolor(x1, x4)\n    x14 = shift(x13, x12)\n    O = fill(x12, ZERO, x14)\n    return O"], [1.0, "def solve_ef983aba(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_78197862(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_5dae6507(I):\n    x1 = objects(I, T, F, T)\n    x2 = neighbors(ORIGIN)\n    x3 = mapply(neighbors, x2)\n    x4 = toobject(x3, I)\n    x5 = mostcolor(x4)\n    x6 = ofcolor(I, x5)\n    x7 = backdrop(x6)\n    x8 = multiply(xfill, THREE)\n    x9 = canvas(x5, x8)\n    x10 = astuple(x4, x10)\n    x11 = ofcolor(I, x5)\n    x12 = first(x11)\n    x13 = shift(x12, UP)\n    x14 = ulcorner(x6)\n    x15 = urcorner(x6)\n    x16 = shoot(x14, NEG_UNITY)\n    x17 = shoot(x15, UP_RIGHT)\n    x18 = combine(x16, x17)\n    x19 = underfill(I, x5, x18)\n    O = canvas(x5, UNITY)\n    return O"], [1.0, "def solve_ed5e2388(I):\n    x1 = mostcolor(I)\n    x2 =mirror(I)\n    O = rot90(x2)\n    return O"], [1.0, "def solve_7ef81eac(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_5f116d44(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_68d522af(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_e9aabceb(I):\n    x1 = objects(I, T, F, T)\n    x2 = order(x1, height)\n    x3 = fork(recolor, color, x2)\n    x4 = mapply(x3, x2)\n    O = paint(I, x4)\n    return O"], [1.0, "def solve_afc32684(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_38096dfa(I):\n    x1 = asindices(I)\n    x2 = objects(I, T, F, T)\n    x3 = fork(multiply, sign, identity)\n    x4 = lbind(apply, x3)\n    x5 = chain(even, maximum, x4)\n    x6 = lbind(sfilter, x1)\n    x7 = fork(add, dmirror, identity)\n    x8 = rbind(rapply, I)\n    x9 = compose(x8, initset)\n    x10 = chain(first, x7, x9)\n    x11 = x10(I)\n    x12 = ofcolor(x11, ZERO)\n    x13 = rbind(add, DOWN)\n    x14 = chain(x13, ulcorner, x9)\n    x15 = fork(subtract, x14, x12)\n    x16 = fork(shift, x12, x15)\n    x17 = mapply(x16, x12)\n    x18 = interval(ZERO, x17, ONE)\n    x19 = paint(I, x18)\n    O = x10(x19)\n    return O"], [1.0, "def solve_b2f9b3f2(I):\n    x1 = astuple(identity, identity)\n    x2 = astuple(rot90, rot270)\n    x3 = astuple(x1, x2)\n    x4 = astuple(rot180, rot180)\n    x5 = astuple(rot270, rot90)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = leastcolor(I)\n    x9 = repeat(x8, ONE)\n    x10 = rbind(rapply, I)\n    x11 = chain(x10, initset, first)\n    x12 = compose(first, x11)\n    x13 = chain(dedupe, first, x12)\n    x14 = matcher(x13, x9)\n    x15 = extract(x7, x14)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = x16(I)\n    x19 = ofcolor(x18, x8)\n    x20 = height(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = lbind(astuple, x20)\n    x23 = apply(x22, x21)\n    x24 = rbind(shoot, DOWN)\n    x25 = mapply(x24, x23)\n    x26 = fill(x18, FOUR, x25)\n    x27 = astuple(x20, x20)\n    x28 = canvas(ZERO, x27)\n    x29 = asindices(x28)\n    x30 = shift(x29, x27)\n    x31 = shape(I)\n    x32 = maximum(x31)\n    x33 = lbind(shift, x30)\n    x34 = interval(ZERO, x32, x20)\n    x35 = pair(x34, x34)\n    x36 = mapply(x33, x35)\n    x37 = fill(x26, TWO, x36)\n    O = x17(x37)\n    return O"], [1.0, "def solve_129ebbfc(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = lbind(mapply, neighbors)\n    x13 = compose(x12, toindices)\n    x14 = fork(sfilter, x13, x10)\n    x15 = mapply(x14, x11)\n    x16 = lbind(argmin, x5)\n    x17 = compose(first, last)\n    x18 = fork(sfilter, x17, x10)\n    x19 = mapply(x18, x13)\n    x20 = fill(I, x1, x15)\n    O = fill(x20, FIVE, x19)\n    return O"], [1.0, "def solve_9338d607(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = argmin(x4, size)\n    x6 = other(x4, x5)\n    x7 = palette(I)\n    x8 = lrcorner(x5)\n    x9 = add(x8, UNITY)\n    x10 = llcorner(x5)\n    x11 = add(x10, DOWN_LEFT)\n    x12 = urcorner(x5)\n    x13 = add(x12, UP_RIGHT)\n    x14 = ulcorner(x5)\n    x15 = add(x14, NEG_UNITY)\n    x16 = shoot(x9, UNITY)\n    x17 = shoot(x11, DOWN_LEFT)\n    x18 = shoot(x13, UP_RIGHT)\n    x19 = shoot(x15, TEN_UNITY)\n    x20 = combine(x16, x17)\n    x21 = combine(x18, x19)\n    x22 = combine(x20, x21)\n    x23 = color(x6)\n    O = fill(I, x23, x22)\n    return O"], [1.0, "def solve_6ae90a4a(I):\n    x1 = initset(ORIGIN)\n    x2 = rbind(shoot, RIGHT)\n    x3 = compose(x2, center)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    O = paint(I, x5)\n    return O"], [1.0, "def solve_9c414443(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_aa37010f(I):\n    x1 = objects(I, T, F, F)\n    x2 = mapply(toindices, x1)\n    x3 = box(x2)\n    x4 = difference(x3, x2)\n    x5 = delta(x2)\n    x6 = position(x5, x4)\n    x7 = interval(difference, x6, ONE)\n    x8 = lbind(toivec, x5)\n    x9 = lbind(shift, x4)\n    x10 = apply(x8, x7)\n    x11 = last(x10)\n    x12 = lbind(tojvec, x5)\n    x13 = lbind(shift, x4)\n    x14 = apply(x12, x13)\n    x15 = lbind(astuple, x6)\n    x16 = chain(x11, x15, uppermost)\n    x17 = fork(recolor, color, x16)\n    x18 = mapply(x17, x29)\n    x19 = paint(I, x18)\n    x20 = branch(x9, identity, identity)\n    x21 = shape(I)\n    x22 = canvas(ZERO, x21)\n    x23 = hconcat(x22, x10)\n    x24 = objects(x23, F, F, T)\n    x25 = compose(toivec, uppermost)\n    x26 = lbind(shift, x24)\n    x27 = order(x25, x26)\n    x28 = paint(x19, x27)\n    x29 = ofcolor(x28, ZERO)\n    x30 = rbind(mapply, x29)\n    x31 = compose(x30, dneighbors)\n    x32 = fork(recolor, x31, ulcorner)\n    x33 = size(x259)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = pair(x34, x34)\n    x36 = mpapply(recolor, x35, x31)\n    O = paint(x12, x36)\n    return O"], [1.0, "def solve_7d1641e2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_5d120429(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_7c30e93a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_dfe5a8a3(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_f69d7e7e(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_d876aea6(I):\n    x1 = objects(I, T, F, F)\n    x2 = sfilter(x1, hline)\n    x3 = sfilter(x1, vline)\n    x4 = compose(hfrontier, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = compose(vfrontier, center)\n    x80 = fork(recolor, color, x7)\n    x9 = mapply(x8, x3)\n    x10 = combine(x6, x9)\n    x11 = paint(I, x10)\n    x12 = toindices(x6)\n    x13 = toindices(x9)\n    x14 = intersection(x12, x13)\n    O = fill(x11, FOUR, x14)\n    return O"], [1.0, "def solve_309e98ea(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = sfilter(x10, x12)\n    x14 = rbind(0000000, THREE)\n    x15 = lbind(ofcolor, THREE)\n    x16 = sfilter(x13, x15)\n    x17 = compose(size, dmirror)\n    x18 = argmax(x16, x17)\n    x19 = mostcolor(x18)\n    x20 = matcher(first, x19)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x18, x21)\n    x23 = difference(x18, x22)\n    x24 = sfilter(x23, x4)\n    x25 = compose(hfrontier, center)\n    x26 = fork(recolor, color, x25)\n    x27 = mapply(x26, x24)\n    x28 = paint(I, x27)\n    x29 = replace(x28, x19, EIGHT)\n    O = paint(x29, x27)\n    return O"], [1.0, "def solve_06184eff(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_6a3a259e(I):\n    x1 = partition(I)\n    x2 = fork(equality, toindices, box)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = color(x4)\n    x6 = palette(I)\n    x7 = remove(x5, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = toindices(x4)\n    x11 = apply(first, x10)\n    x12 = toindices(x4)\n    x13 = apply(last, x12)\n    x14 = rbind(contained, x11)\n    x15 = compose(x14, first)\n    x16 = rbind(contained, x13)\n    x17 = compose(x16, last)\n    x18 = fork(either, x15, x17)\n    x19 = ofcolor(I, x9)\n    x20 = sfilter(x19, x18)\n    x21 = rbind(gravitate, x4)\n    x22 = compose(x21, initset)\n    x23 = fork(add, identity, x22)\n    x24 = fork(connect, identity, x23)\n    x25 = mapply(x24, x20)\n    O = fill(I, x9, x25)\n    return O"], [1.0, "def solve_b9942cd1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = shift(x3, UP)\n    x5 = decrement(x1)\n    x6 = lbind(astuple, x5)\n    x7 = apply(x6, x4)\n    x8 = order(x7, identity)\n    x9 = lbind(shift, x8)\n    x10 = mapply(x9, x4)\n    O = fill(I, x1, x10)\n    return O"], [1.0, "def solve_0aac7f25(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [1.0, "def solve_8b03e3ef(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = positive(x2)\n    x4 = branch(x3, hsplit, vsplit)\n    x5 = x4(I, TWO)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 = palette(x6)\n    x9 = palette(x7)\n    x10 = intersection(x8, x9)\n    x11 = first(x10)\n    x12 = shape(x6)\n    x13 = canvas(x11, x12)\n    x14 = ofcolor(x6, x31)\n    x15 = ofcolor(x7, x31)\n    x16 = intersection(x14, x15)\n    O = fill(x13, TWO, x16)\n    return O"], [1.0, "def solve_645f9a5e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_185a435d(I):\n    x1 = rot180(I)\n    x2 = shoot(x1,ORIGIN)\n    x3 = apply(urcorner, x2)\n    x4 = astuple(SIX, TEN)\n    x5 = canvas(ZERO, x4)\n    x6 = asindices(x5)\n    x7 = box(x6)\n    x8 = center(x6)\n    x9 = lbind(contained, ZERO)\n    x10 = increment(x8)\n    x11 = interval(x9, x10, x8)\n    x12 = lbind(outbox, x6)\n    x13 = apply(x12, x11)\n    x14 = FOUR(x13)\n    x15 =alks500(x14)\n    x16 = apply(first, x15)\n    x17 = FOUR(x16)\n    x18 = sfilter(x17, ONE)\n    x19 = compose(backdrop, inbox)\n    x20 = mapply(x19, x18)\n    x21 = fill(x5, THREE, x20)\n    O = replace(x21, ZERO, ONE)\n    return O"], [1.0, "def solve_32f8fbbe(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [1.0, "def solve_39d84dae(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = asindices(I)\n    x5 = apply(first, x4)\n    x6 = difference(x5, x3)\n    x7 = ofcolor(I, x1)\n    x8 = rbind(adjacent, x7)\n    x9 = mfilter(x6, x8)\n    x10 = objects(I, T, F, T)\n    x11 = sizefilter(x10, ONE)\n    x12 = difference(x5, x11)\n    x13 = rbind(greater, ONE)\n    x14 = compose(x13, size)\n    x15 = sfilter(x12, x14)\n    x16 = difference(x5, x15)\n    x17 = fill(I, x1, x15)\n    O = fill(x17, x1, x16)\n    return O"], [1.0, "def solve_b66c331e(I):\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = rbind(tosfilter, x2)\n    x4 = chain(size, x3, asindices)\n    x5 = matcher(x4, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x1, x6)\n    x8 = argmax(x7, size)\n    x9 = width(x8)\n    x10 = increment(x9)\n    x11 = matcher(last, x10)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x8, x12)\n    x14 = fill(I, ZERO, x13)\n    x15 = double(x509)\n    x16 = asindices(x8)\n    x17 = contained(ZERO, x16)\n    x18 = asindices(x8)\n    x19 = center(x18)\n    x20 = invert(x19)\n    x21 = shift(x15, x20)\n    x22 = compose(initset, last)\n    x23 = center(x18)\n    x24 = insert(x23, x1)\n    x25 = product(x27, x24)\n    x26 = sfilter(x25, x22)\n    x27 = compose(toindices, first)\n    x28 = mapply(x27, x26)\n    x29 = paint(x14, x28)\n    x30 = double(x9)\n    x31 = matcher(first, ZERO)\n    x32 = compose(flip, x31)\n    x33 = fork(both, x30, x32)\n    x34 = sfilter(x26, x33)\n    x35 = paint(x29, x34)\n    O = double(x50)\n    return O"], [1.0, "def solve_9a990061(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = color(x2)\n    return O"], [1.0, "def solve_25abd07d(I):\n    x1 = replace(I, SIX, TWO)\n    x2 = objects(x1, T, F, T)\n    x3 = apply(normalize, x2)\n    x4 = astuple(NINE, NINE)\n    x5 = canvas(ZERO, x4)\n    x6 = asindices(x5)\n    x7 = box(x6)\n    x8 = center(x6)\n    x9 = lbind(contained, ZERO)\n    x10 = rbind(subtract, x8)\n    x11 = compose(x9, x10)\n    x12 = chain(outbox, outbox, initset)\n    x13 = corners(x6)\n    x14 = mapply(x12, x13)\n    x15 = difference(x7, x14)\n    x16 = inbox(x7)\n    x17 = sfilter(x16, x11)\n    x18 = combine(x15, x17)\n    x19 = fill(x5, THREE, x18)\n    x20 = objects(x19, T, F, T)\n    x21 = apply(toindices, x20)\n    x22 = lbind(matcher, normalize)\n    x23 = lbind(extract, x21)\n    x24 = chain(ulcorner, x23, x22)\n    x25 = compose(x24, toindices)\n    x26 = fork(shift, identity, x25)\n    x27 = mapply(x26, x3)\n    O = paint(x5, x27)\n    return O"], [1.0, "def solve_5820abe7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = fork(combine, hfrontier, vfrontier)\n    x5 = width(I)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x3, x6)\n    x8 = tojvec(x7)\n    x9 = height(I)\n    x10 = decrement(x9)\n    x11 = lbind(astuple, x10)\n    x12 = apply(x11, x8)\n    x13 = lbind(shift, x12)\n    x14 = mapply(x13, x12)\n    O = fill(x7, ZERO, x14)\n    return O"], [1.0, "def solve_0d7f1e70(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = subgrid(x8, I)\n    x10 = increment(x4)\n    x11 = frontiers(x10)\n    x12 = divide(x11, FOUR)\n    x13 = increment(x12)\n    x14 = divide(x13, FOUR)\n    x15 = width(x9)\n    x16 = interval(ZERO, x15, ONE)\n    x17 = height(x9)\n    x18 = interval(ZERO, x17, ONE)\n    x19 = lbind(multiply, x14)\n    x20 = apply(x19, x17)\n    x21 = rbind(multiply, x14)\n    x22 = apply(x21, x18)\n    x23 = pair(x20, x22)\n    x24 = sfilter(x23, first)\n    x25 = mapply( last, x24)\n    x26 = fill(x9, x3, x25)\n    x27 =O = fill(x26, x3, x2)\n    x28 = O = x17(x27)\n    x29 = asobject(x28)\n    x30 = shape(I)\n    x31 = canvas(x3, x30)\n    x32 = objects(x29, F, F, T)\n    x33 = paint(x31, x32)\n    O = subgrid(x33, x30)\n    return O"], [1.0, "def solve_387e6ada(I):\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = order(x1, x2)\n    x4 = lbind(apply, last)\n    x5 = chain(x4, first, last)\n    x6 = lbind(colorfilter, x3)\n    x7 = compose(x6, first)\n    x8 = chain(size, x7, rightmost)\n    x9 = astuple(ONE, x8)\n    x10 = palette(I)\n    x11 = x9(x10)\n    x12 = x8(x11)\n    x13 = shape(x12)\n    x14 = canvas(ZERO, x13)\n    x15 = lbind(shift, x12)\n    x16 = lbind(multiply, x14)\n    x17 = compose(x15, x16)\n    x18 = fork(equality, identity, x17)\n    x19 = compose(x18, first)\n    x20 = labeled(x11)\n    x21 = positive(x20)\n    x22 = rbind(multiply, x14)\n    x23 = apply(x22, x3)\n    x24 = lbind(shift, x11)\n    x25 = mapply(x24, x23)\n    O = fill(x14, THREE, x25)\n    return O"], [1.0, "def solve_401fcf95(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = divide(x9, x6)\n    x11 = height(I)\n    x12 = increment(x11)\n    x13 = interval(ZERO, x12, ONE)\n    x14 = apply(tojvec, x13)\n    x15 = lbind(shift, x2)\n    x16 = mapply(x15, x14)\n    x17 = fill(I, x3, x16)\n    x18 = add(SIX, SIX)\n    x19 = canvas(x3, x18)\n    x20 = asobject(x19)\n    x21 = occurrences(x17, x20)\n    x22 = lbind(shift, x2)\n    x23 = mapply(x22, x21)\n    O = fill(x17, x3, x23)\n    return O"], [1.0, "def solve_8389c445(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_dadcdf76(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = ofcolor(I, ZERO)\n    x4 = toindices(x3)\n    x5 = ofcolor(I, x2)\n    x6 = toindices(x5)\n    x7 = ofcolor(I, ZERO)\n    x8 = toindices(x7)\n    x9 = ofcolor(I, ONE)\n    x10 = fill(I, NINE, x4)\n    x11 = fill(x10, RIGHT, x6)\n    x12 = fill(x11, leftmost, x6)\n    x13 = fill(x12, ZERO, x9)\n    x14 = fill(x13, ONE, x9)\n    x15 = fill(x14, TWO, x10)\n    x16 = ofcolor(I, THREE)\n    x17 = fill(x15, x16, x3)\n    x18 = normalize(x3)\n    x19 = shape(x38)\n    x20 = halve(x19)\n    x21 = invert(x20)\n    x22 = shift(x38, x21)\n    x23 = apply(outbox, x22)\n    x24 = rbind(shoot, x23)\n    x25 = mapply(x24, x2)\n    O = fill(x17, ONE, x25)\n    return O"], [1.0, "def solve_0e1ed7e3(I):\n    x1 = index(I, ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = lbind(shift, x2)\n    x4 = height(I)\n    x5 = lbind(multiply, x4)\n    x6 = apply(x5, x3)\n    x7 = mapply(x6, x2)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_30fd0017(I):\n    x1 = rbind(toobject, I)\n    x2 = chain(x1, numcolors, shape)\n    x3 = partition(I)\n    x4 = matcher(x2, ONE)\n    x5 = fork(both, x4, x3)\n    x6 = sfilter(x3, x5)\n    x7 = argmax(x6, size)\n    x8 = color(x7)\n    x9 = objects(I, T, F, F)\n    x10 = colorfilter(x9, x8)\n    x11 = difference(x9, x10)\n    x12 = rbind(toobject, I)\n    x13 = chain(x12, delta, rbind)\n    x14 = rbind(apply, x11)\n    x15 = lbind(chain, center)\n    x16 = lbind(lbind, shift)\n    x17 = rbind(apply, x15)\n    x18 = lbind(lbind, shoot)\n    x19 = chain(x17, x18, last)\n    x20 = fork(recolor, first, x19)\n    x21 = mapply(x20, x11)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_a71c49b7(I):\n    x1 = merge(I)\n    x2 = subgrid(x1, I)\n    x3 = replace(I, ZERO, TWO)\n    x4 = replace(x3, ONE, ZERO)\n    x5 = compress(x4)\n    x6 = width(x2)\n    x7 = halve(x6)\n    x8 = upscale(x5, x7)\n    x9 = ofcolor(x2, ZERO)\n    O = fill(x9, ZERO, x9)\n    return O"], [1.0, "def solve_e1e4e994(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = color(x6)\n    x8 = shape(I)\n    x9 = canvas(x7, x8)\n    x10 = normalize(x6)\n    x11 = objects(x9, F, F, T)\n    x12 = color(x11)\n    x13 = remove(ZERO, x11)\n    x14 = other(x13, x12)\n    x15 = rbind(colorcount, x7)\n    x16 = matcher(x15, ZERO)\n    x17 = sfilter(x12, x16)\n    x18 = difference(x5, x17)\n    x19 = fill(I, x6, x18)\n    x20 = normalize(x6)\n    O = paint(x19, x20)\n    return O"], [1.0, "def solve_03a9ee50(I):\n    x1 = initset(ORIGIN)\n    x2 = insert(x14, x1)\n    x3 = order(x2, identity)\n    x4 = last(x3)\n    x5 = remove(x4, x3)\n    x6 = last(x5)\n    x7 = ofcolor(I, x6)\n    x8 = inbox(x7)\n    O = fill(I, x6, x8)\n    return O"], [1.0, "def solve_7c35cb86(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_9e1f94a3(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_1176101d(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_f32dd5cf(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = argmin(x2, size)\n    x4 = argmax(x2, size)\n    x5 = x4(I)\n    x6 = x4(I)\n    x7 = power(outbox, ONE)\n    x8 = chain(first, x7, initset)\n    x9 = mapply(x8, x3)\n    x10 = fill(I, x1, x9)\n    O = fill(x10, TWO, x4)\n    return O"], [1.0, "def solve_d1a08eac(I):\n    x1 = ofcolor(I, FOUR)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = equality(x5, ZERO)\n    x7 = branch(x6, identity, vmirror)\n    x8 = x7(x4)\n    x9 = ofcolor(x8, EIGHT)\n    x10 = uppermost(x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, identity, hmirror)\n    x13 = x12(x8)\n    x14 = ofcolor(x13, EIGHT)\n    x15 = gravitate(x14, x9)\n    x16 = shift(x14, x15)\n    O = move(x13, x16, x2)\n    return O"], [1.0, "def solve_72611a63(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_509e1e37(I):\n    x1 = rbind(subgrid, I)\n    x2 = chain(mostcolor, x1, numcolors)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, identity, dmirror)\n    x5 = x4(I)\n    x6 = objects(x5, T, F, T)\n    x7 = difference(x6, x5)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x4(x10)\n    return O"], [1.0, "def solve_20489b83(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_89e80634(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(e349, x5)\n    x7 = lbind(chain, positive)\n    x8 = lbind(x7, size)\n    x9 = lbind(x8, x4)\n    x10 = rbind(sfilter, x9)\n    x11 = compose(e349, x10)\n    x12 = chain(x11, x9, size)\n    x13 = compose(normalize, x6)\n    x14 = fork(add, x13, x12)\n    x15 = chain(invert, x14, x12)\n    x16 = fork(shift, x15, x11)\n    x17 = fork(combine, x15, x16)\n    x18 = compose(x17, x18)\n    x19 = uppermost(x3)\n    x20 = rbind(add, x19)\n    x21 = chain(toivec, x20, x18)\n    x22 = rbind(apply, x2)\n    x23 = chain(x22, x21, x18)\n    x24 = fork(mapply, x18, x23)\n    x25 = power(x24, FOUR)\n    x26 = astuple(x21, x25)\n    x27 = rbind(shoot, UP_RIGHT)\n    x28 = compose(x27, x26)\n    x29 = fork(recolor, color, x28)\n    x30 = mapply(x29, x6)\n    x31 = paint(I, x30)\n    O = x1(x31)\n    return O"], [1.0, "def solve_b42bc093(I):\n    x1 =vellcorner(I)\n    x2 = shift(x1, NEG_UNITY)\n    x3 = recolor(THREE, x2)\n    x4 = shift(x3, UNITY)\n    x5 = recolor(SEVEN, x4)\n    x6 = shift(x5, DOWN_LEFT)\n    x7 = recolor(EIGHT, x6)\n    x8 = shift(x7, UP_RIGHT)\n    x9 = combine(x3, x8)\n    x10 = shift(x9, RIGHT)\n    x11 = complaints(I, x10)\n    x12 = product(x11, x11)\n    x13 = fork(combine, vfrontier, hfrontier)\n    x14 = mapply(x13, x12)\n    O = fill(I, ZERO, x14)\n    return O"], [1.0, "def solve_b4e2978a(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = insert(dmirror, x1)\n    x3 = insert(vmirror, x2)\n    x4 = insert(hmirror, x3)\n    x5 = insert(vmirror, x4)\n    x6 = shape(I)\n    x7 = canvas(FIVE, x6)\n    x8 = asobject(I)\n    x9 = shift(x8, UNITY)\n    x10 = paint(x7, x9)\n    x11 = objects(x10, toindices, identity)\n    x12 = apply(urcorner, x11)\n    x13 = shift(x12, RIGHT)\n    x14 = paint(x10, x13)\n    x15 = toindices(x14)\n    x16 = shape(x15)\n    x17 = increment(x16)\n    x18 = shift(x15, x17)\n    x19 = lbind(shift, x18)\n    x20 = objects(x14, T, apply, x19)\n    x21 = apply(x21, x20)\n    x22 = mapply(x19, x21)\n    x23 = paint(x10, x22)\n    x24 = objects(x23, T, F, T)\n    x25 = apply(x21, x24)\n    x26 = mapply(x25, x25)\n    O = paint(x23, x26)\n    return O"], [1.0, "def solve_dcebb587(I):\n    x1 = ofcolor(I, TWO)\n    x2 = equality(x1, THREE)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = difference(x3, x6)\n    x8 = mostcolor(I)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = rbind(colorcount, TWO)\n    x14 = argmax(x12, x13)\n    O = subgrid(x14, I)\n    return O"], [1.0, "def solve_3ae6206e(I):\n    x1 = rot180(I)\n    x2 = rbind(shoot, UP)\n    x3 = compose(x2, last)\n    x4 = fork(recolor, first, x3)\n    x5 = mapply(x4, x1)\n    O = paint(x1, x5)\n    return O"], [1.0, "def solve_3501ddc1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = underfill(I, EIGHT, x2)\n    x4 = apply(dneighbors, x3)\n    x5 = mapply(dneighbors, x4)\n    x6 = difference(x5, x3)\n    O = fill(x3, ONE, x6)\n    return O"], [1.0, "def solve_5cc60881(I):\n    x1 = rot270(I)\n    x2 =bind(order, identity)\n    x3 = switch(x1, ONE, TWO)\n    x4 = apply(x2, x3)\n    x5 = switch(x4, ONE, TWO)\n    O = cmirror(x5)\n    return O"], [1.0, "def solve_c8daab4a(I):\n    x1 = mostcolor(I)\n    x2 = valmax(I, NINE)\n    x3 = matcher(Nnormal, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(size, x4)\n    x6 = apply(x5, I)\n    x7 = asindices(I)\n    x8 = ofcolor(I, x1)\n    x9 = difference(x7, x8)\n    x10 = fill(I, NEG_ONE, x9)\n    x11 = lbind(shift, x8)\n    x12 = mapply(x11, x10)\n    O = fill(x10, double, x12)\n    return O"], [1.0, "def solve_cff50689(I):\n    x1 = astuple(SIX, FIVE)\n    x2 = canvas(numcolors, x1)\n    x3 = equality(lowermost, TWO)\n    x4 = portrait(I)\n    x5 = branch(x3, x2, x4)\n    x6 = branch(x5, TWO, x5)\n    x7 = canvas(apply, x6)\n    x8 = double(SIX)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = branch(x7, x2, x9)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = repeat(x10, x12)\n    x14 = merge(x13)\n    x15 = objects(I, T, F, F)\n    x16 = colorfilter(x15, TWO)\n    x17 = compose(center, ulcorner)\n    x18 = subgrid(x17, I)\n    x19 = add(DOWN, x10)\n    x20 = add(x19, astuple)\n    x21 = add(x20, x4)\n    x22 = canvas(ZERO, x21)\n    x23 = paint(x22, x19)\n    x24 = normalize(x2)\n    x25 = shift(x24, x4)\n    x26 = lbind(shift, x25)\n    x27 = objects(x23, T, F, F)\n    x28 = compose(x26, x4)\n    x29 = apply(x28, x27)\n    x30 = mapply(x23, x29)\n    O = paint(x23, x30)\n    return O"], [1.0, "def solve_9565e023(I):\n    x1 = shape(I)\n    x2 = add(DOWN, x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = toivec(x11)\n    x13 = width(I)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = connect(x12, x15)\n    x17 = height(I)\n    x18 = decrement(x17)\n    x19 = toivec(x18)\n    x20 = connect(x16, x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = tojvec(x22)\n    x24 = connect(x19, x23)\n    x25 = astuple(x14, x24)\n    x26 = astuple(x17, x24)\n    x27 = astuple(x66666666, x17)\n    x28 = astuple(x27, x28)\n    x29 = astuple(x22, x27)\n    x30 = astuple(x003, x30)\n    x31 = mostcolor(I)\n    x32 = canvas(x31, x29)\n    x33 = matcher(first, x31)\n    x34 = compose(flip, x33)\n    x35 = sfilter(x12, x34)\n    x36 = fork(combine, hfrontier, vfrontier)\n    x37 = mapply(x36, x35)\n    O = fill(x32, x1, x37)\n    return O"], [1.0, "def solve_13d76093(I):\n    x1 = fgpartition(I)\n    x2 = matcher(color, ZERO)\n    x3 = extract(x1, x2)\n    x4 = ulcorner(x3)\n    x5 = subtract(x4, DOWN)\n    x6 = shape(x3)\n    x7 = add(x6, TWOBY_ZERO)\n    O = crop(I, x5, x7)\n    return O"], [1.0, "def solve_7cfcae63(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_ae64b7eb(I):\n    x1 = ofcolor(I, TWO)\n    x2 = shape(I)\n    x3 = multiply(x2, x2)\n    x4 = canvas(ZERO, x3)\n    x5 = rbind(multiply, x2)\n    x6 = apply(x5, x1)\n    x7 = asobject(I)\n    x8 = lbind(shift, x7)\n    x9 = mapply(x8, x6)\n    O = paint(x4, x9)\n    return O"], [1.0, "def solve_62d1b9ec(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(THREE, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = contained(I, x10)\n    x12 = branch(x11, ulcorner, urcorner)\n    x13 = shape(I)\n    x14 = decrement(x13)\n    x15 = index(I, x14)\n    x16 = ulcorner(x14)\n    x17 = crop(I, x14, x16)\n    x18 = branch(x11, llcorner, uppermost)\n    x19 = shape(I)\n    x20 = increment(x19)\n    x21 = index(I, x20)\n    x22 = llcorner(x14)\n    x23 = remove(x21, x10)\n    x24 = recolor(x21, x22)\n    x25 = compose( lrcorner, last)\n    x26 = remove(x23, x10)\n    x27 = combine(x24, x26)\n    x28 = fork(connect, first, last)\n    x29 = product(x27, x43)\n    x30 = size(x29)\n    x31 = power(x28, x30)\n    x32 = astuple(x31, x31)\n    x33 = x12(x12)\n    x34 = x24(x12)\n    x35 = canvas(x21, x33)\n    x36 = fill(x35, x3, x32)\n    x37 = paint(x36, x12)\n    O = replace(x37, x10, x5)\n    return O"], [1.0, "def solve_17a35cb3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = merge(x5)\n    x7 = fill(I, x3, x6)\n    x8 = compose(hmirror, vmirror)\n    x9 = x8(x7)\n    x10 = hmirror(x7)\n    x11 = vmirror(x10)\n    x12 = x8(x11)\n    x13 = combine(x9, x12)\n    x14 = pair(x1, x13)\n    x15 = sfilter(x14, hline)\n    x16 = mapply(neighbors, x15)\n    x17 = mapply(neighbors, x12)\n    x18 = height(x17)\n    x19 = height(x12)\n    x20 = divide(x18, x19)\n    x21 = width(x21)\n    x22 = width(x12)\n    x23 = divide(x21, x22)\n    x24 = vmirror(x23)\n    x25 = multiply(x24, x19)\n    x26 = add(x25, x20)\n    x27 = subtract(x25, x22)\n    x28 = divide(x26, x22)\n    x29 = increment(x28)\n    x30 = multiply(x27, x29)\n    x31 = rbind(multiply, x30)\n    x32 = apply(x31, x15)\n    x33 = merge(x12)\n    x34 = lbind(shift, x33)\n    x35 = mapply(x34, x32)\n    O = paint(x7, x35)\n    return O"], [1.0, "def solve_fedb65bb(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_9c63af10(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_9d032616(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_fba391a1(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = merge(x3)\n    x9 = cmirror(x8)\n    x10 = astuple(x11, x10)\n    x11 = hmirror(x10)\n    x12 = vmirror(x11)\n    x13 = hconcat(x11, x12)\n    x14 = hconcat(x13, x1)\n    O = vconcat(x13, x14)\n    return O"], [1.0, "def solve_b008b917(I):\n    x1 = partition(I)\n    x2 = fork(equality, toindices, box)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = color(x4)\n    x6 = palette(I)\n    x7 = remove(x5, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = toindices(x4)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = sfilter(x11, vline)\n    x16 = size(x15)\n    x17 = increment(x16)\n    x18 = height(I)\n    x19 = divide(x17, x12)\n    x20 = increment(x19)\n    x21 = width(I)\n    x22 = divide(x21, x12)\n    x23 = increment(x22)\n    x24 = astuple(x16, x23)\n    x25 = canvas(x9, x24)\n    x26 = asindices(I)\n    x27 = ofcolor(I, x5)\n    x28 = outbox(x25)\n    x29 = intersection(x27, x28)\n    x30 = apply(initset, x29)\n    x31 = rbind(rapply, x20)\n    x32 = compose(first, x31)\n    x33 = apply(x32, x30)\n    x34 = ofcolor(I, x5)\n    x35 = difference(x34, x29)\n    x36 = ofcolor(I, x5)\n    x37 = fill(x25, THREE, x36)\n    x38 = shift(x31, x37)\n    x39 = ofcolor(I, x5)\n    x40 = difference(x39, x38)\n    O = fill(x37, THREE, x40)\n    return O"], [1.0, "def solve_960e5d52(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_766e4681(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_16f62bb0(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_58ace031(I):\n    x1 = frontiers(I)\n    x2 = mostcolor(I)\n    x3 = shape(I)\n    x4 = canvas(x2, x3)\n    x5 = hconcat(I, x4)\n    x6 = objects(x5, F, F, T)\n    x7 = argmax(x6, size)\n    x8 = toindices(x7)\n    x9 = ZERO(x2)\n    x10 = equality(x9, x8)\n    x11 = shift(x7, x10)\n    x12 = toindices(x7)\n    x13 = compose(x11, x12)\n    x14 = rbind(intersection, x13)\n    x15 = chain(size, x14, toindices)\n    x16 = matcher(x15, ZERO)\n    x17 = objects(x10, T, F, T)\n    x18 = sfilter(x17, x16)\n    x19 = argmax(x18, size)\n    x20 = matcher(first, x2)\n    x21 = sfilter(x19, x20)\n    x22 = difference(x19, x21)\n    x23 = color(x12)\n    x24 = fill(x22, x23, x27)\n    O = fill(x24, x23, x22)\n    return O"], [1.0, "def solve_b2e353cf(I):\n    x1 = THREEe21\n    x2 = dmirror(I)\n    x3 = equality(x1, x2)\n    x4 = flip(x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = combine(x15, x16)\n    x18 = intersection(x15, x16)\n    x19 = difference(x17, x18)\n    O = fill(x14, THREE, x19)\n    return O"], [1.0, "def solve_7df7b8a3(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_e15f254f(I):\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = mapply(x11, x5)\n    x13 = combine(x7, x12)\n    x14 = llcorner(x7)\n    x15 = mapply(x14, x9)\n    x16 = combine(x13, x15)\n    x17 = branch(x1, identity, height)\n    x18 = x17(x10)\n    x19 = astuple(ONE, x18)\n    x20 = canvas(ZERO, x19)\n    x21 = asobject(x20)\n    x22 = occurrences(x2, x21)\n    x23 = intersection(x2, x22)\n    O = fill(x2, ONE, x23)\n    return O"], [1.0, "def solve_f2f1d57a(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_9983940e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_337ab09e(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, rbind, tophalf)\n    x6 = x5(I)\n    x7 = fork(add, height, width)\n    x8 = x7(I)\n    x9 = width(x6)\n    x10 = increment(x9)\n    x11 = interval(ZERO, x10, ONE)\n    x12 = apply(x7, x11)\n    x13 = lbind(intersection, x12)\n    x14 = lbind(shift, x12)\n    x15 = mapply(x14, x13)\n    O = fill(x6, FOUR, x15)\n    return O"], [1.0, "def solve_56c0e686(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_045c5e79(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_63beaf5c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_41988ee7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = interval(ONE, NINE, ONE)\n    x8 = apply(tojvec, x7)\n    x9 = lbind(shift, x8)\n    x10 = mapply(x9, x6)\n    O = fill(x10, FIVE, x3)\n    return O"], [1.0, "def solve_7ac31386(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = argmax(x1, size)\n    x3 = remove(x2, x1)\n    x4 = merge(x3)\n    x5 = subgrid(x4, I)\n    x6 = chain(ulcorner, asindices, objects)\n    x7 = x6(x5)\n    x8 = argmin(x7, x7)\n    x9 = mostcolor(x8)\n    x10 = shape(x2)\n    x11 = canvas(x9, x10)\n    x12 = lbind(shift, x8)\n    x13 = mapply(x12, x11)\n    O = paint(x11, x13)\n    return O"], [1.0, "def solve_dcce0a14(I):\n    x1 = ofcolor(I, TWO)\n    x2 = papply(neighbors, x1)\n    x3 = lbind(shift, x2)\n    x4 = mapply(x3, x5)\n    O = fill(I, ONE, x4)\n    return O"], [1.0, "def solve_d2a950fe(I):\n    x1 = ofcolor(I, THREE)\n    x2 = ofcolor(I, TWO)\n    x3 = mapply(first, x1)\n    x4 = mapply(last, x1)\n    x5 = fill(I, SIX, x3)\n    x6 = fill(x5, SEVEN, x4)\n    O = fill(x6, EIGHT, x5)\n    return O"], [1.0, "def solve_9676bc05(I):\n    x1 = trim(I)\n    x2 = objects(x1, F, T, T)\n    x3 = argmax(x2, numcolors)\n    x4 = toindices(x3)\n    x5 = normalize(x3)\n    x6 = toindices(x5)\n    x7 = combine(x4, x6)\n    x8 = intersection(x4, x6)\n    x9 = difference(x7, x8)\n    x10 = mostcolor(I)\n    x11 = ofcolor(x5, x10)\n    x12 = asindices(x5)\n    x13 = combine(x11, x12)\n    x14 = fill(x5, x10, x13)\n    x15 = objects(x14, T, F, T)\n    x16 = apply(uppermost, x15)\n    x17 = size(x16)\n    x18 = equality(ONE, x17)\n    x19 = lbind(shift, x4)\n    x20 = mapply(x19, x16)\n    x21 = paint(x14, x20)\n    x22 = interval(ZERO, NINE, ONE)\n    x23 = apply(double, x33)\n    x24 = apply(increment, x23)\n    x25 = apply(tojvec, x24)\n    x26 = prapply(add, x25, x21)\n    x27 = fork(equality, identity, x26)\n    x28 = mapply(x27, x2)\n    O = fill(x21, x10, x28)\n    return O"], [1.0, "def solve_46c776cb(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_99380a25(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_5741a648(I):\n    x1 = lbind(adjacent, x4)\n    x2 = compose(x1, size)\n    x3 = fork(both, x2, ONE)\n    x4 = apply(x3, I)\n    x5 = sfilter(x4, x4)\n    x6 = corners(x5)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = x7(x6)\n    x9 = fill(I, EIGHT, x8)\n    x10 = size(x1)\n    x11 = decrement(x10)\n    x12 = tojvec(x11)\n    x13 = shift(x9, x12)\n    x14 = fill(x9, TWO, x13)\n    x15 = size(x2)\n    x16 = decrement(x15)\n    x17 = toivec(x16)\n    x18 = shift(x14, x17)\n    x19 = fill(x19, FOUR, x18)\n    x20 = size(x3)\n    x21 = decrement(x20)\n    x22 = tojvec(x21)\n    x23 = shift(x19, x22)\n    x24 = fill(x21, THREE, x23)\n    x25 = size(x2)\n    x26 = decrement(x25)\n    x27 = toivec(x26)\n    x28 = shift(x93, x27)\n    x29 = fill(x24, THREE, x28)\n    x30 = size(x2)\n    x31 = decrement(x30)\n    x32 = tojvec(x31)\n    x33 = shift(x77, x32)\n    x34 = fill(x29, THREE, x33)\n    x35 = merge(x5)\n    x36 = cover(x35, x34)\n    x37 = paint(x36, x31)\n    O = x7(x37)\n    return O"], [1.0, "def solve_30a22475(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_d30b808e(I):\n    x1 = width(I)\n    x2 = astuple(ONE, x1)\n    x3 = decrement(x1)\n    x4 = tojvec(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(THREE, x5)\n    x7 = equality(x1, x6)\n    x8 = height(I)\n    x9 = astuple(ONE, x8)\n    x10 = decrement(x9)\n    x11 = toivec(x10)\n    x12 = shoot(x11, x11)\n    x13 = combine(x7, x12)\n    x14 = tojvec(x3)\n    x15 = decrement(x14)\n    x16 = astuple(x10, x15)\n    x17 = connect(x13, x16)\n    x18 = size(x17)\n    x19 = astuple(x17, x6)\n    x20 = connect(x13, x19)\n    x21 = size(x20)\n    x22 = astuple(x17, x21)\n    x23 = connect(x17, x22)\n    x24 = fork(recolor, color, x23)\n    x25 = mapply(x24, x4)\n    O = paint(I, x25)\n    return O"], [1.0, "def solve_f86a850f(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x28)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [1.0, "def solve_e0cb7f72(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_9f4da970(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_9253ebf9(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = compose(x2, x1)\n    x4 = fork(intersection, x1, x3)\n    x5 = compose(size, x4)\n    x6 = palette(I)\n    x7 = matcher(x5, ZERO)\n    x8 = sfilter(x6, x7)\n    x9 = totuple(x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = mapply(neighbors, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = ofcolor(I, x11)\n    x17 = mapply(neighbors, x16)\n    x18 = toobject(x17, I)\n    x19 = mostcolor(x18)\n    x20 = rbind(shoot, UNITY)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = fork(combine, x20, x21)\n    x23 = rbind(shoot, UP_RIGHT)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = fork(combine, x23, x24)\n    x26 = fork(combine, x22, x25)\n    x27 = ofcolor(I, x11)\n    x28 = ofcolor(I, x10)\n    x29 = combine(x27, x28)\n    x30 = mapply(x26, x29)\n    x31 = ofcolor(I, x15)\n    x32 = intersection(x31, x30)\n    x33 = ofcolor(I, x19)\n    x34 = intersection(x33, x30)\n    x35 = fill(I, x10, x32)\n    O = fill(x35, x11, x34)\n    return O"], [1.0, "def solve_c7bd9a3f(I):\n    x1 = trim(I)\n    x2 = height(x1)\n    x3 = width(x1)\n    x4 = astuple(x2, x3)\n    x5 = repeat(x9, x4)\n    x6 = combine(x5, ONE)\n    x7 = dmirror(x6)\n    x8 = astuple(x2, x3)\n    x9 = dmirror(x8)\n    x10 = hupscale(x9, x4)\n    x11 = height(x10)\n    x12 = divide(x01, x11)\n    x13 = increment(x12)\n    x14 = width(x10)\n    x15 = divide(x14, x4)\n    x16 = increment(x15)\n    x17 = repeat(x10, x16)\n    x18 = combine(x6, x17)\n    x19 = repeat(x18, ONE)\n    x20 = merge(x19)\n    x21 = decrement(x17)\n    x22 = hsplit(x20, x21)\n    x23 = merge(x22)\n    x24 = crop(x20, ORIGIN, x27)\n    x25 = crop(x20, DOWN, x27)\n    x26 = shape(x25)\n    x27 = add(x26, x24)\n    x28 = add(x27, x25)\n    x29 = canvas(ZERO, x28)\n    x30 = asobject(x22)\n    x31 = shift(x30, UNITY)\n    x32 = paint(x29, x31)\n    x33 = rot90(x32)\n    x34 = shift(x33, x2)\n    x35 = paint(x32, x34)\n    x36 = rot270(x35)\n    x37 = shift(x31, x2)\n    x38 = paint(x35, x37)\n    x39 = rot90(x38)\n    x40 = shift(x39, x2)\n    O = paint(x40, x29)\n    return O"], [1.0, "def solve_0d83159d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_c991acad(I):\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = chain(merge, x3, x1)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x4)\n    O = paint(I, x6)\n    return O"], [1.0, "def solve_3db10a4f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = rbind(subgrid, I)\n    x4 = rbind(colorcount, x1)\n    x5 = chain(x4, x3, x2)\n    x6 = lbind(greater, THREE)\n    x7 = chain(x6, x5, x2)\n    x8 = rbind(colorcount, x1)\n    x9 = fork(equality, x7, x8)\n    x10 = sfilter(x2, x9)\n    O = fill(I, ZERO, x10)\n    return O"], [1.0, "def solve_1744ac9c(I):\n    x1 = frontiers(I)\n    x2 = compose(size, dedupe)\n    x3 = matcher(x2, ONE)\n    x4 = x3(I)\n    x5 = palette(x4)\n    x6 = shape(x4)\n    x7 = canvas(x6, x5)\n    O = argmax(x7, x3)\n    return O"], [1.0, "def solve_45799ea6(I):\n    x1 = initset(ORIGIN)\n    x2 = toindices(x1, ORIGIN)\n    x3 = lbind(shift, x2)\n    x4 = shape(I)\n    x5 = maximum(x4)\n    x6 = lbind(multiply, x4)\n    x7 = apply(x6, x3)\n    x8 = mapply(x3, x7)\n    O = paint(I, x8)\n    return O"], [1.0, "def solve_15f8a676(I):\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = initset(x3)\n    x5 = rbind(shoot, UNITY)\n    x6 = lbind(compose, x5)\n    x7 = lbind(extract, x4)\n    x8 = chain(x6, x7, x6)\n    x9 = decrement(x1)\n    x10 = astuple(x9, x8)\n    x11 = astuple(x7, x9)\n    x12 = x11(x10)\n    x13 = x11(x7)\n    x14 =branch(x12, x13, x4)\n    x15 = branch(x11, x14, x4)\n    x16 = apply(x15, x1)\n    x17 = mapply(x16, x16)\n    O = fill(I, ZERO, x17)\n    return O"], [1.0, "def solve_298471cb(I):\n    x1 = switch(I, EIGHT, TWO)\n    x2 = switch(x1, ONE, TWO)\n    x3 = compress(x2)\n    x4 = rbind(toobject, I)\n    x5 = UNITY(x3)\n    x6 = rbind(colorcount, x4)\n    x7 = matcher(x6,5511)\n    x8 = chain(x7, x5, x4)\n    x9 = vmirror(x8)\n    x10 = hconcat(x9, x8)\n    x11 = hmirror(x10)\n    x12 = vconcat(x11, x8)\n    x13 = vconcat(x12, x10)\n    O = hmirror(x13)\n    return O"], [1.0, "def solve_f6507781(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = equality(x1, x2)\n    x4 = crop(x3, SEVEN, EIGHT)\n    O = hconcat(x4, x3)\n    return O"], [1.0, "def solve_6dc0b47e(I):\n    x1 = ofcolor(I, TWO)\n    x2 = x3aa(x1, ONE)\n    x3 = decrement(x2)\n    x4 = tojvec(x3)\n    x5 = shoot(x4, UNITY)\n    x6 = rbind(shoot, DOWN)\n    x7 = compose(x6, last)\n    x8 = fork(recolor, first, x7)\n    x9 = mapply(x8, x5)\n    O = paint(I, x9)\n    return O"], [1.0, "def solve_dcacfcc3(I):\n    x1 = ofcolor(I, TWO)\n    x2 = subgrid(x1, I)\n    x3 = trim(x2)\n    x4 = palette(x3)\n    x5 = compose(maximum, switch)\n    x6 = lbind(extract, x4)\n    x7 = lbind(matcher, x5)\n    x8 = compose(x6, x7)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    x11 = cover(I, x10)\n    x12 = ofcolor(x11, TWO)\n    x13 = subgrid(x12, x11)\n    x14 = asobject(x13)\n    x15 = occurrences(x14, x4)\n    x16 = lbind(shift, x14)\n    x17 = mapply(x16, x15)\n    O = fill(x11, ONE, x17)\n    return O"], [1.0, "def solve_da3afea0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_2faac5d7(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_3443aeb4(I):\n    x1 = switch(I, ORIGIN, THREE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [1.0, "def solve_5bfeb81a(I):\n    x1 = rot180(I)\n    x2 = equality(x1, TWO)\n    x3 = hmirror(I)\n    x4 = insert(x3, I)\n    x5 = lbind(vmmirror, x4)\n    x6 = lbind(hmirror, x4)\n    x7 = compose(x5, x6)\n    x8 = x7(x2)\n    O = branch(x8, vmirror, hmirror)\n    return O"], [1.0, "def solve_bd3460d5(I):\n    x1 = astuple(SIX, FIVE)\n    x2 = cmirror(I)\n    x3 = hconcat(x1, x2)\n    x4 = hmirror(x3)\n    x5 = vconcat(x4, x4)\n    x6 = vconcat(x5, x4)\n    O = cellwise(x6, ZERO, ONE)\n    return O"], [1.0, "def solve_946ad92c(I):\n    x1 = partition(I)\n    x2 = chain(size, dedupe, neighbors)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, dmirror, identity)\n    x5 = x4(I)\n    x6 = objects(x5, T, F, F)\n    x7 = order(x6, leftmost)\n    x8 = apply(color, x7)\n    x9 = repeat(x8, ONE)\n    O = x4(x9)\n    return O"], [1.0, "def solve_7fe888ab(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_a4144ebf(I):\n    x1 = replace(I, E349, ZERO)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [1.0, "def solve_58c97793(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_7fc12f1f(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, T)\n    x4 = merge(x3)\n    O = vmirror(x4)\n    return O"], [1.0, "def solve_e36cd606(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_7c329b5f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_7e191ea1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_93ef54cf(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, x2)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [1.0, "def solve_802dec62(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = argmin(x2, size)\n    x4 = shoot(x3, UP_RIGHT)\n    x5 = combine(x4, x4)\n    x6 = recolor(x1, x5)\n    x7 = fork(combine, first, last)\n    x8 = mapply(x7, x6)\n    O = fill(I, x1, x8)\n    return O"], [1.0, "def solve_ad5c438d(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_3371a5b0(I):\n    x1 = lbind(fork, greater)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = lbind(recolor, ZERO)\n    x5 = compose(x4, x3)\n    x6 = fork(paint, identity, x5)\n    x7 = compose(rot90, x6)\n    x8 = power(x7, FOUR)\n    x9 = rot180(I)\n    x10 = power(x9, TWO)\n    x11 = fork(combine, x8, x10)\n    x12 = compose(x11, x7)\n    x13 = apply(x12, x9)\n    O = paint(x9, x13)\n    return O"], [1.0, "def solve_5e6c60ec(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_f6b46143(I):\n    x1 = rbind(difference, x2)\n    x2 = chain(size, x1, palette)\n    x3 = matcher(x2, ZERO)\n    x4 = extract(vsindices, x3)\n    x5 = lbind(shift, x4)\n    x6 = objects(I, T, F, T)\n    x7 = mapply(x5, x6)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_c23fabb5(I):\n    x1 = astuple(identity, identity)\n    x2 = astuple(rot90, rot270)\n    x3 = astuple(x1, x2)\n    x4 = astuple(rot180, rot180)\n    x5 = astuple(rot270, rot90)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = leastcolor(I)\n    x9 = repeat(x8, ONE)\n    x10 = rbind(rapply, I)\n    x11 = chain(x10, initset, first)\n    x12 = compose(first, x11)\n    x13 = chain(dedupe, first, x12)\n    x14 = matcher(x13, x9)\n    x15 = extract(x7, x14)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = x16(I)\n    x19 = ofcolor(x18, x8)\n    x20 = height(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = lbind(astuple, x20)\n    x23 = apply(x22, x21)\n    x24 = rbind(shoot, DOWN)\n    x25 = mapply(x24, x23)\n    x26 = fill(x18, FOUR, x25)\n    x27 = astuple(x20, x20)\n    x28 = canvas(ZERO, x27)\n    x29 = asindices(x28)\n    x30 = shift(x29, x27)\n    x31 = shape(I)\n    x32 = maximum(x31)\n    x33 = lbind(shift, x30)\n    x34 = interval(ZERO, x32, x20)\n    x35 = pair(x34, x34)\n    x36 = mapply(x33, x35)\n    x37 = fill(x26, TWO, x36)\n    O = x17(x37)\n    return O"], [1.0, "def solve_5ccc604d(I):\n    x1 = ulcorner(I)\n    x2 = subgrid(x1, I)\n    x3 = upscale(x2, THREE)\n    x4 = hconcat(x3, x3)\n    x5 = hconcat(x4, x3)\n    x6 = vconcat(x5, x5)\n    x7 = vconcat(x6, x5)\n    O = cellwise(x3, x7, ZERO)\n    return O"], [1.0, "def solve_c2e584b0(I):\n    x1 = ofcolor(I, TWO)\n    x2 = shape(I)\n    x3 = maximum(x2)\n    x4 = interval(ZERO, x3, ONE)\n    x5 = canvas(EIGHT, x4)\n    x6 = asobject(I)\n    x7 = lbind(shift, x6)\n    x8 = height(x6)\n    x9 = rbind(multiply, x8)\n    x10 = apply(x9, x3)\n    x11 = mapply(x7, x10)\n    O = paint(x5, x11)\n    return O"], [1.0, "def solve_fca2d930(I):\n    x1 = hconcat(I, I)\n    x2 = vconcat(x1, x1)\n    x3 = asindices(x2)\n    x4 = mostcolor(I)\n    x5 = ofcolor(x2, x4)\n    x6 = difference(x3, x5)\n    x7 = mapply(ineighbors, x6)\n    O = underfill(x2, EIGHT, x7)\n    return O"], [1.0, "def solve_d7d88984(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_6db9e05d(I):\n    x1 = ofcolor(I, EIGHT)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = equality(x5, ZERO)\n    x7 = branch(x6, identity, vmirror)\n    x8 = x7(x4)\n    x9 = ofcolor(x8, EIGHT)\n    x10 = uppermost(x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, identity, hmirror)\n    x13 = x12(x8)\n    x14 = ofcolor(x13, EIGHT)\n    x15 = ofcolor(x13, TWO)\n    x16 = rbind(shoot, DOWN)\n    x17 = mapply(x16, x14)\n    x18 = height(x13)\n    x19 = rbind(repeat, x18)\n    x20 = chain(x17, x19, double)\n    x21 = compose(x20, last)\n    x22 = fork(combine, first, x21)\n    x23 = fork(recolor, x22, outbox)\n    x24 = mapply(x23, x4)\n    O = paint(x13, x24)\n    return O"], [1.0, "def solve_f320b26e(I):\n    x1 = palette(I)\n    x2 = remove(vsplit, I)\n    x3 = lbind(hsplit, I)\n    x4 = argmax(x2, x3)\n    x5 = other(x1, x4)\n    x6 = ofcolor(I, x4)\n    x7 = ofcolor(I, x5)\n    x8 = combine(x6, x7)\n    x9 = fill(I, x5, x8)\n    x10 = difference(x9, x7)\n    O = fill(x9, x4, x10)\n    return O"], [1.0, "def solve_22675d4d(I):\n    x1 = rot270(I)\n    x2 = hconcat(x1, x1)\n    O = hconcat(x2, x2)\n    return O"], [1.0, "def solve_06fd67c3(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_29b4d201(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_8b74f01d(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_87f92023(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 =filter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [1.0, "def solve_19971b9f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_103082d8(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_650015af(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_99dccc9e(I):\n    x1 = initset(ZERO)\n    x2 = insert(ORIGIN, x1)\n    x3 = lbind(shift, x2)\n    x4 = compose(x3, toindices)\n    x5 = compose(lrcorner, x4)\n    x6 = compose(ofcolor, x5)\n    x7 = fork(mapply, x6, x4)\n    x8 = compose(x5, x7)\n    x9 = fork(recolor, x8, x6)\n    x10 = mapply(x9, x1)\n    O = paint(I, x10)\n    return O"], [1.0, "def solve_b4715f44(I):\n    x1 = replace(I, SIX, TWO)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = mostcolor(I)\n    x14 = combine(x13, x12)\n    x15 = increment(x14)\n    x16 = canvas(x13, x15)\n    x17 = asobject(x16)\n    x18 = height(I)\n    x19 = astuple(last, x18)\n    x20 = increment(x19)\n    x21 = width(I)\n    x22 = astuple(x21, x20)\n    x23 = canvas(x9, x22)\n    x24 = asobject(x23)\n    x25 = decrement(x24)\n    x26 = width(I)\n    x27 = astuple(x26, x25)\n    x28 = prapply(astuple, x27)\n    x29 = lbind(shift, x10)\n    x30 = mapply(x29, x28)\n    x31 = paint(I, x30)\n    O = x9(x31)\n    return O"], [1.1, "def solve_38181f68(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, extract)\n    x35 = compose(x34, x10)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, extract)\n    x40 = compose(x39, x35)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(a"], [1.1, "def solve_b7e97c78(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =27(I)\n    x3 = trim(x2)\n    x4 = lefthalf(x3)\n    x5 = tophalf(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(x4)\n    x8 =675(x7)\n    x9 = width(x8)\n    x10 = increment(x9)\n    x11 = interval(ZERO, x10, x5)\n    x12 = merge(x11)\n    x13 = partition(x12)\n    x14 = lbind(colorfilter, x13)\n    x15 = compose(size, x14)\n    x16 = matcher(x15, TWO)\n    x17 = extract(x14, x16)\n    x18 = lbind(colorcount, x17)\n    x19 = argmin(x19, x18)\n    x20 = ofcolor(x12, x19)\n    x21 = ofcolor(x12, x18)\n    x22 = neighbors(ORIGIN)\n    x23 = leftmost(x22)\n    x24 = ofcolor(x12, x19)\n    x25 = rightmost(x24)\n    x26 = difference(x23, x25)\n    x27 = ofcolor(x12, x19)\n    x28 = leftmost(x27)\n    x29 = ofcolor(x12, x18)\n    x30 = initset(x28)\n    x31 = insert(x29, x30)\n    x32 = insert(x32, x31)\n    x33 = width(x12)\n    x34 = tojvec(x33)\n    x35 = initset(x34)\n    x36 = insert(x33, x35)\n    x37 = insert(x36, x28)\n    x38 = insert(x30, x37)\n    x39 = compose(backdrop, inbox)\n    x40 = lbind(rbind, manhattan)\n    x41 = chain(x39, x40, initset)\n    x42 = lb"], [1.1, "def solve_88ed5446(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_77b659f2(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_628b813b(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(111, x11, identity)\n    x13 = chain(size, x9, x12)\n    x14 = interval(ONE, SIX, ONE)\n    x15 = argmax(x14, x13)\n    x16 = matcher(x13, x15)\n    x17 = fork(both, x15, x16)\n    x18 = sfilter(x8, x17)\n    x19 = fill(I, x1, x18)\n    x20 = increment(TEN)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = astuple(x22, x22)\n    x23 = rbind(multiply, x22)\n    x24 = rbind(divide, x22)\n    x25 = compose(x23, x24)\n    x26 = lbind(equality, x21)\n    x27 = compose(x26, last)\n    x28 = chain(x20, x27, x25)\n    x29 = fork(sfilter, x25, x28)\n    x30 = fork(connect, first, last)\n    x31 = lbind(apply, last)\n    x32 = lbind(ofcolor, I)\n    x33 = compose(x31, x32)\n    x34 = fork( either, x30, x33)\n    x35 = sfilter(x29, x34)\n    x36 =0000(x15, x35)\n    x37 = sfilter(x36, x35)\n    x38 = fork(connect"], [1.1, "def solve_aa2cfd83(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 =5582255422\n    x4 =5525920009\n    8257967759\n    2060645202\n    5556\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = rbind(sfilter, x1)\n    x3 = compose(size, x2)\n    x4 = apply(x3, x1)\n    x5 = maximum(x4)\n    x6 = dmirror(x1)\n    x7 = apply(x3, x6)\n    x8 = maximum(x7)\n    x9 = increment(x8)\n    x10 = interval(TWO, x9, ONE)\n    x11 = increment(x5)\n    x12 = interval(TWO, x11, ONE)\n    x13 = product(x10, x12)\n    x14 = fork(multiply, first, last)\n    x15 = apply(x14, x13)\n    x16 = lbind(sfilter, x13)\n    x17 = lbind(matcher, x14)\n    x18 = compose(x16, x17)\n    x19 = apply(x18, x15)\n    x20 = lbind(occurrences, x1)\n    x21 = lbind(recolor, ZERO)\n    x22 = lbind(canvas, NEG_ONE)\n    x23 = compose(asindices, x22)\n    x24 = chain(x20, x21, x23)\n    x25 = lbind(mapply, x24)\n    x26 = chain(positive, size, x25)\n    x27 = sfilter(x19, x26)\n    x28 = compose(x14, first)\n    x29 = rbind(argmax, x28)\n    x30 = lbind(recolor, ZERO)\n    x31 = lbind(canvas, NEG_ONE)\n    x32 = chain(x30, asindices, x31)\n    x33 = lbind(lbind, shift)\n    x34 = lb"], [1.1, "def solve_7cd623d9(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_b0257e52(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = color(x4)\n    x6 = palette(I)\n    x7 = remove(x5, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = toindices(x4)\n    x11 = apply(first, x10)\n    x12 = toindices(x4)\n    x13 = apply(last, x12)\n    x14 = rbind(contained, x11)\n    x15 = compose(x14, first)\n    x16 = rbind(contained, x13)\n    x17 = compose(x16, last)\n    x18 = fork(either, x15, x17)\n    x19 = ofcolor(I, x9)\n    x20 = sfilter(x19, x18)\n    x21 = rbind(gravitate, x4)\n    x22 = compose(x21, initset)\n    x23 = fork(add, identity, x22)\n    x24 = fork(connect, identity, x23)\n    x25 = apply(x24, x20)\n    x26 = lbind(greater, x12)\n    x27 = compose(x26, first)\n    x28 = rbind(sfilter, x27)\n    x29 = chain(merge, x28, center)\n    x30 = fork(recolor, color, x29)\n    x31 = mapply(x30, x21)\n    x32 = paint(I, x31)\n    x33 = rot90(x127)\n    x34 = ofcolor(x33, x9)\n    x35 = sfilter(x34, x35)\n    x36 = remove(x33, x35)\n    x37 = height(x36)\n    x38 = frontiers(x35)\n    x39 = sfilter(x38, x35)\n    x40 = mapply(size, x"], [1.1, "def solve_9f2b3a8d(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = fork(combine, vfrontier, hfrontier)\n    x5 = compose(x4, center)\n    x6 = rbind(mapply, x3)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = compose(x6, x7)\n    x9 = fork(difference, x8, identity)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ZERO)\n    x12 = lbind(ofcolor, I)\n    x13 =08916(max, x12)\n    x14 = matcher(x13, ZERO)\n    x15 = compose(flip, x14)\n    x16 = rbind(sfilter, x15)\n    x17 = lbind(occurrences, I)\n    x18 = chain(x17, x16, x15)\n    x19 = compose(x5, x18)\n    x20 = extract(x3, x19)\n    x21 = x20(I)\n    x22 = objects(x21, T, F, T)\n    x23 = colorfilter(x22, ZERO)\n    x24 = difference(x22, x23)\n    x25 = rbind(subgrid, x21)\n    x26 = apply(x25, x24)\n    x27 = rbind(colorcount, ZERO)\n    x28 = x27(x2)\n    x29 = argmax(x26, x28)\n    x30 = x29(x2)\n    x31 = objects(x30, T, F, T)\n    x32 = apply(x31, x31)\n    x33 = merge(x32)\n    x34 = size(x33)\n    x35 = rbind(subgrid, x01)\n    x36 = apply(x35, x34)\n    x37 = rightmost(x36)\n    x38 = rightmost(x33)\n    x39 = subtract(x37,"], [1.1, "def solve_1017e0b5(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = insert(ORIGIN, x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(TWO_BY_TWO, x4)\n    x6 = insert(TWx70, x5)\n    x7 = astuple(FOUR, FOUR)\n    x8 = canvas(NEG_ONE, x7)\n    x9 = astuple(THREE, ORIGIN)\n    x10 = initset(x9)\n    x11 = insert(x8, x10)\n    x12 = insert(THREE_BY_THREE, x11)\n    x13 = matcher(numcolors, FOUR)\n    x14 = sfilter(x12, x13)\n    x15 = difference(x12, x14)\n    x16 = sfilter(x15, x14)\n    x17 = mapply(size, x16)\n    x18 = argmax(x15, x17)\n    x19 = x13(x18)\n    x20 = fill(I, x1, x19)\n    x21 = fill(x20, TWO, x18)\n    x22 = asobject(x21)\n    x23 = occurrences(x22, x18)\n    x24 = time Fill(x23, x8)\n    x25 = objects(x22, T, T, T)\n    x26 = insert(ORIGIN, x25)\n    x27 = toindices(x26)\n    x28 = lbind(shift, x27)\n    x29 = occurrences(x22, x27)\n    x30 = mapply(x28, x29)\n    x31 = fill(x22, TWO, x30)\n    x32 = objects(x31, T, T, T)\n    x33 = rbind(contained, x32)\n    x34 = compose(x33, first)\n    x35 = rbind(sfilter, x34)\n    x36 = lbind(pair, x25)\n    x37 = chain(x36, x35, x35"], [1.1, "def solve_3d2fd179(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = positive(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_018326bc(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_606b0eb2(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_bd9658cf(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = height(I)\n    x9 = astuple(x8, ONE)\n    x10 = canvas(THREE, x9)\n    x11 = hconcat(x10, I)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = identity(DOWN)\n    x17 = connect(ORIGIN, x15)\n    x18 = fill(x11, THREE, x17)\n    x19 = identity(x13)\n    x20 = identity(x12)\n    x21 = identity(x12)\n    x22 = identity(F)\n    x23 = identity(ZERO)\n    x24 = compose(first, first)\n    x25 = chain(first, last, x24)\n    x26 = compose(first, first)\n    x27 = chain(last, last, x26)\n    x28 = chain(first, first, first)\n    x29 = chain(first, last, last)\n    x30 = chain(first, first, last)\n    x31 = chain(last, first, last)\n    x32 = compose(decrement, x25)\n    x33 = compose(decrement, x27)\n    x34 = fork(astuple, x32, x33)\n    x35 = compose(decrement, x27)\n    x36 = fork(multiply, x30, x35)\n    x37 = fork(add, x29, x36)\n    x38 = compose(decrement, x28)\n    x39 = fork(multiply, x30, x38)\n    x40 = fork(add, x29, x39)\n    x41 ="], [1.1, "def solve_e97729af(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = compose(leftmost, first)\n    x13 = compose(leftmost, last)\n    x14 = fork(equality, x12, x13)\n    x15 = compose(uppermost, first)\n    x16 = compose(uppermost, last)\n    x17 = fork(equality, x15, x16)\n    x18 = fork(either, x14, x17)\n    x19 = sfilter(x11, x18)\n    x20 = compose(color, first)\n    x21 = compose(center, first)\n    x22 = compose(center, last)\n    x23 = fork(connect, x21, x22)\n    x24 = fork(recolor, x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = matcher(last, ZERO)\n    x28 = decrement(x26)\n    x29 = matcher(last, x28)\n    x30 = fork(either, x27, x29)\n    x31 = matcher(first, ZERO)\n    x32 = decrement(x25)\n    x33 = matcher(first, x32)\n    x34 = fork(either, x31, x33)\n    x35 = toindices(x5)\n    x36 = sfilter(x35, x30)\n    x37 = equality(x35, x36)\n    x38 = mapply(x24, x19)\n    x39 = paint(I, x38)\n    x40 = branch(x37, x30, x34)\n    "], [1.1, "def solve_1c8c34e1(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_e096ac5d(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(remove, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_65b32423(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =323b782(I)\n    x4 = rbind(contained, x3)\n    x5 = compose(x4, last)\n    x6 = sfilter(x2, x5)\n    x7 = fork(subtract, first, last)\n    x8 = fork(multiply, sign, identity)\n    x9 = compose(x8, x7)\n    x10 = astuple(identity, dmirror)\n    x11 = astuple(cmirror, vmirror)\n    x12 = combine(x10, x11)\n    x13 = rbind(rapply, I)\n    x14 = compose(initset, first)\n    x15 = chain(first, x13, x14)\n    x16 = compose(x5, x9)\n    x17 = extract(x12, x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = x19(I)\n    x21 = mostcolor(I)\n    x22 = palette(I)\n    x23 = remove(x21, x22)\n    x24 = lbind(colorcount, I)\n    x25 = argmin(x23, x24)\n    x26 = other(x23, x25)\n    x27 = ofcolor(x20, x25)\n    x28 = ofcolor(x20, x21)\n    x29 = combine(x27, x28)\n    x30 = intersection(x27, x28)\n    x31 = difference(x29, x30)\n    x32 = fill(x20, TWO, x31)\n    x33 = vmirror(x32)\n    x34 = dmirror(x32)\n    x35 = astuple(x33, x34)\n    x36 = x17(x35)\n    x37 = rightmost(x36)\n    x38 = shoot(x37, UP_RIGHT)\n    x39 = shoot(x37, DOWN_LEFT)\n    x40 = combine(x38, x39)\n    "], [1.1, "def solve_fc32252e(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = dmirror(I)\n    x2 = objects(x1, T, F, T)\n    x3 = power(increment, FIVE)\n    x4 = lbind(remove, FIVE)\n    x5 = lbind(remove, ZERO)\n    x6 = chain(x4, x5, palette)\n    x7 = chain(x3, first, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = chain(outbox, outbox, initset)\n    x10 = chain(x8, x9,0000)\n    x11 = initset(x10)\n    x12 = lbind(contained, FOUR)\n    x13 = chain(flip, x12, palette)\n    x14 = mfilter(x11, x13)\n    x15 = vsplit(x1, TWO)\n    x16 = hsplit(x1, TWO)\n    x17 = extract(x15, x16)\n    x18 = extract(x17, x14)\n    x19 = ulcorner(x18)\n    x20 = invert(x19)\n    x21 = shift(x19, x20)\n    x22 = apply(urcorner, x21)\n    x23 = shape(x2)\n    x24 = maximum(x23)\n    x25 = apply(uppermost, x22)\n    x26 = order(x25, identity)\n    x27 = size(x26)\n    x28 = increment(x17)\n    x29 = interval(x28, x27, ONE)\n    x30 = pair(x26, x29)\n    x31 = sfilter(x30, x17)\n    x32 = mapply(first, x31)\n    x33 = compose(last, first)\n    x34 = sfilter(x1, x33)\n    x35 = mapply(last, x34)\n    x36 = combine(x32, x35)\n    x37 = fill(x1, TWO, x36)\n    x38 = asobject(x38)\n    x39 = ulcorner(x48)\n    x40 = shift"], [1.1, "def solve_eed6d643(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_00b4cf43(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_1edcfa30(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = rot96(I)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x28, x40)\n    x42 = fork(x"], [1.1, "def solve_e0ce3d62(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = equality(x5, ZERO)\n    x7 = branch(x6, identity, vmirror)\n    x8 = x7(x4)\n    x9 = ofcolor(x8, EIGHT)\n    x10 = uppermost(x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, identity, hmirror)\n    x13 = x12(x8)\n    x14 = ofcolor(x13, EIGHT)\n    x15 = ofcolor(x13, TWO)\n    x16 = rbind(shoot, DOWN)\n    x17 = mapply(x16, x14)\n    x18 = height(x13)\n    x19 = apply(first, x15)\n    x20 = insert(ZERO, x19)\n    x21 = insert(x18, x19)\n    x22 = apply(decrement, x21)\n    x23 = order(x20, identity)\n    x24 = order(x22, identity)\n    x25 = size(x15)\n    x26 = increment(x25)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = apply(tojvec, x27)\n    x29 = pair(x23, x24)\n    x30 = lbind(sfilter, x17)\n    x31 = compose(first, last)\n    x32 = chain(decrement, first, first)\n    x33 = fork(greater, x31, x32)\n    x34 = chain(increment, last, first)\n    x35 = fork(greater, x34, x31)\n    x36 = fork(both, x33, x35)\n    x37 = lbind(lbind, astuple)\n    x38 = lbind(compose, x36)\n    x39 = chain(x30, x38, x37)\n    x40"], [1.1, "def solve_b479be96(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_0c2169bb(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = partition(I)\n    x2 = objects(I, T, F, F)\n    x3 = compose(double, height)\n    x4 = fork(equality, x3, size)\n    x5 = compose(decrement, width)\n    x6 = fork(equality, x5, size)\n    x7 = fork(either, x4, x6)\n    x8 = rbind(matcher, TWO)\n    x9 = compose(x8, vmirror)\n    x10 = rbind(sfilter, x6)\n    x11 = compose(x10, hline)\n    x12 = chain(x9, x11, center)\n    x13 = compose(x9, subtract_ONE)\n    x14 = fork(subtract, x12, x13)\n    x15 = decrement(x14)\n    x16 =71(x15)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, height, width)\n    x20 = x19(x4)\n    x21 = x19(I)\n    x22 = subtract(x20, x21)\n    x23 = decrement(x22)\n    x24 = colorcount(I, x4)\n    x25 = multiply(x24, x23)\n    x26 = multiply(x25, x22)\n    x27 = add(x22, x26)\n    x28 = width(I)\n    x29 = multiply(x28, x23)\n    x30 = decrement(x29)\n    x31 = multiply(x30, x22)\n    x32 = add(x31, x3)\n    x33 = canvas(ZERO, x32)\n    x34 = ofcolor(x33, x9)\n    x35 = rbind(toobject, x33)\n    x36 = compose(x35, delta)\n    x37 = apply(x36, x34)\n    x38 = rbind(colorcount, x9)\n    x39 = apply(x38, x37)\n    x40 = ofcolor(x39, x4)\n"], [1.1, "def solve_7a5f37b4(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_ffc3223f(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(both, x29, x30)\n    x34 = fork(both, x31, x32)\n    x35 = fork(both, x33, x34)\n    x36 = compose(x"], [1.1, "def solve_524a591c(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, numcolors)\n    x3 = sfilter(I, x2)\n    x4 = fork(equality, identity, rot90)\n    x5 =47(x3)\n    x6 = sfilter(x3, x4)\n    x7 = fork(equality, identity, rot270)\n    x8 = sfilter(x3, x7)\n    x9 = fork(both, x11, x18)\n    x10 = sfilter(x4, x9)\n    x11 = compose(rot90, dedupe)\n    x12 = power(x11, FOUR)\n    x13 =\n    x10 = x12(I)\n    x14 = x12(x13)\n    x15 = subtract(x16, x21)\n    x16 = x15(I)\n    x17 = mostcolor(x14)\n    x18 = matcher(first, x17)\n    x19 = sfilter(x19, x18)\n    x20 = compose(flip, x18)\n    x21 = sfilter(x19, x20)\n    x22 = totuple(x21)\n    x23 = apply(last, x22)\n    x24 = dedupe(x23)\n    x25 = size(x24)\n    x26 = increment(x25)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = apply(tojvec, x27)\n    x29 = pair(x25, x28)\n    x30 = shift(x29, UNITY)\n    x31 = mapply(x76, x30)\n    x32 = height(x31)\n    x33 = width(x31)\n    x34 = equality(x32, x33)\n    x35 = astuple(x34, x32)\n    x36 = ONE(x35)\n    x37 =Example output:\n    1241578274\n    7711333316\n    \"\"\"\n    x1 = leastcolor(x36)\n    x2 = rot270(x74)\n    x3 = leastcolor(x2)\n    x4"], [1.1, "def solve_b2c60a3d(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = replace(I, TWO, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = apply(normalize, x2)\n    x4 = astuple(NINE, NINE)\n    x5 = canvas(ZERO, x4)\n    x6 = asindices(x5)\n    x7 = box(x6)\n    x8 = center(x6)\n    x9 = lbind(contained, ZERO)\n    x10 = rbind(subtract, x8)\n    x11 = compose(x9, x10)\n    x12 = chain(outbox,outbox, initset)\n    x13 = corners(x6)\n    x14 = mapply(x12, x13)\n    x15 = difference(x7, x14)\n    x16 = inbox(x7)\n    x17 = sfilter(x16, x11)\n    x18 = corners(x7)\n    x19 = ofcolor(x15, ZERO)\n    x20 = rbind(difference, x19)\n    x21 = rbind(chain, first)\n    x22 = lbind(x21, x18)\n    x23 = lbind(rbind, difference)\n    x24 = compose(x22, x23)\n    x25 = lbind(intersection, x2)\n    x26 = chain(size, x25, x24)\n    x27 = matcher(x26, ZERO)\n    x28 = lbind(intersection, x6)\n    x29 = chain(size, x28, x27)\n    x30 = matcher(x29, ZERO)\n    x31 = lbind(intersection, x7)\n    x32 = chain(size, x31, x30)\n    x33 = argmax(x18, x32)\n    x34 = shift(x11, x33)\n    x35 = combine(x34, x37)\n    x36 = paint(x5, x35)\n    x37 = fgpartition(x36)\n    x38 = argmax(x37, size)\n    x39 = remove(x38"], [1.1, "def solve_0a719483(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_ac3fae7a(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = rot180(I)\n    x3 = shoot(x2, UP_RIGHT)\n    x4 = rot180(I)\n    x5 = shoot(x4, DOWN_LEFT)\n    x6 = shoot(x5, LEFT)\n    x7 = shoot(x6, ZERO_BY_TWO)\n    x8 = combine(x3, x7)\n    x9 = rbind(shoot, LEFT)\n    x10 = mapply(x9, x8)\n    x11 = fgpartition(x11)\n    x12 = valmax(x11, size)\n    x13 = colorfilter(x11, x1)\n    x14 = argmax(x13, size)\n    x15 = shape(x11)\n    x16 = canvas(x1, x15)\n    x17 = fill(x16, ONE, x14)\n    x18 = replace(x17, x1, TWO)\n    x19 = objects(x18, T, F, T)\n    x20 = colorfilter(x19, ONE)\n    x21 = argmax(x20, size)\n    x22 = lbind(shoot, x21)\n    x23 = mapply(x22, x18)\n    x24 = fill(x17, ONE, x23)\n    x25 = colorfilter(x19, ONE)\n    x26 = rbind(shoot, UNITY)\n    x27 = mapply(x26, x25)\n    x28 = fill(x24, ONE, x27)\n    x29 = rbind(shoot, NEG_UNITY)\n    x30 = mapply(x29, x28)\n    x31 = fill(x28, ONE, x30)\n    x32 = fill(x31, x1, x22)\n    x33 = fill(x32, x1, x25)\n    x34 = replace(x33, x1, ONE)\n    x35 = replace(x34, x1, TWO)\n    x36 = DOWN_LEFT, UNITY)\n    x37 = initset(x36)\n    x38 = insert"], [1.1, "def solve_3ec05e30(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = rot180(I)\n    x2 = rbind(greater, ONE)\n    x3 = chain(x2, minimum, shape)\n    x4 = objects(x1, T, F, F)\n    x5 = sfilter(x4, x3)\n    x6 = fork(equality, toindices, box)\n    x7 = sfilter(x5, x6)\n    x8 = totuple(x7)\n    x9 = apply(color, x8)\n    x10 = leastcommon(x9)\n    x11 = ofcolor(x1, x10)\n    x12 = inbox(x11)\n    x13 = center(x12)\n    x14 = dneighbors(x13)\n    x15 = insert(x13, x14)\n    x16 = toobject(x15, x1)\n    x17 = mostcolor(I)\n    x18 = colorfilter(x17, x10)\n    x19 = rbind(adjacent, x8)\n    x20 = sfilter(x18, x19)\n    x21 = rbind(adjacent, x13)\n    x22 = sfilter(x18, x21)\n    x23 = pair(x20, x22)\n    x24 = colorfilter(x21, x10)\n    x25 = rbind(contained, x24)\n    x26 = compose(x25, last)\n    x27 = sfilter(x23, x26)\n    x28 = product(x27, x28)\n    x29 = sfilter(x18, first)\n    x30 = pair(x29, x28)\n    x31 =99315867(x30)\n    x32 = lbind(sfilter, x33)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(x32, x33, x43)\n    x36 = compose(x33, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = fork(connect, identity, x37)\n    x39 = mapply(x38, x29)\n"], [1.1, "def solve_d5aa0df1(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, FIVE)\n    x4 = astuple(FOUR, FOUR)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = asindices(x5)\n    x7 = rbind(toobject, I)\n    x8 = lbind(shift, x6)\n    x9 = compose(x7, x8)\n    x10 = multiply(x3, FIVE)\n    x11 = interval(ZERO, x10, FIVE)\n    x12 = apply(tojvec, x11)\n    x13 = apply(x9, x12)\n    x14 = matcher(numcolors, ONE)\n    x15 = fork(equality, identity, hmirror)\n    x16 = compose(flip, x15)\n    x17 = lbind(index, I)\n    x18 = compose(x17, ulcorner)\n    x19 = lbind(add, DOWN)\n    x20 = chain(x17, x19, ulcorner)\n    x21 = fork(equality, x18, x20)\n    x22 = compose(flip, x21)\n    x23 = fork(either, x14, x16)\n    x24 = fork(either, x23, x22)\n    x25 = compose(flip, x24)\n    x26 = lbind(multiply, TWO)\n    x27 = compose(x26, x14)\n    x28 = lbind(multiply, FOUR)\n    x29 = compose(x28, x16)\n    x30 = fork(add, x27, x29)\n    x31 = lbind(multiply, THREE)\n    x32 = compose(x31, x22)\n    x33 = lbind(multiply, EIGHT)\n    x34 = compose(x33, x25)\n    x35 = fork(add, x32, x34)\n    x36 = fork(add, x30, x35)\n    x37 = apply(x36, x13)\n    x38 = rbind(repeat,"], [1.1, "def solve_2844e168(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = subgrid(x6, I)\n    x10 = increment(x width)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(x9)\n    x17 = matcher(identity, x15)\n    x18 = frontiers(x9)\n    x19 = sfilter(x18, vline)\n    x20 = toindices(x19)\n    x21 = lbind(shift, x20)\n    x22 = height(x7)\n    x23 = matcher(first, x25)\n    x24 = compose(flip, x23)\n    x25 = toindices(x24)\n    x26 = lbind(shift, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x21, x5)\n    x29 = rbind(argmin, x28)\n    x30 = lbind(lbind, manhattan)\n    x31 = compose(x29, x30)\n    x32 = fork(shift, identity, x31)\n    x33 = mapply(x32, x22)\n    x34 = fill(x9, x3, x33)\n    x35 = x10(x34)\n    x36 =707(x35)\n    x37 = xhou(x36)\n    x38 = fork(combine, vfrontier, hfrontier)\n    x39 = x38(x37)\n    x40 = fill(x35, x3, x39)\n    O = x10(x40)\n    "], [1.1, "def solve_07d9e9fe(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ONE)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18, x41"], [1.1, "def solve_18444695(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_f16bdd75(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x20, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = compose(x36, first)\n    x38 = argmin(x35, x37)\n    x39 = first(x38)\n    x40"], [1.1, "def solve_60711474(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(both, x29, x30)\n    x34 = fork(both, x31, x32)\n    x35 = fork(both, x33, x34)\n    x36 = compose(x"], [1.1, "def solve_f7326b3b(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x20, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = compose(x36, first)\n    x38 = argmin(x35, x37)\n    x39 = ofcolor(I, x38)\n"], [1.1, "def solve_9d8d7434(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = chain(positive, size, x3)\n    x5 = sfilter(x4, x2)\n    x6 = fork(55, identity, hmirror)\n    x7 = compose(x6, vmirror)\n    x8 = astuple(TWO, ONE)\n    x9 = canvas(ZERO, x8)\n    x10 = asindices(x9)\n    x11 = center(x10)\n    x12 = increment(x11)\n    x13 = shift(x11, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = palette(I)\n    x17 = remove(x15, x16)\n    x18 = lbind(chain, size)\n    x19 = rbind(x18, toindices)\n    x20 = lbind(lbind, intersection)\n    x21 = lbind(ofcolor, I)\n    x22 = chain(x19, x20, x21)\n    x23 = compose(x5, x22)\n    x24 = palette(I)\n    x25 = colorfilter(x24, x15)\n    x26 = rbind(bordering, I)\n    x27 = compose(x26, initset)\n    x28 = fork(x ofcolor, x27, outbox)\n    x29 = lbind(argmin, x25)\n    x30 = compose(x29, x28)\n    x31 = matcher(x30, x11)\n    x32 = sfilter(x31, x26)\n    x33 = difference(x ______, x32)\n    x34 = argmin(x33, x29)\n    x35 = x35(x34)\n    x36 = inbox(x35)\n    x37 = fill(I, x39, x36)\n    x38 = height(I)\n    x39 = divide(x38, THREE)\n    x40 = increment(x39)\n    x41 ="], [1.1, "def solve_50487f8b(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = sfilter(x1, x2)\n    x4 = argmax(x3, size)\n    x5 = color(x4)\n    x6 = palette(I)\n    x7 = remove(x5, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = toindices(x4)\n    x11 = apply(first, x10)\n    x12 = toindices(x4)\n    x13 = apply(last, x12)\n    x14 = rbind(contained, x11)\n    x15 = compose(x14, first)\n    x16 = rbind(contained, x13)\n    x17 = compose(x16, last)\n    x18 = fork(either, x15, x17)\n    x19 = ofcolor(I, x9)\n    x20 = sfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(gravitate, x4)\n    x23 = compose(x22, initset)\n    x24 = fork(add, identity, x23)\n    x25 = fork(connect, identity, x24)\n    x26 = apply(x25, x21)\n    x27 = palette(I)\n    x28 = remove(x9, x27)\n    x29 = compose(x28, first)\n    x30 = product(x26, x29)\n    x31 = first(x30)\n    x32 = last(x30)\n    x33 =    x31(I)\n    x34 = rightmost(x33)\n    x35 = lbind(greater, x34)\n    x36 = compose(x35, first)\n    x37 =99(x36, toindices)\n    x38 = fork(either, x15, x37)\n    x39 = x38(x31)\n    x40 = rbind(contained, x39)\n    x41 = compose(x40, first)\n"], [1.1, "def solve_ffda8dc4(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(both, x29, x30)\n    x34 = fork(both, x31, x32)\n    x35 = fork(both, x33, x34)\n    x36 = compose(x"], [1.1, "def solve_58ac7cab(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = lbind(position, x18)\n    x21 = fork(shoot, center, x20)\n    x22 = mapply(x21, x19)\n    x23 = difference(x22, x18)\n    x24 = color(x18)\n    x25 = fill(I, x24, x23)\n    x26 = objects(x25, T, F, T)\n    x27 = fork(colorur, outbox, outbox)\n    x28 = apply(x27, x26)\n    x29 = contained(x28, x22)\n    x30 = sfilter(x29, x17)\n    x31 = lbind(fork,vmatching)\n    x32 = lbind(lbind, hmatching)\n    x33 = lbind(hmatching, x30)\n    x34 = lbind(gravitate, x29)\n    x35 = compose(x34, initset)\n    x36 = fork(add, identity, x35)\n    x37 = fork(connect, x33, x36)\n    x38 = mapply(x37, x31)\n"], [1.1, "def solve_aadbd750(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_09201928(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_5b31f5c4(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_88551c53(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork( astuple, x7, x6)\n    x9 = fork(astuple, x8, x4)\n    x10 = lbind(frontiers, x9)\n    x11 = rbind(rapply, x4)\n    x12 = compose(initset, x11)\n    x13 = chain(first, x11, x12)\n    x14 = compose(x10, x13)\n    x15 = lbind(contained, ZERO)\n    x16 = compose(flip, x15)\n    x17 = fork(add, x14, x16)\n    x18 = compose(initset, x17)\n    x19 = fork(rapply, x18, identity)\n    x20 = compose(first, x19)\n    x21 = compose(x20, x18)\n    x22 = astuple(x6, x6)\n    x23 = power(x21, TWO)\n    x24 = x23(x22)\n    x25 = partition(x24)\n    x26 = fork(recolor, color, x24)\n    x27 = apply(x26, x25)\n    x28 = mfilter(x27, paint)\n    x29 = double(x3)\n    x30 = power(x28, x29)\n    x31 = apply(llcorner, x27)\n    x32 = x35(x31)\n    x33 = lbind(shift, x32)\n    x34 = mapply(x33, x30)\n    x35 = urcorner(x27)\n    x36 = x35(x42)\n    x37 = paint(x24, x36)\n    x38 = combine(x33, x37)\n    x39 = paint(x38, x34)\n    O = fill(x"], [1.1, "def solve_5cc98c36(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = argmax(x3, x4)\n    x6 = color(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmax(x8, x9)\n    x11 = remove(x10, x8)\n    x12 = lbind(ofcolor, I)\n    x13 = mapply(x12, x11)\n    x14 = subgrid(x13, I)\n    x15 = objects(x14, T, F, F)\n    x16 = colorfilter(x15, x6)\n    x17 = initset(x10)\n    x18 = insert(x6, x17)\n    x19 = lbind(intersection, x18)\n    x20 = chain(positive, size, x19)\n    x21 = chain(positive, decrement, size)\n    x22 = fork(either, x20, x21)\n    x23 = rbind(toobject, x14)\n    x24 = compose(corners, outbox)\n    x25 = chain(palette, x23, x24)\n    x26 = rbind(branch, x6)\n    x27 = chain(flip, x22, x25)\n    x28 = compose(first, x25)\n    x29 = fork(x76, x28, x26)\n    x30 = apply(uppermost, x16)\n    x31 = order(x30, identity)\n    x32 = lbind(apply, x29)\n    x33 = rbind(order, leftmost)\n    x34 = lbind(sfilter, x16)\n    x35 = lbind(matcher, uppermost)\n    x36 = compose(x34, x35)\n    x37 = chain(x32, x33, x36)\n    O = apply(x37"], [1.1, "def solve_276a72e2(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = lbind(apply,last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = rbind(toobject, I)\n    x33 = compose(x32, delta)\n    x34 = chain(palette, x32, x33)\n    x35 = rbind(upscale, x30)\n    x36 = chain(normalize, x35, x34)\n    x37 = fork(equality, x36, identity)\n    x38 = compose(flip, x37)\n    x"], [1.1, "def solve_651d893a(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_bcc47912(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = double(x37)\n    x39 = multiply(x28, x38)\n    x40 = shift(x31, x"], [1.1, "def solve_5a64c0ca(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_df12dfec(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_fc4d3983(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = leastcolor(x1)\n    x4 = leastcolor(x2)\n    x5 = ofcolor(I, x3)\n    x6 = center(x5)\n    x7 = ofcolor(I, x4)\n    x8 = center(x7)\n    x9 = height(I)\n    x10 = width(I)\n    x11 = hfrontier(x6)\n    x12 = fill(I, x3, x11)\n    x13 = hfrontier(x8)\n    x14 = fill(x12, x4, x13)\n    x15 = decrement(x10)\n    x16 = decrement(x9)\n    x17 = halve(x9)\n    x18 = tojvec(x15)\n    x19 = connect(ORIGIN, x18)\n    x20 = fill(x14, x3, x19)\n    x21 = toivec(x16)\n    x22 = astuple(x16, x15)\n    x23 = connect(x21, x22)\n    x24 = fill(x20, x4, x23)\n    x25 = decrement(x17)\n    x26 = toivec(x25)\n    x27 = connect(ORIGIN, x26)\n    x28 = fill(x24, x3, x27)\n    x29 = tojvec(x15)\n    x30 = decrement(x17)\n    x31 = astuple(x30, x15)\n    x32 = connect(x29, x31)\n    x33 = fill(x28, x3, x32)\n    x34 = toivec(x17)\n    x35 = toivec(x16)\n    x36 = connect(x34, x35)\n    x37 = fill(x33, x4, x36)\n    x38 = astuple(x17, x15)\n    x39 = astuple(x16, x15)\n    x40 = connect(x38, x39)\n    O = fill(x37,"], [1.1, "def solve_4e715061(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(SIX)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = connect(x7, x10)\n    x12 = combine(x8, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_1b142d6e(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_0613d470(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_4101059e(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = lbind(apply, size)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(I, first)\n    x13 = chain(size, x11, x12)\n    x14 = matcher(x13, ONE)\n    x15 = compose(minimum, shape)\n    x16 = lbind(apply, x15)\n    x17 = lbind(ofcolor, I)\n    x18 = chain(x16, x17, x9)\n    x19 = fork(intersection, x9, x18)\n    x20 = fork(shift, x18, x19)\n    x21 = compose(x16, x20)\n    x22 = fork(combine, x21, x29)\n    x23 = fork(recolor, x22, x20)\n    x24 = difference(x1, x3)\n    x25 = power(x23, TWO)\n    x26 = astuple(x253, x27)\n    x27 = astuple(x24, x28)\n    x28 = astuple(x25, x27)\n    x29 = rbind(contained, x26)\n    x30 = compose(x29, last)\n    x31 = rbind(apply, x27)\n    x32 = lbind(position, x25)\n    x33 = chain(x31, x32, x29)\n    x34 = fork(aint, x30, x33)\n    x35 = compose(toobject, first)\n    x36 = compose(numcolors, x35)\n    x37 = matcher(x36, ONE)\n    x38 = fork(both, x35, x37)"], [1.1, "def solve_017fbb5d(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x30, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = shift(x35, x36)\n    x38 = product(x41, x37)\n    x39 = paint(I, x38)\n    "], [1.1, "def solve_dd97ead6(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = lbind(add, FOUR)\n    x2 = compose(x1, size)\n    x3 = fork(equality, toindices, x2)\n    x4 = rbind(add, FOUR)\n    x5 = compose(x4, size)\n    x6 = sfilter(x1, x5)\n    x7 = compose(vline, merge)\n    x8 = sfilter(x6, x7)\n    x9 = argmax(x8, size)\n    x10 = toindices(x9)\n    x11 = fork(either, x7, x10)\n    x12 = fork(add, first, last)\n    x13 = compose(flip, x12)\n    x14 = sfilter(x11, x13)\n    x15 = increment(x14)\n    x16 = subgrid(x9, I)\n    x17 = hconcat(x16, x16)\n    x18 = hconcat(x17, x17)\n    x19 = vmirror(x18)\n    x20 = vconcat(x19, x18)\n    x21 = vconcat(x20, x19)\n    x22 = hmirror(x21)\n    x23 = cellwise(x22, x20, x23)\n    x24 = asobject(x23)\n    x25 = paint(x21, x24)\n    x26 = asindices(x25)\n    x27 = box(x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(x28)\n    x31 = remove(x29, x30)\n    x32 = lbind(chain, size)\n    x33 = rbind(x32, asindices)\n    x34 = lbind(lbind, contained)\n    x35 = lbind(ofcolor, x25)\n    x36 = compose(x34, x35)\n    x37 = chain(x33, x36, outbox)\n    x38 = lbind(sfilter, x41)\n    x39 = rbind(ofcolor, x29)"], [1.1, "def solve_e95747ed(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = astuple(SIX, FIVE)\n    x2 = size(I)\n    x3 = decrement(x2)\n    x4 = astuple(FOUR, FOUR)\n    x5 = canvas(ZERO, x4)\n    x6 = tojvec(x3)\n    x7 = connect(ORIGIN, x6)\n    x8 = equality(x2, FOUR)\n    x9 = insert(UNITY, x7)\n    x10 = branch(x8, x9, x7)\n    x11 = merge(x10)\n    x12 = size(x11)\n    x13 = equality(x12, FOUR)\n    x14 = astuple(ONE, x13)\n    x15 = connect(x11, x14)\n    x16 = toobject(x15, I)\n    x17 =55object(x16, x16)\n    x18 = lefthalf(I)\n    x19 = righthalf(I)\n    x20 = connect(x18, x19)\n    x21 = toobject(x20, x19)\n    x22 =99999(x21, x20)\n    x23 = branch(x8, x22, x21)\n    x24 = connect(x16, x23)\n    x25 = backdrop(x24)\n    x26 = toobject(x25, x19)\n    x27 =99999(x26, x20)\n    x28 = astuple(ZERO, x13)\n    x29 = initset(x28)\n    x30 = insert(x29, x27)\n    x31 = backdrop(x30)\n    x32 = width(x31)\n    x33 = toivec(x32)\n    x34 = tojvec(x33)\n    x35 = connect(x33, x34)\n    x36 = height(x35)\n    x37 = toivec(x36)\n    x38 = initset(x37)\n    x39 = insert(x38, x35)\n    x40 = insert(x36, x39)\n    x41 = combine(x35, x40"], [1.1, "def solve_1417d068(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = double(x2)\n    x12 = asindices(I)\n    x13 = urcorner(x12)\n    x14 = index(I, x13)\n    x15 = astuple(x14, x13)\n    x16 = ulcorner(x12)\n    x17 = repeat(x16, ONE)\n    x18 = inequality(x10, x17)\n    x19 =245(x18)\n    x20 =\n    215 = mostcolor(I)\n    x21 = asindices(I)\n    x22 = astuple(x21, x13)\n    x23 = initset(x22)\n    x24 = position(x23, x23)\n    x25 = compose(last, last)\n    x26 = astuple(x24, x25)\n    x27 = add(x26, x24)\n    x28 = shoot(x27, x248)\n    x29 = shoot(x27, x326)\n    x30 = shoot(x27, x28)\n    x31 = combine(x29, x30)\n    x32 = first(x31)\n    x33 = last(x31)\n    x34 = toobject(x33, I)\n    x35 = mostcommon(x34)\n    x36 = matcher(first, x35)\n    x37 = compose(flip, x36)\n    x38 = sfilter(x32, x37)\n    x39 = rbind(shoot, DOWN)\n    x40 = shoot(x39, x38)\n    x41 ="], [1.1, "def solve_0632eb05(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = compose(leftmost, first)\n    x13 = compose(leftmost, last)\n    x14 = fork(equality, x12, x13)\n    x15 = compose(uppermost, first)\n    x16 = compose(uppermost, last)\n    x17 = fork(equality, x15, x16)\n    x18 = fork(either, x14, x17)\n    x19 = sfilter(x11, x18)\n    x20 = compose(color, first)\n    x21 = compose(center, first)\n    x22 = compose(center, last)\n    x23 = fork(connect, x21, x22)\n    x24 = fork(recolor, x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = matcher(last, ZERO)\n    x28 = decrement(x26)\n    x29 = matcher(last, x28)\n    x30 = fork(either, x27, x29)\n    x31 = matcher(first, ZERO)\n    x32 = decrement(x25)\n    x33 = matcher(first, x32)\n    x34 = fork(either, x31, x33)\n    x35 = toindices(x5)\n    x36 = sfilter(x35, x30)\n    x37 = equality(x35, x36)\n    x38 = mapply(x24, x19)\n    x39 = paint(I, x38)\n    x40 = branch(x37, x30, x34)\n    "], [1.1, "def solve_e9f322e9(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = asobject(I)\n    x2 = delta(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = multiply(x4, x4)\n    x6 = canvas(x3, x5)\n    x7 = asobject(I)\n    x8 = decrement(x7)\n    x9 = mostcolor(I)\n    x10 = shape(I)\n    x11 = add(x10, THREE)\n    x12 = canvas(x9, x11)\n    x13 = asobject(I)\n    x14 = decrement(x13)\n    x15 = toivec(x14)\n    x16 = add(x15, THREE)\n    x17 = shift(x13, x16)\n    x18 = paint(x6, x17)\n    x19 = shift(x8, THREE)\n    x20 = paint(x18, x19)\n    x21 = astuple(x12, x16)\n    x22 = astuple(x9, x16)\n    x23 = astuple(x21, x22)\n    x24 = initset(x23)\n    x25 =71(x24)\n    x26 = backdrop(x25)\n    x27 = recolor(x3, x26)\n    x28 = astuple(x24, x6)\n    x29 = canvas(x9, x28)\n    x30 =0000000(x29)\n    x31 = recolor(x3, x30)\n    x32 = combine(x27, x31)\n    x33 = recolor(x9, x32)\n    x34 = combine(x29, x33)\n    x35 = recolor(x3, x34)\n    x36 = combine(x31, x35)\n    x37 = recolor(x3, x36)\n    x38 = combine(x24, x37)\n    x39 = paint(x36, x38)\n    x40 = ofcolor(x38, x3)\n    x41 = asobject(x40)\n    x42 = recolor(x9, x41)\n    x"], [1.1, "def solve_0f743c4f(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind,12)\n    x35 = compose(x34, x30)\n    x36 = lbind(apply, last)\n    x37 = chain(x32, x33, x35)\n    x38 = rbind(sfilter, x37)\n    x39 = chain(asobject, x38, x29)\n    x40 = fork(shift, x39, x33)\n    x41 = mapply(x40, x8)\n    x42 = paint"], [1.1, "def solve_37de8dbf(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, index)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, x37)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x31"], [1.1, "def solve_0baed825(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(mirror, I)\n    x2 = lbind(shift, I)\n    x3 = compose(x1, x2)\n    x4 = fork(combine, x3, hmirror)\n    x5 = compose(x4, vmirror)\n    x6 = lbind(shift, I)\n    x7 = fork(combine, x6, vmirror)\n    x8 = compose(x5, x7)\n    x9 = palette(I)\n    x10 = fork(combine, x8, x9)\n    x11 = compose(x10, x8)\n    x12 = rbind(extract, x11)\n    x13 = chain(last, first, x12)\n    x14 = decrement(x13)\n    x15 =\n    x14, ZERO)\n    x16 = remove(ZERO, x9)\n    x17 = double(x16)\n    x18 = rbind(multiply, x17)\n    x19 = chain(x18, width, x12)\n    x20 = decrement(x19)\n    x21 = lbind(greater, x17)\n    x22 = compose(x21, x19)\n    x23 = chain(x20, down, x22)\n    x24 = lbind(compose, x5)\n    x25 = x24(x12)\n    x26 = compose(x25, x19)\n    x27 = fork(sfilter, x26, x23)\n    x28 = compose(size, x27)\n    x29 = palette(I)\n    x30 = argmax(x29, x28)\n    x31 = objects(I, T, F, T)\n    x32 = colorfilter(x31, x30)\n    x33 = difference(x32, x31)\n    x34 = rbind(subgrid, I)\n    x35 = order(x33, x34)\n    x36 = mapply(x25, x35)\n    O = subgrid(x36, I)\n    return O"], [1.1, "def solve_6927c569(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = frontiers(I)\n    x4 = merge(x3)\n    x5 = mostcolor(x4)\n    x6 =66262100 box(x2)\n    x7 = fork(multiply, height, width)\n    x8 = halve(x7)\n    x9 = matcher(x8, x6)\n    x10 = compose(flip, x9)\n    x11 = mfilter(x1, x5)\n    x12 = mfilter(x1, x10)\n    x13 = paint(I, x11)\n    O = paint(x13, x12)\n    return O"], [1.1, "def solve_a7872880(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = remove(x3, x2)\n    x5 = lbind(colorcount, I)\n    x6 = argmax(x4, x5)\n    x7 = remove(x6, x4)\n    x8 = lbind(contained, x7)\n    x9 = chain(flip, x8, color)\n    x10 = rbind(sfilter, x9)\n    x11 = lbind(matcher, first)\n    x12 = compose(x11, x10)\n    x13 = chain(x10, x12, first)\n    x14 = lbind(18vas, ZERO)\n    x15 = compose(x14, x13)\n    x16 = chain(x15, shape, x1)\n    x17 = fork(paint, x16, normalize)\n    x18 = fork(colorfilter, x17, x15)\n    x19 = compose(positive, size)\n    x20 = rbind(sfilter, x19)\n    x21 = lbind(shift, x10)\n    x22 = chain(x20, x21, x18)\n    x23 = lbind(mapply, x22)\n    x24 = compose(O = x23(x21)\n    x25 = fork(mapply, x24, x18)\n    x26 = compose(x21, x23)\n    x27 = fork(mapply, x26, x25)\n    x28 = fork(paint, x17, x27)\n    x29 = compose(x23, x27)\n    x30 = fork(c909, x29, x28)\n    x31 = compose(x27, x30)\n    x32 = fork(paint, x16, x31)\n    x33 = mapply(x32, x4)\n    O = replace(x33, x6, xmist shade)\n    return O"], [1.1, "def solve_38f2dd0f(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 =Example output:\n    Example output:\n    0000000000\n    0000000000\n    0000000002\n    0000000002\n    0000000000\n    0000000000\n    0000000002\n    0000000000\n    0000000000\n    0000000000\n    \"\"\"\n    x1 = vmirror(I)\n    x2 = lefthalf(x1)\n    x3 = righthalf(x1)\n    x4 = vmirror(x3)\n    x5 = cellwise(x2, x4, ZERO)\n    O = replace(x5, ONE, TWO)\n    return O"], [1.1, "def solve_31aee6f2(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = totuple(x3)\n    x5 = apply(color, x4)\n    x6 = mostcommon(x5)\n    x7 = index(I, x6)\n    x8 = backdrop(x2)\n    x9 = box(x8)\n    x10 = fill(I, x6, x9)\n    x11 = ulcorner(x2)\n    x12 = index(I, x11)\n    x13 = subgrid(x12, I)\n    x14 = width(x13)\n    x15 = astuple(x14, x14)\n    x16 = crop(x13, ORIGIN, x15)\n    x17 = rot90(x16)\n    x18 = download(x17, x14)\n    x19 = height(x13)\n    x20 = astuple(x19, x14)\n    x21 = crop(x13, ORIGIN, x20)\n    x22 = rot90(x21)\n    x23 =151(x22)\n    x24 = ofcolor(x23, x6)\n    x25 = dmirror(x24)\n    x26 = identity(x25)\n    x27 = subgrid(x26, x31)\n    x28 = ofcolor(x27, x6)\n    x29 = invert(x28)\n    x30 = shift(x29, x29)\n    O = fill(x27, x6, x30)\n    return O"], [1.1, "def solve_b54c8698(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = argmax(x1, x2)\n    x5 = ulcorner(x3)\n    x6 = urcorner(x3)\n    x7 = index(I, x5)\n    x8 = equality(x7, EIGHT)\n    x9 = branch(x8, dmirror, identity)\n    x10 = branch(x8, uppermost, leftmost)\n    x11 = order(x1, x10)\n    x12 = apply(color, x11)\n    x13 = repeat(x12, ONE)\n    x14 = merge(x11)\n    x15 = remove(x4, x11)\n    x16 = repeat(x14, ONE)\n    x17 = combine(x13, x16)\n    x18 = repeat(NEG_ONE, x17)\n    x19 = dmirror(x18)\n    x20 = remove(x9, x18)\n    x21 = dmirror(x20)\n    x22 = combine(x19, x21)\n    x23 = pair(x17, x22)\n    x24 = multiply(TWO, THREE)\n    x25 = power(x24, TWO)\n    x26 = x25(x23)\n    x27 = hmirror(x26)\n    x28 = x25(x22)\n    x29 = dedupe(x28)\n    x30 = x25(x29)\n    x31 =66(x27)\n    x32 =66(x25)\n    x33 =x19(x31)\n    x34 = x19(x32)\n    x35 = subtract(x34, x33)\n    x36 = x34(x30)\n    x37 =64(x35)\n    x38 = shift(x34, x37)\n    x39 = paint(I, x38)\n    O = x9(x39)\n    return O"], [1.1, "def solve_029ffcc3(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = chain(palette, x2, frontiers)\n    x4 = rbind(branch, Core)\n    x5 = chain(size, dedupe, x4)\n    x6 = compose(x5, x3)\n    x7 = argmax(x1, x6)\n    x8 = x7(x1)\n    x9 = flip(x8)\n    x10 = branch(x9, tophalf, lefthalf)\n    x11 = branch(x9, bottomhalf, righthalf)\n    x12 = x10(I)\n    x13 = x10(I)\n    x14 = branch(x12, leftmost, rightmost)\n    x15 = x14(x13)\n    x16 = x14(x13)\n    x17 = greater(x15, x16)\n    x18 = uppermost(x7)\n    x19 = uppermost(x7)\n    x20 = greater(x18, x19)\n    x21 = lbind(gravitate, x7)\n    x22 =350(x21)\n    x23 = pair(x19, x22)\n    x24 = sfilter(x23, x20)\n    x25 = mapply(x21, x24)\n    O = fill(I, TWO, x25)\n    return O"], [1.1, "def solve_e142779d(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    x5 = branch(x3,2phalf, bottomhalf)\n    x6 = x4(I)\n    x7 = x5(I)\n    O = x6(x6)\n    return O"], [1.1, "def solve_43241e81(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(d51158, x9)\n    x11 = initset(x10)\n    x12 = insert(x3, x11)\n    x13 = width(I)\n    x14 = astuple(x13, x12)\n    x15 = crop(I, ORIGIN, x14)\n    x16 = cover(x15, x12)\n    x17 =232(x16)\n    x18 = asobject(x17)\n    x19 = ulcorner(x2)\n    x20 = shift(x18, x19)\n    x21 = paint(I, x20)\n    x22 = objects(x21, T, T, T)\n    x23 = apply(ulcorner, x22)\n    x24 = contained(x18, x23)\n    x25 = increment(x12)\n    x26 = rbind(divide, x25)\n    x27 = apply(x26, x24)\n    x28 = astuple(x27, x14)\n    x29 = shift(x20, x28)\n    x30 = paint(x21, x29)\n    O = hmirror(x30)\n    return O"], [1.1, "def solve_de7a7577(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = lbind(toindices, I)\n    x2 = compose(x1, partition)\n    x3 = fork(multiply, height, width)\n    x4 = fork(equality, size, x3)\n    x5 = compose(x4, fork)\n    x6 = argmax(x1, x5)\n    x7 = difference(x1, x6)\n    x8 = remove(x6, x7)\n    x9 = merge(x8)\n    x10 = color(x9)\n    x11 = uppermost(x6)\n    x12 = leftmost(x6)\n    x13 = height(x6)\n    x14 = astuple(x13, ONE)\n    x15 = add(x14, TWO)\n    x16 = invert(x15)\n    x17 = rightmost(x6)\n    x18 = lbind(subtract, x17)\n    x19 = add(NEG_ONE, x18)\n    x20 = invert(x19)\n    x21 = rightmost(x6)\n    x22 = lbind(subtract, x21)\n    x23 = sign(x22)\n    x24 = sfilter(x18, x23)\n    x25 = combine(x16, x24)\n    x26 = hline(x25)\n    x27 = branch(x26, identity, dmirror)\n    x28 = x27(x6)\n    x29 = x27(x28)\n    x30 = multiply(x11, x14)\n    x31 = ulcorner(x6)\n    x32 = lrcorner(x6)\n    x33 = shift(x25, x31)\n    x34 = shift(x25, x32)\n    x35 =1000(x92, x33)\n    x36 =1000(x39, x34)\n    x37 = combine(x35, x36)\n    x38 = intersection(x33, x37)\n    O = fill(x23, x10, x38)\n    return O"], [1.1, "def solve_e672dac9(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =72(x2)\n    x4 = shape(I)\n    x5 = multiply(x4, x4)\n    x6 = canvas(ZERO, x5)\n    x7 =3af2dmirror(x6)\n    x8 =1875221\n    x9 = palette(I)\n    x9 = lbind(colorcount, I)\n    x10 = compose(x9, double)\n    x11 = argmin(x8, x10)\n    x12 = other(x8, x11)\n    x13 = colorcount(I, x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x12, x13)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = replace(I, x12, x13)\n    x19 = color(x16)\n    x20 = increment(x width)\n    x21 = insert(x16, x19)\n    x22 = astuple(x20, x21)\n    x23 = shift(x21, x22)\n    x24 = canvas(ZERO, x4)\n    x25 = colorcount(x24, x12)\n    x26 = normalize(x24)\n    x27 = shift(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    O = fill(x24, x12, x30)\n    return O"], [1.1, "def solve_fc52ef60(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = colorfilter(x2, SIX)\n    x4 = difference(x2, x3)\n    x5 = fork(equality, toindices, box)\n    x6 = rbind(greater, TWO)\n    x7 = compose(x6, contained)\n    x8 = sfilter(x4, x7)\n    x9 = rbind(greater, ONE)\n    x10 = compose(x9, corners)\n    x11 = sfilter(x8, x10)\n    x12 = combine(x8, x11)\n    x13 = mapply(d4 asindices, x12)\n    x14 = difference(x12, x13)\n    x15 =object(x14, I)\n    x16 = mapply(x11, x15)\n    x17 = fill(I, THREE, x16)\n    x18 = increment(x6)\n    x19 = canvas(ZERO, x18)\n    x20 = asobject(I)\n    x21 = shift(x20, UNITY)\n    x22 = paint(x19, x21)\n    x23 = compress(x22)\n    x24 =28825342_x23)\n    x25 = branch(x4, x27, x24)\n    x26 = asindices(x25)\n    x27 = box(x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = matcher(first, x29)\n    x31 = compose(flip, x30)\n    x32 = sfilter(x26, x31)\n    x33 = normalize(x32)\n    x34 = color(x33)\n    x35 = toindices(x33)\n    x36 = compose(toindices, normalize)\n    x37 = matcher(x36, x35)\n    x38 = mfilter(x1, x37)\n    O = fill(x33, x4, x38)\n    return O"], [1.1, "def solve_156cb07e(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = fork(astuple, dmirror, identity)\n    x3 = x2(I)\n    x4 = argmin(x1, x2)\n    x5 = argmax(x1, x2)\n    x6 = x2(x5)\n    x7 = equality(x6, ONE)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(x5)\n    x10 = branch(x7, x5, x9)\n    x11 = x10(x7)\n    x12 = width(x11)\n    x13 = first(x12)\n    x14 = hupscale(x11, x13)\n    x15 = ofcolor(x14, ONE)\n    x16 = lefthalf(x15)\n    x17 = height(x16)\n    x18 = width(x16)\n    x19 = righthalf(x16)\n    x20 = lefthalf(x19)\n    x21 = righthalf(x16)\n    x22 = ofcolor(x21, ONE)\n    x23 = righthalf(x22)\n    x24 = palette(x17)\n    x25 = palette(x24)\n    x26 = difference(x24, x25)\n    x27 = palette(x21)\n    x28 = other(x27, ZERO)\n    x29 = replace(x14, x28, ONE)\n    x30 = ofcolor(x29, TWO)\n    x31 = rightmost(x30)\n    x32 = rightmost(x28)\n    x33 = greater(x61, x32)\n    x34 = LEFTmost(x30)\n    x35 = RIGHT(x34, x31)\n    x36 =14(x35)\n    x37 = center(x36)\n    x38 = branch(x33, x20, x37)\n    x39 = paint(x29, x38)\n    O = x8(x39)\n    return O"], [1.1, "def solve_b8d32e97(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = replace(I, SIX, TWO)\n    x2 =4112(x1)\n    x3 =8(x2)\n    x4 = apply(normalize, x3)\n    x5 = astuple(ONE, THREE)\n    x6 = x2(x5)\n    x7 =316(subtract, x6)\n    x8 = apply(ulcorner, x4)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    x11 = paint(I, x10)\n    O = rot90(x11)\n    return O"], [1.1, "def solve_6d474cf4(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, FOUR, x4)\n    x6 = argmax(x1, size)\n    x7 = x2(x6)\n    x8 = toindices(x7)\n    x9 = x2(x8)\n    x10 = fill(x5, ONE, x9)\n    x11 = apply(first, x10)\n    x12 =09argmin(x11, identity)\n    x13 = height(x12)\n    x14 = increment(x13)\n    x15 = frontiers(I)\n    x16 = color(x12)\n    x17 = astuple(x16, x14)\n    x18 = repeat(x17, ONE)\n    x19 = combine(x18, x15)\n    x20 = mpapply(recolor, x19, x15)\n    x21 = paint(x10, x20)\n    x22 = delta(x12)\n    x23 = asindices(x22)\n    x24 = box(x23)\n    x25 = toobject(x24, I)\n    x26 = identity(x25)\n    x27 = apply(center, x25)\n    x28 =167(x26)\n    x29 = increment(x28)\n    x30 = shift(x25, x29)\n    x31 = toobject(x30, I)\n    x32 =15, x31)\n    x33 = hmirror(x32)\n    x34 = shift(x29, x33)\n    x35 = toobject(x34, I)\n    x36 = apply(color, x35)\n    x37 = combine(x20, x36)\n    x38 = mapply(dmirror, x37)\n    O = paint(x21, x38)\n    return O"], [1.1, "def solve_c06373bc(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = equality(x2, I)\n    x4 = branch(x3, dmirror, identity)\n    x5 = x4(I)\n    x6 = shape(x5)\n    x7 = canvas(ZERO, x6)\n    x8 = hconcat(x5, x7)\n    x9 = objects(x8, T, F, F)\n    x10 = color(x2)\n    x11 = palette(x2)\n    x12 = other(x11, x10)\n    x13 = switch(x8, x12, I)\n    x14 =18601(x9)\n    x15 = lbind(colorfilter, x14)\n    x16 = compose(x15, color)\n    x17 = rbind(sfilter, x16)\n    x18 = chain(positive, size, x17)\n    x19 = dmirror(x8)\n    x20 = sfilter(x19, x18)\n    x21 = rbind(sizefilter, x20)\n    x22 = merge(x21)\n    x23 =7(x22)\n    x24 = apply(merge, x23)\n    x25 = mmirror(x24)\n    x26 = cellwise(x25, x8, ONE)\n    x27 = apply(llcorner, x24)\n    x28 = lbind(shift, x2)\n    x29 = mapply(x28, x27)\n    x30 = pair(x29, x26)\n    x31 = sfilter(x30, first)\n    x32 = mapply(sighalf, x31)\n    O = smirror(x32)\n    return O"], [1.1, "def solve_ea676d53(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmin(x2, size)\n    x4 = colorfilter(x2, x3)\n    x5 = merge(x4)\n    x6 = product(x4, x5)\n    x7 = fork(divide, first, last)\n    x8 =\n    x9 = order(x6, x7)\n    x9 = mpapply(recolor, x8, x9)\n    O = paint(I, x9)\n    return O"], [1.1, "def solve_22da92b5(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(add, NINE)\n    x2 =79655(x1)\n    x3 = apply(x2, x1)\n    x4 = fork(equality, identity, dmirror)\n    x5 = compose(x4, dedupe)\n    x6 = x5(x3)\n    x7 = size(x6)\n    x8 = rbind(repeat, x7)\n    x9 = apply(x8, x6)\n    O = x5(x9)\n    return O"], [1.1, "def solve_f52db621(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 = rbind(Example output:\n    8888888888\n    8218998268\n    8113811228\n    8186760828\n    8180660828\n    8087188888\n    8888888888\n    \"\"\"\n    x2 = shape(I)\n    x3 = partition(I)\n    x4 = argmax(x3, size)\n    x5 = canvas(x4, x2)\n    x6 = argmin(x3, size)\n    x7 = palette(x6)\n    x8 = remove(x4, x7)\n    x9 =004(x8, x5)\n    x10 = ofcolor(I, x9)\n    x11 = normalize(x5)\n    x12 = shape(x11)\n    x13 = increment(x12)\n    x14 = lbind(multiply, x13)\n    x15 = toivec(x14)\n    x16 = shift(x11, x15)\n    O = fill(I, x9, x16)\n    return O"], [1.1, "def solve_8c411f50(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = partition(I)\n    x2 =1111(89, ONE)\n    x3 = argmin(x1, size)\n    x4 = cover(I, x3)\n    x5 = normalize(x3)\n    x6 = shift(x5, UNITY)\n    x7 =11f8(x2)\n    x8 = argmin(x1, size)\n    x9 = width(x6)\n    x10 = divide(x9, FIVE)\n    x11 = increment(x10)\n    x12 = width(x6)\n    x13 = interval(ZERO, x12, x11)\n    x14 = rbind(multiply, x6)\n    x15 = apply(x14, x13)\n    x16 = lbind(shift, x6)\n    x17 = mapply(x16, x15)\n    x18 = fill(x4, FIVE, x17)\n    x19 = objects(x18, T, F, T)\n    x20 = argmax(x19, size)\n    x21 = shift(x20, UNITY)\n    x22 = paint(x18, x21)\n    x23 =8216(x22, x8)\n    x24 = astuple(x23, x23)\n    x25 = x16(x24)\n    x26 = ofcolor(x25, FIVE)\n    x27 = fill(x22, ZERO, x26)\n    O = fill(x27, ONE, x25)\n    return O"], [1.1, "def solve_e5cc93b2(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 =445(I)\n    x2 =129(x1)\n    x3 = branch(x2, vsplit, hsplit)\n    x4 = x3(I, TWO)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = width(x6)\n    x8 = interval(ZERO, x7, ONE)\n    x9 = product(x8, x8)\n    x10 = rbind(multiply, x1)\n    x11 = apply(x10, x9)\n    x12 = lbind(colorcount, x5)\n    x13 = argmax(x11, x12)\n    x14 = shift(x3, x13)\n    x15 = apply(x5, x14)\n    x16 = product(x15, x15)\n    x17 = lbind(colorcount, x5)\n    x18 = apply(x17, x16)\n    x19 = product(x18, x18)\n    x20 = matcher(first, xIVE)\n    x21 = compose(flip, x20)\n    x22 = fork(both, x20, x21)\n    x23 = sfilter(x19, x22)\n    x24 = compose(hperiod, asobject)\n    x25 = height(x23)\n    x26 = increment(x25)\n    x27 = lbind(multiply, x26)\n    x28 = height(x23)\n    x29 = increment(x28)\n    x30 = astuple(x27, x29)\n    x31 = lbind(shift, x23)\n    x32 =20(x31)\n    x33 = multiply(x30, x32)\n    x34 = shift(x24, x33)\n    x35 = paint(x5, x34)\n    x36 =265(x35)\n    O = downscale(x35, x36)\n    return O"], [1.1, "def solve_b7de00be(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = initset(ORIGIN)\n    x2 = insert(ORIGIN, x1)\n    x3 = rbind(multiply, THREE)\n    x4 = apply(x3, x2)\n    x5 = astuple(NEG_TWO, NEG_TWO)\n    x6 = shift(x4, x5)\n    x7 = fork(insert, identity, backdrop)\n    x8 = apply(x7, x6)\n    x9 = rbind(toobject, I)\n    x10 = apply(x9, x8)\n    x11 = rbind(colorcount, TWO)\n    x12 = apply(x11, x10)\n    x13 = matcher(first, TWO)\n    x14 = compose(flip, x13)\n    x15 = rbind(sfilter, x14)\n    x16 = lbind(occurrences, I)\n    x17 = chain(positive, size, x16)\n    x18 = compose(x17, x19)\n    x19 = lbind(lbind, equality)\n    x20 = lbind(lbind, shift)\n    x21 = compose(x20, x12)\n    x22 = compose(x19, x21)\n    x23 = fork(argmax, x21, x22)\n    x24 = urcorner(x5)\n    x25 =9999(x24, x23)\n    x26 = cover(I, x25)\n    x27 = shoot(x26, x24)\n    x28 = fork(combine, x27, x23)\n    x29 = mapply(x28, x27)\n    O = fill(x26, ONE, x29)\n    return O"], [1.1, "def solve_e00f2949(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, toindices)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x12, x11)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(positive, size)\n    x17 = lbind(com SYs, I)\n    x18 = compose(x16, x17)\n    x19 = fork(shift, identity, x18)\n    x20 = mapply(x19, x4)\n    O = paint(I, x20)\n    return O"], [1.1, "def solve_90a7b12e(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = ONE\n    add, SEVEN, TEN)\n    x2 = rbind(add, x1)\n    x3 = compose(x2, last)\n    x4 = fork(equality, first, x3)\n    x5 = compose(flip, x4)\n    x6 = sfilter(x1, x5)\n    x7 =51645(x6)\n    x8 = objects(x7, T, T, T)\n    x9 = rbind(colorcount, vERO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, x7)\n    return O"], [1.1, "def solve_324842da(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = extract(x2, x4)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 =1817m5591(I):\n    x9 = add(UNITY, x6)\n    x10 = increment(x9)\n    x11 = power(x7, x10)\n    x12 = subtract(x6, x11)\n    x13 = astuple(x12, x12)\n    x14 = canvas(ZERO, x13)\n    x15 = shoot(x6, UNITY)\n    x16 = combine(x15, x14)\n    x17 = rbind(shoot, x16)\n    x18 = mapply(x17, x15)\n    x19 = fill(x14, x1, x18)\n    x20 = merge(x2)\n    x21 = fill(x19, TWO, x20)\n    O = replace(x21, x1, TWO)\n    return O"], [1.1, "def solve_b8c81847(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n     x14 = apply(x4, x13)\n    x15 = ofcolor(I, FOUR)\n    O = subgrid(x15, x14)\n    return O"], [1.1, "def solve_a51d8257(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = lbind(329, I)\n    x2 = compose(x1, dneighbors)\n    x3 = fork(equality, identity, x2)\n    x4 = compose(x3, I)\n    x5 = mostcolor(I)\n    x6 = fork(both, x3, x4)\n    x7 = fork(both, x5, x6)\n    x8 = compose(flip, x7)\n    x9 = sfilter(I, x8)\n    x10 = totuple(x9)\n    x11 = apply(color, x10)\n    x12 = size(x11)\n    x13 = increment(x12)\n    x14 =\n    x15 = canvas(x5, x13)\n    x16 = asobject(x11)\n    x17 = shift(x16, UNITY)\n    O = paint(x14, x17)\n    return O"], [1.1, "def solve_532aae3e(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 =Example output:\n    2332567233\n    2332567233\n    2332567233\n    4772365732\n    4723662323\n    6272324272\n    2271870723\n    1725315739\n    8854264224\n    2589222839\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [1.1, "def solve_d5e9ff86(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 =7fe24062(I)\n    x2 = fork(subtract, first, last)\n    x3 = compose(positive, size)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(center, first)\n    x6 = compose(center, last)\n    x7 = fork(subtract, x5, x6)\n    x8 = compose(x4, size)\n    x9 = rbind(intersection, x2)\n    x10 = fork(\n    x11 = compose(x8, size)\n    x10 = chain(x11, x9, size)\n    x11 = fork(both, x7, x10)\n    x12 = mfilter(x1, x11)\n    O = underfill(I, FOUR, x12)\n    return O"], [1.1, "def solve_3a01a087(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = frontiers(I)\n    x2 =599uple(x1,5168)\n    x3 = difference(x1, x2)\n    x4 = toobject(x3, I)\n    x5 = mostcolor(x4)\n    x6 = objects(I, T, F, T)\n    x7 = rbind(colorcount, ONE)\n    x8 = argmax(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [1.1, "def solve_c92dbd71(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = partition(I)\n    x2 = ONE(d511feca)\n    x3 = colorfilter(x1, ZERO)\n    x4 = compose(last, last)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = compose(first, last)\n    x8 = order(x6, x7)\n    x9 =5208(matcher, first)\n    x10 = compose(last, last)\n    x11 = fork(both, x9, x10)\n    x12 = extract(x8, x11)\n    x13 = last(x12)\n    x14 = decrement(x13)\n    x15 = last(x14)\n    x16 = toivec(x15)\n    x17 = initset(x16)\n    x18 = insert(x14, x17)\n    x19 = product(x18, x18)\n    x20 = rbind(shoot, DOWN)\n    x21 = mapply(x20, x19)\n    x22 = underfill(I, EIGHT, x21)\n    x23 = matcher(first, ZERO)\n    x24 = compose(flip, x23)\n    x25 = sfilter(x19, x24)\n    x26 = difference(x19, x25)\n    x27 = solve(x22, x26)\n    O = fill(x22, TWO, x27)\n    return O"], [1.1, "def solve_3dc8c44f(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = rot180(I)\n    x2 = lbind(subtract, TWO)\n    x3 = chain(even, x2, last)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(x4, dmirror)\n    x6 = chain(fewmost, x5, first)\n    x7 = order(x1, x6)\n    x8 = apply(last, x7)\n    x9 = merge(x8)\n    x10 = size(x9)\n    x11 = interval(ZERO, x10, ONE)\n    x12 = pair(x11, x8)\n    x13 = fork(multiply, first, last)\n    x14 = order(x12, x13)\n    x15 = lbind(canvas, ZERO)\n    x16 = chain(x15, mostcolor, first)\n    x17 = fork(paint, x16, last)\n    x18 = fork(multiply, height, width)\n    x19 =987(x17, x18)\n    x20 = lbind(occurrences, x9)\n    x21 = compose(x20, last)\n    x22 = fork(mapply, first, x21)\n    x23 = pair(x19, x22)\n    x24 =object(x23, x9)\n    x25 = difference(x24, x23)\n    x26 = apply(x22, x25)\n    x27 = rbind(object, x24)\n    x28 = compose(x27, last)\n    x29 = sfilter(x26, x28)\n    x30 = apply(color, x29)\n    x31 = pair(x29, x30)\n    x32 = mapply(x27, x31)\n    x33 = first(x32)\n    x34 = last(x32)\n    x35 = neighbors(UNITY)\n    x36 = recolor(ZERO, x35)\n    x37 = shift(x34, x36)\n    x38 = paint(x33, x37)\n    O = x30(x38)\n    return O"], [1.1, "def solve_52fd39e7(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 =af2able trim(I)\n    x2 =56(phalf, x1)\n    x3 =986e26(x2)\n    x4 =greater(THREE, x3)\n    x5 = width(x1)\n    x6 = tojvec(x5)\n    x7 = index(I, x6)\n    x8 =696(ORIGIN, UNITY)\n    x9 = equality(x7, x8)\n    x10 = branch(x4, x9, RIGHT)\n    x11 = branch(x4, LEFT, DOWN)\n    x12 = branch(x4, hfrontier, vfrontier)\n    x13 = x11(x12)\n    x14 = x10(x13)\n    x15 = increment(x5)\n    x16 = x11(x14)\n    x17 = shift(x13, x16)\n    x18 = paint(I, x17)\n    x19 = fill(x18, x7, x13)\n    O = x11(x19)\n    return O"], [1.1, "def solve_9bffa2ce(I):\n    \"\"\"\n    Example input:\n    9744437345\n    2160781476\n    2234608953\n    5039126502\n    0955666350\n    6151324272\n    2231870713\n    1725318769\n    8854261992\n    2689222839\n    Example output:\n    9450404355\n    3085059816\n    2781586719\n    7092835673\n    2662066246\n    2051294010\n    4759674471\n    2373634156\n    3679846912\n    3711054984\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, T, T)\n    x4 = order(x3, size)\n    x5 = apply(color, x4)\n    x6 = last(x5)\n    x7 = remove(x2, x5)\n    x8 = last(x7)\n    x9 = color(x6)\n    x10 = color(x8)\n    x11 = subgrid(x10, x1)\n    x12 = matcher(first, x9)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = lbind(toobject, x5)\n    x16 = chain(x14, x15, color)\n    x17 = compose(x5, x16)\n    x18 =9(x17)\n    x19 =18(x11)\n    x20 = lbind(palette, x9)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = fork(remove, x22, identity)\n    x24 = chain(x19, last, x23)\n    x25 = rbind(ofcolor, x9)\n    x26 = compose(last, x25)\n    x27 = fork(subtract, x26, x24)\n    x28 = fork(shift, x27, x26)\n    x29 = mapply(x28, x6)\n    O = paint(x11, x29)\n    return O"], [1.1, "def solve_8482bdf5(I):\n    \"\"\"\n    Example input:\n    0729208557\n    3060872471\n    2275882153\n    9776627472\n    8691218024\n    5922358739\n    1057878954\n    6619378803\n    9603784222\n    1762237055\n    Example output:\n    2350418716\n    9873761099\n    5850578781\n    1076796313\n    1273636992\n    0275868073\n    3384778867\n    4531306295\n    3883843036\n    4602946855\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, height)\n    x3 = branch(x1, decrement, height)\n    x4 = x2(I)\n    x5 = mostcolor(I)\n    x6 = x3(I)\n    x7 = hconcat(I, x4)\n    x8 = tophalf(x7)\n    x9 = leastcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = argmin(x7, x10)\n    x12 = x11(x8)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = leastcolor(x13)\n    x16 = matcher(identity, x15)\n    x17 =770000(x13, x16)\n    x18 = height(x17)\n    x19 = width(x17)\n    x20 = decrement(x19)\n    x21 = astuple(x20, x18)\n    x22 = crop(x17, ORIGIN, x21)\n    x23 = hmirror(x22)\n    x24 = replace(x23, ONE, x9)\n    x25 = width(x24)\n    x26 = interval(ZERO, x25, ONE)\n    x27 = rbind(rapply, x25)\n    x28 = initset(x15)\n    x29 = lbind(rapply, x28)\n    x30 = chain(first, x29, initset)\n    x31 = apply(x30, x26)\n    x32 = ofcolor(x24, x31)\n    x33 = sfilter(x32, x30)\n    x34 = mapply(toindices, x33)\n    x35 = portrait(x34)\n    x36 = branch(x35, identity, x20)\n    x37 = ofcolor(x24, x9)\n    x38 = difference(x37, x36)\n    x39 = canvas(x35, x38)\n    O = x21(x39)\n    return O"], [1.1, "def solve_506e39e4(I):\n    \"\"\"\n    Example input:\n    2129872045\n    1737114476\n    6143461910\n    2631801375\n    0710798958\n    2328470348\n    9795919004\n    6312108221\n    0093205375\n    3993533191\n    Example output:\n    0804985181\n    8017771360\n    7043600527\n    2407520374\n    2416678095\n    6055175792\n    1409426599\n    6144975638\n    8921298640\n    6765983407\n    \"\"\"\n    x1 =159(I)\n    x2 =44(x1, I)\n    x3 = hmirror(x2)\n    x4 = vmirror(x2)\n    x5 = dmirror(x2)\n    x6 = cmirror(x2)\n    x7 = paint(I, x3)\n    x8 = paint(x7, x4)\n    x9 = paint(x8, x5)\n    O = paint(x9, x6)\n    return O"], [1.1, "def solve_6b48d1e0(I):\n    \"\"\"\n    Example input:\n    2140814628\n    9460088085\n    9221818379\n    7014085309\n    3610997739\n    2487030762\n    0706868842\n    6068671280\n    7429374323\n    8669008390\n    Example output:\n    1421940346\n    4019765759\n    3229582077\n    5284558973\n    1612430266\n    1985152251\n    6713304430\n    4029045299\n    8602013353\n    8571194983\n    \"\"\"\n    x1 = astuple(d687, cmirror)\n    x2 = astuple(x1, I)\n    x3 = initset(ORIGIN)\n    x4 = insert(ORIGIN, x3)\n    x5 = insert(x2, x4)\n    x6 = lbind(shift, x5)\n    x7 = rbind(compose, initset)\n    x8 = lbind(rbind, manhattan)\n    x9 = compose(x7, x8)\n    x10 =59(x7)\n    x11 = x9(I)\n    x12 = insert(x10, x11)\n    x13 = lbind(shift, x12)\n    x14 = rbind(compose, initset)\n    x15 = lbind(99bind, manhattan)\n    x16 = compose(x14, x15)\n    x17 = fork(shift, x13, x16)\n    x18 = fork(insert, x17, x9)\n    x19 = compose(box, x18)\n    x20 = mapply(x19, x4)\n    O = fill(I, THREE, x20)\n    return O"]]}