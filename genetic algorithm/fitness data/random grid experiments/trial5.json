{"d56f2372": [[0.273995593168007, "def solve_701ae9e7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, T, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.29037478188052895, "def solve_cae86563(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, F, F, T)\n    x6 = rbind(colorcount, ONE)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.29062998944158364, "def solve_1422fc15(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, T)\n    x4 = merge(x3)\n    x5 = astuple(FOUR, FOUR)\n    x6 = canvas(ZERO, x5)\n    x7 = paint(x6, x4)\n    O = rot90(x7)\n    return O"], [0.29706172839506173, "def solve_be1b59b4(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.29706172839506173, "def solve_90008deb(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 =color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.3040587683921017, "def solve_aee26452(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [0.3346827117477524, "def solve_1d6999d9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_5d78ca1c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_57eb1844(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_294ee897(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_30ef08e8(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_f1047c04(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_7e611380(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_1f263e3e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_5d96ebe9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_7d082c2b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_4229a6e9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_273ed211(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_0870f33a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_5c19df38(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.4058022963923585, "def solve_d4420644(I):\n    x1 = palette(I)\n    x2 = contained(ONE, x1)\n    x3 = contained(TWO, x1)\n    x4 = branch(x2, UNITY, TWO_BY_TWO)\n    x5 = branch(x3, RIGHT, x4)\n    x6 = fork(combine, vfrontier, hfrontier)\n    x7 = x6(x5)\n    x8 = canvas(ZERO, THREE_BY_THREE)\n    O = fill(x8, EIGHT, x7)\n    return O"], [0.4151122428203888, "def solve_1360f15b(I):\n    x1 = vmirror(I)\n    x2 = fgpartition(x1)\n    x3 = order(x2, size)\n    x4 = last(x3)\n    x5 = remove(x4, x3)\n    x6 = compose(toindices, normalize)\n    x7 = rbind(upscale, TWO)\n    x8 = chain(toindices, x7, normalize)\n    x9 = x6(x4)\n    x10 = rbind(intersection, x9)\n    x11 = chain(size, x10, x8)\n    x12 = argmax(x5, x11)\n    x13 = subgrid(x12, x1)\n    O = vmirror(x13)\n    return O"], [0.4151122428203888, "def solve_9ada3015(I):\n    x1 = vmirror(I)\n    x2 = fgpartition(x1)\n    x3 = order(x2, size)\n    x4 = last(x3)\n    x5 = remove(x4, x3)\n    x6 = compose(toindices, normalize)\n    x7 = rbind(upscale, TWO)\n    x8 = chain(toindices, x7, normalize)\n    x9 = x6(x4)\n    x10 = rbind(intersection, x9)\n    x11 = chain(size, x10, x8)\n    x12 = argmax(x5, x11)\n    x13 = subgrid(x12, x1)\n    O = vmirror(x13)\n    return O"], [0.41617597321745253, "def solve_4ecaa663(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = mostcolor(x2)\n    x4 = normalize(x2)\n    x5 = mostcolor(I)\n    x6 = shape(x2)\n    x7 = canvas(x5, x6)\n    O = fill(x7, x3, x4)\n    return O"], [0.41699831998382725, "def solve_1fd87429(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.42558143469661397, "def solve_58b998dc(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.42558143469661397, "def solve_3785e926(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.42558143469661397, "def solve_8054f488(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.4381231584045177, "def solve_9d0463fa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = subgrid(x2, I)\n    x8 = palette(x7)\n    x9 = lbind(colorcount, x7)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.45420349399449317, "def solve_81aa2a4e(I):\n    x1 = objects(I, T, F, T)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = mostcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = extract(x1, x5)\n    O = subgrid(x6, I)\n    return O"], [0.4559751358985313, "def solve_7b32882e(I):\n    x1 = palette(I)\n    x2 = contained(ONE, x1)\n    x3 = contained(TWO, x1)\n    x4 = branch(x2, UNITY, TWO_BY_TWO)\n    x5 = branch(x3, RIGHT, x4)\n    x6 = fork(combine, vfrontier, hfrontier)\n    x7 = x6(x5)\n    x8 = canvas(ZERO, THREE_BY_THREE)\n    O = fill(x8, FIVE, x7)\n    return O"], [0.47145600561542583, "def solve_034242c8(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.4725027588082295, "def solve_346ef70b(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.4744327528950218, "def solve_3bc91ce3(I):\n    x1 = frontiers(I)\n    x2 = mfilter(x1, vline)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, F, T)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.47968970642883685, "def solve_ff6934ef(I):\n    x1 = palette(I)\n    x2 = remove(TWO, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, T, F, T)\n    x9 = colorfilter(x8, TWO)\n    x10 = size(x9)\n    x11 = double(x10)\n    x12 = interval(ZERO, x11, TWO)\n    x13 = apply(tojvec, x12)\n    x14 = astuple(ONE, NINE)\n    x15 = canvas(x4, x14)\n    x16 = fill(x15, ONE, x13)\n    x17 = hsplit(x16, THREE)\n    O = merge(x17)\n    return O"], [0.49704719435154215, "def solve_de92c2ea(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_5bdc5e08(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_5fa5bfea(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_126bd616(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_39069d30(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5056030890741036, "def solve_93b8e190(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.5056030890741036, "def solve_3d29bb24(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.5056030890741036, "def solve_49755f7a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.5056030890741036, "def solve_2e9466b2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.5056030890741036, "def solve_7d5d61aa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.5056030890741036, "def solve_196b5b15(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.5307798906710026, "def solve_bc4df508(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5399641848551894, "def solve_31ef29a4(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = first(x2)\n    x4 = neighbors(x3)\n    x5 = astuple(TEN, TEN)\n    x6 = canvas(ZERO, x5)\n    x7 = initset(x3)\n    x8 = fill(x6, x1, x7)\n    O = fill(x8, TWO, x4)\n    return O"], [0.5442694165737644, "def solve_6eab0599(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, SIX)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, ONE, SEVEN)\n    x5 = canvas(x4, THREE_BY_THREE)\n    x6 = branch(x1, TWO, ZERO)\n    x7 = connect(ORIGIN, DOWN)\n    x8 = connect(ORIGIN, ZERO_BY_TWO)\n    x9 = combine(x7, x8)\n    O = fill(x5, TWO, x9)\n    return O"], [0.5492012056649737, "def solve_44535b27(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = color(x3)\n    O = canvas(x4, TWO_BY_TWO)\n    return O"], [0.5585024261811583, "def solve_57708b48(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5585024261811583, "def solve_08336b1b(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5585024261811583, "def solve_9b4bb339(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5585024261811583, "def solve_04762ae7(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5585024261811583, "def solve_e2449288(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5585024261811583, "def solve_e0a8035a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5585024261811583, "def solve_349b8865(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5652441058672942, "def solve_76d422e7(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.5985774392006277, "def solve_02fda799(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = branch(x2, ONE, SEVEN)\n    O = canvas(x3, UNITY)\n    return O"], [0.6016750389108988, "def solve_6d4fa3d9(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.601986706041267, "def solve_be72322f(I):\n    x1 =first(I)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(ONE, x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = objects(x6, T, F, F)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x5(x10)\n    return O"], [0.6181018953185965, "def solve_75ab1707(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_0cfcdfc1(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_7ecf000d(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_89e8ae4e(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_bf88c42d(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_89abf998(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_7906d4c3(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_d86facef(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_d9c45414(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_2849a157(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_8c0646b3(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_ab6c7f75(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_81e17c6d(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_3114fbfb(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_52ba8f2a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_85904b3a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_f8aab032(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_49007793(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_43b73717(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6195255835046275, "def solve_4fb4dc53(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = objects(I, T, F, T)\n    x5 = totuple(x4)\n    x6 = apply(color, x5)\n    x7 = lbind(sfilter, x6)\n    x8 = lbind(matcher, identity)\n    x9 = chain(size, x7, x8)\n    x10 = valmax(x3, x9)\n    x11 = matcher(x9, x10)\n    x12 = sfilter(x3, x11)\n    x13 = lbind(colorcount, I)\n    x14 = argmin(x12, x13)\n    x15 = ofcolor(I, x14)\n    x16 = recolor(x14, x15)\n    x17 = apply(initset, x16)\n    x18 = remove(x16, x1)\n    x19 = lbind(argmin, x17)\n    x20 = lbind(rbind, manhattan)\n    x21 = compose(x19, x20)\n    x22 = fork(combine, identity, x21)\n    x23 = apply(x22, x18)\n    x24 = matcher(first, x14)\n    x25 = rbind(sfilter, x24)\n    x26 = chain(invert, ulcorner, x25)\n    x27 = fork(shift, identity, x26)\n    x28 = mapply(x27, x23)\n    x29 = normalize(x28)\n    x30 = shape(x29)\n    x31 = canvas(ZERO, x30)\n    O = paint(x31, x29)\n    return O"], [0.6195255835046275, "def solve_a7207c65(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = objects(I, T, F, T)\n    x5 = totuple(x4)\n    x6 = apply(color, x5)\n    x7 = lbind(sfilter, x6)\n    x8 = lbind(matcher, identity)\n    x9 = chain(size, x7, x8)\n    x10 = valmax(x3, x9)\n    x11 = matcher(x9, x10)\n    x12 = sfilter(x3, x11)\n    x13 = lbind(colorcount, I)\n    x14 = argmin(x12, x13)\n    x15 = ofcolor(I, x14)\n    x16 = recolor(x14, x15)\n    x17 = apply(initset, x16)\n    x18 = remove(x16, x1)\n    x19 = lbind(argmin, x17)\n    x20 = lbind(rbind, manhattan)\n    x21 = compose(x19, x20)\n    x22 = fork(combine, identity, x21)\n    x23 = apply(x22, x18)\n    x24 = matcher(first, x14)\n    x25 = rbind(sfilter, x24)\n    x26 = chain(invert, ulcorner, x25)\n    x27 = fork(shift, identity, x26)\n    x28 = mapply(x27, x23)\n    x29 = normalize(x28)\n    x30 = shape(x29)\n    x31 = canvas(ZERO, x30)\n    O = paint(x31, x29)\n    return O"], [0.6206220158679393, "def solve_dde66ef1(I):\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [0.6281080752846014, "def solve_345ce9b2(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, x13, x16)\n    return O"], [0.6290331115167541, "def solve_8f4a6a22(I):\n    x1 = trim(I)\n    x2 = trim(x1)\n    x3 = tophalf(x2)\n    x4 = lefthalf(x3)\n    x5 = tophalf(x2)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(x2)\n    x8 = lefthalf(x7)\n    x9 = bottomhalf(x2)\n    x10 = righthalf(x9)\n    x11 = index(I, ORIGIN)\n    x12 = width(I)\n    x13 = decrement(x12)\n    x14 = tojvec(x13)\n    x15 = index(I, x14)\n    x16 = height(I)\n    x17 = decrement(x16)\n    x18 = toivec(x17)\n    x19 = index(I, x18)\n    x20 = shape(I)\n    x21 = decrement(x20)\n    x22 = index(I, x21)\n    x23 = compress(I)\n    x24 = asindices(x23)\n    x25 = box(x24)\n    x26 = corners(x24)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, x23)\n    x29 = color(x28)\n    x30 = palette(x2)\n    x31 = other(x30, x29)\n    x32 = replace(x4, x31, x11)\n    x33 = replace(x6, x31, x15)\n    x34 = replace(x8, x31, x19)\n    x35 = replace(x10, x31, x22)\n    x36 = hconcat(x32, x33)\n    x37 = hconcat(x34, x35)\n    O = vconcat(x36, x37)\n    return O"], [0.6291436647232063, "def solve_e7587275(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_da3ae983(I):\n    x1 = subgrid(I, I)\n    x2 = vmirror(x1)\n    x3 = equality(x2, I)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_8b6d368e(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_5ba9ea34(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_85a2e2db(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_57a3c5d0(I):\n    O = tophalf(I)\n    return O"], [0.6291436647232063, "def solve_abb7c25f(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, bottomhalf)\n    O = x2(I)\n    return O"], [0.6307531254528715, "def solve_be4d29ee(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x7, x16)\n    x20 = ofcolor(x8, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, THREE, x21)\n    return O"], [0.6411654239156103, "def solve_fbbe925c(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [0.6416977053214553, "def solve_0b860acc(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.6416977053214553, "def solve_e11328c7(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.6416977053214553, "def solve_e8445d78(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.6463861591293175, "def solve_6548c1cf(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = replace(x11, ONE, TWO)\n    return O"], [0.6572952903476961, "def solve_7a50eacb(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.6572952903476961, "def solve_2e488234(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.6602138625163511, "def solve_1444204b(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6602138625163511, "def solve_4b150a71(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6602138625163511, "def solve_1e979e12(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6602138625163511, "def solve_4e2be6ec(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6602138625163511, "def solve_57021259(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6602138625163511, "def solve_69229a21(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.6602138625163511, "def solve_346786cc(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6602138625163511, "def solve_1b57659e(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6602138625163511, "def solve_19273021(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6674861298852472, "def solve_b7ea780c(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = mostcolor(I)\n    O = replace(x3, x4, ZERO)\n    return O"], [0.6703093706701909, "def solve_d32ee5bb(I):\n    x1 = index(I, ORIGIN)\n    x2 = equality(x1, TWO)\n    x3 = branch(x2, vsplit, hsplit)\n    x4 = x3(I, TWO)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = palette(x5)\n    x8 = palette(x6)\n    x9 = intersection(x7, x8)\n    x10 = first(x9)\n    x11 = shape(x5)\n    x12 = canvas(x10, x11)\n    x13 = ofcolor(x5, x10)\n    x14 = ofcolor(x6, x10)\n    x15 = intersection(x13, x14)\n    O = fill(x12, FIVE, x15)\n    return O"], [0.6960644532404631, "def solve_b6c48e28(I):\n    x1 = replace(I, FOUR, ZERO)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [0.6960644532404631, "def solve_b0b429e6(I):\n    x1 = replace(I, FOUR, ZERO)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply( x4, x7)\n    O = cmirror(x8)\n    return O"], [0.6978401405853463, "def solve_ba043d5e(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.6978401405853463, "def solve_ba21fa2a(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.6978401405853463, "def solve_a8b2e634(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.7046776153928492, "def solve_300d1f81(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.7052501974196685, "def solve_b74b2ee6(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = subgrid(x5, I)\n    x7 = mostcolor(x6)\n    x8 = leastcolor(x6)\n    O = switch(x6, x7, x8)\n    return O"], [0.7209610573661548, "def solve_35adba73(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.7209610573661548, "def solve_173748df(I):\n    x1 = shape(I)\n    x2 = equality(x1, TWO)\n    x3 = branch(x2, x1, x1)\n    x4 = branch(x2, x1, x1)\n    x5 = canvas(ZERO, x4)\n    x6 = asobject(x5)\n    x7 = occurrences(I, x6)\n    x8 = apply(double, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(shift, x6)\n    x11 = mapply(x10, x9)\n    O = fill(x5, FOUR, x11)\n    return O"], [0.7220296100651739, "def solve_a44520b9(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(add, height, width)\n    x3 = compose(decrement, x2)\n    x4 = fork(equality, size, x3)\n    x5 = fork(difference, toindices, box)\n    x6 = compose(size, x5)\n    x7 = matcher(x6, ZERO)\n    x8 = sfilter(x1, x4)\n    x9 = difference(x1, x8)\n    x10 = sfilter(x9, x7)\n    x11 = merge(x1)\n    x12 = fill(I, TWO, x11)\n    x13 = merge(x8)\n    x14 = fill(x12, ONE, x13)\n    x15 = merge(x10)\n    O = fill(x14, SIX, x15)\n    return O"], [0.7248454398357552, "def solve_d8650412(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = lbind(colorcount, I)\n    x5 = argmin(x3, x4)\n    x6 = ofcolor(I, x1)\n    x7 = ofcolor(I, x5)\n    x8 = combine(x6, x7)\n    x9 = mapply(neighbors, x8)\n    x10 = difference(x9, x8)\n    x11 = toobject(x10, I)\n    x12 = leastcolor(x11)\n    x13 = ofcolor(I, x1)\n    x14 = first(x13)\n    x15 = initset(x14)\n    x16 = objects(I, T, F, F)\n    x17 = colorfilter(x16, x12)\n    x18 = lbind(adjacent, x8)\n    x19 = mfilter(x17, x18)\n    x20 = toindices(x19)\n    x21 = rbind(manhattan, x15)\n    x22 = chain(even, x21, initset)\n    x23 = sfilter(x20, x22)\n    x24 = fill(I, x5, x20)\n    O = fill(x24, x1, x23)\n    return O"], [0.7265166129217103, "def solve_47e25343(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.7265166129217103, "def solve_3828d505(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.7289045042337138, "def solve_e1196e4b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.7297543276506494, "def solve_63fcb204(I):\n    x1 = asindices(I)\n    x2 = tophalf(I)\n    x3 = bottomhalf(I)\n    x4 = leastcolor(x2)\n    x5 = leastcolor(x3)\n    x6 = hfrontier(TWO_BY_ZERO)\n    x7 = box(x1)\n    x8 = combine(x6, x7)\n    x9 = fill(x2, x4, x8)\n    x10 = hmirror(x9)\n    x11 = replace(x10, x4, x5)\n    O = vconcat(x9, x11)\n    return O"], [0.7305542811310891, "def solve_6f209644(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = chain(palette, trim, x2)\n    x4 = lbind(contained, THREE)\n    x5 = compose(x4, x3)\n    x6 = fork(add, height, width)\n    x7 = compose(decrement, x6)\n    x8 = fork(equality, size, x7)\n    x9 = mfilter(x1, x5)\n    x10 = mfilter(x1, x8)\n    x11 = replace(I, THREE, SIX)\n    x12 = fill(x11, TWO, x9)\n    O = fill(x12, ONE, x10)\n    return O"], [0.7320721684772659, "def solve_dd62be86(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = ofcolor(I, ZERO)\n    x4 = astuple(x1, ONE)\n    x5 = crop(I, ORIGIN, x4)\n    x6 = hupscale(x5, x2)\n    O = fill(x6, ZERO, x3)\n    return O"], [0.7327606579059885, "def solve_cd0cd5f8(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.7327606579059885, "def solve_6a2490db(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.7327606579059885, "def solve_cb78fd2c(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.7327606579059885, "def solve_dc9272d7(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.7328950067132097, "def solve_f12bbe53(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.7349964413464689, "def solve_b4c6ca63(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, x1, x4)\n    return O"], [0.7355827818078587, "def solve_dc925b88(I):\n    x1 = ofcolor(I, EIGHT)\n    x2 = dneighbors(UNITY)\n    x3 = insert(UNITY, x2)\n    O = fill(I, THREE, x3)\n    return O"], [0.739303980806378, "def solve_2c827883(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot180(x3)\n    return O"], [0.739396261410893, "def solve_30905d00(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.739396261410893, "def solve_a07244da(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.739396261410893, "def solve_11def15c(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.739396261410893, "def solve_b8db33de(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = fork(subtract, first, last)\n    x4 = fork(multiply, sign, identity)\n    x5 = compose(x4, x3)\n    x6 = lbind(greater, THREE)\n    x7 = chain(x6, maximum, x5)\n    x8 = lbind(lbind, astuple)\n    x9 = rbind(chain, x8)\n    x10 = lbind(compose, x7)\n    x11 = rbind(x9, x10)\n    x12 = lbind(lbind, sfilter)\n    x13 = compose(x11, x12)\n    x14 = lbind(mapply, backdrop)\n    x15 = fork(apply, x13, identity)\n    x16 = compose(x14, x15)\n    x17 = power(x16, TWO)\n    x18 = x17(x2)\n    x19 = fill(I, FOUR, x18)\n    O = fill(x19, x1, x2)\n    return O"], [0.739396261410893, "def solve_3cad760b(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, FOUR, x3)\n    return O"], [0.739396261410893, "def solve_323133d6(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.739396261410893, "def solve_b6322588(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.739396261410893, "def solve_f6458605(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, TWO, x3)\n    return O"], [0.7400264296438032, "def solve_8bb78835(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = cover(I, x2)\n    x4 = chain(toivec, invert, height)\n    x5 = fork(shift, identity, x4)\n    x6 = mapply(x5, x1)\n    O = paint(x3, x6)\n    return O"], [0.7410390952301974, "def solve_59c78fe3(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.7410390952301974, "def solve_f83105f3(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.7411341780448716, "def solve_c689ab82(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7411341780448716, "def solve_54fc2322(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7411485512982788, "def solve_56fff384(I):\n    x1 = fgpartition(I)\n    x2 = fork(recolor, color, backdrop)\n    x3 = mapply(x2, x1)\n    O = paint(I, x3)\n    return O"], [0.7412925047274261, "def solve_9a905fbb(I):\n    x1 = objects(I, T, F, T)\n    x2 = ofcolor(I, ZERO)\n    x3 = sizefilter(x1, ONE)\n    x4 = rbind(adjacent, x2)\n    x5 = extract(x3, x4)\n    x6 = recolor(ZERO, x5)\n    O = paint(I, x6)\n    return O"], [0.7414654147115858, "def solve_98f7aec9(I):\n    x1 = mostcolor(I)\n    x2 = replace(I, x1, ZERO)\n    x3 = shoot(ORIGIN, UNITY)\n    O = underfill(x2, x1, x3)\n    return O"], [0.7414654147115858, "def solve_b0989855(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7414654147115858, "def solve_abd3154b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_c70348e4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = subgrid(x2, I)\n    return O"], [0.7414654147115858, "def solve_d1d5ee2a(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.7414654147115858, "def solve_158fb1ca(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_47e726cc(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = paint(I, x5)\n    return O"], [0.7414654147115858, "def solve_3269790b(I):\n    x1 = lbind(multiply, THREE)\n    x2 = rbind(add, THREE)\n    x3 = compose(x2, x1)\n    x4 = fork(equality, identity, x3)\n    x5 = compose(x4, last)\n    x6 = ofcolor(I, ZERO)\n    x7 = sfilter(x6, x5)\n    O = fill(I, ZERO, x7)\n    return O"], [0.7414654147115858, "def solve_c609818a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, ZERO, x2)\n    return O"], [0.7414654147115858, "def solve_32f461fa(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7414654147115858, "def solve_e582411f(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_265580a2(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7414654147115858, "def solve_60924532(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_ef32b612(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7414654147115858, "def solve_ddac29ae(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ONE, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    x7 = fill(I, EIGHT, x6)\n    x8 = add(SIX, SIX)\n    x9 = astuple(EIGHT, x8)\n    x10 = index(x7, x9)\n    x11 = equality(x10, EIGHT)\n    x12 = initset(x9)\n    x13 = add(x9, DOWN)\n    x14 = insert(x13, x12)\n    x15 = toobject(x14, x7)\n    x16 = toobject(x14, I)\n    x17 = branch(x11, x16, x15)\n    O = paint(x7, x17)\n    return O"], [0.7414654147115858, "def solve_40a31bdc(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_4756bb5d(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.7414654147115858, "def solve_b34deaec(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7414654147115858, "def solve_f9052e5d(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_66585baa(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_fa771c7f(I):\n    x1 = palette(I)\n    x2 = remove(FIVE, x1)\n    x3 = first(x2)\n    x4 = ofcolor(I, x3)\n    x5 = fill(I, ZERO, x4)\n    x6 = ofcolor(I, FIVE)\n    O = fill(x5, x3, x6)\n    return O"], [0.7416022713190306, "def solve_536ec41c(I):\n    x1 = fgpartition(I)\n    x2 = compose(last, first)\n    x3 = power(last, TWO)\n    x4 = fork(connect, x2, x3)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x1)\n    O = paint(I, x6)\n    return O"], [0.7419294883893283, "def solve_600f8178(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_23783247(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_ed49d419(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_216d8721(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_759e05e9(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_47293928(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_48d8d3e1(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7420260064287781, "def solve_3c97fd3c(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = fgpartition(I)\n    x6 = objects(I, T, F, F)\n    x3 = colorfilter(x6, x4)\n    x4 = rbind(bordering, I)\n    x5 = compose(flip, x4)\n    x6 = mfilter(x3, x5)\n    O = fill(I, ONE, x6)\n    return O"], [0.7426909638249383, "def solve_019b9742(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7426909638249383, "def solve_ff0e6161(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7426909638249383, "def solve_2276b0e0(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7430839091203382, "def solve_434e04ac(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = rbind(difference, x2)\n    x4 = rbind(greater, TWO)\n    x5 = chain(x4, size, x3)\n    x6 = compose(x5, dneighbors)\n    x7 = sfilter(x2, x6)\n    O = fill(I, ZERO, x7)\n    return O"], [0.7430839091203382, "def solve_f9016614(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = rbind(difference, x2)\n    x4 = rbind(greater, TWO)\n    x5 = chain(x4, size, x3)\n    x6 = compose(x5, dneighbors)\n    x7 = sfilter(x2, x6)\n    O = fill(I, ZERO, x7)\n    return O"], [0.743417242412885, "def solve_ec74704f(I):\n    x1 = fork(multiply, height, width)\n    x2 = partition(I)\n    x3 = argmax(x2, x1)\n    x4 = remove(x3, x2)\n    x5 = argmax(x4, x1)\n    x6 = other(x4, x5)\n    x7 = palette(I)\n    x8 = lrcorner(x5)\n    x9 = add(x8, UNITY)\n    x10 = llcorner(x5)\n    x11 = add(x10, DOWN_LEFT)\n    x12 = urcorner(x5)\n    x13 = add(x12, UP_RIGHT)\n    x14 = ulcorner(x5)\n    x15 = add(x14, NEG_UNITY)\n    x16 = shoot(x9, UNITY)\n    x17 = shoot(x11, DOWN_LEFT)\n    x18 = shoot(x13, UP_RIGHT)\n    x19 = shoot(x15, NEG_UNITY)\n    x20 = combine(x16, x17)\n    x21 = combine(x18, x19)\n    x22 = combine(x20, x21)\n    x23 = color(x6)\n    O = fill(I, x23, x22)\n    return O"], [0.7435915732269925, "def solve_05c8c2d7(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = astuple(x1, ONE)\n    x8 = astuple(ONE, x2)\n    x9 = decrement(x1)\n    x10 = decrement(x2)\n    x11 = toivec(x10)\n    x12 = tojvec(x9)\n    x13 = crop(I, x11, x8)\n    x14 = crop(I, x12, x7)\n    x15 = asobject(x14)\n    x16 = asobject(x13)\n    x17 = vperiod(x15)\n    x18 = hperiod(x16)\n    x19 = astuple(x17, x18)\n    x20 = lbind(multiply, x19)\n    x21 = neighbors(ORIGIN)\n    x22 = mapply(neighbors, x21)\n    x23 = apply(x20, x22)\n    x24 = lbind(shift, x6)\n    x25 = mapply(x24, x23)\n    O = paint(I, x25)\n    return O"], [0.744309578111282, "def solve_39d464fa(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.744309578111282, "def solve_f668bb98(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.744309578111282, "def solve_7e08c377(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.744309578111282, "def solve_2eace2ca(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.744309578111282, "def solve_46a052e6(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.744309578111282, "def solve_a489a1e1(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.7453226770852263, "def solve_aa0da7ff(I):\n    x1 = objects(I, T, F, T)\n    x2 = mapply(delta, x1)\n    O = fill(I, SEVEN, x2)\n    return O"], [0.7453226770852263, "def solve_4c822624(I):\n    x1 = objects(I, T, F, T)\n    x2 = mapply(delta, x1)\n    O = fill(I, SEVEN, x2)\n    return O"], [0.745370583385215, "def solve_336ea098(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = center(x2)\n    x4 = dneighbors(x3)\n    x5 = insert(x3, x4)\n    O = fill(I, THREE, x5)\n    return O"], [0.7454776898542618, "def solve_a4c657fa(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.746036831698095, "def solve_97fae789(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.7461098366866447, "def solve_02df5367(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = rbind(multiply, THREE)\n    x6 = rbind(divide, THREE)\n    x7 = compose(x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = toindices(x4)\n    x10 = compose(x8, last)\n    x11 = sfilter(x9, x10)\n    O = fill(I, SIX, x11)\n    return O"], [0.7462669862994846, "def solve_eb11ea87(I):\n    O = dmirror(I)\n    return O"], [0.7462669862994846, "def solve_e9ca16ad(I):\n    O = dmirror(I)\n    return O"], [0.7464740545096182, "def solve_84a1782b(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_263d005f(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_e3b2d358(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_55485376(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_4904db5d(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_95a5b43b(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7467587450693074, "def solve_442fa580(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(shoot, RIGHT)\n    x4 = compose(x3, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(x1, DOWN_LEFT)\n    x9 = initset(x8)\n    x10 = mostcolor(I)\n    x11 = recolor(x10, x9)\n    x12 = objects(x7, T, F, T)\n    x13 = insert(x11, x12)\n    x14 = order(x13, uppermost)\n    x15 = first(x14)\n    x16 = remove(x11, x14)\n    x17 = remove(x15, x14)\n    x18 = compose(lrcorner, first)\n    x19 = compose(lrcorner, last)\n    x20 = fork(connect, x18, x19)\n    x21 = compose(color, first)\n    x22 = fork(recolor, x21, x20)\n    x23 = pair(x16, x17)\n    x24 = mapply(x22, x23)\n    O = underpaint(x7, x24)\n    return O"], [0.7476233794761621, "def solve_3c5b9738(I):\n    O = rot180(I)\n    return O"], [0.7476233794761621, "def solve_3c8b807a(I):\n    O = rot180(I)\n    return O"], [0.7477585480775065, "def solve_a5ee513e(I):\n    x1 = ofcolor(I, TWO)\n    x2 = recolor(ZERO, x1)\n    x3 = normalize(x2)\n    x4 = occurrences(I, x2)\n    x5 = lbind(shift, x3)\n    x6 = apply(x5, x4)\n    x7 = astuple(ONE, THREE)\n    x8 = astuple(FIVE, ONE)\n    x9 = astuple(TWO, SIX)\n    x10 = initset(x7)\n    x11 = insert(x8, x10)\n    x12 = insert(x9, x11)\n    x13 = rbind(contained, x12)\n    x14 = chain(flip, x13, ulcorner)\n    x15 = sfilter(x6, x14)\n    x16 = merge(x15)\n    x17 = recolor(TWO, x16)\n    O = paint(I, x17)\n    return O"], [0.7478561079652767, "def solve_e056dd34(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = recolor(ZERO, x2)\n    x4 = normalize(x3)\n    x5 = occurrences(I, x4)\n    x6 = toindices(x4)\n    x7 = lbind(shift, x6)\n    x8 = mapply(x7, x5)\n    O = fill(I, x1, x8)\n    return O"], [0.7480983828045926, "def solve_62ea7c08(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, last)\n    x5 = fork(recolor, first, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [0.7481170341881848, "def solve_47aa2c22(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7482565735643151, "def solve_30e5060f(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_521f7d01(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_ef2411e3(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_cf5f5894(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_bcd0445c(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_632d98f3(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_769dcfa4(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_58b88c45(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_050ee037(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_0159e6ca(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_657d180c(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7484974551407092, "def solve_2aea6d72(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.7484974551407092, "def solve_5a02e5ea(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.7487022635082722, "def solve_f48a2bf4(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.7487035816092084, "def solve_c9156682(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.7491103860227947, "def solve_edc0bdf2(I):\n    O = rot270(I)\n    return O"], [0.7493770004739405, "def solve_b842301b(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = lbind(recolor, EIGHT)\n    x4 = rbind(ofcolor, x1)\n    x5 = chain(x3, backdrop, x4)\n    x6 = fork(paint, identity, x5)\n    x7 = height(I)\n    x8 = vsplit(I, x7)\n    x9 = mapply(x6, x8)\n    x10 = ofcolor(x9, EIGHT)\n    x11 = dmirror(I)\n    x12 = width(I)\n    x13 = vsplit(x11, x12)\n    x14 = mapply(x6, x13)\n    x15 = dmirror(x14)\n    x16 = ofcolor(x15, EIGHT)\n    x17 = combine(x10, x16)\n    x18 = difference(x17, x2)\n    O = fill(I, EIGHT, x18)\n    return O"], [0.7498499462550435, "def solve_31ee8b3e(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.7498499462550435, "def solve_ab3067be(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.7498847791973963, "def solve_b3e6df2e(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.7501495720184375, "def solve_3eb6d332(I):\n    O = rot90(I)\n    return O"], [0.7516087933992682, "def solve_a7927a55(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.7516087933992682, "def solve_a1f7930d(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.7516087933992682, "def solve_a36b0c17(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.7518753424364076, "def solve_2f81834b(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7518753424364076, "def solve_6f34a6d3(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7588892456530311, "def solve_4d8b92d5(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = apply(toindices, x6)\n    x8 = rbind(shoot, RIGHT)\n    x9 = compose(x8, center)\n    x10 = fork(recolor, color, x9)\n    x11 = mapply(x10, x6)\n    x12 = paint(I, x11)\n    x13 = width(I)\n    x14 = interval(ZERO, x13, ONE)\n    x15 = apply(double, x14)\n    x16 = apply(increment, x15)\n    x17 = apply(tojvec, x16)\n    x18 = prapply(shift, x7, x17)\n    x19 = merge(x18)\n    O = fill(x12, FIVE, x19)\n    return O"], [0.7616308109434281, "def solve_a35c3976(I):\n    x1 = replace(I, SIX, TWO)\n    x2 = objects(x1, T, T, T)\n    x3 = colorfilter(x2, ONE)\n    x4 = merge(x3)\n    O = fill(x1, THREE, x4)\n    return O"], [0.770283578319142, "def solve_f541996f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.770283578319142, "def solve_14139c6d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.770283578319142, "def solve_7f60ad53(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.770283578319142, "def solve_375e84de(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.770283578319142, "def solve_43d2d38b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.770283578319142, "def solve_4ec97b2f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7771381822376172, "def solve_6aa471db(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = normalize(x2)\n    x4 = lbind(matcher, first)\n    x5 = compose(x4, mostcolor)\n    x6 = fork(sfilter, identity, x5)\n    x7 = fork(difference, identity, x6)\n    x8 = lbind(rbind, upscale)\n    x9 = interval(ONE, FOUR, ONE)\n    x10 = apply(x8, x9)\n    x11 = initset(identity)\n    x12 = insert(vmirror, x11)\n    x13 = insert(hmirror, x12)\n    x14 = insert(cmirror, x13)\n    x15 = insert(dmirror, x14)\n    x16 = fork(compose, first, last)\n    x17 = lbind(occurrences, I)\n    x18 = lbind(lbind, shift)\n    x19 = compose(x17, x7)\n    x20 = product(x15, x10)\n    x21 = apply(x16, x20)\n    x22 = rapply(x21, x3)\n    x23 = fork(mapply, x18, x19)\n    x24 = mapply(x23, x22)\n    O = paint(I, x24)\n    return O"], [0.7790633012367362, "def solve_f1748008(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7790633012367362, "def solve_24ebe47d(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7790633012367362, "def solve_18c3e8d6(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7790633012367362, "def solve_ea4f93e6(I):\n    x1 = shape(I)\n    x2 = add(x1, TWO)\n    x3 = canvas(ZERO, x2)\n    x4 = asobject(I)\n    x5 = shift(x4, UNITY)\n    x6 = paint(x3, x5)\n    x7 = asindices(x3)\n    x8 = fork(difference, box, corners)\n    x9 = x8(x7)\n    x10 = lbind(lbind, manhattan)\n    x11 = rbind(compose, initset)\n    x12 = chain(x11, x10, initset)\n    x13 = lbind(argmin, x5)\n    x14 = chain(first, x13, x12)\n    x15 = fork(astuple, x14, identity)\n    x16 = apply(x15, x9)\n    O = paint(x6, x16)\n    return O"], [0.7829819910175547, "def solve_283d0dbe(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.7829819910175547, "def solve_3e317936(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [1.0, "def solve_671fd68f(I):\n    x1 = ofcolor(I, EIGHT)\n    x2 = switch(I, THREE, FOUR)\n    x3 = rbind(greater, ONE)\n    x4 = compose(x3, numcolors)\n    x5 = sfilter(x1, x4)\n    x6 = remove(x5, x1)\n    x7 = lbind(colorcount, I)\n    x8 = argmax(x6, x7)\n    x9 = remove(x8, x6)\n    x10 = rbind(contained, x9)\n    x11 = compose(x10, first)\n    x12 = rbind(sfilter, x11)\n    x13 = lbind(rbind, subtract)\n    x14 = lbind(occurrences, I)\n    x15 = lbind(lbind, shift)\n    x16 = compose(x13, ulcorner)\n    x17 = chain(x16, x12, normalize)\n    x18 = chain(x14, x12, normalize)\n    x19 = fork(apply, x17, x18)\n    x20 = compose(x15, normalize)\n    x21 = fork(mapply, x20, x19)\n    x22 = astuple(cmirror, dmirror)\n    x23 = astuple(hmirror, vmirror)\n    x24 = combine(x22, x23)\n    x25 = product(x24, x24)\n    x26 = fork(compose, first, last)\n    x27 = apply(x26, x25)\n    x28 = totuple(x27)\n    x29 = combine(x24, x28)\n    x30 = lbind(rapply, x29)\n    x31 = mapply(x30, x5)\n    x32 = mapply(x21, x31)\n    x33 = paint(I, x32)\n    x34 = merge(x51)\n    O = cover(x33, x34)\n    return O"], [1.0, "def solve_918926cb(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = rbind(colorcount, ZERO)\n    x3 = chain(x2, double, dmirror)\n    x4 = x3(I)\n    x5 = x1(x4)\n    x6 = objects(x5, T, F, T)\n    x7 = argmax(x6, x5)\n    x8 = apply(color, x7)\n    x9 = fgpartition(x8)\n    x10 = insert(x9, x8)\n    x11 = width(x10)\n    x12 = astuple(x11, x5)\n    x13 = repeat(x12, x11)\n    x14 = combine(x13, x7)\n    x15 = merge(x14)\n    x16 = color(x15)\n    x17 = toindices(x15)\n    x18 = apply(24, x17)\n    x19 = lbind(shift, x15)\n    x20 = mapply(x19, x18)\n    x21 = paint(x5, x20)\n    O = x3(x21)\n    return O"], [1.0, "def solve_efb21fa5(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_b9957d2d(I):\n    x1 = SIX(I, TWO)\n    x2 = vmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = fork(add, first, last)\n    x8 = x7(x2)\n    x9 = toivec(x8)\n    x10 = lbind(shift, x6)\n    x11 = rbind(compose, initset)\n    x12 = chain(x11, x10, last)\n    x13 = lbind(mapply, x12)\n    x14 = rbind(ofcolor, x6)\n    x15 = compose(x13, x14)\n    x16 = fork(paint, identity, x15)\n    x17 = apply(x16, x5)\n    x18 = fork(connect, first, last)\n    x19 = mapply(x18, x17)\n    O = fill(x19, ZERO, x19)\n    return O"], [1.0, "def solve_32fe1c27(I):\n    x1 = fgpartition(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = extract(x1, x3)\n    x5 = normalize(x4)\n    x6 = toindices(x5)\n    x7 = compose(toindices, normalize)\n    x8 = matcher(x7, x6)\n    x9 = mfilter(x1, x8)\n    x10 = fill(I, x4, x9)\n    x11 = replace(x10, ZERO, EIGHT)\n    x12 = fill(x11, TWO, x6)\n    x13 = merge(x12)\n    x14 = dmirror(x13)\n    x15 = fill(x12, ONE, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = rbind(adjacent, x16)\n    x18 = lbind( sfilter, x17)\n    x19 = chain(merge, x18, color)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x2)\n    O = paint(x5, x21)\n    return O"], [1.0, "def solve_25c29c37(I):\n    x1 = width(I)\n    x2 = astuple(ONE, x1)\n    x3 = astuple(TWO, x1)\n    x4 = canvas(THREE, x3)\n    x5 = tojvec(x1)\n    x6 = height(I)\n    x7 = crop(I, x5, x6)\n    x8 = frontiers(x7)\n    x9 = sfilter(x8, hline)\n    x10 = size(x9)\n    x11 = increment(x10)\n    x12 = width(I)\n    x13 = subtract(x12, x11)\n    x14 = increment(x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = lbind(astuple, x16)\n    x18 = lbind(DOWNscale, I)\n    x19 = compose(x17, x18)\n    x20 = decrement(x1)\n    x21 = lbind(multiply, x20)\n    x22 = toivec(x21)\n    x23 = tojvec(x5)\n    x24 = decrement(x23)\n    x25 = lbind(multiply, x24)\n    x26 = add(x22, x25)\n    x27 = vmirror(x6)\n    x28 = vmirror(x26)\n    x29 = compose(x27, x28)\n    x30 = argmin(x29, x27)\n    x31 = ofcolor(x30, EIGHT)\n    x32 = ofcolor(x30, TWO)\n    x33 = combine(x31, x32)\n    x34 = fill(x40, EIGHT, x33)\n    x35 = fill(x34, TWO, x29)\n    O = fill(x35, ONE, x33)\n    return O"], [1.0, "def solve_780d8233(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = merge(x1)\n    x5 = fill(I, NEG_ONE, x4)\n    x6 = shape(I)\n    x7 = canvas(NEG_ONE, x6)\n    x8 = hconcat(x5, x7)\n    x9 = objects(x8, F, F, T)\n    x10 = rbind(other, x3)\n    x11 = compose(x10, palette)\n    x12 = fork(astuple, x11, ulcorner)\n    x13 = apply(x12, x9)\n    x14 = merge(x9)\n    x15 = fill(I, x3, x14)\n    x16 = paint(x15, x13)\n    O = compress(x16)\n    return O"], [1.0, "def solve_4fe3ebd6(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_c4628a92(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_e9d98489(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_86239c66(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_44ed660a(I):\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = ONE(x3)\n    x5 = RIGHT(x4)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = leastcolor(x5)\n    x8 = rbind(shoot, x7)\n    x9 = mapply(x8, x6)\n    x10 = combine(x6, x9)\n    O = fill(I, x7, x10)\n    return O"], [1.0, "def solve_c0bb08a9(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_6779cc10(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_9be52087(I):\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = fart(x5)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = shoot(x7, UP_RIGHT)\n    x10 = combine(x8, x9)\n    x11 = combine(x8, x9)\n    x12 = paint(x3, x11)\n    O = x2(x12)\n    return O"], [1.0, "def solve_17614427(I):\n    x1 = palette(I)\n    x2 = other(x1, ZERO)\n    x3 = ofcolor(I, x2)\n    x4 = asobject(I)\n    x5 = vperiod(x4)\n    x6 = height(I)\n    x7 = halve(x6)\n    x8 = add(x6, x7)\n    x9 = width(I)\n    x10 = astuple(x8, x9)\n    x11 = canvas(ZERO, x10)\n    x12 = increment(x8)\n    x13 = interval(ZERO, x12, x5)\n    x14 = lbind(shift, x3)\n    x15 = apply(toivec, x13)\n    x16 = mapply(x14, x15)\n    O = fill(x11, TWO, x16)\n    return O"], [1.0, "def solve_3d70682b(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_0d017063(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [1.0, "def solve_f7b74577(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_18928639(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_675129ff(I):\n    x1 = lbind(other, I)\n    x2 = compose(x1, palette)\n    x3 = fork(recolor, x2, identity)\n    x4 = mapply(x3, I)\n    x5 = paint(I, x4)\n    O = objects(x5, T, F, T)\n    return O"], [1.0, "def solve_01b5ea66(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = power(double, TWO)\n    x4 = shape(x2)\n    x5 = interval(x4, FIVE, ONE)\n    x6 = lbind(multiply, x4)\n    x7 = apply(x6, x5)\n    x8 = lbind(interval, FIVE)\n    x9 = apply(x8, x5)\n    x10 = lbind(compose, x4)\n    x11 = apply(x10, x9)\n    x12 = lbind(lbind, shift)\n    x13 = dedupe(x7)\n    x14 = mapply(x12, x13)\n    O = paint(I, x14)\n    return O"], [1.0, "def solve_9a0dbf7a(I):\n    x1 = shape(I)\n    x2 = subgrid(x1, I)\n    x3 = mostcolor(I)\n    O = replace(x2, x3, ZERO)\n    return O"], [1.0, "def solve_80ea49cc(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = remove(x3, x2)\n    x5 = lbind(colorfilter, x4)\n    x6 = lbind(rbind, greater)\n    x7 = compose(x5, x6)\n    x8 = rbind(sfilter, x3)\n    x9 = compose(x8, toindices)\n    x10 = lbind(rbind, difference)\n    x11 = compose(x10, toindices)\n    x12 = rbind(compose, initset)\n    x13 = lbind(rbind, manhattan)\n    x14 = compose(x12, x13)\n    x15 = fork(sfilter, x11, x14)\n    x16 = compose(maximum, x15)\n    x17 = compose(minimum, x15)\n    x18 = vsplit(I, TWO)\n    x19 = cmirror(x18)\n    x20 = mostcolor(x19)\n    x21 = initset(x16)\n    x22 = rbind(rapply, x21)\n    x23 = compose(x22, initset)\n    x24 = chain(first, x17, x23)\n    x25 = compose(x20, x24)\n    x26 = fork(paint, x25, x20)\n    x27 = mapply(x26, x4)\n    x28 = merge(x27)\n    O = x27(x28)\n    return O"], [1.0, "def solve_22feee59(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = compose(leftmost, first)\n    x13 = compose(leftmost, last)\n    x14 = fork(equality, x12, x13)\n    x15 = compose(uppermost, first)\n    x16 = compose(uppermost, last)\n    x17 = fork(equality, x15, x16)\n    x18 = fork(either, x14, x17)\n    x19 = sfilter(x11, x18)\n    x20 = compose(color, first)\n    x21 = compose(center, first)\n    x22 = compose(center, last)\n    x23 = fork(connect, x21, x22)\n    x24 = fork(recolor, x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = matcher(last, ZERO)\n    x28 = decrement(x26)\n    x29 = matcher(last, x28)\n    x30 = fork(either, x27, x29)\n    x31 = compose(flip, x30)\n    x32 = sfilter(x15, x31)\n    x33 = paint(I, x32)\n    x34 = size(x1)\n    x35 = positive(x34)\n    x36 = branch(x35, x22, ZERO)\n    O = canvas(x36, UNITY)\n    return O"], [1.0, "def solve_6151131a(I):\n    x1 = dmirror(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [1.0, "def solve_bd8e1004(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = chain(cmirror, x7, x8)\n    x10 = x9(x8)\n    x11 = dedupe(x10)\n    x12 = dmirror(x11)\n    x13 = dedupe(x12)\n    x14 = dmirror(x13)\n    x15 = mostcolor(x14)\n    x16 = objects(x14, T, T, F)\n    x17 = colorfilter(x16, x15)\n    x18 = compose(normalize, toindices)\n    x19 = box(x18)\n    x20 = difference(x16, x19)\n    x21 = rbind(subgrid, x20)\n    x22 = chain(x21, initset, palette)\n    x23 = rbind(subgrid, x5)\n    x24 = chain(x23, x22, asobject)\n    x25 = lbind(subtract, x15)\n    x26 = compose(first, x25)\n    x27 = chain(x26, x24, x26)\n    x28 = fork(shift, x27, x23)\n    x29 = fork(connect, x28, urcorner)\n    x30 = fork(combine, x28, x29)\n    x31 = compose(x30, x27)\n    x32 = fork(shift, x27, x31)\n    x33 = fork(combine, x32, x31)\n    x34 = mapply(x33, x14)\n    x35 = fill(x5, x15, x34)\n    x36 = replace(x35, x15, x5)\n    O = downscale(x36, THREE)\n    return O"], [1.0, "def solve_3e4c3006(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = totuple(x3)\n    x5 = apply(color, x4)\n    x6 = lbind(sfilter, x5)\n    x7 = lbind(matcher, identity)\n    x8 = chain(size, x6, x7)\n    x9 = argmax(x6, x8)\n    x10 = repeat(x9, ONE)\n    O = paint(I, x10)\n    return O"], [1.0, "def solve_1159b49c(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_fead7be2(I):\n    x1 = palette(I)\n    x2 = remove(FIVE, x1)\n    x3 = first(x2)\n    x4 = ofcolor(I, x3)\n    x5 = ZERO(x4)\n    x6 = ofcolor(I, FIVE)\n    x7 = center(x6)\n    x8 = vfrontier(x7)\n    x9 = insert(x13, x8)\n    O = fill(I, ZERO, x9)\n    return O"], [1.0, "def solve_82cda086(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_c6ffa7d5(I):\n    x1 = dmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_424fe7cf(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_d9a7ed46(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = partition(I)\n    x7 = fork(multiply, height, width)\n    x8 = fork(equality, size, x7)\n    x9 = sfilter(x6, x8)\n    x10 = argmax(x9, size)\n    x11 = difference(x5, x10)\n    x12 = apply(initset, x11)\n    x13 = rbind(hmatching, x10)\n    x14 = rbind(vmatching, x10)\n    x15 = fork(either, x13, x14)\n    x16 = sfilter(x12, x15)\n    x17 = rbind(gravitate, x10)\n    x18 = fork(add, center, x17)\n    x19 = fork(connect, center, x18)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x16)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_40139bdc(I):\n    x1 = lbind(fork, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = lbind(compose, flip)\n    x5 = lbind(matcher, first)\n    x6 = compose(x4, x5)\n    x7 = lbind(compose, flip)\n    x8 = compose(x7, x6)\n    x9 = lbind(fork, both)\n    x10 = fork(x9, x3, x8)\n    x11 = lbind(sfilter, x7)\n    x12 = chain(x11, size, x10)\n    x13 = argmax(x2, x12)\n    x14 = compress(x13)\n    x15 = flip(x14)\n    x16 = vmirror(x15)\n    x17 = asobject(x16)\n    x18 = height(x17)\n    x19 = increment(x18)\n    x20 = lbind(subtract, x19)\n    x21 = chain(toivec, x20, double)\n    x22 = fork(shift, identity, x21)\n    x23 = mapply(x22, x17)\n    O = paint(x16, x23)\n    return O"], [1.0, "def solve_3b902004(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_0d6a681a(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot90(I)\n    x4 = upscale(x3, FOUR)\n    x5 = rot270(I)\n    x6 = papply(matcher, first, x2)\n    x7 = sfilter(x4, x6)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [1.0, "def solve_8411cf1c(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    O = asobject(x1)\n    return O"], [1.0, "def solve_f37af8f1(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_5aec8409(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = matcher(x13, ONE)\n    x15 = fork(both, x7, x14)\n    x16 = extract(x3, x15)\n    x17 = x16(x6)\n    x18 = height(x67)\n    x19 = subtract(x18, TWO)\n    x20 = height(x6)\n    x21 = subtract(x20, TWO)\n    x22 = width(x6)\n    x23 = subtract(x22, DOWN)\n    x24 = width(x6)\n    x25 = subtract(x23, x24)\n    x26 = astuple(x19, x25)\n    x27 = canvas(x1, x26)\n    x28 = astuple(x23, x27)\n    x29 = canvas(x1, x28)\n    x30 = rbind(multiply, x29)\n    x31 = apply(x30, x3)\n    x32 = rbind(shift, x36)\n    x33 = mapply(x32, x31)\n    O = paint(x27, x33)\n    return O"], [1.0, "def solve_2d496010(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = width(I)\n    x5 = astuple(TEN, FIVE)\n    x6 = canvas(x3, x5)\n    x7 = interval(ONE, SIX, ONE)\n    x8 = invert(TEN)\n    x9 = interval(x8, TEN, ONE)\n    x10 = product(x7, x9)\n    x11 = rbind(multiply, TWO)\n    x12 = apply(x11, x10)\n    x13 = apply(tojvec, x12)\n    x14 = prapply(shift, x4, x13)\n    x15 = lbind(shift, x4)\n    x16 = mapply(x15, x14)\n    O = fill(x6, x3, x16)\n    return O"], [1.0, "def solve_120669cc(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = rbind(repeat, x4)\n    x6 = lbind(upscale, I)\n    x7 = compose(x5, x6)\n    x8 = order(x2, leftmost)\n    x9 = apply(leftmost, x8)\n    x10 = last(x8)\n    x11 = matcher(first, x10)\n    x12 = compose(flip, x11)\n    x13 = fork(both, x3, x12)\n    x14 = sfilter(x9, x13)\n    x15 = compose(color, first)\n    x16 = fork(recolor, x15, x14)\n    x17 = mapply(x16, x14)\n    O = paint(I, x17)\n    return O"], [1.0, "def solve_577faa35(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = apply(toindices, x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = intersection(x3, x2)\n    x8 = fill(x6, EIGHT, x7)\n    O = replace(x8, UNITY, ONE)\n    return O"], [1.0, "def solve_87696ca2(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = add(TWO, x5)\n    x7 = canvas(x4, x6)\n    x8 = asobject(I)\n    x9 = shift(x8, UNITY)\n    x10 = paint(x7, x9)\n    x11 = palette(x10)\n    x12 = remove(x4, x11)\n    x13 = lbind(ofcolor, x10)\n    x14 = fork(recolor, identity, x13)\n    x15 = apply(x14, x12)\n    x16 = fork(equality, toindices, backdrop)\n    x17 = extract(x15, x16)\n    x18 = other(x15, x17)\n    x19 = color(x18)\n    x20 = astuple(x19, RIGHT)\n    x21 = initset(ZERO_BY_TWO)\n    x22 = insert(ORIGIN, x21)\n    x23 = recolor(x4, x22)\n    x24 = insert(x20, x23)\n    x25 = dmirror(x24)\n    x26 = lbind(shift, x24)\n    x27 = occurrences(x10, x24)\n    x28 = mapply(x26, x27)\n    x29 = lbind(shift, x25)\n    x30 = occurrences(x10, x25)\n    x31 = mapply(x29, x30)\n    x32 = combine(x28, x31)\n    x33 = fill(x10, x4, x32)\n    x34 = ofcolor(x33, x19)\n    x35 = gravitate(x34, x17)\n    x36 = replace(x10, x19, x4)\n    x37 = shift(x34, x35)\n    x38 = fill(x36, x19, x37)\n    O = trim(x38)\n    return O"], [1.0, "def solve_2e820091(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = fork(equality, toindices, box)\n    x7 = sfilter(x2, x6)\n    x8 = fork(multiply, height, width)\n    x9 = argmin(x7, x8)\n    x10 = argmax(x7, x8)\n    x11 = center(x9)\n    x12 = center(x10)\n    x13 = subtract(x11, x12)\n    x14 = add(x13, x11)\n    x15 = rot90(x14)\n    x16 = recolor(x1, x15)\n    x17 = shift(x16, UNITY)\n    x18 = paint(I, x17)\n    x19 = objects(x18, T, F, T)\n    x20 = apply(ulcorner, x19)\n    x21 = rbind(subgrid, x18)\n    x22 = apply(x21, x20)\n    x23 = pair(x15, x22)\n    x24 = mapply(palette, x23)\n    O = sfilter(x24, x24)\n    return O"], [1.0, "def solve_1d4ab164(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_b5b44d30(I):\n    x1 = initset(ORIGIN)\n    x2 = box(x1)\n    x3 = recolor(ZERO, x1)\n    x4 = double(TEN)\n    x5 = multiply(x4, THREE)\n    x6 = interval(ZERO, x5, ONE)\n    x7 = lbind(multiply, x5)\n    x8 = apply(x7, x6)\n    x9 = lbind(shift, x2)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [1.0, "def solve_86c40380(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_96c960ba(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x833 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, hmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [1.0, "def solve_785e38e6(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_8efe0034(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_1a144b46(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_8fd4361b(I):\n    x1 = trim(I)\n    x2 = objects(x1, T, F, F)\n    x3 = vperiod(x2)\n    x4 = shift(x2, x3)\n    x5 = lbind(shift, x4)\n    x6 = interval(ZERO, NINE, ONE)\n    x7 = apply(x5, x6)\n    x8 = mapply(x7, x3)\n    O = paint(x1, x8)\n    return O"], [1.0, "def solve_5d2b2e0c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_504071c2(I):\n    x1 = vmirror(I)\n    x2 = fgpartition(x1)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = compose(double, halve)\n    x6 = fork(equality, identity, x5)\n    x7 = compose(x6, last)\n    x8 = sfilter(x4, x7)\n    x9 = fill(x1, FIVE, x8)\n    O = x9(x4)\n    return O"], [1.0, "def solve_4d7fa4ef(I):\n    x1 = dmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_16bc3ce5(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = palette(I)\n    x4 = lbind(shift, I)\n    x5 = compose(x4, frontiers)\n    x6 = mfilter(x3, x5)\n    x7 = palette(I)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = shape(I)\n    x11 = canvas(x9, x10)\n    x12 = paint(x11, I)\n    x13 = asobject(x1)\n    x14 = difference(x13, x2)\n    O = paint(x12, x14)\n    return O"], [1.0, "def solve_d1d188b0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_228677e4(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [1.0, "def solve_cba0e309(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, first)\n    x31 = fork(recolor, x30, last)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_d5dd8f8e(I):\n    x1 = ofcolor(I, TWO)\n    x2 = vline(x1)\n    x3 = branch(x2, dmirror, identity)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = width(x4)\n    x7 = interval(x5, x6, TWO)\n    x8 = apply(tojvec, x7)\n    x9 = portrait(x8)\n    x10 = branch(x9, identity, last)\n    x11 = x10(x4)\n    x12 = x11(x4)\n    x13 = ofcolor(x12, FIVE)\n    x14 = ofcolor(x12, EIGHT)\n    x15 = fill(x13, ZERO, x13)\n    x16 = fill(x15, FOUR, x14)\n    x17 = fill(x16, ONE, x15)\n    x18 = rot90(x17)\n    x19 = ofcolor(x18, FIVE)\n    x20 = shift(x19, UNITY)\n    O = fill(x20, EIGHT, x19)\n    return O"], [1.0, "def solve_7bcf3180(I):\n    x1 = asindices(I)\n    x2 = objects(I, T, F, T)\n    x3 = first(x2)\n    x4 = rbind(subgrid, I)\n    x5 = fork(equality, identity, rot90)\n    x6 = compose(x5, x4)\n    x7 = extract(x1, x6)\n    x8 = center(x7)\n    x9 = subgrid(x3, I)\n    x10 = hmirror(x9)\n    x11 = objects(x10, F, T, T)\n    x12 = first(x11)\n    x13 = objects(x10, T, T, T)\n    x14 = rbind(subgrid, x10)\n    x15 = compose(x5, x14)\n    x16 = extract(x13, x15)\n    x17 = center(x16)\n    x18 = subtract(x8, x17)\n    x19 = shift(x12, x18)\n    x20 = paint(I, x19)\n    x21 = objects(x20, F, T, T)\n    x22 = first(x21)\n    x23 = subgrid(x22, x20)\n    x24 = vmirror(x23)\n    x25 = objects(x24, F, T, T)\n    x26 = first(x25)\n    x27 = objects(x24, T, T, T)\n    x28 = color(x7)\n    x29 = matcher(color, x28)\n    x30 = extract(x27, x29)\n    x31 = center(x30)\n    x32 = subtract(x8, x31)\n    x33 = shift(x26, x32)\n    O = paint(x20, x33)\n    return O"], [1.0, "def solve_675edd0d(I):\n    x1 = palette(I)\n    x2 = other(x1, ZERO)\n    x3 = shape(I)\n    x4 = multiply(x3, x3)\n    x5 = canvas(ZERO, x4)\n    x6 = ofcolor(I, x2)\n    x7 = lbind(shift, x6)\n    x8 = shape(I)\n    x9 = rbind(multiply, x8)\n    x10 = apply(x9, x6)\n    x11 = mapply(x7, x10)\n    O = fill(x5, x2, x11)\n    return O"], [1.0, "def solve_079bcd9e(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, T, T, F)\n    x6 = colorfilter(x5, x4)\n    x7 = fork(add, leftmost, uppermost)\n    x8 = argmin(x6, x7)\n    x9 = argmax(x6, x7)\n    x10 = lbind(sfilter, x6)\n    x11 = rbind(compose, leftmost)\n    x12 = chain(size, x10, x11)\n    x13 = lbind(sfilter, x6)\n    x14 = rbind(compose, uppermost)\n    x15 = chain(size, x13, x14)\n    x16 = lbind(lbind, greater)\n    x17 = chain(x12, x16, leftmost)\n    x18 = lbind(rbind, greater)\n    x19 = chain(x12, x18, leftmost)\n    x20 = lbind(lbind, greater)\n    x21 = chain(x15, x20, uppermost)\n    x22 = lbind(rbind, greater)\n    x23 = chain(x15, x22, uppermost)\n    x24 = fork(equality, x17, x19)\n    x25 = fork(equality, x21, x23)\n    x26 = fork(both, x24, x25)\n    x27 = extract(x6, x26)\n    x28 = fill(I, ONE, x8)\n    x29 = fill(x28, THREE, x9)\n    O = fill(x29, TWO, x27)\n    return O"], [1.0, "def solve_e4b96337(I):\n    x1 = Fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [1.0, "def solve_6be5c6ba(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_17b810d6(I):\n    x1 = objects(I, T, F, T)\n    x2 = apply(toindices, x1)\n    x3 = lbind(matcher, contained)\n    x4 = compose(x3, last)\n    x5 = extract(x2, x4)\n    x6 = lbind(shift, x5)\n    x7 = compose(x6, ulcorner)\n    x8 = rbind(colorcount, TWO)\n    x9 = argmax(x1, x8)\n    x10 = rbind(contained, x9)\n    x11 = compose(x10, first)\n    x12 = sfilter(x6, x11)\n    x13 = merge(x12)\n    x14 = rbind(shoot, x13)\n    x15 = compose(x14, ulcorner)\n    x16 = fork(recolor, x15, outbox)\n    x17 = mapply(x16, x4)\n    O = paint(I, x17)\n    return O"], [1.0, "def solve_9a8312f7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_b838424d(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_f5cb02df(I):\n    x1 = f25fb287\n    O = solveconcat(I, x1)\n    return O"], [1.0, "def solve_47358446(I):\n    x1 = rot180(I)\n    x2 = matcher(size, ONE)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, maximum, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_55446d1f(I):\n    x1 = objects(I, T, F, T)\n    x2 = vmirror(x1)\n    O = subgrid(x2, I)\n    return O"], [1.0, "def solve_87f6df0d(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_de673917(I):\n    x1 = ONEORIGIN(I)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(ONE, x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = objects(x6, T, F, F)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x5(x10)\n    return O"], [1.0, "def solve_46ea8a54(I):\n    x1 = paint(I, x2)\n    x2 = vmirror(x1)\n    x3 = equality(x2, I)\n    x4 = branch(x3, x2, x2)\n    O = canvas(x4, ONE)\n    return O"], [1.0, "def solve_19348811(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, identity, dmirror)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = lrcorner(x22)\n    x24 = shape(x23)\n    x25 = increment(x24)\n    x26 = lbind(multiply, x25)\n    x27 = shift(x3, x26)\n    x28 = apply(x27, x22)\n    x29 = lbind(shift, x15)\n    x30 = mapply(x29, x28)\n    O = paint(x6, x30)\n    return O"], [1.0, "def solve_370f9199(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_bd47713d(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, x30)\n    x33 = compose(x32, x31)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [1.0, "def solve_efddeaf4(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_7de9cc51(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    O = apply(initset, x3)\n    x1 = toindices(x3)\n    x2 = asindices(I)\n    x3 = corners(x2)\n    x4 = combine(x1, x2)\n    x5 = fill(I, NEG_ONE, x4)\n    x6 = fgpartition(x5)\n    x7 = merge(x6)\n    x8 = shift(x7, DOWN)\n    x9 = fill(x5, TWO, x8)\n    x10 = shift(x9, UP)\n    x11 = fill(x9, SIX, x10)\n    x12 = shift(x11, RIGHT)\n    x13 = fill(x9, SEVEN, x12)\n    x14 = shift(x11, LEFT)\n    x15 = fill(x13, EIGHT, x14)\n    x16 = shift(x11, UP)\n    x17 = fill(x15, SIX, x16)\n    x18 = shift(x11, DOWN)\n    x19 = fill(x17, EIGHT, x18)\n    x20 = shift(x11, RIGHT)\n    x21 = fill(x19, SEVEN, x20)\n    x22 = shift(x11, LEFT)\n    x23 = fill(x21, EIGHT, x22)\n    x24 = shift(x11, UP)\n    x25 = fill(x23, UNITY, x24)\n    x26 = shift(x11, DOWN)\n    x27 = fill(x25, SIX, x26)\n    x28 = shift(x11, LEFT)\n    x29 = fill(x27, EIGHT, x28)\n    O = paint(x29, x3)\n    return O"], [1.0, "def solve_3b2c71d9(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_580effe7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_9eb76302(I):\n    O = matcher(identity, ZERO)\n    return O"], [1.0, "def solve_67fe85de(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_28bcb307(I):\n    x1 = objects(I, T, F, T)\n    x2 = lbind(sizefilter, x1)\n    x3 = compose(merge, x2)\n    x4 = x3(I)\n    x5 = halve(x4)\n    x6 = x3(I)\n    x7 = hconcat(x5, x6)\n    x8 = vconcat(x7, x7)\n    x9 = objects(x8, T, F, T)\n    x10 = rbind(shoot, UNITY)\n    x11 = compose(x10, center)\n    x12 = fork(recolor, color, x11)\n    x13 = mapply(x12, x9)\n    x14 = paint(x8, x13)\n    O = hmirror(x14)\n    return O"], [1.0, "def solve_5fe8cd60(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_820a067a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = subtract(Nivec, x14)\n    x16 = lbind(shift, x10)\n    x17 = shift(x15, x16)\n    x18 = fork(combine, vfrontier, hfrontier)\n    x19 = mapply(x18, x17)\n    O = paint(I, x19)\n    return O"], [1.0, "def solve_9f1233bf(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_97b654f1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_cc9add26(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_25723d44(I):\n    x1 = double(TEN)\n    x2 = interval(ZERO, x1, ONE)\n    x3 = apply(double, x2)\n    x4 = apply(increment, x3)\n    x5 = apply(tojvec, x4)\n    x6 = prapply(shift, x5, x4)\n    x7 = merge(x6)\n    O = fill(I, FOUR, x7)\n    return O"], [1.0, "def solve_e61ef8f3(I):\n    x1 = shoot(ORIGIN, UNITY)\n    x2 = shoot(x2, DOWN_LEFT)\n    x3 = fork(combine, hfrontier, vfrontier)\n    x4 = mapply(x3, x1)\n    x5 = fill(I, ZERO, x4)\n    O = replace(x5, ONE, TWO)\n    return O"], [1.0, "def solve_d14931da(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = partition(I)\n    x7 = fork(multiply, height, width)\n    x8 = fork(equality, size, x7)\n    x9 = sfilter(x6, x8)\n    x10 = argmax(x9, size)\n    x11 = difference(x5, x10)\n    x12 = apply(initset, x11)\n    x13 = rbind(hmatching, x10)\n    x14 = rbind(vmatching, x10)\n    x15 = fork(either, x13, x14)\n    x16 = sfilter(x12, x15)\n    x17 = rbind(gravitate, x10)\n    x18 = fork(add, center, x17)\n    x19 = fork(connect, center, x18)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x16)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_4e0bec6c(I):\n    x1 = ofcolor(I, TWO)\n    x2 = vline(x1)\n    O = branch(x2, dmirror, identity)\n    return O"], [1.0, "def solve_a0134bd8(I):\n    x1 = switch(I, EIGHT, TWO)\n    x2 = switch(x1, TWO, THREE)\n    x3 = switch(x2, EIGHT, ONE)\n    x4 = neighbors(ORIGIN)\n    x5 = mapply(neighbors, x4)\n    x6 = lbind(shift, x3)\n    x7 = apply(x6, x5)\n    x8 = merge(x7)\n    O = paint(I, x8)\n    return O"], [1.0, "def solve_92252c34(I):\n    x1 =9284448403\n    x2 = hmirror(I)\n    O = vconcat(x1, x2)\n    return O"], [1.0, "def solve_07a42553(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, last)\n    O = x4(I)\n    return O"], [1.0, "def solve_b4ef1643(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = ofcolor(I, x1)\n    x4 = backdrop(x3)\n    x5 = toobject(x4, I)\n    x6 = matcher(first, x1)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x2, x7)\n    x9 = totuple(x8)\n    x10 = apply(color, x9)\n    x11 = leastcommon(x10)\n    x12 = ofcolor(I, x1)\n    x13 = initset(x12)\n    x14 = position(x13, x4)\n    x15 = width(I)\n    x16 = ulcorner(x12)\n    x17 = lrcorner(x12)\n    x18 = shape(I)\n    x19 = maximum(x18)\n    x20 = interval(ZERO, x19, ONE)\n    x21 = lbind(multiply, x5)\n    x22 = apply(x21, x20)\n    x23 = pair(x26, x22)\n    x24 = mapply(box, x23)\n    O = fill(I, x3, x24)\n    return O"], [1.0, "def solve_e2c0046c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_3f068a11(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_ed598c2d(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = argmin(x2, size)\n    x4 = shoot(x3, UP_RIGHT)\n    x5 = argmax(x2, size)\n    x6 = shoot(x5, DOWN_LEFT)\n    x7 = shoot(x4, UNITY)\n    x8 = combine(x4, x6)\n    x9 = combine(x7, x8)\n    x10 = fill(I, x1, x9)\n    x11 = replace(x10, x1, EIGHT)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = divide(x12, x13)\n    x15 = width(x11)\n    x16 = interval(ZERO, x15, ONE)\n    x17 = interval(ZERO, x13, ZERO)\n    x18 = product(x16, x17)\n    x19 = rbind(multiply, x14)\n    x20 = apply(x19, x18)\n    x21 = rbind(multiply, x14)\n    x22 = apply(x21, x15)\n    x23 = combine(x20, x22)\n    x24 = lbind(shift, x11)\n    x25 = mapply(x24, x23)\n    O = fill(x10, FOUR, x25)\n    return O"], [1.0, "def solve_5ebb7610(I):\n    x1 = initset(ORIGIN)\n    x2 = index(I, x1)\n    x3 = lrcorner(x1)\n    x4 = add(x3, UNITY)\n    x5 = initset(x4)\n    x6 = astuple(x1, x5)\n    x7 = rbind(shoot, UP)\n    x8 = add(x6, DOWN)\n    x9 = interval(ZERO, x5, ONE)\n    x10 = apply(x7, x9)\n    x11 = apply(x8, x10)\n    x12 = papply(shoot, x11, x7)\n    x13 = add(x3, UNITY)\n    x14 = initset(x13)\n    x15 = astuple(x42, x12)\n    x16 = shift(x12, x15)\n    x17 = difference(x7, x16)\n    x18 = rapply(recolor, x17)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_9b4feb6f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, W, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_24c0baa0(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_a2a79039(I):\n    x1 = ofcolor(I, TWO)\n    x2 = ofcolor(I, THREE)\n    x3 = recolor(TWO, x1)\n    x4 = ulcorner(x2)\n    x5 = ulcorner(x1)\n    x6 = subtract(x4, x5)\n    x7 = increment(x6)\n    O = move(I, x3, x7)\n    return O"], [1.0, "def solve_1922fa36(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_c7a0a6f6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_05d0a3d8(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_66fe244a(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_bef843e1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = lbind(507, x2)\n    x4 = rbind(ofcolor, x1)\n    x5 = compose(x3, x4)\n    x6 = x5(I)\n    x7 = leastcolor(x6)\n    x8 = ofcolor(I, x7)\n    x9 = lbind(greater, SEVEN)\n    x10 = compose(x9, x5)\n    x11 = sfilter(x8, x10)\n    x12 = mapply(neighbors, x11)\n    O = fill(I, x1, x12)\n    return O"], [1.0, "def solve_94f8d4be(I):\n    x1 = astuple(vsplit, hsplit)\n    x2 = rbind(rbind, TWO)\n    x3 = rbind(rapply, I)\n    x4 = initset(x2)\n    x5 = lbind(rapply, x4)\n    x6 = chain(first, x3, x5)\n    x7 = lbind(apply, numcolors)\n    x8 = compose(x7, x6)\n    x9 = matcher(x8, TWO_BY_TWO)\n    x10 = extract(x1, x9)\n    x11 = x10(I, TWO)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = palette(x12)\n    x15 = palette(x13)\n    x16 = intersection(x14, x15)\n    x17 = first(x16)\n    x18 = shape(x12)\n    x19 = canvas(x17, x18)\n    x20 = ofcolor(x12, x17)\n    x21 = ofcolor(x13, x17)\n    x22 = intersection(x20, x21)\n    O = fill(x19, TWO, x22)\n    return O"], [1.0, "def solve_c7e78cf6(I):\n    x1 = ofcolor(I, TWO)\n    x2 = shape(I)\n    x3 = multiply(x2, x2)\n    x4 = canvas(ZERO, x3)\n    x5 = rbind(multiply, x2)\n    x6 = apply(x5, x4)\n    x7 = asobject(I)\n    x8 = lbind(shift, x7)\n    x9 = mapply(x8, x6)\n    O = paint(x4, x9)\n    return O"], [1.0, "def solve_f789e6fe(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = lbind(colorcount, I)\n    x5 = argmin(x3, x4)\n    x6 = ofcolor(I, x1)\n    x7 = ofcolor(I, x5)\n    x8 = combine(x6, x7)\n    x9 = mapply(neighbors, x8)\n    x10 = difference(x9, x8)\n    x11 = toobject(x10, I)\n    x12 = leastcolor(x11)\n    x13 = ofcolor(I, x1)\n    x14 = first(x13)\n    x15 = initset(x14)\n    x16 = objects(I, T, F, F)\n    x17 = colorfilter(x16, x12)\n    x18 = lbind(adjacent, x8)\n    x19 = mfilter(x17, x18)\n    x20 = toindices(x19)\n    x21 = rbind(contained, x20)\n    x22 = compose(x21,t)\n    x23 = sfilter(x19, x22)\n    x24 = fill(I, x5, x20)\n    O = fill(x24, x1, x23)\n    return O"], [1.0, "def solve_5a5e96fe(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_7fa82c53(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_46f5ad1e(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_3e83b9ea(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(normalize, x5)\n    x7 = chain(cmirror, x6, dmirror)\n    x8 = rbind(sfilter, x6)\n    x9 = compose(x8, x7)\n    x10 = lbind(chain, x4)\n    x11 = rbind(x10, x9)\n    x12 = lbind(compose, x1)\n    x13 = chain(x11, x12, x7)\n    x14 = lbind(lbind, shift)\n    x15 = chain(x14, x13, x7)\n    x16 = fork(mapply, x15, x13)\n    x17 = fork(mapply, x16, x7)\n    x18 = x17(x1)\n    x19 = replace(I, SIX, x18)\n    O = downscale(x19, TWO)\n    return O"], [1.0, "def solve_ca699e89(I):\n    x1 = asobject(I)\n    x2 = lbind(shift, x1)\n    x3 = compose(x2, decrement)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    O = paint(I, x5)\n    return O"], [1.0, "def solve_32c4062a(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_e06f2d09(I):\n    x1 = fgpartition(I)\n    x2 = sizefilter(x1, FOUR)\n    x3 = apply(toindices, x2)\n    x4 = compose( normalize, toindices)\n    x5 = x4(x2)\n    x6 = lbind(shift, x5)\n    x7 = compose(x6, shape)\n    x8 = halve(x2)\n    x9 = rbind(multiply, x8)\n    x10 = chain(x9, halve, shape)\n    x11 = fork(equality, identity, x7)\n    x12 = sfilter(x3, x11)\n    x13 = lbind(intersection, x5)\n    x14 = compose(x13, size)\n    x15 = chain(size, x13, x14)\n    x16 = argmax(x12, x15)\n    x17 = difference(x5, x16)\n    O = fill(I, THREE, x17)\n    return O"], [1.0, "def solve_56f14ba4(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_4db4e1e0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofmass(x14)\n    x25 = difference(x23, x24)\n    x26 = objects(x25, F, F, T)\n    x27 = compose(hfrontier, center)\n    x28 = fork(recolor, color, x27)\n    x29 = mapply(x28, x26)\n    x30 = merge(x26)\n    x31 = paint(x15, x30)\n    O = paint(x31, x29)\n    return O"], [1.0, "def solve_e7328fd6(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(greater, THREE)\n    x6 = compose(x5, first)\n    x7 = sfilter(x4, x6)\n    x8 = merge(x7)\n    x9 = rot90(x8)\n    x10 = shape(x9)\n    x11 = canvas(x3, x10)\n    x12 = hconcat(x9, x11)\n    x13 = hmirror(x12)\n    O = vconcat(x12, x13)\n    return O"], [1.0, "def solve_3d6cfd6e(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_62cc0fad(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_3c6e85f7(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_5876ff10(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_b687023e(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_26435a52(I):\n    x1 = initset(ORIGIN)\n    x2 = insert(7770, x1)\n    x3 = merge(x2)\n    x4 = cover(I, x3)\n    x5 = chain(dmirror, dmirror, merge)\n    x6 = x5(x4)\n    x7 = lbind(remove, FOUR)\n    x8 = chain(x7, toindices, x5)\n    x9 = compose(x8, x6)\n    x10 = fork(3634436, x9,363)\n    x11 = compose(x5, x10)\n    x12 = ofcolor(x4, FIVE)\n    x13 = ZERO(x12)\n    x14 = ofcolor(x4, TWO)\n    x15 = ZERO(x14)\n    x16 = matcher(first, ZERO)\n    x17 = rbind(sfilter, x16)\n    x18 = lbind(compose, x17)\n    x19 = lbind(rbind, contained)\n    x20 = chain(x18, x19, last)\n    x21 = rbind(compose, x20)\n    x22 = lbind(rbind, sfilter)\n    x23 = compose(x21, x22)\n    x24 = chain(x19, x23, first)\n    x25 = rbind(compose, initset)\n    x26 = x25(x4)\n    x27 = x25(x26)\n    x28 = compose(x25, x27)\n    x29 = fork(mapply, x26, x28)\n    x30 = fork(recolor, first, x29)\n    x31 = mapply(x30, x6)\n    x32 = papply(connect, x31, x24)\n    x33 = difference(x31, x32)\n    x34 = toobject(x33, x4)\n    O = paint(x4, x34)\n    return O"], [1.0, "def solve_89c49298(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = height(x2)\n    x4 = width(x2)\n    x5 = neighbors(ORIGIN)\n    x6 = toindices(x2)\n    x7 = lbind(shift, x6)\n    x8 = height(I)\n    x9 = divide(x8, x3)\n    x10 = width(I)\n    x11 = divide(x10, x4)\n    x12 = astuple(x9, x11)\n    x13 = maximum(x12)\n    x14 = increment(x13)\n    x15 = interval(ONE, x14, ONE)\n    x16 = astuple(x3, x4)\n    x17 = lbind(multiply, x16)\n    x18 = compose(crement, x17)\n    x19 = lbind(mapply, x7)\n    x20 = rbind(apply, x15)\n    x21 = lbind(rbind, multiply)\n    x22 = compose(x21, x18)\n    x23 = chain(x19, x20, x22)\n    x24 = rbind(toobject, I)\n    x25 = compose(x7, x18)\n    x26 = chain(palette, x24, x25)\n    x27 = mostcolor(I)\n    x28 = rbind(equality, x27)\n    x29 = rbind(argmin, x28)\n    x30 = compose(x29, x26)\n    x31 = fork(recolor, x30, x23)\n    x32 = mapply(x31, x5)\n    O = paint(I, x32)\n    return O"], [1.0, "def solve_e202aed0(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_6bf045ea(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = x2(I, TWO)\n    x4 = order(x3, numcolors)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = objects(x6, F, F, T)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(first, x9)\n    x11 = compose(flip, x10)\n    x12 = rbind(sfilter, x11)\n    x13 = lbind(occurrences, x5)\n    x14 = compose(x13, x12)\n    x15 = chain(positive, size, x14)\n    x16 = sfilter(x7, x15)\n    x17 = chain(first, x13, x12)\n    x18 = compose(ulcorner, x12)\n    x19 = fork(subtract, x17, x18)\n    x20 = fork(shift, identity, x19)\n    x21 = apply(x20, x16)\n    x22 = compose(decrement, width)\n    x23 = chain(positive, decrement, x22)\n    x24 = mfilter(x21, x23)\n    O = paint(x5, x24)\n    return O"], [1.1, "def solve_28321aa3(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = asindices(I)\n    x5 = apply(first, x4)\n    x6 = difference(x5, x3)\n    x7 = ofcolor(I, x1)\n    x8 = rbind(interval, ONE)\n    x9 = lbind(rbind, contained)\n    x10 = lbind(sfilter, x6)\n    x11 = rbind(matcher, ZERO)\n    x12 = chain(size, x10, x9)\n    x13 = lbind(sfilter, x7)\n    x14 = lbind(compose, x12)\n    x15 = chain(x13, x11, x14)\n    x16 = lbind(fork, x8)\n    x17 = compose(increment, minimum)\n    x18 = lbind(lbind, astuple)\n    x19 = lbind(chain, x17)\n    x20 = rbind(x19, first)\n    x21 = chain(x20, x18, first)\n    x22 = lbind(chain, maximum)\n    x23 = rbind(x22, first)\n    x24 = chain(x23, x18, first)\n    x25 = fork(x16, x21, x24)\n    x26 = compose(x15, x25)\n    x27 = apply(toivec, x3)\n    x28 = apply(x26, x27)\n    x29 = argmax(x28, width)\n    x30 = remove(x29, x28)\n    x31 = ulcorner(x29)\n    x32 = invert(x31)\n    x33 = shift(x29, x32)\n    x34 = asindices(I)\n    x35 = center(x34)\n    x36 = invert(x35)\n    x37 = shift(x34, x36)\n    x38 = width(I)\n    x39 = asobject(I)\n    x40 = lbind(shift, x39)\n    "], [1.1, "def solve_3f143bae(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(color, TWO)\n    x9 = rbind(colorcount, x3)\n    x10 = compose(x9, palette)\n    x11 = argmin(x7, x10)\n    x12 = other(x7, x11)\n    x13 = remove(x11, x7)\n    x14 = normalize(x13)\n    x15 = last(x14)\n    x16 =495(x15)\n    x17 = color(x11)\n    x18 = remove(x16, x15)\n    x19 = repeat(x17, ONE)\n    x20 = combine(x18, x19)\n    x21 = fgpartition(x20)\n    x22 = argmax(x21, lowermost)\n    x23 = add(x22, UP)\n    x24 = initset(x23)\n    x25 = insert(x22, x24)\n    x26 = lbind(intersection, x25)\n    x27 = compose(x26, last)\n    x28 = fork(recolor, first, x27)\n    x29 = normalize(x25)\n    x30 = objects(x6, T, F, T)\n    x31 = apply(toindices, x30)\n    x32 = lbind(shift, x29)\n    x33 = mapply(x32, x31)\n    x34 = paint(x20, x33)\n    x35 = rot90(x34)\n    x36 = paint(x35, x4)\n    x37 = rot90(x36)\n    x38 = paint(x37, x4)\n    x39 = rot90(x38)\n    x40 = paint(x39, x4)\n    x41 = rot90(x40)\n    x42 = paint("], [1.1, "def solve_f01b5c3d(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = hmirror(x4)\n    x41 = lrcorner(x4)\n"], [1.1, "def solve_7a16d774(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_14e52772(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_5d426466(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = neighbors(x6)\n    x15 = increment(x4)\n    x16 = insert(x15, x14)\n    x17 = initset(x16)\n    x18 =insert(x33, x17)\n    x19 = height(x12)\n    x20 = increment(x4)\n    x21 = insert(x19, x20)\n    x22 = width(x12)\n    x23 = increment(x4)\n    x24 = interval(ZERO, x23, ONE)\n    x25 = lbind(toobject, x12)\n    x26 = increment(x22)\n    x27 = increment(x25)\n    x28 = add(x26, x27)\n    x29 = lbind(toobject, x13)\n    x30 = increment(x24)\n    x31 = increment(x25)\n    x32 = astuple(ZERO, x30)\n    x33 = astuple(ZERO, x31)\n    x34 = add(x32, x33)\n    x35 = lbind(recolor, x3)\n    x36 =decrement(x34)\n    x37 = lbind(ofcolor, x12)\n    x38 = crop(x12, x36, x37)\n    x39 = compose(x35, x38)\n    x40 = power(x39, THREE)\n    x41 = x40(x32)\n    x42 = papply(recolor, x41, x38)\n    O"], [1.1, "def solve_39f3fad4(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, FOUR)\n    x6 = compose(fdg54444(I)\n    x7 = chain(x4, x5, x6)\n    x8 = rbind(repeat, ONE)\n    x9 = compose(x8, x7)\n    x10 = rbind(compose, x4)\n    x11 = lbind(rbind, NEG_ONE)\n    x12 = compose(x11, x10)\n    x13 = chain(x9, x12, x7)\n    x14 = chain(x11, x10, x13)\n    x15 = lbind(lbind, x4)\n    x16 = compose(x15, x14)\n    x17 = fork(compose, x7, x16)\n    x18 = fork(combine, x17, x1111)\n    x19 = lbind(rbind, rot90)\n    x20 = chain(x19, x19, x7)\n    x21 = double(EIGHT)\n    x22 = interval(TWO, x21, ONE)\n    x23 = lbind(x20, x174)\n    x24 = chain(x23, x21, x20)\n    x25 = lbind(lbind, rot270)\n    x26 = chain(x25, rbind, x24)\n    x27 = fork(compose, x28, x26)\n    x28 = lbind(rbind, rot90)\n    x29 = chain(x28, x27, x29)\n    x30 = lbind(lbind, rot270)\n    x31 = chain(x30, rbind, x29)\n    x32 = lbind(lbind, invert)\n    x33 = chain(x32, x31, x18)\n    x34 = fork(compose, x29, x28)\n    x35 = fork(compose, x30, x33)\n    x"], [1.1, "def solve_ad891ae2(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_592eccd8(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = width(x4)\n    x6 = toivec(x5)\n    x7 = index(x4, x6)\n    x8 = shape(x4)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x4, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, rot90)\n    x16 = lbind(power, rot270)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x13)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x19)\n    x24 = uppermost(x12)\n    x25 = lbind(add, x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = lbind(multiply, x27)\n    x29 = chain(toivec, x25, x28)\n    x30 = fork(shift, x23, x29)\n    x31 = compose(asobject, x22)\n    x32 = uppermost(x12)\n    x33 = lbind(subtract, x32)\n    x34 = height(x12)\n    x35 = increment(x34)\n    x36 = lbind(multiply, x35)\n    x37 = chain(toivec, x33, x36)\n    x38 = fork(shift, x31, x37)\n    x39 = fork(combine"], [1.1, "def solve_1e58757b(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    x3 = add(TWO, x2)\n    x4 = canvas(x1, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = paint(x4, x6)\n    x8 = double(SIX)\n    x9 = astuple(ONE, x8)\n    x10 = connect(UNITY, x9)\n    x11 = outbox(x10)\n    x12 = backdrop(x11)\n    x13 = recolor(x1, x12)\n    x14 = recolor(THREE, x10)\n    x15 = lbind(shift, x14)\n    x16 = lbind(mapply, x15)\n    x17 = rbind(occurrences, x13)\n    x18 = compose(x16, x17)\n    x19 = fork(paint, identity, x18)\n    x20 = x19(x7)\n    x21 = ofcolor(x20, THREE)\n    x22 = dmirror(x7)\n    x23 = x19(x22)\n    x24 = dmirror(x23)\n    x25 = ofcolor(x24, THREE)\n    x26 = combine(x21, x25)\n    x27 = fill(x7, THREE, x26)\n    x28 = astuple(TWO, ONE)\n    x29 = dneighbors(UNITY)\n    x30 = remove(x28, x29)\n    x31 = recolor(x1, x30)\n    x32 = initset(UNITY)\n    x33 = recolor(THREE, x32)\n    x34 = combine(x31, x33)\n    x35 = recolor(x1, x34)\n    x36 = astuple(ONE, THREE)\n    x37 = initset(x36)\n    x38 = insert(ZERO_BY_TWO, x37)\n    x39 = insert(RIGHT, x38)\n    x40 = insert(DOWN, x39)\n    x41 ="], [1.1, "def solve_34114419(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(toindices, x3)\n    x5 = partition(I)\n    x6 = fork(equality, identity, corners)\n    x7 = difference(x5, x4)\n    x8 = extract(x7, x6)\n    x9 = leastcolor(x8)\n    x10 = matcher(dmirror, x8)\n    x11 = extract(x10, x6)\n    x12 = lbind(compose, flip)\n    x13 = rbind(matcher, x12)\n    x14 = compose(x13, identity)\n    x15 = lbind(fork, sfilter)\n    x16 = lbind(x15, identity)\n    x17 = lbind(lbind, extract)\n    x18 = compose(x16, x17)\n    x19 = lbind(ofcolor, I)\n    x20 = compose(x19, mostcolor)\n    x21 = fork(apply, x18, x20)\n    x22 = compose(x12, x21)\n    x23 = fork(hmirror, x22, identity)\n    x24 = compatible(x8, x11)\n    x25 = contained(x24, x11)\n    x26 =356(x25, UNITY)\n    x27 = canvas(x9, x26)\n    x28 = asobject(x27)\n    x29 = paint(x27, x28)\n    x30 = height(x28)\n    x31 = width(x28)\n    x32 = divide(x30, x31)\n    x33 = increment(x32)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = compose(double, halve)\n    x36 = lbind(apply, last)\n    x37 = lbind(sfilter, x34)\n    x38 = chain(x37, x35, x36)\n    x39 = lbind(shift, x28)\n    x40 = compose(x39, toivec"], [1.1, "def solve_62730e66(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = compose(x5, color)\n    x7 = compose(double, x4)\n    x8 = lbind(prapply, manhattan)\n    x9 = fork(x8, identity, x7)\n    x10 = lbind(remove, ZERO)\n    x11 = compose(x10, x9)\n    x12 = rbind(branch, NEG_TWO)\n    x13 = fork(x12, positive, x11)\n    x14 = chain(x13, minimum, x11)\n    x15 = fork(add, x14, x7)\n    x16 = chain(x5, x13, x15)\n    x17 = compose(initset, x16)\n    x18 = fork(rapply, x17, x14)\n    x19 = compose(first, x18)\n    x20 = compose(x5, x19)\n    x21 = extract(x2, x20)\n    x22 = first(x21)\n    x23 = last(x21)\n    x24 = divide(x6, x23)\n    x25 = increment(x24)\n    x26 = width(I)\n    x27 = interval(ZERO, x26, x25)\n    x28 = apply(tojvec, x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x27)\n    x31 = fill(I, FIVE, x30)\n    x32 = objects(x31, T, F, T)\n    x33 = colorfilter(x32, FIVE)\n    x34 = apply(first, x33)\n    x35 = valmax(x34, size)\n    x36 = x35(x34)\n    x37 = equality(x36, ONE)\n    x38 = branch(x37, x35, x34)\n    x39"], [1.1, "def solve_c04cbcc9(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =407960873df22(x1, x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(x5, I)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x8, x18)\n    x20 = lbind(colorcount, x17)\n    x21 = argmin(x19, x20)\n    x22 = rbind(colorcount, x21)\n    x23 = rbind(toobject, I)\n    x24 = chain(x22, x23, x28)\n    x25 = colorfilter(x1, x24)\n    x26 = sfilter(x25, x28)\n    x27 = difference(x25, x26)\n    x28 = objects(x27, T, T, T)\n    x29 = rbind(colorcount, x21)\n    x30 = argmax(x29, x28)\n    x31 = subgrid(x30, x27)\n    x32 = rbind(order, identity)\n    x33 = apply(x32, x31)\n    x34 = vmirror(x31)\n    x35 = x36(x34)\n    x36 = x33(x35)\n    x37 = hconcat(x35, x36)\n    x38 = objects(x37, T, T, T)\n    x39 = apply"], [1.1, "def solve_cd4b13d1(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = astuple(d13, c)\n    x9 = astuple(x10, x7)\n    x10 = hline(x8)\n    x11 = ulcorner(x8)\n    x12 = shoot(x11, UNITY)\n    x13 =7220(x12)\n    x14 = mapply(first, x12)\n    x15 =18722224(x14)\n    x16 = center(x15)\n    x17 = matcher(first, x7)\n    x18 = sfilter(x1, x17)\n    x19 = lbind(adjacent, x8)\n    x20 = mfilter(x18, x19)\n    x21 = toindices(x20)\n    x22 = NEG_UNITY(x21)\n    x23 = uppermost(x20)\n    x24 = shoot(x23, UNITY)\n    x25 = size(x24)\n    x26 = increment(x25)\n    x27 = matcher(first, x8)\n    x28 = compose(flip, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = lbind(recolor, x3)\n    x31 = compose(x30, mostcolor)\n    x32 = fork(combine, x29, x31)\n    x33 = lbind(lbind, shift)\n    x34 = lbind(occurrences, I)\n    x35 = compose(x33, x34)\n    x36 = lbind(mapply, x35)\n    x37 = chain(x36, x33, x28)\n    x38 = fork(mapply, x24, x17)\n    x39 = fork(mapply, x28, xcolor)\n    x40 = fork(combine, x38, x39)"], [1.1, "def solve_efe3bb69(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = lbind(index, I)\n    x2 = compose(x1, size)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(775, x5)\n    x5 = astuple(cmirror, x3)\n    x6 = combine(x4, x5)\n    x7 = fork(vsplit, identity, height)\n    x8 = chain(asobject, first, x7)\n    x9 = mostcolor(I)\n    x10 = matcher(x8, x9)\n    x11 = compose(flip, x10)\n    x12 =1111(I)\n    x13 = rbind(f25fb575, x12)\n    x14 = rbind(sfilter, x11)\n    x15 = compose(x14, dneighbors)\n    x16 = chain(x13, x15, toindices)\n    x17 = fork(mapply, x16, identity)\n    x18 = compose(x12, x17)\n    x19 = fork(intersection, x18, toindices)\n    x20 = compose(size, x19)\n    x21 = matcher(x20, ZERO)\n    x22 = lbind(apply, x9)\n    x23 = chain(flip, x21, x22)\n    x24 = fork(mapply, x18, x23)\n    x25 = shape(I)\n    x26 = maximum(x25)\n    x27 = toindices(x26)\n    x28 = ZERO(x25)\n    x29 = toindices(x28)\n    x30 =multiply(x27, x29)\n    x31 = rbind(add, x30)\n    x32 = lbind(object, I)\n    x33 = compose(x31, x32)\n    x34 = ofcolor(x12, x19)\n    x35 = ofcolor(x21, x12)\n    x36 = intersection(x34, x35)\n    x37 = fill(x12, TWO, x36)\n    x38 = lbind(chain, size)\n    x39 = compose"], [1.1, "def solve_130c80b4(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_5e543a93(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, branch)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)\n    "], [1.1, "def solve_79ad0713(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(identity, dmirror)\n    x5 = astuple(cmirror, hmirror)\n    x6 = combine(x4, x5)\n    x7 = rbind(rapply, I)\n    x8 = compose(first, x7)\n    x9 = chain(x3, x8, initset)\n    x10 = extract(x6, x9)\n    x11 = x10(I)\n    x12 = mostcolor(I)\n    x13 = palette(I)\n    x14 = remove(x12, x13)\n    x15 = restuple(x14)\n    x16 = ofcolor(x11, x12)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, identity, vmirror)\n    x20 = x19(x11)\n    x21 = ofcolor(x20, x12)\n    x22 = ofcolor(x20, x12)\n    x23 = leftmost(x22)\n    x24 = equality(x23, ZERO)\n    x25 = branch(x24, identity, hmirror)\n    x26 = x25(x11)\n    x27 = ofcolor(x26, x12)\n    x28 = ofcolor(x26, x12)\n    x29 = rbind(add, DOWN)\n    x30 = compose(x29, last)\n    x31 = fork(equality, identity, x30)\n    x32 = compose(flip, x31)\n    x33 = extract(x27, x32)\n    x34 = x33(x26)\n    x35 = toindices(x34)\n    x36 = first(x35)\n    x37 = last(x35)\n    x38 =573(x36, x37)\n    x39 = shift(x38, x34)\n    x40 = paint(x11, x39)\n    x"], [1.1, "def solve_f8d876b8(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_758888ad(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = fork(shoot, identity, corners)\n    x8 = compose(x7, center)\n    x9 = fork(shoot, identity, x8)\n    x10 = size(x6)\n    x11 = lefthalf(I)\n    x12 = righthalf(I)\n    x13 = rbind(order, identity)\n    x14 = rbind(order, incd)\n    x15 = compose(x13, x14)\n    x16 = lbind(rbind, shift)\n    x17 = compose(x16, x15)\n    x18 = fork(compose, x17, x15)\n    x19 = lbind(lbind, mapply)\n    x20 = compose(x19, x18)\n    x21 = fork(sfilter, x18, x20)\n    x22 = compose(size, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(I)\n    x26 = colorfilter(x25, x24)\n    x27 = compose(maximum, shape)\n    x28 = argmin(x26, x27)\n    x29 = color(x28)\n    x30 = remove(x28, x26)\n    x31 = x30(x36)\n    x32 = mapply(neighbors, x31)\n    x33 = difference(x32, x32)\n    x34 = toobject(x33, I)\n    x35 = apply(x38, x34)\n    x36 = size(x35)\n    x37 = sfilter(x33, x36)\n    x38 = toobject(x37, I)\n    x39 = difference(x34, x38)\n    x40 = canvas(x39, UNITY)\n    x41 = paint(x40, x"], [1.1, "def solve_3e5c6825(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = width(x4)\n    x6 = toivec(x5)\n    x7 = index(x4, x6)\n    x8 = shape(x4)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x4, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, rot90)\n    x16 = lbind(power, rot270)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x13)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x19)\n    x24 = uppermost(x12)\n    x25 = lbind(add, x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = lbind(multiply, x27)\n    x29 = chain(toivec, x25, x28)\n    x30 = fork(shift, x23, x29)\n    x31 = compose(asobject, x22)\n    x32 = uppermost(x12)\n    x33 = lbind(subtract, x32)\n    x34 = height(x12)\n    x35 = increment(x34)\n    x36 = lbind(multiply, x35)\n    x37 = chain(toivec, x33, x36)\n    x38 = fork(shift, x31, x37)\n    x39 = fork(combine"], [1.1, "def solve_ff2c5f3b(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = palette(I)\n    x2 = compose(maximum, shape)\n    x3 = lbind(apply, x2)\n    x4 = lbind(ofcolor, I)\n    x5 = chain(x3, x4, x2)\n    x6 = compose(maximum, shape)\n    x7 = fork(equality, x5, x6)\n    x8 =    filter(x1, x7)\n    x9 = lbind(index, I)\n    x10 = compose(x9, x7)\n    x11 = fork( equality, x10, x6)\n    x12 = fork(either, x12, x11)\n    x13 = matcher(x10, ZERO)\n    x14 = sfilter(x8, x13)\n    x15 = difference(x8, x14)\n    x16 = lbind(colorcount, I)\n    x17 =765d511(x16)\n    x18 = argmin(x15, x17)\n    x19 = ofcolor(I, x18)\n    x20 = urcorner(x14)\n    x21 = ulcorner(x14)\n    x22 = subtract(x20, x21)\n    x23 = colorfilter(x19, x22)\n    x24 = count27(x23)\n    x25 = asobject(I)\n    x26 = subgrid(x25, x24)\n    x27 = asindices(x26)\n    x28 = toobject(x27, x26)\n    x29 = mostcolor(x28)\n    x30 = ofcolor(x26, x29)\n    x31 = replace(I, x18, x29)\n    x32 = x29(x31)\n    x33 = asobject(x32)\n    x34 = occurrences(x31, x33)\n    x35 = mapply(first, x34)\n    x36 = maximum(x31)\n    x37 = downscale(x35, x36)\n    x38 = asindices(x37)\n    x39 = box(x38)\n    x40 = fill(x37, x39, x37)\n    "], [1.1, "def solve_0c7785d7(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_7ee58563(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_e3e13ea9(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = switch(I, THREE, FOUR)\n    x2 = ofcolor(x1, ZERO)\n    x3 = asindices(x1)\n    x4 = difference(x3, x2)\n    x5 = normalize(x4)\n    x6 = recolor(ONE, x5)\n    x7 = mostcolor(I)\n    x8 = paint(x1, x7)\n    O = compose(initset, lrcorner)\n    x19 = fork( insert, ulcorner, x8)\n    x20 = insert(I, x4)\n    x21 = insert(lrcorner, x20)\n    x22 = fork(contained, square, identity)\n    x23 = compose(x22, ulcorner)\n    x24 = astuple(normalize, NEG_TWO)\n    x25 = branch(x11, x24, x23)\n    x26 = asindices(x1)\n    x27 = box(x26)\n    x28 = toobject(x27, I)\n    x29 = combine(x28, x25)\n    x30 = mostcolor(x29)\n    x31 = matcher(x23, x30)\n    x32 = compose(flip, x31)\n    x33 = rbind(sfilter, x32)\n    x34 = chain(positive, size, x33)\n    x35 = rbind(sfilter, x24)\n    x36 = compose(maximum, x35)\n    x37 = apply(x36, x22)\n    x38 = lbind(fork, FIVE)\n    x39 = lbind(x38, identity)\n    x40 = lbind(lbind, shift)\n    x41 = compose(x39, x40)\n    x42 = lbind(chain, x40)\n    x43 = rbind(x42, x30)\n    x44 = lbind(rbind, occurrences)\n    x45 = chain(x41, x44, identity)\n    x46 = lbind(compose, x flip)\n    x47 = chain(x41, x46, identity)\n    x48 = lbind"], [1.1, "def solve_aa09ef21(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_4df48e23(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_6ed670a2(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_945f0060(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = compose(x32, leftmost)\n    x37 = rbind(compose, x30)\n    x38 = lbind(compose, x37)\n    x39 = lbind(x31, x15)\n    x40 = rbind(sfilter, x35)\n    x41 = chain(x39, x40, size)\n    x42 = lbind(d"], [1.1, "def solve_0509b41f(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_94c8c5ba(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_8a3f88b0(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_7a50a92e(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = vmirror(I)\n    x2 = fgpartition(x1)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = index(x1, x4)\n    x6 = portrait(x5)\n    x7 = branch(x6, identity, dmirror)\n    x8 = x7(x1)\n    x9 = objects(x8, T, F, T)\n    x10 = branch(x6, identity, vmirror)\n    x11 = x10(x9)\n    x12 = mostcolor(I)\n    x13 = shape(x11)\n    x14 = canvas(x12, x13)\n    x15 = hconcat(x11, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = apply(uppermost, x16)\n    x18 = size(x17)\n    x19 = order(x17, uppermost)\n    x20 = apply(color, x19)\n    x21 = extract(x20, last)\n    x22 = remove(x21, x19)\n    x23 = argmin(x22, uppermost)\n    x24 = other(x22, x23)\n    x25 = color(x23)\n    x26 = color(x24)\n    x27 = fill(x15, x23, x24)\n    x28 = fill(x27, x26, x25)\n    x29 = fill(x28, x26, x21)\n    x30 = dmirror(x29)\n    x31 = papply(pair, x29, x30)\n    x32 = lbind(apply, maximum)\n    x33 = rbind(sfilter, x32)\n    x34 = chain(cde solve, x33, x24)\n    x35 = pair(x31, x31)\n    x36 = apply(x34, x35)\n    x37 =50(x36)\n    x38 = height(x36)\n    x39 = apply(size, x36)\n    x40 = repeat(x39, ONE)\n    "], [1.1, "def solve_e6d9f80c(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = compose(first, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = compose(last, last)\n    x8 = totuple(x2)\n    x9 = apply(x7, x8)\n    x10 = mostcommon(x9)\n    x11 = compose(first, last)\n    x12 = matcher(x11, x6)\n    x13 = sfilter(x2, x12)\n    x14 = compose(last, last)\n    x15 = matcher(x14, x10)\n    x16 = sfilter(x2, x15)\n    x17 = objects(I, F, T, T)\n    x18 = size(x17)\n    x19 = equality(x18, TWO)\n    x20 = mfilter(x17, hline)\n    x21 = mfilter(x17, vline)\n    x22 = branch(x19, x20, x13)\n    x23 = branch(x19, x21, x16)\n    x24 = width(x22)\n    x25 = lbind(multiply, x24)\n    x26 = width(I)\n    x27 = divide(x26, x24)\n    x28 = increment(x27)\n    x29 = interval(ZERO, x28, ONE)\n    x30 = apply(x25, x29)\n    x31 = apply(invert, x30)\n    x32 = combine(x30, x31)\n    x33 = apply(tojvec, x32)\n    x34 = lbind(shift, x22)\n    x35 = mapply(x34, x33)\n    x36 = height(x23)\n    x37 = lbind(multiply, x36)\n    x38 = height(I)\n    x39 = height(x22)\n    x40 = divide(x38, x39)\n    x41 = increment(x40)\n    x42 = interval"], [1.1, "def solve_3a4e1012(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = partition(I)\n    x6 = fork(multiply, height, width)\n    x7 = fork(equality, size, x6)\n    x8 = extract(x5, x7)\n    x9 = color(x8)\n    x10 = palette(I)\n    x11 = remove(x4, x10)\n    x12 = other(x11, x9)\n    x13 = ofcolor(I, x12)\n    x14 = vmirror(x13)\n    x15 = hmirror(x13)\n    x16 = toindices(x8)\n    x17 = combine(x16, x13)\n    x18 = height(x17)\n    x19 = halve(x18)\n    x20 = increment(x19)\n    x21 = width(x17)\n    x22 = halve(x21)\n    x23 = increment(x22)\n    x24 = astuple(x20, x23)\n    x25 = maximum(x24)\n    x26 = invert(x25)\n    x27 = increment(x25)\n    x28 = interval(x26, x27, ONE)\n    x29 = product(x28, x28)\n    x30 = initset(x15)\n    x31 = insert(x14, x30)\n    x32 = product(x29, x31)\n    x33 = ofcolor(I, x4)\n    x34 = rbind(intersection, x33)\n    x35 = fork(shift, last, first)\n    x36 = chain(size, x34, x35)\n    x37 = matcher(x36, ZERO)\n    x38 = sfilter(x32, x37)\n    x39 = rbind(intersection, x13)\n    x40 = fork(shift, last, first)\n    x41 = chain(size, x39, x40)\n    x42 = argmax(x38, x41"], [1.1, "def solve_a3be86c6(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivef15, x1)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4"], [1.1, "def solve_10a4f2de(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = inbox(x20)\n    x22 = cover(I, x21)\n    x23 = lrcorner(x206)\n    x24 = ofcolor(x22, x18)\n    x25 = inbox(x24)\n    x26 = recolor(x18, x24)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, x22)\n    x29 = color(x28)\n    x30 = inbox(x25)\n    x31 = recolor(x29, x25)\n    x32 = combine(x27, x31)\n    x33 = mapply(d90, x32)\n    x34 = fill(x22, x1, x33)\n    x35 = ofcolor(x34, x19)\n    x36 = subgrid(x35, x34)\n    x37 = asindices(x36)\n    x38 = box(x37)\n    x39 = fill(x34, x19, x38)\n    x40 = difference(x37, x"], [1.1, "def solve_973bb449(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = chain(double, last, first)\n    x4 = fork(equality, x3, x2)\n    x5 = sfilter(x1, x4)\n    x6 = vsplit(I, TWO)\n    x7 = rbind(hsplit, TWO)\n    x8 = extract(x6, x7)\n    x9 =150(x8)\n    x10 = last(x8)\n    x11 = remove(x10, x8)\n    x12 = solve(hline, x11)\n    x13 = center(x12)\n    x14 = dneighbors(x13)\n    x15 = insert(x13, x14)\n    x16 = toobject(x15, I)\n    x17 = mostcolor(x16)\n    x18 = palette(x16)\n    x19 = remove(x17, x18)\n    x20 = valuple(x19, x15)\n    x21 = other(x19, x20)\n    x22 = replace(x9, x21, x11)\n    x23 = combine(x15, x22)\n    x24 = ofcolor(x23, x21)\n    x25 = mapply(dneighbors, x24)\n    x26 = astuple(x25, x22)\n    x27 = other(x25, x26)\n    x28 = color(x27)\n    x29 = color(x8)\n    x30 = greater(x26, x29)\n    x31 = branch(x30, identity, dneighbors)\n    x32 = initset(x13)\n    x33 = insert(x32, x31)\n    x34 = insert(x17, x33)\n    x35 = hconcat(x34, x111)\n    x36 = vconcat(x35, x111)\n    x37 = vconcat(x36, x36)\n    x38 = vconcat(x37, x36)\n    x39 = halve(x38)\n    x40 = dneighbors"], [1.1, "def solve_fd7d21a8(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_90589327(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_074d71dc(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(identity, dmirror)\n    x5 = astuple(cmirror, hmirror)\n    x6 = combine(x4, x5)\n    x7 = rbind(rapply, I)\n    x8 = compose(first, x7)\n    x9 = chain(x3, x8, initset)\n    x10 = extract(x6, x9)\n    x11 = x10(I)\n    x12 = mostcolor(I)\n    x13 = palette(I)\n    x14 = remove(x12, x13)\n    x15 = other(x14, TWO)\n    x16 = ofcolor(x11, x15)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, identity, vmirror)\n    x20 = x19(x11)\n    x21 = ofcolor(x20, x15)\n    x22 = ofcolor(x20, TWO)\n    x23 = apply(last, x22)\n    x24 = insert(ZERO, x23)\n    x25 = width(x20)\n    x26 = insert(x25, x24)\n    x27 = order(x26, identity)\n    x28 = last(x27)\n    x29 = remove(x28, x27)\n    x30 = first(x27)\n    x31 = remove(x30, x27)\n    x32 = pair(x29, x31)\n    x33 = size(x29)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = pair(x34, x32)\n    x36 = lbind(fork, connect)\n    x37 = compose(first, last)\n    x38 = chain(decrement, last, last)\n    x39 = lbind(lbind, add)\n    x40 = compose(x39, first)\n    x41 = lbind("], [1.1, "def solve_fd4053c0(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_8ada2fb9(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = compose(first, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = compose(last, last)\n    x8 = totuple(x2)\n    x9 = apply(x7, x8)\n    x10 = mostcommon(x9)\n    x11 = compose(first, last)\n    x12 = matcher(x11, x6)\n    x13 = sfilter(x2, x12)\n    x14 = compose(last, last)\n    x15 = matcher(x14, x10)\n    x16 = sfilter(x2, x15)\n    x17 = objects(I, F, T, T)\n    x18 = size(x17)\n    x19 = equality(x18, TWO)\n    x20 = mfilter(x17, hline)\n    x21 = mfilter(x17, vline)\n    x22 = branch(x19, x20, x13)\n    x23 = branch(x19, x21, x16)\n    x24 = width(x22)\n    x25 = lbind(multiply, x24)\n    x26 = width(I)\n    x27 = divide(x26, x24)\n    x28 = increment(x27)\n    x29 = interval(ZERO, x28, ONE)\n    x30 = apply(x25, x29)\n    x31 = apply(invert, x30)\n    x32 = combine(x30, x31)\n    x33 = apply(tojvec, x32)\n    x34 = lbind(shift, x22)\n    x35 = mapply(x34, x33)\n    x36 = height(x23)\n    x37 = lbind(multiply, x36)\n    x38 = height(I)\n    x39 = height(x22)\n    x40 = divide(x38, x39)\n    x41 = increment(x40)\n    x42 = interval"], [1.1, "def solve_e6eb1aed(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 =8888(I, TWO)\n    x2 = apply(d687, x1)\n    x3 = height(x2)\n    x4 = width(x2)\n    x5 = trim(x2)\n    x6 = FOUR(x5)\n    x7 = equality(x6, ONE)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = uppermost(x10)\n    x12 = leftmost(x10)\n    x13 = index(x9, x11)\n    x14 = uppermost(x12)\n    x15 = rightmost(x12)\n    x16 = index(x9, x15)\n    x17 = decrement(x13)\n    x18 = leftmost(x2)\n    x19 = initset(x18)\n    x20 = insert(x11, x19)\n    x21 = difference(x10, x20)\n    x22 =698( fill, FOUR, x21)\n    x23 = objects(x22, T, F, T)\n    x24 = apply(toindices, x23)\n    x25 = lbind(index, x9)\n    x26 = compose(x25, shape)\n    x27 = astuple(x17, x26)\n    x28 = lbind(multiply, x27)\n    x29 = apply(x28, x24)\n    x30 = order(x29, identity)\n    x31 = lbind(apply, last)\n    x32 = lbind(rbind,ofcolor)\n    x33 = rbind(sfilter, x31)\n    x34 = rbind(compose, palette)\n    x35 = lbind(lbind, contained)\n    x36 = chain(x34, x33, x35)\n    x37 = rbind(sfilter, x32)\n    x38 = rbind(compose, palette)\n    x39 = lbind(lbind, contained)\n    x40 = chain(x37, x38, x39)\n    x41 = x36"], [1.1, "def solve_a1d7d322(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_9e476659(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_aa1951bb(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18, x"], [1.1, "def solve_7ddbef2c(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(F, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(F, x21)\n    x23 = color(I)\n    x24 = canvas(x23, x22)\n    x25 = colorcount(I, x7)\n    x26 = decrement(x25)\n    x27 = tojvec(x26)\n    x28 = connect(ORIGIN, x27)\n    x29 = height(I)\n    x30 = equality(x29, x27)\n    x31 = decrement(x30)\n    x32 = tojvec(x31)\n    x33 = connect(ORIGIN, x32)\n    x34 = width(I)\n    x35 = increment(x34)\n    x36 = tojvec(x35)\n    x37 = decrement(x36)\n    x38 = tojvec(x37)\n    x39 = connect(ORIGIN, x38)\n    x40 = height(I)\n    x41 = decrement(x40)\n    x42 = toivec(x41)\n    x43 = subtract(x42, x31)\n    x44 = width(I)\n    x45 = decrement(x44)\n    x46 = tojvec"], [1.1, "def solve_a9d5674a(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, vmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = divide(x17, x14)\n    x19 = increment(x18)\n    x20 = interval(ZERO, x19, ONE)\n    x21 = width(x3)\n    x22 = multiply(x21, x14)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x18)\n    x25 = rbind(divide, x18)\n    x26 = compose(x24, x25)\n    x27 = apply(x26, x20)\n    x28 = astuple(x19, x22)\n    x29 = lbind(multiply, x28)\n    x30 = apply(x29, x21)\n    x31 = apply(x30, x23)\n    x32 = combine(x29, x31)\n    x33 = mapply(x17, x32)\n    x34 = astuple(x3, x2005)\n    x35 = canvas(ZERO, x34)\n    x36 = asindices(x35)\n    x37 = shift(x36, x37)\n    x38 = shape(I)\n    x39 = maximum(x38)\n    x40 = lbind(multiply,"], [1.1, "def solve_adcb5fc4(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x20, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = compose(x36, first)\n    x38 = argmin(x35, x37)\n    x39 = first(x38)\n    x40"], [1.1, "def solve_e39c9ff0(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = fork(combine, first, last)\n    x9 = compose(x8, vmirror)\n    x10 = totuple(x7)\n    x11 = apply(x9, x10)\n    x12 = mostcommon(x11)\n    x13 = matcher(x9, x12)\n    x14 = extract(x11, x13)\n    x15 = last(x14)\n    x16 = height(x15)\n    x17 = rot90(I)\n    x18 = interval(ZERO, x17, ONE)\n    x19 = rbind(multiply, x16)\n    x20 = apply(x19, x18)\n    x21 = rbind(multiply, x16)\n    x22 = apply(x21, x18)\n    x23 = pair(x20, x22)\n    x24 = lbind(canvas, ZERO)\n    x25 = compose(x24, last)\n    x26 = fork(other, first, x25)\n    x27 = palette(I)\n    x28 = mostcolor(I)\n    x29 = remove(x28, x29)\n    x30 = lbind(hconcat, I)\n    x31 = argmin(x30, x30)\n    x32 = ofcolor(x15, x31)\n    x33 = mapply(vfrontier, x32)\n    x34 = mapply(hfrontier, x32)\n    x35 = size(x13)\n    x36 = size(x34)\n    x37 = greater(x35, x36)\n    x38 = rbind(canvas, xcolor)\n    x39 = chain(x38, asobject, x38)\n    x40 = compose(first"], [1.1, "def solve_93e42771(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 =8888888888888888888888\n    x2 = astuple(identity, dmirror)\n    x3 = astuple(cmirror, hmirror)\n    x4 = combine(x2, x3)\n    x5 = rbind(rapply, I)\n    x6 = chain(first, x5, initset)\n    x7 = rbind(ofcolor, EIGHT)\n    x8 = chain(lowermost, x7, x6)\n    x9 = chain(decrement, height, x6)\n    x10 = fork(equality, x8, x9)\n    x11 = extract(x4, x10)\n    x12 = x11(I)\n    x13 = ofcolor(x12, ZERO)\n    x14 = dmirror(x13)\n    x15 = width(x12)\n    x16 = decrement(x15)\n    x17 = tojvec(x16)\n    x18 = invert(x17)\n    x19 = rightmost(x13)\n    x20 = decrement(x19)\n    x21 = tojvec(x20)\n    x22 = invert(x21)\n    x23 = astuple(x18, x22)\n    x24 = maximum(x23)\n    x25 = dmirror(x24)\n    x26 = astuple(x24, x25)\n    x27 = branch(x12, x26, x24)\n    x28 = lbind(apply, maximum)\n    x29 = lbind(min, x24)\n    x30 = rbind(rbind, ZERO)\n    x31 = compose(x30, x28)\n    x32 = rbind(sfilter, x31)\n    x33 = lbind(pair, x27)\n    x34 = chain(x32, x33, x25)\n    x35 = rbind(apply, x14)\n    x36 = compose(x35, x24)\n    x37 = fork(add, x36, x34)\n    x38 = rbind(apply, x16)\n    x39 = compose(x38,"], [1.1, "def solve_8a010aa2(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 =78748ivec(x5)\n    x7 = palette(x6)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x11, T, F, T)\n    x13 = colorfilter(x12, x10)\n    x14 = rbind(manhattan, x13)\n    x15 = argmin(x12, x14)\n    x16 = ofcolor(x15, x10)\n    x17 = first(x16)\n    x18 = initset(x17)\n    x19 = argman(x18, x10)\n    x20 = lbind(argmin, x17)\n    x21 = lbind(rbind, manhattan)\n    x22 = compose(x21, initset)\n    x23 = rbind(argmin, x22)\n    x24 = rbind(rbind, manhattan)\n    x25 = compose(x23, x24)\n    x26 = fork(gravitate, identity, x25)\n    x27 = fork(add, identity, x26)\n    x28 = fork(connect, identity, x27)\n    x29 = rbind(2ordering, x11)\n    x30 = rbind(order, uppermost)\n    x31 = chain(x29, x30, x27)\n    x32 = apply(x31, x5)\n    x33 = rbind(contained, x32)\n    x34 = apply(x33, x553)\n    x35 = either(x20, x34)\n    x36 = branch(x35, x22, x25)\n    x37 = objects(x36, T, F, T)\n    x38 = rbind(colorcount, x11)\n    x39 = valmax(x37"], [1.1, "def solve_e7b3c1d2(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x8, x7)\n    x11 = remove(x9, x10)\n    x12 = Mehindices(x8)\n    x13 = merge(x12)\n    x14 = fill(I, x3, x13)\n    x15 = objects(x14, F, F, T)\n    x16 = argmin(x15, leftmost)\n    x17 = argmax(x15, leftmost)\n    x18 = vmirror(x16)\n    x19 = vmirror(x17)\n    x20 = dmirror(x18)\n    x21 = cmirror(x19)\n    x22 = hmirror(x20)\n    x23 = hmirror(x21)\n    x24 =vsplit(x14, x22)\n    x25 = vmirror(x23)\n    x26 = hmirror(x24)\n    x27 = hmirror(x25)\n    x28 = vmirror(x26)\n    x29 = vmirror(x27)\n    x30 = hmirror(x28)\n    x31 = ulcorner(x16)\n    x32 = llcorner(x16)\n    x33 = subtract(x31, x32)\n    x34 = rbind(valmin, x23)\n    x35 = other(x22, x39)\n    x36 = delta(x35)\n    x37 = fill(x14, x3, x36)\n    x38 = objects(x37, F, F, T)\n    x39 = colorfilter(x38, x5)\n    x40 =adjacent(x38, x39)\n    x41 = r"], [1.1, "def solve_ac23c8d7(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = increment(x39)\n    x41 = interval(ZERO, x40, ONE)\n    x42 = apply(tojvec"], [1.1, "def solve_01bcf5ef(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_f2bf5784(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = vline(x1)\n    x3 = branch(x2, dmirror, identity)\n    x4 = x3(I)\n    x5 = ofcolor(x4, THREE)\n    x6 = ofcolor(x4, TWO)\n    x7 = center(x5)\n    x8 = hfrontier(x7)\n    x9 = center(x6)\n    x10 = hfrontier(x9)\n    x11 = mostcolor(I)\n    x12 = palette(I)\n    x13 = remove(THREE, x12)\n    x14 = remove(TWO, x13)\n    x15 = other(x14, x11)\n    x16 = replace(x4, THREE, x11)\n    x17 = difference(x8, x5)\n    x18 = underfill(x16, x17, x15)\n    x19 = replace(x4, TWO, x15)\n    x20 = difference(x10, x6)\n    x21 = underfill(x19, x20, x15)\n    x22 = objects(x18, T, F, F)\n    x23 = colorfilter(x22, x15)\n    x24 = rbind(adjacent, x5)\n    x25 = sfilter(x23, x24)\n    x26 = objects(x21, F, F, T)\n    x27 = colorfilter(x26, x11)\n    x28 = rbind(adjacent, x6)\n    x29 = sfilter(x27, x28)\n    x30 = mapply(toindices, x25)\n    x31 = rbind(equality, x31)\n    x32 = lbind(index, x4)\n    x33 = compose(x32, urcorner)\n    x34 = matcher(x33, x21)\n    x35 = rbind(add, x27)\n    x36 = chain(x31, x35, x4)\n    x37 = sfilter(x30, x34)\n    x38 = lbind(add, x29)\n    x39 = chain"], [1.1, "def solve_ec58bebc(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = vmirror(I)\n    x2 = sizefilter(x1, ONE)\n    x3 = apply(even, x2)\n    x4 = sfilter(x3, hline)\n    x5 = size(x4)\n    x6 = positive(x5)\n    x7 = branch(x6, identity, dmirror)\n    x8 = x7(I)\n    x9 = rbind(toobject, x8)\n    x10 = chain(Example, x9, delta)\n    x11 = apply(x10, x4)\n    x12 = asindices(x11)\n    x13 = shape(x12)\n    x14 = add(x13, THREE)\n    x15 = halve(x14)\n    x16 = add(x15, UP_RIGHT)\n    x17 = crop(x16, x12, x15)\n    x18 = canvas(ZERO, x13)\n    x19 = asobject(x18)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = argmax(x22, last)\n    x24 = add(x23, x22)\n    x25 = flip(x24)\n    x26 = asobject(x25)\n    x27 = equality(x25, x26)\n    x28 = branch(x27, ulcorner, last)\n    x29 = multiply(x27, x28)\n    x30 = branch(x27, llcorner, last)\n    x31 = initset(x30)\n    x32 = insert(x29, x31)\n    x33 = = lbind(2020, x32)\n    x34 = compose(x33, first)\n    x35 = toindices(x34)\n    x36 = sizefilter(x35, x24)\n    x37 = lbind(argmin, x36)\n    x38 = lbind(shift, x24)\n    x39 = compose(x37, x38)\n    x40 = fork(recolor"], [1.1, "def solve_3207db89(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = lbind(apply, toindices)\n    x2 = lbind(rbind, intersection)\n    x3 = compose(x1, x2)\n    x4 = fork(size, x3, color)\n    x5 = palette(I)\n    x6 = compose(x4, x5)\n    x7 = fork(paint, identity, x6)\n    x8 = rbind(compose, palette)\n    x9 = lbind(lfilter, x5)\n    x10 = chain(x8, x9, x7)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(x11, toindices)\n    x13 = chain(size, x12, x7)\n    x14 = matcher(x13, ONE)\n    x15 = fork(both, x14, x13)\n    x16 = merge(x15)\n    x17 = palette(x16)\n    x18 = lbind(colorcount, x16)\n    x19 = compose(x18, argmin)\n    x20 = argmin(x17, x19)\n    x21 = rbind(colorcount, x20)\n    x22 = chain(toivec, first, x21)\n    x23 = fork(shift, x22, ulcorner)\n    x24 = canvas(x20, UNITY)\n    x25 = mapply(x23, x24)\n    x26 = objects(x25, T, T, T)\n    x27 = first(x26)\n    x28 = last(x26)\n    x29 = subgrid(x27, x45)\n    x30 = colorfilter(x26, x20)\n    x31 = rbind(contained, x30)\n    x32 = compose(x31, last)\n    x33 = sfilter(x30, x32)\n    x34 = paint(x29, x33)\n    x35 = ofcolor(x34, x20)\n    x36 = subgrid(x35, x45)\n    x37 = sfilter(x1, x36)\n    x38 =27(x37)\n    x39 = replace("], [1.1, "def solve_09b5b1ea(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_74429dad(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = argadjacent(x24, x23)\n    x26 = subgrid(x25, x14)\n    x27 = asobject(x25)\n    x28 = vmirror(x27)\n    x29 = hconcat(x28, x14)\n    x30 = height(x29)\n    x31 = subgrid(x25, x15)\n    x32 = asobject(x31)\n    x33 = height(x32)\n    x34 = equality(x30, x33)\n    x35 = branch(x34, x29, x28)\n    x36 = add(x34, UNITY)\n    x37 =44(x35)\n    x38 = astuple(x31, x36)\n    x39 = x36(x37)\n    x40 = shift(x39, x37)\n    x41 = ofcolor(x44, x13)\n    x42 = subgrid(x"], [1.1, "def solve_cc785cc9(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = width(x4)\n    x6 = toivec(x5)\n    x7 = index(x4, x6)\n    x8 = shape(x4)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x4, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, insert)\n    x16 = lbind(power, ZERO)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x13)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x19)\n    x24 = uppermost(x12)\n    x25 = lbind(add, x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = lbind(multiply, x27)\n    x29 = chain(toivec, x25, x28)\n    x30 = fork(shift, x23, x29)\n    x31 = compose(asobject, x22)\n    x32 = uppermost(x12)\n    x33 = lbind(subtract, x32)\n    x34 = height(x12)\n    x35 = increment(x34)\n    x36 = lbind(multiply, x35)\n    x37 = chain(toivec, x33, x36)\n    x38 = fork(shift, x31, x37)\n    x39 = fork(combine,"], [1.1, "def solve_0301447d(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP90)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP90)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, x33)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)\n    x"], [1.1, "def solve_4fc32608(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, T)\n    x4 = merge(x3)\n    x5 = palette(x4)\n    x6 = intersection(x5, x2)\n    x7 = lbind(colorcount, x4)\n    x8 = argmax(x6, x7)\n    x9 = astuple(x8, x2)\n    x10 = canvas(x9, x9)\n    x11 = paint(x10, x4)\n    x12 = objects(x11, T, F, T)\n    x13 = compose(normalize, toindices)\n    x14 = rbind(sordering, x13)\n    x15 = lbind(toobject, x14)\n    x16 = chain(x15, x13, color)\n    x17 = rbind(sfilter, x16)\n    x18 = lbind(recolor, x8)\n    x19 = chain(x18, x17, x35)\n    x20 = fork(combine, x15, x19)\n    x21 = lbind(paint, x11)\n    x22 = compose(x21, x20)\n    x23 = fork(paint, identity, x22)\n    x24 = chain(x13, x17, x23)\n    x25 = rbind(apply, x10)\n    x26 = lbind(lbind, shift)\n    x27 = chain(x26, x17, x24)\n    x28 = fork(apply, x26, x27)\n    x29 = fork(remove, x28, x22)\n    x30 = compose(x25, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = lbind(fork, intersection)\n    x33 = compose(x32, x30)\n    x34 = fork(794, x33, x24)\n    x35 = compose(x31, x34)\n    x36 = fork(ers O, x35, x36)\n    x37 = mapply(x36, x4)\n"], [1.1, "def solve_e8940922(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = apply(first, x22)\n    x24 = lbind(sfilter, x21)\n    x25 = compose(first, last)\n    x26 = lbind(matcher, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x27, x23)\n    x29 = lbind(shift, x15)\n    x30 = chain(x29, toivec, uppermost)\n    x31 = matcher(first, x18)\n    x32 = rbind(sfilter, x31)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(toindices, x32, x30)\n    x36 = chain(x33, x34, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = compose(color, x37)\n    x39 = compose(x32, x30)\n    x40 = fork(recolor, x38, x39)\n    x41 = fork(other, palette,"], [1.1, "def solve_317e3dea(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = compose(initset, x13)\n    x20 = fork(rapply, x19, x18)\n    x21 = compose(first, x20)\n    x22 = rbind(contained, x1)\n    x23 = compose(x22, last)\n    x24 = compose(flip, x23)\n    x25 = rbind( sfilter, x21)\n    x26 = chain(first, x25, x24)\n    x27 = fork(paint, x26, x25)\n    x28 = compose(initset, x15)\n    x29 = fork(rapply, x28, x24)\n    x30 = compose(first, x29)\n    x31 = fork(paint, x30, x27)\n    x32 = compose(initset, x12)\n    x33 = fork(rapply, x32, x24)\n    x34 = compose(first, x33)\n    x35 = extract(x1, x34)\n    x36 = x35(I)\n    x37 = first(x36)\n    x38"], [1.1, "def solve_fc65a4c4(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_c797836b(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = leastcolor(I)\n    x9 = rbind(ofcolor, x8)\n    x10 = rbind(rapply, I)\n    x11 = chain(first, x10, initset)\n    x12 = chain(hline, x9, x11)\n    x13 = rbind(ofcolor, x8)\n    x14 = rbind(rapply, I)\n    x15 = chain(first, x14, initset)\n    x16 = chain(leftmost, x13, x15)\n    x17 = matcher(x16, ZERO)\n    x18 = fork(both, x12, x17)\n    x19 = compose(x18, first)\n    x20 = extract(x7, x19)\n    x21 = first(x20)\n    x22 = last(x20)\n    x23 = x21(I)\n    x24 = ofcolor(x23, x8)\n    x25 = argmax(x24, last)\n    x26 = add(x25, UP_RIGHT)\n    x27 = shoot(x26, UP_RIGHT)\n    x28 = add(x25, DOWN_LEFT)\n    x29 = shoot(x28, DOWN_LEFT)\n    x30 = rbind(shoot, LEFT)\n    x31 = mapply(x30, x27)\n    x32 = rbind(shoot, LEFT)\n    x33 = mapply(x32, x29)\n    x34 = width(x23)\n    x35 = invert(x34)\n    x36 = tojvec(x35)\n    x37 = shift(x31, x36)\n    x38 = combine(x31, x37)\n    x39 ="], [1.1, "def solve_6961916f(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toive694, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_4df9dccc(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = ofcolor(x3, x39"], [1.1, "def solve_e14ac45b(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = height(I)\n    x9 = astuple(x8, ONE)\n    x10 = canvas(THREE, x9)\n    x11 = hconcat(x10, I)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = identity(DOWN)\n    x17 = connect(ORIGIN, x15)\n    x18 = fill(x11, THREE, x17)\n    x19 = identity(x13)\n    x20 = identity(x12)\n    x21 = identity(x12)\n    x22 = identity(F8)\n    x23 = identity(F9)\n    x24 = compose(first, first)\n    x25 = chain(first, last, x24)\n    x26 = compose(first, first)\n    x27 = chain(last, last, x26)\n    x28 = chain(first, first, first)\n    x29 = chain(first, last, last)\n    x30 = chain(first, first, last)\n    x31 = chain(last, first, last)\n    x32 = compose(decrement, x25)\n    x33 = compose(decrement, x27)\n    x34 = fork(astuple, x32, x33)\n    x35 = compose(decrement, x27)\n    x36 = fork(multiply, x30, x35)\n    x37 = fork(add, x29, x36)\n    x38 = compose(positive, size)\n    x39 = lbind(intersection, x7)\n    x40 = chain(x38, x39, xf8)\n    x41 = compose(size"], [1.1, "def solve_5e8234d9(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = partition(I)\n    x6 = fork(multiply, height, width)\n    x7 = fork(equality, size, x6)\n    x8 = extract(x5, x7)\n    x9 = color(x8)\n    x10 = palette(I)\n    x11 = remove(x4, x10)\n    x12 = other(x11, x9)\n    x13 = ofcolor(I, x12)\n    x14 = vmirror(x13)\n    x15 = hmirror(x13)\n    x16 = toindices(x8)\n    x17 = combine(x16, x13)\n    x18 = height(x17)\n    x19 = halve(x18)\n    x20 = increment(x19)\n    x21 = width(x17)\n    x22 = halve(x21)\n    x23 = increment(x22)\n    x24 = astuple(x20, x23)\n    x25 = maximum(x24)\n    x26 = invert(x25)\n    x27 = increment(x25)\n    x28 = interval(x26, x27, ONE)\n    x29 = product(x28, x28)\n    x30 = initset(x15)\n    x31 = insert(x14, x30)\n    x32 = product(x29, x31)\n    x33 = ofcolor(I, x4)\n    x34 = rbind(intersection, x33)\n    x35 = fork(shift, last, first)\n    x36 = chain(size, x34, x35)\n    x37 = matcher(x36, ZERO)\n    x38 = sfilter(x32, x37)\n    x39 = rbind(intersection, x13)\n    x40 = fork(shift, last, first)\n    x41 = chain(size, x39, x40)\n    x42 = argmax(x38, x41"], [1.1, "def solve_ec3a2634(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = corners(x2)\n    x4 = toobject(x3, I)\n    x5 = mostcolor(x4)\n    x6 = colorcount(I, x5)\n    x7 = dmirror(I)\n    x8 = astuple(x6, x7)\n    x9 = dmirror(I)\n    x10 =658(x8, x9)\n    x11 = combine(x3, x10)\n    x12 = ofcolor(x11, x5)\n    x13 = difference(x1, x12)\n    x14 = rbind(argmin, x13)\n    x15 = rbind(sfilter, x15)\n    x16 = compose(x14, x15)\n    x17 = lbind(fork, fly)\n    x18 = lbind(x17, identity)\n    x19 = lbind(rbind, astuple)\n    x20 = compose(x18, x19)\n    x21 = lbind(compose, x16)\n    x22 = rbind(x41, x21)\n    x23 = lbind(rbind, intersection)\n    x24 = chain(x22, x23, x8)\n    x25 = lbind(compose, x17)\n    x26 = x25(x12)\n    x27 = rbind(rapply, x25)\n    x28 = compose(initset, x12)\n    x29 = chain(first, x27, x28)\n    x30 = extract(x12, x29)\n    x31 = x30(I)\n    x32 = palette(I)\n    x33 = first(x32)\n    x34 = ulcorner(x30)\n    x35 = dmirror(x34)\n    x36 = shape(x30)\n    x37 = add(x36, x39)\n    x38 = astuple(x37, x34)\n    x39 = canvas(x30, x38)\n    x40 = asindices(x39)\n    x41 = apply(urcorner,"], [1.1, "def solve_4298d118(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = chain(x4, x5, color)\n    x7 = compose(maximum, shape)\n    x8 = fork(apply, x7, x6)\n    x9 = maximum(x2)\n    x10 = palette(I)\n    x11 = remove(x9, x10)\n    x12 = lbind(outbox, I)\n    x13 = compose(x12, objects)\n    x14 = arg113(x11, x13)\n    x15 = rightmost(x14)\n    x16 = totuple(x15)\n    x17 = apply(normalize, x16)\n    x18 = color(x14)\n    x19 = lbind(replace, x18)\n    x20 = rbind(compose, initset)\n    x21 = lbind(rbind, difference)\n    x22 = chain(x20, x21, color)\n    x23 = apply(x22, x17)\n    x24 = ofcolor(I, x9)\n    x25 = rbind(sfilter, x24)\n    x26 = chain(positive, size, x25)\n    x27 = mfilter(x23, x26)\n    x28 = equality(x27, ONE)\n    x29 = branch(x28, x22, x27)\n    x30 = rbind(colorcount, x18)\n    x31 = argmax(x29, x30)\n    x32 = UNITY(x31)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, x32)\n    x35 = colorfilter(x18, x9)\n    x36 = rbind(vmatching, x34)\n    x37 = fork(both, x35, x36)\n    x38 = x37(x31)\n    x39 = fill(I, x8, x38)\n    x40 =272("], [1.1, "def solve_d5637f2d(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = equality(x5, ZERO)\n    x7 = branch(x6, identity, vmirror)\n    x8 = x7(x4)\n    x9 = ofcolor(x8, EIGHT)\n    x10 = uppermost(x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, identity, hmirror)\n    x13 = x12(x8)\n    x14 = ofcolor(x13, EIGHT)\n    x15 = ofcolor(x13, TWO)\n    x16 = rbind(shoot, DOWN)\n    x17 = mapply(x16, x14)\n    x18 = height(x13)\n    x19 = apply(first, x15)\n    x20 = insert(ZERO, x19)\n    x21 = insert(x18, x19)\n    x22 = apply(decrement, x21)\n    x23 = order(x20, identity)\n    x24 = order(x22, identity)\n    x25 = size(x15)\n    x26 = increment(x25)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = apply(tojvec, x27)\n    x29 = pair(x23, x24)\n    x30 = lbind(sfilter, x17)\n    x31 = compose(first, last)\n    x32 = chain(decrement, first, first)\n    x33 = fork(greater, x31, x32)\n    x34 = chain(increment, last, first)\n    x35 = fork(greater, x34, x31)\n    x36 = fork(both, x33, x35)\n    x37 = lbind(lbind, astuple)\n    x38 = lbind(compose, x36)\n    x39 = chain(x30, x38, x37)\n    x40"], [1.1, "def solve_5f9f8e92(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = astuple(color, ORIGIN)\n    x2 = astuple(color, TWO)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(x655, x8)\n    x10 = astuple(xcompose, initset)\n    x11 = lbind(contained, x10)\n    x12 = compose(x11, last)\n    x13 = sfilter(x5, x12)\n    x14 = upscale(x13, TWO)\n    x15 = shape(x13)\n    x16 = add(x15, RIGHT)\n    x17 = crop(x13, UP_BY_ZERO, x16)\n    x18 = asobject(x17)\n    x19 = multiply(UNITY, x15)\n    x20 = crop(x18, DOWN_LEFT, x19)\n    x21 = apply(x16, x20)\n    x22 = paint(x17, x21)\n    x23 = crop(x18, UNITY, x15)\n    x24 = repeat(x23, ONE)\n    x25 = combine(x28, x24)\n    x26 = sfilter(x25, x12)\n    x27 = fork(combine, first, last)\n    x28 = apply(x27, x26)\n    x29 = height(x12)\n    x30 = lbind(repeat, x29)\n    x31 = apply(x30, x27)\n    x32 = combine(x28, x31)\n    x33 = branch(x37, x32, x29)\n    x34 = apply(double, x30)\n    x35 = divide(x34, TWO)\n    x36 = apply(x27, x30)\n    x37 = branch(x37, x36, x29)\n    x38 = branch(x37, x37, x28)\n    "], [1.1, "def solve_fc1c4f8f(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = Faff27(I)\n    x3 = toindices(x2)\n    x4 = difference(x1, x3)\n    x5 = toobject(x4, I)\n    x6 = size(x5)\n    x7 = positive(x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = objects(x9, T, F, T)\n    x11 = color(x10)\n    x12 = leftmost(x11)\n    x13 = leftmost(x12)\n    x14 = subtract(x13, x12)\n    x15 = astuple(x14, x13)\n    x16 = repeat(x9, x15)\n    x17 = x8(x9)\n    x18 = x8(x16)\n    x19 = hsplit(x17, x18)\n    x20 = hsplit(x19, x19)\n    x21 = merge(x20)\n    x22 = last(x21)\n    x23 = remove(x22, x30)\n    x24 = last(x23)\n    x25 = last(x24)\n    x26 = first(x23)\n    x27 = hupscale(x25, x26)\n    x28 = identity(x27)\n    x29 = x8(x22)\n    x30 = x9(x222)\n    x31 =60713(x29)\n    x32 = hupscale(x30, x31)\n    x33 = identity(x32)\n    x34 = hconcat(x29, x33)\n    x35 = hconcat(x34, x28)\n    x36 = vconcat(x35, x28)\n    x37 = vconcat(x36, x28)\n    x38 = astuple(x24, x270)\n    x39 = astuple(x37, x38)\n    x40 = combine(x32, x39)\n    x41 = paint(x40, x33)\n    O = x8(x41)\n"], [1.1, "def solve_476652e6(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = x2(I, TWO)\n    x4 = order(x3, numcolors)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = palette(x5)\n    x8 = remove(ZERO, x7)\n    x9 = other(x8, x6)\n    x10 = branch(x5, height, width)\n    x11 = x10(x6)\n    x12 = astuple(ONE, x11)\n    x13 = canvas(x9, x12)\n    x14 = ofcolor(x13, x6)\n    x15 = mostcolor(x14)\n    x16 = matcher(first, x15)\n    x17 = compose(flip, x16)\n    x18 = rbind(sfilter, x17)\n    x19 = rbind(occurrences, x13)\n    x20 = compose(x19, x18)\n    x21 = apply(x20, x9)\n    x22 = dmirror(x21)\n    x23 = replace(x22, x10, x67)\n    x24 = ofcolor(x23, x6)\n    x25 = ofcolor(x23, x12)\n    x26 = intersection(x24, x25)\n    x27 = fill(x23, ZERO, x26)\n    x28 = astuple(ONE, THREE)\n    x29 = canvas(x9, x28)\n    x30 = dmirror(x29)\n    x31 = fill(x30, x7, x279)\n    x32 = x2(x31)\n    x33 = initset(x32)\n    x34 = insert(x62, x33)\n    x35 = product(x34, x34)\n    x36 = order(x35, identity)\n    x37 = ofcolor(x36, x6)\n    x38 = last(x37)\n    x39 = remove(x38, x37)\n    x40 = first(x39)\n    x"], [1.1, "def solve_8d7c3cda(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = extract(x2, x4)\n    x6 =8776cd78\n    \"\"\"\n    x7 = backdrop(x5)\n    x8 = shape(I)\n    x9 = add(TWO, x8)\n    x10 = canvas(x1, x9)\n    x11 = asobject(I)\n    x12 = shift(x11, UNITY)\n    x13 = paint(x10, x12)\n    x14 = double(x3)\n    x15 = power(outbox, x14)\n    x16 = chain( backdrop, x15, initset)\n    x17 = x16(ulcorner)\n    x18 = x16(TWO, x16)\n    x19 = shift(x11, x18)\n    x20 = paint(x13, x19)\n    x21 = ulcorner(x5)\n    x22 = index(x20, x21)\n    x23 = recolor(x1, x22)\n    x24 = paint(x20, x23)\n    x25 = branch(x3, x24, x16)\n    x26 = shape(I)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = product(x27, x27)\n    x29 = lbind(multiply, x287)\n    x30 = apply(x29, x28)\n    x31 = lbind(shift, x12)\n    x32 = mapply(x31, x30)\n    x33 = paint(x20, x32)\n    x34 = branch(x26, UNITY, DOWN_LEFT)\n    x35 = apply(x34, x29)\n    x36 = pair(x35, x31)\n    x37 = size(x36)\n    x38 = positive(x37)\n    x39 = branch(x33, RIGHT, x38)\n    x40 = apply(x39, x36)\n    x41"], [1.1, "def solve_414b7284(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = palette(I)\n    x2 = compose(maximum, shape)\n    x3 = argmin(x1, x2)\n    x4 = canvas(x3, THREE_BY_THREE)\n    x5 = colorcount(I, ZERO)\n    x6 = dmirror(x4)\n    x7 = objects(x6, T, F, T)\n    x8 = argmin(x7, size)\n    x9 = repeat(x8, ONE)\n    x10 = combine(x7, x9)\n    x11 = color(x10)\n    x12 = leftmost(x11)\n    x13 = width(I)\n    x14 = interval(ONE, x13, ONE)\n    x15 = leftmost(x11)\n    x16 = interval(ONE, x15, ONE)\n    x17 = pair(x14, x16)\n    x18 = sizefilter(x17, x11)\n    x19 = apply(invert, x18)\n    x20 = lbind(sfilter, x18)\n    x21 = lbind(matcher, partition)\n    x22 = compose(x21, x20)\n    x23 = chain(size, x20, x22)\n    x24 = sfilter(x19, x23)\n    x25 = chain(increment, minimum, x24)\n    x26 =745 to compose(x25, x20)\n    x27 = fork(repeat, x26, x211)\n    x28 = sfilter(x6, x27)\n    x29 = combine(x27, x28)\n    x30 = lbind(recolor, x11)\n    x31 = lbind(mapply, x30)\n    x32 = fork(paint, identity, x31)\n    x33 = compose(x32, x20)\n    x34 = ofcolor(I, x3)\n    x35 = mapply(x33, x34)\n    x36 = ofcolor(I, FOUR)\n    x37 = mapply(x36, x36)\n    x38 = combine(x35, x37)\n    x39 = paint(I"], [1.1, "def solve_256285cf(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_e6e4b6a8(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = compose(positive, size)\n    x2 = rbind(sfilter, hline)\n    x3 = chain(x1, x2, frontiers)\n    x4 = chain(size, dedupe, first)\n    x5 = chain(size, dedupe, last)\n    x6 = fork(greater, x4, x5)\n    x7 = fork(both, x3, x6)\n    x8 = astuple(identity, dmirror)\n    x9 = astuple(cmirror, hmirror)\n    x10 = combine(x8, x9)\n    x11 =040(x10)\n    x12 = objects(x11, T, F, T)\n    x13 = merge(x12)\n    x14 = shift(x13, TWO)\n    x15 = paint(x3, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = remove(x16, x15)\n    x18 = compose(positive, size)\n    x19 = rbind(sfilter, x18)\n    x20 = chain(x17, x19, frontiers)\n    x21 = merge(x12)\n    x22 = chain(x19, x19, shape)\n    x23 = chain(size, x22, first)\n    x24 = compose(increment, x23)\n    x25 = power(x24, FOUR)\n    x26 = x25(x6)\n    x27 = shape(x26)\n    x28 = canvas(ZERO, x27)\n    x29 = \"b567a423(x26)\n    x30 = chain(size, dedupe, first)\n    x31 = equality(x30, x22)\n    x32 = x31(x16)\n    x33 = first(x32)\n    x34 = last(x32)\n    x35 = fill(x16, THREE, x34)\n    x36 = shift(x33, x35)\n    x37 =74ddupe(x36)\n    x38 = paint(x35, x37)\n    O = trim(x38)\n    return O"], [1.1, "def solve_55b85df0(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = compose(flip, x2)\n    x4 = rbind(sfilter, x3)\n    x5 = replace(x1, FIVE, ZERO)\n    x6 = x4(x5)\n    x7 = asobject(x6)\n    x8 = apply(first, x7)\n    x9 = paint(I, x8)\n    x10 = fgpartition(x9)\n    x11 = merge(x10)\n    x12 = normalize(x11)\n    x13 = width(x12)\n    x14 = subtract(x13, TWO)\n    x15 = height(x12)\n    x16 = astuple(x15, x14)\n    x17 = crop(x12, ORIGIN, x16)\n    x18 = hupscale(x17, x12)\n    x19 = solve(x18, dmirror)\n    x20 = astuple(x15, x16)\n    x21 = crop(x20, ORIGIN, x20)\n    x22 = hupscale(x21, x12)\n    x23 =\n    \"\"\"\n    x24 = hmirror(x12)\n    x25 = vconcat(x22, x24)\n    x26 = vconcat(x25, x12)\n    O = compress(x26)\n    return O"], [1.1, "def solve_26d2dd39(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 =2dee509493\n    x2 = dmirror(I)\n    O = papply(pair, I, x1)\n    return O"], [1.1, "def solve_91502675(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = sizefilter(x1, FOUR)\n    x3 = fork(equality, height, width)\n    x4 = extract(x2, x3)\n    x5 = other(x1, x4)\n    x6 = color(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = subtract(FOUR, x11)\n    x13 = increment(x12)\n    x14 =255(I)\n    x15 = canvas(x6, x14)\n    x16 = lbind(ofcolor, I)\n    x17 =699(x16, x13)\n    x18 = subgrid(x5, I)\n    x19 = hconcat(x17, x18)\n    x20 = hconcat(x19, x17)\n    x21 = vconcat(x19, x20)\n    x22 = vconcat(x21, x17)\n    x23 = combine(x19, x22)\n    O = fill(x15, x6, x23)\n    return O"], [1.1, "def solve_acaa386b(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 =666(ZERO, x3)\n    x9 =66(d3644, x8)\n    x10 = shape(I)\n    x11 = decrement(x10)\n    x12 = index(I, x11)\n    x13 = subtract(FIVE, x12)\n    x14 = crop(I, ORIGIN, x9)\n    x15 = crop(I, x13, x7)\n    x16 = width(x15)\n    x17 = astuple(x16, ORIGIN)\n    x18 = crop(x15, ORIGIN, x17)\n    x19 = vupscale(x18, x14)\n    x20 = hupscale(x19, x12)\n    x21 = rbind(shoot, UNITY)\n    x22 = asindices(x14)\n    x23 = remove(x22, x14)\n    x24 = remove(x22, x23)\n    x25 = intersection(x22, x24)\n    x26 = lbind(occurrences, x15)\n    x27 = compose(x26, last)\n    x28 = fork(combine, first, x27)\n    x29 = product(x15, x17)\n    x30 = sfilter(x29, x28)\n    x31 = fork(shift, first, last)\n    x32 = mapply(x31, x30)\n    O = paint(x15, x32)\n    return O"], [1.1, "def solve_957376a9(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = replace(x6, x3, x4)\n    x8 = objects(x7, T, F, T)\n    x9 = lbind(colorfilter, x8)\n    x10 = chain(merge, x9, palette)\n    x11 = objects(x7, T, F, T)\n    x12 = sfilter(x11, x10)\n    x13 = rbind(gravitate, x12)\n    x14 = compose(x13, toivec)\n    x15 = fork(add, x14, x12)\n    x16 = fork(connect, x15, output:\n    x17 = mapply(x16, x13)\n    O = fill(x7, x3, x17)\n    return O"], [1.1, "def solve_9f4e5183(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = x6(I)\n    x8 = rbind(sfilter, x7)\n    x9 = compose(dmirror, x8)\n    x10 = rbind(sfilter, x9)\n    x11 = compose(vmirror, x10)\n    x12 = dmirror(I)\n    x13 = x11(x12)\n    x14 =37(x13)\n    x15 = width(x13)\n    x16 = decrement(x15)\n    x17 = tojvec(x16)\n    x18 = connect(ORIGIN, x17)\n    x19 = height(x13)\n    x20 = decrement(x19)\n    x21 = toivec(x20)\n    x22 = connect(ORIGIN, x21)\n    x23 = size(x2)\n    x24 = equality(x23, ZERO)\n    x25 = branch(x24, tojvec, toivec)\n    x26 = branch(x24, bottomhalf, x25)\n    x27 = order(x28, x26)\n    x28 = apply(x11, x27)\n    O = x11(x28)\n    return O"], [1.1, "def solve_5e81a8ce(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = trim(I)\n    x2 = repeat(x1, ONE)\n    x3 = toobject(x2, I)\n    x4 = numcolors(x3)\n    x5 = vmirror(x4)\n    x6 = hmirror(x4)\n    x7 = numcolors(x6)\n    x8 = add(TWO, x7)\n    x9 = papply(insert, x3, x8)\n    x10 = toobject(x9, I)\n    x11 = decrement(x10)\n    x12 = objects(x11, F, F, T)\n    x13 = first(x12)\n    x14 =90000009x13\n    x15 = leftmost(x13)\n    x16 = decrement(x15)\n    x17 = tojvec(x16)\n    x18 = shift(x3, x17)\n    x19 = shift(x3, x18)\n    x20 = fork(combine, vfrontier, hfrontier)\n    x21 = compose(x20, initset)\n    x22 = fork(combine, x19, x21)\n    x23 = rapply(x18, x22)\n    x24 = mapply(x23, x1)\n    O = paint(x14, x24)\n    return O"], [1.1, "def solve_0fd9de86(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = box(I)\n    x2 =66666666(x1, I)\n    x3 = equality(x2, TWO)\n    x4 = branch(x3, hsplit, vsplit)\n    x5 = x4(I, TWO)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 = palette(x6)\n    x9 = palette(x7)\n    x10 = intersection(x8, x9)\n    x11 = first(x10)\n    x12 = shape(x6)\n    x13 = canvas(x11, x12)\n    x14 = ofcolor(x6, x12)\n    x15 = ofcolor(x7, x12)\n    x16 = intersection(x14, x15)\n    O = fill(x13, TWO, x16)\n    return O"], [1.1, "def solve_b3453d12(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =372(x2, I)\n    x4 = shape(I)\n    x5 = multiply(x4, x4)\n    x6 = canvas(ZERO, x5)\n    x7 = rbind(multiply, x6)\n    x8 = apply(x7, x3)\n    x9 = height(I)\n    x10 = width(I)\n    x11 = divide(x9, x10)\n    x12 = increment(x11)\n    x13 = subtract(x12, ONE)\n    x14 = shift(x8, x13)\n    x15 =873(x14)\n    x16 = last(x14)\n    x17 = remove(x16, x14)\n    x18 = last(x17)\n    x19 = canvas(ZERO, x4)\n    x20 = matcher(first, x8)\n    x21 =sfilter(x19, x20)\n    x22 = shift(x19, x21)\n    O = fill(x21, THREE, x22)\n    return O"], [1.1, "def solve_2214e8a1(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 =8885(I)\n    x2 = mostcolor(I)\n    x3 = shape(I)\n    x4 = canvas(x2, x3)\n    x5 = hconcat(I, x4)\n    x6 = objects(x5, F, F, T)\n    x7 = compose(last, centerofmass)\n    x8 = order(x6, x7)\n    x9 =159(x8)\n    x10 = lbind(contained, ZERO)\n    x11 = compose(x10, palette)\n    x12 = sfilter(x8, x11)\n    x13 = size(x12)\n    x14 = interval(ZERO, x13, ONE)\n    x15 = pair(x4, x14)\n    x16 = mapply(first, x15)\n    x17 = mapply(last, x15)\n    x18 = fill(x4, THREE, x16)\n    O = fill(x18, FOUR, x17)\n    return O"], [1.1, "def solve_ad1c5677(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = subgrid(I, I)\n    x2 = trim(x1)\n    x3 = replace(x2, ONE, ZERO)\n    x4 = tojvec(Sfilter)\n    x5 =787\n    7204399287\n    4862897883\n    9972237075\n    \"\"\"\n    x1 = lefthalf(x3)\n    x2 = righthalf(x3)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = fill(x3, ONE, x9)\n    return O"], [1.1, "def solve_e3219962(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 =1111(I, ZERO)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = fill(x2, ZERO, x1)\n    return O"], [1.1, "def solve_d5333426(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = switch(I, EIGHT, TWO)\n    x2 = switch(x1, TWO, ONE)\n    x3 = switch(x2, EIGHT, ONE)\n    x4 = switch(x3, EIGHT, FOUR)\n    O = switch(x4, lowermost,\n    return O"], [1.1, "def solve_5060fb2b(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = tophalf(I)\n    x5 = lefthalf(x4)\n    x6 = tophalf(I)\n    x7 = righthalf(x6)\n    x8 = bottomhalf(I)\n    x9 = righthalf(x8)\n    x10 = bottomhalf(I)\n    x11 = lefthalf(x9)\n    x12 = righthalf(x11)\n    x13 =122200(x2, x12)\n    x14 =122233\n    x15 = merge(x1)\n    x16 = bottomhalf(x2)\n    x17 = lefthalf(x16)\n    x18 = bottomhalf(x2)\n    x19 = righthalf(x17)\n    x20 = width(x13)\n    x21 =145(x13)\n    x22 = astuple(x20, x21)\n    x23 = crop(x13, ORIGIN, x22)\n    x24 = ofcolor(x23, x3)\n    x25 =19color(x24)\n    x26 = dmirror(x23)\n    x27 = invert(x26)\n    x28 = tojvec(x27)\n    x29 = double(xdneighbors)\n    x30 = interval(x29, x27, ONE)\n    x31 = lbind(shift, x25)\n    x32 = apply(x31, x30)\n    x33 = mapply(x27, x32)\n    O = fill(x23, x5, x33)\n    return O"], [1.1, "def solve_db412776(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = switch(I, dmirror, identity)\n    x2 = astuple(x1, x1)\n    x3 = astuple(FOUR, EIGHT)\n    x4 = canvas(NEG_ONE, x3)\n    x5 =9465(x4)\n    x6 = rbind(toobject, x1)\n    x7 = compose(x6, toindices)\n    x8 = rbind(colorcount, x1)\n    x9 = matcher(x8, chain(x8, x7)\n    x10 = matcher(x8, TWO)\n    x11 = fork(both, x9, x10)\n    x12 = extract(x5, x11)\n    x13 =124indices(x12)\n    x14 =manhattan(x13, x5)\n    x15 = multiply(x14, UNITY)\n    x16 = canvas(NEG_ONE, x15)\n    x17 = fgpartition(x16)\n    x18 = merge(x17)\n    x19 = center(x18)\n    x20 = branch(x19, x16, x17)\n    x21 = subtract(x20, x19)\n    x22 = astuple(NEG_TWO, x21)\n    x23 = order(x5, x22)\n    x24 = lbind(contained, ZERO)\n    x25 = sfilter(x2, x24)\n    x26 = lbind(shift, x21)\n    x27 = compose(x26, toindices)\n    x28 = mapply(x27, x23)\n    x29 = combine(x28, x25)\n    x30 = shift(x29, x3)\n    x31 = compose(x5, x27)\n    x32 = mapply(x31, x30)\n    x33 = combine(x30, x32)\n    x34 = paint(x16, x33)\n    O = x4(x34)\n    return O"], [1.1, "def solve_38e5102b(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(d687, x5)\n    x7 =77(x5)\n    x8 =77(x6)\n    x9 =x7(I)\n    x10 = x6(x9)\n    x11 = fork(subtract, height, width)\n    x12 = lbind(ofcolor, x10)\n    x13 = palette(x12)\n    x14 = compose(x11, x12)\n    x15 = argmin(x13, x14)\n    x16 = other(x9, x15)\n    x17 = ofcolor(x10, x16)\n    x18 = outbox(x17)\n    x19 = toobject(x18, x10)\n    x20 = mostcolor(x19)\n    x21 = initset(x16)\n    x22 = rbind(manhattan, x21)\n    x23 = argmin(x25, x22)\n    x24 = other(x23, x20)\n    x25 = ofcolor(x10, x24)\n    x26 = combine(x19, x25)\n    x27 = fill(I, x24, x26)\n    x28 = difference(x27, x26)\n    O = fill(x28, x24, x28)\n    return O"], [1.1, "def solve_91f9ab2c(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = shape(I)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(I, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmin(x11, numcolors)\n    x13 = normalize(x12)\n    x14 = toindices(x13)\n    x15 = increment(x4)\n    x16 = increment(x15)\n    x17 = increment(x5)\n    x18 = increment(x17)\n    x19 = astuple(x16, x18)\n    x20 = lbind(multiply, x19)\n    x21 = apply(x20, x14)\n    x22 = lbind(shift, x14)\n    x23 = mapply(x22, x21)\n    x24 = paint(x10, x23)\n    x25 = objects(x24, F, T, T)\n    x26 = lbind(occurrences, x24)\n    x27 = compose(x26, x24)\n    x28 = fork(combine, x27, x25)\n    x29 =21826(x28, x7)\n    x30 = palette(x29)\n    x31 = rbind(contained, x30)\n    x32 = argmin(x30, x31)\n    x33 =12(x32)\n    x34 =210(x33)\n    x35 = ofcolor(x34, x41)\n    x36 = ofcolor(x34, x5)\n    x37 = combine(x35, x36)\n    x38 = intersection(x35, x37)\n    O = fill(x24, ONE, x38)\n    return O"], [1.1, "def solve_962e4674(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =22izter(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [1.1, "def solve_68ff15a2(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 =6666(I)\n    x2 =6006666(I)\n    x3 = hmirror(x2)\n    O = vconcat(I, x3)\n    return O"], [1.1, "def solve_4acb4ea9(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = replace(I, ONE, ZERO)\n    x4 = colorfilter(x2, x3)\n    x5 = argmax(x4, size)\n    x6 = color(x5)\n    x7 = subgrid(x5, I)\n    x8 = fork(insert, identity, identity)\n    x9 = width(x7)\n    x10 = insert(x9, x7)\n    x11 = x8(x10)\n    x12 = width(x7)\n    x13 = increment(x12)\n    x14 = interval(ZERO, x13, x ONE)\n    x15 = subgrid(x5, x7)\n    x16 = insert(x15, x14)\n    x17 = rightmost(x16)\n    x18 = lbind(greater, x17)\n    x19 = compose(x18, uppermost)\n    x20 = rbind(sfilter, x19)\n    x21 = chain(x17, x20, frontiers)\n    x22 = lbind(recolor, x6)\n    x23 = compose(x22, color)\n    x24 = rbind(sfilter, x23)\n    x25 = chain(x10, x24, asobject)\n    x26 = lbind(shift, x8)\n    x27 = chain(x26, x24, x27)\n    x28 = rbind(mapply, x27)\n    x29 = compose(x28, x25)\n    x30 = lbind(add, x17)\n    x31 = chain(x30, x26, outbox)\n    x32 = fork(combine, x29, x31)\n    x33 = mapply(x32, x14)\n    O = paint(x3, x33)\n    return O"], [1.1, "def solve_9e663d55(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = decrement(x2)\n    x4 = index(I, x3)\n    x5 = rbind(shoot, UP_RIGHT)\n    x6 = canvas(x1, x4)\n    x7 = matcher(first, FOUR)\n    x8 = compose(flip, x7)\n    x9 = extract(x6, x8)\n    x10 = color(x9)\n    x11 = objects(I, T, F, T)\n    x12 = sizefilter(x11, ONE)\n    x13 = merge(x12)\n    x14 =111(x13)\n    x15 = palette(x14)\n    x16 = lbind(colorcount, x14)\n    x17 = arguple(x16, UNITY)\n    x18 = lbind(colorcount, x14)\n    x19 = increment(x17)\n    x20 = increment(x18)\n    x21 = neighbors(ORIGIN)\n    x22 = mapply(neighbors, x21)\n    x23 = astuple(x17, x20)\n    x24 = lbind(multiply(x23)\n    x25 = apply(x24, x22)\n    x26 = apply(first, x25)\n    x27 =4444(x26)\n    x28 = merge(x26)\n    x29 = paint(I, x28)\n    x30 = astuple(x17, x20)\n    x31 = astuple(x27, x30)\n    x32 = hmirror(x31)\n    x33 = vmirror(x32)\n    x34 =111(x33)\n    x35 = hmirror(x34)\n    x36 = vmirror(x35)\n    x37 = dmirror(x36)\n    x38 = combine(x33, x37)\n    x39 = paint(x38, x36)\n    O = fill(x39, x10, x38)\n    return O"], [1.1, "def solve_fc1e09c9(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = leastcommon(x3)\n    x5 = apply(last, x2)\n    x6 = ofcolor(I, x4)\n    x7 = intersection(x6, x5)\n    x8 =64e8x777\n    x9 = fill(I, TWO, x8)\n    O = fill(x9, ONE, x7)\n    return O"], [1.1, "def solve_07657b9e(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = increment(x4)\n    x13 = add(x12, x11)\n    x14 = canvas(x3, x13)\n    x15 = asobject(x8)\n    x16 = shift(x15, UNITY)\n    x17 = paint(x14, x16)\n    x18 =01(x1)\n    x19 = shift(x17, UNITY)\n    O = paint(x17, x19)\n    return O"], [1.1, "def solve_2866801c(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor = x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [1.1, "def solve_57c88724(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind( frontiers, I)\n    x2 = compose(size, x1)\n    x3 = matcher(x2, ONE)\n    x4 = shape(I)\n    x5 = canvas(ONE, x4)\n    x6 = lbind(hmatching, I)\n    x7 = compose(x6, x3)\n    x8 = fork(either, vline, hline)\n    x9 = fork(both, x7, x8)\n    x10 = sfilter(x5, x9)\n    x11 = compose(size, x1)\n    x12 = argmin(x10, x11)\n    x13 =1111(x12, I)\n    x14 = delta(x13)\n    O = fill(x5, ONE, x14)\n    return O"], [1.1, "def solve_c794f04d(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = shape(I)\n    x3 = halve(x2)\n    x4 = mostcolor(I)\n    x5 = canvas(x4, x3)\n    x6 = rbind(shoot, UP49 UNITY)\n    x7 = compose(x6, last)\n    x8 = fork(recolor, first, x7)\n    x9 = mapply(x8, x1)\n    O = paint(x5, x9)\n    return O"], [1.1, "def solve_560bc42b(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = power(equality, FOUR)\n    x9 = first(x7)\n    x10 = last(x7)\n    x11 = x8(x9)\n    x12 = x8(x10)\n    x13 = ofcolor(x11, FOUR)\n    x14 = ofcolor(x12, FOUR)\n    x15 = intersection(x13, x14)\n    x16 = first(x15)\n    x17 = shape(x11)\n    x18 = canvas(FIVE, x17)\n    x19 = fill(x18, THREE, x15)\n    x20 = decrement(x1)\n    x21 = chain(even, x20, tojvec)\n    x22 = crop(x11, x424, x21)\n    x23 = crop(x12, x22, x1)\n    x24 = crop(x12, x23, x11)\n    x25 = asobject(x21)\n    x26 = subgrid(x25, x24)\n    x27 = mostcolor(x26)\n    x28 = asobject(x23)\n    x29 =88170(x28)\n    x30 = matcher(first, x39)\n    x31 = compose(flip, x30)\n    x32 = sfilter(x29, x31)\n    O = fill(x19, TWO, x32)\n    return O"], [1.1, "def solve_aa7619a0(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = fork(subtract, toindices, box)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = fork(equality, toindices, corners)\n    x7 = fork(64b190, size, x6)\n    x8 = sfilter(x2, x7)\n    x9 = argmax(x8, x8)\n    x10 = color(x9)\n    x11 = ofcolor(I, x10)\n    x12 = inbox(x11)\n    x13 = toobject(x12, I)\n    x14 = mostcolor(x13)\n    x15 = ofcolor(I, x14)\n    x16 = inbox(x15)\n    x17 = urcorner(x16)\n    x18 = shoot(x17, NEG_UNITY)\n    x19 = lrcorner(x15)\n    x20 = shoot(x19, UNITY)\n    x21 = urcorner(x20)\n    x22 = shoot(x21,___UNITY)\n    x23 = combine(x18, x22)\n    x24 = rbind(shoot, x34)\n    x25 = mapply(x24, x23)\n    x26 = combine(x30, x25)\n    x27 = fill(I, x10, x26)\n    x28 = ofcolor(x27, x70)\n    x29 = rbind(adjacent, x8)\n    x30 = sfilter(x28, x29)\n    x31 = normalize(x30)\n    x32 = lbind(shift, x31)\n    x33 = mapply(x32, x30)\n    O = paint(x27, x33)\n    return O"], [1.1, "def solve_c7b9065c(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = DOWNd364b(x3)\n    x5 = fill(I, FOUR, x4)\n    x6 = hmirror(x5)\n    x7 =07(x6)\n    x8 = power(outbox, TWO)\n    x9 = chain(backdrop, x8, initset)\n    x10 = x9(x7)\n    x11 = leastcolor(x10)\n    x12 = replace(x5, x11, ZERO)\n    O = replace(x12, lefthalf, ZERO)\n    return O"], [1.1, "def solve_369bc17f(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = rbind(bordering, x14)\n    x16 = compose(x15, normalize)\n    x17 = apply(x16, x10)\n    x18 = rbind(adjacent, x3)\n    x19 =14(x14)\n    x20 = sfilter(x19, x18)\n    x21 = rbind(adjacent, x13)\n    x22 =14(x20)\n    x23 = sfilter(x21, x22)\n    x24 = combine(x18, x23)\n    x25 = cover(x9, x24)\n    x26 = fgpartition(x25)\n    x27 = merge(x26)\n    x28 = paint(x25, x27)\n    x29 = argmax(x28, size)\n    x30 = shift(x29, UNITY)\n    x31 = paint(x25, x30)\n    x32 = toindices(x3)\n    x33 = index(x25, x32)\n    x34 = difference(x33, x32)\n    O = fill(x39, x3, x34)\n    return O"], [1.1, "def solve_d96ffd89(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = sizefilter(x1, ONE)\n    x3 = lbind(fork, connect)\n    x4 = lbind(x3, identity)\n    x5 = lbind(extract, x2)\n    x6 = compose(x4, x5)\n    x7 = lbind(recolor, ONE)\n    x8 = chain(033708, x7, x6)\n    x9 = fork(paint, chain, x8)\n    x10 = chain(numcolors, x9, first)\n    x11 = compose(maximum, first)\n    x12 = fork(add, x11, x10)\n    x13 = compose(flip, x12)\n    x14 = sfilter(x2, x13)\n    x15 = size(x14)\n    x16 = positive(x15)\n    x17 = branch(x16, identity, dmirror)\n    x18 = x17(I)\n    x19 = partition(x18)\n    x20 = matcher(color, ONE)\n    x21 = compose(flip, x20)\n    x22 = ofcolor(x18, TWO)\n    x23 = sfilter(x22, x21)\n    x24 = fork(remove, last, identity)\n    x25 = lbind(colorcount, x18)\n    x26 = compose(x25, x42)\n    x27 = argmin(x23, x26)\n    x28 = ofcolor(x18, x27)\n    x29 = ofcolor(x18, TWO)\n    x30 = initset(x29)\n    x31 = rbind(manhattan, x30)\n    x32 = argmin(x28, x31)\n    x33 = mapply(x32, x28)\n    x34 = fill(x18, TWO, x33)\n    x35 = x17(x34)\n    x36 = ofcolor(x35, x27)\n    x37 = mapply(x16, x36)\n    O = fill(x35, TWO, x37)\n    return O"], [1.1, "def solve_57fce77f(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, T)\n    x4 = merge(x3)\n    x5 = mostcolor(x4)\n    x6 = palette(x1)\n    x7 = other(x6, x5)\n    x8 = switch(x6, x7, x1)\n    x9 =8506404699(x8)\n    x10 = astuple(SIX, FIVE)\n    x11 = canvas(x7, x10)\n    x12 = asindices(x11)\n    x13 = toobject(x12, I)\n    x14 = increment(x13)\n    x15 = mostcolor(I)\n    x16 = shift(x14, x15)\n    x17 = combine(x12, x16)\n    x18 = paint(x11, x17)\n    x19 = hmirror(x18)\n    x20 = objects(x19, T, F, T)\n    x21 = colorfilter(x20, x7)\n    x22 = rbind(adjacent, x21)\n    x23 = mfilter(x22, x22)\n    x24 = replace(x18, x5, xONE)\n    O = paint(x24, x23)\n    return O"], [1.1, "def solve_f8569f27(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(greater, THREE)\n    x3 = chain(x2, vmirror, dmirror)\n    x4 =535(I)\n    x5 = sfilter(x4, x3)\n    x6 = fork(combine, vfrontier, hfrontier)\n    x7 = x6(x5)\n    x8 = rbind(compose, initset)\n    x9 = lbind(rbind, manhattan)\n    x10 = chain(x8, x9, initset)\n    x11 = lbind(compose, initset)\n    x12 = chain(x11, x9, outbox)\n    x13 = compose(merge, x7)\n    x14 = fork(both, x12, x13)\n    x15 = fork(both, xO, x14)\n    x16 = apply(x15, x11)\n    x17 = decrement(x16)\n    x18 = tojvec(x17)\n    x19 = shoot(x18, UNITY)\n    x20 = mapply(x16, x19)\n    x21 = fill(I, ZERO, x20)\n    x22 = asobject(x21)\n    x23 = vmirror(x22)\n    x24 = index(x82, x23)\n    x25 = branch(x24, DOWN, RIGHT)\n    x26 = add(x25, x28)\n    x27 = ulcorner(x25)\n    x28 = add(x27, x28)\n    x29 = shift(x23, x28)\n    x30 = urcorner(x25)\n    x31 = add(x30, x28)\n    x32 = llcorner(x25)\n    x33 = add(x32, x28)\n    x34 = shift(x33, x24)\n    x35 = paint(x21, x29)\n    O = fill(x35, ZERO, x32_ulcorner)\n    return O"], [1.1, "def solve_33e654ed(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = eapply(d511117, x1)\n    O =7599(x2)\n    return O"], [1.1, "def solve_35fc5bab(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    x5 = mostcolor(x4)\n    x6 = objects(x2, T, F, F)\n    x7 = colorfilter(x6, x5)\n    x8 = compose(normalize, toindices)\n    x9 = apply(x8, x7)\n    x10 = x2(x9)\n    x11 = remove(x10, x9)\n    x12 = lbind(sfilter, x11)\n    x13 = lbind(matcher, vline)\n    x14 = chain(x12, x4, x13)\n    x15 =49filter(x12, x14)\n    x16 = difference(x12, x15)\n    x17 = compose(size, x16)\n    x18 = matcher(x17, ZERO)\n    x19 = lbind(sfilter, x15)\n    x20 = lbind(matcher, x18)\n    x21 = compose(x19, x20)\n    x22 = fork(valmax, x21, x17)\n    x23 = lbind(sfilter, x15)\n    x24 = lbind(matcher, x18)\n    x25 = compose(x23, x24)\n    x26 = fork(apply, x25, x21)\n    x27 = lbind(lbind, shift)\n    x28 = compose(x27, dneighbors)\n    x29 = fork(mapply, x28, x22)\n    x30 = fork(mapply, x28, xl)\n    x31 = fork(combine, x29, x30)\n    x32 = mapply(x31, x15)\n    O = paint(x1, x32)\n    return O"], [1.1, "def solve_7553e8e8(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = MN objectsize(x5)\n    x7 = colorcount(I, x3)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x3)\n    x10 = leftmost(x9)\n    x11 = ofcolor(I, x3)\n    x12 = rightmost(x11)\n    x13 = matcher(first, x8)\n    x14 = rbind(sfilter, x13)\n    x15 = chain(x12, delta, x14)\n    x16 = apply(x15, x11)\n    O = fill(I, x3, x16)\n    return O"], [1.1, "def solve_48e54ce9(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =indices(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = double(x width)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = merge(x10)\n    x12 = mostcolor(x11)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = rbind(sfilter, x14)\n    x16 = lbind(occurrences, x6)\n    x17 = compose(x16, x15)\n    x18 = fork(positive, size, x17)\n    x19 = lbind(rbind, subtract)\n    x20 = rbind(rapply, x11)\n    x21 = compose(initset, x18)\n    x22 = chain(first, x20, x21)\n    x23 = compose(x18, x22)\n    x24 = apply(x23, x3)\n    x25 =Contin solve(x24, x6)\n    x26 = cover(x6, x25)\n    x27 = compose(x26, ulcorner)\n    x28 = apply(x27, x02)\n    x29 = vmirror(x28)\n    x30 = multiply(x NEG_TWO, NEG_TWO)\n    x31 = apply(x30, x29)\n    x32 = asindices(x29)\n    x33 = ofcolor(x29, x12)\n    x34 = difference(x32, x33)\n    x35 = lrcorner(x24)\n    x36 = lbind(shift, x24)\n    x37 = mapply(x36, x31)\n    O = paint(x32, x37)\n    return O"], [1.1, "def solve_e1b8c13d(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = apply(normalize, x2)\n    x4 = astuple(NEG_TWO, ONE)\n    x5 = astuple(UNITY, x4)\n    x6 = shift(x3, x5)\n    x7 = rbind(argmin, x3)\n    x8 =44232000(x3)\n    x9 = lbind(rbind, manhattan)\n    x10 = compose(x9, initset)\n    x11 = fork(compose, x7, x10)\n    x12 = product(x1, x6)\n    x13 = fork(shift, identity, x12)\n    x14 = mapply(x13, x12)\n    O = paint(x1, x14)\n    return O"], [1.1, "def solve_ebb2bd74(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = EIGHT(I)\n    x2 = vmirror(x1)\n    O =:\n    (x2, vmirror)\n    return O"], [1.1, "def solve_dd5bcffe(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = rot180(I)\n    x2 = rot270(I)\n    x3 = rot180(x1)\n    x4 =81(x3)\n    x5 = fork(combine, vfrontier, hfrontier)\n    x6 = compose(x5, x4)\n    x7 = sfilter(x2, x6)\n    O = fill(x3, ZERO, x7)\n    return O"], [1.1, "def solve_b825be8b(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = x2(I, TWO)\n    x4 = fgpartition(x3)\n    x5 = merge(x4)\n    x6 = chain(double, numcolors, numcolors)\n    x7 = x6(x5)\n    x8 = compose(vmirror, x7)\n    x9 = power(x8, TWO)\n    x10 = x9(x4)\n    x11 = x9(x4)\n    x12 = toindices(x11)\n    x13 = apply(x8, x12)\n    x14 = contained(x10, x13)\n    x15 = flip(x14)\n    x16 = branch(x15, hmirror, vmirror)\n    x17 = x16(x15)\n    x18 =757(x17, x4)\n    x19 = chain(dmirror, asobject, x18)\n    x20 = matcher(x19, x17)\n    x21 = extract(x50, x20)\n    x22 = x21(x4)\n    x23 = x21(x11)\n    x24 = asindices(x23)\n    x25 =412(flip, x24)\n    x26 = x25(x24)\n    x27 = fill(x22, EIGHT, x25)\n    O = paint(x27, x26)\n    return O"], [1.1, "def solve_211e9ecd(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = rbind(Sfilter, vline)\n    x2 = compose(positive, size)\n    x3 = rbind(sfilter, hline)\n    x4 = compose(x2, x3)\n    x5 = chain(x1, x4, frontiers)\n    x6 = argmax(x5, x4)\n    x7 =6(I)\n    x8 = remove(x6, x7)\n    x9 = lbind(shift, x6)\n    x10 = height(x6)\n    x11 = divide(x10, x9)\n    x12 = width(x6)\n    x13 = divide(x12, x4)\n    x14 = astuple(x11, x13)\n    x15 = maximum(x14)\n    x16 = increment(x15)\n    x17 = interval(ONE, x16, ONE)\n    x18 = matcher(numcolors, x16)\n    x19 = lbind(shift, x6)\n    x20 = rbind(multiply, x15)\n    x21 = lbind(add, x20)\n    x22 = chain(x19, x21, invert)\n    x23 = fork(combine, x18, x22)\n    x24 = lbind(apply, x23)\n    x25 = rbind(colorcount, x6)\n    x26 = compose(x24, x25)\n    x27 = apply(x26, x52)\n    x28 = normalize(x6)\n    x29 = mapply(x28, x27)\n    x30 = shape(x29)\n    x31 = canvas(ZERO, x30)\n    O = paint(x31, x29)\n    return O"]], "1e97544e": [[0.05090373268510345, "def solve_30e5060f(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_521f7d01(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_ef2411e3(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_cf5f5894(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_bcd0445c(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_632d98f3(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_769dcfa4(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_58b88c45(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_050ee037(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_0159e6ca(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_657d180c(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05745638404752545, "def solve_d8650412(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = lbind(colorcount, I)\n    x5 = argmin(x3, x4)\n    x6 = ofcolor(I, x1)\n    x7 = ofcolor(I, x5)\n    x8 = combine(x6, x7)\n    x9 = mapply(neighbors, x8)\n    x10 = difference(x9, x8)\n    x11 = toobject(x10, I)\n    x12 = leastcolor(x11)\n    x13 = ofcolor(I, x1)\n    x14 = first(x13)\n    x15 = initset(x14)\n    x16 = objects(I, T, F, F)\n    x17 = colorfilter(x16, x12)\n    x18 = lbind(adjacent, x8)\n    x19 = mfilter(x17, x18)\n    x20 = toindices(x19)\n    x21 = rbind(manhattan, x15)\n    x22 = chain(even, x21, initset)\n    x23 = sfilter(x20, x22)\n    x24 = fill(I, x5, x20)\n    O = fill(x24, x1, x23)\n    return O"], [0.05978427658322649, "def solve_05c8c2d7(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = astuple(x1, ONE)\n    x8 = astuple(ONE, x2)\n    x9 = decrement(x1)\n    x10 = decrement(x2)\n    x11 = toivec(x10)\n    x12 = tojvec(x9)\n    x13 = crop(I, x11, x8)\n    x14 = crop(I, x12, x7)\n    x15 = asobject(x14)\n    x16 = asobject(x13)\n    x17 = vperiod(x15)\n    x18 = hperiod(x16)\n    x19 = astuple(x17, x18)\n    x20 = lbind(multiply, x19)\n    x21 = neighbors(ORIGIN)\n    x22 = mapply(neighbors, x21)\n    x23 = apply(x20, x22)\n    x24 = lbind(shift, x6)\n    x25 = mapply(x24, x23)\n    O = paint(I, x25)\n    return O"], [0.06555616266185658, "def solve_ec74704f(I):\n    x1 = fork(multiply, height, width)\n    x2 = partition(I)\n    x3 = argmax(x2, x1)\n    x4 = remove(x3, x2)\n    x5 = argmax(x4, x1)\n    x6 = other(x4, x5)\n    x7 = palette(I)\n    x8 = lrcorner(x5)\n    x9 = add(x8, UNITY)\n    x10 = llcorner(x5)\n    x11 = add(x10, DOWN_LEFT)\n    x12 = urcorner(x5)\n    x13 = add(x12, UP_RIGHT)\n    x14 = ulcorner(x5)\n    x15 = add(x14, NEG_UNITY)\n    x16 = shoot(x9, UNITY)\n    x17 = shoot(x11, DOWN_LEFT)\n    x18 = shoot(x13, UP_RIGHT)\n    x19 = shoot(x15, NEG_UNITY)\n    x20 = combine(x16, x17)\n    x21 = combine(x18, x19)\n    x22 = combine(x20, x21)\n    x23 = color(x6)\n    O = fill(I, x23, x22)\n    return O"], [0.06555616266185658, "def solve_6aa471db(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = normalize(x2)\n    x4 = lbind(matcher, first)\n    x5 = compose(x4, mostcolor)\n    x6 = fork(sfilter, identity, x5)\n    x7 = fork(difference, identity, x6)\n    x8 = lbind(rbind, upscale)\n    x9 = interval(ONE, FOUR, ONE)\n    x10 = apply(x8, x9)\n    x11 = initset(identity)\n    x12 = insert(vmirror, x11)\n    x13 = insert(hmirror, x12)\n    x14 = insert(cmirror, x13)\n    x15 = insert(dmirror, x14)\n    x16 = fork(compose, first, last)\n    x17 = lbind(occurrences, I)\n    x18 = lbind(lbind, shift)\n    x19 = compose(x17, x7)\n    x20 = product(x15, x10)\n    x21 = apply(x16, x20)\n    x22 = rapply(x21, x3)\n    x23 = fork(mapply, x18, x19)\n    x24 = mapply(x23, x22)\n    O = paint(I, x24)\n    return O"], [0.06555616266185658, "def solve_cd0cd5f8(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.06555616266185658, "def solve_6a2490db(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.06555616266185658, "def solve_abd3154b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_d1d5ee2a(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.06555616266185658, "def solve_59c78fe3(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.06555616266185658, "def solve_158fb1ca(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_47e726cc(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = paint(I, x5)\n    return O"], [0.06555616266185658, "def solve_3269790b(I):\n    x1 = lbind(multiply, THREE)\n    x2 = rbind(add, THREE)\n    x3 = compose(x2, x1)\n    x4 = fork(equality, identity, x3)\n    x5 = compose(x4, last)\n    x6 = ofcolor(I, ZERO)\n    x7 = sfilter(x6, x5)\n    O = fill(I, ZERO, x7)\n    return O"], [0.06555616266185658, "def solve_e582411f(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_e056dd34(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = recolor(ZERO, x2)\n    x4 = normalize(x3)\n    x5 = occurrences(I, x4)\n    x6 = toindices(x4)\n    x7 = lbind(shift, x6)\n    x8 = mapply(x7, x5)\n    O = fill(I, x1, x8)\n    return O"], [0.06555616266185658, "def solve_60924532(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_ddac29ae(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ONE, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    x7 = fill(I, EIGHT, x6)\n    x8 = add(SIX, SIX)\n    x9 = astuple(EIGHT, x8)\n    x10 = index(x7, x9)\n    x11 = equality(x10, EIGHT)\n    x12 = initset(x9)\n    x13 = add(x9, DOWN)\n    x14 = insert(x13, x12)\n    x15 = toobject(x14, x7)\n    x16 = toobject(x14, I)\n    x17 = branch(x11, x16, x15)\n    O = paint(x7, x17)\n    return O"], [0.06555616266185658, "def solve_f83105f3(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.06555616266185658, "def solve_40a31bdc(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_4756bb5d(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.06555616266185658, "def solve_cb78fd2c(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.06555616266185658, "def solve_a5ee513e(I):\n    x1 = ofcolor(I, TWO)\n    x2 = recolor(ZERO, x1)\n    x3 = normalize(x2)\n    x4 = occurrences(I, x2)\n    x5 = lbind(shift, x3)\n    x6 = apply(x5, x4)\n    x7 = astuple(ONE, THREE)\n    x8 = astuple(FIVE, ONE)\n    x9 = astuple(TWO, SIX)\n    x10 = initset(x7)\n    x11 = insert(x8, x10)\n    x12 = insert(x9, x11)\n    x13 = rbind(contained, x12)\n    x14 = chain(flip, x13, ulcorner)\n    x15 = sfilter(x6, x14)\n    x16 = merge(x15)\n    x17 = recolor(TWO, x16)\n    O = paint(I, x17)\n    return O"], [0.06555616266185658, "def solve_f9052e5d(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_66585baa(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_dc9272d7(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.06555616266185658, "def solve_536ec41c(I):\n    x1 = fgpartition(I)\n    x2 = compose(last, first)\n    x3 = power(last, TWO)\n    x4 = fork(connect, x2, x3)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x1)\n    O = paint(I, x6)\n    return O"], [0.06798789420354572, "def solve_3c97fd3c(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = fgpartition(I)\n    x6 = objects(I, T, F, F)\n    x3 = colorfilter(x6, x4)\n    x4 = rbind(bordering, I)\n    x5 = compose(flip, x4)\n    x6 = mfilter(x3, x5)\n    O = fill(I, ONE, x6)\n    return O"], [0.06858821998557219, "def solve_dc925b88(I):\n    x1 = ofcolor(I, EIGHT)\n    x2 = dneighbors(UNITY)\n    x3 = insert(UNITY, x2)\n    O = fill(I, THREE, x3)\n    return O"], [0.06858821998557219, "def solve_336ea098(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = center(x2)\n    x4 = dneighbors(x3)\n    x5 = insert(x3, x4)\n    O = fill(I, THREE, x5)\n    return O"], [0.06871501268049482, "def solve_434e04ac(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = rbind(difference, x2)\n    x4 = rbind(greater, TWO)\n    x5 = chain(x4, size, x3)\n    x6 = compose(x5, dneighbors)\n    x7 = sfilter(x2, x6)\n    O = fill(I, ZERO, x7)\n    return O"], [0.06871501268049482, "def solve_f9016614(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = rbind(difference, x2)\n    x4 = rbind(greater, TWO)\n    x5 = chain(x4, size, x3)\n    x6 = compose(x5, dneighbors)\n    x7 = sfilter(x2, x6)\n    O = fill(I, ZERO, x7)\n    return O"], [0.06959741552663885, "def solve_97fae789(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.0702135574591548, "def solve_b0989855(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.0702135574591548, "def solve_32f461fa(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.0702135574591548, "def solve_265580a2(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.0702135574591548, "def solve_ef32b612(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.0702135574591548, "def solve_b34deaec(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.07068642804421423, "def solve_b8db33de(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = fork(subtract, first, last)\n    x4 = fork(multiply, sign, identity)\n    x5 = compose(x4, x3)\n    x6 = lbind(greater, THREE)\n    x7 = chain(x6, maximum, x5)\n    x8 = lbind(lbind, astuple)\n    x9 = rbind(chain, x8)\n    x10 = lbind(compose, x7)\n    x11 = rbind(x9, x10)\n    x12 = lbind(lbind, sfilter)\n    x13 = compose(x11, x12)\n    x14 = lbind(mapply, backdrop)\n    x15 = fork(apply, x13, identity)\n    x16 = compose(x14, x15)\n    x17 = power(x16, TWO)\n    x18 = x17(x2)\n    x19 = fill(I, FOUR, x18)\n    O = fill(x19, x1, x2)\n    return O"], [0.07641808482315048, "def solve_75ab1707(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_0cfcdfc1(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_7ecf000d(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_89e8ae4e(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_bf88c42d(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_89abf998(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_7906d4c3(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_d86facef(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_d9c45414(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_2849a157(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_8c0646b3(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_ab6c7f75(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_81e17c6d(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_3114fbfb(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_52ba8f2a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_85904b3a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_f8aab032(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_49007793(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_43b73717(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07892238836281784, "def solve_5a02e5ea(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.07909280166991962, "def solve_c609818a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, ZERO, x2)\n    return O"], [0.07909280166991962, "def solve_c9156682(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.08283557492092357, "def solve_31ee8b3e(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.08283557492092357, "def solve_ab3067be(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.0868238750835419, "def solve_600f8178(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_23783247(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_ed49d419(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_216d8721(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_759e05e9(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_47293928(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_48d8d3e1(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.09720967561895832, "def solve_30905d00(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.09720967561895832, "def solve_a07244da(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.09720967561895832, "def solve_323133d6(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.09720967561895832, "def solve_b6322588(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.10434388482560263, "def solve_e1196e4b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.10649840966196776, "def solve_98f7aec9(I):\n    x1 = mostcolor(I)\n    x2 = replace(I, x1, ZERO)\n    x3 = shoot(ORIGIN, UNITY)\n    O = underfill(x2, x1, x3)\n    return O"], [0.11341569711744519, "def solve_b4c6ca63(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, x1, x4)\n    return O"], [0.11410495726315961, "def solve_f12bbe53(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.11873730483078786, "def solve_c689ab82(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.11873730483078786, "def solve_54fc2322(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.12169800916884342, "def solve_300d1f81(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.1217171472815362, "def solve_fa771c7f(I):\n    x1 = palette(I)\n    x2 = remove(FIVE, x1)\n    x3 = first(x2)\n    x4 = ofcolor(I, x3)\n    x5 = fill(I, ZERO, x4)\n    x6 = ofcolor(I, FIVE)\n    O = fill(x5, x3, x6)\n    return O"], [0.1239852807263826, "def solve_2f81834b(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.1239852807263826, "def solve_6f34a6d3(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.12586178836089204, "def solve_a2a79039(I):\n    x1 = ofcolor(I, TWO)\n    x2 = ofcolor(I, THREE)\n    x3 = recolor(TWO, x1)\n    x4 = ulcorner(x2)\n    x5 = ulcorner(x1)\n    x6 = subtract(x4, x5)\n    x7 = increment(x6)\n    O = move(I, x3, x7)\n    return O"], [0.12706715242232244, "def solve_62ea7c08(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, last)\n    x5 = fork(recolor, first, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [0.1291415585217549, "def solve_b842301b(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = lbind(recolor, EIGHT)\n    x4 = rbind(ofcolor, x1)\n    x5 = chain(x3, backdrop, x4)\n    x6 = fork(paint, identity, x5)\n    x7 = height(I)\n    x8 = vsplit(I, x7)\n    x9 = mapply(x6, x8)\n    x10 = ofcolor(x9, EIGHT)\n    x11 = dmirror(I)\n    x12 = width(I)\n    x13 = vsplit(x11, x12)\n    x14 = mapply(x6, x13)\n    x15 = dmirror(x14)\n    x16 = ofcolor(x15, EIGHT)\n    x17 = combine(x10, x16)\n    x18 = difference(x17, x2)\n    O = fill(I, EIGHT, x18)\n    return O"], [0.13134103434345124, "def solve_11def15c(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.1314364028975242, "def solve_b74b2ee6(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = subgrid(x5, I)\n    x7 = mostcolor(x6)\n    x8 = leastcolor(x6)\n    O = switch(x6, x7, x8)\n    return O"], [0.1316993167720556, "def solve_b3e6df2e(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.13256015955962436, "def solve_02df5367(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = rbind(multiply, THREE)\n    x6 = rbind(divide, THREE)\n    x7 = compose(x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = toindices(x4)\n    x10 = compose(x8, last)\n    x11 = sfilter(x9, x10)\n    O = fill(I, SIX, x11)\n    return O"], [0.13378620904168428, "def solve_3cad760b(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, FOUR, x3)\n    return O"], [0.13508938916939192, "def solve_b7ea780c(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = mostcolor(I)\n    O = replace(x3, x4, ZERO)\n    return O"], [0.14085477486846634, "def solve_f6458605(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, TWO, x3)\n    return O"], [0.14125400895450432, "def solve_442fa580(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(shoot, RIGHT)\n    x4 = compose(x3, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(x1, DOWN_LEFT)\n    x9 = initset(x8)\n    x10 = mostcolor(I)\n    x11 = recolor(x10, x9)\n    x12 = objects(x7, T, F, T)\n    x13 = insert(x11, x12)\n    x14 = order(x13, uppermost)\n    x15 = first(x14)\n    x16 = remove(x11, x14)\n    x17 = remove(x15, x14)\n    x18 = compose(lrcorner, first)\n    x19 = compose(lrcorner, last)\n    x20 = fork(connect, x18, x19)\n    x21 = compose(color, first)\n    x22 = fork(recolor, x21, x20)\n    x23 = pair(x16, x17)\n    x24 = mapply(x22, x23)\n    O = underpaint(x7, x24)\n    return O"], [0.14343122109904335, "def solve_a4c657fa(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.15924388832696912, "def solve_47aa2c22(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.16699488304013319, "def solve_63fcb204(I):\n    x1 = asindices(I)\n    x2 = tophalf(I)\n    x3 = bottomhalf(I)\n    x4 = leastcolor(x2)\n    x5 = leastcolor(x3)\n    x6 = hfrontier(TWO_BY_ZERO)\n    x7 = box(x1)\n    x8 = combine(x6, x7)\n    x9 = fill(x2, x4, x8)\n    x10 = hmirror(x9)\n    x11 = replace(x10, x4, x5)\n    O = vconcat(x9, x11)\n    return O"], [0.16903724504454612, "def solve_019b9742(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.16903724504454612, "def solve_ff0e6161(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.16903724504454612, "def solve_2276b0e0(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.1773065582183363, "def solve_1fd87429(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.18190769514794702, "def solve_aa0da7ff(I):\n    x1 = objects(I, T, F, T)\n    x2 = mapply(delta, x1)\n    O = fill(I, SEVEN, x2)\n    return O"], [0.18190769514794702, "def solve_4c822624(I):\n    x1 = objects(I, T, F, T)\n    x2 = mapply(delta, x1)\n    O = fill(I, SEVEN, x2)\n    return O"], [0.18710489103348263, "def solve_a35c3976(I):\n    x1 = replace(I, SIX, TWO)\n    x2 = objects(x1, T, T, T)\n    x3 = colorfilter(x2, ONE)\n    x4 = merge(x3)\n    O = fill(x1, THREE, x4)\n    return O"], [0.19082520987900767, "def solve_2aea6d72(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.20306126840468763, "def solve_eb11ea87(I):\n    O = dmirror(I)\n    return O"], [0.20306126840468763, "def solve_e9ca16ad(I):\n    O = dmirror(I)\n    return O"], [0.20940552136163237, "def solve_3eb6d332(I):\n    O = rot90(I)\n    return O"], [0.20955539093771366, "def solve_edc0bdf2(I):\n    O = rot270(I)\n    return O"], [0.21174973638101943, "def solve_2c827883(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot180(x3)\n    return O"], [0.21391916164730382, "def solve_39d464fa(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.21391916164730382, "def solve_f668bb98(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.21391916164730382, "def solve_7e08c377(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.21391916164730382, "def solve_2eace2ca(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.21391916164730382, "def solve_46a052e6(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.21391916164730382, "def solve_a489a1e1(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.21729876887286714, "def solve_56fff384(I):\n    x1 = fgpartition(I)\n    x2 = fork(recolor, color, backdrop)\n    x3 = mapply(x2, x1)\n    O = paint(I, x3)\n    return O"], [0.21904040042169512, "def solve_3c5b9738(I):\n    O = rot180(I)\n    return O"], [0.21904040042169512, "def solve_3c8b807a(I):\n    O = rot180(I)\n    return O"], [0.22840986411980327, "def solve_283d0dbe(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.22840986411980327, "def solve_3e317936(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.23218077129841838, "def solve_1360f15b(I):\n    x1 = vmirror(I)\n    x2 = fgpartition(x1)\n    x3 = order(x2, size)\n    x4 = last(x3)\n    x5 = remove(x4, x3)\n    x6 = compose(toindices, normalize)\n    x7 = rbind(upscale, TWO)\n    x8 = chain(toindices, x7, normalize)\n    x9 = x6(x4)\n    x10 = rbind(intersection, x9)\n    x11 = chain(size, x10, x8)\n    x12 = argmax(x5, x11)\n    x13 = subgrid(x12, x1)\n    O = vmirror(x13)\n    return O"], [0.23218077129841838, "def solve_9ada3015(I):\n    x1 = vmirror(I)\n    x2 = fgpartition(x1)\n    x3 = order(x2, size)\n    x4 = last(x3)\n    x5 = remove(x4, x3)\n    x6 = compose(toindices, normalize)\n    x7 = rbind(upscale, TWO)\n    x8 = chain(toindices, x7, normalize)\n    x9 = x6(x4)\n    x10 = rbind(intersection, x9)\n    x11 = chain(size, x10, x8)\n    x12 = argmax(x5, x11)\n    x13 = subgrid(x12, x1)\n    O = vmirror(x13)\n    return O"], [0.23632669908785528, "def solve_6548c1cf(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = replace(x11, ONE, TWO)\n    return O"], [0.24133801648130837, "def solve_b6c48e28(I):\n    x1 = replace(I, FOUR, ZERO)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [0.24133801648130837, "def solve_b0b429e6(I):\n    x1 = replace(I, FOUR, ZERO)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply( x4, x7)\n    O = cmirror(x8)\n    return O"], [0.2537260279414613, "def solve_e7587275(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_da3ae983(I):\n    x1 = subgrid(I, I)\n    x2 = vmirror(x1)\n    x3 = equality(x2, I)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_8b6d368e(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_5ba9ea34(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_85a2e2db(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_57a3c5d0(I):\n    O = tophalf(I)\n    return O"], [0.2686091447400782, "def solve_a44520b9(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(add, height, width)\n    x3 = compose(decrement, x2)\n    x4 = fork(equality, size, x3)\n    x5 = fork(difference, toindices, box)\n    x6 = compose(size, x5)\n    x7 = matcher(x6, ZERO)\n    x8 = sfilter(x1, x4)\n    x9 = difference(x1, x8)\n    x10 = sfilter(x9, x7)\n    x11 = merge(x1)\n    x12 = fill(I, TWO, x11)\n    x13 = merge(x8)\n    x14 = fill(x12, ONE, x13)\n    x15 = merge(x10)\n    O = fill(x14, SIX, x15)\n    return O"], [0.2704028721250951, "def solve_ba043d5e(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.2704028721250951, "def solve_ba21fa2a(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.2704028721250951, "def solve_a8b2e634(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.2737085951518015, "def solve_cae86563(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, F, F, T)\n    x6 = rbind(colorcount, ONE)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.28964767626019455, "def solve_8f4a6a22(I):\n    x1 = trim(I)\n    x2 = trim(x1)\n    x3 = tophalf(x2)\n    x4 = lefthalf(x3)\n    x5 = tophalf(x2)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(x2)\n    x8 = lefthalf(x7)\n    x9 = bottomhalf(x2)\n    x10 = righthalf(x9)\n    x11 = index(I, ORIGIN)\n    x12 = width(I)\n    x13 = decrement(x12)\n    x14 = tojvec(x13)\n    x15 = index(I, x14)\n    x16 = height(I)\n    x17 = decrement(x16)\n    x18 = toivec(x17)\n    x19 = index(I, x18)\n    x20 = shape(I)\n    x21 = decrement(x20)\n    x22 = index(I, x21)\n    x23 = compress(I)\n    x24 = asindices(x23)\n    x25 = box(x24)\n    x26 = corners(x24)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, x23)\n    x29 = color(x28)\n    x30 = palette(x2)\n    x31 = other(x30, x29)\n    x32 = replace(x4, x31, x11)\n    x33 = replace(x6, x31, x15)\n    x34 = replace(x8, x31, x19)\n    x35 = replace(x10, x31, x22)\n    x36 = hconcat(x32, x33)\n    x37 = hconcat(x34, x35)\n    O = vconcat(x36, x37)\n    return O"], [0.29118241282602314, "def solve_f1748008(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.29118241282602314, "def solve_24ebe47d(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.29118241282602314, "def solve_18c3e8d6(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.29118241282602314, "def solve_ea4f93e6(I):\n    x1 = shape(I)\n    x2 = add(x1, TWO)\n    x3 = canvas(ZERO, x2)\n    x4 = asobject(I)\n    x5 = shift(x4, UNITY)\n    x6 = paint(x3, x5)\n    x7 = asindices(x3)\n    x8 = fork(difference, box, corners)\n    x9 = x8(x7)\n    x10 = lbind(lbind, manhattan)\n    x11 = rbind(compose, initset)\n    x12 = chain(x11, x10, initset)\n    x13 = lbind(argmin, x5)\n    x14 = chain(first, x13, x12)\n    x15 = fork(astuple, x14, identity)\n    x16 = apply(x15, x9)\n    O = paint(x6, x16)\n    return O"], [0.29493888612223423, "def solve_47e25343(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.29493888612223423, "def solve_3828d505(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.29664969986532563, "def solve_4d8b92d5(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = apply(toindices, x6)\n    x8 = rbind(shoot, RIGHT)\n    x9 = compose(x8, center)\n    x10 = fork(recolor, color, x9)\n    x11 = mapply(x10, x6)\n    x12 = paint(I, x11)\n    x13 = width(I)\n    x14 = interval(ZERO, x13, ONE)\n    x15 = apply(double, x14)\n    x16 = apply(increment, x15)\n    x17 = apply(tojvec, x16)\n    x18 = prapply(shift, x7, x17)\n    x19 = merge(x18)\n    O = fill(x12, FIVE, x19)\n    return O"], [0.3014818574402235, "def solve_abb7c25f(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, bottomhalf)\n    O = x2(I)\n    return O"], [0.3063136421137608, "def solve_f48a2bf4(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.3082441023536176, "def solve_a7927a55(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.3082441023536176, "def solve_a1f7930d(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.3082441023536176, "def solve_a36b0c17(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.31011174594270147, "def solve_f541996f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.31011174594270147, "def solve_14139c6d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.31011174594270147, "def solve_7f60ad53(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.31011174594270147, "def solve_375e84de(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.31011174594270147, "def solve_43d2d38b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.31011174594270147, "def solve_4ec97b2f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.3104501482052144, "def solve_84a1782b(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_263d005f(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_e3b2d358(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_55485376(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_4904db5d(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_95a5b43b(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.31659249691417035, "def solve_6f209644(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = chain(palette, trim, x2)\n    x4 = lbind(contained, THREE)\n    x5 = compose(x4, x3)\n    x6 = fork(add, height, width)\n    x7 = compose(decrement, x6)\n    x8 = fork(equality, size, x7)\n    x9 = mfilter(x1, x5)\n    x10 = mfilter(x1, x8)\n    x11 = replace(I, THREE, SIX)\n    x12 = fill(x11, TWO, x9)\n    O = fill(x12, ONE, x10)\n    return O"], [0.3204614475119984, "def solve_0d017063(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [0.320952197319818, "def solve_6d4fa3d9(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.3314449532924934, "def solve_0b860acc(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.3314449532924934, "def solve_e11328c7(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.3314449532924934, "def solve_e8445d78(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.33324150002846714, "def solve_dd62be86(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = ofcolor(I, ZERO)\n    x4 = astuple(x1, ONE)\n    x5 = crop(I, ORIGIN, x4)\n    x6 = hupscale(x5, x2)\n    O = fill(x6, ZERO, x3)\n    return O"], [0.3384341187221576, "def solve_7a50eacb(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.3384341187221576, "def solve_2e488234(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.35285797856791773, "def solve_35adba73(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.35442756268662284, "def solve_8bb78835(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = cover(I, x2)\n    x4 = chain(toivec, invert, height)\n    x5 = fork(shift, identity, x4)\n    x6 = mapply(x5, x1)\n    O = paint(x3, x6)\n    return O"], [0.4062968519814561, "def solve_aee26452(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [0.40995162868139406, "def solve_08336b1b(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.40995162868139406, "def solve_9b4bb339(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.40995162868139406, "def solve_e2449288(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.40995162868139406, "def solve_e0a8035a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.40995162868139406, "def solve_349b8865(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.4170310435194296, "def solve_57708b48(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.4170310435194296, "def solve_04762ae7(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.4231949243417133, "def solve_034242c8(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.43035369154772135, "def solve_4ecaa663(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = mostcolor(x2)\n    x4 = normalize(x2)\n    x5 = mostcolor(I)\n    x6 = shape(x2)\n    x7 = canvas(x5, x6)\n    O = fill(x7, x3, x4)\n    return O"], [0.48269935405826175, "def solve_be4d29ee(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x7, x16)\n    x20 = ofcolor(x8, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, THREE, x21)\n    return O"], [0.5033734845047396, "def solve_346ef70b(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.5064013204664738, "def solve_dde66ef1(I):\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [0.5455548516524127, "def solve_be1b59b4(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.5455548516524127, "def solve_90008deb(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 =color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.5586554186554187, "def solve_1444204b(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.5586554186554187, "def solve_4b150a71(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.5586554186554187, "def solve_1e979e12(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.5586554186554187, "def solve_4e2be6ec(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.5586554186554187, "def solve_57021259(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.5586554186554187, "def solve_69229a21(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.5586554186554187, "def solve_346786cc(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.5586554186554187, "def solve_1b57659e(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.5586554186554187, "def solve_19273021(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.5588263588263588, "def solve_d32ee5bb(I):\n    x1 = index(I, ORIGIN)\n    x2 = equality(x1, TWO)\n    x3 = branch(x2, vsplit, hsplit)\n    x4 = x3(I, TWO)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = palette(x5)\n    x8 = palette(x6)\n    x9 = intersection(x7, x8)\n    x10 = first(x9)\n    x11 = shape(x5)\n    x12 = canvas(x10, x11)\n    x13 = ofcolor(x5, x10)\n    x14 = ofcolor(x6, x10)\n    x15 = intersection(x13, x14)\n    O = fill(x12, FIVE, x15)\n    return O"], [0.5682644504342618, "def solve_c70348e4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = subgrid(x2, I)\n    return O"], [0.5801077246461932, "def solve_bc4df508(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.6, "def solve_173748df(I):\n    x1 = shape(I)\n    x2 = equality(x1, TWO)\n    x3 = branch(x2, x1, x1)\n    x4 = branch(x2, x1, x1)\n    x5 = canvas(ZERO, x4)\n    x6 = asobject(x5)\n    x7 = occurrences(I, x6)\n    x8 = apply(double, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(shift, x6)\n    x11 = mapply(x10, x9)\n    O = fill(x5, FOUR, x11)\n    return O"], [0.6052508022657276, "def solve_81aa2a4e(I):\n    x1 = objects(I, T, F, T)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = mostcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = extract(x1, x5)\n    O = subgrid(x6, I)\n    return O"], [0.6681821515925028, "def solve_1422fc15(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, T)\n    x4 = merge(x3)\n    x5 = astuple(FOUR, FOUR)\n    x6 = canvas(ZERO, x5)\n    x7 = paint(x6, x4)\n    O = rot90(x7)\n    return O"], [0.6767316017316017, "def solve_de92c2ea(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_5bdc5e08(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_5fa5bfea(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_126bd616(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_39069d30(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.7047029674817701, "def solve_ff6934ef(I):\n    x1 = palette(I)\n    x2 = remove(TWO, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, T, F, T)\n    x9 = colorfilter(x8, TWO)\n    x10 = size(x9)\n    x11 = double(x10)\n    x12 = interval(ZERO, x11, TWO)\n    x13 = apply(tojvec, x12)\n    x14 = astuple(ONE, NINE)\n    x15 = canvas(x4, x14)\n    x16 = fill(x15, ONE, x13)\n    x17 = hsplit(x16, THREE)\n    O = merge(x17)\n    return O"], [0.7090909090909091, "def solve_345ce9b2(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, x13, x16)\n    return O"], [0.7180244366225675, "def solve_6eab0599(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, SIX)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, ONE, SEVEN)\n    x5 = canvas(x4, THREE_BY_THREE)\n    x6 = branch(x1, TWO, ZERO)\n    x7 = connect(ORIGIN, DOWN)\n    x8 = connect(ORIGIN, ZERO_BY_TWO)\n    x9 = combine(x7, x8)\n    O = fill(x5, TWO, x9)\n    return O"], [0.7378747641671847, "def solve_7b32882e(I):\n    x1 = palette(I)\n    x2 = contained(ONE, x1)\n    x3 = contained(TWO, x1)\n    x4 = branch(x2, UNITY, TWO_BY_TWO)\n    x5 = branch(x3, RIGHT, x4)\n    x6 = fork(combine, vfrontier, hfrontier)\n    x7 = x6(x5)\n    x8 = canvas(ZERO, THREE_BY_THREE)\n    O = fill(x8, FIVE, x7)\n    return O"], [0.7528499278499279, "def solve_44535b27(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = color(x3)\n    O = canvas(x4, TWO_BY_TWO)\n    return O"], [0.7554473304473305, "def solve_c7a0a6f6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [0.7562289562289563, "def solve_d4420644(I):\n    x1 = palette(I)\n    x2 = contained(ONE, x1)\n    x3 = contained(TWO, x1)\n    x4 = branch(x2, UNITY, TWO_BY_TWO)\n    x5 = branch(x3, RIGHT, x4)\n    x6 = fork(combine, vfrontier, hfrontier)\n    x7 = x6(x5)\n    x8 = canvas(ZERO, THREE_BY_THREE)\n    O = fill(x8, EIGHT, x7)\n    return O"], [0.7635281385281386, "def solve_93b8e190(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.7635281385281386, "def solve_3d29bb24(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.7635281385281386, "def solve_49755f7a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.7635281385281386, "def solve_2e9466b2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.7635281385281386, "def solve_7d5d61aa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.7635281385281386, "def solve_196b5b15(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.7821428571428571, "def solve_02fda799(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = branch(x2, ONE, SEVEN)\n    O = canvas(x3, UNITY)\n    return O"], [0.8363636363636363, "def solve_31ef29a4(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = first(x2)\n    x4 = neighbors(x3)\n    x5 = astuple(TEN, TEN)\n    x6 = canvas(ZERO, x5)\n    x7 = initset(x3)\n    x8 = fill(x6, x1, x7)\n    O = fill(x8, TWO, x4)\n    return O"], [0.8704545454545455, "def solve_701ae9e7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, T, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.8704545454545455, "def solve_3bc91ce3(I):\n    x1 = frontiers(I)\n    x2 = mfilter(x1, vline)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, F, T)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [1.0, "def solve_671fd68f(I):\n    x1 = ofcolor(I, EIGHT)\n    x2 = switch(I, THREE, FOUR)\n    x3 = rbind(greater, ONE)\n    x4 = compose(x3, numcolors)\n    x5 = sfilter(x1, x4)\n    x6 = remove(x5, x1)\n    x7 = lbind(colorcount, I)\n    x8 = argmax(x6, x7)\n    x9 = remove(x8, x6)\n    x10 = rbind(contained, x9)\n    x11 = compose(x10, first)\n    x12 = rbind(sfilter, x11)\n    x13 = lbind(rbind, subtract)\n    x14 = lbind(occurrences, I)\n    x15 = lbind(lbind, shift)\n    x16 = compose(x13, ulcorner)\n    x17 = chain(x16, x12, normalize)\n    x18 = chain(x14, x12, normalize)\n    x19 = fork(apply, x17, x18)\n    x20 = compose(x15, normalize)\n    x21 = fork(mapply, x20, x19)\n    x22 = astuple(cmirror, dmirror)\n    x23 = astuple(hmirror, vmirror)\n    x24 = combine(x22, x23)\n    x25 = product(x24, x24)\n    x26 = fork(compose, first, last)\n    x27 = apply(x26, x25)\n    x28 = totuple(x27)\n    x29 = combine(x24, x28)\n    x30 = lbind(rapply, x29)\n    x31 = mapply(x30, x5)\n    x32 = mapply(x21, x31)\n    x33 = paint(I, x32)\n    x34 = merge(x51)\n    O = cover(x33, x34)\n    return O"], [1.0, "def solve_1d6999d9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_58b998dc(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_918926cb(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = rbind(colorcount, ZERO)\n    x3 = chain(x2, double, dmirror)\n    x4 = x3(I)\n    x5 = x1(x4)\n    x6 = objects(x5, T, F, T)\n    x7 = argmax(x6, x5)\n    x8 = apply(color, x7)\n    x9 = fgpartition(x8)\n    x10 = insert(x9, x8)\n    x11 = width(x10)\n    x12 = astuple(x11, x5)\n    x13 = repeat(x12, x11)\n    x14 = combine(x13, x7)\n    x15 = merge(x14)\n    x16 = color(x15)\n    x17 = toindices(x15)\n    x18 = apply(24, x17)\n    x19 = lbind(shift, x15)\n    x20 = mapply(x19, x18)\n    x21 = paint(x5, x20)\n    O = x3(x21)\n    return O"], [1.0, "def solve_efb21fa5(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_9d0463fa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = subgrid(x2, I)\n    x8 = palette(x7)\n    x9 = lbind(colorcount, x7)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [1.0, "def solve_b9957d2d(I):\n    x1 = SIX(I, TWO)\n    x2 = vmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = fork(add, first, last)\n    x8 = x7(x2)\n    x9 = toivec(x8)\n    x10 = lbind(shift, x6)\n    x11 = rbind(compose, initset)\n    x12 = chain(x11, x10, last)\n    x13 = lbind(mapply, x12)\n    x14 = rbind(ofcolor, x6)\n    x15 = compose(x13, x14)\n    x16 = fork(paint, identity, x15)\n    x17 = apply(x16, x5)\n    x18 = fork(connect, first, last)\n    x19 = mapply(x18, x17)\n    O = fill(x19, ZERO, x19)\n    return O"], [1.0, "def solve_32fe1c27(I):\n    x1 = fgpartition(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = extract(x1, x3)\n    x5 = normalize(x4)\n    x6 = toindices(x5)\n    x7 = compose(toindices, normalize)\n    x8 = matcher(x7, x6)\n    x9 = mfilter(x1, x8)\n    x10 = fill(I, x4, x9)\n    x11 = replace(x10, ZERO, EIGHT)\n    x12 = fill(x11, TWO, x6)\n    x13 = merge(x12)\n    x14 = dmirror(x13)\n    x15 = fill(x12, ONE, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = rbind(adjacent, x16)\n    x18 = lbind( sfilter, x17)\n    x19 = chain(merge, x18, color)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x2)\n    O = paint(x5, x21)\n    return O"], [1.0, "def solve_25c29c37(I):\n    x1 = width(I)\n    x2 = astuple(ONE, x1)\n    x3 = astuple(TWO, x1)\n    x4 = canvas(THREE, x3)\n    x5 = tojvec(x1)\n    x6 = height(I)\n    x7 = crop(I, x5, x6)\n    x8 = frontiers(x7)\n    x9 = sfilter(x8, hline)\n    x10 = size(x9)\n    x11 = increment(x10)\n    x12 = width(I)\n    x13 = subtract(x12, x11)\n    x14 = increment(x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = lbind(astuple, x16)\n    x18 = lbind(DOWNscale, I)\n    x19 = compose(x17, x18)\n    x20 = decrement(x1)\n    x21 = lbind(multiply, x20)\n    x22 = toivec(x21)\n    x23 = tojvec(x5)\n    x24 = decrement(x23)\n    x25 = lbind(multiply, x24)\n    x26 = add(x22, x25)\n    x27 = vmirror(x6)\n    x28 = vmirror(x26)\n    x29 = compose(x27, x28)\n    x30 = argmin(x29, x27)\n    x31 = ofcolor(x30, EIGHT)\n    x32 = ofcolor(x30, TWO)\n    x33 = combine(x31, x32)\n    x34 = fill(x40, EIGHT, x33)\n    x35 = fill(x34, TWO, x29)\n    O = fill(x35, ONE, x33)\n    return O"], [1.0, "def solve_780d8233(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = merge(x1)\n    x5 = fill(I, NEG_ONE, x4)\n    x6 = shape(I)\n    x7 = canvas(NEG_ONE, x6)\n    x8 = hconcat(x5, x7)\n    x9 = objects(x8, F, F, T)\n    x10 = rbind(other, x3)\n    x11 = compose(x10, palette)\n    x12 = fork(astuple, x11, ulcorner)\n    x13 = apply(x12, x9)\n    x14 = merge(x9)\n    x15 = fill(I, x3, x14)\n    x16 = paint(x15, x13)\n    O = compress(x16)\n    return O"], [1.0, "def solve_4fe3ebd6(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_c4628a92(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_e9d98489(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_86239c66(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_44ed660a(I):\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = ONE(x3)\n    x5 = RIGHT(x4)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = leastcolor(x5)\n    x8 = rbind(shoot, x7)\n    x9 = mapply(x8, x6)\n    x10 = combine(x6, x9)\n    O = fill(I, x7, x10)\n    return O"], [1.0, "def solve_c0bb08a9(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_6779cc10(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_9be52087(I):\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = fart(x5)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = shoot(x7, UP_RIGHT)\n    x10 = combine(x8, x9)\n    x11 = combine(x8, x9)\n    x12 = paint(x3, x11)\n    O = x2(x12)\n    return O"], [1.0, "def solve_17614427(I):\n    x1 = palette(I)\n    x2 = other(x1, ZERO)\n    x3 = ofcolor(I, x2)\n    x4 = asobject(I)\n    x5 = vperiod(x4)\n    x6 = height(I)\n    x7 = halve(x6)\n    x8 = add(x6, x7)\n    x9 = width(I)\n    x10 = astuple(x8, x9)\n    x11 = canvas(ZERO, x10)\n    x12 = increment(x8)\n    x13 = interval(ZERO, x12, x5)\n    x14 = lbind(shift, x3)\n    x15 = apply(toivec, x13)\n    x16 = mapply(x14, x15)\n    O = fill(x11, TWO, x16)\n    return O"], [1.0, "def solve_3d70682b(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_f7b74577(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_18928639(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_3785e926(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_be72322f(I):\n    x1 =first(I)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(ONE, x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = objects(x6, T, F, F)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x5(x10)\n    return O"], [1.0, "def solve_675129ff(I):\n    x1 = lbind(other, I)\n    x2 = compose(x1, palette)\n    x3 = fork(recolor, x2, identity)\n    x4 = mapply(x3, I)\n    x5 = paint(I, x4)\n    O = objects(x5, T, F, T)\n    return O"], [1.0, "def solve_01b5ea66(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = power(double, TWO)\n    x4 = shape(x2)\n    x5 = interval(x4, FIVE, ONE)\n    x6 = lbind(multiply, x4)\n    x7 = apply(x6, x5)\n    x8 = lbind(interval, FIVE)\n    x9 = apply(x8, x5)\n    x10 = lbind(compose, x4)\n    x11 = apply(x10, x9)\n    x12 = lbind(lbind, shift)\n    x13 = dedupe(x7)\n    x14 = mapply(x12, x13)\n    O = paint(I, x14)\n    return O"], [1.0, "def solve_9a0dbf7a(I):\n    x1 = shape(I)\n    x2 = subgrid(x1, I)\n    x3 = mostcolor(I)\n    O = replace(x2, x3, ZERO)\n    return O"], [1.0, "def solve_80ea49cc(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = remove(x3, x2)\n    x5 = lbind(colorfilter, x4)\n    x6 = lbind(rbind, greater)\n    x7 = compose(x5, x6)\n    x8 = rbind(sfilter, x3)\n    x9 = compose(x8, toindices)\n    x10 = lbind(rbind, difference)\n    x11 = compose(x10, toindices)\n    x12 = rbind(compose, initset)\n    x13 = lbind(rbind, manhattan)\n    x14 = compose(x12, x13)\n    x15 = fork(sfilter, x11, x14)\n    x16 = compose(maximum, x15)\n    x17 = compose(minimum, x15)\n    x18 = vsplit(I, TWO)\n    x19 = cmirror(x18)\n    x20 = mostcolor(x19)\n    x21 = initset(x16)\n    x22 = rbind(rapply, x21)\n    x23 = compose(x22, initset)\n    x24 = chain(first, x17, x23)\n    x25 = compose(x20, x24)\n    x26 = fork(paint, x25, x20)\n    x27 = mapply(x26, x4)\n    x28 = merge(x27)\n    O = x27(x28)\n    return O"], [1.0, "def solve_22feee59(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = compose(leftmost, first)\n    x13 = compose(leftmost, last)\n    x14 = fork(equality, x12, x13)\n    x15 = compose(uppermost, first)\n    x16 = compose(uppermost, last)\n    x17 = fork(equality, x15, x16)\n    x18 = fork(either, x14, x17)\n    x19 = sfilter(x11, x18)\n    x20 = compose(color, first)\n    x21 = compose(center, first)\n    x22 = compose(center, last)\n    x23 = fork(connect, x21, x22)\n    x24 = fork(recolor, x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = matcher(last, ZERO)\n    x28 = decrement(x26)\n    x29 = matcher(last, x28)\n    x30 = fork(either, x27, x29)\n    x31 = compose(flip, x30)\n    x32 = sfilter(x15, x31)\n    x33 = paint(I, x32)\n    x34 = size(x1)\n    x35 = positive(x34)\n    x36 = branch(x35, x22, ZERO)\n    O = canvas(x36, UNITY)\n    return O"], [1.0, "def solve_6151131a(I):\n    x1 = dmirror(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [1.0, "def solve_bd8e1004(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = chain(cmirror, x7, x8)\n    x10 = x9(x8)\n    x11 = dedupe(x10)\n    x12 = dmirror(x11)\n    x13 = dedupe(x12)\n    x14 = dmirror(x13)\n    x15 = mostcolor(x14)\n    x16 = objects(x14, T, T, F)\n    x17 = colorfilter(x16, x15)\n    x18 = compose(normalize, toindices)\n    x19 = box(x18)\n    x20 = difference(x16, x19)\n    x21 = rbind(subgrid, x20)\n    x22 = chain(x21, initset, palette)\n    x23 = rbind(subgrid, x5)\n    x24 = chain(x23, x22, asobject)\n    x25 = lbind(subtract, x15)\n    x26 = compose(first, x25)\n    x27 = chain(x26, x24, x26)\n    x28 = fork(shift, x27, x23)\n    x29 = fork(connect, x28, urcorner)\n    x30 = fork(combine, x28, x29)\n    x31 = compose(x30, x27)\n    x32 = fork(shift, x27, x31)\n    x33 = fork(combine, x32, x31)\n    x34 = mapply(x33, x14)\n    x35 = fill(x5, x15, x34)\n    x36 = replace(x35, x15, x5)\n    O = downscale(x36, THREE)\n    return O"], [1.0, "def solve_4fb4dc53(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = objects(I, T, F, T)\n    x5 = totuple(x4)\n    x6 = apply(color, x5)\n    x7 = lbind(sfilter, x6)\n    x8 = lbind(matcher, identity)\n    x9 = chain(size, x7, x8)\n    x10 = valmax(x3, x9)\n    x11 = matcher(x9, x10)\n    x12 = sfilter(x3, x11)\n    x13 = lbind(colorcount, I)\n    x14 = argmin(x12, x13)\n    x15 = ofcolor(I, x14)\n    x16 = recolor(x14, x15)\n    x17 = apply(initset, x16)\n    x18 = remove(x16, x1)\n    x19 = lbind(argmin, x17)\n    x20 = lbind(rbind, manhattan)\n    x21 = compose(x19, x20)\n    x22 = fork(combine, identity, x21)\n    x23 = apply(x22, x18)\n    x24 = matcher(first, x14)\n    x25 = rbind(sfilter, x24)\n    x26 = chain(invert, ulcorner, x25)\n    x27 = fork(shift, identity, x26)\n    x28 = mapply(x27, x23)\n    x29 = normalize(x28)\n    x30 = shape(x29)\n    x31 = canvas(ZERO, x30)\n    O = paint(x31, x29)\n    return O"], [1.0, "def solve_3e4c3006(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = totuple(x3)\n    x5 = apply(color, x4)\n    x6 = lbind(sfilter, x5)\n    x7 = lbind(matcher, identity)\n    x8 = chain(size, x6, x7)\n    x9 = argmax(x6, x8)\n    x10 = repeat(x9, ONE)\n    O = paint(I, x10)\n    return O"], [1.0, "def solve_1159b49c(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_fead7be2(I):\n    x1 = palette(I)\n    x2 = remove(FIVE, x1)\n    x3 = first(x2)\n    x4 = ofcolor(I, x3)\n    x5 = ZERO(x4)\n    x6 = ofcolor(I, FIVE)\n    x7 = center(x6)\n    x8 = vfrontier(x7)\n    x9 = insert(x13, x8)\n    O = fill(I, ZERO, x9)\n    return O"], [1.0, "def solve_5d78ca1c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_82cda086(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_c6ffa7d5(I):\n    x1 = dmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_424fe7cf(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_d9a7ed46(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = partition(I)\n    x7 = fork(multiply, height, width)\n    x8 = fork(equality, size, x7)\n    x9 = sfilter(x6, x8)\n    x10 = argmax(x9, size)\n    x11 = difference(x5, x10)\n    x12 = apply(initset, x11)\n    x13 = rbind(hmatching, x10)\n    x14 = rbind(vmatching, x10)\n    x15 = fork(either, x13, x14)\n    x16 = sfilter(x12, x15)\n    x17 = rbind(gravitate, x10)\n    x18 = fork(add, center, x17)\n    x19 = fork(connect, center, x18)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x16)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_40139bdc(I):\n    x1 = lbind(fork, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = lbind(compose, flip)\n    x5 = lbind(matcher, first)\n    x6 = compose(x4, x5)\n    x7 = lbind(compose, flip)\n    x8 = compose(x7, x6)\n    x9 = lbind(fork, both)\n    x10 = fork(x9, x3, x8)\n    x11 = lbind(sfilter, x7)\n    x12 = chain(x11, size, x10)\n    x13 = argmax(x2, x12)\n    x14 = compress(x13)\n    x15 = flip(x14)\n    x16 = vmirror(x15)\n    x17 = asobject(x16)\n    x18 = height(x17)\n    x19 = increment(x18)\n    x20 = lbind(subtract, x19)\n    x21 = chain(toivec, x20, double)\n    x22 = fork(shift, identity, x21)\n    x23 = mapply(x22, x17)\n    O = paint(x16, x23)\n    return O"], [1.0, "def solve_3b902004(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_0d6a681a(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot90(I)\n    x4 = upscale(x3, FOUR)\n    x5 = rot270(I)\n    x6 = papply(matcher, first, x2)\n    x7 = sfilter(x4, x6)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [1.0, "def solve_57eb1844(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_8411cf1c(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    O = asobject(x1)\n    return O"], [1.0, "def solve_f37af8f1(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_294ee897(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_5aec8409(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = matcher(x13, ONE)\n    x15 = fork(both, x7, x14)\n    x16 = extract(x3, x15)\n    x17 = x16(x6)\n    x18 = height(x67)\n    x19 = subtract(x18, TWO)\n    x20 = height(x6)\n    x21 = subtract(x20, TWO)\n    x22 = width(x6)\n    x23 = subtract(x22, DOWN)\n    x24 = width(x6)\n    x25 = subtract(x23, x24)\n    x26 = astuple(x19, x25)\n    x27 = canvas(x1, x26)\n    x28 = astuple(x23, x27)\n    x29 = canvas(x1, x28)\n    x30 = rbind(multiply, x29)\n    x31 = apply(x30, x3)\n    x32 = rbind(shift, x36)\n    x33 = mapply(x32, x31)\n    O = paint(x27, x33)\n    return O"], [1.0, "def solve_2d496010(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = width(I)\n    x5 = astuple(TEN, FIVE)\n    x6 = canvas(x3, x5)\n    x7 = interval(ONE, SIX, ONE)\n    x8 = invert(TEN)\n    x9 = interval(x8, TEN, ONE)\n    x10 = product(x7, x9)\n    x11 = rbind(multiply, TWO)\n    x12 = apply(x11, x10)\n    x13 = apply(tojvec, x12)\n    x14 = prapply(shift, x4, x13)\n    x15 = lbind(shift, x4)\n    x16 = mapply(x15, x14)\n    O = fill(x6, x3, x16)\n    return O"], [1.0, "def solve_120669cc(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = rbind(repeat, x4)\n    x6 = lbind(upscale, I)\n    x7 = compose(x5, x6)\n    x8 = order(x2, leftmost)\n    x9 = apply(leftmost, x8)\n    x10 = last(x8)\n    x11 = matcher(first, x10)\n    x12 = compose(flip, x11)\n    x13 = fork(both, x3, x12)\n    x14 = sfilter(x9, x13)\n    x15 = compose(color, first)\n    x16 = fork(recolor, x15, x14)\n    x17 = mapply(x16, x14)\n    O = paint(I, x17)\n    return O"], [1.0, "def solve_577faa35(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = apply(toindices, x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = intersection(x3, x2)\n    x8 = fill(x6, EIGHT, x7)\n    O = replace(x8, UNITY, ONE)\n    return O"], [1.0, "def solve_87696ca2(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = add(TWO, x5)\n    x7 = canvas(x4, x6)\n    x8 = asobject(I)\n    x9 = shift(x8, UNITY)\n    x10 = paint(x7, x9)\n    x11 = palette(x10)\n    x12 = remove(x4, x11)\n    x13 = lbind(ofcolor, x10)\n    x14 = fork(recolor, identity, x13)\n    x15 = apply(x14, x12)\n    x16 = fork(equality, toindices, backdrop)\n    x17 = extract(x15, x16)\n    x18 = other(x15, x17)\n    x19 = color(x18)\n    x20 = astuple(x19, RIGHT)\n    x21 = initset(ZERO_BY_TWO)\n    x22 = insert(ORIGIN, x21)\n    x23 = recolor(x4, x22)\n    x24 = insert(x20, x23)\n    x25 = dmirror(x24)\n    x26 = lbind(shift, x24)\n    x27 = occurrences(x10, x24)\n    x28 = mapply(x26, x27)\n    x29 = lbind(shift, x25)\n    x30 = occurrences(x10, x25)\n    x31 = mapply(x29, x30)\n    x32 = combine(x28, x31)\n    x33 = fill(x10, x4, x32)\n    x34 = ofcolor(x33, x19)\n    x35 = gravitate(x34, x17)\n    x36 = replace(x10, x19, x4)\n    x37 = shift(x34, x35)\n    x38 = fill(x36, x19, x37)\n    O = trim(x38)\n    return O"], [1.0, "def solve_2e820091(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = fork(equality, toindices, box)\n    x7 = sfilter(x2, x6)\n    x8 = fork(multiply, height, width)\n    x9 = argmin(x7, x8)\n    x10 = argmax(x7, x8)\n    x11 = center(x9)\n    x12 = center(x10)\n    x13 = subtract(x11, x12)\n    x14 = add(x13, x11)\n    x15 = rot90(x14)\n    x16 = recolor(x1, x15)\n    x17 = shift(x16, UNITY)\n    x18 = paint(I, x17)\n    x19 = objects(x18, T, F, T)\n    x20 = apply(ulcorner, x19)\n    x21 = rbind(subgrid, x18)\n    x22 = apply(x21, x20)\n    x23 = pair(x15, x22)\n    x24 = mapply(palette, x23)\n    O = sfilter(x24, x24)\n    return O"], [1.0, "def solve_1d4ab164(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_b5b44d30(I):\n    x1 = initset(ORIGIN)\n    x2 = box(x1)\n    x3 = recolor(ZERO, x1)\n    x4 = double(TEN)\n    x5 = multiply(x4, THREE)\n    x6 = interval(ZERO, x5, ONE)\n    x7 = lbind(multiply, x5)\n    x8 = apply(x7, x6)\n    x9 = lbind(shift, x2)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [1.0, "def solve_86c40380(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_9a905fbb(I):\n    x1 = objects(I, T, F, T)\n    x2 = ofcolor(I, ZERO)\n    x3 = sizefilter(x1, ONE)\n    x4 = rbind(adjacent, x2)\n    x5 = extract(x3, x4)\n    x6 = recolor(ZERO, x5)\n    O = paint(I, x6)\n    return O"], [1.0, "def solve_96c960ba(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x833 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, hmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [1.0, "def solve_785e38e6(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_8efe0034(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_1a144b46(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_8fd4361b(I):\n    x1 = trim(I)\n    x2 = objects(x1, T, F, F)\n    x3 = vperiod(x2)\n    x4 = shift(x2, x3)\n    x5 = lbind(shift, x4)\n    x6 = interval(ZERO, NINE, ONE)\n    x7 = apply(x5, x6)\n    x8 = mapply(x7, x3)\n    O = paint(x1, x8)\n    return O"], [1.0, "def solve_5d2b2e0c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_30ef08e8(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_f1047c04(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_504071c2(I):\n    x1 = vmirror(I)\n    x2 = fgpartition(x1)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = compose(double, halve)\n    x6 = fork(equality, identity, x5)\n    x7 = compose(x6, last)\n    x8 = sfilter(x4, x7)\n    x9 = fill(x1, FIVE, x8)\n    O = x9(x4)\n    return O"], [1.0, "def solve_4d7fa4ef(I):\n    x1 = dmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_a7207c65(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = objects(I, T, F, T)\n    x5 = totuple(x4)\n    x6 = apply(color, x5)\n    x7 = lbind(sfilter, x6)\n    x8 = lbind(matcher, identity)\n    x9 = chain(size, x7, x8)\n    x10 = valmax(x3, x9)\n    x11 = matcher(x9, x10)\n    x12 = sfilter(x3, x11)\n    x13 = lbind(colorcount, I)\n    x14 = argmin(x12, x13)\n    x15 = ofcolor(I, x14)\n    x16 = recolor(x14, x15)\n    x17 = apply(initset, x16)\n    x18 = remove(x16, x1)\n    x19 = lbind(argmin, x17)\n    x20 = lbind(rbind, manhattan)\n    x21 = compose(x19, x20)\n    x22 = fork(combine, identity, x21)\n    x23 = apply(x22, x18)\n    x24 = matcher(first, x14)\n    x25 = rbind(sfilter, x24)\n    x26 = chain(invert, ulcorner, x25)\n    x27 = fork(shift, identity, x26)\n    x28 = mapply(x27, x23)\n    x29 = normalize(x28)\n    x30 = shape(x29)\n    x31 = canvas(ZERO, x30)\n    O = paint(x31, x29)\n    return O"], [1.0, "def solve_16bc3ce5(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = palette(I)\n    x4 = lbind(shift, I)\n    x5 = compose(x4, frontiers)\n    x6 = mfilter(x3, x5)\n    x7 = palette(I)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = shape(I)\n    x11 = canvas(x9, x10)\n    x12 = paint(x11, I)\n    x13 = asobject(x1)\n    x14 = difference(x13, x2)\n    O = paint(x12, x14)\n    return O"], [1.0, "def solve_d1d188b0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_228677e4(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [1.0, "def solve_cba0e309(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, first)\n    x31 = fork(recolor, x30, last)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_d5dd8f8e(I):\n    x1 = ofcolor(I, TWO)\n    x2 = vline(x1)\n    x3 = branch(x2, dmirror, identity)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = width(x4)\n    x7 = interval(x5, x6, TWO)\n    x8 = apply(tojvec, x7)\n    x9 = portrait(x8)\n    x10 = branch(x9, identity, last)\n    x11 = x10(x4)\n    x12 = x11(x4)\n    x13 = ofcolor(x12, FIVE)\n    x14 = ofcolor(x12, EIGHT)\n    x15 = fill(x13, ZERO, x13)\n    x16 = fill(x15, FOUR, x14)\n    x17 = fill(x16, ONE, x15)\n    x18 = rot90(x17)\n    x19 = ofcolor(x18, FIVE)\n    x20 = shift(x19, UNITY)\n    O = fill(x20, EIGHT, x19)\n    return O"], [1.0, "def solve_7bcf3180(I):\n    x1 = asindices(I)\n    x2 = objects(I, T, F, T)\n    x3 = first(x2)\n    x4 = rbind(subgrid, I)\n    x5 = fork(equality, identity, rot90)\n    x6 = compose(x5, x4)\n    x7 = extract(x1, x6)\n    x8 = center(x7)\n    x9 = subgrid(x3, I)\n    x10 = hmirror(x9)\n    x11 = objects(x10, F, T, T)\n    x12 = first(x11)\n    x13 = objects(x10, T, T, T)\n    x14 = rbind(subgrid, x10)\n    x15 = compose(x5, x14)\n    x16 = extract(x13, x15)\n    x17 = center(x16)\n    x18 = subtract(x8, x17)\n    x19 = shift(x12, x18)\n    x20 = paint(I, x19)\n    x21 = objects(x20, F, T, T)\n    x22 = first(x21)\n    x23 = subgrid(x22, x20)\n    x24 = vmirror(x23)\n    x25 = objects(x24, F, T, T)\n    x26 = first(x25)\n    x27 = objects(x24, T, T, T)\n    x28 = color(x7)\n    x29 = matcher(color, x28)\n    x30 = extract(x27, x29)\n    x31 = center(x30)\n    x32 = subtract(x8, x31)\n    x33 = shift(x26, x32)\n    O = paint(x20, x33)\n    return O"], [1.0, "def solve_675edd0d(I):\n    x1 = palette(I)\n    x2 = other(x1, ZERO)\n    x3 = shape(I)\n    x4 = multiply(x3, x3)\n    x5 = canvas(ZERO, x4)\n    x6 = ofcolor(I, x2)\n    x7 = lbind(shift, x6)\n    x8 = shape(I)\n    x9 = rbind(multiply, x8)\n    x10 = apply(x9, x6)\n    x11 = mapply(x7, x10)\n    O = fill(x5, x2, x11)\n    return O"], [1.0, "def solve_079bcd9e(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, T, T, F)\n    x6 = colorfilter(x5, x4)\n    x7 = fork(add, leftmost, uppermost)\n    x8 = argmin(x6, x7)\n    x9 = argmax(x6, x7)\n    x10 = lbind(sfilter, x6)\n    x11 = rbind(compose, leftmost)\n    x12 = chain(size, x10, x11)\n    x13 = lbind(sfilter, x6)\n    x14 = rbind(compose, uppermost)\n    x15 = chain(size, x13, x14)\n    x16 = lbind(lbind, greater)\n    x17 = chain(x12, x16, leftmost)\n    x18 = lbind(rbind, greater)\n    x19 = chain(x12, x18, leftmost)\n    x20 = lbind(lbind, greater)\n    x21 = chain(x15, x20, uppermost)\n    x22 = lbind(rbind, greater)\n    x23 = chain(x15, x22, uppermost)\n    x24 = fork(equality, x17, x19)\n    x25 = fork(equality, x21, x23)\n    x26 = fork(both, x24, x25)\n    x27 = extract(x6, x26)\n    x28 = fill(I, ONE, x8)\n    x29 = fill(x28, THREE, x9)\n    O = fill(x29, TWO, x27)\n    return O"], [1.0, "def solve_e4b96337(I):\n    x1 = Fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [1.0, "def solve_6be5c6ba(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_17b810d6(I):\n    x1 = objects(I, T, F, T)\n    x2 = apply(toindices, x1)\n    x3 = lbind(matcher, contained)\n    x4 = compose(x3, last)\n    x5 = extract(x2, x4)\n    x6 = lbind(shift, x5)\n    x7 = compose(x6, ulcorner)\n    x8 = rbind(colorcount, TWO)\n    x9 = argmax(x1, x8)\n    x10 = rbind(contained, x9)\n    x11 = compose(x10, first)\n    x12 = sfilter(x6, x11)\n    x13 = merge(x12)\n    x14 = rbind(shoot, x13)\n    x15 = compose(x14, ulcorner)\n    x16 = fork(recolor, x15, outbox)\n    x17 = mapply(x16, x4)\n    O = paint(I, x17)\n    return O"], [1.0, "def solve_9a8312f7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_b838424d(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_7e611380(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_f5cb02df(I):\n    x1 = f25fb287\n    O = solveconcat(I, x1)\n    return O"], [1.0, "def solve_47358446(I):\n    x1 = rot180(I)\n    x2 = matcher(size, ONE)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, maximum, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_55446d1f(I):\n    x1 = objects(I, T, F, T)\n    x2 = vmirror(x1)\n    O = subgrid(x2, I)\n    return O"], [1.0, "def solve_87f6df0d(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_de673917(I):\n    x1 = ONEORIGIN(I)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(ONE, x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = objects(x6, T, F, F)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x5(x10)\n    return O"], [1.0, "def solve_46ea8a54(I):\n    x1 = paint(I, x2)\n    x2 = vmirror(x1)\n    x3 = equality(x2, I)\n    x4 = branch(x3, x2, x2)\n    O = canvas(x4, ONE)\n    return O"], [1.0, "def solve_19348811(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, identity, dmirror)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = lrcorner(x22)\n    x24 = shape(x23)\n    x25 = increment(x24)\n    x26 = lbind(multiply, x25)\n    x27 = shift(x3, x26)\n    x28 = apply(x27, x22)\n    x29 = lbind(shift, x15)\n    x30 = mapply(x29, x28)\n    O = paint(x6, x30)\n    return O"], [1.0, "def solve_370f9199(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_bd47713d(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, x30)\n    x33 = compose(x32, x31)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [1.0, "def solve_efddeaf4(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_7de9cc51(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    O = apply(initset, x3)\n    x1 = toindices(x3)\n    x2 = asindices(I)\n    x3 = corners(x2)\n    x4 = combine(x1, x2)\n    x5 = fill(I, NEG_ONE, x4)\n    x6 = fgpartition(x5)\n    x7 = merge(x6)\n    x8 = shift(x7, DOWN)\n    x9 = fill(x5, TWO, x8)\n    x10 = shift(x9, UP)\n    x11 = fill(x9, SIX, x10)\n    x12 = shift(x11, RIGHT)\n    x13 = fill(x9, SEVEN, x12)\n    x14 = shift(x11, LEFT)\n    x15 = fill(x13, EIGHT, x14)\n    x16 = shift(x11, UP)\n    x17 = fill(x15, SIX, x16)\n    x18 = shift(x11, DOWN)\n    x19 = fill(x17, EIGHT, x18)\n    x20 = shift(x11, RIGHT)\n    x21 = fill(x19, SEVEN, x20)\n    x22 = shift(x11, LEFT)\n    x23 = fill(x21, EIGHT, x22)\n    x24 = shift(x11, UP)\n    x25 = fill(x23, UNITY, x24)\n    x26 = shift(x11, DOWN)\n    x27 = fill(x25, SIX, x26)\n    x28 = shift(x11, LEFT)\n    x29 = fill(x27, EIGHT, x28)\n    O = paint(x29, x3)\n    return O"], [1.0, "def solve_3b2c71d9(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_580effe7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_9eb76302(I):\n    O = matcher(identity, ZERO)\n    return O"], [1.0, "def solve_67fe85de(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_28bcb307(I):\n    x1 = objects(I, T, F, T)\n    x2 = lbind(sizefilter, x1)\n    x3 = compose(merge, x2)\n    x4 = x3(I)\n    x5 = halve(x4)\n    x6 = x3(I)\n    x7 = hconcat(x5, x6)\n    x8 = vconcat(x7, x7)\n    x9 = objects(x8, T, F, T)\n    x10 = rbind(shoot, UNITY)\n    x11 = compose(x10, center)\n    x12 = fork(recolor, color, x11)\n    x13 = mapply(x12, x9)\n    x14 = paint(x8, x13)\n    O = hmirror(x14)\n    return O"], [1.0, "def solve_5fe8cd60(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_820a067a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = subtract(Nivec, x14)\n    x16 = lbind(shift, x10)\n    x17 = shift(x15, x16)\n    x18 = fork(combine, vfrontier, hfrontier)\n    x19 = mapply(x18, x17)\n    O = paint(I, x19)\n    return O"], [1.0, "def solve_9f1233bf(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_97b654f1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_cc9add26(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_1f263e3e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_5d96ebe9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_25723d44(I):\n    x1 = double(TEN)\n    x2 = interval(ZERO, x1, ONE)\n    x3 = apply(double, x2)\n    x4 = apply(increment, x3)\n    x5 = apply(tojvec, x4)\n    x6 = prapply(shift, x5, x4)\n    x7 = merge(x6)\n    O = fill(I, FOUR, x7)\n    return O"], [1.0, "def solve_e61ef8f3(I):\n    x1 = shoot(ORIGIN, UNITY)\n    x2 = shoot(x2, DOWN_LEFT)\n    x3 = fork(combine, hfrontier, vfrontier)\n    x4 = mapply(x3, x1)\n    x5 = fill(I, ZERO, x4)\n    O = replace(x5, ONE, TWO)\n    return O"], [1.0, "def solve_d14931da(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = partition(I)\n    x7 = fork(multiply, height, width)\n    x8 = fork(equality, size, x7)\n    x9 = sfilter(x6, x8)\n    x10 = argmax(x9, size)\n    x11 = difference(x5, x10)\n    x12 = apply(initset, x11)\n    x13 = rbind(hmatching, x10)\n    x14 = rbind(vmatching, x10)\n    x15 = fork(either, x13, x14)\n    x16 = sfilter(x12, x15)\n    x17 = rbind(gravitate, x10)\n    x18 = fork(add, center, x17)\n    x19 = fork(connect, center, x18)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x16)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_7d082c2b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_4e0bec6c(I):\n    x1 = ofcolor(I, TWO)\n    x2 = vline(x1)\n    O = branch(x2, dmirror, identity)\n    return O"], [1.0, "def solve_a0134bd8(I):\n    x1 = switch(I, EIGHT, TWO)\n    x2 = switch(x1, TWO, THREE)\n    x3 = switch(x2, EIGHT, ONE)\n    x4 = neighbors(ORIGIN)\n    x5 = mapply(neighbors, x4)\n    x6 = lbind(shift, x3)\n    x7 = apply(x6, x5)\n    x8 = merge(x7)\n    O = paint(I, x8)\n    return O"], [1.0, "def solve_92252c34(I):\n    x1 =9284448403\n    x2 = hmirror(I)\n    O = vconcat(x1, x2)\n    return O"], [1.0, "def solve_4229a6e9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_07a42553(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, last)\n    O = x4(I)\n    return O"], [1.0, "def solve_b4ef1643(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = ofcolor(I, x1)\n    x4 = backdrop(x3)\n    x5 = toobject(x4, I)\n    x6 = matcher(first, x1)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x2, x7)\n    x9 = totuple(x8)\n    x10 = apply(color, x9)\n    x11 = leastcommon(x10)\n    x12 = ofcolor(I, x1)\n    x13 = initset(x12)\n    x14 = position(x13, x4)\n    x15 = width(I)\n    x16 = ulcorner(x12)\n    x17 = lrcorner(x12)\n    x18 = shape(I)\n    x19 = maximum(x18)\n    x20 = interval(ZERO, x19, ONE)\n    x21 = lbind(multiply, x5)\n    x22 = apply(x21, x20)\n    x23 = pair(x26, x22)\n    x24 = mapply(box, x23)\n    O = fill(I, x3, x24)\n    return O"], [1.0, "def solve_e2c0046c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_8054f488(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_3f068a11(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_273ed211(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_ed598c2d(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = argmin(x2, size)\n    x4 = shoot(x3, UP_RIGHT)\n    x5 = argmax(x2, size)\n    x6 = shoot(x5, DOWN_LEFT)\n    x7 = shoot(x4, UNITY)\n    x8 = combine(x4, x6)\n    x9 = combine(x7, x8)\n    x10 = fill(I, x1, x9)\n    x11 = replace(x10, x1, EIGHT)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = divide(x12, x13)\n    x15 = width(x11)\n    x16 = interval(ZERO, x15, ONE)\n    x17 = interval(ZERO, x13, ZERO)\n    x18 = product(x16, x17)\n    x19 = rbind(multiply, x14)\n    x20 = apply(x19, x18)\n    x21 = rbind(multiply, x14)\n    x22 = apply(x21, x15)\n    x23 = combine(x20, x22)\n    x24 = lbind(shift, x11)\n    x25 = mapply(x24, x23)\n    O = fill(x10, FOUR, x25)\n    return O"], [1.0, "def solve_fbbe925c(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [1.0, "def solve_5ebb7610(I):\n    x1 = initset(ORIGIN)\n    x2 = index(I, x1)\n    x3 = lrcorner(x1)\n    x4 = add(x3, UNITY)\n    x5 = initset(x4)\n    x6 = astuple(x1, x5)\n    x7 = rbind(shoot, UP)\n    x8 = add(x6, DOWN)\n    x9 = interval(ZERO, x5, ONE)\n    x10 = apply(x7, x9)\n    x11 = apply(x8, x10)\n    x12 = papply(shoot, x11, x7)\n    x13 = add(x3, UNITY)\n    x14 = initset(x13)\n    x15 = astuple(x42, x12)\n    x16 = shift(x12, x15)\n    x17 = difference(x7, x16)\n    x18 = rapply(recolor, x17)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_0870f33a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_9b4feb6f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, W, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_24c0baa0(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_1922fa36(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_05d0a3d8(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_66fe244a(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_bef843e1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = lbind(507, x2)\n    x4 = rbind(ofcolor, x1)\n    x5 = compose(x3, x4)\n    x6 = x5(I)\n    x7 = leastcolor(x6)\n    x8 = ofcolor(I, x7)\n    x9 = lbind(greater, SEVEN)\n    x10 = compose(x9, x5)\n    x11 = sfilter(x8, x10)\n    x12 = mapply(neighbors, x11)\n    O = fill(I, x1, x12)\n    return O"], [1.0, "def solve_94f8d4be(I):\n    x1 = astuple(vsplit, hsplit)\n    x2 = rbind(rbind, TWO)\n    x3 = rbind(rapply, I)\n    x4 = initset(x2)\n    x5 = lbind(rapply, x4)\n    x6 = chain(first, x3, x5)\n    x7 = lbind(apply, numcolors)\n    x8 = compose(x7, x6)\n    x9 = matcher(x8, TWO_BY_TWO)\n    x10 = extract(x1, x9)\n    x11 = x10(I, TWO)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = palette(x12)\n    x15 = palette(x13)\n    x16 = intersection(x14, x15)\n    x17 = first(x16)\n    x18 = shape(x12)\n    x19 = canvas(x17, x18)\n    x20 = ofcolor(x12, x17)\n    x21 = ofcolor(x13, x17)\n    x22 = intersection(x20, x21)\n    O = fill(x19, TWO, x22)\n    return O"], [1.0, "def solve_5c19df38(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_c7e78cf6(I):\n    x1 = ofcolor(I, TWO)\n    x2 = shape(I)\n    x3 = multiply(x2, x2)\n    x4 = canvas(ZERO, x3)\n    x5 = rbind(multiply, x2)\n    x6 = apply(x5, x4)\n    x7 = asobject(I)\n    x8 = lbind(shift, x7)\n    x9 = mapply(x8, x6)\n    O = paint(x4, x9)\n    return O"], [1.0, "def solve_f789e6fe(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = lbind(colorcount, I)\n    x5 = argmin(x3, x4)\n    x6 = ofcolor(I, x1)\n    x7 = ofcolor(I, x5)\n    x8 = combine(x6, x7)\n    x9 = mapply(neighbors, x8)\n    x10 = difference(x9, x8)\n    x11 = toobject(x10, I)\n    x12 = leastcolor(x11)\n    x13 = ofcolor(I, x1)\n    x14 = first(x13)\n    x15 = initset(x14)\n    x16 = objects(I, T, F, F)\n    x17 = colorfilter(x16, x12)\n    x18 = lbind(adjacent, x8)\n    x19 = mfilter(x17, x18)\n    x20 = toindices(x19)\n    x21 = rbind(contained, x20)\n    x22 = compose(x21,t)\n    x23 = sfilter(x19, x22)\n    x24 = fill(I, x5, x20)\n    O = fill(x24, x1, x23)\n    return O"], [1.0, "def solve_5a5e96fe(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_7fa82c53(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_46f5ad1e(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_3e83b9ea(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(normalize, x5)\n    x7 = chain(cmirror, x6, dmirror)\n    x8 = rbind(sfilter, x6)\n    x9 = compose(x8, x7)\n    x10 = lbind(chain, x4)\n    x11 = rbind(x10, x9)\n    x12 = lbind(compose, x1)\n    x13 = chain(x11, x12, x7)\n    x14 = lbind(lbind, shift)\n    x15 = chain(x14, x13, x7)\n    x16 = fork(mapply, x15, x13)\n    x17 = fork(mapply, x16, x7)\n    x18 = x17(x1)\n    x19 = replace(I, SIX, x18)\n    O = downscale(x19, TWO)\n    return O"], [1.0, "def solve_ca699e89(I):\n    x1 = asobject(I)\n    x2 = lbind(shift, x1)\n    x3 = compose(x2, decrement)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    O = paint(I, x5)\n    return O"], [1.0, "def solve_32c4062a(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_e06f2d09(I):\n    x1 = fgpartition(I)\n    x2 = sizefilter(x1, FOUR)\n    x3 = apply(toindices, x2)\n    x4 = compose( normalize, toindices)\n    x5 = x4(x2)\n    x6 = lbind(shift, x5)\n    x7 = compose(x6, shape)\n    x8 = halve(x2)\n    x9 = rbind(multiply, x8)\n    x10 = chain(x9, halve, shape)\n    x11 = fork(equality, identity, x7)\n    x12 = sfilter(x3, x11)\n    x13 = lbind(intersection, x5)\n    x14 = compose(x13, size)\n    x15 = chain(size, x13, x14)\n    x16 = argmax(x12, x15)\n    x17 = difference(x5, x16)\n    O = fill(I, THREE, x17)\n    return O"], [1.0, "def solve_56f14ba4(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_4db4e1e0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofmass(x14)\n    x25 = difference(x23, x24)\n    x26 = objects(x25, F, F, T)\n    x27 = compose(hfrontier, center)\n    x28 = fork(recolor, color, x27)\n    x29 = mapply(x28, x26)\n    x30 = merge(x26)\n    x31 = paint(x15, x30)\n    O = paint(x31, x29)\n    return O"], [1.0, "def solve_e7328fd6(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(greater, THREE)\n    x6 = compose(x5, first)\n    x7 = sfilter(x4, x6)\n    x8 = merge(x7)\n    x9 = rot90(x8)\n    x10 = shape(x9)\n    x11 = canvas(x3, x10)\n    x12 = hconcat(x9, x11)\n    x13 = hmirror(x12)\n    O = vconcat(x12, x13)\n    return O"], [1.0, "def solve_3d6cfd6e(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_62cc0fad(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_3c6e85f7(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_5876ff10(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_76d422e7(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [1.0, "def solve_b687023e(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_26435a52(I):\n    x1 = initset(ORIGIN)\n    x2 = insert(7770, x1)\n    x3 = merge(x2)\n    x4 = cover(I, x3)\n    x5 = chain(dmirror, dmirror, merge)\n    x6 = x5(x4)\n    x7 = lbind(remove, FOUR)\n    x8 = chain(x7, toindices, x5)\n    x9 = compose(x8, x6)\n    x10 = fork(3634436, x9,363)\n    x11 = compose(x5, x10)\n    x12 = ofcolor(x4, FIVE)\n    x13 = ZERO(x12)\n    x14 = ofcolor(x4, TWO)\n    x15 = ZERO(x14)\n    x16 = matcher(first, ZERO)\n    x17 = rbind(sfilter, x16)\n    x18 = lbind(compose, x17)\n    x19 = lbind(rbind, contained)\n    x20 = chain(x18, x19, last)\n    x21 = rbind(compose, x20)\n    x22 = lbind(rbind, sfilter)\n    x23 = compose(x21, x22)\n    x24 = chain(x19, x23, first)\n    x25 = rbind(compose, initset)\n    x26 = x25(x4)\n    x27 = x25(x26)\n    x28 = compose(x25, x27)\n    x29 = fork(mapply, x26, x28)\n    x30 = fork(recolor, first, x29)\n    x31 = mapply(x30, x6)\n    x32 = papply(connect, x31, x24)\n    x33 = difference(x31, x32)\n    x34 = toobject(x33, x4)\n    O = paint(x4, x34)\n    return O"], [1.0, "def solve_89c49298(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = height(x2)\n    x4 = width(x2)\n    x5 = neighbors(ORIGIN)\n    x6 = toindices(x2)\n    x7 = lbind(shift, x6)\n    x8 = height(I)\n    x9 = divide(x8, x3)\n    x10 = width(I)\n    x11 = divide(x10, x4)\n    x12 = astuple(x9, x11)\n    x13 = maximum(x12)\n    x14 = increment(x13)\n    x15 = interval(ONE, x14, ONE)\n    x16 = astuple(x3, x4)\n    x17 = lbind(multiply, x16)\n    x18 = compose(crement, x17)\n    x19 = lbind(mapply, x7)\n    x20 = rbind(apply, x15)\n    x21 = lbind(rbind, multiply)\n    x22 = compose(x21, x18)\n    x23 = chain(x19, x20, x22)\n    x24 = rbind(toobject, I)\n    x25 = compose(x7, x18)\n    x26 = chain(palette, x24, x25)\n    x27 = mostcolor(I)\n    x28 = rbind(equality, x27)\n    x29 = rbind(argmin, x28)\n    x30 = compose(x29, x26)\n    x31 = fork(recolor, x30, x23)\n    x32 = mapply(x31, x5)\n    O = paint(I, x32)\n    return O"], [1.0, "def solve_e202aed0(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_6bf045ea(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = x2(I, TWO)\n    x4 = order(x3, numcolors)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = objects(x6, F, F, T)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(first, x9)\n    x11 = compose(flip, x10)\n    x12 = rbind(sfilter, x11)\n    x13 = lbind(occurrences, x5)\n    x14 = compose(x13, x12)\n    x15 = chain(positive, size, x14)\n    x16 = sfilter(x7, x15)\n    x17 = chain(first, x13, x12)\n    x18 = compose(ulcorner, x12)\n    x19 = fork(subtract, x17, x18)\n    x20 = fork(shift, identity, x19)\n    x21 = apply(x20, x16)\n    x22 = compose(decrement, width)\n    x23 = chain(positive, decrement, x22)\n    x24 = mfilter(x21, x23)\n    O = paint(x5, x24)\n    return O"], [1.1, "def solve_28321aa3(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = asindices(I)\n    x5 = apply(first, x4)\n    x6 = difference(x5, x3)\n    x7 = ofcolor(I, x1)\n    x8 = rbind(interval, ONE)\n    x9 = lbind(rbind, contained)\n    x10 = lbind(sfilter, x6)\n    x11 = rbind(matcher, ZERO)\n    x12 = chain(size, x10, x9)\n    x13 = lbind(sfilter, x7)\n    x14 = lbind(compose, x12)\n    x15 = chain(x13, x11, x14)\n    x16 = lbind(fork, x8)\n    x17 = compose(increment, minimum)\n    x18 = lbind(lbind, astuple)\n    x19 = lbind(chain, x17)\n    x20 = rbind(x19, first)\n    x21 = chain(x20, x18, first)\n    x22 = lbind(chain, maximum)\n    x23 = rbind(x22, first)\n    x24 = chain(x23, x18, first)\n    x25 = fork(x16, x21, x24)\n    x26 = compose(x15, x25)\n    x27 = apply(toivec, x3)\n    x28 = apply(x26, x27)\n    x29 = argmax(x28, width)\n    x30 = remove(x29, x28)\n    x31 = ulcorner(x29)\n    x32 = invert(x31)\n    x33 = shift(x29, x32)\n    x34 = asindices(I)\n    x35 = center(x34)\n    x36 = invert(x35)\n    x37 = shift(x34, x36)\n    x38 = width(I)\n    x39 = asobject(I)\n    x40 = lbind(shift, x39)\n    "], [1.1, "def solve_3f143bae(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(color, TWO)\n    x9 = rbind(colorcount, x3)\n    x10 = compose(x9, palette)\n    x11 = argmin(x7, x10)\n    x12 = other(x7, x11)\n    x13 = remove(x11, x7)\n    x14 = normalize(x13)\n    x15 = last(x14)\n    x16 =495(x15)\n    x17 = color(x11)\n    x18 = remove(x16, x15)\n    x19 = repeat(x17, ONE)\n    x20 = combine(x18, x19)\n    x21 = fgpartition(x20)\n    x22 = argmax(x21, lowermost)\n    x23 = add(x22, UP)\n    x24 = initset(x23)\n    x25 = insert(x22, x24)\n    x26 = lbind(intersection, x25)\n    x27 = compose(x26, last)\n    x28 = fork(recolor, first, x27)\n    x29 = normalize(x25)\n    x30 = objects(x6, T, F, T)\n    x31 = apply(toindices, x30)\n    x32 = lbind(shift, x29)\n    x33 = mapply(x32, x31)\n    x34 = paint(x20, x33)\n    x35 = rot90(x34)\n    x36 = paint(x35, x4)\n    x37 = rot90(x36)\n    x38 = paint(x37, x4)\n    x39 = rot90(x38)\n    x40 = paint(x39, x4)\n    x41 = rot90(x40)\n    x42 = paint("], [1.1, "def solve_f01b5c3d(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = hmirror(x4)\n    x41 = lrcorner(x4)\n"], [1.1, "def solve_7a16d774(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_14e52772(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_5d426466(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = neighbors(x6)\n    x15 = increment(x4)\n    x16 = insert(x15, x14)\n    x17 = initset(x16)\n    x18 =insert(x33, x17)\n    x19 = height(x12)\n    x20 = increment(x4)\n    x21 = insert(x19, x20)\n    x22 = width(x12)\n    x23 = increment(x4)\n    x24 = interval(ZERO, x23, ONE)\n    x25 = lbind(toobject, x12)\n    x26 = increment(x22)\n    x27 = increment(x25)\n    x28 = add(x26, x27)\n    x29 = lbind(toobject, x13)\n    x30 = increment(x24)\n    x31 = increment(x25)\n    x32 = astuple(ZERO, x30)\n    x33 = astuple(ZERO, x31)\n    x34 = add(x32, x33)\n    x35 = lbind(recolor, x3)\n    x36 =decrement(x34)\n    x37 = lbind(ofcolor, x12)\n    x38 = crop(x12, x36, x37)\n    x39 = compose(x35, x38)\n    x40 = power(x39, THREE)\n    x41 = x40(x32)\n    x42 = papply(recolor, x41, x38)\n    O"], [1.1, "def solve_39f3fad4(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, FOUR)\n    x6 = compose(fdg54444(I)\n    x7 = chain(x4, x5, x6)\n    x8 = rbind(repeat, ONE)\n    x9 = compose(x8, x7)\n    x10 = rbind(compose, x4)\n    x11 = lbind(rbind, NEG_ONE)\n    x12 = compose(x11, x10)\n    x13 = chain(x9, x12, x7)\n    x14 = chain(x11, x10, x13)\n    x15 = lbind(lbind, x4)\n    x16 = compose(x15, x14)\n    x17 = fork(compose, x7, x16)\n    x18 = fork(combine, x17, x1111)\n    x19 = lbind(rbind, rot90)\n    x20 = chain(x19, x19, x7)\n    x21 = double(EIGHT)\n    x22 = interval(TWO, x21, ONE)\n    x23 = lbind(x20, x174)\n    x24 = chain(x23, x21, x20)\n    x25 = lbind(lbind, rot270)\n    x26 = chain(x25, rbind, x24)\n    x27 = fork(compose, x28, x26)\n    x28 = lbind(rbind, rot90)\n    x29 = chain(x28, x27, x29)\n    x30 = lbind(lbind, rot270)\n    x31 = chain(x30, rbind, x29)\n    x32 = lbind(lbind, invert)\n    x33 = chain(x32, x31, x18)\n    x34 = fork(compose, x29, x28)\n    x35 = fork(compose, x30, x33)\n    x"], [1.1, "def solve_ad891ae2(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_592eccd8(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = width(x4)\n    x6 = toivec(x5)\n    x7 = index(x4, x6)\n    x8 = shape(x4)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x4, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, rot90)\n    x16 = lbind(power, rot270)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x13)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x19)\n    x24 = uppermost(x12)\n    x25 = lbind(add, x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = lbind(multiply, x27)\n    x29 = chain(toivec, x25, x28)\n    x30 = fork(shift, x23, x29)\n    x31 = compose(asobject, x22)\n    x32 = uppermost(x12)\n    x33 = lbind(subtract, x32)\n    x34 = height(x12)\n    x35 = increment(x34)\n    x36 = lbind(multiply, x35)\n    x37 = chain(toivec, x33, x36)\n    x38 = fork(shift, x31, x37)\n    x39 = fork(combine"], [1.1, "def solve_1e58757b(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    x3 = add(TWO, x2)\n    x4 = canvas(x1, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = paint(x4, x6)\n    x8 = double(SIX)\n    x9 = astuple(ONE, x8)\n    x10 = connect(UNITY, x9)\n    x11 = outbox(x10)\n    x12 = backdrop(x11)\n    x13 = recolor(x1, x12)\n    x14 = recolor(THREE, x10)\n    x15 = lbind(shift, x14)\n    x16 = lbind(mapply, x15)\n    x17 = rbind(occurrences, x13)\n    x18 = compose(x16, x17)\n    x19 = fork(paint, identity, x18)\n    x20 = x19(x7)\n    x21 = ofcolor(x20, THREE)\n    x22 = dmirror(x7)\n    x23 = x19(x22)\n    x24 = dmirror(x23)\n    x25 = ofcolor(x24, THREE)\n    x26 = combine(x21, x25)\n    x27 = fill(x7, THREE, x26)\n    x28 = astuple(TWO, ONE)\n    x29 = dneighbors(UNITY)\n    x30 = remove(x28, x29)\n    x31 = recolor(x1, x30)\n    x32 = initset(UNITY)\n    x33 = recolor(THREE, x32)\n    x34 = combine(x31, x33)\n    x35 = recolor(x1, x34)\n    x36 = astuple(ONE, THREE)\n    x37 = initset(x36)\n    x38 = insert(ZERO_BY_TWO, x37)\n    x39 = insert(RIGHT, x38)\n    x40 = insert(DOWN, x39)\n    x41 ="], [1.1, "def solve_34114419(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(toindices, x3)\n    x5 = partition(I)\n    x6 = fork(equality, identity, corners)\n    x7 = difference(x5, x4)\n    x8 = extract(x7, x6)\n    x9 = leastcolor(x8)\n    x10 = matcher(dmirror, x8)\n    x11 = extract(x10, x6)\n    x12 = lbind(compose, flip)\n    x13 = rbind(matcher, x12)\n    x14 = compose(x13, identity)\n    x15 = lbind(fork, sfilter)\n    x16 = lbind(x15, identity)\n    x17 = lbind(lbind, extract)\n    x18 = compose(x16, x17)\n    x19 = lbind(ofcolor, I)\n    x20 = compose(x19, mostcolor)\n    x21 = fork(apply, x18, x20)\n    x22 = compose(x12, x21)\n    x23 = fork(hmirror, x22, identity)\n    x24 = compatible(x8, x11)\n    x25 = contained(x24, x11)\n    x26 =356(x25, UNITY)\n    x27 = canvas(x9, x26)\n    x28 = asobject(x27)\n    x29 = paint(x27, x28)\n    x30 = height(x28)\n    x31 = width(x28)\n    x32 = divide(x30, x31)\n    x33 = increment(x32)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = compose(double, halve)\n    x36 = lbind(apply, last)\n    x37 = lbind(sfilter, x34)\n    x38 = chain(x37, x35, x36)\n    x39 = lbind(shift, x28)\n    x40 = compose(x39, toivec"], [1.1, "def solve_62730e66(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = compose(x5, color)\n    x7 = compose(double, x4)\n    x8 = lbind(prapply, manhattan)\n    x9 = fork(x8, identity, x7)\n    x10 = lbind(remove, ZERO)\n    x11 = compose(x10, x9)\n    x12 = rbind(branch, NEG_TWO)\n    x13 = fork(x12, positive, x11)\n    x14 = chain(x13, minimum, x11)\n    x15 = fork(add, x14, x7)\n    x16 = chain(x5, x13, x15)\n    x17 = compose(initset, x16)\n    x18 = fork(rapply, x17, x14)\n    x19 = compose(first, x18)\n    x20 = compose(x5, x19)\n    x21 = extract(x2, x20)\n    x22 = first(x21)\n    x23 = last(x21)\n    x24 = divide(x6, x23)\n    x25 = increment(x24)\n    x26 = width(I)\n    x27 = interval(ZERO, x26, x25)\n    x28 = apply(tojvec, x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x27)\n    x31 = fill(I, FIVE, x30)\n    x32 = objects(x31, T, F, T)\n    x33 = colorfilter(x32, FIVE)\n    x34 = apply(first, x33)\n    x35 = valmax(x34, size)\n    x36 = x35(x34)\n    x37 = equality(x36, ONE)\n    x38 = branch(x37, x35, x34)\n    x39"], [1.1, "def solve_c04cbcc9(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =407960873df22(x1, x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(x5, I)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x8, x18)\n    x20 = lbind(colorcount, x17)\n    x21 = argmin(x19, x20)\n    x22 = rbind(colorcount, x21)\n    x23 = rbind(toobject, I)\n    x24 = chain(x22, x23, x28)\n    x25 = colorfilter(x1, x24)\n    x26 = sfilter(x25, x28)\n    x27 = difference(x25, x26)\n    x28 = objects(x27, T, T, T)\n    x29 = rbind(colorcount, x21)\n    x30 = argmax(x29, x28)\n    x31 = subgrid(x30, x27)\n    x32 = rbind(order, identity)\n    x33 = apply(x32, x31)\n    x34 = vmirror(x31)\n    x35 = x36(x34)\n    x36 = x33(x35)\n    x37 = hconcat(x35, x36)\n    x38 = objects(x37, T, T, T)\n    x39 = apply"], [1.1, "def solve_cd4b13d1(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = astuple(d13, c)\n    x9 = astuple(x10, x7)\n    x10 = hline(x8)\n    x11 = ulcorner(x8)\n    x12 = shoot(x11, UNITY)\n    x13 =7220(x12)\n    x14 = mapply(first, x12)\n    x15 =18722224(x14)\n    x16 = center(x15)\n    x17 = matcher(first, x7)\n    x18 = sfilter(x1, x17)\n    x19 = lbind(adjacent, x8)\n    x20 = mfilter(x18, x19)\n    x21 = toindices(x20)\n    x22 = NEG_UNITY(x21)\n    x23 = uppermost(x20)\n    x24 = shoot(x23, UNITY)\n    x25 = size(x24)\n    x26 = increment(x25)\n    x27 = matcher(first, x8)\n    x28 = compose(flip, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = lbind(recolor, x3)\n    x31 = compose(x30, mostcolor)\n    x32 = fork(combine, x29, x31)\n    x33 = lbind(lbind, shift)\n    x34 = lbind(occurrences, I)\n    x35 = compose(x33, x34)\n    x36 = lbind(mapply, x35)\n    x37 = chain(x36, x33, x28)\n    x38 = fork(mapply, x24, x17)\n    x39 = fork(mapply, x28, xcolor)\n    x40 = fork(combine, x38, x39)"], [1.1, "def solve_efe3bb69(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = lbind(index, I)\n    x2 = compose(x1, size)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(775, x5)\n    x5 = astuple(cmirror, x3)\n    x6 = combine(x4, x5)\n    x7 = fork(vsplit, identity, height)\n    x8 = chain(asobject, first, x7)\n    x9 = mostcolor(I)\n    x10 = matcher(x8, x9)\n    x11 = compose(flip, x10)\n    x12 =1111(I)\n    x13 = rbind(f25fb575, x12)\n    x14 = rbind(sfilter, x11)\n    x15 = compose(x14, dneighbors)\n    x16 = chain(x13, x15, toindices)\n    x17 = fork(mapply, x16, identity)\n    x18 = compose(x12, x17)\n    x19 = fork(intersection, x18, toindices)\n    x20 = compose(size, x19)\n    x21 = matcher(x20, ZERO)\n    x22 = lbind(apply, x9)\n    x23 = chain(flip, x21, x22)\n    x24 = fork(mapply, x18, x23)\n    x25 = shape(I)\n    x26 = maximum(x25)\n    x27 = toindices(x26)\n    x28 = ZERO(x25)\n    x29 = toindices(x28)\n    x30 =multiply(x27, x29)\n    x31 = rbind(add, x30)\n    x32 = lbind(object, I)\n    x33 = compose(x31, x32)\n    x34 = ofcolor(x12, x19)\n    x35 = ofcolor(x21, x12)\n    x36 = intersection(x34, x35)\n    x37 = fill(x12, TWO, x36)\n    x38 = lbind(chain, size)\n    x39 = compose"], [1.1, "def solve_130c80b4(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_5e543a93(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, branch)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)\n    "], [1.1, "def solve_79ad0713(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(identity, dmirror)\n    x5 = astuple(cmirror, hmirror)\n    x6 = combine(x4, x5)\n    x7 = rbind(rapply, I)\n    x8 = compose(first, x7)\n    x9 = chain(x3, x8, initset)\n    x10 = extract(x6, x9)\n    x11 = x10(I)\n    x12 = mostcolor(I)\n    x13 = palette(I)\n    x14 = remove(x12, x13)\n    x15 = restuple(x14)\n    x16 = ofcolor(x11, x12)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, identity, vmirror)\n    x20 = x19(x11)\n    x21 = ofcolor(x20, x12)\n    x22 = ofcolor(x20, x12)\n    x23 = leftmost(x22)\n    x24 = equality(x23, ZERO)\n    x25 = branch(x24, identity, hmirror)\n    x26 = x25(x11)\n    x27 = ofcolor(x26, x12)\n    x28 = ofcolor(x26, x12)\n    x29 = rbind(add, DOWN)\n    x30 = compose(x29, last)\n    x31 = fork(equality, identity, x30)\n    x32 = compose(flip, x31)\n    x33 = extract(x27, x32)\n    x34 = x33(x26)\n    x35 = toindices(x34)\n    x36 = first(x35)\n    x37 = last(x35)\n    x38 =573(x36, x37)\n    x39 = shift(x38, x34)\n    x40 = paint(x11, x39)\n    x"], [1.1, "def solve_f8d876b8(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_758888ad(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = fork(shoot, identity, corners)\n    x8 = compose(x7, center)\n    x9 = fork(shoot, identity, x8)\n    x10 = size(x6)\n    x11 = lefthalf(I)\n    x12 = righthalf(I)\n    x13 = rbind(order, identity)\n    x14 = rbind(order, incd)\n    x15 = compose(x13, x14)\n    x16 = lbind(rbind, shift)\n    x17 = compose(x16, x15)\n    x18 = fork(compose, x17, x15)\n    x19 = lbind(lbind, mapply)\n    x20 = compose(x19, x18)\n    x21 = fork(sfilter, x18, x20)\n    x22 = compose(size, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(I)\n    x26 = colorfilter(x25, x24)\n    x27 = compose(maximum, shape)\n    x28 = argmin(x26, x27)\n    x29 = color(x28)\n    x30 = remove(x28, x26)\n    x31 = x30(x36)\n    x32 = mapply(neighbors, x31)\n    x33 = difference(x32, x32)\n    x34 = toobject(x33, I)\n    x35 = apply(x38, x34)\n    x36 = size(x35)\n    x37 = sfilter(x33, x36)\n    x38 = toobject(x37, I)\n    x39 = difference(x34, x38)\n    x40 = canvas(x39, UNITY)\n    x41 = paint(x40, x"], [1.1, "def solve_3e5c6825(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = width(x4)\n    x6 = toivec(x5)\n    x7 = index(x4, x6)\n    x8 = shape(x4)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x4, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, rot90)\n    x16 = lbind(power, rot270)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x13)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x19)\n    x24 = uppermost(x12)\n    x25 = lbind(add, x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = lbind(multiply, x27)\n    x29 = chain(toivec, x25, x28)\n    x30 = fork(shift, x23, x29)\n    x31 = compose(asobject, x22)\n    x32 = uppermost(x12)\n    x33 = lbind(subtract, x32)\n    x34 = height(x12)\n    x35 = increment(x34)\n    x36 = lbind(multiply, x35)\n    x37 = chain(toivec, x33, x36)\n    x38 = fork(shift, x31, x37)\n    x39 = fork(combine"], [1.1, "def solve_ff2c5f3b(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = palette(I)\n    x2 = compose(maximum, shape)\n    x3 = lbind(apply, x2)\n    x4 = lbind(ofcolor, I)\n    x5 = chain(x3, x4, x2)\n    x6 = compose(maximum, shape)\n    x7 = fork(equality, x5, x6)\n    x8 =    filter(x1, x7)\n    x9 = lbind(index, I)\n    x10 = compose(x9, x7)\n    x11 = fork( equality, x10, x6)\n    x12 = fork(either, x12, x11)\n    x13 = matcher(x10, ZERO)\n    x14 = sfilter(x8, x13)\n    x15 = difference(x8, x14)\n    x16 = lbind(colorcount, I)\n    x17 =765d511(x16)\n    x18 = argmin(x15, x17)\n    x19 = ofcolor(I, x18)\n    x20 = urcorner(x14)\n    x21 = ulcorner(x14)\n    x22 = subtract(x20, x21)\n    x23 = colorfilter(x19, x22)\n    x24 = count27(x23)\n    x25 = asobject(I)\n    x26 = subgrid(x25, x24)\n    x27 = asindices(x26)\n    x28 = toobject(x27, x26)\n    x29 = mostcolor(x28)\n    x30 = ofcolor(x26, x29)\n    x31 = replace(I, x18, x29)\n    x32 = x29(x31)\n    x33 = asobject(x32)\n    x34 = occurrences(x31, x33)\n    x35 = mapply(first, x34)\n    x36 = maximum(x31)\n    x37 = downscale(x35, x36)\n    x38 = asindices(x37)\n    x39 = box(x38)\n    x40 = fill(x37, x39, x37)\n    "], [1.1, "def solve_0c7785d7(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_7ee58563(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_e3e13ea9(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = switch(I, THREE, FOUR)\n    x2 = ofcolor(x1, ZERO)\n    x3 = asindices(x1)\n    x4 = difference(x3, x2)\n    x5 = normalize(x4)\n    x6 = recolor(ONE, x5)\n    x7 = mostcolor(I)\n    x8 = paint(x1, x7)\n    O = compose(initset, lrcorner)\n    x19 = fork( insert, ulcorner, x8)\n    x20 = insert(I, x4)\n    x21 = insert(lrcorner, x20)\n    x22 = fork(contained, square, identity)\n    x23 = compose(x22, ulcorner)\n    x24 = astuple(normalize, NEG_TWO)\n    x25 = branch(x11, x24, x23)\n    x26 = asindices(x1)\n    x27 = box(x26)\n    x28 = toobject(x27, I)\n    x29 = combine(x28, x25)\n    x30 = mostcolor(x29)\n    x31 = matcher(x23, x30)\n    x32 = compose(flip, x31)\n    x33 = rbind(sfilter, x32)\n    x34 = chain(positive, size, x33)\n    x35 = rbind(sfilter, x24)\n    x36 = compose(maximum, x35)\n    x37 = apply(x36, x22)\n    x38 = lbind(fork, FIVE)\n    x39 = lbind(x38, identity)\n    x40 = lbind(lbind, shift)\n    x41 = compose(x39, x40)\n    x42 = lbind(chain, x40)\n    x43 = rbind(x42, x30)\n    x44 = lbind(rbind, occurrences)\n    x45 = chain(x41, x44, identity)\n    x46 = lbind(compose, x flip)\n    x47 = chain(x41, x46, identity)\n    x48 = lbind"], [1.1, "def solve_aa09ef21(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_4df48e23(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_6ed670a2(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_945f0060(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = compose(x32, leftmost)\n    x37 = rbind(compose, x30)\n    x38 = lbind(compose, x37)\n    x39 = lbind(x31, x15)\n    x40 = rbind(sfilter, x35)\n    x41 = chain(x39, x40, size)\n    x42 = lbind(d"], [1.1, "def solve_0509b41f(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_94c8c5ba(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_8a3f88b0(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_7a50a92e(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = vmirror(I)\n    x2 = fgpartition(x1)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = index(x1, x4)\n    x6 = portrait(x5)\n    x7 = branch(x6, identity, dmirror)\n    x8 = x7(x1)\n    x9 = objects(x8, T, F, T)\n    x10 = branch(x6, identity, vmirror)\n    x11 = x10(x9)\n    x12 = mostcolor(I)\n    x13 = shape(x11)\n    x14 = canvas(x12, x13)\n    x15 = hconcat(x11, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = apply(uppermost, x16)\n    x18 = size(x17)\n    x19 = order(x17, uppermost)\n    x20 = apply(color, x19)\n    x21 = extract(x20, last)\n    x22 = remove(x21, x19)\n    x23 = argmin(x22, uppermost)\n    x24 = other(x22, x23)\n    x25 = color(x23)\n    x26 = color(x24)\n    x27 = fill(x15, x23, x24)\n    x28 = fill(x27, x26, x25)\n    x29 = fill(x28, x26, x21)\n    x30 = dmirror(x29)\n    x31 = papply(pair, x29, x30)\n    x32 = lbind(apply, maximum)\n    x33 = rbind(sfilter, x32)\n    x34 = chain(cde solve, x33, x24)\n    x35 = pair(x31, x31)\n    x36 = apply(x34, x35)\n    x37 =50(x36)\n    x38 = height(x36)\n    x39 = apply(size, x36)\n    x40 = repeat(x39, ONE)\n    "], [1.1, "def solve_e6d9f80c(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = compose(first, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = compose(last, last)\n    x8 = totuple(x2)\n    x9 = apply(x7, x8)\n    x10 = mostcommon(x9)\n    x11 = compose(first, last)\n    x12 = matcher(x11, x6)\n    x13 = sfilter(x2, x12)\n    x14 = compose(last, last)\n    x15 = matcher(x14, x10)\n    x16 = sfilter(x2, x15)\n    x17 = objects(I, F, T, T)\n    x18 = size(x17)\n    x19 = equality(x18, TWO)\n    x20 = mfilter(x17, hline)\n    x21 = mfilter(x17, vline)\n    x22 = branch(x19, x20, x13)\n    x23 = branch(x19, x21, x16)\n    x24 = width(x22)\n    x25 = lbind(multiply, x24)\n    x26 = width(I)\n    x27 = divide(x26, x24)\n    x28 = increment(x27)\n    x29 = interval(ZERO, x28, ONE)\n    x30 = apply(x25, x29)\n    x31 = apply(invert, x30)\n    x32 = combine(x30, x31)\n    x33 = apply(tojvec, x32)\n    x34 = lbind(shift, x22)\n    x35 = mapply(x34, x33)\n    x36 = height(x23)\n    x37 = lbind(multiply, x36)\n    x38 = height(I)\n    x39 = height(x22)\n    x40 = divide(x38, x39)\n    x41 = increment(x40)\n    x42 = interval"], [1.1, "def solve_3a4e1012(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = partition(I)\n    x6 = fork(multiply, height, width)\n    x7 = fork(equality, size, x6)\n    x8 = extract(x5, x7)\n    x9 = color(x8)\n    x10 = palette(I)\n    x11 = remove(x4, x10)\n    x12 = other(x11, x9)\n    x13 = ofcolor(I, x12)\n    x14 = vmirror(x13)\n    x15 = hmirror(x13)\n    x16 = toindices(x8)\n    x17 = combine(x16, x13)\n    x18 = height(x17)\n    x19 = halve(x18)\n    x20 = increment(x19)\n    x21 = width(x17)\n    x22 = halve(x21)\n    x23 = increment(x22)\n    x24 = astuple(x20, x23)\n    x25 = maximum(x24)\n    x26 = invert(x25)\n    x27 = increment(x25)\n    x28 = interval(x26, x27, ONE)\n    x29 = product(x28, x28)\n    x30 = initset(x15)\n    x31 = insert(x14, x30)\n    x32 = product(x29, x31)\n    x33 = ofcolor(I, x4)\n    x34 = rbind(intersection, x33)\n    x35 = fork(shift, last, first)\n    x36 = chain(size, x34, x35)\n    x37 = matcher(x36, ZERO)\n    x38 = sfilter(x32, x37)\n    x39 = rbind(intersection, x13)\n    x40 = fork(shift, last, first)\n    x41 = chain(size, x39, x40)\n    x42 = argmax(x38, x41"], [1.1, "def solve_a3be86c6(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivef15, x1)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4"], [1.1, "def solve_10a4f2de(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = inbox(x20)\n    x22 = cover(I, x21)\n    x23 = lrcorner(x206)\n    x24 = ofcolor(x22, x18)\n    x25 = inbox(x24)\n    x26 = recolor(x18, x24)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, x22)\n    x29 = color(x28)\n    x30 = inbox(x25)\n    x31 = recolor(x29, x25)\n    x32 = combine(x27, x31)\n    x33 = mapply(d90, x32)\n    x34 = fill(x22, x1, x33)\n    x35 = ofcolor(x34, x19)\n    x36 = subgrid(x35, x34)\n    x37 = asindices(x36)\n    x38 = box(x37)\n    x39 = fill(x34, x19, x38)\n    x40 = difference(x37, x"], [1.1, "def solve_973bb449(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = chain(double, last, first)\n    x4 = fork(equality, x3, x2)\n    x5 = sfilter(x1, x4)\n    x6 = vsplit(I, TWO)\n    x7 = rbind(hsplit, TWO)\n    x8 = extract(x6, x7)\n    x9 =150(x8)\n    x10 = last(x8)\n    x11 = remove(x10, x8)\n    x12 = solve(hline, x11)\n    x13 = center(x12)\n    x14 = dneighbors(x13)\n    x15 = insert(x13, x14)\n    x16 = toobject(x15, I)\n    x17 = mostcolor(x16)\n    x18 = palette(x16)\n    x19 = remove(x17, x18)\n    x20 = valuple(x19, x15)\n    x21 = other(x19, x20)\n    x22 = replace(x9, x21, x11)\n    x23 = combine(x15, x22)\n    x24 = ofcolor(x23, x21)\n    x25 = mapply(dneighbors, x24)\n    x26 = astuple(x25, x22)\n    x27 = other(x25, x26)\n    x28 = color(x27)\n    x29 = color(x8)\n    x30 = greater(x26, x29)\n    x31 = branch(x30, identity, dneighbors)\n    x32 = initset(x13)\n    x33 = insert(x32, x31)\n    x34 = insert(x17, x33)\n    x35 = hconcat(x34, x111)\n    x36 = vconcat(x35, x111)\n    x37 = vconcat(x36, x36)\n    x38 = vconcat(x37, x36)\n    x39 = halve(x38)\n    x40 = dneighbors"], [1.1, "def solve_fd7d21a8(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_90589327(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_074d71dc(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(identity, dmirror)\n    x5 = astuple(cmirror, hmirror)\n    x6 = combine(x4, x5)\n    x7 = rbind(rapply, I)\n    x8 = compose(first, x7)\n    x9 = chain(x3, x8, initset)\n    x10 = extract(x6, x9)\n    x11 = x10(I)\n    x12 = mostcolor(I)\n    x13 = palette(I)\n    x14 = remove(x12, x13)\n    x15 = other(x14, TWO)\n    x16 = ofcolor(x11, x15)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, identity, vmirror)\n    x20 = x19(x11)\n    x21 = ofcolor(x20, x15)\n    x22 = ofcolor(x20, TWO)\n    x23 = apply(last, x22)\n    x24 = insert(ZERO, x23)\n    x25 = width(x20)\n    x26 = insert(x25, x24)\n    x27 = order(x26, identity)\n    x28 = last(x27)\n    x29 = remove(x28, x27)\n    x30 = first(x27)\n    x31 = remove(x30, x27)\n    x32 = pair(x29, x31)\n    x33 = size(x29)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = pair(x34, x32)\n    x36 = lbind(fork, connect)\n    x37 = compose(first, last)\n    x38 = chain(decrement, last, last)\n    x39 = lbind(lbind, add)\n    x40 = compose(x39, first)\n    x41 = lbind("], [1.1, "def solve_fd4053c0(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_8ada2fb9(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = compose(first, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = compose(last, last)\n    x8 = totuple(x2)\n    x9 = apply(x7, x8)\n    x10 = mostcommon(x9)\n    x11 = compose(first, last)\n    x12 = matcher(x11, x6)\n    x13 = sfilter(x2, x12)\n    x14 = compose(last, last)\n    x15 = matcher(x14, x10)\n    x16 = sfilter(x2, x15)\n    x17 = objects(I, F, T, T)\n    x18 = size(x17)\n    x19 = equality(x18, TWO)\n    x20 = mfilter(x17, hline)\n    x21 = mfilter(x17, vline)\n    x22 = branch(x19, x20, x13)\n    x23 = branch(x19, x21, x16)\n    x24 = width(x22)\n    x25 = lbind(multiply, x24)\n    x26 = width(I)\n    x27 = divide(x26, x24)\n    x28 = increment(x27)\n    x29 = interval(ZERO, x28, ONE)\n    x30 = apply(x25, x29)\n    x31 = apply(invert, x30)\n    x32 = combine(x30, x31)\n    x33 = apply(tojvec, x32)\n    x34 = lbind(shift, x22)\n    x35 = mapply(x34, x33)\n    x36 = height(x23)\n    x37 = lbind(multiply, x36)\n    x38 = height(I)\n    x39 = height(x22)\n    x40 = divide(x38, x39)\n    x41 = increment(x40)\n    x42 = interval"], [1.1, "def solve_e6eb1aed(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 =8888(I, TWO)\n    x2 = apply(d687, x1)\n    x3 = height(x2)\n    x4 = width(x2)\n    x5 = trim(x2)\n    x6 = FOUR(x5)\n    x7 = equality(x6, ONE)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = uppermost(x10)\n    x12 = leftmost(x10)\n    x13 = index(x9, x11)\n    x14 = uppermost(x12)\n    x15 = rightmost(x12)\n    x16 = index(x9, x15)\n    x17 = decrement(x13)\n    x18 = leftmost(x2)\n    x19 = initset(x18)\n    x20 = insert(x11, x19)\n    x21 = difference(x10, x20)\n    x22 =698( fill, FOUR, x21)\n    x23 = objects(x22, T, F, T)\n    x24 = apply(toindices, x23)\n    x25 = lbind(index, x9)\n    x26 = compose(x25, shape)\n    x27 = astuple(x17, x26)\n    x28 = lbind(multiply, x27)\n    x29 = apply(x28, x24)\n    x30 = order(x29, identity)\n    x31 = lbind(apply, last)\n    x32 = lbind(rbind,ofcolor)\n    x33 = rbind(sfilter, x31)\n    x34 = rbind(compose, palette)\n    x35 = lbind(lbind, contained)\n    x36 = chain(x34, x33, x35)\n    x37 = rbind(sfilter, x32)\n    x38 = rbind(compose, palette)\n    x39 = lbind(lbind, contained)\n    x40 = chain(x37, x38, x39)\n    x41 = x36"], [1.1, "def solve_a1d7d322(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_9e476659(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_aa1951bb(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18, x"], [1.1, "def solve_7ddbef2c(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(F, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(F, x21)\n    x23 = color(I)\n    x24 = canvas(x23, x22)\n    x25 = colorcount(I, x7)\n    x26 = decrement(x25)\n    x27 = tojvec(x26)\n    x28 = connect(ORIGIN, x27)\n    x29 = height(I)\n    x30 = equality(x29, x27)\n    x31 = decrement(x30)\n    x32 = tojvec(x31)\n    x33 = connect(ORIGIN, x32)\n    x34 = width(I)\n    x35 = increment(x34)\n    x36 = tojvec(x35)\n    x37 = decrement(x36)\n    x38 = tojvec(x37)\n    x39 = connect(ORIGIN, x38)\n    x40 = height(I)\n    x41 = decrement(x40)\n    x42 = toivec(x41)\n    x43 = subtract(x42, x31)\n    x44 = width(I)\n    x45 = decrement(x44)\n    x46 = tojvec"], [1.1, "def solve_a9d5674a(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, vmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = divide(x17, x14)\n    x19 = increment(x18)\n    x20 = interval(ZERO, x19, ONE)\n    x21 = width(x3)\n    x22 = multiply(x21, x14)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x18)\n    x25 = rbind(divide, x18)\n    x26 = compose(x24, x25)\n    x27 = apply(x26, x20)\n    x28 = astuple(x19, x22)\n    x29 = lbind(multiply, x28)\n    x30 = apply(x29, x21)\n    x31 = apply(x30, x23)\n    x32 = combine(x29, x31)\n    x33 = mapply(x17, x32)\n    x34 = astuple(x3, x2005)\n    x35 = canvas(ZERO, x34)\n    x36 = asindices(x35)\n    x37 = shift(x36, x37)\n    x38 = shape(I)\n    x39 = maximum(x38)\n    x40 = lbind(multiply,"], [1.1, "def solve_adcb5fc4(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x20, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = compose(x36, first)\n    x38 = argmin(x35, x37)\n    x39 = first(x38)\n    x40"], [1.1, "def solve_e39c9ff0(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = fork(combine, first, last)\n    x9 = compose(x8, vmirror)\n    x10 = totuple(x7)\n    x11 = apply(x9, x10)\n    x12 = mostcommon(x11)\n    x13 = matcher(x9, x12)\n    x14 = extract(x11, x13)\n    x15 = last(x14)\n    x16 = height(x15)\n    x17 = rot90(I)\n    x18 = interval(ZERO, x17, ONE)\n    x19 = rbind(multiply, x16)\n    x20 = apply(x19, x18)\n    x21 = rbind(multiply, x16)\n    x22 = apply(x21, x18)\n    x23 = pair(x20, x22)\n    x24 = lbind(canvas, ZERO)\n    x25 = compose(x24, last)\n    x26 = fork(other, first, x25)\n    x27 = palette(I)\n    x28 = mostcolor(I)\n    x29 = remove(x28, x29)\n    x30 = lbind(hconcat, I)\n    x31 = argmin(x30, x30)\n    x32 = ofcolor(x15, x31)\n    x33 = mapply(vfrontier, x32)\n    x34 = mapply(hfrontier, x32)\n    x35 = size(x13)\n    x36 = size(x34)\n    x37 = greater(x35, x36)\n    x38 = rbind(canvas, xcolor)\n    x39 = chain(x38, asobject, x38)\n    x40 = compose(first"], [1.1, "def solve_93e42771(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 =8888888888888888888888\n    x2 = astuple(identity, dmirror)\n    x3 = astuple(cmirror, hmirror)\n    x4 = combine(x2, x3)\n    x5 = rbind(rapply, I)\n    x6 = chain(first, x5, initset)\n    x7 = rbind(ofcolor, EIGHT)\n    x8 = chain(lowermost, x7, x6)\n    x9 = chain(decrement, height, x6)\n    x10 = fork(equality, x8, x9)\n    x11 = extract(x4, x10)\n    x12 = x11(I)\n    x13 = ofcolor(x12, ZERO)\n    x14 = dmirror(x13)\n    x15 = width(x12)\n    x16 = decrement(x15)\n    x17 = tojvec(x16)\n    x18 = invert(x17)\n    x19 = rightmost(x13)\n    x20 = decrement(x19)\n    x21 = tojvec(x20)\n    x22 = invert(x21)\n    x23 = astuple(x18, x22)\n    x24 = maximum(x23)\n    x25 = dmirror(x24)\n    x26 = astuple(x24, x25)\n    x27 = branch(x12, x26, x24)\n    x28 = lbind(apply, maximum)\n    x29 = lbind(min, x24)\n    x30 = rbind(rbind, ZERO)\n    x31 = compose(x30, x28)\n    x32 = rbind(sfilter, x31)\n    x33 = lbind(pair, x27)\n    x34 = chain(x32, x33, x25)\n    x35 = rbind(apply, x14)\n    x36 = compose(x35, x24)\n    x37 = fork(add, x36, x34)\n    x38 = rbind(apply, x16)\n    x39 = compose(x38,"], [1.1, "def solve_8a010aa2(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 =78748ivec(x5)\n    x7 = palette(x6)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x11, T, F, T)\n    x13 = colorfilter(x12, x10)\n    x14 = rbind(manhattan, x13)\n    x15 = argmin(x12, x14)\n    x16 = ofcolor(x15, x10)\n    x17 = first(x16)\n    x18 = initset(x17)\n    x19 = argman(x18, x10)\n    x20 = lbind(argmin, x17)\n    x21 = lbind(rbind, manhattan)\n    x22 = compose(x21, initset)\n    x23 = rbind(argmin, x22)\n    x24 = rbind(rbind, manhattan)\n    x25 = compose(x23, x24)\n    x26 = fork(gravitate, identity, x25)\n    x27 = fork(add, identity, x26)\n    x28 = fork(connect, identity, x27)\n    x29 = rbind(2ordering, x11)\n    x30 = rbind(order, uppermost)\n    x31 = chain(x29, x30, x27)\n    x32 = apply(x31, x5)\n    x33 = rbind(contained, x32)\n    x34 = apply(x33, x553)\n    x35 = either(x20, x34)\n    x36 = branch(x35, x22, x25)\n    x37 = objects(x36, T, F, T)\n    x38 = rbind(colorcount, x11)\n    x39 = valmax(x37"], [1.1, "def solve_e7b3c1d2(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x8, x7)\n    x11 = remove(x9, x10)\n    x12 = Mehindices(x8)\n    x13 = merge(x12)\n    x14 = fill(I, x3, x13)\n    x15 = objects(x14, F, F, T)\n    x16 = argmin(x15, leftmost)\n    x17 = argmax(x15, leftmost)\n    x18 = vmirror(x16)\n    x19 = vmirror(x17)\n    x20 = dmirror(x18)\n    x21 = cmirror(x19)\n    x22 = hmirror(x20)\n    x23 = hmirror(x21)\n    x24 =vsplit(x14, x22)\n    x25 = vmirror(x23)\n    x26 = hmirror(x24)\n    x27 = hmirror(x25)\n    x28 = vmirror(x26)\n    x29 = vmirror(x27)\n    x30 = hmirror(x28)\n    x31 = ulcorner(x16)\n    x32 = llcorner(x16)\n    x33 = subtract(x31, x32)\n    x34 = rbind(valmin, x23)\n    x35 = other(x22, x39)\n    x36 = delta(x35)\n    x37 = fill(x14, x3, x36)\n    x38 = objects(x37, F, F, T)\n    x39 = colorfilter(x38, x5)\n    x40 =adjacent(x38, x39)\n    x41 = r"], [1.1, "def solve_ac23c8d7(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = increment(x39)\n    x41 = interval(ZERO, x40, ONE)\n    x42 = apply(tojvec"], [1.1, "def solve_01bcf5ef(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_f2bf5784(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = vline(x1)\n    x3 = branch(x2, dmirror, identity)\n    x4 = x3(I)\n    x5 = ofcolor(x4, THREE)\n    x6 = ofcolor(x4, TWO)\n    x7 = center(x5)\n    x8 = hfrontier(x7)\n    x9 = center(x6)\n    x10 = hfrontier(x9)\n    x11 = mostcolor(I)\n    x12 = palette(I)\n    x13 = remove(THREE, x12)\n    x14 = remove(TWO, x13)\n    x15 = other(x14, x11)\n    x16 = replace(x4, THREE, x11)\n    x17 = difference(x8, x5)\n    x18 = underfill(x16, x17, x15)\n    x19 = replace(x4, TWO, x15)\n    x20 = difference(x10, x6)\n    x21 = underfill(x19, x20, x15)\n    x22 = objects(x18, T, F, F)\n    x23 = colorfilter(x22, x15)\n    x24 = rbind(adjacent, x5)\n    x25 = sfilter(x23, x24)\n    x26 = objects(x21, F, F, T)\n    x27 = colorfilter(x26, x11)\n    x28 = rbind(adjacent, x6)\n    x29 = sfilter(x27, x28)\n    x30 = mapply(toindices, x25)\n    x31 = rbind(equality, x31)\n    x32 = lbind(index, x4)\n    x33 = compose(x32, urcorner)\n    x34 = matcher(x33, x21)\n    x35 = rbind(add, x27)\n    x36 = chain(x31, x35, x4)\n    x37 = sfilter(x30, x34)\n    x38 = lbind(add, x29)\n    x39 = chain"], [1.1, "def solve_ec58bebc(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = vmirror(I)\n    x2 = sizefilter(x1, ONE)\n    x3 = apply(even, x2)\n    x4 = sfilter(x3, hline)\n    x5 = size(x4)\n    x6 = positive(x5)\n    x7 = branch(x6, identity, dmirror)\n    x8 = x7(I)\n    x9 = rbind(toobject, x8)\n    x10 = chain(Example, x9, delta)\n    x11 = apply(x10, x4)\n    x12 = asindices(x11)\n    x13 = shape(x12)\n    x14 = add(x13, THREE)\n    x15 = halve(x14)\n    x16 = add(x15, UP_RIGHT)\n    x17 = crop(x16, x12, x15)\n    x18 = canvas(ZERO, x13)\n    x19 = asobject(x18)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = argmax(x22, last)\n    x24 = add(x23, x22)\n    x25 = flip(x24)\n    x26 = asobject(x25)\n    x27 = equality(x25, x26)\n    x28 = branch(x27, ulcorner, last)\n    x29 = multiply(x27, x28)\n    x30 = branch(x27, llcorner, last)\n    x31 = initset(x30)\n    x32 = insert(x29, x31)\n    x33 = = lbind(2020, x32)\n    x34 = compose(x33, first)\n    x35 = toindices(x34)\n    x36 = sizefilter(x35, x24)\n    x37 = lbind(argmin, x36)\n    x38 = lbind(shift, x24)\n    x39 = compose(x37, x38)\n    x40 = fork(recolor"], [1.1, "def solve_3207db89(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = lbind(apply, toindices)\n    x2 = lbind(rbind, intersection)\n    x3 = compose(x1, x2)\n    x4 = fork(size, x3, color)\n    x5 = palette(I)\n    x6 = compose(x4, x5)\n    x7 = fork(paint, identity, x6)\n    x8 = rbind(compose, palette)\n    x9 = lbind(lfilter, x5)\n    x10 = chain(x8, x9, x7)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(x11, toindices)\n    x13 = chain(size, x12, x7)\n    x14 = matcher(x13, ONE)\n    x15 = fork(both, x14, x13)\n    x16 = merge(x15)\n    x17 = palette(x16)\n    x18 = lbind(colorcount, x16)\n    x19 = compose(x18, argmin)\n    x20 = argmin(x17, x19)\n    x21 = rbind(colorcount, x20)\n    x22 = chain(toivec, first, x21)\n    x23 = fork(shift, x22, ulcorner)\n    x24 = canvas(x20, UNITY)\n    x25 = mapply(x23, x24)\n    x26 = objects(x25, T, T, T)\n    x27 = first(x26)\n    x28 = last(x26)\n    x29 = subgrid(x27, x45)\n    x30 = colorfilter(x26, x20)\n    x31 = rbind(contained, x30)\n    x32 = compose(x31, last)\n    x33 = sfilter(x30, x32)\n    x34 = paint(x29, x33)\n    x35 = ofcolor(x34, x20)\n    x36 = subgrid(x35, x45)\n    x37 = sfilter(x1, x36)\n    x38 =27(x37)\n    x39 = replace("], [1.1, "def solve_09b5b1ea(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_74429dad(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = argadjacent(x24, x23)\n    x26 = subgrid(x25, x14)\n    x27 = asobject(x25)\n    x28 = vmirror(x27)\n    x29 = hconcat(x28, x14)\n    x30 = height(x29)\n    x31 = subgrid(x25, x15)\n    x32 = asobject(x31)\n    x33 = height(x32)\n    x34 = equality(x30, x33)\n    x35 = branch(x34, x29, x28)\n    x36 = add(x34, UNITY)\n    x37 =44(x35)\n    x38 = astuple(x31, x36)\n    x39 = x36(x37)\n    x40 = shift(x39, x37)\n    x41 = ofcolor(x44, x13)\n    x42 = subgrid(x"], [1.1, "def solve_cc785cc9(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = width(x4)\n    x6 = toivec(x5)\n    x7 = index(x4, x6)\n    x8 = shape(x4)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x4, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, insert)\n    x16 = lbind(power, ZERO)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x13)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x19)\n    x24 = uppermost(x12)\n    x25 = lbind(add, x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = lbind(multiply, x27)\n    x29 = chain(toivec, x25, x28)\n    x30 = fork(shift, x23, x29)\n    x31 = compose(asobject, x22)\n    x32 = uppermost(x12)\n    x33 = lbind(subtract, x32)\n    x34 = height(x12)\n    x35 = increment(x34)\n    x36 = lbind(multiply, x35)\n    x37 = chain(toivec, x33, x36)\n    x38 = fork(shift, x31, x37)\n    x39 = fork(combine,"], [1.1, "def solve_0301447d(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP90)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP90)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, x33)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)\n    x"], [1.1, "def solve_4fc32608(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, T)\n    x4 = merge(x3)\n    x5 = palette(x4)\n    x6 = intersection(x5, x2)\n    x7 = lbind(colorcount, x4)\n    x8 = argmax(x6, x7)\n    x9 = astuple(x8, x2)\n    x10 = canvas(x9, x9)\n    x11 = paint(x10, x4)\n    x12 = objects(x11, T, F, T)\n    x13 = compose(normalize, toindices)\n    x14 = rbind(sordering, x13)\n    x15 = lbind(toobject, x14)\n    x16 = chain(x15, x13, color)\n    x17 = rbind(sfilter, x16)\n    x18 = lbind(recolor, x8)\n    x19 = chain(x18, x17, x35)\n    x20 = fork(combine, x15, x19)\n    x21 = lbind(paint, x11)\n    x22 = compose(x21, x20)\n    x23 = fork(paint, identity, x22)\n    x24 = chain(x13, x17, x23)\n    x25 = rbind(apply, x10)\n    x26 = lbind(lbind, shift)\n    x27 = chain(x26, x17, x24)\n    x28 = fork(apply, x26, x27)\n    x29 = fork(remove, x28, x22)\n    x30 = compose(x25, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = lbind(fork, intersection)\n    x33 = compose(x32, x30)\n    x34 = fork(794, x33, x24)\n    x35 = compose(x31, x34)\n    x36 = fork(ers O, x35, x36)\n    x37 = mapply(x36, x4)\n"], [1.1, "def solve_e8940922(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = apply(first, x22)\n    x24 = lbind(sfilter, x21)\n    x25 = compose(first, last)\n    x26 = lbind(matcher, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x27, x23)\n    x29 = lbind(shift, x15)\n    x30 = chain(x29, toivec, uppermost)\n    x31 = matcher(first, x18)\n    x32 = rbind(sfilter, x31)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(toindices, x32, x30)\n    x36 = chain(x33, x34, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = compose(color, x37)\n    x39 = compose(x32, x30)\n    x40 = fork(recolor, x38, x39)\n    x41 = fork(other, palette,"], [1.1, "def solve_317e3dea(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = compose(initset, x13)\n    x20 = fork(rapply, x19, x18)\n    x21 = compose(first, x20)\n    x22 = rbind(contained, x1)\n    x23 = compose(x22, last)\n    x24 = compose(flip, x23)\n    x25 = rbind( sfilter, x21)\n    x26 = chain(first, x25, x24)\n    x27 = fork(paint, x26, x25)\n    x28 = compose(initset, x15)\n    x29 = fork(rapply, x28, x24)\n    x30 = compose(first, x29)\n    x31 = fork(paint, x30, x27)\n    x32 = compose(initset, x12)\n    x33 = fork(rapply, x32, x24)\n    x34 = compose(first, x33)\n    x35 = extract(x1, x34)\n    x36 = x35(I)\n    x37 = first(x36)\n    x38"], [1.1, "def solve_fc65a4c4(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_c797836b(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = leastcolor(I)\n    x9 = rbind(ofcolor, x8)\n    x10 = rbind(rapply, I)\n    x11 = chain(first, x10, initset)\n    x12 = chain(hline, x9, x11)\n    x13 = rbind(ofcolor, x8)\n    x14 = rbind(rapply, I)\n    x15 = chain(first, x14, initset)\n    x16 = chain(leftmost, x13, x15)\n    x17 = matcher(x16, ZERO)\n    x18 = fork(both, x12, x17)\n    x19 = compose(x18, first)\n    x20 = extract(x7, x19)\n    x21 = first(x20)\n    x22 = last(x20)\n    x23 = x21(I)\n    x24 = ofcolor(x23, x8)\n    x25 = argmax(x24, last)\n    x26 = add(x25, UP_RIGHT)\n    x27 = shoot(x26, UP_RIGHT)\n    x28 = add(x25, DOWN_LEFT)\n    x29 = shoot(x28, DOWN_LEFT)\n    x30 = rbind(shoot, LEFT)\n    x31 = mapply(x30, x27)\n    x32 = rbind(shoot, LEFT)\n    x33 = mapply(x32, x29)\n    x34 = width(x23)\n    x35 = invert(x34)\n    x36 = tojvec(x35)\n    x37 = shift(x31, x36)\n    x38 = combine(x31, x37)\n    x39 ="], [1.1, "def solve_6961916f(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toive694, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_4df9dccc(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = ofcolor(x3, x39"], [1.1, "def solve_e14ac45b(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = height(I)\n    x9 = astuple(x8, ONE)\n    x10 = canvas(THREE, x9)\n    x11 = hconcat(x10, I)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = identity(DOWN)\n    x17 = connect(ORIGIN, x15)\n    x18 = fill(x11, THREE, x17)\n    x19 = identity(x13)\n    x20 = identity(x12)\n    x21 = identity(x12)\n    x22 = identity(F8)\n    x23 = identity(F9)\n    x24 = compose(first, first)\n    x25 = chain(first, last, x24)\n    x26 = compose(first, first)\n    x27 = chain(last, last, x26)\n    x28 = chain(first, first, first)\n    x29 = chain(first, last, last)\n    x30 = chain(first, first, last)\n    x31 = chain(last, first, last)\n    x32 = compose(decrement, x25)\n    x33 = compose(decrement, x27)\n    x34 = fork(astuple, x32, x33)\n    x35 = compose(decrement, x27)\n    x36 = fork(multiply, x30, x35)\n    x37 = fork(add, x29, x36)\n    x38 = compose(positive, size)\n    x39 = lbind(intersection, x7)\n    x40 = chain(x38, x39, xf8)\n    x41 = compose(size"], [1.1, "def solve_5e8234d9(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = partition(I)\n    x6 = fork(multiply, height, width)\n    x7 = fork(equality, size, x6)\n    x8 = extract(x5, x7)\n    x9 = color(x8)\n    x10 = palette(I)\n    x11 = remove(x4, x10)\n    x12 = other(x11, x9)\n    x13 = ofcolor(I, x12)\n    x14 = vmirror(x13)\n    x15 = hmirror(x13)\n    x16 = toindices(x8)\n    x17 = combine(x16, x13)\n    x18 = height(x17)\n    x19 = halve(x18)\n    x20 = increment(x19)\n    x21 = width(x17)\n    x22 = halve(x21)\n    x23 = increment(x22)\n    x24 = astuple(x20, x23)\n    x25 = maximum(x24)\n    x26 = invert(x25)\n    x27 = increment(x25)\n    x28 = interval(x26, x27, ONE)\n    x29 = product(x28, x28)\n    x30 = initset(x15)\n    x31 = insert(x14, x30)\n    x32 = product(x29, x31)\n    x33 = ofcolor(I, x4)\n    x34 = rbind(intersection, x33)\n    x35 = fork(shift, last, first)\n    x36 = chain(size, x34, x35)\n    x37 = matcher(x36, ZERO)\n    x38 = sfilter(x32, x37)\n    x39 = rbind(intersection, x13)\n    x40 = fork(shift, last, first)\n    x41 = chain(size, x39, x40)\n    x42 = argmax(x38, x41"], [1.1, "def solve_ec3a2634(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = corners(x2)\n    x4 = toobject(x3, I)\n    x5 = mostcolor(x4)\n    x6 = colorcount(I, x5)\n    x7 = dmirror(I)\n    x8 = astuple(x6, x7)\n    x9 = dmirror(I)\n    x10 =658(x8, x9)\n    x11 = combine(x3, x10)\n    x12 = ofcolor(x11, x5)\n    x13 = difference(x1, x12)\n    x14 = rbind(argmin, x13)\n    x15 = rbind(sfilter, x15)\n    x16 = compose(x14, x15)\n    x17 = lbind(fork, fly)\n    x18 = lbind(x17, identity)\n    x19 = lbind(rbind, astuple)\n    x20 = compose(x18, x19)\n    x21 = lbind(compose, x16)\n    x22 = rbind(x41, x21)\n    x23 = lbind(rbind, intersection)\n    x24 = chain(x22, x23, x8)\n    x25 = lbind(compose, x17)\n    x26 = x25(x12)\n    x27 = rbind(rapply, x25)\n    x28 = compose(initset, x12)\n    x29 = chain(first, x27, x28)\n    x30 = extract(x12, x29)\n    x31 = x30(I)\n    x32 = palette(I)\n    x33 = first(x32)\n    x34 = ulcorner(x30)\n    x35 = dmirror(x34)\n    x36 = shape(x30)\n    x37 = add(x36, x39)\n    x38 = astuple(x37, x34)\n    x39 = canvas(x30, x38)\n    x40 = asindices(x39)\n    x41 = apply(urcorner,"], [1.1, "def solve_4298d118(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = chain(x4, x5, color)\n    x7 = compose(maximum, shape)\n    x8 = fork(apply, x7, x6)\n    x9 = maximum(x2)\n    x10 = palette(I)\n    x11 = remove(x9, x10)\n    x12 = lbind(outbox, I)\n    x13 = compose(x12, objects)\n    x14 = arg113(x11, x13)\n    x15 = rightmost(x14)\n    x16 = totuple(x15)\n    x17 = apply(normalize, x16)\n    x18 = color(x14)\n    x19 = lbind(replace, x18)\n    x20 = rbind(compose, initset)\n    x21 = lbind(rbind, difference)\n    x22 = chain(x20, x21, color)\n    x23 = apply(x22, x17)\n    x24 = ofcolor(I, x9)\n    x25 = rbind(sfilter, x24)\n    x26 = chain(positive, size, x25)\n    x27 = mfilter(x23, x26)\n    x28 = equality(x27, ONE)\n    x29 = branch(x28, x22, x27)\n    x30 = rbind(colorcount, x18)\n    x31 = argmax(x29, x30)\n    x32 = UNITY(x31)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, x32)\n    x35 = colorfilter(x18, x9)\n    x36 = rbind(vmatching, x34)\n    x37 = fork(both, x35, x36)\n    x38 = x37(x31)\n    x39 = fill(I, x8, x38)\n    x40 =272("], [1.1, "def solve_d5637f2d(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = equality(x5, ZERO)\n    x7 = branch(x6, identity, vmirror)\n    x8 = x7(x4)\n    x9 = ofcolor(x8, EIGHT)\n    x10 = uppermost(x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, identity, hmirror)\n    x13 = x12(x8)\n    x14 = ofcolor(x13, EIGHT)\n    x15 = ofcolor(x13, TWO)\n    x16 = rbind(shoot, DOWN)\n    x17 = mapply(x16, x14)\n    x18 = height(x13)\n    x19 = apply(first, x15)\n    x20 = insert(ZERO, x19)\n    x21 = insert(x18, x19)\n    x22 = apply(decrement, x21)\n    x23 = order(x20, identity)\n    x24 = order(x22, identity)\n    x25 = size(x15)\n    x26 = increment(x25)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = apply(tojvec, x27)\n    x29 = pair(x23, x24)\n    x30 = lbind(sfilter, x17)\n    x31 = compose(first, last)\n    x32 = chain(decrement, first, first)\n    x33 = fork(greater, x31, x32)\n    x34 = chain(increment, last, first)\n    x35 = fork(greater, x34, x31)\n    x36 = fork(both, x33, x35)\n    x37 = lbind(lbind, astuple)\n    x38 = lbind(compose, x36)\n    x39 = chain(x30, x38, x37)\n    x40"], [1.1, "def solve_5f9f8e92(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = astuple(color, ORIGIN)\n    x2 = astuple(color, TWO)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(x655, x8)\n    x10 = astuple(xcompose, initset)\n    x11 = lbind(contained, x10)\n    x12 = compose(x11, last)\n    x13 = sfilter(x5, x12)\n    x14 = upscale(x13, TWO)\n    x15 = shape(x13)\n    x16 = add(x15, RIGHT)\n    x17 = crop(x13, UP_BY_ZERO, x16)\n    x18 = asobject(x17)\n    x19 = multiply(UNITY, x15)\n    x20 = crop(x18, DOWN_LEFT, x19)\n    x21 = apply(x16, x20)\n    x22 = paint(x17, x21)\n    x23 = crop(x18, UNITY, x15)\n    x24 = repeat(x23, ONE)\n    x25 = combine(x28, x24)\n    x26 = sfilter(x25, x12)\n    x27 = fork(combine, first, last)\n    x28 = apply(x27, x26)\n    x29 = height(x12)\n    x30 = lbind(repeat, x29)\n    x31 = apply(x30, x27)\n    x32 = combine(x28, x31)\n    x33 = branch(x37, x32, x29)\n    x34 = apply(double, x30)\n    x35 = divide(x34, TWO)\n    x36 = apply(x27, x30)\n    x37 = branch(x37, x36, x29)\n    x38 = branch(x37, x37, x28)\n    "], [1.1, "def solve_fc1c4f8f(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = Faff27(I)\n    x3 = toindices(x2)\n    x4 = difference(x1, x3)\n    x5 = toobject(x4, I)\n    x6 = size(x5)\n    x7 = positive(x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = objects(x9, T, F, T)\n    x11 = color(x10)\n    x12 = leftmost(x11)\n    x13 = leftmost(x12)\n    x14 = subtract(x13, x12)\n    x15 = astuple(x14, x13)\n    x16 = repeat(x9, x15)\n    x17 = x8(x9)\n    x18 = x8(x16)\n    x19 = hsplit(x17, x18)\n    x20 = hsplit(x19, x19)\n    x21 = merge(x20)\n    x22 = last(x21)\n    x23 = remove(x22, x30)\n    x24 = last(x23)\n    x25 = last(x24)\n    x26 = first(x23)\n    x27 = hupscale(x25, x26)\n    x28 = identity(x27)\n    x29 = x8(x22)\n    x30 = x9(x222)\n    x31 =60713(x29)\n    x32 = hupscale(x30, x31)\n    x33 = identity(x32)\n    x34 = hconcat(x29, x33)\n    x35 = hconcat(x34, x28)\n    x36 = vconcat(x35, x28)\n    x37 = vconcat(x36, x28)\n    x38 = astuple(x24, x270)\n    x39 = astuple(x37, x38)\n    x40 = combine(x32, x39)\n    x41 = paint(x40, x33)\n    O = x8(x41)\n"], [1.1, "def solve_476652e6(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = x2(I, TWO)\n    x4 = order(x3, numcolors)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = palette(x5)\n    x8 = remove(ZERO, x7)\n    x9 = other(x8, x6)\n    x10 = branch(x5, height, width)\n    x11 = x10(x6)\n    x12 = astuple(ONE, x11)\n    x13 = canvas(x9, x12)\n    x14 = ofcolor(x13, x6)\n    x15 = mostcolor(x14)\n    x16 = matcher(first, x15)\n    x17 = compose(flip, x16)\n    x18 = rbind(sfilter, x17)\n    x19 = rbind(occurrences, x13)\n    x20 = compose(x19, x18)\n    x21 = apply(x20, x9)\n    x22 = dmirror(x21)\n    x23 = replace(x22, x10, x67)\n    x24 = ofcolor(x23, x6)\n    x25 = ofcolor(x23, x12)\n    x26 = intersection(x24, x25)\n    x27 = fill(x23, ZERO, x26)\n    x28 = astuple(ONE, THREE)\n    x29 = canvas(x9, x28)\n    x30 = dmirror(x29)\n    x31 = fill(x30, x7, x279)\n    x32 = x2(x31)\n    x33 = initset(x32)\n    x34 = insert(x62, x33)\n    x35 = product(x34, x34)\n    x36 = order(x35, identity)\n    x37 = ofcolor(x36, x6)\n    x38 = last(x37)\n    x39 = remove(x38, x37)\n    x40 = first(x39)\n    x"], [1.1, "def solve_8d7c3cda(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = extract(x2, x4)\n    x6 =8776cd78\n    \"\"\"\n    x7 = backdrop(x5)\n    x8 = shape(I)\n    x9 = add(TWO, x8)\n    x10 = canvas(x1, x9)\n    x11 = asobject(I)\n    x12 = shift(x11, UNITY)\n    x13 = paint(x10, x12)\n    x14 = double(x3)\n    x15 = power(outbox, x14)\n    x16 = chain( backdrop, x15, initset)\n    x17 = x16(ulcorner)\n    x18 = x16(TWO, x16)\n    x19 = shift(x11, x18)\n    x20 = paint(x13, x19)\n    x21 = ulcorner(x5)\n    x22 = index(x20, x21)\n    x23 = recolor(x1, x22)\n    x24 = paint(x20, x23)\n    x25 = branch(x3, x24, x16)\n    x26 = shape(I)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = product(x27, x27)\n    x29 = lbind(multiply, x287)\n    x30 = apply(x29, x28)\n    x31 = lbind(shift, x12)\n    x32 = mapply(x31, x30)\n    x33 = paint(x20, x32)\n    x34 = branch(x26, UNITY, DOWN_LEFT)\n    x35 = apply(x34, x29)\n    x36 = pair(x35, x31)\n    x37 = size(x36)\n    x38 = positive(x37)\n    x39 = branch(x33, RIGHT, x38)\n    x40 = apply(x39, x36)\n    x41"], [1.1, "def solve_414b7284(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = palette(I)\n    x2 = compose(maximum, shape)\n    x3 = argmin(x1, x2)\n    x4 = canvas(x3, THREE_BY_THREE)\n    x5 = colorcount(I, ZERO)\n    x6 = dmirror(x4)\n    x7 = objects(x6, T, F, T)\n    x8 = argmin(x7, size)\n    x9 = repeat(x8, ONE)\n    x10 = combine(x7, x9)\n    x11 = color(x10)\n    x12 = leftmost(x11)\n    x13 = width(I)\n    x14 = interval(ONE, x13, ONE)\n    x15 = leftmost(x11)\n    x16 = interval(ONE, x15, ONE)\n    x17 = pair(x14, x16)\n    x18 = sizefilter(x17, x11)\n    x19 = apply(invert, x18)\n    x20 = lbind(sfilter, x18)\n    x21 = lbind(matcher, partition)\n    x22 = compose(x21, x20)\n    x23 = chain(size, x20, x22)\n    x24 = sfilter(x19, x23)\n    x25 = chain(increment, minimum, x24)\n    x26 =745 to compose(x25, x20)\n    x27 = fork(repeat, x26, x211)\n    x28 = sfilter(x6, x27)\n    x29 = combine(x27, x28)\n    x30 = lbind(recolor, x11)\n    x31 = lbind(mapply, x30)\n    x32 = fork(paint, identity, x31)\n    x33 = compose(x32, x20)\n    x34 = ofcolor(I, x3)\n    x35 = mapply(x33, x34)\n    x36 = ofcolor(I, FOUR)\n    x37 = mapply(x36, x36)\n    x38 = combine(x35, x37)\n    x39 = paint(I"], [1.1, "def solve_256285cf(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_e6e4b6a8(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = compose(positive, size)\n    x2 = rbind(sfilter, hline)\n    x3 = chain(x1, x2, frontiers)\n    x4 = chain(size, dedupe, first)\n    x5 = chain(size, dedupe, last)\n    x6 = fork(greater, x4, x5)\n    x7 = fork(both, x3, x6)\n    x8 = astuple(identity, dmirror)\n    x9 = astuple(cmirror, hmirror)\n    x10 = combine(x8, x9)\n    x11 =040(x10)\n    x12 = objects(x11, T, F, T)\n    x13 = merge(x12)\n    x14 = shift(x13, TWO)\n    x15 = paint(x3, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = remove(x16, x15)\n    x18 = compose(positive, size)\n    x19 = rbind(sfilter, x18)\n    x20 = chain(x17, x19, frontiers)\n    x21 = merge(x12)\n    x22 = chain(x19, x19, shape)\n    x23 = chain(size, x22, first)\n    x24 = compose(increment, x23)\n    x25 = power(x24, FOUR)\n    x26 = x25(x6)\n    x27 = shape(x26)\n    x28 = canvas(ZERO, x27)\n    x29 = \"b567a423(x26)\n    x30 = chain(size, dedupe, first)\n    x31 = equality(x30, x22)\n    x32 = x31(x16)\n    x33 = first(x32)\n    x34 = last(x32)\n    x35 = fill(x16, THREE, x34)\n    x36 = shift(x33, x35)\n    x37 =74ddupe(x36)\n    x38 = paint(x35, x37)\n    O = trim(x38)\n    return O"], [1.1, "def solve_55b85df0(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = compose(flip, x2)\n    x4 = rbind(sfilter, x3)\n    x5 = replace(x1, FIVE, ZERO)\n    x6 = x4(x5)\n    x7 = asobject(x6)\n    x8 = apply(first, x7)\n    x9 = paint(I, x8)\n    x10 = fgpartition(x9)\n    x11 = merge(x10)\n    x12 = normalize(x11)\n    x13 = width(x12)\n    x14 = subtract(x13, TWO)\n    x15 = height(x12)\n    x16 = astuple(x15, x14)\n    x17 = crop(x12, ORIGIN, x16)\n    x18 = hupscale(x17, x12)\n    x19 = solve(x18, dmirror)\n    x20 = astuple(x15, x16)\n    x21 = crop(x20, ORIGIN, x20)\n    x22 = hupscale(x21, x12)\n    x23 =\n    \"\"\"\n    x24 = hmirror(x12)\n    x25 = vconcat(x22, x24)\n    x26 = vconcat(x25, x12)\n    O = compress(x26)\n    return O"], [1.1, "def solve_26d2dd39(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 =2dee509493\n    x2 = dmirror(I)\n    O = papply(pair, I, x1)\n    return O"], [1.1, "def solve_91502675(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = sizefilter(x1, FOUR)\n    x3 = fork(equality, height, width)\n    x4 = extract(x2, x3)\n    x5 = other(x1, x4)\n    x6 = color(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = subtract(FOUR, x11)\n    x13 = increment(x12)\n    x14 =255(I)\n    x15 = canvas(x6, x14)\n    x16 = lbind(ofcolor, I)\n    x17 =699(x16, x13)\n    x18 = subgrid(x5, I)\n    x19 = hconcat(x17, x18)\n    x20 = hconcat(x19, x17)\n    x21 = vconcat(x19, x20)\n    x22 = vconcat(x21, x17)\n    x23 = combine(x19, x22)\n    O = fill(x15, x6, x23)\n    return O"], [1.1, "def solve_acaa386b(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 =666(ZERO, x3)\n    x9 =66(d3644, x8)\n    x10 = shape(I)\n    x11 = decrement(x10)\n    x12 = index(I, x11)\n    x13 = subtract(FIVE, x12)\n    x14 = crop(I, ORIGIN, x9)\n    x15 = crop(I, x13, x7)\n    x16 = width(x15)\n    x17 = astuple(x16, ORIGIN)\n    x18 = crop(x15, ORIGIN, x17)\n    x19 = vupscale(x18, x14)\n    x20 = hupscale(x19, x12)\n    x21 = rbind(shoot, UNITY)\n    x22 = asindices(x14)\n    x23 = remove(x22, x14)\n    x24 = remove(x22, x23)\n    x25 = intersection(x22, x24)\n    x26 = lbind(occurrences, x15)\n    x27 = compose(x26, last)\n    x28 = fork(combine, first, x27)\n    x29 = product(x15, x17)\n    x30 = sfilter(x29, x28)\n    x31 = fork(shift, first, last)\n    x32 = mapply(x31, x30)\n    O = paint(x15, x32)\n    return O"], [1.1, "def solve_957376a9(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = replace(x6, x3, x4)\n    x8 = objects(x7, T, F, T)\n    x9 = lbind(colorfilter, x8)\n    x10 = chain(merge, x9, palette)\n    x11 = objects(x7, T, F, T)\n    x12 = sfilter(x11, x10)\n    x13 = rbind(gravitate, x12)\n    x14 = compose(x13, toivec)\n    x15 = fork(add, x14, x12)\n    x16 = fork(connect, x15, output:\n    x17 = mapply(x16, x13)\n    O = fill(x7, x3, x17)\n    return O"], [1.1, "def solve_9f4e5183(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = x6(I)\n    x8 = rbind(sfilter, x7)\n    x9 = compose(dmirror, x8)\n    x10 = rbind(sfilter, x9)\n    x11 = compose(vmirror, x10)\n    x12 = dmirror(I)\n    x13 = x11(x12)\n    x14 =37(x13)\n    x15 = width(x13)\n    x16 = decrement(x15)\n    x17 = tojvec(x16)\n    x18 = connect(ORIGIN, x17)\n    x19 = height(x13)\n    x20 = decrement(x19)\n    x21 = toivec(x20)\n    x22 = connect(ORIGIN, x21)\n    x23 = size(x2)\n    x24 = equality(x23, ZERO)\n    x25 = branch(x24, tojvec, toivec)\n    x26 = branch(x24, bottomhalf, x25)\n    x27 = order(x28, x26)\n    x28 = apply(x11, x27)\n    O = x11(x28)\n    return O"], [1.1, "def solve_5e81a8ce(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = trim(I)\n    x2 = repeat(x1, ONE)\n    x3 = toobject(x2, I)\n    x4 = numcolors(x3)\n    x5 = vmirror(x4)\n    x6 = hmirror(x4)\n    x7 = numcolors(x6)\n    x8 = add(TWO, x7)\n    x9 = papply(insert, x3, x8)\n    x10 = toobject(x9, I)\n    x11 = decrement(x10)\n    x12 = objects(x11, F, F, T)\n    x13 = first(x12)\n    x14 =90000009x13\n    x15 = leftmost(x13)\n    x16 = decrement(x15)\n    x17 = tojvec(x16)\n    x18 = shift(x3, x17)\n    x19 = shift(x3, x18)\n    x20 = fork(combine, vfrontier, hfrontier)\n    x21 = compose(x20, initset)\n    x22 = fork(combine, x19, x21)\n    x23 = rapply(x18, x22)\n    x24 = mapply(x23, x1)\n    O = paint(x14, x24)\n    return O"], [1.1, "def solve_0fd9de86(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = box(I)\n    x2 =66666666(x1, I)\n    x3 = equality(x2, TWO)\n    x4 = branch(x3, hsplit, vsplit)\n    x5 = x4(I, TWO)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 = palette(x6)\n    x9 = palette(x7)\n    x10 = intersection(x8, x9)\n    x11 = first(x10)\n    x12 = shape(x6)\n    x13 = canvas(x11, x12)\n    x14 = ofcolor(x6, x12)\n    x15 = ofcolor(x7, x12)\n    x16 = intersection(x14, x15)\n    O = fill(x13, TWO, x16)\n    return O"], [1.1, "def solve_b3453d12(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =372(x2, I)\n    x4 = shape(I)\n    x5 = multiply(x4, x4)\n    x6 = canvas(ZERO, x5)\n    x7 = rbind(multiply, x6)\n    x8 = apply(x7, x3)\n    x9 = height(I)\n    x10 = width(I)\n    x11 = divide(x9, x10)\n    x12 = increment(x11)\n    x13 = subtract(x12, ONE)\n    x14 = shift(x8, x13)\n    x15 =873(x14)\n    x16 = last(x14)\n    x17 = remove(x16, x14)\n    x18 = last(x17)\n    x19 = canvas(ZERO, x4)\n    x20 = matcher(first, x8)\n    x21 =sfilter(x19, x20)\n    x22 = shift(x19, x21)\n    O = fill(x21, THREE, x22)\n    return O"], [1.1, "def solve_2214e8a1(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 =8885(I)\n    x2 = mostcolor(I)\n    x3 = shape(I)\n    x4 = canvas(x2, x3)\n    x5 = hconcat(I, x4)\n    x6 = objects(x5, F, F, T)\n    x7 = compose(last, centerofmass)\n    x8 = order(x6, x7)\n    x9 =159(x8)\n    x10 = lbind(contained, ZERO)\n    x11 = compose(x10, palette)\n    x12 = sfilter(x8, x11)\n    x13 = size(x12)\n    x14 = interval(ZERO, x13, ONE)\n    x15 = pair(x4, x14)\n    x16 = mapply(first, x15)\n    x17 = mapply(last, x15)\n    x18 = fill(x4, THREE, x16)\n    O = fill(x18, FOUR, x17)\n    return O"], [1.1, "def solve_ad1c5677(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = subgrid(I, I)\n    x2 = trim(x1)\n    x3 = replace(x2, ONE, ZERO)\n    x4 = tojvec(Sfilter)\n    x5 =787\n    7204399287\n    4862897883\n    9972237075\n    \"\"\"\n    x1 = lefthalf(x3)\n    x2 = righthalf(x3)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = fill(x3, ONE, x9)\n    return O"], [1.1, "def solve_e3219962(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 =1111(I, ZERO)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = fill(x2, ZERO, x1)\n    return O"], [1.1, "def solve_d5333426(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = switch(I, EIGHT, TWO)\n    x2 = switch(x1, TWO, ONE)\n    x3 = switch(x2, EIGHT, ONE)\n    x4 = switch(x3, EIGHT, FOUR)\n    O = switch(x4, lowermost,\n    return O"], [1.1, "def solve_5060fb2b(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = tophalf(I)\n    x5 = lefthalf(x4)\n    x6 = tophalf(I)\n    x7 = righthalf(x6)\n    x8 = bottomhalf(I)\n    x9 = righthalf(x8)\n    x10 = bottomhalf(I)\n    x11 = lefthalf(x9)\n    x12 = righthalf(x11)\n    x13 =122200(x2, x12)\n    x14 =122233\n    x15 = merge(x1)\n    x16 = bottomhalf(x2)\n    x17 = lefthalf(x16)\n    x18 = bottomhalf(x2)\n    x19 = righthalf(x17)\n    x20 = width(x13)\n    x21 =145(x13)\n    x22 = astuple(x20, x21)\n    x23 = crop(x13, ORIGIN, x22)\n    x24 = ofcolor(x23, x3)\n    x25 =19color(x24)\n    x26 = dmirror(x23)\n    x27 = invert(x26)\n    x28 = tojvec(x27)\n    x29 = double(xdneighbors)\n    x30 = interval(x29, x27, ONE)\n    x31 = lbind(shift, x25)\n    x32 = apply(x31, x30)\n    x33 = mapply(x27, x32)\n    O = fill(x23, x5, x33)\n    return O"], [1.1, "def solve_db412776(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = switch(I, dmirror, identity)\n    x2 = astuple(x1, x1)\n    x3 = astuple(FOUR, EIGHT)\n    x4 = canvas(NEG_ONE, x3)\n    x5 =9465(x4)\n    x6 = rbind(toobject, x1)\n    x7 = compose(x6, toindices)\n    x8 = rbind(colorcount, x1)\n    x9 = matcher(x8, chain(x8, x7)\n    x10 = matcher(x8, TWO)\n    x11 = fork(both, x9, x10)\n    x12 = extract(x5, x11)\n    x13 =124indices(x12)\n    x14 =manhattan(x13, x5)\n    x15 = multiply(x14, UNITY)\n    x16 = canvas(NEG_ONE, x15)\n    x17 = fgpartition(x16)\n    x18 = merge(x17)\n    x19 = center(x18)\n    x20 = branch(x19, x16, x17)\n    x21 = subtract(x20, x19)\n    x22 = astuple(NEG_TWO, x21)\n    x23 = order(x5, x22)\n    x24 = lbind(contained, ZERO)\n    x25 = sfilter(x2, x24)\n    x26 = lbind(shift, x21)\n    x27 = compose(x26, toindices)\n    x28 = mapply(x27, x23)\n    x29 = combine(x28, x25)\n    x30 = shift(x29, x3)\n    x31 = compose(x5, x27)\n    x32 = mapply(x31, x30)\n    x33 = combine(x30, x32)\n    x34 = paint(x16, x33)\n    O = x4(x34)\n    return O"], [1.1, "def solve_38e5102b(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(d687, x5)\n    x7 =77(x5)\n    x8 =77(x6)\n    x9 =x7(I)\n    x10 = x6(x9)\n    x11 = fork(subtract, height, width)\n    x12 = lbind(ofcolor, x10)\n    x13 = palette(x12)\n    x14 = compose(x11, x12)\n    x15 = argmin(x13, x14)\n    x16 = other(x9, x15)\n    x17 = ofcolor(x10, x16)\n    x18 = outbox(x17)\n    x19 = toobject(x18, x10)\n    x20 = mostcolor(x19)\n    x21 = initset(x16)\n    x22 = rbind(manhattan, x21)\n    x23 = argmin(x25, x22)\n    x24 = other(x23, x20)\n    x25 = ofcolor(x10, x24)\n    x26 = combine(x19, x25)\n    x27 = fill(I, x24, x26)\n    x28 = difference(x27, x26)\n    O = fill(x28, x24, x28)\n    return O"], [1.1, "def solve_91f9ab2c(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = shape(I)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(I, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmin(x11, numcolors)\n    x13 = normalize(x12)\n    x14 = toindices(x13)\n    x15 = increment(x4)\n    x16 = increment(x15)\n    x17 = increment(x5)\n    x18 = increment(x17)\n    x19 = astuple(x16, x18)\n    x20 = lbind(multiply, x19)\n    x21 = apply(x20, x14)\n    x22 = lbind(shift, x14)\n    x23 = mapply(x22, x21)\n    x24 = paint(x10, x23)\n    x25 = objects(x24, F, T, T)\n    x26 = lbind(occurrences, x24)\n    x27 = compose(x26, x24)\n    x28 = fork(combine, x27, x25)\n    x29 =21826(x28, x7)\n    x30 = palette(x29)\n    x31 = rbind(contained, x30)\n    x32 = argmin(x30, x31)\n    x33 =12(x32)\n    x34 =210(x33)\n    x35 = ofcolor(x34, x41)\n    x36 = ofcolor(x34, x5)\n    x37 = combine(x35, x36)\n    x38 = intersection(x35, x37)\n    O = fill(x24, ONE, x38)\n    return O"], [1.1, "def solve_962e4674(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =22izter(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [1.1, "def solve_68ff15a2(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 =6666(I)\n    x2 =6006666(I)\n    x3 = hmirror(x2)\n    O = vconcat(I, x3)\n    return O"], [1.1, "def solve_4acb4ea9(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = replace(I, ONE, ZERO)\n    x4 = colorfilter(x2, x3)\n    x5 = argmax(x4, size)\n    x6 = color(x5)\n    x7 = subgrid(x5, I)\n    x8 = fork(insert, identity, identity)\n    x9 = width(x7)\n    x10 = insert(x9, x7)\n    x11 = x8(x10)\n    x12 = width(x7)\n    x13 = increment(x12)\n    x14 = interval(ZERO, x13, x ONE)\n    x15 = subgrid(x5, x7)\n    x16 = insert(x15, x14)\n    x17 = rightmost(x16)\n    x18 = lbind(greater, x17)\n    x19 = compose(x18, uppermost)\n    x20 = rbind(sfilter, x19)\n    x21 = chain(x17, x20, frontiers)\n    x22 = lbind(recolor, x6)\n    x23 = compose(x22, color)\n    x24 = rbind(sfilter, x23)\n    x25 = chain(x10, x24, asobject)\n    x26 = lbind(shift, x8)\n    x27 = chain(x26, x24, x27)\n    x28 = rbind(mapply, x27)\n    x29 = compose(x28, x25)\n    x30 = lbind(add, x17)\n    x31 = chain(x30, x26, outbox)\n    x32 = fork(combine, x29, x31)\n    x33 = mapply(x32, x14)\n    O = paint(x3, x33)\n    return O"], [1.1, "def solve_9e663d55(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = decrement(x2)\n    x4 = index(I, x3)\n    x5 = rbind(shoot, UP_RIGHT)\n    x6 = canvas(x1, x4)\n    x7 = matcher(first, FOUR)\n    x8 = compose(flip, x7)\n    x9 = extract(x6, x8)\n    x10 = color(x9)\n    x11 = objects(I, T, F, T)\n    x12 = sizefilter(x11, ONE)\n    x13 = merge(x12)\n    x14 =111(x13)\n    x15 = palette(x14)\n    x16 = lbind(colorcount, x14)\n    x17 = arguple(x16, UNITY)\n    x18 = lbind(colorcount, x14)\n    x19 = increment(x17)\n    x20 = increment(x18)\n    x21 = neighbors(ORIGIN)\n    x22 = mapply(neighbors, x21)\n    x23 = astuple(x17, x20)\n    x24 = lbind(multiply(x23)\n    x25 = apply(x24, x22)\n    x26 = apply(first, x25)\n    x27 =4444(x26)\n    x28 = merge(x26)\n    x29 = paint(I, x28)\n    x30 = astuple(x17, x20)\n    x31 = astuple(x27, x30)\n    x32 = hmirror(x31)\n    x33 = vmirror(x32)\n    x34 =111(x33)\n    x35 = hmirror(x34)\n    x36 = vmirror(x35)\n    x37 = dmirror(x36)\n    x38 = combine(x33, x37)\n    x39 = paint(x38, x36)\n    O = fill(x39, x10, x38)\n    return O"], [1.1, "def solve_fc1e09c9(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = leastcommon(x3)\n    x5 = apply(last, x2)\n    x6 = ofcolor(I, x4)\n    x7 = intersection(x6, x5)\n    x8 =64e8x777\n    x9 = fill(I, TWO, x8)\n    O = fill(x9, ONE, x7)\n    return O"], [1.1, "def solve_07657b9e(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = increment(x4)\n    x13 = add(x12, x11)\n    x14 = canvas(x3, x13)\n    x15 = asobject(x8)\n    x16 = shift(x15, UNITY)\n    x17 = paint(x14, x16)\n    x18 =01(x1)\n    x19 = shift(x17, UNITY)\n    O = paint(x17, x19)\n    return O"], [1.1, "def solve_2866801c(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor = x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [1.1, "def solve_57c88724(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind( frontiers, I)\n    x2 = compose(size, x1)\n    x3 = matcher(x2, ONE)\n    x4 = shape(I)\n    x5 = canvas(ONE, x4)\n    x6 = lbind(hmatching, I)\n    x7 = compose(x6, x3)\n    x8 = fork(either, vline, hline)\n    x9 = fork(both, x7, x8)\n    x10 = sfilter(x5, x9)\n    x11 = compose(size, x1)\n    x12 = argmin(x10, x11)\n    x13 =1111(x12, I)\n    x14 = delta(x13)\n    O = fill(x5, ONE, x14)\n    return O"], [1.1, "def solve_c794f04d(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = shape(I)\n    x3 = halve(x2)\n    x4 = mostcolor(I)\n    x5 = canvas(x4, x3)\n    x6 = rbind(shoot, UP49 UNITY)\n    x7 = compose(x6, last)\n    x8 = fork(recolor, first, x7)\n    x9 = mapply(x8, x1)\n    O = paint(x5, x9)\n    return O"], [1.1, "def solve_560bc42b(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = power(equality, FOUR)\n    x9 = first(x7)\n    x10 = last(x7)\n    x11 = x8(x9)\n    x12 = x8(x10)\n    x13 = ofcolor(x11, FOUR)\n    x14 = ofcolor(x12, FOUR)\n    x15 = intersection(x13, x14)\n    x16 = first(x15)\n    x17 = shape(x11)\n    x18 = canvas(FIVE, x17)\n    x19 = fill(x18, THREE, x15)\n    x20 = decrement(x1)\n    x21 = chain(even, x20, tojvec)\n    x22 = crop(x11, x424, x21)\n    x23 = crop(x12, x22, x1)\n    x24 = crop(x12, x23, x11)\n    x25 = asobject(x21)\n    x26 = subgrid(x25, x24)\n    x27 = mostcolor(x26)\n    x28 = asobject(x23)\n    x29 =88170(x28)\n    x30 = matcher(first, x39)\n    x31 = compose(flip, x30)\n    x32 = sfilter(x29, x31)\n    O = fill(x19, TWO, x32)\n    return O"], [1.1, "def solve_aa7619a0(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = fork(subtract, toindices, box)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = fork(equality, toindices, corners)\n    x7 = fork(64b190, size, x6)\n    x8 = sfilter(x2, x7)\n    x9 = argmax(x8, x8)\n    x10 = color(x9)\n    x11 = ofcolor(I, x10)\n    x12 = inbox(x11)\n    x13 = toobject(x12, I)\n    x14 = mostcolor(x13)\n    x15 = ofcolor(I, x14)\n    x16 = inbox(x15)\n    x17 = urcorner(x16)\n    x18 = shoot(x17, NEG_UNITY)\n    x19 = lrcorner(x15)\n    x20 = shoot(x19, UNITY)\n    x21 = urcorner(x20)\n    x22 = shoot(x21,___UNITY)\n    x23 = combine(x18, x22)\n    x24 = rbind(shoot, x34)\n    x25 = mapply(x24, x23)\n    x26 = combine(x30, x25)\n    x27 = fill(I, x10, x26)\n    x28 = ofcolor(x27, x70)\n    x29 = rbind(adjacent, x8)\n    x30 = sfilter(x28, x29)\n    x31 = normalize(x30)\n    x32 = lbind(shift, x31)\n    x33 = mapply(x32, x30)\n    O = paint(x27, x33)\n    return O"], [1.1, "def solve_c7b9065c(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = DOWNd364b(x3)\n    x5 = fill(I, FOUR, x4)\n    x6 = hmirror(x5)\n    x7 =07(x6)\n    x8 = power(outbox, TWO)\n    x9 = chain(backdrop, x8, initset)\n    x10 = x9(x7)\n    x11 = leastcolor(x10)\n    x12 = replace(x5, x11, ZERO)\n    O = replace(x12, lefthalf, ZERO)\n    return O"], [1.1, "def solve_369bc17f(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = rbind(bordering, x14)\n    x16 = compose(x15, normalize)\n    x17 = apply(x16, x10)\n    x18 = rbind(adjacent, x3)\n    x19 =14(x14)\n    x20 = sfilter(x19, x18)\n    x21 = rbind(adjacent, x13)\n    x22 =14(x20)\n    x23 = sfilter(x21, x22)\n    x24 = combine(x18, x23)\n    x25 = cover(x9, x24)\n    x26 = fgpartition(x25)\n    x27 = merge(x26)\n    x28 = paint(x25, x27)\n    x29 = argmax(x28, size)\n    x30 = shift(x29, UNITY)\n    x31 = paint(x25, x30)\n    x32 = toindices(x3)\n    x33 = index(x25, x32)\n    x34 = difference(x33, x32)\n    O = fill(x39, x3, x34)\n    return O"], [1.1, "def solve_d96ffd89(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = sizefilter(x1, ONE)\n    x3 = lbind(fork, connect)\n    x4 = lbind(x3, identity)\n    x5 = lbind(extract, x2)\n    x6 = compose(x4, x5)\n    x7 = lbind(recolor, ONE)\n    x8 = chain(033708, x7, x6)\n    x9 = fork(paint, chain, x8)\n    x10 = chain(numcolors, x9, first)\n    x11 = compose(maximum, first)\n    x12 = fork(add, x11, x10)\n    x13 = compose(flip, x12)\n    x14 = sfilter(x2, x13)\n    x15 = size(x14)\n    x16 = positive(x15)\n    x17 = branch(x16, identity, dmirror)\n    x18 = x17(I)\n    x19 = partition(x18)\n    x20 = matcher(color, ONE)\n    x21 = compose(flip, x20)\n    x22 = ofcolor(x18, TWO)\n    x23 = sfilter(x22, x21)\n    x24 = fork(remove, last, identity)\n    x25 = lbind(colorcount, x18)\n    x26 = compose(x25, x42)\n    x27 = argmin(x23, x26)\n    x28 = ofcolor(x18, x27)\n    x29 = ofcolor(x18, TWO)\n    x30 = initset(x29)\n    x31 = rbind(manhattan, x30)\n    x32 = argmin(x28, x31)\n    x33 = mapply(x32, x28)\n    x34 = fill(x18, TWO, x33)\n    x35 = x17(x34)\n    x36 = ofcolor(x35, x27)\n    x37 = mapply(x16, x36)\n    O = fill(x35, TWO, x37)\n    return O"], [1.1, "def solve_57fce77f(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, T)\n    x4 = merge(x3)\n    x5 = mostcolor(x4)\n    x6 = palette(x1)\n    x7 = other(x6, x5)\n    x8 = switch(x6, x7, x1)\n    x9 =8506404699(x8)\n    x10 = astuple(SIX, FIVE)\n    x11 = canvas(x7, x10)\n    x12 = asindices(x11)\n    x13 = toobject(x12, I)\n    x14 = increment(x13)\n    x15 = mostcolor(I)\n    x16 = shift(x14, x15)\n    x17 = combine(x12, x16)\n    x18 = paint(x11, x17)\n    x19 = hmirror(x18)\n    x20 = objects(x19, T, F, T)\n    x21 = colorfilter(x20, x7)\n    x22 = rbind(adjacent, x21)\n    x23 = mfilter(x22, x22)\n    x24 = replace(x18, x5, xONE)\n    O = paint(x24, x23)\n    return O"], [1.1, "def solve_f8569f27(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(greater, THREE)\n    x3 = chain(x2, vmirror, dmirror)\n    x4 =535(I)\n    x5 = sfilter(x4, x3)\n    x6 = fork(combine, vfrontier, hfrontier)\n    x7 = x6(x5)\n    x8 = rbind(compose, initset)\n    x9 = lbind(rbind, manhattan)\n    x10 = chain(x8, x9, initset)\n    x11 = lbind(compose, initset)\n    x12 = chain(x11, x9, outbox)\n    x13 = compose(merge, x7)\n    x14 = fork(both, x12, x13)\n    x15 = fork(both, xO, x14)\n    x16 = apply(x15, x11)\n    x17 = decrement(x16)\n    x18 = tojvec(x17)\n    x19 = shoot(x18, UNITY)\n    x20 = mapply(x16, x19)\n    x21 = fill(I, ZERO, x20)\n    x22 = asobject(x21)\n    x23 = vmirror(x22)\n    x24 = index(x82, x23)\n    x25 = branch(x24, DOWN, RIGHT)\n    x26 = add(x25, x28)\n    x27 = ulcorner(x25)\n    x28 = add(x27, x28)\n    x29 = shift(x23, x28)\n    x30 = urcorner(x25)\n    x31 = add(x30, x28)\n    x32 = llcorner(x25)\n    x33 = add(x32, x28)\n    x34 = shift(x33, x24)\n    x35 = paint(x21, x29)\n    O = fill(x35, ZERO, x32_ulcorner)\n    return O"], [1.1, "def solve_33e654ed(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = eapply(d511117, x1)\n    O =7599(x2)\n    return O"], [1.1, "def solve_35fc5bab(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    x5 = mostcolor(x4)\n    x6 = objects(x2, T, F, F)\n    x7 = colorfilter(x6, x5)\n    x8 = compose(normalize, toindices)\n    x9 = apply(x8, x7)\n    x10 = x2(x9)\n    x11 = remove(x10, x9)\n    x12 = lbind(sfilter, x11)\n    x13 = lbind(matcher, vline)\n    x14 = chain(x12, x4, x13)\n    x15 =49filter(x12, x14)\n    x16 = difference(x12, x15)\n    x17 = compose(size, x16)\n    x18 = matcher(x17, ZERO)\n    x19 = lbind(sfilter, x15)\n    x20 = lbind(matcher, x18)\n    x21 = compose(x19, x20)\n    x22 = fork(valmax, x21, x17)\n    x23 = lbind(sfilter, x15)\n    x24 = lbind(matcher, x18)\n    x25 = compose(x23, x24)\n    x26 = fork(apply, x25, x21)\n    x27 = lbind(lbind, shift)\n    x28 = compose(x27, dneighbors)\n    x29 = fork(mapply, x28, x22)\n    x30 = fork(mapply, x28, xl)\n    x31 = fork(combine, x29, x30)\n    x32 = mapply(x31, x15)\n    O = paint(x1, x32)\n    return O"], [1.1, "def solve_7553e8e8(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = MN objectsize(x5)\n    x7 = colorcount(I, x3)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x3)\n    x10 = leftmost(x9)\n    x11 = ofcolor(I, x3)\n    x12 = rightmost(x11)\n    x13 = matcher(first, x8)\n    x14 = rbind(sfilter, x13)\n    x15 = chain(x12, delta, x14)\n    x16 = apply(x15, x11)\n    O = fill(I, x3, x16)\n    return O"], [1.1, "def solve_48e54ce9(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =indices(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = double(x width)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = merge(x10)\n    x12 = mostcolor(x11)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = rbind(sfilter, x14)\n    x16 = lbind(occurrences, x6)\n    x17 = compose(x16, x15)\n    x18 = fork(positive, size, x17)\n    x19 = lbind(rbind, subtract)\n    x20 = rbind(rapply, x11)\n    x21 = compose(initset, x18)\n    x22 = chain(first, x20, x21)\n    x23 = compose(x18, x22)\n    x24 = apply(x23, x3)\n    x25 =Contin solve(x24, x6)\n    x26 = cover(x6, x25)\n    x27 = compose(x26, ulcorner)\n    x28 = apply(x27, x02)\n    x29 = vmirror(x28)\n    x30 = multiply(x NEG_TWO, NEG_TWO)\n    x31 = apply(x30, x29)\n    x32 = asindices(x29)\n    x33 = ofcolor(x29, x12)\n    x34 = difference(x32, x33)\n    x35 = lrcorner(x24)\n    x36 = lbind(shift, x24)\n    x37 = mapply(x36, x31)\n    O = paint(x32, x37)\n    return O"], [1.1, "def solve_e1b8c13d(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = apply(normalize, x2)\n    x4 = astuple(NEG_TWO, ONE)\n    x5 = astuple(UNITY, x4)\n    x6 = shift(x3, x5)\n    x7 = rbind(argmin, x3)\n    x8 =44232000(x3)\n    x9 = lbind(rbind, manhattan)\n    x10 = compose(x9, initset)\n    x11 = fork(compose, x7, x10)\n    x12 = product(x1, x6)\n    x13 = fork(shift, identity, x12)\n    x14 = mapply(x13, x12)\n    O = paint(x1, x14)\n    return O"], [1.1, "def solve_ebb2bd74(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = EIGHT(I)\n    x2 = vmirror(x1)\n    O =:\n    (x2, vmirror)\n    return O"], [1.1, "def solve_dd5bcffe(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = rot180(I)\n    x2 = rot270(I)\n    x3 = rot180(x1)\n    x4 =81(x3)\n    x5 = fork(combine, vfrontier, hfrontier)\n    x6 = compose(x5, x4)\n    x7 = sfilter(x2, x6)\n    O = fill(x3, ZERO, x7)\n    return O"], [1.1, "def solve_b825be8b(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = x2(I, TWO)\n    x4 = fgpartition(x3)\n    x5 = merge(x4)\n    x6 = chain(double, numcolors, numcolors)\n    x7 = x6(x5)\n    x8 = compose(vmirror, x7)\n    x9 = power(x8, TWO)\n    x10 = x9(x4)\n    x11 = x9(x4)\n    x12 = toindices(x11)\n    x13 = apply(x8, x12)\n    x14 = contained(x10, x13)\n    x15 = flip(x14)\n    x16 = branch(x15, hmirror, vmirror)\n    x17 = x16(x15)\n    x18 =757(x17, x4)\n    x19 = chain(dmirror, asobject, x18)\n    x20 = matcher(x19, x17)\n    x21 = extract(x50, x20)\n    x22 = x21(x4)\n    x23 = x21(x11)\n    x24 = asindices(x23)\n    x25 =412(flip, x24)\n    x26 = x25(x24)\n    x27 = fill(x22, EIGHT, x25)\n    O = paint(x27, x26)\n    return O"], [1.1, "def solve_211e9ecd(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = rbind(Sfilter, vline)\n    x2 = compose(positive, size)\n    x3 = rbind(sfilter, hline)\n    x4 = compose(x2, x3)\n    x5 = chain(x1, x4, frontiers)\n    x6 = argmax(x5, x4)\n    x7 =6(I)\n    x8 = remove(x6, x7)\n    x9 = lbind(shift, x6)\n    x10 = height(x6)\n    x11 = divide(x10, x9)\n    x12 = width(x6)\n    x13 = divide(x12, x4)\n    x14 = astuple(x11, x13)\n    x15 = maximum(x14)\n    x16 = increment(x15)\n    x17 = interval(ONE, x16, ONE)\n    x18 = matcher(numcolors, x16)\n    x19 = lbind(shift, x6)\n    x20 = rbind(multiply, x15)\n    x21 = lbind(add, x20)\n    x22 = chain(x19, x21, invert)\n    x23 = fork(combine, x18, x22)\n    x24 = lbind(apply, x23)\n    x25 = rbind(colorcount, x6)\n    x26 = compose(x24, x25)\n    x27 = apply(x26, x52)\n    x28 = normalize(x6)\n    x29 = mapply(x28, x27)\n    x30 = shape(x29)\n    x31 = canvas(ZERO, x30)\n    O = paint(x31, x29)\n    return O"]], "3490cc26": [[0.08173484697705038, "def solve_aa0da7ff(I):\n    x1 = objects(I, T, F, T)\n    x2 = mapply(delta, x1)\n    O = fill(I, SEVEN, x2)\n    return O"], [0.08173484697705038, "def solve_30905d00(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.08173484697705038, "def solve_434e04ac(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = rbind(difference, x2)\n    x4 = rbind(greater, TWO)\n    x5 = chain(x4, size, x3)\n    x6 = compose(x5, dneighbors)\n    x7 = sfilter(x2, x6)\n    O = fill(I, ZERO, x7)\n    return O"], [0.08173484697705038, "def solve_98f7aec9(I):\n    x1 = mostcolor(I)\n    x2 = replace(I, x1, ZERO)\n    x3 = shoot(ORIGIN, UNITY)\n    O = underfill(x2, x1, x3)\n    return O"], [0.08173484697705038, "def solve_b0989855(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.08173484697705038, "def solve_b3e6df2e(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.08173484697705038, "def solve_a07244da(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.08173484697705038, "def solve_abd3154b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_c70348e4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = subgrid(x2, I)\n    return O"], [0.08173484697705038, "def solve_d1d5ee2a(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.08173484697705038, "def solve_577faa35(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = apply(toindices, x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = intersection(x3, x2)\n    x8 = fill(x6, EIGHT, x7)\n    O = replace(x8, UNITY, ONE)\n    return O"], [0.08173484697705038, "def solve_158fb1ca(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_47e726cc(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = paint(I, x5)\n    return O"], [0.08173484697705038, "def solve_3269790b(I):\n    x1 = lbind(multiply, THREE)\n    x2 = rbind(add, THREE)\n    x3 = compose(x2, x1)\n    x4 = fork(equality, identity, x3)\n    x5 = compose(x4, last)\n    x6 = ofcolor(I, ZERO)\n    x7 = sfilter(x6, x5)\n    O = fill(I, ZERO, x7)\n    return O"], [0.08173484697705038, "def solve_c609818a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, ZERO, x2)\n    return O"], [0.08173484697705038, "def solve_11def15c(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.08173484697705038, "def solve_32f461fa(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.08173484697705038, "def solve_e582411f(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_265580a2(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.08173484697705038, "def solve_60924532(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_ef32b612(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.08173484697705038, "def solve_ddac29ae(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ONE, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    x7 = fill(I, EIGHT, x6)\n    x8 = add(SIX, SIX)\n    x9 = astuple(EIGHT, x8)\n    x10 = index(x7, x9)\n    x11 = equality(x10, EIGHT)\n    x12 = initset(x9)\n    x13 = add(x9, DOWN)\n    x14 = insert(x13, x12)\n    x15 = toobject(x14, x7)\n    x16 = toobject(x14, I)\n    x17 = branch(x11, x16, x15)\n    O = paint(x7, x17)\n    return O"], [0.08173484697705038, "def solve_3c97fd3c(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = fgpartition(I)\n    x6 = objects(I, T, F, F)\n    x3 = colorfilter(x6, x4)\n    x4 = rbind(bordering, I)\n    x5 = compose(flip, x4)\n    x6 = mfilter(x3, x5)\n    O = fill(I, ONE, x6)\n    return O"], [0.08173484697705038, "def solve_b8db33de(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = fork(subtract, first, last)\n    x4 = fork(multiply, sign, identity)\n    x5 = compose(x4, x3)\n    x6 = lbind(greater, THREE)\n    x7 = chain(x6, maximum, x5)\n    x8 = lbind(lbind, astuple)\n    x9 = rbind(chain, x8)\n    x10 = lbind(compose, x7)\n    x11 = rbind(x9, x10)\n    x12 = lbind(lbind, sfilter)\n    x13 = compose(x11, x12)\n    x14 = lbind(mapply, backdrop)\n    x15 = fork(apply, x13, identity)\n    x16 = compose(x14, x15)\n    x17 = power(x16, TWO)\n    x18 = x17(x2)\n    x19 = fill(I, FOUR, x18)\n    O = fill(x19, x1, x2)\n    return O"], [0.08173484697705038, "def solve_f9016614(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = rbind(difference, x2)\n    x4 = rbind(greater, TWO)\n    x5 = chain(x4, size, x3)\n    x6 = compose(x5, dneighbors)\n    x7 = sfilter(x2, x6)\n    O = fill(I, ZERO, x7)\n    return O"], [0.08173484697705038, "def solve_40a31bdc(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_6f209644(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = chain(palette, trim, x2)\n    x4 = lbind(contained, THREE)\n    x5 = compose(x4, x3)\n    x6 = fork(add, height, width)\n    x7 = compose(decrement, x6)\n    x8 = fork(equality, size, x7)\n    x9 = mfilter(x1, x5)\n    x10 = mfilter(x1, x8)\n    x11 = replace(I, THREE, SIX)\n    x12 = fill(x11, TWO, x9)\n    O = fill(x12, ONE, x10)\n    return O"], [0.08173484697705038, "def solve_a35c3976(I):\n    x1 = replace(I, SIX, TWO)\n    x2 = objects(x1, T, T, T)\n    x3 = colorfilter(x2, ONE)\n    x4 = merge(x3)\n    O = fill(x1, THREE, x4)\n    return O"], [0.08173484697705038, "def solve_3cad760b(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, FOUR, x3)\n    return O"], [0.08173484697705038, "def solve_4756bb5d(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.08173484697705038, "def solve_b34deaec(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.08173484697705038, "def solve_4c822624(I):\n    x1 = objects(I, T, F, T)\n    x2 = mapply(delta, x1)\n    O = fill(I, SEVEN, x2)\n    return O"], [0.08173484697705038, "def solve_f9052e5d(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_323133d6(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.08173484697705038, "def solve_66585baa(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_fa771c7f(I):\n    x1 = palette(I)\n    x2 = remove(FIVE, x1)\n    x3 = first(x2)\n    x4 = ofcolor(I, x3)\n    x5 = fill(I, ZERO, x4)\n    x6 = ofcolor(I, FIVE)\n    O = fill(x5, x3, x6)\n    return O"], [0.08173484697705038, "def solve_536ec41c(I):\n    x1 = fgpartition(I)\n    x2 = compose(last, first)\n    x3 = power(last, TWO)\n    x4 = fork(connect, x2, x3)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x1)\n    O = paint(I, x6)\n    return O"], [0.08173484697705038, "def solve_b6322588(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.08173484697705038, "def solve_b842301b(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = lbind(recolor, EIGHT)\n    x4 = rbind(ofcolor, x1)\n    x5 = chain(x3, backdrop, x4)\n    x6 = fork(paint, identity, x5)\n    x7 = height(I)\n    x8 = vsplit(I, x7)\n    x9 = mapply(x6, x8)\n    x10 = ofcolor(x9, EIGHT)\n    x11 = dmirror(I)\n    x12 = width(I)\n    x13 = vsplit(x11, x12)\n    x14 = mapply(x6, x13)\n    x15 = dmirror(x14)\n    x16 = ofcolor(x15, EIGHT)\n    x17 = combine(x10, x16)\n    x18 = difference(x17, x2)\n    O = fill(I, EIGHT, x18)\n    return O"], [0.08173484697705038, "def solve_f6458605(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, TWO, x3)\n    return O"], [0.08318632736744225, "def solve_600f8178(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_23783247(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_ed49d419(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_216d8721(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_759e05e9(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_47293928(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_48d8d3e1(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.1179007840135784, "def solve_02df5367(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = rbind(multiply, THREE)\n    x6 = rbind(divide, THREE)\n    x7 = compose(x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = toindices(x4)\n    x10 = compose(x8, last)\n    x11 = sfilter(x9, x10)\n    O = fill(I, SIX, x11)\n    return O"], [0.12814991617905258, "def solve_6779cc10(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [0.12814991617905258, "def solve_8efe0034(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [0.13468134728045977, "def solve_c689ab82(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_47aa2c22(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13468134728045977, "def solve_54fc2322(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13604469536847255, "def solve_ec74704f(I):\n    x1 = fork(multiply, height, width)\n    x2 = partition(I)\n    x3 = argmax(x2, x1)\n    x4 = remove(x3, x2)\n    x5 = argmax(x4, x1)\n    x6 = other(x4, x5)\n    x7 = palette(I)\n    x8 = lrcorner(x5)\n    x9 = add(x8, UNITY)\n    x10 = llcorner(x5)\n    x11 = add(x10, DOWN_LEFT)\n    x12 = urcorner(x5)\n    x13 = add(x12, UP_RIGHT)\n    x14 = ulcorner(x5)\n    x15 = add(x14, NEG_UNITY)\n    x16 = shoot(x9, UNITY)\n    x17 = shoot(x11, DOWN_LEFT)\n    x18 = shoot(x13, UP_RIGHT)\n    x19 = shoot(x15, NEG_UNITY)\n    x20 = combine(x16, x17)\n    x21 = combine(x18, x19)\n    x22 = combine(x20, x21)\n    x23 = color(x6)\n    O = fill(I, x23, x22)\n    return O"], [0.13811265931525568, "def solve_2aea6d72(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.13811265931525568, "def solve_5a02e5ea(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.14012102340220775, "def solve_336ea098(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = center(x2)\n    x4 = dneighbors(x3)\n    x5 = insert(x3, x4)\n    O = fill(I, THREE, x5)\n    return O"], [0.14098233381512817, "def solve_b4c6ca63(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, x1, x4)\n    return O"], [0.14583789476613793, "def solve_dc925b88(I):\n    x1 = ofcolor(I, EIGHT)\n    x2 = dneighbors(UNITY)\n    x3 = insert(UNITY, x2)\n    O = fill(I, THREE, x3)\n    return O"], [0.14633502634498852, "def solve_59c78fe3(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.14633502634498852, "def solve_f83105f3(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.147039853263387, "def solve_d8650412(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = lbind(colorcount, I)\n    x5 = argmin(x3, x4)\n    x6 = ofcolor(I, x1)\n    x7 = ofcolor(I, x5)\n    x8 = combine(x6, x7)\n    x9 = mapply(neighbors, x8)\n    x10 = difference(x9, x8)\n    x11 = toobject(x10, I)\n    x12 = leastcolor(x11)\n    x13 = ofcolor(I, x1)\n    x14 = first(x13)\n    x15 = initset(x14)\n    x16 = objects(I, T, F, F)\n    x17 = colorfilter(x16, x12)\n    x18 = lbind(adjacent, x8)\n    x19 = mfilter(x17, x18)\n    x20 = toindices(x19)\n    x21 = rbind(manhattan, x15)\n    x22 = chain(even, x21, initset)\n    x23 = sfilter(x20, x22)\n    x24 = fill(I, x5, x20)\n    O = fill(x24, x1, x23)\n    return O"], [0.15329845560571315, "def solve_d9a7ed46(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = partition(I)\n    x7 = fork(multiply, height, width)\n    x8 = fork(equality, size, x7)\n    x9 = sfilter(x6, x8)\n    x10 = argmax(x9, size)\n    x11 = difference(x5, x10)\n    x12 = apply(initset, x11)\n    x13 = rbind(hmatching, x10)\n    x14 = rbind(vmatching, x10)\n    x15 = fork(either, x13, x14)\n    x16 = sfilter(x12, x15)\n    x17 = rbind(gravitate, x10)\n    x18 = fork(add, center, x17)\n    x19 = fork(connect, center, x18)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x16)\n    O = paint(I, x21)\n    return O"], [0.15329845560571315, "def solve_d14931da(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = partition(I)\n    x7 = fork(multiply, height, width)\n    x8 = fork(equality, size, x7)\n    x9 = sfilter(x6, x8)\n    x10 = argmax(x9, size)\n    x11 = difference(x5, x10)\n    x12 = apply(initset, x11)\n    x13 = rbind(hmatching, x10)\n    x14 = rbind(vmatching, x10)\n    x15 = fork(either, x13, x14)\n    x16 = sfilter(x12, x15)\n    x17 = rbind(gravitate, x10)\n    x18 = fork(add, center, x17)\n    x19 = fork(connect, center, x18)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x16)\n    O = paint(I, x21)\n    return O"], [0.168463732206312, "def solve_39d464fa(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.168463732206312, "def solve_f668bb98(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.168463732206312, "def solve_7e08c377(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.168463732206312, "def solve_2eace2ca(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.168463732206312, "def solve_46a052e6(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.168463732206312, "def solve_a489a1e1(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.1697728934434557, "def solve_f541996f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.1697728934434557, "def solve_14139c6d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.1697728934434557, "def solve_7f60ad53(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.1697728934434557, "def solve_375e84de(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.1697728934434557, "def solve_43d2d38b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.1697728934434557, "def solve_4ec97b2f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.17098233381512817, "def solve_cd0cd5f8(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.17098233381512817, "def solve_6a2490db(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.17098233381512817, "def solve_cb78fd2c(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.17098233381512817, "def solve_dc9272d7(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.17098233381512817, "def solve_f12bbe53(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.17676372824140774, "def solve_05c8c2d7(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = astuple(x1, ONE)\n    x8 = astuple(ONE, x2)\n    x9 = decrement(x1)\n    x10 = decrement(x2)\n    x11 = toivec(x10)\n    x12 = tojvec(x9)\n    x13 = crop(I, x11, x8)\n    x14 = crop(I, x12, x7)\n    x15 = asobject(x14)\n    x16 = asobject(x13)\n    x17 = vperiod(x15)\n    x18 = hperiod(x16)\n    x19 = astuple(x17, x18)\n    x20 = lbind(multiply, x19)\n    x21 = neighbors(ORIGIN)\n    x22 = mapply(neighbors, x21)\n    x23 = apply(x20, x22)\n    x24 = lbind(shift, x6)\n    x25 = mapply(x24, x23)\n    O = paint(I, x25)\n    return O"], [0.19326297813860446, "def solve_a4c657fa(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.19662398716229976, "def solve_87696ca2(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = add(TWO, x5)\n    x7 = canvas(x4, x6)\n    x8 = asobject(I)\n    x9 = shift(x8, UNITY)\n    x10 = paint(x7, x9)\n    x11 = palette(x10)\n    x12 = remove(x4, x11)\n    x13 = lbind(ofcolor, x10)\n    x14 = fork(recolor, identity, x13)\n    x15 = apply(x14, x12)\n    x16 = fork(equality, toindices, backdrop)\n    x17 = extract(x15, x16)\n    x18 = other(x15, x17)\n    x19 = color(x18)\n    x20 = astuple(x19, RIGHT)\n    x21 = initset(ZERO_BY_TWO)\n    x22 = insert(ORIGIN, x21)\n    x23 = recolor(x4, x22)\n    x24 = insert(x20, x23)\n    x25 = dmirror(x24)\n    x26 = lbind(shift, x24)\n    x27 = occurrences(x10, x24)\n    x28 = mapply(x26, x27)\n    x29 = lbind(shift, x25)\n    x30 = occurrences(x10, x25)\n    x31 = mapply(x29, x30)\n    x32 = combine(x28, x31)\n    x33 = fill(x10, x4, x32)\n    x34 = ofcolor(x33, x19)\n    x35 = gravitate(x34, x17)\n    x36 = replace(x10, x19, x4)\n    x37 = shift(x34, x35)\n    x38 = fill(x36, x19, x37)\n    O = trim(x38)\n    return O"], [0.19986952115995066, "def solve_f48a2bf4(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.20252763457609518, "def solve_019b9742(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.20252763457609518, "def solve_ff0e6161(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.20252763457609518, "def solve_2276b0e0(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.20977289344345568, "def solve_84a1782b(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_263d005f(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_e3b2d358(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_55485376(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_a44520b9(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(add, height, width)\n    x3 = compose(decrement, x2)\n    x4 = fork(equality, size, x3)\n    x5 = fork(difference, toindices, box)\n    x6 = compose(size, x5)\n    x7 = matcher(x6, ZERO)\n    x8 = sfilter(x1, x4)\n    x9 = difference(x1, x8)\n    x10 = sfilter(x9, x7)\n    x11 = merge(x1)\n    x12 = fill(I, TWO, x11)\n    x13 = merge(x8)\n    x14 = fill(x12, ONE, x13)\n    x15 = merge(x10)\n    O = fill(x14, SIX, x15)\n    return O"], [0.20977289344345568, "def solve_4904db5d(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_95a5b43b(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.2164395601101224, "def solve_283d0dbe(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.2164395601101224, "def solve_3e317936(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.21724245422789054, "def solve_442fa580(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(shoot, RIGHT)\n    x4 = compose(x3, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(x1, DOWN_LEFT)\n    x9 = initset(x8)\n    x10 = mostcolor(I)\n    x11 = recolor(x10, x9)\n    x12 = objects(x7, T, F, T)\n    x13 = insert(x11, x12)\n    x14 = order(x13, uppermost)\n    x15 = first(x14)\n    x16 = remove(x11, x14)\n    x17 = remove(x15, x14)\n    x18 = compose(lrcorner, first)\n    x19 = compose(lrcorner, last)\n    x20 = fork(connect, x18, x19)\n    x21 = compose(color, first)\n    x22 = fork(recolor, x21, x20)\n    x23 = pair(x16, x17)\n    x24 = mapply(x22, x23)\n    O = underpaint(x7, x24)\n    return O"], [0.22208695827893984, "def solve_a7927a55(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.22208695827893984, "def solve_a1f7930d(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.22208695827893984, "def solve_a36b0c17(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.24440527968330814, "def solve_300d1f81(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.253858380731812, "def solve_62ea7c08(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, last)\n    x5 = fork(recolor, first, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [0.25543417203130403, "def solve_31ee8b3e(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.25543417203130403, "def solve_ab3067be(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.2609101882868059, "def solve_2c827883(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot180(x3)\n    return O"], [0.2730213103674518, "def solve_3c5b9738(I):\n    O = rot180(I)\n    return O"], [0.2730213103674518, "def solve_3c8b807a(I):\n    O = rot180(I)\n    return O"], [0.2735505434325868, "def solve_47e25343(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.2735505434325868, "def solve_3828d505(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.28257229929506134, "def solve_2f81834b(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.28257229929506134, "def solve_6f34a6d3(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.28271352439090625, "def solve_f1748008(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.28271352439090625, "def solve_24ebe47d(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.28271352439090625, "def solve_18c3e8d6(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.28271352439090625, "def solve_ea4f93e6(I):\n    x1 = shape(I)\n    x2 = add(x1, TWO)\n    x3 = canvas(ZERO, x2)\n    x4 = asobject(I)\n    x5 = shift(x4, UNITY)\n    x6 = paint(x3, x5)\n    x7 = asindices(x3)\n    x8 = fork(difference, box, corners)\n    x9 = x8(x7)\n    x10 = lbind(lbind, manhattan)\n    x11 = rbind(compose, initset)\n    x12 = chain(x11, x10, initset)\n    x13 = lbind(argmin, x5)\n    x14 = chain(first, x13, x12)\n    x15 = fork(astuple, x14, identity)\n    x16 = apply(x15, x9)\n    O = paint(x6, x16)\n    return O"], [0.2888686244192573, "def solve_56fff384(I):\n    x1 = fgpartition(I)\n    x2 = fork(recolor, color, backdrop)\n    x3 = mapply(x2, x1)\n    O = paint(I, x3)\n    return O"], [0.2912996173225872, "def solve_e7587275(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_da3ae983(I):\n    x1 = subgrid(I, I)\n    x2 = vmirror(x1)\n    x3 = equality(x2, I)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_8b6d368e(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_5ba9ea34(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_85a2e2db(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_57a3c5d0(I):\n    O = tophalf(I)\n    return O"], [0.29211676764739275, "def solve_4d8b92d5(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = apply(toindices, x6)\n    x8 = rbind(shoot, RIGHT)\n    x9 = compose(x8, center)\n    x10 = fork(recolor, color, x9)\n    x11 = mapply(x10, x6)\n    x12 = paint(I, x11)\n    x13 = width(I)\n    x14 = interval(ZERO, x13, ONE)\n    x15 = apply(double, x14)\n    x16 = apply(increment, x15)\n    x17 = apply(tojvec, x16)\n    x18 = prapply(shift, x7, x17)\n    x19 = merge(x18)\n    O = fill(x12, FIVE, x19)\n    return O"], [0.2928824046422477, "def solve_8bb78835(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = cover(I, x2)\n    x4 = chain(toivec, invert, height)\n    x5 = fork(shift, identity, x4)\n    x6 = mapply(x5, x1)\n    O = paint(x3, x6)\n    return O"], [0.2957105825141008, "def solve_b6c48e28(I):\n    x1 = replace(I, FOUR, ZERO)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [0.2957105825141008, "def solve_b0b429e6(I):\n    x1 = replace(I, FOUR, ZERO)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply( x4, x7)\n    O = cmirror(x8)\n    return O"], [0.3074019960118805, "def solve_e1196e4b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.310951687548502, "def solve_63fcb204(I):\n    x1 = asindices(I)\n    x2 = tophalf(I)\n    x3 = bottomhalf(I)\n    x4 = leastcolor(x2)\n    x5 = leastcolor(x3)\n    x6 = hfrontier(TWO_BY_ZERO)\n    x7 = box(x1)\n    x8 = combine(x6, x7)\n    x9 = fill(x2, x4, x8)\n    x10 = hmirror(x9)\n    x11 = replace(x10, x4, x5)\n    O = vconcat(x9, x11)\n    return O"], [0.31572456964802403, "def solve_7a50eacb(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.31572456964802403, "def solve_2e488234(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.326168988805897, "def solve_0b860acc(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.326168988805897, "def solve_e11328c7(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.326168988805897, "def solve_e8445d78(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.3315011728051802, "def solve_ba043d5e(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.3315011728051802, "def solve_ba21fa2a(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.3315011728051802, "def solve_a8b2e634(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.34510675848655514, "def solve_6d4fa3d9(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.36791347770439387, "def solve_eb11ea87(I):\n    O = dmirror(I)\n    return O"], [0.36791347770439387, "def solve_e9ca16ad(I):\n    O = dmirror(I)\n    return O"], [0.3717660024843291, "def solve_3eb6d332(I):\n    O = rot90(I)\n    return O"], [0.3807233128441688, "def solve_edc0bdf2(I):\n    O = rot270(I)\n    return O"], [0.39792386532946417, "def solve_abb7c25f(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, bottomhalf)\n    O = x2(I)\n    return O"], [0.3997728934434557, "def solve_dd62be86(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = ofcolor(I, ZERO)\n    x4 = astuple(x1, ONE)\n    x5 = crop(I, ORIGIN, x4)\n    x6 = hupscale(x5, x2)\n    O = fill(x6, ZERO, x3)\n    return O"], [0.3997728934434557, "def solve_35adba73(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.3997728934434557, "def solve_173748df(I):\n    x1 = shape(I)\n    x2 = equality(x1, TWO)\n    x3 = branch(x2, x1, x1)\n    x4 = branch(x2, x1, x1)\n    x5 = canvas(ZERO, x4)\n    x6 = asobject(x5)\n    x7 = occurrences(I, x6)\n    x8 = apply(double, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(shift, x6)\n    x11 = mapply(x10, x9)\n    O = fill(x5, FOUR, x11)\n    return O"], [0.4121180954681841, "def solve_97fae789(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.41434496433667933, "def solve_e056dd34(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = recolor(ZERO, x2)\n    x4 = normalize(x3)\n    x5 = occurrences(I, x4)\n    x6 = toindices(x4)\n    x7 = lbind(shift, x6)\n    x8 = mapply(x7, x5)\n    O = fill(I, x1, x8)\n    return O"], [0.41434496433667933, "def solve_a5ee513e(I):\n    x1 = ofcolor(I, TWO)\n    x2 = recolor(ZERO, x1)\n    x3 = normalize(x2)\n    x4 = occurrences(I, x2)\n    x5 = lbind(shift, x3)\n    x6 = apply(x5, x4)\n    x7 = astuple(ONE, THREE)\n    x8 = astuple(FIVE, ONE)\n    x9 = astuple(TWO, SIX)\n    x10 = initset(x7)\n    x11 = insert(x8, x10)\n    x12 = insert(x9, x11)\n    x13 = rbind(contained, x12)\n    x14 = chain(flip, x13, ulcorner)\n    x15 = sfilter(x6, x14)\n    x16 = merge(x15)\n    x17 = recolor(TWO, x16)\n    O = paint(I, x17)\n    return O"], [0.4221658498666133, "def solve_c9156682(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.44421029663584294, "def solve_30e5060f(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_521f7d01(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_ef2411e3(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_cf5f5894(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_bcd0445c(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_632d98f3(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_769dcfa4(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_58b88c45(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_050ee037(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_0159e6ca(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_657d180c(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.46513537732538296, "def solve_8f4a6a22(I):\n    x1 = trim(I)\n    x2 = trim(x1)\n    x3 = tophalf(x2)\n    x4 = lefthalf(x3)\n    x5 = tophalf(x2)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(x2)\n    x8 = lefthalf(x7)\n    x9 = bottomhalf(x2)\n    x10 = righthalf(x9)\n    x11 = index(I, ORIGIN)\n    x12 = width(I)\n    x13 = decrement(x12)\n    x14 = tojvec(x13)\n    x15 = index(I, x14)\n    x16 = height(I)\n    x17 = decrement(x16)\n    x18 = toivec(x17)\n    x19 = index(I, x18)\n    x20 = shape(I)\n    x21 = decrement(x20)\n    x22 = index(I, x21)\n    x23 = compress(I)\n    x24 = asindices(x23)\n    x25 = box(x24)\n    x26 = corners(x24)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, x23)\n    x29 = color(x28)\n    x30 = palette(x2)\n    x31 = other(x30, x29)\n    x32 = replace(x4, x31, x11)\n    x33 = replace(x6, x31, x15)\n    x34 = replace(x8, x31, x19)\n    x35 = replace(x10, x31, x22)\n    x36 = hconcat(x32, x33)\n    x37 = hconcat(x34, x35)\n    O = vconcat(x36, x37)\n    return O"], [0.4653084736970792, "def solve_079bcd9e(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, T, T, F)\n    x6 = colorfilter(x5, x4)\n    x7 = fork(add, leftmost, uppermost)\n    x8 = argmin(x6, x7)\n    x9 = argmax(x6, x7)\n    x10 = lbind(sfilter, x6)\n    x11 = rbind(compose, leftmost)\n    x12 = chain(size, x10, x11)\n    x13 = lbind(sfilter, x6)\n    x14 = rbind(compose, uppermost)\n    x15 = chain(size, x13, x14)\n    x16 = lbind(lbind, greater)\n    x17 = chain(x12, x16, leftmost)\n    x18 = lbind(rbind, greater)\n    x19 = chain(x12, x18, leftmost)\n    x20 = lbind(lbind, greater)\n    x21 = chain(x15, x20, uppermost)\n    x22 = lbind(rbind, greater)\n    x23 = chain(x15, x22, uppermost)\n    x24 = fork(equality, x17, x19)\n    x25 = fork(equality, x21, x23)\n    x26 = fork(both, x24, x25)\n    x27 = extract(x6, x26)\n    x28 = fill(I, ONE, x8)\n    x29 = fill(x28, THREE, x9)\n    O = fill(x29, TWO, x27)\n    return O"], [0.477399406494354, "def solve_b7ea780c(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = mostcolor(I)\n    O = replace(x3, x4, ZERO)\n    return O"], [0.516202927118657, "def solve_6aa471db(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = normalize(x2)\n    x4 = lbind(matcher, first)\n    x5 = compose(x4, mostcolor)\n    x6 = fork(sfilter, identity, x5)\n    x7 = fork(difference, identity, x6)\n    x8 = lbind(rbind, upscale)\n    x9 = interval(ONE, FOUR, ONE)\n    x10 = apply(x8, x9)\n    x11 = initset(identity)\n    x12 = insert(vmirror, x11)\n    x13 = insert(hmirror, x12)\n    x14 = insert(cmirror, x13)\n    x15 = insert(dmirror, x14)\n    x16 = fork(compose, first, last)\n    x17 = lbind(occurrences, I)\n    x18 = lbind(lbind, shift)\n    x19 = compose(x17, x7)\n    x20 = product(x15, x10)\n    x21 = apply(x16, x20)\n    x22 = rapply(x21, x3)\n    x23 = fork(mapply, x18, x19)\n    x24 = mapply(x23, x22)\n    O = paint(I, x24)\n    return O"], [0.5235791174015115, "def solve_57708b48(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5235791174015115, "def solve_08336b1b(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5235791174015115, "def solve_9b4bb339(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5235791174015115, "def solve_04762ae7(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5235791174015115, "def solve_e2449288(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5235791174015115, "def solve_e0a8035a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5235791174015115, "def solve_349b8865(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5430215763602573, "def solve_b74b2ee6(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = subgrid(x5, I)\n    x7 = mostcolor(x6)\n    x8 = leastcolor(x6)\n    O = switch(x6, x7, x8)\n    return O"], [0.5542587288414367, "def solve_bc4df508(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5641693586048402, "def solve_034242c8(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.5755254809302857, "def solve_345ce9b2(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, x13, x16)\n    return O"], [0.6120477652469136, "def solve_9d0463fa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = subgrid(x2, I)\n    x8 = palette(x7)\n    x9 = lbind(colorcount, x7)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.6406814241086747, "def solve_d32ee5bb(I):\n    x1 = index(I, ORIGIN)\n    x2 = equality(x1, TWO)\n    x3 = branch(x2, vsplit, hsplit)\n    x4 = x3(I, TWO)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = palette(x5)\n    x8 = palette(x6)\n    x9 = intersection(x7, x8)\n    x10 = first(x9)\n    x11 = shape(x5)\n    x12 = canvas(x10, x11)\n    x13 = ofcolor(x5, x10)\n    x14 = ofcolor(x6, x10)\n    x15 = intersection(x13, x14)\n    O = fill(x12, FIVE, x15)\n    return O"], [0.641276367065674, "def solve_93b8e190(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.641276367065674, "def solve_3d29bb24(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.641276367065674, "def solve_49755f7a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.641276367065674, "def solve_2e9466b2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.641276367065674, "def solve_7d5d61aa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.641276367065674, "def solve_196b5b15(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.6460408141864922, "def solve_1444204b(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6460408141864922, "def solve_4b150a71(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6460408141864922, "def solve_1e979e12(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6460408141864922, "def solve_4e2be6ec(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6460408141864922, "def solve_57021259(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6460408141864922, "def solve_69229a21(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.6460408141864922, "def solve_346786cc(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6460408141864922, "def solve_1b57659e(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6460408141864922, "def solve_19273021(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6616496737786982, "def solve_31ef29a4(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = first(x2)\n    x4 = neighbors(x3)\n    x5 = astuple(TEN, TEN)\n    x6 = canvas(ZERO, x5)\n    x7 = initset(x3)\n    x8 = fill(x6, x1, x7)\n    O = fill(x8, TWO, x4)\n    return O"], [0.6947586846156356, "def solve_346ef70b(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.7540848163604722, "def solve_fbbe925c(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [0.7815794829293188, "def solve_be72322f(I):\n    x1 =first(I)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(ONE, x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = objects(x6, T, F, F)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x5(x10)\n    return O"], [0.7825046979697893, "def solve_4fb4dc53(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = objects(I, T, F, T)\n    x5 = totuple(x4)\n    x6 = apply(color, x5)\n    x7 = lbind(sfilter, x6)\n    x8 = lbind(matcher, identity)\n    x9 = chain(size, x7, x8)\n    x10 = valmax(x3, x9)\n    x11 = matcher(x9, x10)\n    x12 = sfilter(x3, x11)\n    x13 = lbind(colorcount, I)\n    x14 = argmin(x12, x13)\n    x15 = ofcolor(I, x14)\n    x16 = recolor(x14, x15)\n    x17 = apply(initset, x16)\n    x18 = remove(x16, x1)\n    x19 = lbind(argmin, x17)\n    x20 = lbind(rbind, manhattan)\n    x21 = compose(x19, x20)\n    x22 = fork(combine, identity, x21)\n    x23 = apply(x22, x18)\n    x24 = matcher(first, x14)\n    x25 = rbind(sfilter, x24)\n    x26 = chain(invert, ulcorner, x25)\n    x27 = fork(shift, identity, x26)\n    x28 = mapply(x27, x23)\n    x29 = normalize(x28)\n    x30 = shape(x29)\n    x31 = canvas(ZERO, x30)\n    O = paint(x31, x29)\n    return O"], [0.7825046979697893, "def solve_a7207c65(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = objects(I, T, F, T)\n    x5 = totuple(x4)\n    x6 = apply(color, x5)\n    x7 = lbind(sfilter, x6)\n    x8 = lbind(matcher, identity)\n    x9 = chain(size, x7, x8)\n    x10 = valmax(x3, x9)\n    x11 = matcher(x9, x10)\n    x12 = sfilter(x3, x11)\n    x13 = lbind(colorcount, I)\n    x14 = argmin(x12, x13)\n    x15 = ofcolor(I, x14)\n    x16 = recolor(x14, x15)\n    x17 = apply(initset, x16)\n    x18 = remove(x16, x1)\n    x19 = lbind(argmin, x17)\n    x20 = lbind(rbind, manhattan)\n    x21 = compose(x19, x20)\n    x22 = fork(combine, identity, x21)\n    x23 = apply(x22, x18)\n    x24 = matcher(first, x14)\n    x25 = rbind(sfilter, x24)\n    x26 = chain(invert, ulcorner, x25)\n    x27 = fork(shift, identity, x26)\n    x28 = mapply(x27, x23)\n    x29 = normalize(x28)\n    x30 = shape(x29)\n    x31 = canvas(ZERO, x30)\n    O = paint(x31, x29)\n    return O"], [0.785268283002862, "def solve_6548c1cf(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = replace(x11, ONE, TWO)\n    return O"], [0.7915392052312495, "def solve_75ab1707(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_0cfcdfc1(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_7ecf000d(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_89e8ae4e(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_bf88c42d(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_89abf998(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_7906d4c3(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_d86facef(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_d9c45414(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_2849a157(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_8c0646b3(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_ab6c7f75(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_81e17c6d(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_3114fbfb(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_52ba8f2a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_85904b3a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_f8aab032(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_49007793(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_43b73717(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.8110438738421739, "def solve_1422fc15(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, T)\n    x4 = merge(x3)\n    x5 = astuple(FOUR, FOUR)\n    x6 = canvas(ZERO, x5)\n    x7 = paint(x6, x4)\n    O = rot90(x7)\n    return O"], [0.8394760348583878, "def solve_6eab0599(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, SIX)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, ONE, SEVEN)\n    x5 = canvas(x4, THREE_BY_THREE)\n    x6 = branch(x1, TWO, ZERO)\n    x7 = connect(ORIGIN, DOWN)\n    x8 = connect(ORIGIN, ZERO_BY_TWO)\n    x9 = combine(x7, x8)\n    O = fill(x5, TWO, x9)\n    return O"], [0.8400146354354882, "def solve_d4420644(I):\n    x1 = palette(I)\n    x2 = contained(ONE, x1)\n    x3 = contained(TWO, x1)\n    x4 = branch(x2, UNITY, TWO_BY_TWO)\n    x5 = branch(x3, RIGHT, x4)\n    x6 = fork(combine, vfrontier, hfrontier)\n    x7 = x6(x5)\n    x8 = canvas(ZERO, THREE_BY_THREE)\n    O = fill(x8, EIGHT, x7)\n    return O"], [0.9001514323097631, "def solve_7b32882e(I):\n    x1 = palette(I)\n    x2 = contained(ONE, x1)\n    x3 = contained(TWO, x1)\n    x4 = branch(x2, UNITY, TWO_BY_TWO)\n    x5 = branch(x3, RIGHT, x4)\n    x6 = fork(combine, vfrontier, hfrontier)\n    x7 = x6(x5)\n    x8 = canvas(ZERO, THREE_BY_THREE)\n    O = fill(x8, FIVE, x7)\n    return O"], [0.9081403808721191, "def solve_de92c2ea(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_5bdc5e08(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_5fa5bfea(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_126bd616(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_39069d30(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9182807290875006, "def solve_1d6999d9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_58b998dc(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_cae86563(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, F, F, T)\n    x6 = rbind(colorcount, ONE)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.9182807290875006, "def solve_be1b59b4(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.9182807290875006, "def solve_3785e926(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_5d78ca1c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_57eb1844(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_294ee897(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_701ae9e7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, T, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.9182807290875006, "def solve_3bc91ce3(I):\n    x1 = frontiers(I)\n    x2 = mfilter(x1, vline)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, F, T)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.9182807290875006, "def solve_90008deb(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 =color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.9182807290875006, "def solve_30ef08e8(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_f1047c04(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_7e611380(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_1f263e3e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_5d96ebe9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_7d082c2b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_4229a6e9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_8054f488(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_273ed211(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_0870f33a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_44535b27(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = color(x3)\n    O = canvas(x4, TWO_BY_TWO)\n    return O"], [0.9182807290875006, "def solve_5c19df38(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_81aa2a4e(I):\n    x1 = objects(I, T, F, T)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = mostcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = extract(x1, x5)\n    O = subgrid(x6, I)\n    return O"], [0.9182807290875006, "def solve_4ecaa663(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = mostcolor(x2)\n    x4 = normalize(x2)\n    x5 = mostcolor(I)\n    x6 = shape(x2)\n    x7 = canvas(x5, x6)\n    O = fill(x7, x3, x4)\n    return O"], [0.9183491285403049, "def solve_1360f15b(I):\n    x1 = vmirror(I)\n    x2 = fgpartition(x1)\n    x3 = order(x2, size)\n    x4 = last(x3)\n    x5 = remove(x4, x3)\n    x6 = compose(toindices, normalize)\n    x7 = rbind(upscale, TWO)\n    x8 = chain(toindices, x7, normalize)\n    x9 = x6(x4)\n    x10 = rbind(intersection, x9)\n    x11 = chain(size, x10, x8)\n    x12 = argmax(x5, x11)\n    x13 = subgrid(x12, x1)\n    O = vmirror(x13)\n    return O"], [0.9183491285403049, "def solve_1fd87429(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.9183491285403049, "def solve_9ada3015(I):\n    x1 = vmirror(I)\n    x2 = fgpartition(x1)\n    x3 = order(x2, size)\n    x4 = last(x3)\n    x5 = remove(x4, x3)\n    x6 = compose(toindices, normalize)\n    x7 = rbind(upscale, TWO)\n    x8 = chain(toindices, x7, normalize)\n    x9 = x6(x4)\n    x10 = rbind(intersection, x9)\n    x11 = chain(size, x10, x8)\n    x12 = argmax(x5, x11)\n    x13 = subgrid(x12, x1)\n    O = vmirror(x13)\n    return O"], [0.9185740049506481, "def solve_ff6934ef(I):\n    x1 = palette(I)\n    x2 = remove(TWO, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, T, F, T)\n    x9 = colorfilter(x8, TWO)\n    x10 = size(x9)\n    x11 = double(x10)\n    x12 = interval(ZERO, x11, TWO)\n    x13 = apply(tojvec, x12)\n    x14 = astuple(ONE, NINE)\n    x15 = canvas(x4, x14)\n    x16 = fill(x15, ONE, x13)\n    x17 = hsplit(x16, THREE)\n    O = merge(x17)\n    return O"], [0.95, "def solve_02fda799(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = branch(x2, ONE, SEVEN)\n    O = canvas(x3, UNITY)\n    return O"], [0.95, "def solve_76d422e7(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [1.0, "def solve_671fd68f(I):\n    x1 = ofcolor(I, EIGHT)\n    x2 = switch(I, THREE, FOUR)\n    x3 = rbind(greater, ONE)\n    x4 = compose(x3, numcolors)\n    x5 = sfilter(x1, x4)\n    x6 = remove(x5, x1)\n    x7 = lbind(colorcount, I)\n    x8 = argmax(x6, x7)\n    x9 = remove(x8, x6)\n    x10 = rbind(contained, x9)\n    x11 = compose(x10, first)\n    x12 = rbind(sfilter, x11)\n    x13 = lbind(rbind, subtract)\n    x14 = lbind(occurrences, I)\n    x15 = lbind(lbind, shift)\n    x16 = compose(x13, ulcorner)\n    x17 = chain(x16, x12, normalize)\n    x18 = chain(x14, x12, normalize)\n    x19 = fork(apply, x17, x18)\n    x20 = compose(x15, normalize)\n    x21 = fork(mapply, x20, x19)\n    x22 = astuple(cmirror, dmirror)\n    x23 = astuple(hmirror, vmirror)\n    x24 = combine(x22, x23)\n    x25 = product(x24, x24)\n    x26 = fork(compose, first, last)\n    x27 = apply(x26, x25)\n    x28 = totuple(x27)\n    x29 = combine(x24, x28)\n    x30 = lbind(rapply, x29)\n    x31 = mapply(x30, x5)\n    x32 = mapply(x21, x31)\n    x33 = paint(I, x32)\n    x34 = merge(x51)\n    O = cover(x33, x34)\n    return O"], [1.0, "def solve_918926cb(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = rbind(colorcount, ZERO)\n    x3 = chain(x2, double, dmirror)\n    x4 = x3(I)\n    x5 = x1(x4)\n    x6 = objects(x5, T, F, T)\n    x7 = argmax(x6, x5)\n    x8 = apply(color, x7)\n    x9 = fgpartition(x8)\n    x10 = insert(x9, x8)\n    x11 = width(x10)\n    x12 = astuple(x11, x5)\n    x13 = repeat(x12, x11)\n    x14 = combine(x13, x7)\n    x15 = merge(x14)\n    x16 = color(x15)\n    x17 = toindices(x15)\n    x18 = apply(24, x17)\n    x19 = lbind(shift, x15)\n    x20 = mapply(x19, x18)\n    x21 = paint(x5, x20)\n    O = x3(x21)\n    return O"], [1.0, "def solve_efb21fa5(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_b9957d2d(I):\n    x1 = SIX(I, TWO)\n    x2 = vmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = fork(add, first, last)\n    x8 = x7(x2)\n    x9 = toivec(x8)\n    x10 = lbind(shift, x6)\n    x11 = rbind(compose, initset)\n    x12 = chain(x11, x10, last)\n    x13 = lbind(mapply, x12)\n    x14 = rbind(ofcolor, x6)\n    x15 = compose(x13, x14)\n    x16 = fork(paint, identity, x15)\n    x17 = apply(x16, x5)\n    x18 = fork(connect, first, last)\n    x19 = mapply(x18, x17)\n    O = fill(x19, ZERO, x19)\n    return O"], [1.0, "def solve_32fe1c27(I):\n    x1 = fgpartition(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = extract(x1, x3)\n    x5 = normalize(x4)\n    x6 = toindices(x5)\n    x7 = compose(toindices, normalize)\n    x8 = matcher(x7, x6)\n    x9 = mfilter(x1, x8)\n    x10 = fill(I, x4, x9)\n    x11 = replace(x10, ZERO, EIGHT)\n    x12 = fill(x11, TWO, x6)\n    x13 = merge(x12)\n    x14 = dmirror(x13)\n    x15 = fill(x12, ONE, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = rbind(adjacent, x16)\n    x18 = lbind( sfilter, x17)\n    x19 = chain(merge, x18, color)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x2)\n    O = paint(x5, x21)\n    return O"], [1.0, "def solve_25c29c37(I):\n    x1 = width(I)\n    x2 = astuple(ONE, x1)\n    x3 = astuple(TWO, x1)\n    x4 = canvas(THREE, x3)\n    x5 = tojvec(x1)\n    x6 = height(I)\n    x7 = crop(I, x5, x6)\n    x8 = frontiers(x7)\n    x9 = sfilter(x8, hline)\n    x10 = size(x9)\n    x11 = increment(x10)\n    x12 = width(I)\n    x13 = subtract(x12, x11)\n    x14 = increment(x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = lbind(astuple, x16)\n    x18 = lbind(DOWNscale, I)\n    x19 = compose(x17, x18)\n    x20 = decrement(x1)\n    x21 = lbind(multiply, x20)\n    x22 = toivec(x21)\n    x23 = tojvec(x5)\n    x24 = decrement(x23)\n    x25 = lbind(multiply, x24)\n    x26 = add(x22, x25)\n    x27 = vmirror(x6)\n    x28 = vmirror(x26)\n    x29 = compose(x27, x28)\n    x30 = argmin(x29, x27)\n    x31 = ofcolor(x30, EIGHT)\n    x32 = ofcolor(x30, TWO)\n    x33 = combine(x31, x32)\n    x34 = fill(x40, EIGHT, x33)\n    x35 = fill(x34, TWO, x29)\n    O = fill(x35, ONE, x33)\n    return O"], [1.0, "def solve_780d8233(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = merge(x1)\n    x5 = fill(I, NEG_ONE, x4)\n    x6 = shape(I)\n    x7 = canvas(NEG_ONE, x6)\n    x8 = hconcat(x5, x7)\n    x9 = objects(x8, F, F, T)\n    x10 = rbind(other, x3)\n    x11 = compose(x10, palette)\n    x12 = fork(astuple, x11, ulcorner)\n    x13 = apply(x12, x9)\n    x14 = merge(x9)\n    x15 = fill(I, x3, x14)\n    x16 = paint(x15, x13)\n    O = compress(x16)\n    return O"], [1.0, "def solve_4fe3ebd6(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_c4628a92(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_e9d98489(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_86239c66(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_44ed660a(I):\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = ONE(x3)\n    x5 = RIGHT(x4)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = leastcolor(x5)\n    x8 = rbind(shoot, x7)\n    x9 = mapply(x8, x6)\n    x10 = combine(x6, x9)\n    O = fill(I, x7, x10)\n    return O"], [1.0, "def solve_c0bb08a9(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_9be52087(I):\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = fart(x5)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = shoot(x7, UP_RIGHT)\n    x10 = combine(x8, x9)\n    x11 = combine(x8, x9)\n    x12 = paint(x3, x11)\n    O = x2(x12)\n    return O"], [1.0, "def solve_17614427(I):\n    x1 = palette(I)\n    x2 = other(x1, ZERO)\n    x3 = ofcolor(I, x2)\n    x4 = asobject(I)\n    x5 = vperiod(x4)\n    x6 = height(I)\n    x7 = halve(x6)\n    x8 = add(x6, x7)\n    x9 = width(I)\n    x10 = astuple(x8, x9)\n    x11 = canvas(ZERO, x10)\n    x12 = increment(x8)\n    x13 = interval(ZERO, x12, x5)\n    x14 = lbind(shift, x3)\n    x15 = apply(toivec, x13)\n    x16 = mapply(x14, x15)\n    O = fill(x11, TWO, x16)\n    return O"], [1.0, "def solve_3d70682b(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_0d017063(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [1.0, "def solve_f7b74577(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_18928639(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_675129ff(I):\n    x1 = lbind(other, I)\n    x2 = compose(x1, palette)\n    x3 = fork(recolor, x2, identity)\n    x4 = mapply(x3, I)\n    x5 = paint(I, x4)\n    O = objects(x5, T, F, T)\n    return O"], [1.0, "def solve_01b5ea66(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = power(double, TWO)\n    x4 = shape(x2)\n    x5 = interval(x4, FIVE, ONE)\n    x6 = lbind(multiply, x4)\n    x7 = apply(x6, x5)\n    x8 = lbind(interval, FIVE)\n    x9 = apply(x8, x5)\n    x10 = lbind(compose, x4)\n    x11 = apply(x10, x9)\n    x12 = lbind(lbind, shift)\n    x13 = dedupe(x7)\n    x14 = mapply(x12, x13)\n    O = paint(I, x14)\n    return O"], [1.0, "def solve_9a0dbf7a(I):\n    x1 = shape(I)\n    x2 = subgrid(x1, I)\n    x3 = mostcolor(I)\n    O = replace(x2, x3, ZERO)\n    return O"], [1.0, "def solve_80ea49cc(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = remove(x3, x2)\n    x5 = lbind(colorfilter, x4)\n    x6 = lbind(rbind, greater)\n    x7 = compose(x5, x6)\n    x8 = rbind(sfilter, x3)\n    x9 = compose(x8, toindices)\n    x10 = lbind(rbind, difference)\n    x11 = compose(x10, toindices)\n    x12 = rbind(compose, initset)\n    x13 = lbind(rbind, manhattan)\n    x14 = compose(x12, x13)\n    x15 = fork(sfilter, x11, x14)\n    x16 = compose(maximum, x15)\n    x17 = compose(minimum, x15)\n    x18 = vsplit(I, TWO)\n    x19 = cmirror(x18)\n    x20 = mostcolor(x19)\n    x21 = initset(x16)\n    x22 = rbind(rapply, x21)\n    x23 = compose(x22, initset)\n    x24 = chain(first, x17, x23)\n    x25 = compose(x20, x24)\n    x26 = fork(paint, x25, x20)\n    x27 = mapply(x26, x4)\n    x28 = merge(x27)\n    O = x27(x28)\n    return O"], [1.0, "def solve_22feee59(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = compose(leftmost, first)\n    x13 = compose(leftmost, last)\n    x14 = fork(equality, x12, x13)\n    x15 = compose(uppermost, first)\n    x16 = compose(uppermost, last)\n    x17 = fork(equality, x15, x16)\n    x18 = fork(either, x14, x17)\n    x19 = sfilter(x11, x18)\n    x20 = compose(color, first)\n    x21 = compose(center, first)\n    x22 = compose(center, last)\n    x23 = fork(connect, x21, x22)\n    x24 = fork(recolor, x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = matcher(last, ZERO)\n    x28 = decrement(x26)\n    x29 = matcher(last, x28)\n    x30 = fork(either, x27, x29)\n    x31 = compose(flip, x30)\n    x32 = sfilter(x15, x31)\n    x33 = paint(I, x32)\n    x34 = size(x1)\n    x35 = positive(x34)\n    x36 = branch(x35, x22, ZERO)\n    O = canvas(x36, UNITY)\n    return O"], [1.0, "def solve_6151131a(I):\n    x1 = dmirror(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [1.0, "def solve_bd8e1004(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = chain(cmirror, x7, x8)\n    x10 = x9(x8)\n    x11 = dedupe(x10)\n    x12 = dmirror(x11)\n    x13 = dedupe(x12)\n    x14 = dmirror(x13)\n    x15 = mostcolor(x14)\n    x16 = objects(x14, T, T, F)\n    x17 = colorfilter(x16, x15)\n    x18 = compose(normalize, toindices)\n    x19 = box(x18)\n    x20 = difference(x16, x19)\n    x21 = rbind(subgrid, x20)\n    x22 = chain(x21, initset, palette)\n    x23 = rbind(subgrid, x5)\n    x24 = chain(x23, x22, asobject)\n    x25 = lbind(subtract, x15)\n    x26 = compose(first, x25)\n    x27 = chain(x26, x24, x26)\n    x28 = fork(shift, x27, x23)\n    x29 = fork(connect, x28, urcorner)\n    x30 = fork(combine, x28, x29)\n    x31 = compose(x30, x27)\n    x32 = fork(shift, x27, x31)\n    x33 = fork(combine, x32, x31)\n    x34 = mapply(x33, x14)\n    x35 = fill(x5, x15, x34)\n    x36 = replace(x35, x15, x5)\n    O = downscale(x36, THREE)\n    return O"], [1.0, "def solve_3e4c3006(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = totuple(x3)\n    x5 = apply(color, x4)\n    x6 = lbind(sfilter, x5)\n    x7 = lbind(matcher, identity)\n    x8 = chain(size, x6, x7)\n    x9 = argmax(x6, x8)\n    x10 = repeat(x9, ONE)\n    O = paint(I, x10)\n    return O"], [1.0, "def solve_1159b49c(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_fead7be2(I):\n    x1 = palette(I)\n    x2 = remove(FIVE, x1)\n    x3 = first(x2)\n    x4 = ofcolor(I, x3)\n    x5 = ZERO(x4)\n    x6 = ofcolor(I, FIVE)\n    x7 = center(x6)\n    x8 = vfrontier(x7)\n    x9 = insert(x13, x8)\n    O = fill(I, ZERO, x9)\n    return O"], [1.0, "def solve_82cda086(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_c6ffa7d5(I):\n    x1 = dmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_424fe7cf(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_40139bdc(I):\n    x1 = lbind(fork, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = lbind(compose, flip)\n    x5 = lbind(matcher, first)\n    x6 = compose(x4, x5)\n    x7 = lbind(compose, flip)\n    x8 = compose(x7, x6)\n    x9 = lbind(fork, both)\n    x10 = fork(x9, x3, x8)\n    x11 = lbind(sfilter, x7)\n    x12 = chain(x11, size, x10)\n    x13 = argmax(x2, x12)\n    x14 = compress(x13)\n    x15 = flip(x14)\n    x16 = vmirror(x15)\n    x17 = asobject(x16)\n    x18 = height(x17)\n    x19 = increment(x18)\n    x20 = lbind(subtract, x19)\n    x21 = chain(toivec, x20, double)\n    x22 = fork(shift, identity, x21)\n    x23 = mapply(x22, x17)\n    O = paint(x16, x23)\n    return O"], [1.0, "def solve_3b902004(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_0d6a681a(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot90(I)\n    x4 = upscale(x3, FOUR)\n    x5 = rot270(I)\n    x6 = papply(matcher, first, x2)\n    x7 = sfilter(x4, x6)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [1.0, "def solve_8411cf1c(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    O = asobject(x1)\n    return O"], [1.0, "def solve_f37af8f1(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_5aec8409(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = matcher(x13, ONE)\n    x15 = fork(both, x7, x14)\n    x16 = extract(x3, x15)\n    x17 = x16(x6)\n    x18 = height(x67)\n    x19 = subtract(x18, TWO)\n    x20 = height(x6)\n    x21 = subtract(x20, TWO)\n    x22 = width(x6)\n    x23 = subtract(x22, DOWN)\n    x24 = width(x6)\n    x25 = subtract(x23, x24)\n    x26 = astuple(x19, x25)\n    x27 = canvas(x1, x26)\n    x28 = astuple(x23, x27)\n    x29 = canvas(x1, x28)\n    x30 = rbind(multiply, x29)\n    x31 = apply(x30, x3)\n    x32 = rbind(shift, x36)\n    x33 = mapply(x32, x31)\n    O = paint(x27, x33)\n    return O"], [1.0, "def solve_2d496010(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = width(I)\n    x5 = astuple(TEN, FIVE)\n    x6 = canvas(x3, x5)\n    x7 = interval(ONE, SIX, ONE)\n    x8 = invert(TEN)\n    x9 = interval(x8, TEN, ONE)\n    x10 = product(x7, x9)\n    x11 = rbind(multiply, TWO)\n    x12 = apply(x11, x10)\n    x13 = apply(tojvec, x12)\n    x14 = prapply(shift, x4, x13)\n    x15 = lbind(shift, x4)\n    x16 = mapply(x15, x14)\n    O = fill(x6, x3, x16)\n    return O"], [1.0, "def solve_120669cc(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = rbind(repeat, x4)\n    x6 = lbind(upscale, I)\n    x7 = compose(x5, x6)\n    x8 = order(x2, leftmost)\n    x9 = apply(leftmost, x8)\n    x10 = last(x8)\n    x11 = matcher(first, x10)\n    x12 = compose(flip, x11)\n    x13 = fork(both, x3, x12)\n    x14 = sfilter(x9, x13)\n    x15 = compose(color, first)\n    x16 = fork(recolor, x15, x14)\n    x17 = mapply(x16, x14)\n    O = paint(I, x17)\n    return O"], [1.0, "def solve_2e820091(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = fork(equality, toindices, box)\n    x7 = sfilter(x2, x6)\n    x8 = fork(multiply, height, width)\n    x9 = argmin(x7, x8)\n    x10 = argmax(x7, x8)\n    x11 = center(x9)\n    x12 = center(x10)\n    x13 = subtract(x11, x12)\n    x14 = add(x13, x11)\n    x15 = rot90(x14)\n    x16 = recolor(x1, x15)\n    x17 = shift(x16, UNITY)\n    x18 = paint(I, x17)\n    x19 = objects(x18, T, F, T)\n    x20 = apply(ulcorner, x19)\n    x21 = rbind(subgrid, x18)\n    x22 = apply(x21, x20)\n    x23 = pair(x15, x22)\n    x24 = mapply(palette, x23)\n    O = sfilter(x24, x24)\n    return O"], [1.0, "def solve_1d4ab164(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_dde66ef1(I):\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [1.0, "def solve_b5b44d30(I):\n    x1 = initset(ORIGIN)\n    x2 = box(x1)\n    x3 = recolor(ZERO, x1)\n    x4 = double(TEN)\n    x5 = multiply(x4, THREE)\n    x6 = interval(ZERO, x5, ONE)\n    x7 = lbind(multiply, x5)\n    x8 = apply(x7, x6)\n    x9 = lbind(shift, x2)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [1.0, "def solve_86c40380(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_9a905fbb(I):\n    x1 = objects(I, T, F, T)\n    x2 = ofcolor(I, ZERO)\n    x3 = sizefilter(x1, ONE)\n    x4 = rbind(adjacent, x2)\n    x5 = extract(x3, x4)\n    x6 = recolor(ZERO, x5)\n    O = paint(I, x6)\n    return O"], [1.0, "def solve_96c960ba(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x833 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, hmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [1.0, "def solve_785e38e6(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_1a144b46(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_8fd4361b(I):\n    x1 = trim(I)\n    x2 = objects(x1, T, F, F)\n    x3 = vperiod(x2)\n    x4 = shift(x2, x3)\n    x5 = lbind(shift, x4)\n    x6 = interval(ZERO, NINE, ONE)\n    x7 = apply(x5, x6)\n    x8 = mapply(x7, x3)\n    O = paint(x1, x8)\n    return O"], [1.0, "def solve_5d2b2e0c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_504071c2(I):\n    x1 = vmirror(I)\n    x2 = fgpartition(x1)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = compose(double, halve)\n    x6 = fork(equality, identity, x5)\n    x7 = compose(x6, last)\n    x8 = sfilter(x4, x7)\n    x9 = fill(x1, FIVE, x8)\n    O = x9(x4)\n    return O"], [1.0, "def solve_4d7fa4ef(I):\n    x1 = dmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_16bc3ce5(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = palette(I)\n    x4 = lbind(shift, I)\n    x5 = compose(x4, frontiers)\n    x6 = mfilter(x3, x5)\n    x7 = palette(I)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = shape(I)\n    x11 = canvas(x9, x10)\n    x12 = paint(x11, I)\n    x13 = asobject(x1)\n    x14 = difference(x13, x2)\n    O = paint(x12, x14)\n    return O"], [1.0, "def solve_d1d188b0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_228677e4(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [1.0, "def solve_cba0e309(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, first)\n    x31 = fork(recolor, x30, last)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_d5dd8f8e(I):\n    x1 = ofcolor(I, TWO)\n    x2 = vline(x1)\n    x3 = branch(x2, dmirror, identity)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = width(x4)\n    x7 = interval(x5, x6, TWO)\n    x8 = apply(tojvec, x7)\n    x9 = portrait(x8)\n    x10 = branch(x9, identity, last)\n    x11 = x10(x4)\n    x12 = x11(x4)\n    x13 = ofcolor(x12, FIVE)\n    x14 = ofcolor(x12, EIGHT)\n    x15 = fill(x13, ZERO, x13)\n    x16 = fill(x15, FOUR, x14)\n    x17 = fill(x16, ONE, x15)\n    x18 = rot90(x17)\n    x19 = ofcolor(x18, FIVE)\n    x20 = shift(x19, UNITY)\n    O = fill(x20, EIGHT, x19)\n    return O"], [1.0, "def solve_7bcf3180(I):\n    x1 = asindices(I)\n    x2 = objects(I, T, F, T)\n    x3 = first(x2)\n    x4 = rbind(subgrid, I)\n    x5 = fork(equality, identity, rot90)\n    x6 = compose(x5, x4)\n    x7 = extract(x1, x6)\n    x8 = center(x7)\n    x9 = subgrid(x3, I)\n    x10 = hmirror(x9)\n    x11 = objects(x10, F, T, T)\n    x12 = first(x11)\n    x13 = objects(x10, T, T, T)\n    x14 = rbind(subgrid, x10)\n    x15 = compose(x5, x14)\n    x16 = extract(x13, x15)\n    x17 = center(x16)\n    x18 = subtract(x8, x17)\n    x19 = shift(x12, x18)\n    x20 = paint(I, x19)\n    x21 = objects(x20, F, T, T)\n    x22 = first(x21)\n    x23 = subgrid(x22, x20)\n    x24 = vmirror(x23)\n    x25 = objects(x24, F, T, T)\n    x26 = first(x25)\n    x27 = objects(x24, T, T, T)\n    x28 = color(x7)\n    x29 = matcher(color, x28)\n    x30 = extract(x27, x29)\n    x31 = center(x30)\n    x32 = subtract(x8, x31)\n    x33 = shift(x26, x32)\n    O = paint(x20, x33)\n    return O"], [1.0, "def solve_675edd0d(I):\n    x1 = palette(I)\n    x2 = other(x1, ZERO)\n    x3 = shape(I)\n    x4 = multiply(x3, x3)\n    x5 = canvas(ZERO, x4)\n    x6 = ofcolor(I, x2)\n    x7 = lbind(shift, x6)\n    x8 = shape(I)\n    x9 = rbind(multiply, x8)\n    x10 = apply(x9, x6)\n    x11 = mapply(x7, x10)\n    O = fill(x5, x2, x11)\n    return O"], [1.0, "def solve_e4b96337(I):\n    x1 = Fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [1.0, "def solve_6be5c6ba(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_17b810d6(I):\n    x1 = objects(I, T, F, T)\n    x2 = apply(toindices, x1)\n    x3 = lbind(matcher, contained)\n    x4 = compose(x3, last)\n    x5 = extract(x2, x4)\n    x6 = lbind(shift, x5)\n    x7 = compose(x6, ulcorner)\n    x8 = rbind(colorcount, TWO)\n    x9 = argmax(x1, x8)\n    x10 = rbind(contained, x9)\n    x11 = compose(x10, first)\n    x12 = sfilter(x6, x11)\n    x13 = merge(x12)\n    x14 = rbind(shoot, x13)\n    x15 = compose(x14, ulcorner)\n    x16 = fork(recolor, x15, outbox)\n    x17 = mapply(x16, x4)\n    O = paint(I, x17)\n    return O"], [1.0, "def solve_9a8312f7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_b838424d(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_f5cb02df(I):\n    x1 = f25fb287\n    O = solveconcat(I, x1)\n    return O"], [1.0, "def solve_47358446(I):\n    x1 = rot180(I)\n    x2 = matcher(size, ONE)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, maximum, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_55446d1f(I):\n    x1 = objects(I, T, F, T)\n    x2 = vmirror(x1)\n    O = subgrid(x2, I)\n    return O"], [1.0, "def solve_87f6df0d(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_de673917(I):\n    x1 = ONEORIGIN(I)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(ONE, x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = objects(x6, T, F, F)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x5(x10)\n    return O"], [1.0, "def solve_46ea8a54(I):\n    x1 = paint(I, x2)\n    x2 = vmirror(x1)\n    x3 = equality(x2, I)\n    x4 = branch(x3, x2, x2)\n    O = canvas(x4, ONE)\n    return O"], [1.0, "def solve_be4d29ee(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x7, x16)\n    x20 = ofcolor(x8, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, THREE, x21)\n    return O"], [1.0, "def solve_19348811(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, identity, dmirror)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = lrcorner(x22)\n    x24 = shape(x23)\n    x25 = increment(x24)\n    x26 = lbind(multiply, x25)\n    x27 = shift(x3, x26)\n    x28 = apply(x27, x22)\n    x29 = lbind(shift, x15)\n    x30 = mapply(x29, x28)\n    O = paint(x6, x30)\n    return O"], [1.0, "def solve_370f9199(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_bd47713d(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, x30)\n    x33 = compose(x32, x31)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [1.0, "def solve_efddeaf4(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_7de9cc51(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    O = apply(initset, x3)\n    x1 = toindices(x3)\n    x2 = asindices(I)\n    x3 = corners(x2)\n    x4 = combine(x1, x2)\n    x5 = fill(I, NEG_ONE, x4)\n    x6 = fgpartition(x5)\n    x7 = merge(x6)\n    x8 = shift(x7, DOWN)\n    x9 = fill(x5, TWO, x8)\n    x10 = shift(x9, UP)\n    x11 = fill(x9, SIX, x10)\n    x12 = shift(x11, RIGHT)\n    x13 = fill(x9, SEVEN, x12)\n    x14 = shift(x11, LEFT)\n    x15 = fill(x13, EIGHT, x14)\n    x16 = shift(x11, UP)\n    x17 = fill(x15, SIX, x16)\n    x18 = shift(x11, DOWN)\n    x19 = fill(x17, EIGHT, x18)\n    x20 = shift(x11, RIGHT)\n    x21 = fill(x19, SEVEN, x20)\n    x22 = shift(x11, LEFT)\n    x23 = fill(x21, EIGHT, x22)\n    x24 = shift(x11, UP)\n    x25 = fill(x23, UNITY, x24)\n    x26 = shift(x11, DOWN)\n    x27 = fill(x25, SIX, x26)\n    x28 = shift(x11, LEFT)\n    x29 = fill(x27, EIGHT, x28)\n    O = paint(x29, x3)\n    return O"], [1.0, "def solve_3b2c71d9(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_580effe7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_9eb76302(I):\n    O = matcher(identity, ZERO)\n    return O"], [1.0, "def solve_67fe85de(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_28bcb307(I):\n    x1 = objects(I, T, F, T)\n    x2 = lbind(sizefilter, x1)\n    x3 = compose(merge, x2)\n    x4 = x3(I)\n    x5 = halve(x4)\n    x6 = x3(I)\n    x7 = hconcat(x5, x6)\n    x8 = vconcat(x7, x7)\n    x9 = objects(x8, T, F, T)\n    x10 = rbind(shoot, UNITY)\n    x11 = compose(x10, center)\n    x12 = fork(recolor, color, x11)\n    x13 = mapply(x12, x9)\n    x14 = paint(x8, x13)\n    O = hmirror(x14)\n    return O"], [1.0, "def solve_5fe8cd60(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_820a067a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = subtract(Nivec, x14)\n    x16 = lbind(shift, x10)\n    x17 = shift(x15, x16)\n    x18 = fork(combine, vfrontier, hfrontier)\n    x19 = mapply(x18, x17)\n    O = paint(I, x19)\n    return O"], [1.0, "def solve_9f1233bf(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_97b654f1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_cc9add26(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_25723d44(I):\n    x1 = double(TEN)\n    x2 = interval(ZERO, x1, ONE)\n    x3 = apply(double, x2)\n    x4 = apply(increment, x3)\n    x5 = apply(tojvec, x4)\n    x6 = prapply(shift, x5, x4)\n    x7 = merge(x6)\n    O = fill(I, FOUR, x7)\n    return O"], [1.0, "def solve_e61ef8f3(I):\n    x1 = shoot(ORIGIN, UNITY)\n    x2 = shoot(x2, DOWN_LEFT)\n    x3 = fork(combine, hfrontier, vfrontier)\n    x4 = mapply(x3, x1)\n    x5 = fill(I, ZERO, x4)\n    O = replace(x5, ONE, TWO)\n    return O"], [1.0, "def solve_4e0bec6c(I):\n    x1 = ofcolor(I, TWO)\n    x2 = vline(x1)\n    O = branch(x2, dmirror, identity)\n    return O"], [1.0, "def solve_a0134bd8(I):\n    x1 = switch(I, EIGHT, TWO)\n    x2 = switch(x1, TWO, THREE)\n    x3 = switch(x2, EIGHT, ONE)\n    x4 = neighbors(ORIGIN)\n    x5 = mapply(neighbors, x4)\n    x6 = lbind(shift, x3)\n    x7 = apply(x6, x5)\n    x8 = merge(x7)\n    O = paint(I, x8)\n    return O"], [1.0, "def solve_92252c34(I):\n    x1 =9284448403\n    x2 = hmirror(I)\n    O = vconcat(x1, x2)\n    return O"], [1.0, "def solve_07a42553(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, last)\n    O = x4(I)\n    return O"], [1.0, "def solve_b4ef1643(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = ofcolor(I, x1)\n    x4 = backdrop(x3)\n    x5 = toobject(x4, I)\n    x6 = matcher(first, x1)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x2, x7)\n    x9 = totuple(x8)\n    x10 = apply(color, x9)\n    x11 = leastcommon(x10)\n    x12 = ofcolor(I, x1)\n    x13 = initset(x12)\n    x14 = position(x13, x4)\n    x15 = width(I)\n    x16 = ulcorner(x12)\n    x17 = lrcorner(x12)\n    x18 = shape(I)\n    x19 = maximum(x18)\n    x20 = interval(ZERO, x19, ONE)\n    x21 = lbind(multiply, x5)\n    x22 = apply(x21, x20)\n    x23 = pair(x26, x22)\n    x24 = mapply(box, x23)\n    O = fill(I, x3, x24)\n    return O"], [1.0, "def solve_e2c0046c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_3f068a11(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_ed598c2d(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = argmin(x2, size)\n    x4 = shoot(x3, UP_RIGHT)\n    x5 = argmax(x2, size)\n    x6 = shoot(x5, DOWN_LEFT)\n    x7 = shoot(x4, UNITY)\n    x8 = combine(x4, x6)\n    x9 = combine(x7, x8)\n    x10 = fill(I, x1, x9)\n    x11 = replace(x10, x1, EIGHT)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = divide(x12, x13)\n    x15 = width(x11)\n    x16 = interval(ZERO, x15, ONE)\n    x17 = interval(ZERO, x13, ZERO)\n    x18 = product(x16, x17)\n    x19 = rbind(multiply, x14)\n    x20 = apply(x19, x18)\n    x21 = rbind(multiply, x14)\n    x22 = apply(x21, x15)\n    x23 = combine(x20, x22)\n    x24 = lbind(shift, x11)\n    x25 = mapply(x24, x23)\n    O = fill(x10, FOUR, x25)\n    return O"], [1.0, "def solve_5ebb7610(I):\n    x1 = initset(ORIGIN)\n    x2 = index(I, x1)\n    x3 = lrcorner(x1)\n    x4 = add(x3, UNITY)\n    x5 = initset(x4)\n    x6 = astuple(x1, x5)\n    x7 = rbind(shoot, UP)\n    x8 = add(x6, DOWN)\n    x9 = interval(ZERO, x5, ONE)\n    x10 = apply(x7, x9)\n    x11 = apply(x8, x10)\n    x12 = papply(shoot, x11, x7)\n    x13 = add(x3, UNITY)\n    x14 = initset(x13)\n    x15 = astuple(x42, x12)\n    x16 = shift(x12, x15)\n    x17 = difference(x7, x16)\n    x18 = rapply(recolor, x17)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_9b4feb6f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, W, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_24c0baa0(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_a2a79039(I):\n    x1 = ofcolor(I, TWO)\n    x2 = ofcolor(I, THREE)\n    x3 = recolor(TWO, x1)\n    x4 = ulcorner(x2)\n    x5 = ulcorner(x1)\n    x6 = subtract(x4, x5)\n    x7 = increment(x6)\n    O = move(I, x3, x7)\n    return O"], [1.0, "def solve_1922fa36(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_c7a0a6f6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_05d0a3d8(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_66fe244a(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_bef843e1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = lbind(507, x2)\n    x4 = rbind(ofcolor, x1)\n    x5 = compose(x3, x4)\n    x6 = x5(I)\n    x7 = leastcolor(x6)\n    x8 = ofcolor(I, x7)\n    x9 = lbind(greater, SEVEN)\n    x10 = compose(x9, x5)\n    x11 = sfilter(x8, x10)\n    x12 = mapply(neighbors, x11)\n    O = fill(I, x1, x12)\n    return O"], [1.0, "def solve_94f8d4be(I):\n    x1 = astuple(vsplit, hsplit)\n    x2 = rbind(rbind, TWO)\n    x3 = rbind(rapply, I)\n    x4 = initset(x2)\n    x5 = lbind(rapply, x4)\n    x6 = chain(first, x3, x5)\n    x7 = lbind(apply, numcolors)\n    x8 = compose(x7, x6)\n    x9 = matcher(x8, TWO_BY_TWO)\n    x10 = extract(x1, x9)\n    x11 = x10(I, TWO)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = palette(x12)\n    x15 = palette(x13)\n    x16 = intersection(x14, x15)\n    x17 = first(x16)\n    x18 = shape(x12)\n    x19 = canvas(x17, x18)\n    x20 = ofcolor(x12, x17)\n    x21 = ofcolor(x13, x17)\n    x22 = intersection(x20, x21)\n    O = fill(x19, TWO, x22)\n    return O"], [1.0, "def solve_c7e78cf6(I):\n    x1 = ofcolor(I, TWO)\n    x2 = shape(I)\n    x3 = multiply(x2, x2)\n    x4 = canvas(ZERO, x3)\n    x5 = rbind(multiply, x2)\n    x6 = apply(x5, x4)\n    x7 = asobject(I)\n    x8 = lbind(shift, x7)\n    x9 = mapply(x8, x6)\n    O = paint(x4, x9)\n    return O"], [1.0, "def solve_f789e6fe(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = lbind(colorcount, I)\n    x5 = argmin(x3, x4)\n    x6 = ofcolor(I, x1)\n    x7 = ofcolor(I, x5)\n    x8 = combine(x6, x7)\n    x9 = mapply(neighbors, x8)\n    x10 = difference(x9, x8)\n    x11 = toobject(x10, I)\n    x12 = leastcolor(x11)\n    x13 = ofcolor(I, x1)\n    x14 = first(x13)\n    x15 = initset(x14)\n    x16 = objects(I, T, F, F)\n    x17 = colorfilter(x16, x12)\n    x18 = lbind(adjacent, x8)\n    x19 = mfilter(x17, x18)\n    x20 = toindices(x19)\n    x21 = rbind(contained, x20)\n    x22 = compose(x21,t)\n    x23 = sfilter(x19, x22)\n    x24 = fill(I, x5, x20)\n    O = fill(x24, x1, x23)\n    return O"], [1.0, "def solve_5a5e96fe(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_7fa82c53(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_46f5ad1e(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_3e83b9ea(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(normalize, x5)\n    x7 = chain(cmirror, x6, dmirror)\n    x8 = rbind(sfilter, x6)\n    x9 = compose(x8, x7)\n    x10 = lbind(chain, x4)\n    x11 = rbind(x10, x9)\n    x12 = lbind(compose, x1)\n    x13 = chain(x11, x12, x7)\n    x14 = lbind(lbind, shift)\n    x15 = chain(x14, x13, x7)\n    x16 = fork(mapply, x15, x13)\n    x17 = fork(mapply, x16, x7)\n    x18 = x17(x1)\n    x19 = replace(I, SIX, x18)\n    O = downscale(x19, TWO)\n    return O"], [1.0, "def solve_ca699e89(I):\n    x1 = asobject(I)\n    x2 = lbind(shift, x1)\n    x3 = compose(x2, decrement)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    O = paint(I, x5)\n    return O"], [1.0, "def solve_aee26452(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [1.0, "def solve_32c4062a(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_e06f2d09(I):\n    x1 = fgpartition(I)\n    x2 = sizefilter(x1, FOUR)\n    x3 = apply(toindices, x2)\n    x4 = compose( normalize, toindices)\n    x5 = x4(x2)\n    x6 = lbind(shift, x5)\n    x7 = compose(x6, shape)\n    x8 = halve(x2)\n    x9 = rbind(multiply, x8)\n    x10 = chain(x9, halve, shape)\n    x11 = fork(equality, identity, x7)\n    x12 = sfilter(x3, x11)\n    x13 = lbind(intersection, x5)\n    x14 = compose(x13, size)\n    x15 = chain(size, x13, x14)\n    x16 = argmax(x12, x15)\n    x17 = difference(x5, x16)\n    O = fill(I, THREE, x17)\n    return O"], [1.0, "def solve_56f14ba4(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_4db4e1e0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofmass(x14)\n    x25 = difference(x23, x24)\n    x26 = objects(x25, F, F, T)\n    x27 = compose(hfrontier, center)\n    x28 = fork(recolor, color, x27)\n    x29 = mapply(x28, x26)\n    x30 = merge(x26)\n    x31 = paint(x15, x30)\n    O = paint(x31, x29)\n    return O"], [1.0, "def solve_e7328fd6(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(greater, THREE)\n    x6 = compose(x5, first)\n    x7 = sfilter(x4, x6)\n    x8 = merge(x7)\n    x9 = rot90(x8)\n    x10 = shape(x9)\n    x11 = canvas(x3, x10)\n    x12 = hconcat(x9, x11)\n    x13 = hmirror(x12)\n    O = vconcat(x12, x13)\n    return O"], [1.0, "def solve_3d6cfd6e(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_62cc0fad(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_3c6e85f7(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_5876ff10(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_b687023e(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_26435a52(I):\n    x1 = initset(ORIGIN)\n    x2 = insert(7770, x1)\n    x3 = merge(x2)\n    x4 = cover(I, x3)\n    x5 = chain(dmirror, dmirror, merge)\n    x6 = x5(x4)\n    x7 = lbind(remove, FOUR)\n    x8 = chain(x7, toindices, x5)\n    x9 = compose(x8, x6)\n    x10 = fork(3634436, x9,363)\n    x11 = compose(x5, x10)\n    x12 = ofcolor(x4, FIVE)\n    x13 = ZERO(x12)\n    x14 = ofcolor(x4, TWO)\n    x15 = ZERO(x14)\n    x16 = matcher(first, ZERO)\n    x17 = rbind(sfilter, x16)\n    x18 = lbind(compose, x17)\n    x19 = lbind(rbind, contained)\n    x20 = chain(x18, x19, last)\n    x21 = rbind(compose, x20)\n    x22 = lbind(rbind, sfilter)\n    x23 = compose(x21, x22)\n    x24 = chain(x19, x23, first)\n    x25 = rbind(compose, initset)\n    x26 = x25(x4)\n    x27 = x25(x26)\n    x28 = compose(x25, x27)\n    x29 = fork(mapply, x26, x28)\n    x30 = fork(recolor, first, x29)\n    x31 = mapply(x30, x6)\n    x32 = papply(connect, x31, x24)\n    x33 = difference(x31, x32)\n    x34 = toobject(x33, x4)\n    O = paint(x4, x34)\n    return O"], [1.0, "def solve_89c49298(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = height(x2)\n    x4 = width(x2)\n    x5 = neighbors(ORIGIN)\n    x6 = toindices(x2)\n    x7 = lbind(shift, x6)\n    x8 = height(I)\n    x9 = divide(x8, x3)\n    x10 = width(I)\n    x11 = divide(x10, x4)\n    x12 = astuple(x9, x11)\n    x13 = maximum(x12)\n    x14 = increment(x13)\n    x15 = interval(ONE, x14, ONE)\n    x16 = astuple(x3, x4)\n    x17 = lbind(multiply, x16)\n    x18 = compose(crement, x17)\n    x19 = lbind(mapply, x7)\n    x20 = rbind(apply, x15)\n    x21 = lbind(rbind, multiply)\n    x22 = compose(x21, x18)\n    x23 = chain(x19, x20, x22)\n    x24 = rbind(toobject, I)\n    x25 = compose(x7, x18)\n    x26 = chain(palette, x24, x25)\n    x27 = mostcolor(I)\n    x28 = rbind(equality, x27)\n    x29 = rbind(argmin, x28)\n    x30 = compose(x29, x26)\n    x31 = fork(recolor, x30, x23)\n    x32 = mapply(x31, x5)\n    O = paint(I, x32)\n    return O"], [1.0, "def solve_e202aed0(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_6bf045ea(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = x2(I, TWO)\n    x4 = order(x3, numcolors)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = objects(x6, F, F, T)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(first, x9)\n    x11 = compose(flip, x10)\n    x12 = rbind(sfilter, x11)\n    x13 = lbind(occurrences, x5)\n    x14 = compose(x13, x12)\n    x15 = chain(positive, size, x14)\n    x16 = sfilter(x7, x15)\n    x17 = chain(first, x13, x12)\n    x18 = compose(ulcorner, x12)\n    x19 = fork(subtract, x17, x18)\n    x20 = fork(shift, identity, x19)\n    x21 = apply(x20, x16)\n    x22 = compose(decrement, width)\n    x23 = chain(positive, decrement, x22)\n    x24 = mfilter(x21, x23)\n    O = paint(x5, x24)\n    return O"], [1.1, "def solve_28321aa3(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = asindices(I)\n    x5 = apply(first, x4)\n    x6 = difference(x5, x3)\n    x7 = ofcolor(I, x1)\n    x8 = rbind(interval, ONE)\n    x9 = lbind(rbind, contained)\n    x10 = lbind(sfilter, x6)\n    x11 = rbind(matcher, ZERO)\n    x12 = chain(size, x10, x9)\n    x13 = lbind(sfilter, x7)\n    x14 = lbind(compose, x12)\n    x15 = chain(x13, x11, x14)\n    x16 = lbind(fork, x8)\n    x17 = compose(increment, minimum)\n    x18 = lbind(lbind, astuple)\n    x19 = lbind(chain, x17)\n    x20 = rbind(x19, first)\n    x21 = chain(x20, x18, first)\n    x22 = lbind(chain, maximum)\n    x23 = rbind(x22, first)\n    x24 = chain(x23, x18, first)\n    x25 = fork(x16, x21, x24)\n    x26 = compose(x15, x25)\n    x27 = apply(toivec, x3)\n    x28 = apply(x26, x27)\n    x29 = argmax(x28, width)\n    x30 = remove(x29, x28)\n    x31 = ulcorner(x29)\n    x32 = invert(x31)\n    x33 = shift(x29, x32)\n    x34 = asindices(I)\n    x35 = center(x34)\n    x36 = invert(x35)\n    x37 = shift(x34, x36)\n    x38 = width(I)\n    x39 = asobject(I)\n    x40 = lbind(shift, x39)\n    "], [1.1, "def solve_3f143bae(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(color, TWO)\n    x9 = rbind(colorcount, x3)\n    x10 = compose(x9, palette)\n    x11 = argmin(x7, x10)\n    x12 = other(x7, x11)\n    x13 = remove(x11, x7)\n    x14 = normalize(x13)\n    x15 = last(x14)\n    x16 =495(x15)\n    x17 = color(x11)\n    x18 = remove(x16, x15)\n    x19 = repeat(x17, ONE)\n    x20 = combine(x18, x19)\n    x21 = fgpartition(x20)\n    x22 = argmax(x21, lowermost)\n    x23 = add(x22, UP)\n    x24 = initset(x23)\n    x25 = insert(x22, x24)\n    x26 = lbind(intersection, x25)\n    x27 = compose(x26, last)\n    x28 = fork(recolor, first, x27)\n    x29 = normalize(x25)\n    x30 = objects(x6, T, F, T)\n    x31 = apply(toindices, x30)\n    x32 = lbind(shift, x29)\n    x33 = mapply(x32, x31)\n    x34 = paint(x20, x33)\n    x35 = rot90(x34)\n    x36 = paint(x35, x4)\n    x37 = rot90(x36)\n    x38 = paint(x37, x4)\n    x39 = rot90(x38)\n    x40 = paint(x39, x4)\n    x41 = rot90(x40)\n    x42 = paint("], [1.1, "def solve_f01b5c3d(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = hmirror(x4)\n    x41 = lrcorner(x4)\n"], [1.1, "def solve_7a16d774(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_14e52772(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_5d426466(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = neighbors(x6)\n    x15 = increment(x4)\n    x16 = insert(x15, x14)\n    x17 = initset(x16)\n    x18 =insert(x33, x17)\n    x19 = height(x12)\n    x20 = increment(x4)\n    x21 = insert(x19, x20)\n    x22 = width(x12)\n    x23 = increment(x4)\n    x24 = interval(ZERO, x23, ONE)\n    x25 = lbind(toobject, x12)\n    x26 = increment(x22)\n    x27 = increment(x25)\n    x28 = add(x26, x27)\n    x29 = lbind(toobject, x13)\n    x30 = increment(x24)\n    x31 = increment(x25)\n    x32 = astuple(ZERO, x30)\n    x33 = astuple(ZERO, x31)\n    x34 = add(x32, x33)\n    x35 = lbind(recolor, x3)\n    x36 =decrement(x34)\n    x37 = lbind(ofcolor, x12)\n    x38 = crop(x12, x36, x37)\n    x39 = compose(x35, x38)\n    x40 = power(x39, THREE)\n    x41 = x40(x32)\n    x42 = papply(recolor, x41, x38)\n    O"], [1.1, "def solve_39f3fad4(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, FOUR)\n    x6 = compose(fdg54444(I)\n    x7 = chain(x4, x5, x6)\n    x8 = rbind(repeat, ONE)\n    x9 = compose(x8, x7)\n    x10 = rbind(compose, x4)\n    x11 = lbind(rbind, NEG_ONE)\n    x12 = compose(x11, x10)\n    x13 = chain(x9, x12, x7)\n    x14 = chain(x11, x10, x13)\n    x15 = lbind(lbind, x4)\n    x16 = compose(x15, x14)\n    x17 = fork(compose, x7, x16)\n    x18 = fork(combine, x17, x1111)\n    x19 = lbind(rbind, rot90)\n    x20 = chain(x19, x19, x7)\n    x21 = double(EIGHT)\n    x22 = interval(TWO, x21, ONE)\n    x23 = lbind(x20, x174)\n    x24 = chain(x23, x21, x20)\n    x25 = lbind(lbind, rot270)\n    x26 = chain(x25, rbind, x24)\n    x27 = fork(compose, x28, x26)\n    x28 = lbind(rbind, rot90)\n    x29 = chain(x28, x27, x29)\n    x30 = lbind(lbind, rot270)\n    x31 = chain(x30, rbind, x29)\n    x32 = lbind(lbind, invert)\n    x33 = chain(x32, x31, x18)\n    x34 = fork(compose, x29, x28)\n    x35 = fork(compose, x30, x33)\n    x"], [1.1, "def solve_ad891ae2(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_592eccd8(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = width(x4)\n    x6 = toivec(x5)\n    x7 = index(x4, x6)\n    x8 = shape(x4)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x4, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, rot90)\n    x16 = lbind(power, rot270)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x13)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x19)\n    x24 = uppermost(x12)\n    x25 = lbind(add, x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = lbind(multiply, x27)\n    x29 = chain(toivec, x25, x28)\n    x30 = fork(shift, x23, x29)\n    x31 = compose(asobject, x22)\n    x32 = uppermost(x12)\n    x33 = lbind(subtract, x32)\n    x34 = height(x12)\n    x35 = increment(x34)\n    x36 = lbind(multiply, x35)\n    x37 = chain(toivec, x33, x36)\n    x38 = fork(shift, x31, x37)\n    x39 = fork(combine"], [1.1, "def solve_1e58757b(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    x3 = add(TWO, x2)\n    x4 = canvas(x1, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = paint(x4, x6)\n    x8 = double(SIX)\n    x9 = astuple(ONE, x8)\n    x10 = connect(UNITY, x9)\n    x11 = outbox(x10)\n    x12 = backdrop(x11)\n    x13 = recolor(x1, x12)\n    x14 = recolor(THREE, x10)\n    x15 = lbind(shift, x14)\n    x16 = lbind(mapply, x15)\n    x17 = rbind(occurrences, x13)\n    x18 = compose(x16, x17)\n    x19 = fork(paint, identity, x18)\n    x20 = x19(x7)\n    x21 = ofcolor(x20, THREE)\n    x22 = dmirror(x7)\n    x23 = x19(x22)\n    x24 = dmirror(x23)\n    x25 = ofcolor(x24, THREE)\n    x26 = combine(x21, x25)\n    x27 = fill(x7, THREE, x26)\n    x28 = astuple(TWO, ONE)\n    x29 = dneighbors(UNITY)\n    x30 = remove(x28, x29)\n    x31 = recolor(x1, x30)\n    x32 = initset(UNITY)\n    x33 = recolor(THREE, x32)\n    x34 = combine(x31, x33)\n    x35 = recolor(x1, x34)\n    x36 = astuple(ONE, THREE)\n    x37 = initset(x36)\n    x38 = insert(ZERO_BY_TWO, x37)\n    x39 = insert(RIGHT, x38)\n    x40 = insert(DOWN, x39)\n    x41 ="], [1.1, "def solve_34114419(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(toindices, x3)\n    x5 = partition(I)\n    x6 = fork(equality, identity, corners)\n    x7 = difference(x5, x4)\n    x8 = extract(x7, x6)\n    x9 = leastcolor(x8)\n    x10 = matcher(dmirror, x8)\n    x11 = extract(x10, x6)\n    x12 = lbind(compose, flip)\n    x13 = rbind(matcher, x12)\n    x14 = compose(x13, identity)\n    x15 = lbind(fork, sfilter)\n    x16 = lbind(x15, identity)\n    x17 = lbind(lbind, extract)\n    x18 = compose(x16, x17)\n    x19 = lbind(ofcolor, I)\n    x20 = compose(x19, mostcolor)\n    x21 = fork(apply, x18, x20)\n    x22 = compose(x12, x21)\n    x23 = fork(hmirror, x22, identity)\n    x24 = compatible(x8, x11)\n    x25 = contained(x24, x11)\n    x26 =356(x25, UNITY)\n    x27 = canvas(x9, x26)\n    x28 = asobject(x27)\n    x29 = paint(x27, x28)\n    x30 = height(x28)\n    x31 = width(x28)\n    x32 = divide(x30, x31)\n    x33 = increment(x32)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = compose(double, halve)\n    x36 = lbind(apply, last)\n    x37 = lbind(sfilter, x34)\n    x38 = chain(x37, x35, x36)\n    x39 = lbind(shift, x28)\n    x40 = compose(x39, toivec"], [1.1, "def solve_62730e66(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = compose(x5, color)\n    x7 = compose(double, x4)\n    x8 = lbind(prapply, manhattan)\n    x9 = fork(x8, identity, x7)\n    x10 = lbind(remove, ZERO)\n    x11 = compose(x10, x9)\n    x12 = rbind(branch, NEG_TWO)\n    x13 = fork(x12, positive, x11)\n    x14 = chain(x13, minimum, x11)\n    x15 = fork(add, x14, x7)\n    x16 = chain(x5, x13, x15)\n    x17 = compose(initset, x16)\n    x18 = fork(rapply, x17, x14)\n    x19 = compose(first, x18)\n    x20 = compose(x5, x19)\n    x21 = extract(x2, x20)\n    x22 = first(x21)\n    x23 = last(x21)\n    x24 = divide(x6, x23)\n    x25 = increment(x24)\n    x26 = width(I)\n    x27 = interval(ZERO, x26, x25)\n    x28 = apply(tojvec, x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x27)\n    x31 = fill(I, FIVE, x30)\n    x32 = objects(x31, T, F, T)\n    x33 = colorfilter(x32, FIVE)\n    x34 = apply(first, x33)\n    x35 = valmax(x34, size)\n    x36 = x35(x34)\n    x37 = equality(x36, ONE)\n    x38 = branch(x37, x35, x34)\n    x39"], [1.1, "def solve_c04cbcc9(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =407960873df22(x1, x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(x5, I)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x8, x18)\n    x20 = lbind(colorcount, x17)\n    x21 = argmin(x19, x20)\n    x22 = rbind(colorcount, x21)\n    x23 = rbind(toobject, I)\n    x24 = chain(x22, x23, x28)\n    x25 = colorfilter(x1, x24)\n    x26 = sfilter(x25, x28)\n    x27 = difference(x25, x26)\n    x28 = objects(x27, T, T, T)\n    x29 = rbind(colorcount, x21)\n    x30 = argmax(x29, x28)\n    x31 = subgrid(x30, x27)\n    x32 = rbind(order, identity)\n    x33 = apply(x32, x31)\n    x34 = vmirror(x31)\n    x35 = x36(x34)\n    x36 = x33(x35)\n    x37 = hconcat(x35, x36)\n    x38 = objects(x37, T, T, T)\n    x39 = apply"], [1.1, "def solve_cd4b13d1(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = astuple(d13, c)\n    x9 = astuple(x10, x7)\n    x10 = hline(x8)\n    x11 = ulcorner(x8)\n    x12 = shoot(x11, UNITY)\n    x13 =7220(x12)\n    x14 = mapply(first, x12)\n    x15 =18722224(x14)\n    x16 = center(x15)\n    x17 = matcher(first, x7)\n    x18 = sfilter(x1, x17)\n    x19 = lbind(adjacent, x8)\n    x20 = mfilter(x18, x19)\n    x21 = toindices(x20)\n    x22 = NEG_UNITY(x21)\n    x23 = uppermost(x20)\n    x24 = shoot(x23, UNITY)\n    x25 = size(x24)\n    x26 = increment(x25)\n    x27 = matcher(first, x8)\n    x28 = compose(flip, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = lbind(recolor, x3)\n    x31 = compose(x30, mostcolor)\n    x32 = fork(combine, x29, x31)\n    x33 = lbind(lbind, shift)\n    x34 = lbind(occurrences, I)\n    x35 = compose(x33, x34)\n    x36 = lbind(mapply, x35)\n    x37 = chain(x36, x33, x28)\n    x38 = fork(mapply, x24, x17)\n    x39 = fork(mapply, x28, xcolor)\n    x40 = fork(combine, x38, x39)"], [1.1, "def solve_efe3bb69(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = lbind(index, I)\n    x2 = compose(x1, size)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(775, x5)\n    x5 = astuple(cmirror, x3)\n    x6 = combine(x4, x5)\n    x7 = fork(vsplit, identity, height)\n    x8 = chain(asobject, first, x7)\n    x9 = mostcolor(I)\n    x10 = matcher(x8, x9)\n    x11 = compose(flip, x10)\n    x12 =1111(I)\n    x13 = rbind(f25fb575, x12)\n    x14 = rbind(sfilter, x11)\n    x15 = compose(x14, dneighbors)\n    x16 = chain(x13, x15, toindices)\n    x17 = fork(mapply, x16, identity)\n    x18 = compose(x12, x17)\n    x19 = fork(intersection, x18, toindices)\n    x20 = compose(size, x19)\n    x21 = matcher(x20, ZERO)\n    x22 = lbind(apply, x9)\n    x23 = chain(flip, x21, x22)\n    x24 = fork(mapply, x18, x23)\n    x25 = shape(I)\n    x26 = maximum(x25)\n    x27 = toindices(x26)\n    x28 = ZERO(x25)\n    x29 = toindices(x28)\n    x30 =multiply(x27, x29)\n    x31 = rbind(add, x30)\n    x32 = lbind(object, I)\n    x33 = compose(x31, x32)\n    x34 = ofcolor(x12, x19)\n    x35 = ofcolor(x21, x12)\n    x36 = intersection(x34, x35)\n    x37 = fill(x12, TWO, x36)\n    x38 = lbind(chain, size)\n    x39 = compose"], [1.1, "def solve_130c80b4(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_5e543a93(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, branch)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)\n    "], [1.1, "def solve_79ad0713(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(identity, dmirror)\n    x5 = astuple(cmirror, hmirror)\n    x6 = combine(x4, x5)\n    x7 = rbind(rapply, I)\n    x8 = compose(first, x7)\n    x9 = chain(x3, x8, initset)\n    x10 = extract(x6, x9)\n    x11 = x10(I)\n    x12 = mostcolor(I)\n    x13 = palette(I)\n    x14 = remove(x12, x13)\n    x15 = restuple(x14)\n    x16 = ofcolor(x11, x12)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, identity, vmirror)\n    x20 = x19(x11)\n    x21 = ofcolor(x20, x12)\n    x22 = ofcolor(x20, x12)\n    x23 = leftmost(x22)\n    x24 = equality(x23, ZERO)\n    x25 = branch(x24, identity, hmirror)\n    x26 = x25(x11)\n    x27 = ofcolor(x26, x12)\n    x28 = ofcolor(x26, x12)\n    x29 = rbind(add, DOWN)\n    x30 = compose(x29, last)\n    x31 = fork(equality, identity, x30)\n    x32 = compose(flip, x31)\n    x33 = extract(x27, x32)\n    x34 = x33(x26)\n    x35 = toindices(x34)\n    x36 = first(x35)\n    x37 = last(x35)\n    x38 =573(x36, x37)\n    x39 = shift(x38, x34)\n    x40 = paint(x11, x39)\n    x"], [1.1, "def solve_f8d876b8(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_758888ad(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = fork(shoot, identity, corners)\n    x8 = compose(x7, center)\n    x9 = fork(shoot, identity, x8)\n    x10 = size(x6)\n    x11 = lefthalf(I)\n    x12 = righthalf(I)\n    x13 = rbind(order, identity)\n    x14 = rbind(order, incd)\n    x15 = compose(x13, x14)\n    x16 = lbind(rbind, shift)\n    x17 = compose(x16, x15)\n    x18 = fork(compose, x17, x15)\n    x19 = lbind(lbind, mapply)\n    x20 = compose(x19, x18)\n    x21 = fork(sfilter, x18, x20)\n    x22 = compose(size, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(I)\n    x26 = colorfilter(x25, x24)\n    x27 = compose(maximum, shape)\n    x28 = argmin(x26, x27)\n    x29 = color(x28)\n    x30 = remove(x28, x26)\n    x31 = x30(x36)\n    x32 = mapply(neighbors, x31)\n    x33 = difference(x32, x32)\n    x34 = toobject(x33, I)\n    x35 = apply(x38, x34)\n    x36 = size(x35)\n    x37 = sfilter(x33, x36)\n    x38 = toobject(x37, I)\n    x39 = difference(x34, x38)\n    x40 = canvas(x39, UNITY)\n    x41 = paint(x40, x"], [1.1, "def solve_3e5c6825(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = width(x4)\n    x6 = toivec(x5)\n    x7 = index(x4, x6)\n    x8 = shape(x4)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x4, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, rot90)\n    x16 = lbind(power, rot270)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x13)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x19)\n    x24 = uppermost(x12)\n    x25 = lbind(add, x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = lbind(multiply, x27)\n    x29 = chain(toivec, x25, x28)\n    x30 = fork(shift, x23, x29)\n    x31 = compose(asobject, x22)\n    x32 = uppermost(x12)\n    x33 = lbind(subtract, x32)\n    x34 = height(x12)\n    x35 = increment(x34)\n    x36 = lbind(multiply, x35)\n    x37 = chain(toivec, x33, x36)\n    x38 = fork(shift, x31, x37)\n    x39 = fork(combine"], [1.1, "def solve_ff2c5f3b(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = palette(I)\n    x2 = compose(maximum, shape)\n    x3 = lbind(apply, x2)\n    x4 = lbind(ofcolor, I)\n    x5 = chain(x3, x4, x2)\n    x6 = compose(maximum, shape)\n    x7 = fork(equality, x5, x6)\n    x8 =    filter(x1, x7)\n    x9 = lbind(index, I)\n    x10 = compose(x9, x7)\n    x11 = fork( equality, x10, x6)\n    x12 = fork(either, x12, x11)\n    x13 = matcher(x10, ZERO)\n    x14 = sfilter(x8, x13)\n    x15 = difference(x8, x14)\n    x16 = lbind(colorcount, I)\n    x17 =765d511(x16)\n    x18 = argmin(x15, x17)\n    x19 = ofcolor(I, x18)\n    x20 = urcorner(x14)\n    x21 = ulcorner(x14)\n    x22 = subtract(x20, x21)\n    x23 = colorfilter(x19, x22)\n    x24 = count27(x23)\n    x25 = asobject(I)\n    x26 = subgrid(x25, x24)\n    x27 = asindices(x26)\n    x28 = toobject(x27, x26)\n    x29 = mostcolor(x28)\n    x30 = ofcolor(x26, x29)\n    x31 = replace(I, x18, x29)\n    x32 = x29(x31)\n    x33 = asobject(x32)\n    x34 = occurrences(x31, x33)\n    x35 = mapply(first, x34)\n    x36 = maximum(x31)\n    x37 = downscale(x35, x36)\n    x38 = asindices(x37)\n    x39 = box(x38)\n    x40 = fill(x37, x39, x37)\n    "], [1.1, "def solve_0c7785d7(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_7ee58563(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_e3e13ea9(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = switch(I, THREE, FOUR)\n    x2 = ofcolor(x1, ZERO)\n    x3 = asindices(x1)\n    x4 = difference(x3, x2)\n    x5 = normalize(x4)\n    x6 = recolor(ONE, x5)\n    x7 = mostcolor(I)\n    x8 = paint(x1, x7)\n    O = compose(initset, lrcorner)\n    x19 = fork( insert, ulcorner, x8)\n    x20 = insert(I, x4)\n    x21 = insert(lrcorner, x20)\n    x22 = fork(contained, square, identity)\n    x23 = compose(x22, ulcorner)\n    x24 = astuple(normalize, NEG_TWO)\n    x25 = branch(x11, x24, x23)\n    x26 = asindices(x1)\n    x27 = box(x26)\n    x28 = toobject(x27, I)\n    x29 = combine(x28, x25)\n    x30 = mostcolor(x29)\n    x31 = matcher(x23, x30)\n    x32 = compose(flip, x31)\n    x33 = rbind(sfilter, x32)\n    x34 = chain(positive, size, x33)\n    x35 = rbind(sfilter, x24)\n    x36 = compose(maximum, x35)\n    x37 = apply(x36, x22)\n    x38 = lbind(fork, FIVE)\n    x39 = lbind(x38, identity)\n    x40 = lbind(lbind, shift)\n    x41 = compose(x39, x40)\n    x42 = lbind(chain, x40)\n    x43 = rbind(x42, x30)\n    x44 = lbind(rbind, occurrences)\n    x45 = chain(x41, x44, identity)\n    x46 = lbind(compose, x flip)\n    x47 = chain(x41, x46, identity)\n    x48 = lbind"], [1.1, "def solve_aa09ef21(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_4df48e23(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_6ed670a2(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_945f0060(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = compose(x32, leftmost)\n    x37 = rbind(compose, x30)\n    x38 = lbind(compose, x37)\n    x39 = lbind(x31, x15)\n    x40 = rbind(sfilter, x35)\n    x41 = chain(x39, x40, size)\n    x42 = lbind(d"], [1.1, "def solve_0509b41f(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_94c8c5ba(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_8a3f88b0(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_7a50a92e(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = vmirror(I)\n    x2 = fgpartition(x1)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = index(x1, x4)\n    x6 = portrait(x5)\n    x7 = branch(x6, identity, dmirror)\n    x8 = x7(x1)\n    x9 = objects(x8, T, F, T)\n    x10 = branch(x6, identity, vmirror)\n    x11 = x10(x9)\n    x12 = mostcolor(I)\n    x13 = shape(x11)\n    x14 = canvas(x12, x13)\n    x15 = hconcat(x11, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = apply(uppermost, x16)\n    x18 = size(x17)\n    x19 = order(x17, uppermost)\n    x20 = apply(color, x19)\n    x21 = extract(x20, last)\n    x22 = remove(x21, x19)\n    x23 = argmin(x22, uppermost)\n    x24 = other(x22, x23)\n    x25 = color(x23)\n    x26 = color(x24)\n    x27 = fill(x15, x23, x24)\n    x28 = fill(x27, x26, x25)\n    x29 = fill(x28, x26, x21)\n    x30 = dmirror(x29)\n    x31 = papply(pair, x29, x30)\n    x32 = lbind(apply, maximum)\n    x33 = rbind(sfilter, x32)\n    x34 = chain(cde solve, x33, x24)\n    x35 = pair(x31, x31)\n    x36 = apply(x34, x35)\n    x37 =50(x36)\n    x38 = height(x36)\n    x39 = apply(size, x36)\n    x40 = repeat(x39, ONE)\n    "], [1.1, "def solve_e6d9f80c(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = compose(first, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = compose(last, last)\n    x8 = totuple(x2)\n    x9 = apply(x7, x8)\n    x10 = mostcommon(x9)\n    x11 = compose(first, last)\n    x12 = matcher(x11, x6)\n    x13 = sfilter(x2, x12)\n    x14 = compose(last, last)\n    x15 = matcher(x14, x10)\n    x16 = sfilter(x2, x15)\n    x17 = objects(I, F, T, T)\n    x18 = size(x17)\n    x19 = equality(x18, TWO)\n    x20 = mfilter(x17, hline)\n    x21 = mfilter(x17, vline)\n    x22 = branch(x19, x20, x13)\n    x23 = branch(x19, x21, x16)\n    x24 = width(x22)\n    x25 = lbind(multiply, x24)\n    x26 = width(I)\n    x27 = divide(x26, x24)\n    x28 = increment(x27)\n    x29 = interval(ZERO, x28, ONE)\n    x30 = apply(x25, x29)\n    x31 = apply(invert, x30)\n    x32 = combine(x30, x31)\n    x33 = apply(tojvec, x32)\n    x34 = lbind(shift, x22)\n    x35 = mapply(x34, x33)\n    x36 = height(x23)\n    x37 = lbind(multiply, x36)\n    x38 = height(I)\n    x39 = height(x22)\n    x40 = divide(x38, x39)\n    x41 = increment(x40)\n    x42 = interval"], [1.1, "def solve_3a4e1012(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = partition(I)\n    x6 = fork(multiply, height, width)\n    x7 = fork(equality, size, x6)\n    x8 = extract(x5, x7)\n    x9 = color(x8)\n    x10 = palette(I)\n    x11 = remove(x4, x10)\n    x12 = other(x11, x9)\n    x13 = ofcolor(I, x12)\n    x14 = vmirror(x13)\n    x15 = hmirror(x13)\n    x16 = toindices(x8)\n    x17 = combine(x16, x13)\n    x18 = height(x17)\n    x19 = halve(x18)\n    x20 = increment(x19)\n    x21 = width(x17)\n    x22 = halve(x21)\n    x23 = increment(x22)\n    x24 = astuple(x20, x23)\n    x25 = maximum(x24)\n    x26 = invert(x25)\n    x27 = increment(x25)\n    x28 = interval(x26, x27, ONE)\n    x29 = product(x28, x28)\n    x30 = initset(x15)\n    x31 = insert(x14, x30)\n    x32 = product(x29, x31)\n    x33 = ofcolor(I, x4)\n    x34 = rbind(intersection, x33)\n    x35 = fork(shift, last, first)\n    x36 = chain(size, x34, x35)\n    x37 = matcher(x36, ZERO)\n    x38 = sfilter(x32, x37)\n    x39 = rbind(intersection, x13)\n    x40 = fork(shift, last, first)\n    x41 = chain(size, x39, x40)\n    x42 = argmax(x38, x41"], [1.1, "def solve_a3be86c6(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivef15, x1)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4"], [1.1, "def solve_10a4f2de(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = inbox(x20)\n    x22 = cover(I, x21)\n    x23 = lrcorner(x206)\n    x24 = ofcolor(x22, x18)\n    x25 = inbox(x24)\n    x26 = recolor(x18, x24)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, x22)\n    x29 = color(x28)\n    x30 = inbox(x25)\n    x31 = recolor(x29, x25)\n    x32 = combine(x27, x31)\n    x33 = mapply(d90, x32)\n    x34 = fill(x22, x1, x33)\n    x35 = ofcolor(x34, x19)\n    x36 = subgrid(x35, x34)\n    x37 = asindices(x36)\n    x38 = box(x37)\n    x39 = fill(x34, x19, x38)\n    x40 = difference(x37, x"], [1.1, "def solve_973bb449(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = chain(double, last, first)\n    x4 = fork(equality, x3, x2)\n    x5 = sfilter(x1, x4)\n    x6 = vsplit(I, TWO)\n    x7 = rbind(hsplit, TWO)\n    x8 = extract(x6, x7)\n    x9 =150(x8)\n    x10 = last(x8)\n    x11 = remove(x10, x8)\n    x12 = solve(hline, x11)\n    x13 = center(x12)\n    x14 = dneighbors(x13)\n    x15 = insert(x13, x14)\n    x16 = toobject(x15, I)\n    x17 = mostcolor(x16)\n    x18 = palette(x16)\n    x19 = remove(x17, x18)\n    x20 = valuple(x19, x15)\n    x21 = other(x19, x20)\n    x22 = replace(x9, x21, x11)\n    x23 = combine(x15, x22)\n    x24 = ofcolor(x23, x21)\n    x25 = mapply(dneighbors, x24)\n    x26 = astuple(x25, x22)\n    x27 = other(x25, x26)\n    x28 = color(x27)\n    x29 = color(x8)\n    x30 = greater(x26, x29)\n    x31 = branch(x30, identity, dneighbors)\n    x32 = initset(x13)\n    x33 = insert(x32, x31)\n    x34 = insert(x17, x33)\n    x35 = hconcat(x34, x111)\n    x36 = vconcat(x35, x111)\n    x37 = vconcat(x36, x36)\n    x38 = vconcat(x37, x36)\n    x39 = halve(x38)\n    x40 = dneighbors"], [1.1, "def solve_fd7d21a8(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_90589327(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_074d71dc(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(identity, dmirror)\n    x5 = astuple(cmirror, hmirror)\n    x6 = combine(x4, x5)\n    x7 = rbind(rapply, I)\n    x8 = compose(first, x7)\n    x9 = chain(x3, x8, initset)\n    x10 = extract(x6, x9)\n    x11 = x10(I)\n    x12 = mostcolor(I)\n    x13 = palette(I)\n    x14 = remove(x12, x13)\n    x15 = other(x14, TWO)\n    x16 = ofcolor(x11, x15)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, identity, vmirror)\n    x20 = x19(x11)\n    x21 = ofcolor(x20, x15)\n    x22 = ofcolor(x20, TWO)\n    x23 = apply(last, x22)\n    x24 = insert(ZERO, x23)\n    x25 = width(x20)\n    x26 = insert(x25, x24)\n    x27 = order(x26, identity)\n    x28 = last(x27)\n    x29 = remove(x28, x27)\n    x30 = first(x27)\n    x31 = remove(x30, x27)\n    x32 = pair(x29, x31)\n    x33 = size(x29)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = pair(x34, x32)\n    x36 = lbind(fork, connect)\n    x37 = compose(first, last)\n    x38 = chain(decrement, last, last)\n    x39 = lbind(lbind, add)\n    x40 = compose(x39, first)\n    x41 = lbind("], [1.1, "def solve_fd4053c0(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_8ada2fb9(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = compose(first, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = compose(last, last)\n    x8 = totuple(x2)\n    x9 = apply(x7, x8)\n    x10 = mostcommon(x9)\n    x11 = compose(first, last)\n    x12 = matcher(x11, x6)\n    x13 = sfilter(x2, x12)\n    x14 = compose(last, last)\n    x15 = matcher(x14, x10)\n    x16 = sfilter(x2, x15)\n    x17 = objects(I, F, T, T)\n    x18 = size(x17)\n    x19 = equality(x18, TWO)\n    x20 = mfilter(x17, hline)\n    x21 = mfilter(x17, vline)\n    x22 = branch(x19, x20, x13)\n    x23 = branch(x19, x21, x16)\n    x24 = width(x22)\n    x25 = lbind(multiply, x24)\n    x26 = width(I)\n    x27 = divide(x26, x24)\n    x28 = increment(x27)\n    x29 = interval(ZERO, x28, ONE)\n    x30 = apply(x25, x29)\n    x31 = apply(invert, x30)\n    x32 = combine(x30, x31)\n    x33 = apply(tojvec, x32)\n    x34 = lbind(shift, x22)\n    x35 = mapply(x34, x33)\n    x36 = height(x23)\n    x37 = lbind(multiply, x36)\n    x38 = height(I)\n    x39 = height(x22)\n    x40 = divide(x38, x39)\n    x41 = increment(x40)\n    x42 = interval"], [1.1, "def solve_e6eb1aed(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 =8888(I, TWO)\n    x2 = apply(d687, x1)\n    x3 = height(x2)\n    x4 = width(x2)\n    x5 = trim(x2)\n    x6 = FOUR(x5)\n    x7 = equality(x6, ONE)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = uppermost(x10)\n    x12 = leftmost(x10)\n    x13 = index(x9, x11)\n    x14 = uppermost(x12)\n    x15 = rightmost(x12)\n    x16 = index(x9, x15)\n    x17 = decrement(x13)\n    x18 = leftmost(x2)\n    x19 = initset(x18)\n    x20 = insert(x11, x19)\n    x21 = difference(x10, x20)\n    x22 =698( fill, FOUR, x21)\n    x23 = objects(x22, T, F, T)\n    x24 = apply(toindices, x23)\n    x25 = lbind(index, x9)\n    x26 = compose(x25, shape)\n    x27 = astuple(x17, x26)\n    x28 = lbind(multiply, x27)\n    x29 = apply(x28, x24)\n    x30 = order(x29, identity)\n    x31 = lbind(apply, last)\n    x32 = lbind(rbind,ofcolor)\n    x33 = rbind(sfilter, x31)\n    x34 = rbind(compose, palette)\n    x35 = lbind(lbind, contained)\n    x36 = chain(x34, x33, x35)\n    x37 = rbind(sfilter, x32)\n    x38 = rbind(compose, palette)\n    x39 = lbind(lbind, contained)\n    x40 = chain(x37, x38, x39)\n    x41 = x36"], [1.1, "def solve_a1d7d322(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_9e476659(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_aa1951bb(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18, x"], [1.1, "def solve_7ddbef2c(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(F, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(F, x21)\n    x23 = color(I)\n    x24 = canvas(x23, x22)\n    x25 = colorcount(I, x7)\n    x26 = decrement(x25)\n    x27 = tojvec(x26)\n    x28 = connect(ORIGIN, x27)\n    x29 = height(I)\n    x30 = equality(x29, x27)\n    x31 = decrement(x30)\n    x32 = tojvec(x31)\n    x33 = connect(ORIGIN, x32)\n    x34 = width(I)\n    x35 = increment(x34)\n    x36 = tojvec(x35)\n    x37 = decrement(x36)\n    x38 = tojvec(x37)\n    x39 = connect(ORIGIN, x38)\n    x40 = height(I)\n    x41 = decrement(x40)\n    x42 = toivec(x41)\n    x43 = subtract(x42, x31)\n    x44 = width(I)\n    x45 = decrement(x44)\n    x46 = tojvec"], [1.1, "def solve_a9d5674a(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, vmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = divide(x17, x14)\n    x19 = increment(x18)\n    x20 = interval(ZERO, x19, ONE)\n    x21 = width(x3)\n    x22 = multiply(x21, x14)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x18)\n    x25 = rbind(divide, x18)\n    x26 = compose(x24, x25)\n    x27 = apply(x26, x20)\n    x28 = astuple(x19, x22)\n    x29 = lbind(multiply, x28)\n    x30 = apply(x29, x21)\n    x31 = apply(x30, x23)\n    x32 = combine(x29, x31)\n    x33 = mapply(x17, x32)\n    x34 = astuple(x3, x2005)\n    x35 = canvas(ZERO, x34)\n    x36 = asindices(x35)\n    x37 = shift(x36, x37)\n    x38 = shape(I)\n    x39 = maximum(x38)\n    x40 = lbind(multiply,"], [1.1, "def solve_adcb5fc4(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x20, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = compose(x36, first)\n    x38 = argmin(x35, x37)\n    x39 = first(x38)\n    x40"], [1.1, "def solve_e39c9ff0(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = fork(combine, first, last)\n    x9 = compose(x8, vmirror)\n    x10 = totuple(x7)\n    x11 = apply(x9, x10)\n    x12 = mostcommon(x11)\n    x13 = matcher(x9, x12)\n    x14 = extract(x11, x13)\n    x15 = last(x14)\n    x16 = height(x15)\n    x17 = rot90(I)\n    x18 = interval(ZERO, x17, ONE)\n    x19 = rbind(multiply, x16)\n    x20 = apply(x19, x18)\n    x21 = rbind(multiply, x16)\n    x22 = apply(x21, x18)\n    x23 = pair(x20, x22)\n    x24 = lbind(canvas, ZERO)\n    x25 = compose(x24, last)\n    x26 = fork(other, first, x25)\n    x27 = palette(I)\n    x28 = mostcolor(I)\n    x29 = remove(x28, x29)\n    x30 = lbind(hconcat, I)\n    x31 = argmin(x30, x30)\n    x32 = ofcolor(x15, x31)\n    x33 = mapply(vfrontier, x32)\n    x34 = mapply(hfrontier, x32)\n    x35 = size(x13)\n    x36 = size(x34)\n    x37 = greater(x35, x36)\n    x38 = rbind(canvas, xcolor)\n    x39 = chain(x38, asobject, x38)\n    x40 = compose(first"], [1.1, "def solve_93e42771(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 =8888888888888888888888\n    x2 = astuple(identity, dmirror)\n    x3 = astuple(cmirror, hmirror)\n    x4 = combine(x2, x3)\n    x5 = rbind(rapply, I)\n    x6 = chain(first, x5, initset)\n    x7 = rbind(ofcolor, EIGHT)\n    x8 = chain(lowermost, x7, x6)\n    x9 = chain(decrement, height, x6)\n    x10 = fork(equality, x8, x9)\n    x11 = extract(x4, x10)\n    x12 = x11(I)\n    x13 = ofcolor(x12, ZERO)\n    x14 = dmirror(x13)\n    x15 = width(x12)\n    x16 = decrement(x15)\n    x17 = tojvec(x16)\n    x18 = invert(x17)\n    x19 = rightmost(x13)\n    x20 = decrement(x19)\n    x21 = tojvec(x20)\n    x22 = invert(x21)\n    x23 = astuple(x18, x22)\n    x24 = maximum(x23)\n    x25 = dmirror(x24)\n    x26 = astuple(x24, x25)\n    x27 = branch(x12, x26, x24)\n    x28 = lbind(apply, maximum)\n    x29 = lbind(min, x24)\n    x30 = rbind(rbind, ZERO)\n    x31 = compose(x30, x28)\n    x32 = rbind(sfilter, x31)\n    x33 = lbind(pair, x27)\n    x34 = chain(x32, x33, x25)\n    x35 = rbind(apply, x14)\n    x36 = compose(x35, x24)\n    x37 = fork(add, x36, x34)\n    x38 = rbind(apply, x16)\n    x39 = compose(x38,"], [1.1, "def solve_8a010aa2(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 =78748ivec(x5)\n    x7 = palette(x6)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x11, T, F, T)\n    x13 = colorfilter(x12, x10)\n    x14 = rbind(manhattan, x13)\n    x15 = argmin(x12, x14)\n    x16 = ofcolor(x15, x10)\n    x17 = first(x16)\n    x18 = initset(x17)\n    x19 = argman(x18, x10)\n    x20 = lbind(argmin, x17)\n    x21 = lbind(rbind, manhattan)\n    x22 = compose(x21, initset)\n    x23 = rbind(argmin, x22)\n    x24 = rbind(rbind, manhattan)\n    x25 = compose(x23, x24)\n    x26 = fork(gravitate, identity, x25)\n    x27 = fork(add, identity, x26)\n    x28 = fork(connect, identity, x27)\n    x29 = rbind(2ordering, x11)\n    x30 = rbind(order, uppermost)\n    x31 = chain(x29, x30, x27)\n    x32 = apply(x31, x5)\n    x33 = rbind(contained, x32)\n    x34 = apply(x33, x553)\n    x35 = either(x20, x34)\n    x36 = branch(x35, x22, x25)\n    x37 = objects(x36, T, F, T)\n    x38 = rbind(colorcount, x11)\n    x39 = valmax(x37"], [1.1, "def solve_e7b3c1d2(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x8, x7)\n    x11 = remove(x9, x10)\n    x12 = Mehindices(x8)\n    x13 = merge(x12)\n    x14 = fill(I, x3, x13)\n    x15 = objects(x14, F, F, T)\n    x16 = argmin(x15, leftmost)\n    x17 = argmax(x15, leftmost)\n    x18 = vmirror(x16)\n    x19 = vmirror(x17)\n    x20 = dmirror(x18)\n    x21 = cmirror(x19)\n    x22 = hmirror(x20)\n    x23 = hmirror(x21)\n    x24 =vsplit(x14, x22)\n    x25 = vmirror(x23)\n    x26 = hmirror(x24)\n    x27 = hmirror(x25)\n    x28 = vmirror(x26)\n    x29 = vmirror(x27)\n    x30 = hmirror(x28)\n    x31 = ulcorner(x16)\n    x32 = llcorner(x16)\n    x33 = subtract(x31, x32)\n    x34 = rbind(valmin, x23)\n    x35 = other(x22, x39)\n    x36 = delta(x35)\n    x37 = fill(x14, x3, x36)\n    x38 = objects(x37, F, F, T)\n    x39 = colorfilter(x38, x5)\n    x40 =adjacent(x38, x39)\n    x41 = r"], [1.1, "def solve_ac23c8d7(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = increment(x39)\n    x41 = interval(ZERO, x40, ONE)\n    x42 = apply(tojvec"], [1.1, "def solve_01bcf5ef(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_f2bf5784(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = vline(x1)\n    x3 = branch(x2, dmirror, identity)\n    x4 = x3(I)\n    x5 = ofcolor(x4, THREE)\n    x6 = ofcolor(x4, TWO)\n    x7 = center(x5)\n    x8 = hfrontier(x7)\n    x9 = center(x6)\n    x10 = hfrontier(x9)\n    x11 = mostcolor(I)\n    x12 = palette(I)\n    x13 = remove(THREE, x12)\n    x14 = remove(TWO, x13)\n    x15 = other(x14, x11)\n    x16 = replace(x4, THREE, x11)\n    x17 = difference(x8, x5)\n    x18 = underfill(x16, x17, x15)\n    x19 = replace(x4, TWO, x15)\n    x20 = difference(x10, x6)\n    x21 = underfill(x19, x20, x15)\n    x22 = objects(x18, T, F, F)\n    x23 = colorfilter(x22, x15)\n    x24 = rbind(adjacent, x5)\n    x25 = sfilter(x23, x24)\n    x26 = objects(x21, F, F, T)\n    x27 = colorfilter(x26, x11)\n    x28 = rbind(adjacent, x6)\n    x29 = sfilter(x27, x28)\n    x30 = mapply(toindices, x25)\n    x31 = rbind(equality, x31)\n    x32 = lbind(index, x4)\n    x33 = compose(x32, urcorner)\n    x34 = matcher(x33, x21)\n    x35 = rbind(add, x27)\n    x36 = chain(x31, x35, x4)\n    x37 = sfilter(x30, x34)\n    x38 = lbind(add, x29)\n    x39 = chain"], [1.1, "def solve_ec58bebc(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = vmirror(I)\n    x2 = sizefilter(x1, ONE)\n    x3 = apply(even, x2)\n    x4 = sfilter(x3, hline)\n    x5 = size(x4)\n    x6 = positive(x5)\n    x7 = branch(x6, identity, dmirror)\n    x8 = x7(I)\n    x9 = rbind(toobject, x8)\n    x10 = chain(Example, x9, delta)\n    x11 = apply(x10, x4)\n    x12 = asindices(x11)\n    x13 = shape(x12)\n    x14 = add(x13, THREE)\n    x15 = halve(x14)\n    x16 = add(x15, UP_RIGHT)\n    x17 = crop(x16, x12, x15)\n    x18 = canvas(ZERO, x13)\n    x19 = asobject(x18)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = argmax(x22, last)\n    x24 = add(x23, x22)\n    x25 = flip(x24)\n    x26 = asobject(x25)\n    x27 = equality(x25, x26)\n    x28 = branch(x27, ulcorner, last)\n    x29 = multiply(x27, x28)\n    x30 = branch(x27, llcorner, last)\n    x31 = initset(x30)\n    x32 = insert(x29, x31)\n    x33 = = lbind(2020, x32)\n    x34 = compose(x33, first)\n    x35 = toindices(x34)\n    x36 = sizefilter(x35, x24)\n    x37 = lbind(argmin, x36)\n    x38 = lbind(shift, x24)\n    x39 = compose(x37, x38)\n    x40 = fork(recolor"], [1.1, "def solve_3207db89(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = lbind(apply, toindices)\n    x2 = lbind(rbind, intersection)\n    x3 = compose(x1, x2)\n    x4 = fork(size, x3, color)\n    x5 = palette(I)\n    x6 = compose(x4, x5)\n    x7 = fork(paint, identity, x6)\n    x8 = rbind(compose, palette)\n    x9 = lbind(lfilter, x5)\n    x10 = chain(x8, x9, x7)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(x11, toindices)\n    x13 = chain(size, x12, x7)\n    x14 = matcher(x13, ONE)\n    x15 = fork(both, x14, x13)\n    x16 = merge(x15)\n    x17 = palette(x16)\n    x18 = lbind(colorcount, x16)\n    x19 = compose(x18, argmin)\n    x20 = argmin(x17, x19)\n    x21 = rbind(colorcount, x20)\n    x22 = chain(toivec, first, x21)\n    x23 = fork(shift, x22, ulcorner)\n    x24 = canvas(x20, UNITY)\n    x25 = mapply(x23, x24)\n    x26 = objects(x25, T, T, T)\n    x27 = first(x26)\n    x28 = last(x26)\n    x29 = subgrid(x27, x45)\n    x30 = colorfilter(x26, x20)\n    x31 = rbind(contained, x30)\n    x32 = compose(x31, last)\n    x33 = sfilter(x30, x32)\n    x34 = paint(x29, x33)\n    x35 = ofcolor(x34, x20)\n    x36 = subgrid(x35, x45)\n    x37 = sfilter(x1, x36)\n    x38 =27(x37)\n    x39 = replace("], [1.1, "def solve_09b5b1ea(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_74429dad(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = argadjacent(x24, x23)\n    x26 = subgrid(x25, x14)\n    x27 = asobject(x25)\n    x28 = vmirror(x27)\n    x29 = hconcat(x28, x14)\n    x30 = height(x29)\n    x31 = subgrid(x25, x15)\n    x32 = asobject(x31)\n    x33 = height(x32)\n    x34 = equality(x30, x33)\n    x35 = branch(x34, x29, x28)\n    x36 = add(x34, UNITY)\n    x37 =44(x35)\n    x38 = astuple(x31, x36)\n    x39 = x36(x37)\n    x40 = shift(x39, x37)\n    x41 = ofcolor(x44, x13)\n    x42 = subgrid(x"], [1.1, "def solve_cc785cc9(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = width(x4)\n    x6 = toivec(x5)\n    x7 = index(x4, x6)\n    x8 = shape(x4)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x4, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, insert)\n    x16 = lbind(power, ZERO)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x13)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x19)\n    x24 = uppermost(x12)\n    x25 = lbind(add, x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = lbind(multiply, x27)\n    x29 = chain(toivec, x25, x28)\n    x30 = fork(shift, x23, x29)\n    x31 = compose(asobject, x22)\n    x32 = uppermost(x12)\n    x33 = lbind(subtract, x32)\n    x34 = height(x12)\n    x35 = increment(x34)\n    x36 = lbind(multiply, x35)\n    x37 = chain(toivec, x33, x36)\n    x38 = fork(shift, x31, x37)\n    x39 = fork(combine,"], [1.1, "def solve_0301447d(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP90)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP90)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, x33)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)\n    x"], [1.1, "def solve_4fc32608(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, T)\n    x4 = merge(x3)\n    x5 = palette(x4)\n    x6 = intersection(x5, x2)\n    x7 = lbind(colorcount, x4)\n    x8 = argmax(x6, x7)\n    x9 = astuple(x8, x2)\n    x10 = canvas(x9, x9)\n    x11 = paint(x10, x4)\n    x12 = objects(x11, T, F, T)\n    x13 = compose(normalize, toindices)\n    x14 = rbind(sordering, x13)\n    x15 = lbind(toobject, x14)\n    x16 = chain(x15, x13, color)\n    x17 = rbind(sfilter, x16)\n    x18 = lbind(recolor, x8)\n    x19 = chain(x18, x17, x35)\n    x20 = fork(combine, x15, x19)\n    x21 = lbind(paint, x11)\n    x22 = compose(x21, x20)\n    x23 = fork(paint, identity, x22)\n    x24 = chain(x13, x17, x23)\n    x25 = rbind(apply, x10)\n    x26 = lbind(lbind, shift)\n    x27 = chain(x26, x17, x24)\n    x28 = fork(apply, x26, x27)\n    x29 = fork(remove, x28, x22)\n    x30 = compose(x25, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = lbind(fork, intersection)\n    x33 = compose(x32, x30)\n    x34 = fork(794, x33, x24)\n    x35 = compose(x31, x34)\n    x36 = fork(ers O, x35, x36)\n    x37 = mapply(x36, x4)\n"], [1.1, "def solve_e8940922(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = apply(first, x22)\n    x24 = lbind(sfilter, x21)\n    x25 = compose(first, last)\n    x26 = lbind(matcher, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x27, x23)\n    x29 = lbind(shift, x15)\n    x30 = chain(x29, toivec, uppermost)\n    x31 = matcher(first, x18)\n    x32 = rbind(sfilter, x31)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(toindices, x32, x30)\n    x36 = chain(x33, x34, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = compose(color, x37)\n    x39 = compose(x32, x30)\n    x40 = fork(recolor, x38, x39)\n    x41 = fork(other, palette,"], [1.1, "def solve_317e3dea(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = compose(initset, x13)\n    x20 = fork(rapply, x19, x18)\n    x21 = compose(first, x20)\n    x22 = rbind(contained, x1)\n    x23 = compose(x22, last)\n    x24 = compose(flip, x23)\n    x25 = rbind( sfilter, x21)\n    x26 = chain(first, x25, x24)\n    x27 = fork(paint, x26, x25)\n    x28 = compose(initset, x15)\n    x29 = fork(rapply, x28, x24)\n    x30 = compose(first, x29)\n    x31 = fork(paint, x30, x27)\n    x32 = compose(initset, x12)\n    x33 = fork(rapply, x32, x24)\n    x34 = compose(first, x33)\n    x35 = extract(x1, x34)\n    x36 = x35(I)\n    x37 = first(x36)\n    x38"], [1.1, "def solve_fc65a4c4(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_c797836b(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = leastcolor(I)\n    x9 = rbind(ofcolor, x8)\n    x10 = rbind(rapply, I)\n    x11 = chain(first, x10, initset)\n    x12 = chain(hline, x9, x11)\n    x13 = rbind(ofcolor, x8)\n    x14 = rbind(rapply, I)\n    x15 = chain(first, x14, initset)\n    x16 = chain(leftmost, x13, x15)\n    x17 = matcher(x16, ZERO)\n    x18 = fork(both, x12, x17)\n    x19 = compose(x18, first)\n    x20 = extract(x7, x19)\n    x21 = first(x20)\n    x22 = last(x20)\n    x23 = x21(I)\n    x24 = ofcolor(x23, x8)\n    x25 = argmax(x24, last)\n    x26 = add(x25, UP_RIGHT)\n    x27 = shoot(x26, UP_RIGHT)\n    x28 = add(x25, DOWN_LEFT)\n    x29 = shoot(x28, DOWN_LEFT)\n    x30 = rbind(shoot, LEFT)\n    x31 = mapply(x30, x27)\n    x32 = rbind(shoot, LEFT)\n    x33 = mapply(x32, x29)\n    x34 = width(x23)\n    x35 = invert(x34)\n    x36 = tojvec(x35)\n    x37 = shift(x31, x36)\n    x38 = combine(x31, x37)\n    x39 ="], [1.1, "def solve_6961916f(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toive694, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_4df9dccc(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = ofcolor(x3, x39"], [1.1, "def solve_e14ac45b(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = height(I)\n    x9 = astuple(x8, ONE)\n    x10 = canvas(THREE, x9)\n    x11 = hconcat(x10, I)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = identity(DOWN)\n    x17 = connect(ORIGIN, x15)\n    x18 = fill(x11, THREE, x17)\n    x19 = identity(x13)\n    x20 = identity(x12)\n    x21 = identity(x12)\n    x22 = identity(F8)\n    x23 = identity(F9)\n    x24 = compose(first, first)\n    x25 = chain(first, last, x24)\n    x26 = compose(first, first)\n    x27 = chain(last, last, x26)\n    x28 = chain(first, first, first)\n    x29 = chain(first, last, last)\n    x30 = chain(first, first, last)\n    x31 = chain(last, first, last)\n    x32 = compose(decrement, x25)\n    x33 = compose(decrement, x27)\n    x34 = fork(astuple, x32, x33)\n    x35 = compose(decrement, x27)\n    x36 = fork(multiply, x30, x35)\n    x37 = fork(add, x29, x36)\n    x38 = compose(positive, size)\n    x39 = lbind(intersection, x7)\n    x40 = chain(x38, x39, xf8)\n    x41 = compose(size"], [1.1, "def solve_5e8234d9(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = partition(I)\n    x6 = fork(multiply, height, width)\n    x7 = fork(equality, size, x6)\n    x8 = extract(x5, x7)\n    x9 = color(x8)\n    x10 = palette(I)\n    x11 = remove(x4, x10)\n    x12 = other(x11, x9)\n    x13 = ofcolor(I, x12)\n    x14 = vmirror(x13)\n    x15 = hmirror(x13)\n    x16 = toindices(x8)\n    x17 = combine(x16, x13)\n    x18 = height(x17)\n    x19 = halve(x18)\n    x20 = increment(x19)\n    x21 = width(x17)\n    x22 = halve(x21)\n    x23 = increment(x22)\n    x24 = astuple(x20, x23)\n    x25 = maximum(x24)\n    x26 = invert(x25)\n    x27 = increment(x25)\n    x28 = interval(x26, x27, ONE)\n    x29 = product(x28, x28)\n    x30 = initset(x15)\n    x31 = insert(x14, x30)\n    x32 = product(x29, x31)\n    x33 = ofcolor(I, x4)\n    x34 = rbind(intersection, x33)\n    x35 = fork(shift, last, first)\n    x36 = chain(size, x34, x35)\n    x37 = matcher(x36, ZERO)\n    x38 = sfilter(x32, x37)\n    x39 = rbind(intersection, x13)\n    x40 = fork(shift, last, first)\n    x41 = chain(size, x39, x40)\n    x42 = argmax(x38, x41"], [1.1, "def solve_ec3a2634(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = corners(x2)\n    x4 = toobject(x3, I)\n    x5 = mostcolor(x4)\n    x6 = colorcount(I, x5)\n    x7 = dmirror(I)\n    x8 = astuple(x6, x7)\n    x9 = dmirror(I)\n    x10 =658(x8, x9)\n    x11 = combine(x3, x10)\n    x12 = ofcolor(x11, x5)\n    x13 = difference(x1, x12)\n    x14 = rbind(argmin, x13)\n    x15 = rbind(sfilter, x15)\n    x16 = compose(x14, x15)\n    x17 = lbind(fork, fly)\n    x18 = lbind(x17, identity)\n    x19 = lbind(rbind, astuple)\n    x20 = compose(x18, x19)\n    x21 = lbind(compose, x16)\n    x22 = rbind(x41, x21)\n    x23 = lbind(rbind, intersection)\n    x24 = chain(x22, x23, x8)\n    x25 = lbind(compose, x17)\n    x26 = x25(x12)\n    x27 = rbind(rapply, x25)\n    x28 = compose(initset, x12)\n    x29 = chain(first, x27, x28)\n    x30 = extract(x12, x29)\n    x31 = x30(I)\n    x32 = palette(I)\n    x33 = first(x32)\n    x34 = ulcorner(x30)\n    x35 = dmirror(x34)\n    x36 = shape(x30)\n    x37 = add(x36, x39)\n    x38 = astuple(x37, x34)\n    x39 = canvas(x30, x38)\n    x40 = asindices(x39)\n    x41 = apply(urcorner,"], [1.1, "def solve_4298d118(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = chain(x4, x5, color)\n    x7 = compose(maximum, shape)\n    x8 = fork(apply, x7, x6)\n    x9 = maximum(x2)\n    x10 = palette(I)\n    x11 = remove(x9, x10)\n    x12 = lbind(outbox, I)\n    x13 = compose(x12, objects)\n    x14 = arg113(x11, x13)\n    x15 = rightmost(x14)\n    x16 = totuple(x15)\n    x17 = apply(normalize, x16)\n    x18 = color(x14)\n    x19 = lbind(replace, x18)\n    x20 = rbind(compose, initset)\n    x21 = lbind(rbind, difference)\n    x22 = chain(x20, x21, color)\n    x23 = apply(x22, x17)\n    x24 = ofcolor(I, x9)\n    x25 = rbind(sfilter, x24)\n    x26 = chain(positive, size, x25)\n    x27 = mfilter(x23, x26)\n    x28 = equality(x27, ONE)\n    x29 = branch(x28, x22, x27)\n    x30 = rbind(colorcount, x18)\n    x31 = argmax(x29, x30)\n    x32 = UNITY(x31)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, x32)\n    x35 = colorfilter(x18, x9)\n    x36 = rbind(vmatching, x34)\n    x37 = fork(both, x35, x36)\n    x38 = x37(x31)\n    x39 = fill(I, x8, x38)\n    x40 =272("], [1.1, "def solve_d5637f2d(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = equality(x5, ZERO)\n    x7 = branch(x6, identity, vmirror)\n    x8 = x7(x4)\n    x9 = ofcolor(x8, EIGHT)\n    x10 = uppermost(x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, identity, hmirror)\n    x13 = x12(x8)\n    x14 = ofcolor(x13, EIGHT)\n    x15 = ofcolor(x13, TWO)\n    x16 = rbind(shoot, DOWN)\n    x17 = mapply(x16, x14)\n    x18 = height(x13)\n    x19 = apply(first, x15)\n    x20 = insert(ZERO, x19)\n    x21 = insert(x18, x19)\n    x22 = apply(decrement, x21)\n    x23 = order(x20, identity)\n    x24 = order(x22, identity)\n    x25 = size(x15)\n    x26 = increment(x25)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = apply(tojvec, x27)\n    x29 = pair(x23, x24)\n    x30 = lbind(sfilter, x17)\n    x31 = compose(first, last)\n    x32 = chain(decrement, first, first)\n    x33 = fork(greater, x31, x32)\n    x34 = chain(increment, last, first)\n    x35 = fork(greater, x34, x31)\n    x36 = fork(both, x33, x35)\n    x37 = lbind(lbind, astuple)\n    x38 = lbind(compose, x36)\n    x39 = chain(x30, x38, x37)\n    x40"], [1.1, "def solve_5f9f8e92(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = astuple(color, ORIGIN)\n    x2 = astuple(color, TWO)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(x655, x8)\n    x10 = astuple(xcompose, initset)\n    x11 = lbind(contained, x10)\n    x12 = compose(x11, last)\n    x13 = sfilter(x5, x12)\n    x14 = upscale(x13, TWO)\n    x15 = shape(x13)\n    x16 = add(x15, RIGHT)\n    x17 = crop(x13, UP_BY_ZERO, x16)\n    x18 = asobject(x17)\n    x19 = multiply(UNITY, x15)\n    x20 = crop(x18, DOWN_LEFT, x19)\n    x21 = apply(x16, x20)\n    x22 = paint(x17, x21)\n    x23 = crop(x18, UNITY, x15)\n    x24 = repeat(x23, ONE)\n    x25 = combine(x28, x24)\n    x26 = sfilter(x25, x12)\n    x27 = fork(combine, first, last)\n    x28 = apply(x27, x26)\n    x29 = height(x12)\n    x30 = lbind(repeat, x29)\n    x31 = apply(x30, x27)\n    x32 = combine(x28, x31)\n    x33 = branch(x37, x32, x29)\n    x34 = apply(double, x30)\n    x35 = divide(x34, TWO)\n    x36 = apply(x27, x30)\n    x37 = branch(x37, x36, x29)\n    x38 = branch(x37, x37, x28)\n    "], [1.1, "def solve_fc1c4f8f(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = Faff27(I)\n    x3 = toindices(x2)\n    x4 = difference(x1, x3)\n    x5 = toobject(x4, I)\n    x6 = size(x5)\n    x7 = positive(x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = objects(x9, T, F, T)\n    x11 = color(x10)\n    x12 = leftmost(x11)\n    x13 = leftmost(x12)\n    x14 = subtract(x13, x12)\n    x15 = astuple(x14, x13)\n    x16 = repeat(x9, x15)\n    x17 = x8(x9)\n    x18 = x8(x16)\n    x19 = hsplit(x17, x18)\n    x20 = hsplit(x19, x19)\n    x21 = merge(x20)\n    x22 = last(x21)\n    x23 = remove(x22, x30)\n    x24 = last(x23)\n    x25 = last(x24)\n    x26 = first(x23)\n    x27 = hupscale(x25, x26)\n    x28 = identity(x27)\n    x29 = x8(x22)\n    x30 = x9(x222)\n    x31 =60713(x29)\n    x32 = hupscale(x30, x31)\n    x33 = identity(x32)\n    x34 = hconcat(x29, x33)\n    x35 = hconcat(x34, x28)\n    x36 = vconcat(x35, x28)\n    x37 = vconcat(x36, x28)\n    x38 = astuple(x24, x270)\n    x39 = astuple(x37, x38)\n    x40 = combine(x32, x39)\n    x41 = paint(x40, x33)\n    O = x8(x41)\n"], [1.1, "def solve_476652e6(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = x2(I, TWO)\n    x4 = order(x3, numcolors)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = palette(x5)\n    x8 = remove(ZERO, x7)\n    x9 = other(x8, x6)\n    x10 = branch(x5, height, width)\n    x11 = x10(x6)\n    x12 = astuple(ONE, x11)\n    x13 = canvas(x9, x12)\n    x14 = ofcolor(x13, x6)\n    x15 = mostcolor(x14)\n    x16 = matcher(first, x15)\n    x17 = compose(flip, x16)\n    x18 = rbind(sfilter, x17)\n    x19 = rbind(occurrences, x13)\n    x20 = compose(x19, x18)\n    x21 = apply(x20, x9)\n    x22 = dmirror(x21)\n    x23 = replace(x22, x10, x67)\n    x24 = ofcolor(x23, x6)\n    x25 = ofcolor(x23, x12)\n    x26 = intersection(x24, x25)\n    x27 = fill(x23, ZERO, x26)\n    x28 = astuple(ONE, THREE)\n    x29 = canvas(x9, x28)\n    x30 = dmirror(x29)\n    x31 = fill(x30, x7, x279)\n    x32 = x2(x31)\n    x33 = initset(x32)\n    x34 = insert(x62, x33)\n    x35 = product(x34, x34)\n    x36 = order(x35, identity)\n    x37 = ofcolor(x36, x6)\n    x38 = last(x37)\n    x39 = remove(x38, x37)\n    x40 = first(x39)\n    x"], [1.1, "def solve_8d7c3cda(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = extract(x2, x4)\n    x6 =8776cd78\n    \"\"\"\n    x7 = backdrop(x5)\n    x8 = shape(I)\n    x9 = add(TWO, x8)\n    x10 = canvas(x1, x9)\n    x11 = asobject(I)\n    x12 = shift(x11, UNITY)\n    x13 = paint(x10, x12)\n    x14 = double(x3)\n    x15 = power(outbox, x14)\n    x16 = chain( backdrop, x15, initset)\n    x17 = x16(ulcorner)\n    x18 = x16(TWO, x16)\n    x19 = shift(x11, x18)\n    x20 = paint(x13, x19)\n    x21 = ulcorner(x5)\n    x22 = index(x20, x21)\n    x23 = recolor(x1, x22)\n    x24 = paint(x20, x23)\n    x25 = branch(x3, x24, x16)\n    x26 = shape(I)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = product(x27, x27)\n    x29 = lbind(multiply, x287)\n    x30 = apply(x29, x28)\n    x31 = lbind(shift, x12)\n    x32 = mapply(x31, x30)\n    x33 = paint(x20, x32)\n    x34 = branch(x26, UNITY, DOWN_LEFT)\n    x35 = apply(x34, x29)\n    x36 = pair(x35, x31)\n    x37 = size(x36)\n    x38 = positive(x37)\n    x39 = branch(x33, RIGHT, x38)\n    x40 = apply(x39, x36)\n    x41"], [1.1, "def solve_414b7284(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = palette(I)\n    x2 = compose(maximum, shape)\n    x3 = argmin(x1, x2)\n    x4 = canvas(x3, THREE_BY_THREE)\n    x5 = colorcount(I, ZERO)\n    x6 = dmirror(x4)\n    x7 = objects(x6, T, F, T)\n    x8 = argmin(x7, size)\n    x9 = repeat(x8, ONE)\n    x10 = combine(x7, x9)\n    x11 = color(x10)\n    x12 = leftmost(x11)\n    x13 = width(I)\n    x14 = interval(ONE, x13, ONE)\n    x15 = leftmost(x11)\n    x16 = interval(ONE, x15, ONE)\n    x17 = pair(x14, x16)\n    x18 = sizefilter(x17, x11)\n    x19 = apply(invert, x18)\n    x20 = lbind(sfilter, x18)\n    x21 = lbind(matcher, partition)\n    x22 = compose(x21, x20)\n    x23 = chain(size, x20, x22)\n    x24 = sfilter(x19, x23)\n    x25 = chain(increment, minimum, x24)\n    x26 =745 to compose(x25, x20)\n    x27 = fork(repeat, x26, x211)\n    x28 = sfilter(x6, x27)\n    x29 = combine(x27, x28)\n    x30 = lbind(recolor, x11)\n    x31 = lbind(mapply, x30)\n    x32 = fork(paint, identity, x31)\n    x33 = compose(x32, x20)\n    x34 = ofcolor(I, x3)\n    x35 = mapply(x33, x34)\n    x36 = ofcolor(I, FOUR)\n    x37 = mapply(x36, x36)\n    x38 = combine(x35, x37)\n    x39 = paint(I"], [1.1, "def solve_256285cf(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_e6e4b6a8(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = compose(positive, size)\n    x2 = rbind(sfilter, hline)\n    x3 = chain(x1, x2, frontiers)\n    x4 = chain(size, dedupe, first)\n    x5 = chain(size, dedupe, last)\n    x6 = fork(greater, x4, x5)\n    x7 = fork(both, x3, x6)\n    x8 = astuple(identity, dmirror)\n    x9 = astuple(cmirror, hmirror)\n    x10 = combine(x8, x9)\n    x11 =040(x10)\n    x12 = objects(x11, T, F, T)\n    x13 = merge(x12)\n    x14 = shift(x13, TWO)\n    x15 = paint(x3, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = remove(x16, x15)\n    x18 = compose(positive, size)\n    x19 = rbind(sfilter, x18)\n    x20 = chain(x17, x19, frontiers)\n    x21 = merge(x12)\n    x22 = chain(x19, x19, shape)\n    x23 = chain(size, x22, first)\n    x24 = compose(increment, x23)\n    x25 = power(x24, FOUR)\n    x26 = x25(x6)\n    x27 = shape(x26)\n    x28 = canvas(ZERO, x27)\n    x29 = \"b567a423(x26)\n    x30 = chain(size, dedupe, first)\n    x31 = equality(x30, x22)\n    x32 = x31(x16)\n    x33 = first(x32)\n    x34 = last(x32)\n    x35 = fill(x16, THREE, x34)\n    x36 = shift(x33, x35)\n    x37 =74ddupe(x36)\n    x38 = paint(x35, x37)\n    O = trim(x38)\n    return O"], [1.1, "def solve_55b85df0(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = compose(flip, x2)\n    x4 = rbind(sfilter, x3)\n    x5 = replace(x1, FIVE, ZERO)\n    x6 = x4(x5)\n    x7 = asobject(x6)\n    x8 = apply(first, x7)\n    x9 = paint(I, x8)\n    x10 = fgpartition(x9)\n    x11 = merge(x10)\n    x12 = normalize(x11)\n    x13 = width(x12)\n    x14 = subtract(x13, TWO)\n    x15 = height(x12)\n    x16 = astuple(x15, x14)\n    x17 = crop(x12, ORIGIN, x16)\n    x18 = hupscale(x17, x12)\n    x19 = solve(x18, dmirror)\n    x20 = astuple(x15, x16)\n    x21 = crop(x20, ORIGIN, x20)\n    x22 = hupscale(x21, x12)\n    x23 =\n    \"\"\"\n    x24 = hmirror(x12)\n    x25 = vconcat(x22, x24)\n    x26 = vconcat(x25, x12)\n    O = compress(x26)\n    return O"], [1.1, "def solve_26d2dd39(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 =2dee509493\n    x2 = dmirror(I)\n    O = papply(pair, I, x1)\n    return O"], [1.1, "def solve_91502675(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = sizefilter(x1, FOUR)\n    x3 = fork(equality, height, width)\n    x4 = extract(x2, x3)\n    x5 = other(x1, x4)\n    x6 = color(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = subtract(FOUR, x11)\n    x13 = increment(x12)\n    x14 =255(I)\n    x15 = canvas(x6, x14)\n    x16 = lbind(ofcolor, I)\n    x17 =699(x16, x13)\n    x18 = subgrid(x5, I)\n    x19 = hconcat(x17, x18)\n    x20 = hconcat(x19, x17)\n    x21 = vconcat(x19, x20)\n    x22 = vconcat(x21, x17)\n    x23 = combine(x19, x22)\n    O = fill(x15, x6, x23)\n    return O"], [1.1, "def solve_acaa386b(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 =666(ZERO, x3)\n    x9 =66(d3644, x8)\n    x10 = shape(I)\n    x11 = decrement(x10)\n    x12 = index(I, x11)\n    x13 = subtract(FIVE, x12)\n    x14 = crop(I, ORIGIN, x9)\n    x15 = crop(I, x13, x7)\n    x16 = width(x15)\n    x17 = astuple(x16, ORIGIN)\n    x18 = crop(x15, ORIGIN, x17)\n    x19 = vupscale(x18, x14)\n    x20 = hupscale(x19, x12)\n    x21 = rbind(shoot, UNITY)\n    x22 = asindices(x14)\n    x23 = remove(x22, x14)\n    x24 = remove(x22, x23)\n    x25 = intersection(x22, x24)\n    x26 = lbind(occurrences, x15)\n    x27 = compose(x26, last)\n    x28 = fork(combine, first, x27)\n    x29 = product(x15, x17)\n    x30 = sfilter(x29, x28)\n    x31 = fork(shift, first, last)\n    x32 = mapply(x31, x30)\n    O = paint(x15, x32)\n    return O"], [1.1, "def solve_957376a9(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = replace(x6, x3, x4)\n    x8 = objects(x7, T, F, T)\n    x9 = lbind(colorfilter, x8)\n    x10 = chain(merge, x9, palette)\n    x11 = objects(x7, T, F, T)\n    x12 = sfilter(x11, x10)\n    x13 = rbind(gravitate, x12)\n    x14 = compose(x13, toivec)\n    x15 = fork(add, x14, x12)\n    x16 = fork(connect, x15, output:\n    x17 = mapply(x16, x13)\n    O = fill(x7, x3, x17)\n    return O"], [1.1, "def solve_9f4e5183(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = x6(I)\n    x8 = rbind(sfilter, x7)\n    x9 = compose(dmirror, x8)\n    x10 = rbind(sfilter, x9)\n    x11 = compose(vmirror, x10)\n    x12 = dmirror(I)\n    x13 = x11(x12)\n    x14 =37(x13)\n    x15 = width(x13)\n    x16 = decrement(x15)\n    x17 = tojvec(x16)\n    x18 = connect(ORIGIN, x17)\n    x19 = height(x13)\n    x20 = decrement(x19)\n    x21 = toivec(x20)\n    x22 = connect(ORIGIN, x21)\n    x23 = size(x2)\n    x24 = equality(x23, ZERO)\n    x25 = branch(x24, tojvec, toivec)\n    x26 = branch(x24, bottomhalf, x25)\n    x27 = order(x28, x26)\n    x28 = apply(x11, x27)\n    O = x11(x28)\n    return O"], [1.1, "def solve_5e81a8ce(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = trim(I)\n    x2 = repeat(x1, ONE)\n    x3 = toobject(x2, I)\n    x4 = numcolors(x3)\n    x5 = vmirror(x4)\n    x6 = hmirror(x4)\n    x7 = numcolors(x6)\n    x8 = add(TWO, x7)\n    x9 = papply(insert, x3, x8)\n    x10 = toobject(x9, I)\n    x11 = decrement(x10)\n    x12 = objects(x11, F, F, T)\n    x13 = first(x12)\n    x14 =90000009x13\n    x15 = leftmost(x13)\n    x16 = decrement(x15)\n    x17 = tojvec(x16)\n    x18 = shift(x3, x17)\n    x19 = shift(x3, x18)\n    x20 = fork(combine, vfrontier, hfrontier)\n    x21 = compose(x20, initset)\n    x22 = fork(combine, x19, x21)\n    x23 = rapply(x18, x22)\n    x24 = mapply(x23, x1)\n    O = paint(x14, x24)\n    return O"], [1.1, "def solve_0fd9de86(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = box(I)\n    x2 =66666666(x1, I)\n    x3 = equality(x2, TWO)\n    x4 = branch(x3, hsplit, vsplit)\n    x5 = x4(I, TWO)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 = palette(x6)\n    x9 = palette(x7)\n    x10 = intersection(x8, x9)\n    x11 = first(x10)\n    x12 = shape(x6)\n    x13 = canvas(x11, x12)\n    x14 = ofcolor(x6, x12)\n    x15 = ofcolor(x7, x12)\n    x16 = intersection(x14, x15)\n    O = fill(x13, TWO, x16)\n    return O"], [1.1, "def solve_b3453d12(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =372(x2, I)\n    x4 = shape(I)\n    x5 = multiply(x4, x4)\n    x6 = canvas(ZERO, x5)\n    x7 = rbind(multiply, x6)\n    x8 = apply(x7, x3)\n    x9 = height(I)\n    x10 = width(I)\n    x11 = divide(x9, x10)\n    x12 = increment(x11)\n    x13 = subtract(x12, ONE)\n    x14 = shift(x8, x13)\n    x15 =873(x14)\n    x16 = last(x14)\n    x17 = remove(x16, x14)\n    x18 = last(x17)\n    x19 = canvas(ZERO, x4)\n    x20 = matcher(first, x8)\n    x21 =sfilter(x19, x20)\n    x22 = shift(x19, x21)\n    O = fill(x21, THREE, x22)\n    return O"], [1.1, "def solve_2214e8a1(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 =8885(I)\n    x2 = mostcolor(I)\n    x3 = shape(I)\n    x4 = canvas(x2, x3)\n    x5 = hconcat(I, x4)\n    x6 = objects(x5, F, F, T)\n    x7 = compose(last, centerofmass)\n    x8 = order(x6, x7)\n    x9 =159(x8)\n    x10 = lbind(contained, ZERO)\n    x11 = compose(x10, palette)\n    x12 = sfilter(x8, x11)\n    x13 = size(x12)\n    x14 = interval(ZERO, x13, ONE)\n    x15 = pair(x4, x14)\n    x16 = mapply(first, x15)\n    x17 = mapply(last, x15)\n    x18 = fill(x4, THREE, x16)\n    O = fill(x18, FOUR, x17)\n    return O"], [1.1, "def solve_ad1c5677(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = subgrid(I, I)\n    x2 = trim(x1)\n    x3 = replace(x2, ONE, ZERO)\n    x4 = tojvec(Sfilter)\n    x5 =787\n    7204399287\n    4862897883\n    9972237075\n    \"\"\"\n    x1 = lefthalf(x3)\n    x2 = righthalf(x3)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = fill(x3, ONE, x9)\n    return O"], [1.1, "def solve_e3219962(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 =1111(I, ZERO)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = fill(x2, ZERO, x1)\n    return O"], [1.1, "def solve_d5333426(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = switch(I, EIGHT, TWO)\n    x2 = switch(x1, TWO, ONE)\n    x3 = switch(x2, EIGHT, ONE)\n    x4 = switch(x3, EIGHT, FOUR)\n    O = switch(x4, lowermost,\n    return O"], [1.1, "def solve_5060fb2b(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = tophalf(I)\n    x5 = lefthalf(x4)\n    x6 = tophalf(I)\n    x7 = righthalf(x6)\n    x8 = bottomhalf(I)\n    x9 = righthalf(x8)\n    x10 = bottomhalf(I)\n    x11 = lefthalf(x9)\n    x12 = righthalf(x11)\n    x13 =122200(x2, x12)\n    x14 =122233\n    x15 = merge(x1)\n    x16 = bottomhalf(x2)\n    x17 = lefthalf(x16)\n    x18 = bottomhalf(x2)\n    x19 = righthalf(x17)\n    x20 = width(x13)\n    x21 =145(x13)\n    x22 = astuple(x20, x21)\n    x23 = crop(x13, ORIGIN, x22)\n    x24 = ofcolor(x23, x3)\n    x25 =19color(x24)\n    x26 = dmirror(x23)\n    x27 = invert(x26)\n    x28 = tojvec(x27)\n    x29 = double(xdneighbors)\n    x30 = interval(x29, x27, ONE)\n    x31 = lbind(shift, x25)\n    x32 = apply(x31, x30)\n    x33 = mapply(x27, x32)\n    O = fill(x23, x5, x33)\n    return O"], [1.1, "def solve_db412776(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = switch(I, dmirror, identity)\n    x2 = astuple(x1, x1)\n    x3 = astuple(FOUR, EIGHT)\n    x4 = canvas(NEG_ONE, x3)\n    x5 =9465(x4)\n    x6 = rbind(toobject, x1)\n    x7 = compose(x6, toindices)\n    x8 = rbind(colorcount, x1)\n    x9 = matcher(x8, chain(x8, x7)\n    x10 = matcher(x8, TWO)\n    x11 = fork(both, x9, x10)\n    x12 = extract(x5, x11)\n    x13 =124indices(x12)\n    x14 =manhattan(x13, x5)\n    x15 = multiply(x14, UNITY)\n    x16 = canvas(NEG_ONE, x15)\n    x17 = fgpartition(x16)\n    x18 = merge(x17)\n    x19 = center(x18)\n    x20 = branch(x19, x16, x17)\n    x21 = subtract(x20, x19)\n    x22 = astuple(NEG_TWO, x21)\n    x23 = order(x5, x22)\n    x24 = lbind(contained, ZERO)\n    x25 = sfilter(x2, x24)\n    x26 = lbind(shift, x21)\n    x27 = compose(x26, toindices)\n    x28 = mapply(x27, x23)\n    x29 = combine(x28, x25)\n    x30 = shift(x29, x3)\n    x31 = compose(x5, x27)\n    x32 = mapply(x31, x30)\n    x33 = combine(x30, x32)\n    x34 = paint(x16, x33)\n    O = x4(x34)\n    return O"], [1.1, "def solve_38e5102b(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(d687, x5)\n    x7 =77(x5)\n    x8 =77(x6)\n    x9 =x7(I)\n    x10 = x6(x9)\n    x11 = fork(subtract, height, width)\n    x12 = lbind(ofcolor, x10)\n    x13 = palette(x12)\n    x14 = compose(x11, x12)\n    x15 = argmin(x13, x14)\n    x16 = other(x9, x15)\n    x17 = ofcolor(x10, x16)\n    x18 = outbox(x17)\n    x19 = toobject(x18, x10)\n    x20 = mostcolor(x19)\n    x21 = initset(x16)\n    x22 = rbind(manhattan, x21)\n    x23 = argmin(x25, x22)\n    x24 = other(x23, x20)\n    x25 = ofcolor(x10, x24)\n    x26 = combine(x19, x25)\n    x27 = fill(I, x24, x26)\n    x28 = difference(x27, x26)\n    O = fill(x28, x24, x28)\n    return O"], [1.1, "def solve_91f9ab2c(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = shape(I)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(I, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmin(x11, numcolors)\n    x13 = normalize(x12)\n    x14 = toindices(x13)\n    x15 = increment(x4)\n    x16 = increment(x15)\n    x17 = increment(x5)\n    x18 = increment(x17)\n    x19 = astuple(x16, x18)\n    x20 = lbind(multiply, x19)\n    x21 = apply(x20, x14)\n    x22 = lbind(shift, x14)\n    x23 = mapply(x22, x21)\n    x24 = paint(x10, x23)\n    x25 = objects(x24, F, T, T)\n    x26 = lbind(occurrences, x24)\n    x27 = compose(x26, x24)\n    x28 = fork(combine, x27, x25)\n    x29 =21826(x28, x7)\n    x30 = palette(x29)\n    x31 = rbind(contained, x30)\n    x32 = argmin(x30, x31)\n    x33 =12(x32)\n    x34 =210(x33)\n    x35 = ofcolor(x34, x41)\n    x36 = ofcolor(x34, x5)\n    x37 = combine(x35, x36)\n    x38 = intersection(x35, x37)\n    O = fill(x24, ONE, x38)\n    return O"], [1.1, "def solve_962e4674(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =22izter(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [1.1, "def solve_68ff15a2(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 =6666(I)\n    x2 =6006666(I)\n    x3 = hmirror(x2)\n    O = vconcat(I, x3)\n    return O"], [1.1, "def solve_4acb4ea9(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = replace(I, ONE, ZERO)\n    x4 = colorfilter(x2, x3)\n    x5 = argmax(x4, size)\n    x6 = color(x5)\n    x7 = subgrid(x5, I)\n    x8 = fork(insert, identity, identity)\n    x9 = width(x7)\n    x10 = insert(x9, x7)\n    x11 = x8(x10)\n    x12 = width(x7)\n    x13 = increment(x12)\n    x14 = interval(ZERO, x13, x ONE)\n    x15 = subgrid(x5, x7)\n    x16 = insert(x15, x14)\n    x17 = rightmost(x16)\n    x18 = lbind(greater, x17)\n    x19 = compose(x18, uppermost)\n    x20 = rbind(sfilter, x19)\n    x21 = chain(x17, x20, frontiers)\n    x22 = lbind(recolor, x6)\n    x23 = compose(x22, color)\n    x24 = rbind(sfilter, x23)\n    x25 = chain(x10, x24, asobject)\n    x26 = lbind(shift, x8)\n    x27 = chain(x26, x24, x27)\n    x28 = rbind(mapply, x27)\n    x29 = compose(x28, x25)\n    x30 = lbind(add, x17)\n    x31 = chain(x30, x26, outbox)\n    x32 = fork(combine, x29, x31)\n    x33 = mapply(x32, x14)\n    O = paint(x3, x33)\n    return O"], [1.1, "def solve_9e663d55(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = decrement(x2)\n    x4 = index(I, x3)\n    x5 = rbind(shoot, UP_RIGHT)\n    x6 = canvas(x1, x4)\n    x7 = matcher(first, FOUR)\n    x8 = compose(flip, x7)\n    x9 = extract(x6, x8)\n    x10 = color(x9)\n    x11 = objects(I, T, F, T)\n    x12 = sizefilter(x11, ONE)\n    x13 = merge(x12)\n    x14 =111(x13)\n    x15 = palette(x14)\n    x16 = lbind(colorcount, x14)\n    x17 = arguple(x16, UNITY)\n    x18 = lbind(colorcount, x14)\n    x19 = increment(x17)\n    x20 = increment(x18)\n    x21 = neighbors(ORIGIN)\n    x22 = mapply(neighbors, x21)\n    x23 = astuple(x17, x20)\n    x24 = lbind(multiply(x23)\n    x25 = apply(x24, x22)\n    x26 = apply(first, x25)\n    x27 =4444(x26)\n    x28 = merge(x26)\n    x29 = paint(I, x28)\n    x30 = astuple(x17, x20)\n    x31 = astuple(x27, x30)\n    x32 = hmirror(x31)\n    x33 = vmirror(x32)\n    x34 =111(x33)\n    x35 = hmirror(x34)\n    x36 = vmirror(x35)\n    x37 = dmirror(x36)\n    x38 = combine(x33, x37)\n    x39 = paint(x38, x36)\n    O = fill(x39, x10, x38)\n    return O"], [1.1, "def solve_fc1e09c9(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = leastcommon(x3)\n    x5 = apply(last, x2)\n    x6 = ofcolor(I, x4)\n    x7 = intersection(x6, x5)\n    x8 =64e8x777\n    x9 = fill(I, TWO, x8)\n    O = fill(x9, ONE, x7)\n    return O"], [1.1, "def solve_07657b9e(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = increment(x4)\n    x13 = add(x12, x11)\n    x14 = canvas(x3, x13)\n    x15 = asobject(x8)\n    x16 = shift(x15, UNITY)\n    x17 = paint(x14, x16)\n    x18 =01(x1)\n    x19 = shift(x17, UNITY)\n    O = paint(x17, x19)\n    return O"], [1.1, "def solve_2866801c(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor = x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [1.1, "def solve_57c88724(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind( frontiers, I)\n    x2 = compose(size, x1)\n    x3 = matcher(x2, ONE)\n    x4 = shape(I)\n    x5 = canvas(ONE, x4)\n    x6 = lbind(hmatching, I)\n    x7 = compose(x6, x3)\n    x8 = fork(either, vline, hline)\n    x9 = fork(both, x7, x8)\n    x10 = sfilter(x5, x9)\n    x11 = compose(size, x1)\n    x12 = argmin(x10, x11)\n    x13 =1111(x12, I)\n    x14 = delta(x13)\n    O = fill(x5, ONE, x14)\n    return O"], [1.1, "def solve_c794f04d(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = shape(I)\n    x3 = halve(x2)\n    x4 = mostcolor(I)\n    x5 = canvas(x4, x3)\n    x6 = rbind(shoot, UP49 UNITY)\n    x7 = compose(x6, last)\n    x8 = fork(recolor, first, x7)\n    x9 = mapply(x8, x1)\n    O = paint(x5, x9)\n    return O"], [1.1, "def solve_560bc42b(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = power(equality, FOUR)\n    x9 = first(x7)\n    x10 = last(x7)\n    x11 = x8(x9)\n    x12 = x8(x10)\n    x13 = ofcolor(x11, FOUR)\n    x14 = ofcolor(x12, FOUR)\n    x15 = intersection(x13, x14)\n    x16 = first(x15)\n    x17 = shape(x11)\n    x18 = canvas(FIVE, x17)\n    x19 = fill(x18, THREE, x15)\n    x20 = decrement(x1)\n    x21 = chain(even, x20, tojvec)\n    x22 = crop(x11, x424, x21)\n    x23 = crop(x12, x22, x1)\n    x24 = crop(x12, x23, x11)\n    x25 = asobject(x21)\n    x26 = subgrid(x25, x24)\n    x27 = mostcolor(x26)\n    x28 = asobject(x23)\n    x29 =88170(x28)\n    x30 = matcher(first, x39)\n    x31 = compose(flip, x30)\n    x32 = sfilter(x29, x31)\n    O = fill(x19, TWO, x32)\n    return O"], [1.1, "def solve_aa7619a0(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = fork(subtract, toindices, box)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = fork(equality, toindices, corners)\n    x7 = fork(64b190, size, x6)\n    x8 = sfilter(x2, x7)\n    x9 = argmax(x8, x8)\n    x10 = color(x9)\n    x11 = ofcolor(I, x10)\n    x12 = inbox(x11)\n    x13 = toobject(x12, I)\n    x14 = mostcolor(x13)\n    x15 = ofcolor(I, x14)\n    x16 = inbox(x15)\n    x17 = urcorner(x16)\n    x18 = shoot(x17, NEG_UNITY)\n    x19 = lrcorner(x15)\n    x20 = shoot(x19, UNITY)\n    x21 = urcorner(x20)\n    x22 = shoot(x21,___UNITY)\n    x23 = combine(x18, x22)\n    x24 = rbind(shoot, x34)\n    x25 = mapply(x24, x23)\n    x26 = combine(x30, x25)\n    x27 = fill(I, x10, x26)\n    x28 = ofcolor(x27, x70)\n    x29 = rbind(adjacent, x8)\n    x30 = sfilter(x28, x29)\n    x31 = normalize(x30)\n    x32 = lbind(shift, x31)\n    x33 = mapply(x32, x30)\n    O = paint(x27, x33)\n    return O"], [1.1, "def solve_c7b9065c(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = DOWNd364b(x3)\n    x5 = fill(I, FOUR, x4)\n    x6 = hmirror(x5)\n    x7 =07(x6)\n    x8 = power(outbox, TWO)\n    x9 = chain(backdrop, x8, initset)\n    x10 = x9(x7)\n    x11 = leastcolor(x10)\n    x12 = replace(x5, x11, ZERO)\n    O = replace(x12, lefthalf, ZERO)\n    return O"], [1.1, "def solve_369bc17f(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = rbind(bordering, x14)\n    x16 = compose(x15, normalize)\n    x17 = apply(x16, x10)\n    x18 = rbind(adjacent, x3)\n    x19 =14(x14)\n    x20 = sfilter(x19, x18)\n    x21 = rbind(adjacent, x13)\n    x22 =14(x20)\n    x23 = sfilter(x21, x22)\n    x24 = combine(x18, x23)\n    x25 = cover(x9, x24)\n    x26 = fgpartition(x25)\n    x27 = merge(x26)\n    x28 = paint(x25, x27)\n    x29 = argmax(x28, size)\n    x30 = shift(x29, UNITY)\n    x31 = paint(x25, x30)\n    x32 = toindices(x3)\n    x33 = index(x25, x32)\n    x34 = difference(x33, x32)\n    O = fill(x39, x3, x34)\n    return O"], [1.1, "def solve_d96ffd89(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = sizefilter(x1, ONE)\n    x3 = lbind(fork, connect)\n    x4 = lbind(x3, identity)\n    x5 = lbind(extract, x2)\n    x6 = compose(x4, x5)\n    x7 = lbind(recolor, ONE)\n    x8 = chain(033708, x7, x6)\n    x9 = fork(paint, chain, x8)\n    x10 = chain(numcolors, x9, first)\n    x11 = compose(maximum, first)\n    x12 = fork(add, x11, x10)\n    x13 = compose(flip, x12)\n    x14 = sfilter(x2, x13)\n    x15 = size(x14)\n    x16 = positive(x15)\n    x17 = branch(x16, identity, dmirror)\n    x18 = x17(I)\n    x19 = partition(x18)\n    x20 = matcher(color, ONE)\n    x21 = compose(flip, x20)\n    x22 = ofcolor(x18, TWO)\n    x23 = sfilter(x22, x21)\n    x24 = fork(remove, last, identity)\n    x25 = lbind(colorcount, x18)\n    x26 = compose(x25, x42)\n    x27 = argmin(x23, x26)\n    x28 = ofcolor(x18, x27)\n    x29 = ofcolor(x18, TWO)\n    x30 = initset(x29)\n    x31 = rbind(manhattan, x30)\n    x32 = argmin(x28, x31)\n    x33 = mapply(x32, x28)\n    x34 = fill(x18, TWO, x33)\n    x35 = x17(x34)\n    x36 = ofcolor(x35, x27)\n    x37 = mapply(x16, x36)\n    O = fill(x35, TWO, x37)\n    return O"], [1.1, "def solve_57fce77f(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, T)\n    x4 = merge(x3)\n    x5 = mostcolor(x4)\n    x6 = palette(x1)\n    x7 = other(x6, x5)\n    x8 = switch(x6, x7, x1)\n    x9 =8506404699(x8)\n    x10 = astuple(SIX, FIVE)\n    x11 = canvas(x7, x10)\n    x12 = asindices(x11)\n    x13 = toobject(x12, I)\n    x14 = increment(x13)\n    x15 = mostcolor(I)\n    x16 = shift(x14, x15)\n    x17 = combine(x12, x16)\n    x18 = paint(x11, x17)\n    x19 = hmirror(x18)\n    x20 = objects(x19, T, F, T)\n    x21 = colorfilter(x20, x7)\n    x22 = rbind(adjacent, x21)\n    x23 = mfilter(x22, x22)\n    x24 = replace(x18, x5, xONE)\n    O = paint(x24, x23)\n    return O"], [1.1, "def solve_f8569f27(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(greater, THREE)\n    x3 = chain(x2, vmirror, dmirror)\n    x4 =535(I)\n    x5 = sfilter(x4, x3)\n    x6 = fork(combine, vfrontier, hfrontier)\n    x7 = x6(x5)\n    x8 = rbind(compose, initset)\n    x9 = lbind(rbind, manhattan)\n    x10 = chain(x8, x9, initset)\n    x11 = lbind(compose, initset)\n    x12 = chain(x11, x9, outbox)\n    x13 = compose(merge, x7)\n    x14 = fork(both, x12, x13)\n    x15 = fork(both, xO, x14)\n    x16 = apply(x15, x11)\n    x17 = decrement(x16)\n    x18 = tojvec(x17)\n    x19 = shoot(x18, UNITY)\n    x20 = mapply(x16, x19)\n    x21 = fill(I, ZERO, x20)\n    x22 = asobject(x21)\n    x23 = vmirror(x22)\n    x24 = index(x82, x23)\n    x25 = branch(x24, DOWN, RIGHT)\n    x26 = add(x25, x28)\n    x27 = ulcorner(x25)\n    x28 = add(x27, x28)\n    x29 = shift(x23, x28)\n    x30 = urcorner(x25)\n    x31 = add(x30, x28)\n    x32 = llcorner(x25)\n    x33 = add(x32, x28)\n    x34 = shift(x33, x24)\n    x35 = paint(x21, x29)\n    O = fill(x35, ZERO, x32_ulcorner)\n    return O"], [1.1, "def solve_33e654ed(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = eapply(d511117, x1)\n    O =7599(x2)\n    return O"], [1.1, "def solve_35fc5bab(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    x5 = mostcolor(x4)\n    x6 = objects(x2, T, F, F)\n    x7 = colorfilter(x6, x5)\n    x8 = compose(normalize, toindices)\n    x9 = apply(x8, x7)\n    x10 = x2(x9)\n    x11 = remove(x10, x9)\n    x12 = lbind(sfilter, x11)\n    x13 = lbind(matcher, vline)\n    x14 = chain(x12, x4, x13)\n    x15 =49filter(x12, x14)\n    x16 = difference(x12, x15)\n    x17 = compose(size, x16)\n    x18 = matcher(x17, ZERO)\n    x19 = lbind(sfilter, x15)\n    x20 = lbind(matcher, x18)\n    x21 = compose(x19, x20)\n    x22 = fork(valmax, x21, x17)\n    x23 = lbind(sfilter, x15)\n    x24 = lbind(matcher, x18)\n    x25 = compose(x23, x24)\n    x26 = fork(apply, x25, x21)\n    x27 = lbind(lbind, shift)\n    x28 = compose(x27, dneighbors)\n    x29 = fork(mapply, x28, x22)\n    x30 = fork(mapply, x28, xl)\n    x31 = fork(combine, x29, x30)\n    x32 = mapply(x31, x15)\n    O = paint(x1, x32)\n    return O"], [1.1, "def solve_7553e8e8(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = MN objectsize(x5)\n    x7 = colorcount(I, x3)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x3)\n    x10 = leftmost(x9)\n    x11 = ofcolor(I, x3)\n    x12 = rightmost(x11)\n    x13 = matcher(first, x8)\n    x14 = rbind(sfilter, x13)\n    x15 = chain(x12, delta, x14)\n    x16 = apply(x15, x11)\n    O = fill(I, x3, x16)\n    return O"], [1.1, "def solve_48e54ce9(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =indices(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = double(x width)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = merge(x10)\n    x12 = mostcolor(x11)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = rbind(sfilter, x14)\n    x16 = lbind(occurrences, x6)\n    x17 = compose(x16, x15)\n    x18 = fork(positive, size, x17)\n    x19 = lbind(rbind, subtract)\n    x20 = rbind(rapply, x11)\n    x21 = compose(initset, x18)\n    x22 = chain(first, x20, x21)\n    x23 = compose(x18, x22)\n    x24 = apply(x23, x3)\n    x25 =Contin solve(x24, x6)\n    x26 = cover(x6, x25)\n    x27 = compose(x26, ulcorner)\n    x28 = apply(x27, x02)\n    x29 = vmirror(x28)\n    x30 = multiply(x NEG_TWO, NEG_TWO)\n    x31 = apply(x30, x29)\n    x32 = asindices(x29)\n    x33 = ofcolor(x29, x12)\n    x34 = difference(x32, x33)\n    x35 = lrcorner(x24)\n    x36 = lbind(shift, x24)\n    x37 = mapply(x36, x31)\n    O = paint(x32, x37)\n    return O"], [1.1, "def solve_e1b8c13d(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = apply(normalize, x2)\n    x4 = astuple(NEG_TWO, ONE)\n    x5 = astuple(UNITY, x4)\n    x6 = shift(x3, x5)\n    x7 = rbind(argmin, x3)\n    x8 =44232000(x3)\n    x9 = lbind(rbind, manhattan)\n    x10 = compose(x9, initset)\n    x11 = fork(compose, x7, x10)\n    x12 = product(x1, x6)\n    x13 = fork(shift, identity, x12)\n    x14 = mapply(x13, x12)\n    O = paint(x1, x14)\n    return O"], [1.1, "def solve_ebb2bd74(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = EIGHT(I)\n    x2 = vmirror(x1)\n    O =:\n    (x2, vmirror)\n    return O"], [1.1, "def solve_dd5bcffe(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = rot180(I)\n    x2 = rot270(I)\n    x3 = rot180(x1)\n    x4 =81(x3)\n    x5 = fork(combine, vfrontier, hfrontier)\n    x6 = compose(x5, x4)\n    x7 = sfilter(x2, x6)\n    O = fill(x3, ZERO, x7)\n    return O"], [1.1, "def solve_b825be8b(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = x2(I, TWO)\n    x4 = fgpartition(x3)\n    x5 = merge(x4)\n    x6 = chain(double, numcolors, numcolors)\n    x7 = x6(x5)\n    x8 = compose(vmirror, x7)\n    x9 = power(x8, TWO)\n    x10 = x9(x4)\n    x11 = x9(x4)\n    x12 = toindices(x11)\n    x13 = apply(x8, x12)\n    x14 = contained(x10, x13)\n    x15 = flip(x14)\n    x16 = branch(x15, hmirror, vmirror)\n    x17 = x16(x15)\n    x18 =757(x17, x4)\n    x19 = chain(dmirror, asobject, x18)\n    x20 = matcher(x19, x17)\n    x21 = extract(x50, x20)\n    x22 = x21(x4)\n    x23 = x21(x11)\n    x24 = asindices(x23)\n    x25 =412(flip, x24)\n    x26 = x25(x24)\n    x27 = fill(x22, EIGHT, x25)\n    O = paint(x27, x26)\n    return O"], [1.1, "def solve_211e9ecd(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = rbind(Sfilter, vline)\n    x2 = compose(positive, size)\n    x3 = rbind(sfilter, hline)\n    x4 = compose(x2, x3)\n    x5 = chain(x1, x4, frontiers)\n    x6 = argmax(x5, x4)\n    x7 =6(I)\n    x8 = remove(x6, x7)\n    x9 = lbind(shift, x6)\n    x10 = height(x6)\n    x11 = divide(x10, x9)\n    x12 = width(x6)\n    x13 = divide(x12, x4)\n    x14 = astuple(x11, x13)\n    x15 = maximum(x14)\n    x16 = increment(x15)\n    x17 = interval(ONE, x16, ONE)\n    x18 = matcher(numcolors, x16)\n    x19 = lbind(shift, x6)\n    x20 = rbind(multiply, x15)\n    x21 = lbind(add, x20)\n    x22 = chain(x19, x21, invert)\n    x23 = fork(combine, x18, x22)\n    x24 = lbind(apply, x23)\n    x25 = rbind(colorcount, x6)\n    x26 = compose(x24, x25)\n    x27 = apply(x26, x52)\n    x28 = normalize(x6)\n    x29 = mapply(x28, x27)\n    x30 = shape(x29)\n    x31 = canvas(ZERO, x30)\n    O = paint(x31, x29)\n    return O"]], "bf699163": [[0.1607843137254902, "def solve_cae86563(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, F, F, T)\n    x6 = rbind(colorcount, ONE)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.1607843137254902, "def solve_701ae9e7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, T, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.1607843137254902, "def solve_3bc91ce3(I):\n    x1 = frontiers(I)\n    x2 = mfilter(x1, vline)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, F, T)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.2482843137254902, "def solve_ff6934ef(I):\n    x1 = palette(I)\n    x2 = remove(TWO, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, T, F, T)\n    x9 = colorfilter(x8, TWO)\n    x10 = size(x9)\n    x11 = double(x10)\n    x12 = interval(ZERO, x11, TWO)\n    x13 = apply(tojvec, x12)\n    x14 = astuple(ONE, NINE)\n    x15 = canvas(x4, x14)\n    x16 = fill(x15, ONE, x13)\n    x17 = hsplit(x16, THREE)\n    O = merge(x17)\n    return O"], [0.30490196078431375, "def solve_de92c2ea(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_5bdc5e08(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_5fa5bfea(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_126bd616(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_39069d30(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.3215686274509804, "def solve_1360f15b(I):\n    x1 = vmirror(I)\n    x2 = fgpartition(x1)\n    x3 = order(x2, size)\n    x4 = last(x3)\n    x5 = remove(x4, x3)\n    x6 = compose(toindices, normalize)\n    x7 = rbind(upscale, TWO)\n    x8 = chain(toindices, x7, normalize)\n    x9 = x6(x4)\n    x10 = rbind(intersection, x9)\n    x11 = chain(size, x10, x8)\n    x12 = argmax(x5, x11)\n    x13 = subgrid(x12, x1)\n    O = vmirror(x13)\n    return O"], [0.3215686274509804, "def solve_be1b59b4(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.3215686274509804, "def solve_90008deb(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 =color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.3215686274509804, "def solve_1fd87429(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.3215686274509804, "def solve_9ada3015(I):\n    x1 = vmirror(I)\n    x2 = fgpartition(x1)\n    x3 = order(x2, size)\n    x4 = last(x3)\n    x5 = remove(x4, x3)\n    x6 = compose(toindices, normalize)\n    x7 = rbind(upscale, TWO)\n    x8 = chain(toindices, x7, normalize)\n    x9 = x6(x4)\n    x10 = rbind(intersection, x9)\n    x11 = chain(size, x10, x8)\n    x12 = argmax(x5, x11)\n    x13 = subgrid(x12, x1)\n    O = vmirror(x13)\n    return O"], [0.3215686274509804, "def solve_7b32882e(I):\n    x1 = palette(I)\n    x2 = contained(ONE, x1)\n    x3 = contained(TWO, x1)\n    x4 = branch(x2, UNITY, TWO_BY_TWO)\n    x5 = branch(x3, RIGHT, x4)\n    x6 = fork(combine, vfrontier, hfrontier)\n    x7 = x6(x5)\n    x8 = canvas(ZERO, THREE_BY_THREE)\n    O = fill(x8, FIVE, x7)\n    return O"], [0.36851851851851847, "def solve_76d422e7(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.3931917211328976, "def solve_9d0463fa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = subgrid(x2, I)\n    x8 = palette(x7)\n    x9 = lbind(colorcount, x7)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.3931917211328976, "def solve_93b8e190(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.3931917211328976, "def solve_3d29bb24(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.3931917211328976, "def solve_49755f7a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.3931917211328976, "def solve_2e9466b2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.3931917211328976, "def solve_7d5d61aa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.3931917211328976, "def solve_196b5b15(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.3985185185185185, "def solve_780d8233(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = merge(x1)\n    x5 = fill(I, NEG_ONE, x4)\n    x6 = shape(I)\n    x7 = canvas(NEG_ONE, x6)\n    x8 = hconcat(x5, x7)\n    x9 = objects(x8, F, F, T)\n    x10 = rbind(other, x3)\n    x11 = compose(x10, palette)\n    x12 = fork(astuple, x11, ulcorner)\n    x13 = apply(x12, x9)\n    x14 = merge(x9)\n    x15 = fill(I, x3, x14)\n    x16 = paint(x15, x13)\n    O = compress(x16)\n    return O"], [0.4, "def solve_d4420644(I):\n    x1 = palette(I)\n    x2 = contained(ONE, x1)\n    x3 = contained(TWO, x1)\n    x4 = branch(x2, UNITY, TWO_BY_TWO)\n    x5 = branch(x3, RIGHT, x4)\n    x6 = fork(combine, vfrontier, hfrontier)\n    x7 = x6(x5)\n    x8 = canvas(ZERO, THREE_BY_THREE)\n    O = fill(x8, EIGHT, x7)\n    return O"], [0.4, "def solve_6eab0599(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, SIX)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, ONE, SEVEN)\n    x5 = canvas(x4, THREE_BY_THREE)\n    x6 = branch(x1, TWO, ZERO)\n    x7 = connect(ORIGIN, DOWN)\n    x8 = connect(ORIGIN, ZERO_BY_TWO)\n    x9 = combine(x7, x8)\n    O = fill(x5, TWO, x9)\n    return O"], [0.40763616557734206, "def solve_1d6999d9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_58b998dc(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_3785e926(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_5d78ca1c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_57eb1844(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_294ee897(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_30ef08e8(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_f1047c04(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_7e611380(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_1f263e3e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_5d96ebe9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_7d082c2b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_4229a6e9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_8054f488(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_273ed211(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_0870f33a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_5c19df38(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.41333791996330693, "def solve_4ecaa663(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = mostcolor(x2)\n    x4 = normalize(x2)\n    x5 = mostcolor(I)\n    x6 = shape(x2)\n    x7 = canvas(x5, x6)\n    O = fill(x7, x3, x4)\n    return O"], [0.4148148148148148, "def solve_44535b27(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = color(x3)\n    O = canvas(x4, TWO_BY_TWO)\n    return O"], [0.42592592592592593, "def solve_81aa2a4e(I):\n    x1 = objects(I, T, F, T)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = mostcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = extract(x1, x5)\n    O = subgrid(x6, I)\n    return O"], [0.4296296296296296, "def solve_02fda799(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = branch(x2, ONE, SEVEN)\n    O = canvas(x3, UNITY)\n    return O"], [0.49231481481481476, "def solve_1422fc15(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, T)\n    x4 = merge(x3)\n    x5 = astuple(FOUR, FOUR)\n    x6 = canvas(ZERO, x5)\n    x7 = paint(x6, x4)\n    O = rot90(x7)\n    return O"], [0.5232709913889689, "def solve_bc4df508(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5900055192264699, "def solve_57708b48(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5900055192264699, "def solve_04762ae7(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5902430555555556, "def solve_08336b1b(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5902430555555556, "def solve_9b4bb339(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5902430555555556, "def solve_e2449288(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5902430555555556, "def solve_e0a8035a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5902430555555556, "def solve_349b8865(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5916319444444444, "def solve_034242c8(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.5936739417989418, "def solve_aee26452(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [0.6163211951447245, "def solve_be72322f(I):\n    x1 =first(I)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(ONE, x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = objects(x6, T, F, F)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x5(x10)\n    return O"], [0.6199160165858457, "def solve_dde66ef1(I):\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [0.6260663018862516, "def solve_345ce9b2(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, x13, x16)\n    return O"], [0.631901366607249, "def solve_6d4fa3d9(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.6428952122854562, "def solve_4fb4dc53(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = objects(I, T, F, T)\n    x5 = totuple(x4)\n    x6 = apply(color, x5)\n    x7 = lbind(sfilter, x6)\n    x8 = lbind(matcher, identity)\n    x9 = chain(size, x7, x8)\n    x10 = valmax(x3, x9)\n    x11 = matcher(x9, x10)\n    x12 = sfilter(x3, x11)\n    x13 = lbind(colorcount, I)\n    x14 = argmin(x12, x13)\n    x15 = ofcolor(I, x14)\n    x16 = recolor(x14, x15)\n    x17 = apply(initset, x16)\n    x18 = remove(x16, x1)\n    x19 = lbind(argmin, x17)\n    x20 = lbind(rbind, manhattan)\n    x21 = compose(x19, x20)\n    x22 = fork(combine, identity, x21)\n    x23 = apply(x22, x18)\n    x24 = matcher(first, x14)\n    x25 = rbind(sfilter, x24)\n    x26 = chain(invert, ulcorner, x25)\n    x27 = fork(shift, identity, x26)\n    x28 = mapply(x27, x23)\n    x29 = normalize(x28)\n    x30 = shape(x29)\n    x31 = canvas(ZERO, x30)\n    O = paint(x31, x29)\n    return O"], [0.6428952122854562, "def solve_a7207c65(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = objects(I, T, F, T)\n    x5 = totuple(x4)\n    x6 = apply(color, x5)\n    x7 = lbind(sfilter, x6)\n    x8 = lbind(matcher, identity)\n    x9 = chain(size, x7, x8)\n    x10 = valmax(x3, x9)\n    x11 = matcher(x9, x10)\n    x12 = sfilter(x3, x11)\n    x13 = lbind(colorcount, I)\n    x14 = argmin(x12, x13)\n    x15 = ofcolor(I, x14)\n    x16 = recolor(x14, x15)\n    x17 = apply(initset, x16)\n    x18 = remove(x16, x1)\n    x19 = lbind(argmin, x17)\n    x20 = lbind(rbind, manhattan)\n    x21 = compose(x19, x20)\n    x22 = fork(combine, identity, x21)\n    x23 = apply(x22, x18)\n    x24 = matcher(first, x14)\n    x25 = rbind(sfilter, x24)\n    x26 = chain(invert, ulcorner, x25)\n    x27 = fork(shift, identity, x26)\n    x28 = mapply(x27, x23)\n    x29 = normalize(x28)\n    x30 = shape(x29)\n    x31 = canvas(ZERO, x30)\n    O = paint(x31, x29)\n    return O"], [0.6568015960038986, "def solve_abb7c25f(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, bottomhalf)\n    O = x2(I)\n    return O"], [0.6600575299564271, "def solve_1444204b(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6600575299564271, "def solve_4b150a71(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6600575299564271, "def solve_1e979e12(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6600575299564271, "def solve_4e2be6ec(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6600575299564271, "def solve_57021259(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6600575299564271, "def solve_69229a21(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.6600575299564271, "def solve_346786cc(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6600575299564271, "def solve_1b57659e(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6600575299564271, "def solve_19273021(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.660134929337232, "def solve_be4d29ee(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x7, x16)\n    x20 = ofcolor(x8, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, THREE, x21)\n    return O"], [0.6696587388610415, "def solve_0b860acc(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.6696587388610415, "def solve_e11328c7(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.6696587388610415, "def solve_e8445d78(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.674180469289165, "def solve_7a50eacb(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.674180469289165, "def solve_2e488234(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.6809463684463684, "def solve_8f4a6a22(I):\n    x1 = trim(I)\n    x2 = trim(x1)\n    x3 = tophalf(x2)\n    x4 = lefthalf(x3)\n    x5 = tophalf(x2)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(x2)\n    x8 = lefthalf(x7)\n    x9 = bottomhalf(x2)\n    x10 = righthalf(x9)\n    x11 = index(I, ORIGIN)\n    x12 = width(I)\n    x13 = decrement(x12)\n    x14 = tojvec(x13)\n    x15 = index(I, x14)\n    x16 = height(I)\n    x17 = decrement(x16)\n    x18 = toivec(x17)\n    x19 = index(I, x18)\n    x20 = shape(I)\n    x21 = decrement(x20)\n    x22 = index(I, x21)\n    x23 = compress(I)\n    x24 = asindices(x23)\n    x25 = box(x24)\n    x26 = corners(x24)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, x23)\n    x29 = color(x28)\n    x30 = palette(x2)\n    x31 = other(x30, x29)\n    x32 = replace(x4, x31, x11)\n    x33 = replace(x6, x31, x15)\n    x34 = replace(x8, x31, x19)\n    x35 = replace(x10, x31, x22)\n    x36 = hconcat(x32, x33)\n    x37 = hconcat(x34, x35)\n    O = vconcat(x36, x37)\n    return O"], [0.68125, "def solve_d32ee5bb(I):\n    x1 = index(I, ORIGIN)\n    x2 = equality(x1, TWO)\n    x3 = branch(x2, vsplit, hsplit)\n    x4 = x3(I, TWO)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = palette(x5)\n    x8 = palette(x6)\n    x9 = intersection(x7, x8)\n    x10 = first(x9)\n    x11 = shape(x5)\n    x12 = canvas(x10, x11)\n    x13 = ofcolor(x5, x10)\n    x14 = ofcolor(x6, x10)\n    x15 = intersection(x13, x14)\n    O = fill(x12, FIVE, x15)\n    return O"], [0.6837830785199206, "def solve_75ab1707(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_0cfcdfc1(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_7ecf000d(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_89e8ae4e(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_bf88c42d(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_89abf998(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_7906d4c3(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_d86facef(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_d9c45414(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_2849a157(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_8c0646b3(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_ab6c7f75(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_81e17c6d(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_3114fbfb(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_52ba8f2a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_85904b3a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_f8aab032(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_49007793(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_43b73717(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6901349293372321, "def solve_e7587275(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_da3ae983(I):\n    x1 = subgrid(I, I)\n    x2 = vmirror(x1)\n    x3 = equality(x2, I)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_8b6d368e(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_5ba9ea34(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_85a2e2db(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_57a3c5d0(I):\n    O = tophalf(I)\n    return O"], [0.6933068880437301, "def solve_6548c1cf(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = replace(x11, ONE, TWO)\n    return O"], [0.700481793212685, "def solve_dd62be86(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = ofcolor(I, ZERO)\n    x4 = astuple(x1, ONE)\n    x5 = crop(I, ORIGIN, x4)\n    x6 = hupscale(x5, x2)\n    O = fill(x6, ZERO, x3)\n    return O"], [0.700481793212685, "def solve_35adba73(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.700481793212685, "def solve_84a1782b(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_263d005f(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_e3b2d358(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_55485376(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_4904db5d(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_95a5b43b(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7026546999333007, "def solve_300d1f81(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.7037037037037037, "def solve_31ef29a4(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = first(x2)\n    x4 = neighbors(x3)\n    x5 = astuple(TEN, TEN)\n    x6 = canvas(ZERO, x5)\n    x7 = initset(x3)\n    x8 = fill(x6, x1, x7)\n    O = fill(x8, TWO, x4)\n    return O"], [0.709172269403161, "def solve_a44520b9(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(add, height, width)\n    x3 = compose(decrement, x2)\n    x4 = fork(equality, size, x3)\n    x5 = fork(difference, toindices, box)\n    x6 = compose(size, x5)\n    x7 = matcher(x6, ZERO)\n    x8 = sfilter(x1, x4)\n    x9 = difference(x1, x8)\n    x10 = sfilter(x9, x7)\n    x11 = merge(x1)\n    x12 = fill(I, TWO, x11)\n    x13 = merge(x8)\n    x14 = fill(x12, ONE, x13)\n    x15 = merge(x10)\n    O = fill(x14, SIX, x15)\n    return O"], [0.7167554635380722, "def solve_fbbe925c(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [0.7241016188672439, "def solve_b74b2ee6(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = subgrid(x5, I)\n    x7 = mostcolor(x6)\n    x8 = leastcolor(x6)\n    O = switch(x6, x7, x8)\n    return O"], [0.7275056027364944, "def solve_6f209644(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = chain(palette, trim, x2)\n    x4 = lbind(contained, THREE)\n    x5 = compose(x4, x3)\n    x6 = fork(add, height, width)\n    x7 = compose(decrement, x6)\n    x8 = fork(equality, size, x7)\n    x9 = mfilter(x1, x5)\n    x10 = mfilter(x1, x8)\n    x11 = replace(I, THREE, SIX)\n    x12 = fill(x11, TWO, x9)\n    O = fill(x12, ONE, x10)\n    return O"], [0.7338151265460182, "def solve_a7927a55(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.7338151265460182, "def solve_a1f7930d(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.7338151265460182, "def solve_47e25343(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.7338151265460182, "def solve_a36b0c17(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.7338151265460182, "def solve_3828d505(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.7341722694031612, "def solve_d8650412(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = lbind(colorcount, I)\n    x5 = argmin(x3, x4)\n    x6 = ofcolor(I, x1)\n    x7 = ofcolor(I, x5)\n    x8 = combine(x6, x7)\n    x9 = mapply(neighbors, x8)\n    x10 = difference(x9, x8)\n    x11 = toobject(x10, I)\n    x12 = leastcolor(x11)\n    x13 = ofcolor(I, x1)\n    x14 = first(x13)\n    x15 = initset(x14)\n    x16 = objects(I, T, F, F)\n    x17 = colorfilter(x16, x12)\n    x18 = lbind(adjacent, x8)\n    x19 = mfilter(x17, x18)\n    x20 = toindices(x19)\n    x21 = rbind(manhattan, x15)\n    x22 = chain(even, x21, initset)\n    x23 = sfilter(x20, x22)\n    x24 = fill(I, x5, x20)\n    O = fill(x24, x1, x23)\n    return O"], [0.7389341741650659, "def solve_4d8b92d5(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = apply(toindices, x6)\n    x8 = rbind(shoot, RIGHT)\n    x9 = compose(x8, center)\n    x10 = fork(recolor, color, x9)\n    x11 = mapply(x10, x6)\n    x12 = paint(I, x11)\n    x13 = width(I)\n    x14 = interval(ZERO, x13, ONE)\n    x15 = apply(double, x14)\n    x16 = apply(increment, x15)\n    x17 = apply(tojvec, x16)\n    x18 = prapply(shift, x7, x17)\n    x19 = merge(x18)\n    O = fill(x12, FIVE, x19)\n    return O"], [0.7389341741650659, "def solve_b3e6df2e(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.7400296972330871, "def solve_b7ea780c(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = mostcolor(I)\n    O = replace(x3, x4, ZERO)\n    return O"], [0.741832732082732, "def solve_283d0dbe(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.741832732082732, "def solve_3e317936(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.7433389360698277, "def solve_31ee8b3e(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.7433389360698277, "def solve_edc0bdf2(I):\n    O = rot270(I)\n    return O"], [0.7433389360698277, "def solve_3c5b9738(I):\n    O = rot180(I)\n    return O"], [0.7433389360698277, "def solve_ab3067be(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.7433389360698277, "def solve_3c97fd3c(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = fgpartition(I)\n    x6 = objects(I, T, F, F)\n    x3 = colorfilter(x6, x4)\n    x4 = rbind(bordering, I)\n    x5 = compose(flip, x4)\n    x6 = mfilter(x3, x5)\n    O = fill(I, ONE, x6)\n    return O"], [0.7433389360698277, "def solve_3c8b807a(I):\n    O = rot180(I)\n    return O"], [0.743544967886001, "def solve_98f7aec9(I):\n    x1 = mostcolor(I)\n    x2 = replace(I, x1, ZERO)\n    x3 = shoot(ORIGIN, UNITY)\n    O = underfill(x2, x1, x3)\n    return O"], [0.7436574074074074, "def solve_8bb78835(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = cover(I, x2)\n    x4 = chain(toivec, invert, height)\n    x5 = fork(shift, identity, x4)\n    x6 = mapply(x5, x1)\n    O = paint(x3, x6)\n    return O"], [0.7436960789269706, "def solve_eb11ea87(I):\n    O = dmirror(I)\n    return O"], [0.7436960789269706, "def solve_30e5060f(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_ec74704f(I):\n    x1 = fork(multiply, height, width)\n    x2 = partition(I)\n    x3 = argmax(x2, x1)\n    x4 = remove(x3, x2)\n    x5 = argmax(x4, x1)\n    x6 = other(x4, x5)\n    x7 = palette(I)\n    x8 = lrcorner(x5)\n    x9 = add(x8, UNITY)\n    x10 = llcorner(x5)\n    x11 = add(x10, DOWN_LEFT)\n    x12 = urcorner(x5)\n    x13 = add(x12, UP_RIGHT)\n    x14 = ulcorner(x5)\n    x15 = add(x14, NEG_UNITY)\n    x16 = shoot(x9, UNITY)\n    x17 = shoot(x11, DOWN_LEFT)\n    x18 = shoot(x13, UP_RIGHT)\n    x19 = shoot(x15, NEG_UNITY)\n    x20 = combine(x16, x17)\n    x21 = combine(x18, x19)\n    x22 = combine(x20, x21)\n    x23 = color(x6)\n    O = fill(I, x23, x22)\n    return O"], [0.7436960789269706, "def solve_39d464fa(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.7436960789269706, "def solve_aa0da7ff(I):\n    x1 = objects(I, T, F, T)\n    x2 = mapply(delta, x1)\n    O = fill(I, SEVEN, x2)\n    return O"], [0.7436960789269706, "def solve_30905d00(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.7436960789269706, "def solve_cd0cd5f8(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.7436960789269706, "def solve_434e04ac(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = rbind(difference, x2)\n    x4 = rbind(greater, TWO)\n    x5 = chain(x4, size, x3)\n    x6 = compose(x5, dneighbors)\n    x7 = sfilter(x2, x6)\n    O = fill(I, ZERO, x7)\n    return O"], [0.7436960789269706, "def solve_6a2490db(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.7436960789269706, "def solve_600f8178(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_b0989855(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7436960789269706, "def solve_a07244da(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.7436960789269706, "def solve_2f81834b(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7436960789269706, "def solve_abd3154b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_3eb6d332(I):\n    O = rot90(I)\n    return O"], [0.7436960789269706, "def solve_521f7d01(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_c70348e4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = subgrid(x2, I)\n    return O"], [0.7436960789269706, "def solve_d1d5ee2a(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.7436960789269706, "def solve_23783247(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_f668bb98(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.7436960789269706, "def solve_59c78fe3(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.7436960789269706, "def solve_158fb1ca(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_56fff384(I):\n    x1 = fgpartition(I)\n    x2 = fork(recolor, color, backdrop)\n    x3 = mapply(x2, x1)\n    O = paint(I, x3)\n    return O"], [0.7436960789269706, "def solve_ed49d419(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_47e726cc(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = paint(I, x5)\n    return O"], [0.7436960789269706, "def solve_3269790b(I):\n    x1 = lbind(multiply, THREE)\n    x2 = rbind(add, THREE)\n    x3 = compose(x2, x1)\n    x4 = fork(equality, identity, x3)\n    x5 = compose(x4, last)\n    x6 = ofcolor(I, ZERO)\n    x7 = sfilter(x6, x5)\n    O = fill(I, ZERO, x7)\n    return O"], [0.7436960789269706, "def solve_11def15c(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.7436960789269706, "def solve_97fae789(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.7436960789269706, "def solve_7e08c377(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.7436960789269706, "def solve_ef2411e3(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_32f461fa(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7436960789269706, "def solve_e582411f(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_336ea098(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = center(x2)\n    x4 = dneighbors(x3)\n    x5 = insert(x3, x4)\n    O = fill(I, THREE, x5)\n    return O"], [0.7436960789269706, "def solve_265580a2(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7436960789269706, "def solve_e056dd34(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = recolor(ZERO, x2)\n    x4 = normalize(x3)\n    x5 = occurrences(I, x4)\n    x6 = toindices(x4)\n    x7 = lbind(shift, x6)\n    x8 = mapply(x7, x5)\n    O = fill(I, x1, x8)\n    return O"], [0.7436960789269706, "def solve_6f34a6d3(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7436960789269706, "def solve_228677e4(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [0.7436960789269706, "def solve_60924532(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_019b9742(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7436960789269706, "def solve_cf5f5894(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_ff0e6161(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7436960789269706, "def solve_bcd0445c(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_ef32b612(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7436960789269706, "def solve_ddac29ae(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ONE, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    x7 = fill(I, EIGHT, x6)\n    x8 = add(SIX, SIX)\n    x9 = astuple(EIGHT, x8)\n    x10 = index(x7, x9)\n    x11 = equality(x10, EIGHT)\n    x12 = initset(x9)\n    x13 = add(x9, DOWN)\n    x14 = insert(x13, x12)\n    x15 = toobject(x14, x7)\n    x16 = toobject(x14, I)\n    x17 = branch(x11, x16, x15)\n    O = paint(x7, x17)\n    return O"], [0.7436960789269706, "def solve_f83105f3(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.7436960789269706, "def solve_2eace2ca(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.7436960789269706, "def solve_216d8721(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_f9016614(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = rbind(difference, x2)\n    x4 = rbind(greater, TWO)\n    x5 = chain(x4, size, x3)\n    x6 = compose(x5, dneighbors)\n    x7 = sfilter(x2, x6)\n    O = fill(I, ZERO, x7)\n    return O"], [0.7436960789269706, "def solve_632d98f3(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_769dcfa4(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_442fa580(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(shoot, RIGHT)\n    x4 = compose(x3, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(x1, DOWN_LEFT)\n    x9 = initset(x8)\n    x10 = mostcolor(I)\n    x11 = recolor(x10, x9)\n    x12 = objects(x7, T, F, T)\n    x13 = insert(x11, x12)\n    x14 = order(x13, uppermost)\n    x15 = first(x14)\n    x16 = remove(x11, x14)\n    x17 = remove(x15, x14)\n    x18 = compose(lrcorner, first)\n    x19 = compose(lrcorner, last)\n    x20 = fork(connect, x18, x19)\n    x21 = compose(color, first)\n    x22 = fork(recolor, x21, x20)\n    x23 = pair(x16, x17)\n    x24 = mapply(x22, x23)\n    O = underpaint(x7, x24)\n    return O"], [0.7436960789269706, "def solve_40a31bdc(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_4756bb5d(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.7436960789269706, "def solve_b34deaec(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7436960789269706, "def solve_58b88c45(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_62ea7c08(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, last)\n    x5 = fork(recolor, first, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [0.7436960789269706, "def solve_cb78fd2c(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.7436960789269706, "def solve_2c827883(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot180(x3)\n    return O"], [0.7436960789269706, "def solve_4c822624(I):\n    x1 = objects(I, T, F, T)\n    x2 = mapply(delta, x1)\n    O = fill(I, SEVEN, x2)\n    return O"], [0.7436960789269706, "def solve_a5ee513e(I):\n    x1 = ofcolor(I, TWO)\n    x2 = recolor(ZERO, x1)\n    x3 = normalize(x2)\n    x4 = occurrences(I, x2)\n    x5 = lbind(shift, x3)\n    x6 = apply(x5, x4)\n    x7 = astuple(ONE, THREE)\n    x8 = astuple(FIVE, ONE)\n    x9 = astuple(TWO, SIX)\n    x10 = initset(x7)\n    x11 = insert(x8, x10)\n    x12 = insert(x9, x11)\n    x13 = rbind(contained, x12)\n    x14 = chain(flip, x13, ulcorner)\n    x15 = sfilter(x6, x14)\n    x16 = merge(x15)\n    x17 = recolor(TWO, x16)\n    O = paint(I, x17)\n    return O"], [0.7436960789269706, "def solve_f9052e5d(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_050ee037(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_46a052e6(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.7436960789269706, "def solve_2276b0e0(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7436960789269706, "def solve_759e05e9(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_323133d6(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.7436960789269706, "def solve_47293928(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_a2a79039(I):\n    x1 = ofcolor(I, TWO)\n    x2 = ofcolor(I, THREE)\n    x3 = recolor(TWO, x1)\n    x4 = ulcorner(x2)\n    x5 = ulcorner(x1)\n    x6 = subtract(x4, x5)\n    x7 = increment(x6)\n    O = move(I, x3, x7)\n    return O"], [0.7436960789269706, "def solve_1922fa36(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [0.7436960789269706, "def solve_66585baa(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_dc9272d7(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.7436960789269706, "def solve_e9ca16ad(I):\n    O = dmirror(I)\n    return O"], [0.7436960789269706, "def solve_0159e6ca(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_c9156682(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.7436960789269706, "def solve_536ec41c(I):\n    x1 = fgpartition(I)\n    x2 = compose(last, first)\n    x3 = power(last, TWO)\n    x4 = fork(connect, x2, x3)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x1)\n    O = paint(I, x6)\n    return O"], [0.7436960789269706, "def solve_b6322588(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.7436960789269706, "def solve_657d180c(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_48d8d3e1(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_b842301b(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = lbind(recolor, EIGHT)\n    x4 = rbind(ofcolor, x1)\n    x5 = chain(x3, backdrop, x4)\n    x6 = fork(paint, identity, x5)\n    x7 = height(I)\n    x8 = vsplit(I, x7)\n    x9 = mapply(x6, x8)\n    x10 = ofcolor(x9, EIGHT)\n    x11 = dmirror(I)\n    x12 = width(I)\n    x13 = vsplit(x11, x12)\n    x14 = mapply(x6, x13)\n    x15 = dmirror(x14)\n    x16 = ofcolor(x15, EIGHT)\n    x17 = combine(x10, x16)\n    x18 = difference(x17, x2)\n    O = fill(I, EIGHT, x18)\n    return O"], [0.7436960789269706, "def solve_a489a1e1(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.7436960789269706, "def solve_f6458605(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, TWO, x3)\n    return O"], [0.7440145502645503, "def solve_b4c6ca63(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, x1, x4)\n    return O"], [0.7440145502645503, "def solve_dc925b88(I):\n    x1 = ofcolor(I, EIGHT)\n    x2 = dneighbors(UNITY)\n    x3 = insert(UNITY, x2)\n    O = fill(I, THREE, x3)\n    return O"], [0.7440145502645503, "def solve_f12bbe53(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.7440145502645503, "def solve_05c8c2d7(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = astuple(x1, ONE)\n    x8 = astuple(ONE, x2)\n    x9 = decrement(x1)\n    x10 = decrement(x2)\n    x11 = toivec(x10)\n    x12 = tojvec(x9)\n    x13 = crop(I, x11, x8)\n    x14 = crop(I, x12, x7)\n    x15 = asobject(x14)\n    x16 = asobject(x13)\n    x17 = vperiod(x15)\n    x18 = hperiod(x16)\n    x19 = astuple(x17, x18)\n    x20 = lbind(multiply, x19)\n    x21 = neighbors(ORIGIN)\n    x22 = mapply(neighbors, x21)\n    x23 = apply(x20, x22)\n    x24 = lbind(shift, x6)\n    x25 = mapply(x24, x23)\n    O = paint(I, x25)\n    return O"], [0.7459101546601546, "def solve_2aea6d72(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.7459101546601546, "def solve_5a02e5ea(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.7472675074983992, "def solve_b8db33de(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = fork(subtract, first, last)\n    x4 = fork(multiply, sign, identity)\n    x5 = compose(x4, x3)\n    x6 = lbind(greater, THREE)\n    x7 = chain(x6, maximum, x5)\n    x8 = lbind(lbind, astuple)\n    x9 = rbind(chain, x8)\n    x10 = lbind(compose, x7)\n    x11 = rbind(x9, x10)\n    x12 = lbind(lbind, sfilter)\n    x13 = compose(x11, x12)\n    x14 = lbind(mapply, backdrop)\n    x15 = fork(apply, x13, identity)\n    x16 = compose(x14, x15)\n    x17 = power(x16, TWO)\n    x18 = x17(x2)\n    x19 = fill(I, FOUR, x18)\n    O = fill(x19, x1, x2)\n    return O"], [0.7472675074983992, "def solve_3cad760b(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, FOUR, x3)\n    return O"], [0.7472675074983992, "def solve_47aa2c22(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7472675074983992, "def solve_02df5367(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = rbind(multiply, THREE)\n    x6 = rbind(divide, THREE)\n    x7 = compose(x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = toindices(x4)\n    x10 = compose(x8, last)\n    x11 = sfilter(x9, x10)\n    O = fill(I, SIX, x11)\n    return O"], [0.7480334878120887, "def solve_ba043d5e(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.7480334878120887, "def solve_ba21fa2a(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.7480334878120887, "def solve_b6c48e28(I):\n    x1 = replace(I, FOUR, ZERO)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [0.7480334878120887, "def solve_b0b429e6(I):\n    x1 = replace(I, FOUR, ZERO)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply( x4, x7)\n    O = cmirror(x8)\n    return O"], [0.7480334878120887, "def solve_a8b2e634(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.7508389360698278, "def solve_a35c3976(I):\n    x1 = replace(I, SIX, TWO)\n    x2 = objects(x1, T, T, T)\n    x3 = colorfilter(x2, ONE)\n    x4 = merge(x3)\n    O = fill(x1, THREE, x4)\n    return O"], [0.7532198884507801, "def solve_e1196e4b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.7535175074983992, "def solve_c609818a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, ZERO, x2)\n    return O"], [0.7583002645502646, "def solve_a4c657fa(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.7615532217841134, "def solve_c689ab82(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7615532217841134, "def solve_54fc2322(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7620691562097812, "def solve_63fcb204(I):\n    x1 = asindices(I)\n    x2 = tophalf(I)\n    x3 = bottomhalf(I)\n    x4 = leastcolor(x2)\n    x5 = leastcolor(x3)\n    x6 = hfrontier(TWO_BY_ZERO)\n    x7 = box(x1)\n    x8 = combine(x6, x7)\n    x9 = fill(x2, x4, x8)\n    x10 = hmirror(x9)\n    x11 = replace(x10, x4, x5)\n    O = vconcat(x9, x11)\n    return O"], [0.767824074074074, "def solve_f48a2bf4(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.7722675074983991, "def solve_6aa471db(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = normalize(x2)\n    x4 = lbind(matcher, first)\n    x5 = compose(x4, mostcolor)\n    x6 = fork(sfilter, identity, x5)\n    x7 = fork(difference, identity, x6)\n    x8 = lbind(rbind, upscale)\n    x9 = interval(ONE, FOUR, ONE)\n    x10 = apply(x8, x9)\n    x11 = initset(identity)\n    x12 = insert(vmirror, x11)\n    x13 = insert(hmirror, x12)\n    x14 = insert(cmirror, x13)\n    x15 = insert(dmirror, x14)\n    x16 = fork(compose, first, last)\n    x17 = lbind(occurrences, I)\n    x18 = lbind(lbind, shift)\n    x19 = compose(x17, x7)\n    x20 = product(x15, x10)\n    x21 = apply(x16, x20)\n    x22 = rapply(x21, x3)\n    x23 = fork(mapply, x18, x19)\n    x24 = mapply(x23, x22)\n    O = paint(I, x24)\n    return O"], [0.7744675050279077, "def solve_fa771c7f(I):\n    x1 = palette(I)\n    x2 = remove(FIVE, x1)\n    x3 = first(x2)\n    x4 = ofcolor(I, x3)\n    x5 = fill(I, ZERO, x4)\n    x6 = ofcolor(I, FIVE)\n    O = fill(x5, x3, x6)\n    return O"], [0.7758389360698277, "def solve_f541996f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7758389360698277, "def solve_14139c6d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7758389360698277, "def solve_7f60ad53(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7758389360698277, "def solve_375e84de(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7758389360698277, "def solve_43d2d38b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7758389360698277, "def solve_4ec97b2f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7819990673127664, "def solve_f1748008(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7819990673127664, "def solve_24ebe47d(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7819990673127664, "def solve_18c3e8d6(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7819990673127664, "def solve_ea4f93e6(I):\n    x1 = shape(I)\n    x2 = add(x1, TWO)\n    x3 = canvas(ZERO, x2)\n    x4 = asobject(I)\n    x5 = shift(x4, UNITY)\n    x6 = paint(x3, x5)\n    x7 = asindices(x3)\n    x8 = fork(difference, box, corners)\n    x9 = x8(x7)\n    x10 = lbind(lbind, manhattan)\n    x11 = rbind(compose, initset)\n    x12 = chain(x11, x10, initset)\n    x13 = lbind(argmin, x5)\n    x14 = chain(first, x13, x12)\n    x15 = fork(astuple, x14, identity)\n    x16 = apply(x15, x9)\n    O = paint(x6, x16)\n    return O"], [0.8074074074074075, "def solve_173748df(I):\n    x1 = shape(I)\n    x2 = equality(x1, TWO)\n    x3 = branch(x2, x1, x1)\n    x4 = branch(x2, x1, x1)\n    x5 = canvas(ZERO, x4)\n    x6 = asobject(x5)\n    x7 = occurrences(I, x6)\n    x8 = apply(double, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(shift, x6)\n    x11 = mapply(x10, x9)\n    O = fill(x5, FOUR, x11)\n    return O"], [0.8541666666666666, "def solve_17614427(I):\n    x1 = palette(I)\n    x2 = other(x1, ZERO)\n    x3 = ofcolor(I, x2)\n    x4 = asobject(I)\n    x5 = vperiod(x4)\n    x6 = height(I)\n    x7 = halve(x6)\n    x8 = add(x6, x7)\n    x9 = width(I)\n    x10 = astuple(x8, x9)\n    x11 = canvas(ZERO, x10)\n    x12 = increment(x8)\n    x13 = interval(ZERO, x12, x5)\n    x14 = lbind(shift, x3)\n    x15 = apply(toivec, x13)\n    x16 = mapply(x14, x15)\n    O = fill(x11, TWO, x16)\n    return O"], [1.0, "def solve_671fd68f(I):\n    x1 = ofcolor(I, EIGHT)\n    x2 = switch(I, THREE, FOUR)\n    x3 = rbind(greater, ONE)\n    x4 = compose(x3, numcolors)\n    x5 = sfilter(x1, x4)\n    x6 = remove(x5, x1)\n    x7 = lbind(colorcount, I)\n    x8 = argmax(x6, x7)\n    x9 = remove(x8, x6)\n    x10 = rbind(contained, x9)\n    x11 = compose(x10, first)\n    x12 = rbind(sfilter, x11)\n    x13 = lbind(rbind, subtract)\n    x14 = lbind(occurrences, I)\n    x15 = lbind(lbind, shift)\n    x16 = compose(x13, ulcorner)\n    x17 = chain(x16, x12, normalize)\n    x18 = chain(x14, x12, normalize)\n    x19 = fork(apply, x17, x18)\n    x20 = compose(x15, normalize)\n    x21 = fork(mapply, x20, x19)\n    x22 = astuple(cmirror, dmirror)\n    x23 = astuple(hmirror, vmirror)\n    x24 = combine(x22, x23)\n    x25 = product(x24, x24)\n    x26 = fork(compose, first, last)\n    x27 = apply(x26, x25)\n    x28 = totuple(x27)\n    x29 = combine(x24, x28)\n    x30 = lbind(rapply, x29)\n    x31 = mapply(x30, x5)\n    x32 = mapply(x21, x31)\n    x33 = paint(I, x32)\n    x34 = merge(x51)\n    O = cover(x33, x34)\n    return O"], [1.0, "def solve_918926cb(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = rbind(colorcount, ZERO)\n    x3 = chain(x2, double, dmirror)\n    x4 = x3(I)\n    x5 = x1(x4)\n    x6 = objects(x5, T, F, T)\n    x7 = argmax(x6, x5)\n    x8 = apply(color, x7)\n    x9 = fgpartition(x8)\n    x10 = insert(x9, x8)\n    x11 = width(x10)\n    x12 = astuple(x11, x5)\n    x13 = repeat(x12, x11)\n    x14 = combine(x13, x7)\n    x15 = merge(x14)\n    x16 = color(x15)\n    x17 = toindices(x15)\n    x18 = apply(24, x17)\n    x19 = lbind(shift, x15)\n    x20 = mapply(x19, x18)\n    x21 = paint(x5, x20)\n    O = x3(x21)\n    return O"], [1.0, "def solve_efb21fa5(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_b9957d2d(I):\n    x1 = SIX(I, TWO)\n    x2 = vmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = fork(add, first, last)\n    x8 = x7(x2)\n    x9 = toivec(x8)\n    x10 = lbind(shift, x6)\n    x11 = rbind(compose, initset)\n    x12 = chain(x11, x10, last)\n    x13 = lbind(mapply, x12)\n    x14 = rbind(ofcolor, x6)\n    x15 = compose(x13, x14)\n    x16 = fork(paint, identity, x15)\n    x17 = apply(x16, x5)\n    x18 = fork(connect, first, last)\n    x19 = mapply(x18, x17)\n    O = fill(x19, ZERO, x19)\n    return O"], [1.0, "def solve_32fe1c27(I):\n    x1 = fgpartition(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = extract(x1, x3)\n    x5 = normalize(x4)\n    x6 = toindices(x5)\n    x7 = compose(toindices, normalize)\n    x8 = matcher(x7, x6)\n    x9 = mfilter(x1, x8)\n    x10 = fill(I, x4, x9)\n    x11 = replace(x10, ZERO, EIGHT)\n    x12 = fill(x11, TWO, x6)\n    x13 = merge(x12)\n    x14 = dmirror(x13)\n    x15 = fill(x12, ONE, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = rbind(adjacent, x16)\n    x18 = lbind( sfilter, x17)\n    x19 = chain(merge, x18, color)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x2)\n    O = paint(x5, x21)\n    return O"], [1.0, "def solve_25c29c37(I):\n    x1 = width(I)\n    x2 = astuple(ONE, x1)\n    x3 = astuple(TWO, x1)\n    x4 = canvas(THREE, x3)\n    x5 = tojvec(x1)\n    x6 = height(I)\n    x7 = crop(I, x5, x6)\n    x8 = frontiers(x7)\n    x9 = sfilter(x8, hline)\n    x10 = size(x9)\n    x11 = increment(x10)\n    x12 = width(I)\n    x13 = subtract(x12, x11)\n    x14 = increment(x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = lbind(astuple, x16)\n    x18 = lbind(DOWNscale, I)\n    x19 = compose(x17, x18)\n    x20 = decrement(x1)\n    x21 = lbind(multiply, x20)\n    x22 = toivec(x21)\n    x23 = tojvec(x5)\n    x24 = decrement(x23)\n    x25 = lbind(multiply, x24)\n    x26 = add(x22, x25)\n    x27 = vmirror(x6)\n    x28 = vmirror(x26)\n    x29 = compose(x27, x28)\n    x30 = argmin(x29, x27)\n    x31 = ofcolor(x30, EIGHT)\n    x32 = ofcolor(x30, TWO)\n    x33 = combine(x31, x32)\n    x34 = fill(x40, EIGHT, x33)\n    x35 = fill(x34, TWO, x29)\n    O = fill(x35, ONE, x33)\n    return O"], [1.0, "def solve_4fe3ebd6(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_c4628a92(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_e9d98489(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_86239c66(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_44ed660a(I):\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = ONE(x3)\n    x5 = RIGHT(x4)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = leastcolor(x5)\n    x8 = rbind(shoot, x7)\n    x9 = mapply(x8, x6)\n    x10 = combine(x6, x9)\n    O = fill(I, x7, x10)\n    return O"], [1.0, "def solve_c0bb08a9(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_6779cc10(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_9be52087(I):\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = fart(x5)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = shoot(x7, UP_RIGHT)\n    x10 = combine(x8, x9)\n    x11 = combine(x8, x9)\n    x12 = paint(x3, x11)\n    O = x2(x12)\n    return O"], [1.0, "def solve_3d70682b(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_0d017063(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [1.0, "def solve_f7b74577(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_18928639(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_675129ff(I):\n    x1 = lbind(other, I)\n    x2 = compose(x1, palette)\n    x3 = fork(recolor, x2, identity)\n    x4 = mapply(x3, I)\n    x5 = paint(I, x4)\n    O = objects(x5, T, F, T)\n    return O"], [1.0, "def solve_01b5ea66(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = power(double, TWO)\n    x4 = shape(x2)\n    x5 = interval(x4, FIVE, ONE)\n    x6 = lbind(multiply, x4)\n    x7 = apply(x6, x5)\n    x8 = lbind(interval, FIVE)\n    x9 = apply(x8, x5)\n    x10 = lbind(compose, x4)\n    x11 = apply(x10, x9)\n    x12 = lbind(lbind, shift)\n    x13 = dedupe(x7)\n    x14 = mapply(x12, x13)\n    O = paint(I, x14)\n    return O"], [1.0, "def solve_9a0dbf7a(I):\n    x1 = shape(I)\n    x2 = subgrid(x1, I)\n    x3 = mostcolor(I)\n    O = replace(x2, x3, ZERO)\n    return O"], [1.0, "def solve_80ea49cc(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = remove(x3, x2)\n    x5 = lbind(colorfilter, x4)\n    x6 = lbind(rbind, greater)\n    x7 = compose(x5, x6)\n    x8 = rbind(sfilter, x3)\n    x9 = compose(x8, toindices)\n    x10 = lbind(rbind, difference)\n    x11 = compose(x10, toindices)\n    x12 = rbind(compose, initset)\n    x13 = lbind(rbind, manhattan)\n    x14 = compose(x12, x13)\n    x15 = fork(sfilter, x11, x14)\n    x16 = compose(maximum, x15)\n    x17 = compose(minimum, x15)\n    x18 = vsplit(I, TWO)\n    x19 = cmirror(x18)\n    x20 = mostcolor(x19)\n    x21 = initset(x16)\n    x22 = rbind(rapply, x21)\n    x23 = compose(x22, initset)\n    x24 = chain(first, x17, x23)\n    x25 = compose(x20, x24)\n    x26 = fork(paint, x25, x20)\n    x27 = mapply(x26, x4)\n    x28 = merge(x27)\n    O = x27(x28)\n    return O"], [1.0, "def solve_22feee59(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = compose(leftmost, first)\n    x13 = compose(leftmost, last)\n    x14 = fork(equality, x12, x13)\n    x15 = compose(uppermost, first)\n    x16 = compose(uppermost, last)\n    x17 = fork(equality, x15, x16)\n    x18 = fork(either, x14, x17)\n    x19 = sfilter(x11, x18)\n    x20 = compose(color, first)\n    x21 = compose(center, first)\n    x22 = compose(center, last)\n    x23 = fork(connect, x21, x22)\n    x24 = fork(recolor, x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = matcher(last, ZERO)\n    x28 = decrement(x26)\n    x29 = matcher(last, x28)\n    x30 = fork(either, x27, x29)\n    x31 = compose(flip, x30)\n    x32 = sfilter(x15, x31)\n    x33 = paint(I, x32)\n    x34 = size(x1)\n    x35 = positive(x34)\n    x36 = branch(x35, x22, ZERO)\n    O = canvas(x36, UNITY)\n    return O"], [1.0, "def solve_6151131a(I):\n    x1 = dmirror(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [1.0, "def solve_bd8e1004(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = chain(cmirror, x7, x8)\n    x10 = x9(x8)\n    x11 = dedupe(x10)\n    x12 = dmirror(x11)\n    x13 = dedupe(x12)\n    x14 = dmirror(x13)\n    x15 = mostcolor(x14)\n    x16 = objects(x14, T, T, F)\n    x17 = colorfilter(x16, x15)\n    x18 = compose(normalize, toindices)\n    x19 = box(x18)\n    x20 = difference(x16, x19)\n    x21 = rbind(subgrid, x20)\n    x22 = chain(x21, initset, palette)\n    x23 = rbind(subgrid, x5)\n    x24 = chain(x23, x22, asobject)\n    x25 = lbind(subtract, x15)\n    x26 = compose(first, x25)\n    x27 = chain(x26, x24, x26)\n    x28 = fork(shift, x27, x23)\n    x29 = fork(connect, x28, urcorner)\n    x30 = fork(combine, x28, x29)\n    x31 = compose(x30, x27)\n    x32 = fork(shift, x27, x31)\n    x33 = fork(combine, x32, x31)\n    x34 = mapply(x33, x14)\n    x35 = fill(x5, x15, x34)\n    x36 = replace(x35, x15, x5)\n    O = downscale(x36, THREE)\n    return O"], [1.0, "def solve_3e4c3006(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = totuple(x3)\n    x5 = apply(color, x4)\n    x6 = lbind(sfilter, x5)\n    x7 = lbind(matcher, identity)\n    x8 = chain(size, x6, x7)\n    x9 = argmax(x6, x8)\n    x10 = repeat(x9, ONE)\n    O = paint(I, x10)\n    return O"], [1.0, "def solve_1159b49c(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_fead7be2(I):\n    x1 = palette(I)\n    x2 = remove(FIVE, x1)\n    x3 = first(x2)\n    x4 = ofcolor(I, x3)\n    x5 = ZERO(x4)\n    x6 = ofcolor(I, FIVE)\n    x7 = center(x6)\n    x8 = vfrontier(x7)\n    x9 = insert(x13, x8)\n    O = fill(I, ZERO, x9)\n    return O"], [1.0, "def solve_82cda086(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_c6ffa7d5(I):\n    x1 = dmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_424fe7cf(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_d9a7ed46(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = partition(I)\n    x7 = fork(multiply, height, width)\n    x8 = fork(equality, size, x7)\n    x9 = sfilter(x6, x8)\n    x10 = argmax(x9, size)\n    x11 = difference(x5, x10)\n    x12 = apply(initset, x11)\n    x13 = rbind(hmatching, x10)\n    x14 = rbind(vmatching, x10)\n    x15 = fork(either, x13, x14)\n    x16 = sfilter(x12, x15)\n    x17 = rbind(gravitate, x10)\n    x18 = fork(add, center, x17)\n    x19 = fork(connect, center, x18)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x16)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_40139bdc(I):\n    x1 = lbind(fork, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = lbind(compose, flip)\n    x5 = lbind(matcher, first)\n    x6 = compose(x4, x5)\n    x7 = lbind(compose, flip)\n    x8 = compose(x7, x6)\n    x9 = lbind(fork, both)\n    x10 = fork(x9, x3, x8)\n    x11 = lbind(sfilter, x7)\n    x12 = chain(x11, size, x10)\n    x13 = argmax(x2, x12)\n    x14 = compress(x13)\n    x15 = flip(x14)\n    x16 = vmirror(x15)\n    x17 = asobject(x16)\n    x18 = height(x17)\n    x19 = increment(x18)\n    x20 = lbind(subtract, x19)\n    x21 = chain(toivec, x20, double)\n    x22 = fork(shift, identity, x21)\n    x23 = mapply(x22, x17)\n    O = paint(x16, x23)\n    return O"], [1.0, "def solve_3b902004(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_0d6a681a(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot90(I)\n    x4 = upscale(x3, FOUR)\n    x5 = rot270(I)\n    x6 = papply(matcher, first, x2)\n    x7 = sfilter(x4, x6)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [1.0, "def solve_8411cf1c(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    O = asobject(x1)\n    return O"], [1.0, "def solve_f37af8f1(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_5aec8409(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = matcher(x13, ONE)\n    x15 = fork(both, x7, x14)\n    x16 = extract(x3, x15)\n    x17 = x16(x6)\n    x18 = height(x67)\n    x19 = subtract(x18, TWO)\n    x20 = height(x6)\n    x21 = subtract(x20, TWO)\n    x22 = width(x6)\n    x23 = subtract(x22, DOWN)\n    x24 = width(x6)\n    x25 = subtract(x23, x24)\n    x26 = astuple(x19, x25)\n    x27 = canvas(x1, x26)\n    x28 = astuple(x23, x27)\n    x29 = canvas(x1, x28)\n    x30 = rbind(multiply, x29)\n    x31 = apply(x30, x3)\n    x32 = rbind(shift, x36)\n    x33 = mapply(x32, x31)\n    O = paint(x27, x33)\n    return O"], [1.0, "def solve_2d496010(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = width(I)\n    x5 = astuple(TEN, FIVE)\n    x6 = canvas(x3, x5)\n    x7 = interval(ONE, SIX, ONE)\n    x8 = invert(TEN)\n    x9 = interval(x8, TEN, ONE)\n    x10 = product(x7, x9)\n    x11 = rbind(multiply, TWO)\n    x12 = apply(x11, x10)\n    x13 = apply(tojvec, x12)\n    x14 = prapply(shift, x4, x13)\n    x15 = lbind(shift, x4)\n    x16 = mapply(x15, x14)\n    O = fill(x6, x3, x16)\n    return O"], [1.0, "def solve_120669cc(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = rbind(repeat, x4)\n    x6 = lbind(upscale, I)\n    x7 = compose(x5, x6)\n    x8 = order(x2, leftmost)\n    x9 = apply(leftmost, x8)\n    x10 = last(x8)\n    x11 = matcher(first, x10)\n    x12 = compose(flip, x11)\n    x13 = fork(both, x3, x12)\n    x14 = sfilter(x9, x13)\n    x15 = compose(color, first)\n    x16 = fork(recolor, x15, x14)\n    x17 = mapply(x16, x14)\n    O = paint(I, x17)\n    return O"], [1.0, "def solve_577faa35(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = apply(toindices, x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = intersection(x3, x2)\n    x8 = fill(x6, EIGHT, x7)\n    O = replace(x8, UNITY, ONE)\n    return O"], [1.0, "def solve_87696ca2(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = add(TWO, x5)\n    x7 = canvas(x4, x6)\n    x8 = asobject(I)\n    x9 = shift(x8, UNITY)\n    x10 = paint(x7, x9)\n    x11 = palette(x10)\n    x12 = remove(x4, x11)\n    x13 = lbind(ofcolor, x10)\n    x14 = fork(recolor, identity, x13)\n    x15 = apply(x14, x12)\n    x16 = fork(equality, toindices, backdrop)\n    x17 = extract(x15, x16)\n    x18 = other(x15, x17)\n    x19 = color(x18)\n    x20 = astuple(x19, RIGHT)\n    x21 = initset(ZERO_BY_TWO)\n    x22 = insert(ORIGIN, x21)\n    x23 = recolor(x4, x22)\n    x24 = insert(x20, x23)\n    x25 = dmirror(x24)\n    x26 = lbind(shift, x24)\n    x27 = occurrences(x10, x24)\n    x28 = mapply(x26, x27)\n    x29 = lbind(shift, x25)\n    x30 = occurrences(x10, x25)\n    x31 = mapply(x29, x30)\n    x32 = combine(x28, x31)\n    x33 = fill(x10, x4, x32)\n    x34 = ofcolor(x33, x19)\n    x35 = gravitate(x34, x17)\n    x36 = replace(x10, x19, x4)\n    x37 = shift(x34, x35)\n    x38 = fill(x36, x19, x37)\n    O = trim(x38)\n    return O"], [1.0, "def solve_2e820091(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = fork(equality, toindices, box)\n    x7 = sfilter(x2, x6)\n    x8 = fork(multiply, height, width)\n    x9 = argmin(x7, x8)\n    x10 = argmax(x7, x8)\n    x11 = center(x9)\n    x12 = center(x10)\n    x13 = subtract(x11, x12)\n    x14 = add(x13, x11)\n    x15 = rot90(x14)\n    x16 = recolor(x1, x15)\n    x17 = shift(x16, UNITY)\n    x18 = paint(I, x17)\n    x19 = objects(x18, T, F, T)\n    x20 = apply(ulcorner, x19)\n    x21 = rbind(subgrid, x18)\n    x22 = apply(x21, x20)\n    x23 = pair(x15, x22)\n    x24 = mapply(palette, x23)\n    O = sfilter(x24, x24)\n    return O"], [1.0, "def solve_1d4ab164(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_b5b44d30(I):\n    x1 = initset(ORIGIN)\n    x2 = box(x1)\n    x3 = recolor(ZERO, x1)\n    x4 = double(TEN)\n    x5 = multiply(x4, THREE)\n    x6 = interval(ZERO, x5, ONE)\n    x7 = lbind(multiply, x5)\n    x8 = apply(x7, x6)\n    x9 = lbind(shift, x2)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [1.0, "def solve_86c40380(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_9a905fbb(I):\n    x1 = objects(I, T, F, T)\n    x2 = ofcolor(I, ZERO)\n    x3 = sizefilter(x1, ONE)\n    x4 = rbind(adjacent, x2)\n    x5 = extract(x3, x4)\n    x6 = recolor(ZERO, x5)\n    O = paint(I, x6)\n    return O"], [1.0, "def solve_96c960ba(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x833 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, hmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [1.0, "def solve_785e38e6(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_8efe0034(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_1a144b46(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_8fd4361b(I):\n    x1 = trim(I)\n    x2 = objects(x1, T, F, F)\n    x3 = vperiod(x2)\n    x4 = shift(x2, x3)\n    x5 = lbind(shift, x4)\n    x6 = interval(ZERO, NINE, ONE)\n    x7 = apply(x5, x6)\n    x8 = mapply(x7, x3)\n    O = paint(x1, x8)\n    return O"], [1.0, "def solve_5d2b2e0c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_504071c2(I):\n    x1 = vmirror(I)\n    x2 = fgpartition(x1)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = compose(double, halve)\n    x6 = fork(equality, identity, x5)\n    x7 = compose(x6, last)\n    x8 = sfilter(x4, x7)\n    x9 = fill(x1, FIVE, x8)\n    O = x9(x4)\n    return O"], [1.0, "def solve_4d7fa4ef(I):\n    x1 = dmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_16bc3ce5(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = palette(I)\n    x4 = lbind(shift, I)\n    x5 = compose(x4, frontiers)\n    x6 = mfilter(x3, x5)\n    x7 = palette(I)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = shape(I)\n    x11 = canvas(x9, x10)\n    x12 = paint(x11, I)\n    x13 = asobject(x1)\n    x14 = difference(x13, x2)\n    O = paint(x12, x14)\n    return O"], [1.0, "def solve_d1d188b0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_cba0e309(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, first)\n    x31 = fork(recolor, x30, last)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_d5dd8f8e(I):\n    x1 = ofcolor(I, TWO)\n    x2 = vline(x1)\n    x3 = branch(x2, dmirror, identity)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = width(x4)\n    x7 = interval(x5, x6, TWO)\n    x8 = apply(tojvec, x7)\n    x9 = portrait(x8)\n    x10 = branch(x9, identity, last)\n    x11 = x10(x4)\n    x12 = x11(x4)\n    x13 = ofcolor(x12, FIVE)\n    x14 = ofcolor(x12, EIGHT)\n    x15 = fill(x13, ZERO, x13)\n    x16 = fill(x15, FOUR, x14)\n    x17 = fill(x16, ONE, x15)\n    x18 = rot90(x17)\n    x19 = ofcolor(x18, FIVE)\n    x20 = shift(x19, UNITY)\n    O = fill(x20, EIGHT, x19)\n    return O"], [1.0, "def solve_7bcf3180(I):\n    x1 = asindices(I)\n    x2 = objects(I, T, F, T)\n    x3 = first(x2)\n    x4 = rbind(subgrid, I)\n    x5 = fork(equality, identity, rot90)\n    x6 = compose(x5, x4)\n    x7 = extract(x1, x6)\n    x8 = center(x7)\n    x9 = subgrid(x3, I)\n    x10 = hmirror(x9)\n    x11 = objects(x10, F, T, T)\n    x12 = first(x11)\n    x13 = objects(x10, T, T, T)\n    x14 = rbind(subgrid, x10)\n    x15 = compose(x5, x14)\n    x16 = extract(x13, x15)\n    x17 = center(x16)\n    x18 = subtract(x8, x17)\n    x19 = shift(x12, x18)\n    x20 = paint(I, x19)\n    x21 = objects(x20, F, T, T)\n    x22 = first(x21)\n    x23 = subgrid(x22, x20)\n    x24 = vmirror(x23)\n    x25 = objects(x24, F, T, T)\n    x26 = first(x25)\n    x27 = objects(x24, T, T, T)\n    x28 = color(x7)\n    x29 = matcher(color, x28)\n    x30 = extract(x27, x29)\n    x31 = center(x30)\n    x32 = subtract(x8, x31)\n    x33 = shift(x26, x32)\n    O = paint(x20, x33)\n    return O"], [1.0, "def solve_675edd0d(I):\n    x1 = palette(I)\n    x2 = other(x1, ZERO)\n    x3 = shape(I)\n    x4 = multiply(x3, x3)\n    x5 = canvas(ZERO, x4)\n    x6 = ofcolor(I, x2)\n    x7 = lbind(shift, x6)\n    x8 = shape(I)\n    x9 = rbind(multiply, x8)\n    x10 = apply(x9, x6)\n    x11 = mapply(x7, x10)\n    O = fill(x5, x2, x11)\n    return O"], [1.0, "def solve_079bcd9e(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, T, T, F)\n    x6 = colorfilter(x5, x4)\n    x7 = fork(add, leftmost, uppermost)\n    x8 = argmin(x6, x7)\n    x9 = argmax(x6, x7)\n    x10 = lbind(sfilter, x6)\n    x11 = rbind(compose, leftmost)\n    x12 = chain(size, x10, x11)\n    x13 = lbind(sfilter, x6)\n    x14 = rbind(compose, uppermost)\n    x15 = chain(size, x13, x14)\n    x16 = lbind(lbind, greater)\n    x17 = chain(x12, x16, leftmost)\n    x18 = lbind(rbind, greater)\n    x19 = chain(x12, x18, leftmost)\n    x20 = lbind(lbind, greater)\n    x21 = chain(x15, x20, uppermost)\n    x22 = lbind(rbind, greater)\n    x23 = chain(x15, x22, uppermost)\n    x24 = fork(equality, x17, x19)\n    x25 = fork(equality, x21, x23)\n    x26 = fork(both, x24, x25)\n    x27 = extract(x6, x26)\n    x28 = fill(I, ONE, x8)\n    x29 = fill(x28, THREE, x9)\n    O = fill(x29, TWO, x27)\n    return O"], [1.0, "def solve_e4b96337(I):\n    x1 = Fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [1.0, "def solve_6be5c6ba(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_346ef70b(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [1.0, "def solve_17b810d6(I):\n    x1 = objects(I, T, F, T)\n    x2 = apply(toindices, x1)\n    x3 = lbind(matcher, contained)\n    x4 = compose(x3, last)\n    x5 = extract(x2, x4)\n    x6 = lbind(shift, x5)\n    x7 = compose(x6, ulcorner)\n    x8 = rbind(colorcount, TWO)\n    x9 = argmax(x1, x8)\n    x10 = rbind(contained, x9)\n    x11 = compose(x10, first)\n    x12 = sfilter(x6, x11)\n    x13 = merge(x12)\n    x14 = rbind(shoot, x13)\n    x15 = compose(x14, ulcorner)\n    x16 = fork(recolor, x15, outbox)\n    x17 = mapply(x16, x4)\n    O = paint(I, x17)\n    return O"], [1.0, "def solve_9a8312f7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_b838424d(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_f5cb02df(I):\n    x1 = f25fb287\n    O = solveconcat(I, x1)\n    return O"], [1.0, "def solve_47358446(I):\n    x1 = rot180(I)\n    x2 = matcher(size, ONE)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, maximum, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_55446d1f(I):\n    x1 = objects(I, T, F, T)\n    x2 = vmirror(x1)\n    O = subgrid(x2, I)\n    return O"], [1.0, "def solve_87f6df0d(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_de673917(I):\n    x1 = ONEORIGIN(I)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(ONE, x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = objects(x6, T, F, F)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x5(x10)\n    return O"], [1.0, "def solve_46ea8a54(I):\n    x1 = paint(I, x2)\n    x2 = vmirror(x1)\n    x3 = equality(x2, I)\n    x4 = branch(x3, x2, x2)\n    O = canvas(x4, ONE)\n    return O"], [1.0, "def solve_19348811(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, identity, dmirror)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = lrcorner(x22)\n    x24 = shape(x23)\n    x25 = increment(x24)\n    x26 = lbind(multiply, x25)\n    x27 = shift(x3, x26)\n    x28 = apply(x27, x22)\n    x29 = lbind(shift, x15)\n    x30 = mapply(x29, x28)\n    O = paint(x6, x30)\n    return O"], [1.0, "def solve_370f9199(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_bd47713d(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, x30)\n    x33 = compose(x32, x31)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [1.0, "def solve_efddeaf4(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_7de9cc51(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    O = apply(initset, x3)\n    x1 = toindices(x3)\n    x2 = asindices(I)\n    x3 = corners(x2)\n    x4 = combine(x1, x2)\n    x5 = fill(I, NEG_ONE, x4)\n    x6 = fgpartition(x5)\n    x7 = merge(x6)\n    x8 = shift(x7, DOWN)\n    x9 = fill(x5, TWO, x8)\n    x10 = shift(x9, UP)\n    x11 = fill(x9, SIX, x10)\n    x12 = shift(x11, RIGHT)\n    x13 = fill(x9, SEVEN, x12)\n    x14 = shift(x11, LEFT)\n    x15 = fill(x13, EIGHT, x14)\n    x16 = shift(x11, UP)\n    x17 = fill(x15, SIX, x16)\n    x18 = shift(x11, DOWN)\n    x19 = fill(x17, EIGHT, x18)\n    x20 = shift(x11, RIGHT)\n    x21 = fill(x19, SEVEN, x20)\n    x22 = shift(x11, LEFT)\n    x23 = fill(x21, EIGHT, x22)\n    x24 = shift(x11, UP)\n    x25 = fill(x23, UNITY, x24)\n    x26 = shift(x11, DOWN)\n    x27 = fill(x25, SIX, x26)\n    x28 = shift(x11, LEFT)\n    x29 = fill(x27, EIGHT, x28)\n    O = paint(x29, x3)\n    return O"], [1.0, "def solve_3b2c71d9(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_580effe7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_9eb76302(I):\n    O = matcher(identity, ZERO)\n    return O"], [1.0, "def solve_67fe85de(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_28bcb307(I):\n    x1 = objects(I, T, F, T)\n    x2 = lbind(sizefilter, x1)\n    x3 = compose(merge, x2)\n    x4 = x3(I)\n    x5 = halve(x4)\n    x6 = x3(I)\n    x7 = hconcat(x5, x6)\n    x8 = vconcat(x7, x7)\n    x9 = objects(x8, T, F, T)\n    x10 = rbind(shoot, UNITY)\n    x11 = compose(x10, center)\n    x12 = fork(recolor, color, x11)\n    x13 = mapply(x12, x9)\n    x14 = paint(x8, x13)\n    O = hmirror(x14)\n    return O"], [1.0, "def solve_5fe8cd60(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_820a067a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = subtract(Nivec, x14)\n    x16 = lbind(shift, x10)\n    x17 = shift(x15, x16)\n    x18 = fork(combine, vfrontier, hfrontier)\n    x19 = mapply(x18, x17)\n    O = paint(I, x19)\n    return O"], [1.0, "def solve_9f1233bf(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_97b654f1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_cc9add26(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_25723d44(I):\n    x1 = double(TEN)\n    x2 = interval(ZERO, x1, ONE)\n    x3 = apply(double, x2)\n    x4 = apply(increment, x3)\n    x5 = apply(tojvec, x4)\n    x6 = prapply(shift, x5, x4)\n    x7 = merge(x6)\n    O = fill(I, FOUR, x7)\n    return O"], [1.0, "def solve_e61ef8f3(I):\n    x1 = shoot(ORIGIN, UNITY)\n    x2 = shoot(x2, DOWN_LEFT)\n    x3 = fork(combine, hfrontier, vfrontier)\n    x4 = mapply(x3, x1)\n    x5 = fill(I, ZERO, x4)\n    O = replace(x5, ONE, TWO)\n    return O"], [1.0, "def solve_d14931da(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = partition(I)\n    x7 = fork(multiply, height, width)\n    x8 = fork(equality, size, x7)\n    x9 = sfilter(x6, x8)\n    x10 = argmax(x9, size)\n    x11 = difference(x5, x10)\n    x12 = apply(initset, x11)\n    x13 = rbind(hmatching, x10)\n    x14 = rbind(vmatching, x10)\n    x15 = fork(either, x13, x14)\n    x16 = sfilter(x12, x15)\n    x17 = rbind(gravitate, x10)\n    x18 = fork(add, center, x17)\n    x19 = fork(connect, center, x18)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x16)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_4e0bec6c(I):\n    x1 = ofcolor(I, TWO)\n    x2 = vline(x1)\n    O = branch(x2, dmirror, identity)\n    return O"], [1.0, "def solve_a0134bd8(I):\n    x1 = switch(I, EIGHT, TWO)\n    x2 = switch(x1, TWO, THREE)\n    x3 = switch(x2, EIGHT, ONE)\n    x4 = neighbors(ORIGIN)\n    x5 = mapply(neighbors, x4)\n    x6 = lbind(shift, x3)\n    x7 = apply(x6, x5)\n    x8 = merge(x7)\n    O = paint(I, x8)\n    return O"], [1.0, "def solve_92252c34(I):\n    x1 =9284448403\n    x2 = hmirror(I)\n    O = vconcat(x1, x2)\n    return O"], [1.0, "def solve_07a42553(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, last)\n    O = x4(I)\n    return O"], [1.0, "def solve_b4ef1643(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = ofcolor(I, x1)\n    x4 = backdrop(x3)\n    x5 = toobject(x4, I)\n    x6 = matcher(first, x1)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x2, x7)\n    x9 = totuple(x8)\n    x10 = apply(color, x9)\n    x11 = leastcommon(x10)\n    x12 = ofcolor(I, x1)\n    x13 = initset(x12)\n    x14 = position(x13, x4)\n    x15 = width(I)\n    x16 = ulcorner(x12)\n    x17 = lrcorner(x12)\n    x18 = shape(I)\n    x19 = maximum(x18)\n    x20 = interval(ZERO, x19, ONE)\n    x21 = lbind(multiply, x5)\n    x22 = apply(x21, x20)\n    x23 = pair(x26, x22)\n    x24 = mapply(box, x23)\n    O = fill(I, x3, x24)\n    return O"], [1.0, "def solve_e2c0046c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_3f068a11(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_ed598c2d(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = argmin(x2, size)\n    x4 = shoot(x3, UP_RIGHT)\n    x5 = argmax(x2, size)\n    x6 = shoot(x5, DOWN_LEFT)\n    x7 = shoot(x4, UNITY)\n    x8 = combine(x4, x6)\n    x9 = combine(x7, x8)\n    x10 = fill(I, x1, x9)\n    x11 = replace(x10, x1, EIGHT)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = divide(x12, x13)\n    x15 = width(x11)\n    x16 = interval(ZERO, x15, ONE)\n    x17 = interval(ZERO, x13, ZERO)\n    x18 = product(x16, x17)\n    x19 = rbind(multiply, x14)\n    x20 = apply(x19, x18)\n    x21 = rbind(multiply, x14)\n    x22 = apply(x21, x15)\n    x23 = combine(x20, x22)\n    x24 = lbind(shift, x11)\n    x25 = mapply(x24, x23)\n    O = fill(x10, FOUR, x25)\n    return O"], [1.0, "def solve_5ebb7610(I):\n    x1 = initset(ORIGIN)\n    x2 = index(I, x1)\n    x3 = lrcorner(x1)\n    x4 = add(x3, UNITY)\n    x5 = initset(x4)\n    x6 = astuple(x1, x5)\n    x7 = rbind(shoot, UP)\n    x8 = add(x6, DOWN)\n    x9 = interval(ZERO, x5, ONE)\n    x10 = apply(x7, x9)\n    x11 = apply(x8, x10)\n    x12 = papply(shoot, x11, x7)\n    x13 = add(x3, UNITY)\n    x14 = initset(x13)\n    x15 = astuple(x42, x12)\n    x16 = shift(x12, x15)\n    x17 = difference(x7, x16)\n    x18 = rapply(recolor, x17)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_9b4feb6f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, W, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_24c0baa0(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_c7a0a6f6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_05d0a3d8(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_66fe244a(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_bef843e1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = lbind(507, x2)\n    x4 = rbind(ofcolor, x1)\n    x5 = compose(x3, x4)\n    x6 = x5(I)\n    x7 = leastcolor(x6)\n    x8 = ofcolor(I, x7)\n    x9 = lbind(greater, SEVEN)\n    x10 = compose(x9, x5)\n    x11 = sfilter(x8, x10)\n    x12 = mapply(neighbors, x11)\n    O = fill(I, x1, x12)\n    return O"], [1.0, "def solve_94f8d4be(I):\n    x1 = astuple(vsplit, hsplit)\n    x2 = rbind(rbind, TWO)\n    x3 = rbind(rapply, I)\n    x4 = initset(x2)\n    x5 = lbind(rapply, x4)\n    x6 = chain(first, x3, x5)\n    x7 = lbind(apply, numcolors)\n    x8 = compose(x7, x6)\n    x9 = matcher(x8, TWO_BY_TWO)\n    x10 = extract(x1, x9)\n    x11 = x10(I, TWO)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = palette(x12)\n    x15 = palette(x13)\n    x16 = intersection(x14, x15)\n    x17 = first(x16)\n    x18 = shape(x12)\n    x19 = canvas(x17, x18)\n    x20 = ofcolor(x12, x17)\n    x21 = ofcolor(x13, x17)\n    x22 = intersection(x20, x21)\n    O = fill(x19, TWO, x22)\n    return O"], [1.0, "def solve_c7e78cf6(I):\n    x1 = ofcolor(I, TWO)\n    x2 = shape(I)\n    x3 = multiply(x2, x2)\n    x4 = canvas(ZERO, x3)\n    x5 = rbind(multiply, x2)\n    x6 = apply(x5, x4)\n    x7 = asobject(I)\n    x8 = lbind(shift, x7)\n    x9 = mapply(x8, x6)\n    O = paint(x4, x9)\n    return O"], [1.0, "def solve_f789e6fe(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = lbind(colorcount, I)\n    x5 = argmin(x3, x4)\n    x6 = ofcolor(I, x1)\n    x7 = ofcolor(I, x5)\n    x8 = combine(x6, x7)\n    x9 = mapply(neighbors, x8)\n    x10 = difference(x9, x8)\n    x11 = toobject(x10, I)\n    x12 = leastcolor(x11)\n    x13 = ofcolor(I, x1)\n    x14 = first(x13)\n    x15 = initset(x14)\n    x16 = objects(I, T, F, F)\n    x17 = colorfilter(x16, x12)\n    x18 = lbind(adjacent, x8)\n    x19 = mfilter(x17, x18)\n    x20 = toindices(x19)\n    x21 = rbind(contained, x20)\n    x22 = compose(x21,t)\n    x23 = sfilter(x19, x22)\n    x24 = fill(I, x5, x20)\n    O = fill(x24, x1, x23)\n    return O"], [1.0, "def solve_5a5e96fe(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_7fa82c53(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_46f5ad1e(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_3e83b9ea(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(normalize, x5)\n    x7 = chain(cmirror, x6, dmirror)\n    x8 = rbind(sfilter, x6)\n    x9 = compose(x8, x7)\n    x10 = lbind(chain, x4)\n    x11 = rbind(x10, x9)\n    x12 = lbind(compose, x1)\n    x13 = chain(x11, x12, x7)\n    x14 = lbind(lbind, shift)\n    x15 = chain(x14, x13, x7)\n    x16 = fork(mapply, x15, x13)\n    x17 = fork(mapply, x16, x7)\n    x18 = x17(x1)\n    x19 = replace(I, SIX, x18)\n    O = downscale(x19, TWO)\n    return O"], [1.0, "def solve_ca699e89(I):\n    x1 = asobject(I)\n    x2 = lbind(shift, x1)\n    x3 = compose(x2, decrement)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    O = paint(I, x5)\n    return O"], [1.0, "def solve_32c4062a(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_e06f2d09(I):\n    x1 = fgpartition(I)\n    x2 = sizefilter(x1, FOUR)\n    x3 = apply(toindices, x2)\n    x4 = compose( normalize, toindices)\n    x5 = x4(x2)\n    x6 = lbind(shift, x5)\n    x7 = compose(x6, shape)\n    x8 = halve(x2)\n    x9 = rbind(multiply, x8)\n    x10 = chain(x9, halve, shape)\n    x11 = fork(equality, identity, x7)\n    x12 = sfilter(x3, x11)\n    x13 = lbind(intersection, x5)\n    x14 = compose(x13, size)\n    x15 = chain(size, x13, x14)\n    x16 = argmax(x12, x15)\n    x17 = difference(x5, x16)\n    O = fill(I, THREE, x17)\n    return O"], [1.0, "def solve_56f14ba4(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_4db4e1e0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofmass(x14)\n    x25 = difference(x23, x24)\n    x26 = objects(x25, F, F, T)\n    x27 = compose(hfrontier, center)\n    x28 = fork(recolor, color, x27)\n    x29 = mapply(x28, x26)\n    x30 = merge(x26)\n    x31 = paint(x15, x30)\n    O = paint(x31, x29)\n    return O"], [1.0, "def solve_e7328fd6(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(greater, THREE)\n    x6 = compose(x5, first)\n    x7 = sfilter(x4, x6)\n    x8 = merge(x7)\n    x9 = rot90(x8)\n    x10 = shape(x9)\n    x11 = canvas(x3, x10)\n    x12 = hconcat(x9, x11)\n    x13 = hmirror(x12)\n    O = vconcat(x12, x13)\n    return O"], [1.0, "def solve_3d6cfd6e(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_62cc0fad(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_3c6e85f7(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_5876ff10(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_b687023e(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_26435a52(I):\n    x1 = initset(ORIGIN)\n    x2 = insert(7770, x1)\n    x3 = merge(x2)\n    x4 = cover(I, x3)\n    x5 = chain(dmirror, dmirror, merge)\n    x6 = x5(x4)\n    x7 = lbind(remove, FOUR)\n    x8 = chain(x7, toindices, x5)\n    x9 = compose(x8, x6)\n    x10 = fork(3634436, x9,363)\n    x11 = compose(x5, x10)\n    x12 = ofcolor(x4, FIVE)\n    x13 = ZERO(x12)\n    x14 = ofcolor(x4, TWO)\n    x15 = ZERO(x14)\n    x16 = matcher(first, ZERO)\n    x17 = rbind(sfilter, x16)\n    x18 = lbind(compose, x17)\n    x19 = lbind(rbind, contained)\n    x20 = chain(x18, x19, last)\n    x21 = rbind(compose, x20)\n    x22 = lbind(rbind, sfilter)\n    x23 = compose(x21, x22)\n    x24 = chain(x19, x23, first)\n    x25 = rbind(compose, initset)\n    x26 = x25(x4)\n    x27 = x25(x26)\n    x28 = compose(x25, x27)\n    x29 = fork(mapply, x26, x28)\n    x30 = fork(recolor, first, x29)\n    x31 = mapply(x30, x6)\n    x32 = papply(connect, x31, x24)\n    x33 = difference(x31, x32)\n    x34 = toobject(x33, x4)\n    O = paint(x4, x34)\n    return O"], [1.0, "def solve_89c49298(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = height(x2)\n    x4 = width(x2)\n    x5 = neighbors(ORIGIN)\n    x6 = toindices(x2)\n    x7 = lbind(shift, x6)\n    x8 = height(I)\n    x9 = divide(x8, x3)\n    x10 = width(I)\n    x11 = divide(x10, x4)\n    x12 = astuple(x9, x11)\n    x13 = maximum(x12)\n    x14 = increment(x13)\n    x15 = interval(ONE, x14, ONE)\n    x16 = astuple(x3, x4)\n    x17 = lbind(multiply, x16)\n    x18 = compose(crement, x17)\n    x19 = lbind(mapply, x7)\n    x20 = rbind(apply, x15)\n    x21 = lbind(rbind, multiply)\n    x22 = compose(x21, x18)\n    x23 = chain(x19, x20, x22)\n    x24 = rbind(toobject, I)\n    x25 = compose(x7, x18)\n    x26 = chain(palette, x24, x25)\n    x27 = mostcolor(I)\n    x28 = rbind(equality, x27)\n    x29 = rbind(argmin, x28)\n    x30 = compose(x29, x26)\n    x31 = fork(recolor, x30, x23)\n    x32 = mapply(x31, x5)\n    O = paint(I, x32)\n    return O"], [1.0, "def solve_e202aed0(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_6bf045ea(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = x2(I, TWO)\n    x4 = order(x3, numcolors)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = objects(x6, F, F, T)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(first, x9)\n    x11 = compose(flip, x10)\n    x12 = rbind(sfilter, x11)\n    x13 = lbind(occurrences, x5)\n    x14 = compose(x13, x12)\n    x15 = chain(positive, size, x14)\n    x16 = sfilter(x7, x15)\n    x17 = chain(first, x13, x12)\n    x18 = compose(ulcorner, x12)\n    x19 = fork(subtract, x17, x18)\n    x20 = fork(shift, identity, x19)\n    x21 = apply(x20, x16)\n    x22 = compose(decrement, width)\n    x23 = chain(positive, decrement, x22)\n    x24 = mfilter(x21, x23)\n    O = paint(x5, x24)\n    return O"], [1.1, "def solve_28321aa3(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = asindices(I)\n    x5 = apply(first, x4)\n    x6 = difference(x5, x3)\n    x7 = ofcolor(I, x1)\n    x8 = rbind(interval, ONE)\n    x9 = lbind(rbind, contained)\n    x10 = lbind(sfilter, x6)\n    x11 = rbind(matcher, ZERO)\n    x12 = chain(size, x10, x9)\n    x13 = lbind(sfilter, x7)\n    x14 = lbind(compose, x12)\n    x15 = chain(x13, x11, x14)\n    x16 = lbind(fork, x8)\n    x17 = compose(increment, minimum)\n    x18 = lbind(lbind, astuple)\n    x19 = lbind(chain, x17)\n    x20 = rbind(x19, first)\n    x21 = chain(x20, x18, first)\n    x22 = lbind(chain, maximum)\n    x23 = rbind(x22, first)\n    x24 = chain(x23, x18, first)\n    x25 = fork(x16, x21, x24)\n    x26 = compose(x15, x25)\n    x27 = apply(toivec, x3)\n    x28 = apply(x26, x27)\n    x29 = argmax(x28, width)\n    x30 = remove(x29, x28)\n    x31 = ulcorner(x29)\n    x32 = invert(x31)\n    x33 = shift(x29, x32)\n    x34 = asindices(I)\n    x35 = center(x34)\n    x36 = invert(x35)\n    x37 = shift(x34, x36)\n    x38 = width(I)\n    x39 = asobject(I)\n    x40 = lbind(shift, x39)\n    "], [1.1, "def solve_3f143bae(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(color, TWO)\n    x9 = rbind(colorcount, x3)\n    x10 = compose(x9, palette)\n    x11 = argmin(x7, x10)\n    x12 = other(x7, x11)\n    x13 = remove(x11, x7)\n    x14 = normalize(x13)\n    x15 = last(x14)\n    x16 =495(x15)\n    x17 = color(x11)\n    x18 = remove(x16, x15)\n    x19 = repeat(x17, ONE)\n    x20 = combine(x18, x19)\n    x21 = fgpartition(x20)\n    x22 = argmax(x21, lowermost)\n    x23 = add(x22, UP)\n    x24 = initset(x23)\n    x25 = insert(x22, x24)\n    x26 = lbind(intersection, x25)\n    x27 = compose(x26, last)\n    x28 = fork(recolor, first, x27)\n    x29 = normalize(x25)\n    x30 = objects(x6, T, F, T)\n    x31 = apply(toindices, x30)\n    x32 = lbind(shift, x29)\n    x33 = mapply(x32, x31)\n    x34 = paint(x20, x33)\n    x35 = rot90(x34)\n    x36 = paint(x35, x4)\n    x37 = rot90(x36)\n    x38 = paint(x37, x4)\n    x39 = rot90(x38)\n    x40 = paint(x39, x4)\n    x41 = rot90(x40)\n    x42 = paint("], [1.1, "def solve_f01b5c3d(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = hmirror(x4)\n    x41 = lrcorner(x4)\n"], [1.1, "def solve_7a16d774(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_14e52772(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_5d426466(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = neighbors(x6)\n    x15 = increment(x4)\n    x16 = insert(x15, x14)\n    x17 = initset(x16)\n    x18 =insert(x33, x17)\n    x19 = height(x12)\n    x20 = increment(x4)\n    x21 = insert(x19, x20)\n    x22 = width(x12)\n    x23 = increment(x4)\n    x24 = interval(ZERO, x23, ONE)\n    x25 = lbind(toobject, x12)\n    x26 = increment(x22)\n    x27 = increment(x25)\n    x28 = add(x26, x27)\n    x29 = lbind(toobject, x13)\n    x30 = increment(x24)\n    x31 = increment(x25)\n    x32 = astuple(ZERO, x30)\n    x33 = astuple(ZERO, x31)\n    x34 = add(x32, x33)\n    x35 = lbind(recolor, x3)\n    x36 =decrement(x34)\n    x37 = lbind(ofcolor, x12)\n    x38 = crop(x12, x36, x37)\n    x39 = compose(x35, x38)\n    x40 = power(x39, THREE)\n    x41 = x40(x32)\n    x42 = papply(recolor, x41, x38)\n    O"], [1.1, "def solve_39f3fad4(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, FOUR)\n    x6 = compose(fdg54444(I)\n    x7 = chain(x4, x5, x6)\n    x8 = rbind(repeat, ONE)\n    x9 = compose(x8, x7)\n    x10 = rbind(compose, x4)\n    x11 = lbind(rbind, NEG_ONE)\n    x12 = compose(x11, x10)\n    x13 = chain(x9, x12, x7)\n    x14 = chain(x11, x10, x13)\n    x15 = lbind(lbind, x4)\n    x16 = compose(x15, x14)\n    x17 = fork(compose, x7, x16)\n    x18 = fork(combine, x17, x1111)\n    x19 = lbind(rbind, rot90)\n    x20 = chain(x19, x19, x7)\n    x21 = double(EIGHT)\n    x22 = interval(TWO, x21, ONE)\n    x23 = lbind(x20, x174)\n    x24 = chain(x23, x21, x20)\n    x25 = lbind(lbind, rot270)\n    x26 = chain(x25, rbind, x24)\n    x27 = fork(compose, x28, x26)\n    x28 = lbind(rbind, rot90)\n    x29 = chain(x28, x27, x29)\n    x30 = lbind(lbind, rot270)\n    x31 = chain(x30, rbind, x29)\n    x32 = lbind(lbind, invert)\n    x33 = chain(x32, x31, x18)\n    x34 = fork(compose, x29, x28)\n    x35 = fork(compose, x30, x33)\n    x"], [1.1, "def solve_ad891ae2(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_592eccd8(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = width(x4)\n    x6 = toivec(x5)\n    x7 = index(x4, x6)\n    x8 = shape(x4)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x4, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, rot90)\n    x16 = lbind(power, rot270)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x13)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x19)\n    x24 = uppermost(x12)\n    x25 = lbind(add, x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = lbind(multiply, x27)\n    x29 = chain(toivec, x25, x28)\n    x30 = fork(shift, x23, x29)\n    x31 = compose(asobject, x22)\n    x32 = uppermost(x12)\n    x33 = lbind(subtract, x32)\n    x34 = height(x12)\n    x35 = increment(x34)\n    x36 = lbind(multiply, x35)\n    x37 = chain(toivec, x33, x36)\n    x38 = fork(shift, x31, x37)\n    x39 = fork(combine"], [1.1, "def solve_1e58757b(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    x3 = add(TWO, x2)\n    x4 = canvas(x1, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = paint(x4, x6)\n    x8 = double(SIX)\n    x9 = astuple(ONE, x8)\n    x10 = connect(UNITY, x9)\n    x11 = outbox(x10)\n    x12 = backdrop(x11)\n    x13 = recolor(x1, x12)\n    x14 = recolor(THREE, x10)\n    x15 = lbind(shift, x14)\n    x16 = lbind(mapply, x15)\n    x17 = rbind(occurrences, x13)\n    x18 = compose(x16, x17)\n    x19 = fork(paint, identity, x18)\n    x20 = x19(x7)\n    x21 = ofcolor(x20, THREE)\n    x22 = dmirror(x7)\n    x23 = x19(x22)\n    x24 = dmirror(x23)\n    x25 = ofcolor(x24, THREE)\n    x26 = combine(x21, x25)\n    x27 = fill(x7, THREE, x26)\n    x28 = astuple(TWO, ONE)\n    x29 = dneighbors(UNITY)\n    x30 = remove(x28, x29)\n    x31 = recolor(x1, x30)\n    x32 = initset(UNITY)\n    x33 = recolor(THREE, x32)\n    x34 = combine(x31, x33)\n    x35 = recolor(x1, x34)\n    x36 = astuple(ONE, THREE)\n    x37 = initset(x36)\n    x38 = insert(ZERO_BY_TWO, x37)\n    x39 = insert(RIGHT, x38)\n    x40 = insert(DOWN, x39)\n    x41 ="], [1.1, "def solve_34114419(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(toindices, x3)\n    x5 = partition(I)\n    x6 = fork(equality, identity, corners)\n    x7 = difference(x5, x4)\n    x8 = extract(x7, x6)\n    x9 = leastcolor(x8)\n    x10 = matcher(dmirror, x8)\n    x11 = extract(x10, x6)\n    x12 = lbind(compose, flip)\n    x13 = rbind(matcher, x12)\n    x14 = compose(x13, identity)\n    x15 = lbind(fork, sfilter)\n    x16 = lbind(x15, identity)\n    x17 = lbind(lbind, extract)\n    x18 = compose(x16, x17)\n    x19 = lbind(ofcolor, I)\n    x20 = compose(x19, mostcolor)\n    x21 = fork(apply, x18, x20)\n    x22 = compose(x12, x21)\n    x23 = fork(hmirror, x22, identity)\n    x24 = compatible(x8, x11)\n    x25 = contained(x24, x11)\n    x26 =356(x25, UNITY)\n    x27 = canvas(x9, x26)\n    x28 = asobject(x27)\n    x29 = paint(x27, x28)\n    x30 = height(x28)\n    x31 = width(x28)\n    x32 = divide(x30, x31)\n    x33 = increment(x32)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = compose(double, halve)\n    x36 = lbind(apply, last)\n    x37 = lbind(sfilter, x34)\n    x38 = chain(x37, x35, x36)\n    x39 = lbind(shift, x28)\n    x40 = compose(x39, toivec"], [1.1, "def solve_62730e66(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = compose(x5, color)\n    x7 = compose(double, x4)\n    x8 = lbind(prapply, manhattan)\n    x9 = fork(x8, identity, x7)\n    x10 = lbind(remove, ZERO)\n    x11 = compose(x10, x9)\n    x12 = rbind(branch, NEG_TWO)\n    x13 = fork(x12, positive, x11)\n    x14 = chain(x13, minimum, x11)\n    x15 = fork(add, x14, x7)\n    x16 = chain(x5, x13, x15)\n    x17 = compose(initset, x16)\n    x18 = fork(rapply, x17, x14)\n    x19 = compose(first, x18)\n    x20 = compose(x5, x19)\n    x21 = extract(x2, x20)\n    x22 = first(x21)\n    x23 = last(x21)\n    x24 = divide(x6, x23)\n    x25 = increment(x24)\n    x26 = width(I)\n    x27 = interval(ZERO, x26, x25)\n    x28 = apply(tojvec, x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x27)\n    x31 = fill(I, FIVE, x30)\n    x32 = objects(x31, T, F, T)\n    x33 = colorfilter(x32, FIVE)\n    x34 = apply(first, x33)\n    x35 = valmax(x34, size)\n    x36 = x35(x34)\n    x37 = equality(x36, ONE)\n    x38 = branch(x37, x35, x34)\n    x39"], [1.1, "def solve_c04cbcc9(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =407960873df22(x1, x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(x5, I)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x8, x18)\n    x20 = lbind(colorcount, x17)\n    x21 = argmin(x19, x20)\n    x22 = rbind(colorcount, x21)\n    x23 = rbind(toobject, I)\n    x24 = chain(x22, x23, x28)\n    x25 = colorfilter(x1, x24)\n    x26 = sfilter(x25, x28)\n    x27 = difference(x25, x26)\n    x28 = objects(x27, T, T, T)\n    x29 = rbind(colorcount, x21)\n    x30 = argmax(x29, x28)\n    x31 = subgrid(x30, x27)\n    x32 = rbind(order, identity)\n    x33 = apply(x32, x31)\n    x34 = vmirror(x31)\n    x35 = x36(x34)\n    x36 = x33(x35)\n    x37 = hconcat(x35, x36)\n    x38 = objects(x37, T, T, T)\n    x39 = apply"], [1.1, "def solve_cd4b13d1(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = astuple(d13, c)\n    x9 = astuple(x10, x7)\n    x10 = hline(x8)\n    x11 = ulcorner(x8)\n    x12 = shoot(x11, UNITY)\n    x13 =7220(x12)\n    x14 = mapply(first, x12)\n    x15 =18722224(x14)\n    x16 = center(x15)\n    x17 = matcher(first, x7)\n    x18 = sfilter(x1, x17)\n    x19 = lbind(adjacent, x8)\n    x20 = mfilter(x18, x19)\n    x21 = toindices(x20)\n    x22 = NEG_UNITY(x21)\n    x23 = uppermost(x20)\n    x24 = shoot(x23, UNITY)\n    x25 = size(x24)\n    x26 = increment(x25)\n    x27 = matcher(first, x8)\n    x28 = compose(flip, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = lbind(recolor, x3)\n    x31 = compose(x30, mostcolor)\n    x32 = fork(combine, x29, x31)\n    x33 = lbind(lbind, shift)\n    x34 = lbind(occurrences, I)\n    x35 = compose(x33, x34)\n    x36 = lbind(mapply, x35)\n    x37 = chain(x36, x33, x28)\n    x38 = fork(mapply, x24, x17)\n    x39 = fork(mapply, x28, xcolor)\n    x40 = fork(combine, x38, x39)"], [1.1, "def solve_efe3bb69(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = lbind(index, I)\n    x2 = compose(x1, size)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(775, x5)\n    x5 = astuple(cmirror, x3)\n    x6 = combine(x4, x5)\n    x7 = fork(vsplit, identity, height)\n    x8 = chain(asobject, first, x7)\n    x9 = mostcolor(I)\n    x10 = matcher(x8, x9)\n    x11 = compose(flip, x10)\n    x12 =1111(I)\n    x13 = rbind(f25fb575, x12)\n    x14 = rbind(sfilter, x11)\n    x15 = compose(x14, dneighbors)\n    x16 = chain(x13, x15, toindices)\n    x17 = fork(mapply, x16, identity)\n    x18 = compose(x12, x17)\n    x19 = fork(intersection, x18, toindices)\n    x20 = compose(size, x19)\n    x21 = matcher(x20, ZERO)\n    x22 = lbind(apply, x9)\n    x23 = chain(flip, x21, x22)\n    x24 = fork(mapply, x18, x23)\n    x25 = shape(I)\n    x26 = maximum(x25)\n    x27 = toindices(x26)\n    x28 = ZERO(x25)\n    x29 = toindices(x28)\n    x30 =multiply(x27, x29)\n    x31 = rbind(add, x30)\n    x32 = lbind(object, I)\n    x33 = compose(x31, x32)\n    x34 = ofcolor(x12, x19)\n    x35 = ofcolor(x21, x12)\n    x36 = intersection(x34, x35)\n    x37 = fill(x12, TWO, x36)\n    x38 = lbind(chain, size)\n    x39 = compose"], [1.1, "def solve_130c80b4(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_5e543a93(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, branch)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)\n    "], [1.1, "def solve_79ad0713(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(identity, dmirror)\n    x5 = astuple(cmirror, hmirror)\n    x6 = combine(x4, x5)\n    x7 = rbind(rapply, I)\n    x8 = compose(first, x7)\n    x9 = chain(x3, x8, initset)\n    x10 = extract(x6, x9)\n    x11 = x10(I)\n    x12 = mostcolor(I)\n    x13 = palette(I)\n    x14 = remove(x12, x13)\n    x15 = restuple(x14)\n    x16 = ofcolor(x11, x12)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, identity, vmirror)\n    x20 = x19(x11)\n    x21 = ofcolor(x20, x12)\n    x22 = ofcolor(x20, x12)\n    x23 = leftmost(x22)\n    x24 = equality(x23, ZERO)\n    x25 = branch(x24, identity, hmirror)\n    x26 = x25(x11)\n    x27 = ofcolor(x26, x12)\n    x28 = ofcolor(x26, x12)\n    x29 = rbind(add, DOWN)\n    x30 = compose(x29, last)\n    x31 = fork(equality, identity, x30)\n    x32 = compose(flip, x31)\n    x33 = extract(x27, x32)\n    x34 = x33(x26)\n    x35 = toindices(x34)\n    x36 = first(x35)\n    x37 = last(x35)\n    x38 =573(x36, x37)\n    x39 = shift(x38, x34)\n    x40 = paint(x11, x39)\n    x"], [1.1, "def solve_f8d876b8(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_758888ad(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = fork(shoot, identity, corners)\n    x8 = compose(x7, center)\n    x9 = fork(shoot, identity, x8)\n    x10 = size(x6)\n    x11 = lefthalf(I)\n    x12 = righthalf(I)\n    x13 = rbind(order, identity)\n    x14 = rbind(order, incd)\n    x15 = compose(x13, x14)\n    x16 = lbind(rbind, shift)\n    x17 = compose(x16, x15)\n    x18 = fork(compose, x17, x15)\n    x19 = lbind(lbind, mapply)\n    x20 = compose(x19, x18)\n    x21 = fork(sfilter, x18, x20)\n    x22 = compose(size, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(I)\n    x26 = colorfilter(x25, x24)\n    x27 = compose(maximum, shape)\n    x28 = argmin(x26, x27)\n    x29 = color(x28)\n    x30 = remove(x28, x26)\n    x31 = x30(x36)\n    x32 = mapply(neighbors, x31)\n    x33 = difference(x32, x32)\n    x34 = toobject(x33, I)\n    x35 = apply(x38, x34)\n    x36 = size(x35)\n    x37 = sfilter(x33, x36)\n    x38 = toobject(x37, I)\n    x39 = difference(x34, x38)\n    x40 = canvas(x39, UNITY)\n    x41 = paint(x40, x"], [1.1, "def solve_3e5c6825(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = width(x4)\n    x6 = toivec(x5)\n    x7 = index(x4, x6)\n    x8 = shape(x4)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x4, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, rot90)\n    x16 = lbind(power, rot270)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x13)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x19)\n    x24 = uppermost(x12)\n    x25 = lbind(add, x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = lbind(multiply, x27)\n    x29 = chain(toivec, x25, x28)\n    x30 = fork(shift, x23, x29)\n    x31 = compose(asobject, x22)\n    x32 = uppermost(x12)\n    x33 = lbind(subtract, x32)\n    x34 = height(x12)\n    x35 = increment(x34)\n    x36 = lbind(multiply, x35)\n    x37 = chain(toivec, x33, x36)\n    x38 = fork(shift, x31, x37)\n    x39 = fork(combine"], [1.1, "def solve_ff2c5f3b(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = palette(I)\n    x2 = compose(maximum, shape)\n    x3 = lbind(apply, x2)\n    x4 = lbind(ofcolor, I)\n    x5 = chain(x3, x4, x2)\n    x6 = compose(maximum, shape)\n    x7 = fork(equality, x5, x6)\n    x8 =    filter(x1, x7)\n    x9 = lbind(index, I)\n    x10 = compose(x9, x7)\n    x11 = fork( equality, x10, x6)\n    x12 = fork(either, x12, x11)\n    x13 = matcher(x10, ZERO)\n    x14 = sfilter(x8, x13)\n    x15 = difference(x8, x14)\n    x16 = lbind(colorcount, I)\n    x17 =765d511(x16)\n    x18 = argmin(x15, x17)\n    x19 = ofcolor(I, x18)\n    x20 = urcorner(x14)\n    x21 = ulcorner(x14)\n    x22 = subtract(x20, x21)\n    x23 = colorfilter(x19, x22)\n    x24 = count27(x23)\n    x25 = asobject(I)\n    x26 = subgrid(x25, x24)\n    x27 = asindices(x26)\n    x28 = toobject(x27, x26)\n    x29 = mostcolor(x28)\n    x30 = ofcolor(x26, x29)\n    x31 = replace(I, x18, x29)\n    x32 = x29(x31)\n    x33 = asobject(x32)\n    x34 = occurrences(x31, x33)\n    x35 = mapply(first, x34)\n    x36 = maximum(x31)\n    x37 = downscale(x35, x36)\n    x38 = asindices(x37)\n    x39 = box(x38)\n    x40 = fill(x37, x39, x37)\n    "], [1.1, "def solve_0c7785d7(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_7ee58563(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_e3e13ea9(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = switch(I, THREE, FOUR)\n    x2 = ofcolor(x1, ZERO)\n    x3 = asindices(x1)\n    x4 = difference(x3, x2)\n    x5 = normalize(x4)\n    x6 = recolor(ONE, x5)\n    x7 = mostcolor(I)\n    x8 = paint(x1, x7)\n    O = compose(initset, lrcorner)\n    x19 = fork( insert, ulcorner, x8)\n    x20 = insert(I, x4)\n    x21 = insert(lrcorner, x20)\n    x22 = fork(contained, square, identity)\n    x23 = compose(x22, ulcorner)\n    x24 = astuple(normalize, NEG_TWO)\n    x25 = branch(x11, x24, x23)\n    x26 = asindices(x1)\n    x27 = box(x26)\n    x28 = toobject(x27, I)\n    x29 = combine(x28, x25)\n    x30 = mostcolor(x29)\n    x31 = matcher(x23, x30)\n    x32 = compose(flip, x31)\n    x33 = rbind(sfilter, x32)\n    x34 = chain(positive, size, x33)\n    x35 = rbind(sfilter, x24)\n    x36 = compose(maximum, x35)\n    x37 = apply(x36, x22)\n    x38 = lbind(fork, FIVE)\n    x39 = lbind(x38, identity)\n    x40 = lbind(lbind, shift)\n    x41 = compose(x39, x40)\n    x42 = lbind(chain, x40)\n    x43 = rbind(x42, x30)\n    x44 = lbind(rbind, occurrences)\n    x45 = chain(x41, x44, identity)\n    x46 = lbind(compose, x flip)\n    x47 = chain(x41, x46, identity)\n    x48 = lbind"], [1.1, "def solve_aa09ef21(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_4df48e23(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_6ed670a2(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_945f0060(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = compose(x32, leftmost)\n    x37 = rbind(compose, x30)\n    x38 = lbind(compose, x37)\n    x39 = lbind(x31, x15)\n    x40 = rbind(sfilter, x35)\n    x41 = chain(x39, x40, size)\n    x42 = lbind(d"], [1.1, "def solve_0509b41f(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_94c8c5ba(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_8a3f88b0(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_7a50a92e(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = vmirror(I)\n    x2 = fgpartition(x1)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = index(x1, x4)\n    x6 = portrait(x5)\n    x7 = branch(x6, identity, dmirror)\n    x8 = x7(x1)\n    x9 = objects(x8, T, F, T)\n    x10 = branch(x6, identity, vmirror)\n    x11 = x10(x9)\n    x12 = mostcolor(I)\n    x13 = shape(x11)\n    x14 = canvas(x12, x13)\n    x15 = hconcat(x11, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = apply(uppermost, x16)\n    x18 = size(x17)\n    x19 = order(x17, uppermost)\n    x20 = apply(color, x19)\n    x21 = extract(x20, last)\n    x22 = remove(x21, x19)\n    x23 = argmin(x22, uppermost)\n    x24 = other(x22, x23)\n    x25 = color(x23)\n    x26 = color(x24)\n    x27 = fill(x15, x23, x24)\n    x28 = fill(x27, x26, x25)\n    x29 = fill(x28, x26, x21)\n    x30 = dmirror(x29)\n    x31 = papply(pair, x29, x30)\n    x32 = lbind(apply, maximum)\n    x33 = rbind(sfilter, x32)\n    x34 = chain(cde solve, x33, x24)\n    x35 = pair(x31, x31)\n    x36 = apply(x34, x35)\n    x37 =50(x36)\n    x38 = height(x36)\n    x39 = apply(size, x36)\n    x40 = repeat(x39, ONE)\n    "], [1.1, "def solve_e6d9f80c(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = compose(first, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = compose(last, last)\n    x8 = totuple(x2)\n    x9 = apply(x7, x8)\n    x10 = mostcommon(x9)\n    x11 = compose(first, last)\n    x12 = matcher(x11, x6)\n    x13 = sfilter(x2, x12)\n    x14 = compose(last, last)\n    x15 = matcher(x14, x10)\n    x16 = sfilter(x2, x15)\n    x17 = objects(I, F, T, T)\n    x18 = size(x17)\n    x19 = equality(x18, TWO)\n    x20 = mfilter(x17, hline)\n    x21 = mfilter(x17, vline)\n    x22 = branch(x19, x20, x13)\n    x23 = branch(x19, x21, x16)\n    x24 = width(x22)\n    x25 = lbind(multiply, x24)\n    x26 = width(I)\n    x27 = divide(x26, x24)\n    x28 = increment(x27)\n    x29 = interval(ZERO, x28, ONE)\n    x30 = apply(x25, x29)\n    x31 = apply(invert, x30)\n    x32 = combine(x30, x31)\n    x33 = apply(tojvec, x32)\n    x34 = lbind(shift, x22)\n    x35 = mapply(x34, x33)\n    x36 = height(x23)\n    x37 = lbind(multiply, x36)\n    x38 = height(I)\n    x39 = height(x22)\n    x40 = divide(x38, x39)\n    x41 = increment(x40)\n    x42 = interval"], [1.1, "def solve_3a4e1012(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = partition(I)\n    x6 = fork(multiply, height, width)\n    x7 = fork(equality, size, x6)\n    x8 = extract(x5, x7)\n    x9 = color(x8)\n    x10 = palette(I)\n    x11 = remove(x4, x10)\n    x12 = other(x11, x9)\n    x13 = ofcolor(I, x12)\n    x14 = vmirror(x13)\n    x15 = hmirror(x13)\n    x16 = toindices(x8)\n    x17 = combine(x16, x13)\n    x18 = height(x17)\n    x19 = halve(x18)\n    x20 = increment(x19)\n    x21 = width(x17)\n    x22 = halve(x21)\n    x23 = increment(x22)\n    x24 = astuple(x20, x23)\n    x25 = maximum(x24)\n    x26 = invert(x25)\n    x27 = increment(x25)\n    x28 = interval(x26, x27, ONE)\n    x29 = product(x28, x28)\n    x30 = initset(x15)\n    x31 = insert(x14, x30)\n    x32 = product(x29, x31)\n    x33 = ofcolor(I, x4)\n    x34 = rbind(intersection, x33)\n    x35 = fork(shift, last, first)\n    x36 = chain(size, x34, x35)\n    x37 = matcher(x36, ZERO)\n    x38 = sfilter(x32, x37)\n    x39 = rbind(intersection, x13)\n    x40 = fork(shift, last, first)\n    x41 = chain(size, x39, x40)\n    x42 = argmax(x38, x41"], [1.1, "def solve_a3be86c6(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivef15, x1)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4"], [1.1, "def solve_10a4f2de(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = inbox(x20)\n    x22 = cover(I, x21)\n    x23 = lrcorner(x206)\n    x24 = ofcolor(x22, x18)\n    x25 = inbox(x24)\n    x26 = recolor(x18, x24)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, x22)\n    x29 = color(x28)\n    x30 = inbox(x25)\n    x31 = recolor(x29, x25)\n    x32 = combine(x27, x31)\n    x33 = mapply(d90, x32)\n    x34 = fill(x22, x1, x33)\n    x35 = ofcolor(x34, x19)\n    x36 = subgrid(x35, x34)\n    x37 = asindices(x36)\n    x38 = box(x37)\n    x39 = fill(x34, x19, x38)\n    x40 = difference(x37, x"], [1.1, "def solve_973bb449(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = chain(double, last, first)\n    x4 = fork(equality, x3, x2)\n    x5 = sfilter(x1, x4)\n    x6 = vsplit(I, TWO)\n    x7 = rbind(hsplit, TWO)\n    x8 = extract(x6, x7)\n    x9 =150(x8)\n    x10 = last(x8)\n    x11 = remove(x10, x8)\n    x12 = solve(hline, x11)\n    x13 = center(x12)\n    x14 = dneighbors(x13)\n    x15 = insert(x13, x14)\n    x16 = toobject(x15, I)\n    x17 = mostcolor(x16)\n    x18 = palette(x16)\n    x19 = remove(x17, x18)\n    x20 = valuple(x19, x15)\n    x21 = other(x19, x20)\n    x22 = replace(x9, x21, x11)\n    x23 = combine(x15, x22)\n    x24 = ofcolor(x23, x21)\n    x25 = mapply(dneighbors, x24)\n    x26 = astuple(x25, x22)\n    x27 = other(x25, x26)\n    x28 = color(x27)\n    x29 = color(x8)\n    x30 = greater(x26, x29)\n    x31 = branch(x30, identity, dneighbors)\n    x32 = initset(x13)\n    x33 = insert(x32, x31)\n    x34 = insert(x17, x33)\n    x35 = hconcat(x34, x111)\n    x36 = vconcat(x35, x111)\n    x37 = vconcat(x36, x36)\n    x38 = vconcat(x37, x36)\n    x39 = halve(x38)\n    x40 = dneighbors"], [1.1, "def solve_fd7d21a8(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_90589327(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_074d71dc(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(identity, dmirror)\n    x5 = astuple(cmirror, hmirror)\n    x6 = combine(x4, x5)\n    x7 = rbind(rapply, I)\n    x8 = compose(first, x7)\n    x9 = chain(x3, x8, initset)\n    x10 = extract(x6, x9)\n    x11 = x10(I)\n    x12 = mostcolor(I)\n    x13 = palette(I)\n    x14 = remove(x12, x13)\n    x15 = other(x14, TWO)\n    x16 = ofcolor(x11, x15)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, identity, vmirror)\n    x20 = x19(x11)\n    x21 = ofcolor(x20, x15)\n    x22 = ofcolor(x20, TWO)\n    x23 = apply(last, x22)\n    x24 = insert(ZERO, x23)\n    x25 = width(x20)\n    x26 = insert(x25, x24)\n    x27 = order(x26, identity)\n    x28 = last(x27)\n    x29 = remove(x28, x27)\n    x30 = first(x27)\n    x31 = remove(x30, x27)\n    x32 = pair(x29, x31)\n    x33 = size(x29)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = pair(x34, x32)\n    x36 = lbind(fork, connect)\n    x37 = compose(first, last)\n    x38 = chain(decrement, last, last)\n    x39 = lbind(lbind, add)\n    x40 = compose(x39, first)\n    x41 = lbind("], [1.1, "def solve_fd4053c0(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_8ada2fb9(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = compose(first, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = compose(last, last)\n    x8 = totuple(x2)\n    x9 = apply(x7, x8)\n    x10 = mostcommon(x9)\n    x11 = compose(first, last)\n    x12 = matcher(x11, x6)\n    x13 = sfilter(x2, x12)\n    x14 = compose(last, last)\n    x15 = matcher(x14, x10)\n    x16 = sfilter(x2, x15)\n    x17 = objects(I, F, T, T)\n    x18 = size(x17)\n    x19 = equality(x18, TWO)\n    x20 = mfilter(x17, hline)\n    x21 = mfilter(x17, vline)\n    x22 = branch(x19, x20, x13)\n    x23 = branch(x19, x21, x16)\n    x24 = width(x22)\n    x25 = lbind(multiply, x24)\n    x26 = width(I)\n    x27 = divide(x26, x24)\n    x28 = increment(x27)\n    x29 = interval(ZERO, x28, ONE)\n    x30 = apply(x25, x29)\n    x31 = apply(invert, x30)\n    x32 = combine(x30, x31)\n    x33 = apply(tojvec, x32)\n    x34 = lbind(shift, x22)\n    x35 = mapply(x34, x33)\n    x36 = height(x23)\n    x37 = lbind(multiply, x36)\n    x38 = height(I)\n    x39 = height(x22)\n    x40 = divide(x38, x39)\n    x41 = increment(x40)\n    x42 = interval"], [1.1, "def solve_e6eb1aed(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 =8888(I, TWO)\n    x2 = apply(d687, x1)\n    x3 = height(x2)\n    x4 = width(x2)\n    x5 = trim(x2)\n    x6 = FOUR(x5)\n    x7 = equality(x6, ONE)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = uppermost(x10)\n    x12 = leftmost(x10)\n    x13 = index(x9, x11)\n    x14 = uppermost(x12)\n    x15 = rightmost(x12)\n    x16 = index(x9, x15)\n    x17 = decrement(x13)\n    x18 = leftmost(x2)\n    x19 = initset(x18)\n    x20 = insert(x11, x19)\n    x21 = difference(x10, x20)\n    x22 =698( fill, FOUR, x21)\n    x23 = objects(x22, T, F, T)\n    x24 = apply(toindices, x23)\n    x25 = lbind(index, x9)\n    x26 = compose(x25, shape)\n    x27 = astuple(x17, x26)\n    x28 = lbind(multiply, x27)\n    x29 = apply(x28, x24)\n    x30 = order(x29, identity)\n    x31 = lbind(apply, last)\n    x32 = lbind(rbind,ofcolor)\n    x33 = rbind(sfilter, x31)\n    x34 = rbind(compose, palette)\n    x35 = lbind(lbind, contained)\n    x36 = chain(x34, x33, x35)\n    x37 = rbind(sfilter, x32)\n    x38 = rbind(compose, palette)\n    x39 = lbind(lbind, contained)\n    x40 = chain(x37, x38, x39)\n    x41 = x36"], [1.1, "def solve_a1d7d322(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_9e476659(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_aa1951bb(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18, x"], [1.1, "def solve_7ddbef2c(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(F, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(F, x21)\n    x23 = color(I)\n    x24 = canvas(x23, x22)\n    x25 = colorcount(I, x7)\n    x26 = decrement(x25)\n    x27 = tojvec(x26)\n    x28 = connect(ORIGIN, x27)\n    x29 = height(I)\n    x30 = equality(x29, x27)\n    x31 = decrement(x30)\n    x32 = tojvec(x31)\n    x33 = connect(ORIGIN, x32)\n    x34 = width(I)\n    x35 = increment(x34)\n    x36 = tojvec(x35)\n    x37 = decrement(x36)\n    x38 = tojvec(x37)\n    x39 = connect(ORIGIN, x38)\n    x40 = height(I)\n    x41 = decrement(x40)\n    x42 = toivec(x41)\n    x43 = subtract(x42, x31)\n    x44 = width(I)\n    x45 = decrement(x44)\n    x46 = tojvec"], [1.1, "def solve_a9d5674a(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, vmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = divide(x17, x14)\n    x19 = increment(x18)\n    x20 = interval(ZERO, x19, ONE)\n    x21 = width(x3)\n    x22 = multiply(x21, x14)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x18)\n    x25 = rbind(divide, x18)\n    x26 = compose(x24, x25)\n    x27 = apply(x26, x20)\n    x28 = astuple(x19, x22)\n    x29 = lbind(multiply, x28)\n    x30 = apply(x29, x21)\n    x31 = apply(x30, x23)\n    x32 = combine(x29, x31)\n    x33 = mapply(x17, x32)\n    x34 = astuple(x3, x2005)\n    x35 = canvas(ZERO, x34)\n    x36 = asindices(x35)\n    x37 = shift(x36, x37)\n    x38 = shape(I)\n    x39 = maximum(x38)\n    x40 = lbind(multiply,"], [1.1, "def solve_adcb5fc4(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x20, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = compose(x36, first)\n    x38 = argmin(x35, x37)\n    x39 = first(x38)\n    x40"], [1.1, "def solve_e39c9ff0(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = fork(combine, first, last)\n    x9 = compose(x8, vmirror)\n    x10 = totuple(x7)\n    x11 = apply(x9, x10)\n    x12 = mostcommon(x11)\n    x13 = matcher(x9, x12)\n    x14 = extract(x11, x13)\n    x15 = last(x14)\n    x16 = height(x15)\n    x17 = rot90(I)\n    x18 = interval(ZERO, x17, ONE)\n    x19 = rbind(multiply, x16)\n    x20 = apply(x19, x18)\n    x21 = rbind(multiply, x16)\n    x22 = apply(x21, x18)\n    x23 = pair(x20, x22)\n    x24 = lbind(canvas, ZERO)\n    x25 = compose(x24, last)\n    x26 = fork(other, first, x25)\n    x27 = palette(I)\n    x28 = mostcolor(I)\n    x29 = remove(x28, x29)\n    x30 = lbind(hconcat, I)\n    x31 = argmin(x30, x30)\n    x32 = ofcolor(x15, x31)\n    x33 = mapply(vfrontier, x32)\n    x34 = mapply(hfrontier, x32)\n    x35 = size(x13)\n    x36 = size(x34)\n    x37 = greater(x35, x36)\n    x38 = rbind(canvas, xcolor)\n    x39 = chain(x38, asobject, x38)\n    x40 = compose(first"], [1.1, "def solve_93e42771(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 =8888888888888888888888\n    x2 = astuple(identity, dmirror)\n    x3 = astuple(cmirror, hmirror)\n    x4 = combine(x2, x3)\n    x5 = rbind(rapply, I)\n    x6 = chain(first, x5, initset)\n    x7 = rbind(ofcolor, EIGHT)\n    x8 = chain(lowermost, x7, x6)\n    x9 = chain(decrement, height, x6)\n    x10 = fork(equality, x8, x9)\n    x11 = extract(x4, x10)\n    x12 = x11(I)\n    x13 = ofcolor(x12, ZERO)\n    x14 = dmirror(x13)\n    x15 = width(x12)\n    x16 = decrement(x15)\n    x17 = tojvec(x16)\n    x18 = invert(x17)\n    x19 = rightmost(x13)\n    x20 = decrement(x19)\n    x21 = tojvec(x20)\n    x22 = invert(x21)\n    x23 = astuple(x18, x22)\n    x24 = maximum(x23)\n    x25 = dmirror(x24)\n    x26 = astuple(x24, x25)\n    x27 = branch(x12, x26, x24)\n    x28 = lbind(apply, maximum)\n    x29 = lbind(min, x24)\n    x30 = rbind(rbind, ZERO)\n    x31 = compose(x30, x28)\n    x32 = rbind(sfilter, x31)\n    x33 = lbind(pair, x27)\n    x34 = chain(x32, x33, x25)\n    x35 = rbind(apply, x14)\n    x36 = compose(x35, x24)\n    x37 = fork(add, x36, x34)\n    x38 = rbind(apply, x16)\n    x39 = compose(x38,"], [1.1, "def solve_8a010aa2(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 =78748ivec(x5)\n    x7 = palette(x6)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x11, T, F, T)\n    x13 = colorfilter(x12, x10)\n    x14 = rbind(manhattan, x13)\n    x15 = argmin(x12, x14)\n    x16 = ofcolor(x15, x10)\n    x17 = first(x16)\n    x18 = initset(x17)\n    x19 = argman(x18, x10)\n    x20 = lbind(argmin, x17)\n    x21 = lbind(rbind, manhattan)\n    x22 = compose(x21, initset)\n    x23 = rbind(argmin, x22)\n    x24 = rbind(rbind, manhattan)\n    x25 = compose(x23, x24)\n    x26 = fork(gravitate, identity, x25)\n    x27 = fork(add, identity, x26)\n    x28 = fork(connect, identity, x27)\n    x29 = rbind(2ordering, x11)\n    x30 = rbind(order, uppermost)\n    x31 = chain(x29, x30, x27)\n    x32 = apply(x31, x5)\n    x33 = rbind(contained, x32)\n    x34 = apply(x33, x553)\n    x35 = either(x20, x34)\n    x36 = branch(x35, x22, x25)\n    x37 = objects(x36, T, F, T)\n    x38 = rbind(colorcount, x11)\n    x39 = valmax(x37"], [1.1, "def solve_e7b3c1d2(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x8, x7)\n    x11 = remove(x9, x10)\n    x12 = Mehindices(x8)\n    x13 = merge(x12)\n    x14 = fill(I, x3, x13)\n    x15 = objects(x14, F, F, T)\n    x16 = argmin(x15, leftmost)\n    x17 = argmax(x15, leftmost)\n    x18 = vmirror(x16)\n    x19 = vmirror(x17)\n    x20 = dmirror(x18)\n    x21 = cmirror(x19)\n    x22 = hmirror(x20)\n    x23 = hmirror(x21)\n    x24 =vsplit(x14, x22)\n    x25 = vmirror(x23)\n    x26 = hmirror(x24)\n    x27 = hmirror(x25)\n    x28 = vmirror(x26)\n    x29 = vmirror(x27)\n    x30 = hmirror(x28)\n    x31 = ulcorner(x16)\n    x32 = llcorner(x16)\n    x33 = subtract(x31, x32)\n    x34 = rbind(valmin, x23)\n    x35 = other(x22, x39)\n    x36 = delta(x35)\n    x37 = fill(x14, x3, x36)\n    x38 = objects(x37, F, F, T)\n    x39 = colorfilter(x38, x5)\n    x40 =adjacent(x38, x39)\n    x41 = r"], [1.1, "def solve_ac23c8d7(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = increment(x39)\n    x41 = interval(ZERO, x40, ONE)\n    x42 = apply(tojvec"], [1.1, "def solve_01bcf5ef(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_f2bf5784(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = vline(x1)\n    x3 = branch(x2, dmirror, identity)\n    x4 = x3(I)\n    x5 = ofcolor(x4, THREE)\n    x6 = ofcolor(x4, TWO)\n    x7 = center(x5)\n    x8 = hfrontier(x7)\n    x9 = center(x6)\n    x10 = hfrontier(x9)\n    x11 = mostcolor(I)\n    x12 = palette(I)\n    x13 = remove(THREE, x12)\n    x14 = remove(TWO, x13)\n    x15 = other(x14, x11)\n    x16 = replace(x4, THREE, x11)\n    x17 = difference(x8, x5)\n    x18 = underfill(x16, x17, x15)\n    x19 = replace(x4, TWO, x15)\n    x20 = difference(x10, x6)\n    x21 = underfill(x19, x20, x15)\n    x22 = objects(x18, T, F, F)\n    x23 = colorfilter(x22, x15)\n    x24 = rbind(adjacent, x5)\n    x25 = sfilter(x23, x24)\n    x26 = objects(x21, F, F, T)\n    x27 = colorfilter(x26, x11)\n    x28 = rbind(adjacent, x6)\n    x29 = sfilter(x27, x28)\n    x30 = mapply(toindices, x25)\n    x31 = rbind(equality, x31)\n    x32 = lbind(index, x4)\n    x33 = compose(x32, urcorner)\n    x34 = matcher(x33, x21)\n    x35 = rbind(add, x27)\n    x36 = chain(x31, x35, x4)\n    x37 = sfilter(x30, x34)\n    x38 = lbind(add, x29)\n    x39 = chain"], [1.1, "def solve_ec58bebc(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = vmirror(I)\n    x2 = sizefilter(x1, ONE)\n    x3 = apply(even, x2)\n    x4 = sfilter(x3, hline)\n    x5 = size(x4)\n    x6 = positive(x5)\n    x7 = branch(x6, identity, dmirror)\n    x8 = x7(I)\n    x9 = rbind(toobject, x8)\n    x10 = chain(Example, x9, delta)\n    x11 = apply(x10, x4)\n    x12 = asindices(x11)\n    x13 = shape(x12)\n    x14 = add(x13, THREE)\n    x15 = halve(x14)\n    x16 = add(x15, UP_RIGHT)\n    x17 = crop(x16, x12, x15)\n    x18 = canvas(ZERO, x13)\n    x19 = asobject(x18)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = argmax(x22, last)\n    x24 = add(x23, x22)\n    x25 = flip(x24)\n    x26 = asobject(x25)\n    x27 = equality(x25, x26)\n    x28 = branch(x27, ulcorner, last)\n    x29 = multiply(x27, x28)\n    x30 = branch(x27, llcorner, last)\n    x31 = initset(x30)\n    x32 = insert(x29, x31)\n    x33 = = lbind(2020, x32)\n    x34 = compose(x33, first)\n    x35 = toindices(x34)\n    x36 = sizefilter(x35, x24)\n    x37 = lbind(argmin, x36)\n    x38 = lbind(shift, x24)\n    x39 = compose(x37, x38)\n    x40 = fork(recolor"], [1.1, "def solve_3207db89(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = lbind(apply, toindices)\n    x2 = lbind(rbind, intersection)\n    x3 = compose(x1, x2)\n    x4 = fork(size, x3, color)\n    x5 = palette(I)\n    x6 = compose(x4, x5)\n    x7 = fork(paint, identity, x6)\n    x8 = rbind(compose, palette)\n    x9 = lbind(lfilter, x5)\n    x10 = chain(x8, x9, x7)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(x11, toindices)\n    x13 = chain(size, x12, x7)\n    x14 = matcher(x13, ONE)\n    x15 = fork(both, x14, x13)\n    x16 = merge(x15)\n    x17 = palette(x16)\n    x18 = lbind(colorcount, x16)\n    x19 = compose(x18, argmin)\n    x20 = argmin(x17, x19)\n    x21 = rbind(colorcount, x20)\n    x22 = chain(toivec, first, x21)\n    x23 = fork(shift, x22, ulcorner)\n    x24 = canvas(x20, UNITY)\n    x25 = mapply(x23, x24)\n    x26 = objects(x25, T, T, T)\n    x27 = first(x26)\n    x28 = last(x26)\n    x29 = subgrid(x27, x45)\n    x30 = colorfilter(x26, x20)\n    x31 = rbind(contained, x30)\n    x32 = compose(x31, last)\n    x33 = sfilter(x30, x32)\n    x34 = paint(x29, x33)\n    x35 = ofcolor(x34, x20)\n    x36 = subgrid(x35, x45)\n    x37 = sfilter(x1, x36)\n    x38 =27(x37)\n    x39 = replace("], [1.1, "def solve_09b5b1ea(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_74429dad(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = argadjacent(x24, x23)\n    x26 = subgrid(x25, x14)\n    x27 = asobject(x25)\n    x28 = vmirror(x27)\n    x29 = hconcat(x28, x14)\n    x30 = height(x29)\n    x31 = subgrid(x25, x15)\n    x32 = asobject(x31)\n    x33 = height(x32)\n    x34 = equality(x30, x33)\n    x35 = branch(x34, x29, x28)\n    x36 = add(x34, UNITY)\n    x37 =44(x35)\n    x38 = astuple(x31, x36)\n    x39 = x36(x37)\n    x40 = shift(x39, x37)\n    x41 = ofcolor(x44, x13)\n    x42 = subgrid(x"], [1.1, "def solve_cc785cc9(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = width(x4)\n    x6 = toivec(x5)\n    x7 = index(x4, x6)\n    x8 = shape(x4)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x4, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, insert)\n    x16 = lbind(power, ZERO)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x13)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x19)\n    x24 = uppermost(x12)\n    x25 = lbind(add, x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = lbind(multiply, x27)\n    x29 = chain(toivec, x25, x28)\n    x30 = fork(shift, x23, x29)\n    x31 = compose(asobject, x22)\n    x32 = uppermost(x12)\n    x33 = lbind(subtract, x32)\n    x34 = height(x12)\n    x35 = increment(x34)\n    x36 = lbind(multiply, x35)\n    x37 = chain(toivec, x33, x36)\n    x38 = fork(shift, x31, x37)\n    x39 = fork(combine,"], [1.1, "def solve_0301447d(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP90)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP90)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, x33)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)\n    x"], [1.1, "def solve_4fc32608(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, T)\n    x4 = merge(x3)\n    x5 = palette(x4)\n    x6 = intersection(x5, x2)\n    x7 = lbind(colorcount, x4)\n    x8 = argmax(x6, x7)\n    x9 = astuple(x8, x2)\n    x10 = canvas(x9, x9)\n    x11 = paint(x10, x4)\n    x12 = objects(x11, T, F, T)\n    x13 = compose(normalize, toindices)\n    x14 = rbind(sordering, x13)\n    x15 = lbind(toobject, x14)\n    x16 = chain(x15, x13, color)\n    x17 = rbind(sfilter, x16)\n    x18 = lbind(recolor, x8)\n    x19 = chain(x18, x17, x35)\n    x20 = fork(combine, x15, x19)\n    x21 = lbind(paint, x11)\n    x22 = compose(x21, x20)\n    x23 = fork(paint, identity, x22)\n    x24 = chain(x13, x17, x23)\n    x25 = rbind(apply, x10)\n    x26 = lbind(lbind, shift)\n    x27 = chain(x26, x17, x24)\n    x28 = fork(apply, x26, x27)\n    x29 = fork(remove, x28, x22)\n    x30 = compose(x25, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = lbind(fork, intersection)\n    x33 = compose(x32, x30)\n    x34 = fork(794, x33, x24)\n    x35 = compose(x31, x34)\n    x36 = fork(ers O, x35, x36)\n    x37 = mapply(x36, x4)\n"], [1.1, "def solve_e8940922(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = apply(first, x22)\n    x24 = lbind(sfilter, x21)\n    x25 = compose(first, last)\n    x26 = lbind(matcher, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x27, x23)\n    x29 = lbind(shift, x15)\n    x30 = chain(x29, toivec, uppermost)\n    x31 = matcher(first, x18)\n    x32 = rbind(sfilter, x31)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(toindices, x32, x30)\n    x36 = chain(x33, x34, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = compose(color, x37)\n    x39 = compose(x32, x30)\n    x40 = fork(recolor, x38, x39)\n    x41 = fork(other, palette,"], [1.1, "def solve_317e3dea(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = compose(initset, x13)\n    x20 = fork(rapply, x19, x18)\n    x21 = compose(first, x20)\n    x22 = rbind(contained, x1)\n    x23 = compose(x22, last)\n    x24 = compose(flip, x23)\n    x25 = rbind( sfilter, x21)\n    x26 = chain(first, x25, x24)\n    x27 = fork(paint, x26, x25)\n    x28 = compose(initset, x15)\n    x29 = fork(rapply, x28, x24)\n    x30 = compose(first, x29)\n    x31 = fork(paint, x30, x27)\n    x32 = compose(initset, x12)\n    x33 = fork(rapply, x32, x24)\n    x34 = compose(first, x33)\n    x35 = extract(x1, x34)\n    x36 = x35(I)\n    x37 = first(x36)\n    x38"], [1.1, "def solve_fc65a4c4(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_c797836b(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = leastcolor(I)\n    x9 = rbind(ofcolor, x8)\n    x10 = rbind(rapply, I)\n    x11 = chain(first, x10, initset)\n    x12 = chain(hline, x9, x11)\n    x13 = rbind(ofcolor, x8)\n    x14 = rbind(rapply, I)\n    x15 = chain(first, x14, initset)\n    x16 = chain(leftmost, x13, x15)\n    x17 = matcher(x16, ZERO)\n    x18 = fork(both, x12, x17)\n    x19 = compose(x18, first)\n    x20 = extract(x7, x19)\n    x21 = first(x20)\n    x22 = last(x20)\n    x23 = x21(I)\n    x24 = ofcolor(x23, x8)\n    x25 = argmax(x24, last)\n    x26 = add(x25, UP_RIGHT)\n    x27 = shoot(x26, UP_RIGHT)\n    x28 = add(x25, DOWN_LEFT)\n    x29 = shoot(x28, DOWN_LEFT)\n    x30 = rbind(shoot, LEFT)\n    x31 = mapply(x30, x27)\n    x32 = rbind(shoot, LEFT)\n    x33 = mapply(x32, x29)\n    x34 = width(x23)\n    x35 = invert(x34)\n    x36 = tojvec(x35)\n    x37 = shift(x31, x36)\n    x38 = combine(x31, x37)\n    x39 ="], [1.1, "def solve_6961916f(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toive694, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_4df9dccc(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = ofcolor(x3, x39"], [1.1, "def solve_e14ac45b(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = height(I)\n    x9 = astuple(x8, ONE)\n    x10 = canvas(THREE, x9)\n    x11 = hconcat(x10, I)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = identity(DOWN)\n    x17 = connect(ORIGIN, x15)\n    x18 = fill(x11, THREE, x17)\n    x19 = identity(x13)\n    x20 = identity(x12)\n    x21 = identity(x12)\n    x22 = identity(F8)\n    x23 = identity(F9)\n    x24 = compose(first, first)\n    x25 = chain(first, last, x24)\n    x26 = compose(first, first)\n    x27 = chain(last, last, x26)\n    x28 = chain(first, first, first)\n    x29 = chain(first, last, last)\n    x30 = chain(first, first, last)\n    x31 = chain(last, first, last)\n    x32 = compose(decrement, x25)\n    x33 = compose(decrement, x27)\n    x34 = fork(astuple, x32, x33)\n    x35 = compose(decrement, x27)\n    x36 = fork(multiply, x30, x35)\n    x37 = fork(add, x29, x36)\n    x38 = compose(positive, size)\n    x39 = lbind(intersection, x7)\n    x40 = chain(x38, x39, xf8)\n    x41 = compose(size"], [1.1, "def solve_5e8234d9(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = partition(I)\n    x6 = fork(multiply, height, width)\n    x7 = fork(equality, size, x6)\n    x8 = extract(x5, x7)\n    x9 = color(x8)\n    x10 = palette(I)\n    x11 = remove(x4, x10)\n    x12 = other(x11, x9)\n    x13 = ofcolor(I, x12)\n    x14 = vmirror(x13)\n    x15 = hmirror(x13)\n    x16 = toindices(x8)\n    x17 = combine(x16, x13)\n    x18 = height(x17)\n    x19 = halve(x18)\n    x20 = increment(x19)\n    x21 = width(x17)\n    x22 = halve(x21)\n    x23 = increment(x22)\n    x24 = astuple(x20, x23)\n    x25 = maximum(x24)\n    x26 = invert(x25)\n    x27 = increment(x25)\n    x28 = interval(x26, x27, ONE)\n    x29 = product(x28, x28)\n    x30 = initset(x15)\n    x31 = insert(x14, x30)\n    x32 = product(x29, x31)\n    x33 = ofcolor(I, x4)\n    x34 = rbind(intersection, x33)\n    x35 = fork(shift, last, first)\n    x36 = chain(size, x34, x35)\n    x37 = matcher(x36, ZERO)\n    x38 = sfilter(x32, x37)\n    x39 = rbind(intersection, x13)\n    x40 = fork(shift, last, first)\n    x41 = chain(size, x39, x40)\n    x42 = argmax(x38, x41"], [1.1, "def solve_ec3a2634(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = corners(x2)\n    x4 = toobject(x3, I)\n    x5 = mostcolor(x4)\n    x6 = colorcount(I, x5)\n    x7 = dmirror(I)\n    x8 = astuple(x6, x7)\n    x9 = dmirror(I)\n    x10 =658(x8, x9)\n    x11 = combine(x3, x10)\n    x12 = ofcolor(x11, x5)\n    x13 = difference(x1, x12)\n    x14 = rbind(argmin, x13)\n    x15 = rbind(sfilter, x15)\n    x16 = compose(x14, x15)\n    x17 = lbind(fork, fly)\n    x18 = lbind(x17, identity)\n    x19 = lbind(rbind, astuple)\n    x20 = compose(x18, x19)\n    x21 = lbind(compose, x16)\n    x22 = rbind(x41, x21)\n    x23 = lbind(rbind, intersection)\n    x24 = chain(x22, x23, x8)\n    x25 = lbind(compose, x17)\n    x26 = x25(x12)\n    x27 = rbind(rapply, x25)\n    x28 = compose(initset, x12)\n    x29 = chain(first, x27, x28)\n    x30 = extract(x12, x29)\n    x31 = x30(I)\n    x32 = palette(I)\n    x33 = first(x32)\n    x34 = ulcorner(x30)\n    x35 = dmirror(x34)\n    x36 = shape(x30)\n    x37 = add(x36, x39)\n    x38 = astuple(x37, x34)\n    x39 = canvas(x30, x38)\n    x40 = asindices(x39)\n    x41 = apply(urcorner,"], [1.1, "def solve_4298d118(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = chain(x4, x5, color)\n    x7 = compose(maximum, shape)\n    x8 = fork(apply, x7, x6)\n    x9 = maximum(x2)\n    x10 = palette(I)\n    x11 = remove(x9, x10)\n    x12 = lbind(outbox, I)\n    x13 = compose(x12, objects)\n    x14 = arg113(x11, x13)\n    x15 = rightmost(x14)\n    x16 = totuple(x15)\n    x17 = apply(normalize, x16)\n    x18 = color(x14)\n    x19 = lbind(replace, x18)\n    x20 = rbind(compose, initset)\n    x21 = lbind(rbind, difference)\n    x22 = chain(x20, x21, color)\n    x23 = apply(x22, x17)\n    x24 = ofcolor(I, x9)\n    x25 = rbind(sfilter, x24)\n    x26 = chain(positive, size, x25)\n    x27 = mfilter(x23, x26)\n    x28 = equality(x27, ONE)\n    x29 = branch(x28, x22, x27)\n    x30 = rbind(colorcount, x18)\n    x31 = argmax(x29, x30)\n    x32 = UNITY(x31)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, x32)\n    x35 = colorfilter(x18, x9)\n    x36 = rbind(vmatching, x34)\n    x37 = fork(both, x35, x36)\n    x38 = x37(x31)\n    x39 = fill(I, x8, x38)\n    x40 =272("], [1.1, "def solve_d5637f2d(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = equality(x5, ZERO)\n    x7 = branch(x6, identity, vmirror)\n    x8 = x7(x4)\n    x9 = ofcolor(x8, EIGHT)\n    x10 = uppermost(x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, identity, hmirror)\n    x13 = x12(x8)\n    x14 = ofcolor(x13, EIGHT)\n    x15 = ofcolor(x13, TWO)\n    x16 = rbind(shoot, DOWN)\n    x17 = mapply(x16, x14)\n    x18 = height(x13)\n    x19 = apply(first, x15)\n    x20 = insert(ZERO, x19)\n    x21 = insert(x18, x19)\n    x22 = apply(decrement, x21)\n    x23 = order(x20, identity)\n    x24 = order(x22, identity)\n    x25 = size(x15)\n    x26 = increment(x25)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = apply(tojvec, x27)\n    x29 = pair(x23, x24)\n    x30 = lbind(sfilter, x17)\n    x31 = compose(first, last)\n    x32 = chain(decrement, first, first)\n    x33 = fork(greater, x31, x32)\n    x34 = chain(increment, last, first)\n    x35 = fork(greater, x34, x31)\n    x36 = fork(both, x33, x35)\n    x37 = lbind(lbind, astuple)\n    x38 = lbind(compose, x36)\n    x39 = chain(x30, x38, x37)\n    x40"], [1.1, "def solve_5f9f8e92(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = astuple(color, ORIGIN)\n    x2 = astuple(color, TWO)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(x655, x8)\n    x10 = astuple(xcompose, initset)\n    x11 = lbind(contained, x10)\n    x12 = compose(x11, last)\n    x13 = sfilter(x5, x12)\n    x14 = upscale(x13, TWO)\n    x15 = shape(x13)\n    x16 = add(x15, RIGHT)\n    x17 = crop(x13, UP_BY_ZERO, x16)\n    x18 = asobject(x17)\n    x19 = multiply(UNITY, x15)\n    x20 = crop(x18, DOWN_LEFT, x19)\n    x21 = apply(x16, x20)\n    x22 = paint(x17, x21)\n    x23 = crop(x18, UNITY, x15)\n    x24 = repeat(x23, ONE)\n    x25 = combine(x28, x24)\n    x26 = sfilter(x25, x12)\n    x27 = fork(combine, first, last)\n    x28 = apply(x27, x26)\n    x29 = height(x12)\n    x30 = lbind(repeat, x29)\n    x31 = apply(x30, x27)\n    x32 = combine(x28, x31)\n    x33 = branch(x37, x32, x29)\n    x34 = apply(double, x30)\n    x35 = divide(x34, TWO)\n    x36 = apply(x27, x30)\n    x37 = branch(x37, x36, x29)\n    x38 = branch(x37, x37, x28)\n    "], [1.1, "def solve_fc1c4f8f(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = Faff27(I)\n    x3 = toindices(x2)\n    x4 = difference(x1, x3)\n    x5 = toobject(x4, I)\n    x6 = size(x5)\n    x7 = positive(x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = objects(x9, T, F, T)\n    x11 = color(x10)\n    x12 = leftmost(x11)\n    x13 = leftmost(x12)\n    x14 = subtract(x13, x12)\n    x15 = astuple(x14, x13)\n    x16 = repeat(x9, x15)\n    x17 = x8(x9)\n    x18 = x8(x16)\n    x19 = hsplit(x17, x18)\n    x20 = hsplit(x19, x19)\n    x21 = merge(x20)\n    x22 = last(x21)\n    x23 = remove(x22, x30)\n    x24 = last(x23)\n    x25 = last(x24)\n    x26 = first(x23)\n    x27 = hupscale(x25, x26)\n    x28 = identity(x27)\n    x29 = x8(x22)\n    x30 = x9(x222)\n    x31 =60713(x29)\n    x32 = hupscale(x30, x31)\n    x33 = identity(x32)\n    x34 = hconcat(x29, x33)\n    x35 = hconcat(x34, x28)\n    x36 = vconcat(x35, x28)\n    x37 = vconcat(x36, x28)\n    x38 = astuple(x24, x270)\n    x39 = astuple(x37, x38)\n    x40 = combine(x32, x39)\n    x41 = paint(x40, x33)\n    O = x8(x41)\n"], [1.1, "def solve_476652e6(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = x2(I, TWO)\n    x4 = order(x3, numcolors)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = palette(x5)\n    x8 = remove(ZERO, x7)\n    x9 = other(x8, x6)\n    x10 = branch(x5, height, width)\n    x11 = x10(x6)\n    x12 = astuple(ONE, x11)\n    x13 = canvas(x9, x12)\n    x14 = ofcolor(x13, x6)\n    x15 = mostcolor(x14)\n    x16 = matcher(first, x15)\n    x17 = compose(flip, x16)\n    x18 = rbind(sfilter, x17)\n    x19 = rbind(occurrences, x13)\n    x20 = compose(x19, x18)\n    x21 = apply(x20, x9)\n    x22 = dmirror(x21)\n    x23 = replace(x22, x10, x67)\n    x24 = ofcolor(x23, x6)\n    x25 = ofcolor(x23, x12)\n    x26 = intersection(x24, x25)\n    x27 = fill(x23, ZERO, x26)\n    x28 = astuple(ONE, THREE)\n    x29 = canvas(x9, x28)\n    x30 = dmirror(x29)\n    x31 = fill(x30, x7, x279)\n    x32 = x2(x31)\n    x33 = initset(x32)\n    x34 = insert(x62, x33)\n    x35 = product(x34, x34)\n    x36 = order(x35, identity)\n    x37 = ofcolor(x36, x6)\n    x38 = last(x37)\n    x39 = remove(x38, x37)\n    x40 = first(x39)\n    x"], [1.1, "def solve_8d7c3cda(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = extract(x2, x4)\n    x6 =8776cd78\n    \"\"\"\n    x7 = backdrop(x5)\n    x8 = shape(I)\n    x9 = add(TWO, x8)\n    x10 = canvas(x1, x9)\n    x11 = asobject(I)\n    x12 = shift(x11, UNITY)\n    x13 = paint(x10, x12)\n    x14 = double(x3)\n    x15 = power(outbox, x14)\n    x16 = chain( backdrop, x15, initset)\n    x17 = x16(ulcorner)\n    x18 = x16(TWO, x16)\n    x19 = shift(x11, x18)\n    x20 = paint(x13, x19)\n    x21 = ulcorner(x5)\n    x22 = index(x20, x21)\n    x23 = recolor(x1, x22)\n    x24 = paint(x20, x23)\n    x25 = branch(x3, x24, x16)\n    x26 = shape(I)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = product(x27, x27)\n    x29 = lbind(multiply, x287)\n    x30 = apply(x29, x28)\n    x31 = lbind(shift, x12)\n    x32 = mapply(x31, x30)\n    x33 = paint(x20, x32)\n    x34 = branch(x26, UNITY, DOWN_LEFT)\n    x35 = apply(x34, x29)\n    x36 = pair(x35, x31)\n    x37 = size(x36)\n    x38 = positive(x37)\n    x39 = branch(x33, RIGHT, x38)\n    x40 = apply(x39, x36)\n    x41"], [1.1, "def solve_414b7284(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = palette(I)\n    x2 = compose(maximum, shape)\n    x3 = argmin(x1, x2)\n    x4 = canvas(x3, THREE_BY_THREE)\n    x5 = colorcount(I, ZERO)\n    x6 = dmirror(x4)\n    x7 = objects(x6, T, F, T)\n    x8 = argmin(x7, size)\n    x9 = repeat(x8, ONE)\n    x10 = combine(x7, x9)\n    x11 = color(x10)\n    x12 = leftmost(x11)\n    x13 = width(I)\n    x14 = interval(ONE, x13, ONE)\n    x15 = leftmost(x11)\n    x16 = interval(ONE, x15, ONE)\n    x17 = pair(x14, x16)\n    x18 = sizefilter(x17, x11)\n    x19 = apply(invert, x18)\n    x20 = lbind(sfilter, x18)\n    x21 = lbind(matcher, partition)\n    x22 = compose(x21, x20)\n    x23 = chain(size, x20, x22)\n    x24 = sfilter(x19, x23)\n    x25 = chain(increment, minimum, x24)\n    x26 =745 to compose(x25, x20)\n    x27 = fork(repeat, x26, x211)\n    x28 = sfilter(x6, x27)\n    x29 = combine(x27, x28)\n    x30 = lbind(recolor, x11)\n    x31 = lbind(mapply, x30)\n    x32 = fork(paint, identity, x31)\n    x33 = compose(x32, x20)\n    x34 = ofcolor(I, x3)\n    x35 = mapply(x33, x34)\n    x36 = ofcolor(I, FOUR)\n    x37 = mapply(x36, x36)\n    x38 = combine(x35, x37)\n    x39 = paint(I"], [1.1, "def solve_256285cf(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_e6e4b6a8(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = compose(positive, size)\n    x2 = rbind(sfilter, hline)\n    x3 = chain(x1, x2, frontiers)\n    x4 = chain(size, dedupe, first)\n    x5 = chain(size, dedupe, last)\n    x6 = fork(greater, x4, x5)\n    x7 = fork(both, x3, x6)\n    x8 = astuple(identity, dmirror)\n    x9 = astuple(cmirror, hmirror)\n    x10 = combine(x8, x9)\n    x11 =040(x10)\n    x12 = objects(x11, T, F, T)\n    x13 = merge(x12)\n    x14 = shift(x13, TWO)\n    x15 = paint(x3, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = remove(x16, x15)\n    x18 = compose(positive, size)\n    x19 = rbind(sfilter, x18)\n    x20 = chain(x17, x19, frontiers)\n    x21 = merge(x12)\n    x22 = chain(x19, x19, shape)\n    x23 = chain(size, x22, first)\n    x24 = compose(increment, x23)\n    x25 = power(x24, FOUR)\n    x26 = x25(x6)\n    x27 = shape(x26)\n    x28 = canvas(ZERO, x27)\n    x29 = \"b567a423(x26)\n    x30 = chain(size, dedupe, first)\n    x31 = equality(x30, x22)\n    x32 = x31(x16)\n    x33 = first(x32)\n    x34 = last(x32)\n    x35 = fill(x16, THREE, x34)\n    x36 = shift(x33, x35)\n    x37 =74ddupe(x36)\n    x38 = paint(x35, x37)\n    O = trim(x38)\n    return O"], [1.1, "def solve_55b85df0(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = compose(flip, x2)\n    x4 = rbind(sfilter, x3)\n    x5 = replace(x1, FIVE, ZERO)\n    x6 = x4(x5)\n    x7 = asobject(x6)\n    x8 = apply(first, x7)\n    x9 = paint(I, x8)\n    x10 = fgpartition(x9)\n    x11 = merge(x10)\n    x12 = normalize(x11)\n    x13 = width(x12)\n    x14 = subtract(x13, TWO)\n    x15 = height(x12)\n    x16 = astuple(x15, x14)\n    x17 = crop(x12, ORIGIN, x16)\n    x18 = hupscale(x17, x12)\n    x19 = solve(x18, dmirror)\n    x20 = astuple(x15, x16)\n    x21 = crop(x20, ORIGIN, x20)\n    x22 = hupscale(x21, x12)\n    x23 =\n    \"\"\"\n    x24 = hmirror(x12)\n    x25 = vconcat(x22, x24)\n    x26 = vconcat(x25, x12)\n    O = compress(x26)\n    return O"], [1.1, "def solve_26d2dd39(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 =2dee509493\n    x2 = dmirror(I)\n    O = papply(pair, I, x1)\n    return O"], [1.1, "def solve_91502675(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = sizefilter(x1, FOUR)\n    x3 = fork(equality, height, width)\n    x4 = extract(x2, x3)\n    x5 = other(x1, x4)\n    x6 = color(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = subtract(FOUR, x11)\n    x13 = increment(x12)\n    x14 =255(I)\n    x15 = canvas(x6, x14)\n    x16 = lbind(ofcolor, I)\n    x17 =699(x16, x13)\n    x18 = subgrid(x5, I)\n    x19 = hconcat(x17, x18)\n    x20 = hconcat(x19, x17)\n    x21 = vconcat(x19, x20)\n    x22 = vconcat(x21, x17)\n    x23 = combine(x19, x22)\n    O = fill(x15, x6, x23)\n    return O"], [1.1, "def solve_acaa386b(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 =666(ZERO, x3)\n    x9 =66(d3644, x8)\n    x10 = shape(I)\n    x11 = decrement(x10)\n    x12 = index(I, x11)\n    x13 = subtract(FIVE, x12)\n    x14 = crop(I, ORIGIN, x9)\n    x15 = crop(I, x13, x7)\n    x16 = width(x15)\n    x17 = astuple(x16, ORIGIN)\n    x18 = crop(x15, ORIGIN, x17)\n    x19 = vupscale(x18, x14)\n    x20 = hupscale(x19, x12)\n    x21 = rbind(shoot, UNITY)\n    x22 = asindices(x14)\n    x23 = remove(x22, x14)\n    x24 = remove(x22, x23)\n    x25 = intersection(x22, x24)\n    x26 = lbind(occurrences, x15)\n    x27 = compose(x26, last)\n    x28 = fork(combine, first, x27)\n    x29 = product(x15, x17)\n    x30 = sfilter(x29, x28)\n    x31 = fork(shift, first, last)\n    x32 = mapply(x31, x30)\n    O = paint(x15, x32)\n    return O"], [1.1, "def solve_957376a9(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = replace(x6, x3, x4)\n    x8 = objects(x7, T, F, T)\n    x9 = lbind(colorfilter, x8)\n    x10 = chain(merge, x9, palette)\n    x11 = objects(x7, T, F, T)\n    x12 = sfilter(x11, x10)\n    x13 = rbind(gravitate, x12)\n    x14 = compose(x13, toivec)\n    x15 = fork(add, x14, x12)\n    x16 = fork(connect, x15, output:\n    x17 = mapply(x16, x13)\n    O = fill(x7, x3, x17)\n    return O"], [1.1, "def solve_9f4e5183(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = x6(I)\n    x8 = rbind(sfilter, x7)\n    x9 = compose(dmirror, x8)\n    x10 = rbind(sfilter, x9)\n    x11 = compose(vmirror, x10)\n    x12 = dmirror(I)\n    x13 = x11(x12)\n    x14 =37(x13)\n    x15 = width(x13)\n    x16 = decrement(x15)\n    x17 = tojvec(x16)\n    x18 = connect(ORIGIN, x17)\n    x19 = height(x13)\n    x20 = decrement(x19)\n    x21 = toivec(x20)\n    x22 = connect(ORIGIN, x21)\n    x23 = size(x2)\n    x24 = equality(x23, ZERO)\n    x25 = branch(x24, tojvec, toivec)\n    x26 = branch(x24, bottomhalf, x25)\n    x27 = order(x28, x26)\n    x28 = apply(x11, x27)\n    O = x11(x28)\n    return O"], [1.1, "def solve_5e81a8ce(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = trim(I)\n    x2 = repeat(x1, ONE)\n    x3 = toobject(x2, I)\n    x4 = numcolors(x3)\n    x5 = vmirror(x4)\n    x6 = hmirror(x4)\n    x7 = numcolors(x6)\n    x8 = add(TWO, x7)\n    x9 = papply(insert, x3, x8)\n    x10 = toobject(x9, I)\n    x11 = decrement(x10)\n    x12 = objects(x11, F, F, T)\n    x13 = first(x12)\n    x14 =90000009x13\n    x15 = leftmost(x13)\n    x16 = decrement(x15)\n    x17 = tojvec(x16)\n    x18 = shift(x3, x17)\n    x19 = shift(x3, x18)\n    x20 = fork(combine, vfrontier, hfrontier)\n    x21 = compose(x20, initset)\n    x22 = fork(combine, x19, x21)\n    x23 = rapply(x18, x22)\n    x24 = mapply(x23, x1)\n    O = paint(x14, x24)\n    return O"], [1.1, "def solve_0fd9de86(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = box(I)\n    x2 =66666666(x1, I)\n    x3 = equality(x2, TWO)\n    x4 = branch(x3, hsplit, vsplit)\n    x5 = x4(I, TWO)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 = palette(x6)\n    x9 = palette(x7)\n    x10 = intersection(x8, x9)\n    x11 = first(x10)\n    x12 = shape(x6)\n    x13 = canvas(x11, x12)\n    x14 = ofcolor(x6, x12)\n    x15 = ofcolor(x7, x12)\n    x16 = intersection(x14, x15)\n    O = fill(x13, TWO, x16)\n    return O"], [1.1, "def solve_b3453d12(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =372(x2, I)\n    x4 = shape(I)\n    x5 = multiply(x4, x4)\n    x6 = canvas(ZERO, x5)\n    x7 = rbind(multiply, x6)\n    x8 = apply(x7, x3)\n    x9 = height(I)\n    x10 = width(I)\n    x11 = divide(x9, x10)\n    x12 = increment(x11)\n    x13 = subtract(x12, ONE)\n    x14 = shift(x8, x13)\n    x15 =873(x14)\n    x16 = last(x14)\n    x17 = remove(x16, x14)\n    x18 = last(x17)\n    x19 = canvas(ZERO, x4)\n    x20 = matcher(first, x8)\n    x21 =sfilter(x19, x20)\n    x22 = shift(x19, x21)\n    O = fill(x21, THREE, x22)\n    return O"], [1.1, "def solve_2214e8a1(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 =8885(I)\n    x2 = mostcolor(I)\n    x3 = shape(I)\n    x4 = canvas(x2, x3)\n    x5 = hconcat(I, x4)\n    x6 = objects(x5, F, F, T)\n    x7 = compose(last, centerofmass)\n    x8 = order(x6, x7)\n    x9 =159(x8)\n    x10 = lbind(contained, ZERO)\n    x11 = compose(x10, palette)\n    x12 = sfilter(x8, x11)\n    x13 = size(x12)\n    x14 = interval(ZERO, x13, ONE)\n    x15 = pair(x4, x14)\n    x16 = mapply(first, x15)\n    x17 = mapply(last, x15)\n    x18 = fill(x4, THREE, x16)\n    O = fill(x18, FOUR, x17)\n    return O"], [1.1, "def solve_ad1c5677(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = subgrid(I, I)\n    x2 = trim(x1)\n    x3 = replace(x2, ONE, ZERO)\n    x4 = tojvec(Sfilter)\n    x5 =787\n    7204399287\n    4862897883\n    9972237075\n    \"\"\"\n    x1 = lefthalf(x3)\n    x2 = righthalf(x3)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = fill(x3, ONE, x9)\n    return O"], [1.1, "def solve_e3219962(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 =1111(I, ZERO)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = fill(x2, ZERO, x1)\n    return O"], [1.1, "def solve_d5333426(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = switch(I, EIGHT, TWO)\n    x2 = switch(x1, TWO, ONE)\n    x3 = switch(x2, EIGHT, ONE)\n    x4 = switch(x3, EIGHT, FOUR)\n    O = switch(x4, lowermost,\n    return O"], [1.1, "def solve_5060fb2b(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = tophalf(I)\n    x5 = lefthalf(x4)\n    x6 = tophalf(I)\n    x7 = righthalf(x6)\n    x8 = bottomhalf(I)\n    x9 = righthalf(x8)\n    x10 = bottomhalf(I)\n    x11 = lefthalf(x9)\n    x12 = righthalf(x11)\n    x13 =122200(x2, x12)\n    x14 =122233\n    x15 = merge(x1)\n    x16 = bottomhalf(x2)\n    x17 = lefthalf(x16)\n    x18 = bottomhalf(x2)\n    x19 = righthalf(x17)\n    x20 = width(x13)\n    x21 =145(x13)\n    x22 = astuple(x20, x21)\n    x23 = crop(x13, ORIGIN, x22)\n    x24 = ofcolor(x23, x3)\n    x25 =19color(x24)\n    x26 = dmirror(x23)\n    x27 = invert(x26)\n    x28 = tojvec(x27)\n    x29 = double(xdneighbors)\n    x30 = interval(x29, x27, ONE)\n    x31 = lbind(shift, x25)\n    x32 = apply(x31, x30)\n    x33 = mapply(x27, x32)\n    O = fill(x23, x5, x33)\n    return O"], [1.1, "def solve_db412776(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = switch(I, dmirror, identity)\n    x2 = astuple(x1, x1)\n    x3 = astuple(FOUR, EIGHT)\n    x4 = canvas(NEG_ONE, x3)\n    x5 =9465(x4)\n    x6 = rbind(toobject, x1)\n    x7 = compose(x6, toindices)\n    x8 = rbind(colorcount, x1)\n    x9 = matcher(x8, chain(x8, x7)\n    x10 = matcher(x8, TWO)\n    x11 = fork(both, x9, x10)\n    x12 = extract(x5, x11)\n    x13 =124indices(x12)\n    x14 =manhattan(x13, x5)\n    x15 = multiply(x14, UNITY)\n    x16 = canvas(NEG_ONE, x15)\n    x17 = fgpartition(x16)\n    x18 = merge(x17)\n    x19 = center(x18)\n    x20 = branch(x19, x16, x17)\n    x21 = subtract(x20, x19)\n    x22 = astuple(NEG_TWO, x21)\n    x23 = order(x5, x22)\n    x24 = lbind(contained, ZERO)\n    x25 = sfilter(x2, x24)\n    x26 = lbind(shift, x21)\n    x27 = compose(x26, toindices)\n    x28 = mapply(x27, x23)\n    x29 = combine(x28, x25)\n    x30 = shift(x29, x3)\n    x31 = compose(x5, x27)\n    x32 = mapply(x31, x30)\n    x33 = combine(x30, x32)\n    x34 = paint(x16, x33)\n    O = x4(x34)\n    return O"], [1.1, "def solve_38e5102b(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(d687, x5)\n    x7 =77(x5)\n    x8 =77(x6)\n    x9 =x7(I)\n    x10 = x6(x9)\n    x11 = fork(subtract, height, width)\n    x12 = lbind(ofcolor, x10)\n    x13 = palette(x12)\n    x14 = compose(x11, x12)\n    x15 = argmin(x13, x14)\n    x16 = other(x9, x15)\n    x17 = ofcolor(x10, x16)\n    x18 = outbox(x17)\n    x19 = toobject(x18, x10)\n    x20 = mostcolor(x19)\n    x21 = initset(x16)\n    x22 = rbind(manhattan, x21)\n    x23 = argmin(x25, x22)\n    x24 = other(x23, x20)\n    x25 = ofcolor(x10, x24)\n    x26 = combine(x19, x25)\n    x27 = fill(I, x24, x26)\n    x28 = difference(x27, x26)\n    O = fill(x28, x24, x28)\n    return O"], [1.1, "def solve_91f9ab2c(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = shape(I)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(I, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmin(x11, numcolors)\n    x13 = normalize(x12)\n    x14 = toindices(x13)\n    x15 = increment(x4)\n    x16 = increment(x15)\n    x17 = increment(x5)\n    x18 = increment(x17)\n    x19 = astuple(x16, x18)\n    x20 = lbind(multiply, x19)\n    x21 = apply(x20, x14)\n    x22 = lbind(shift, x14)\n    x23 = mapply(x22, x21)\n    x24 = paint(x10, x23)\n    x25 = objects(x24, F, T, T)\n    x26 = lbind(occurrences, x24)\n    x27 = compose(x26, x24)\n    x28 = fork(combine, x27, x25)\n    x29 =21826(x28, x7)\n    x30 = palette(x29)\n    x31 = rbind(contained, x30)\n    x32 = argmin(x30, x31)\n    x33 =12(x32)\n    x34 =210(x33)\n    x35 = ofcolor(x34, x41)\n    x36 = ofcolor(x34, x5)\n    x37 = combine(x35, x36)\n    x38 = intersection(x35, x37)\n    O = fill(x24, ONE, x38)\n    return O"], [1.1, "def solve_962e4674(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =22izter(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [1.1, "def solve_68ff15a2(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 =6666(I)\n    x2 =6006666(I)\n    x3 = hmirror(x2)\n    O = vconcat(I, x3)\n    return O"], [1.1, "def solve_4acb4ea9(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = replace(I, ONE, ZERO)\n    x4 = colorfilter(x2, x3)\n    x5 = argmax(x4, size)\n    x6 = color(x5)\n    x7 = subgrid(x5, I)\n    x8 = fork(insert, identity, identity)\n    x9 = width(x7)\n    x10 = insert(x9, x7)\n    x11 = x8(x10)\n    x12 = width(x7)\n    x13 = increment(x12)\n    x14 = interval(ZERO, x13, x ONE)\n    x15 = subgrid(x5, x7)\n    x16 = insert(x15, x14)\n    x17 = rightmost(x16)\n    x18 = lbind(greater, x17)\n    x19 = compose(x18, uppermost)\n    x20 = rbind(sfilter, x19)\n    x21 = chain(x17, x20, frontiers)\n    x22 = lbind(recolor, x6)\n    x23 = compose(x22, color)\n    x24 = rbind(sfilter, x23)\n    x25 = chain(x10, x24, asobject)\n    x26 = lbind(shift, x8)\n    x27 = chain(x26, x24, x27)\n    x28 = rbind(mapply, x27)\n    x29 = compose(x28, x25)\n    x30 = lbind(add, x17)\n    x31 = chain(x30, x26, outbox)\n    x32 = fork(combine, x29, x31)\n    x33 = mapply(x32, x14)\n    O = paint(x3, x33)\n    return O"], [1.1, "def solve_9e663d55(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = decrement(x2)\n    x4 = index(I, x3)\n    x5 = rbind(shoot, UP_RIGHT)\n    x6 = canvas(x1, x4)\n    x7 = matcher(first, FOUR)\n    x8 = compose(flip, x7)\n    x9 = extract(x6, x8)\n    x10 = color(x9)\n    x11 = objects(I, T, F, T)\n    x12 = sizefilter(x11, ONE)\n    x13 = merge(x12)\n    x14 =111(x13)\n    x15 = palette(x14)\n    x16 = lbind(colorcount, x14)\n    x17 = arguple(x16, UNITY)\n    x18 = lbind(colorcount, x14)\n    x19 = increment(x17)\n    x20 = increment(x18)\n    x21 = neighbors(ORIGIN)\n    x22 = mapply(neighbors, x21)\n    x23 = astuple(x17, x20)\n    x24 = lbind(multiply(x23)\n    x25 = apply(x24, x22)\n    x26 = apply(first, x25)\n    x27 =4444(x26)\n    x28 = merge(x26)\n    x29 = paint(I, x28)\n    x30 = astuple(x17, x20)\n    x31 = astuple(x27, x30)\n    x32 = hmirror(x31)\n    x33 = vmirror(x32)\n    x34 =111(x33)\n    x35 = hmirror(x34)\n    x36 = vmirror(x35)\n    x37 = dmirror(x36)\n    x38 = combine(x33, x37)\n    x39 = paint(x38, x36)\n    O = fill(x39, x10, x38)\n    return O"], [1.1, "def solve_fc1e09c9(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = leastcommon(x3)\n    x5 = apply(last, x2)\n    x6 = ofcolor(I, x4)\n    x7 = intersection(x6, x5)\n    x8 =64e8x777\n    x9 = fill(I, TWO, x8)\n    O = fill(x9, ONE, x7)\n    return O"], [1.1, "def solve_07657b9e(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = increment(x4)\n    x13 = add(x12, x11)\n    x14 = canvas(x3, x13)\n    x15 = asobject(x8)\n    x16 = shift(x15, UNITY)\n    x17 = paint(x14, x16)\n    x18 =01(x1)\n    x19 = shift(x17, UNITY)\n    O = paint(x17, x19)\n    return O"], [1.1, "def solve_2866801c(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor = x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [1.1, "def solve_57c88724(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind( frontiers, I)\n    x2 = compose(size, x1)\n    x3 = matcher(x2, ONE)\n    x4 = shape(I)\n    x5 = canvas(ONE, x4)\n    x6 = lbind(hmatching, I)\n    x7 = compose(x6, x3)\n    x8 = fork(either, vline, hline)\n    x9 = fork(both, x7, x8)\n    x10 = sfilter(x5, x9)\n    x11 = compose(size, x1)\n    x12 = argmin(x10, x11)\n    x13 =1111(x12, I)\n    x14 = delta(x13)\n    O = fill(x5, ONE, x14)\n    return O"], [1.1, "def solve_c794f04d(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = shape(I)\n    x3 = halve(x2)\n    x4 = mostcolor(I)\n    x5 = canvas(x4, x3)\n    x6 = rbind(shoot, UP49 UNITY)\n    x7 = compose(x6, last)\n    x8 = fork(recolor, first, x7)\n    x9 = mapply(x8, x1)\n    O = paint(x5, x9)\n    return O"], [1.1, "def solve_560bc42b(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = power(equality, FOUR)\n    x9 = first(x7)\n    x10 = last(x7)\n    x11 = x8(x9)\n    x12 = x8(x10)\n    x13 = ofcolor(x11, FOUR)\n    x14 = ofcolor(x12, FOUR)\n    x15 = intersection(x13, x14)\n    x16 = first(x15)\n    x17 = shape(x11)\n    x18 = canvas(FIVE, x17)\n    x19 = fill(x18, THREE, x15)\n    x20 = decrement(x1)\n    x21 = chain(even, x20, tojvec)\n    x22 = crop(x11, x424, x21)\n    x23 = crop(x12, x22, x1)\n    x24 = crop(x12, x23, x11)\n    x25 = asobject(x21)\n    x26 = subgrid(x25, x24)\n    x27 = mostcolor(x26)\n    x28 = asobject(x23)\n    x29 =88170(x28)\n    x30 = matcher(first, x39)\n    x31 = compose(flip, x30)\n    x32 = sfilter(x29, x31)\n    O = fill(x19, TWO, x32)\n    return O"], [1.1, "def solve_aa7619a0(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = fork(subtract, toindices, box)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = fork(equality, toindices, corners)\n    x7 = fork(64b190, size, x6)\n    x8 = sfilter(x2, x7)\n    x9 = argmax(x8, x8)\n    x10 = color(x9)\n    x11 = ofcolor(I, x10)\n    x12 = inbox(x11)\n    x13 = toobject(x12, I)\n    x14 = mostcolor(x13)\n    x15 = ofcolor(I, x14)\n    x16 = inbox(x15)\n    x17 = urcorner(x16)\n    x18 = shoot(x17, NEG_UNITY)\n    x19 = lrcorner(x15)\n    x20 = shoot(x19, UNITY)\n    x21 = urcorner(x20)\n    x22 = shoot(x21,___UNITY)\n    x23 = combine(x18, x22)\n    x24 = rbind(shoot, x34)\n    x25 = mapply(x24, x23)\n    x26 = combine(x30, x25)\n    x27 = fill(I, x10, x26)\n    x28 = ofcolor(x27, x70)\n    x29 = rbind(adjacent, x8)\n    x30 = sfilter(x28, x29)\n    x31 = normalize(x30)\n    x32 = lbind(shift, x31)\n    x33 = mapply(x32, x30)\n    O = paint(x27, x33)\n    return O"], [1.1, "def solve_c7b9065c(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = DOWNd364b(x3)\n    x5 = fill(I, FOUR, x4)\n    x6 = hmirror(x5)\n    x7 =07(x6)\n    x8 = power(outbox, TWO)\n    x9 = chain(backdrop, x8, initset)\n    x10 = x9(x7)\n    x11 = leastcolor(x10)\n    x12 = replace(x5, x11, ZERO)\n    O = replace(x12, lefthalf, ZERO)\n    return O"], [1.1, "def solve_369bc17f(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = rbind(bordering, x14)\n    x16 = compose(x15, normalize)\n    x17 = apply(x16, x10)\n    x18 = rbind(adjacent, x3)\n    x19 =14(x14)\n    x20 = sfilter(x19, x18)\n    x21 = rbind(adjacent, x13)\n    x22 =14(x20)\n    x23 = sfilter(x21, x22)\n    x24 = combine(x18, x23)\n    x25 = cover(x9, x24)\n    x26 = fgpartition(x25)\n    x27 = merge(x26)\n    x28 = paint(x25, x27)\n    x29 = argmax(x28, size)\n    x30 = shift(x29, UNITY)\n    x31 = paint(x25, x30)\n    x32 = toindices(x3)\n    x33 = index(x25, x32)\n    x34 = difference(x33, x32)\n    O = fill(x39, x3, x34)\n    return O"], [1.1, "def solve_d96ffd89(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = sizefilter(x1, ONE)\n    x3 = lbind(fork, connect)\n    x4 = lbind(x3, identity)\n    x5 = lbind(extract, x2)\n    x6 = compose(x4, x5)\n    x7 = lbind(recolor, ONE)\n    x8 = chain(033708, x7, x6)\n    x9 = fork(paint, chain, x8)\n    x10 = chain(numcolors, x9, first)\n    x11 = compose(maximum, first)\n    x12 = fork(add, x11, x10)\n    x13 = compose(flip, x12)\n    x14 = sfilter(x2, x13)\n    x15 = size(x14)\n    x16 = positive(x15)\n    x17 = branch(x16, identity, dmirror)\n    x18 = x17(I)\n    x19 = partition(x18)\n    x20 = matcher(color, ONE)\n    x21 = compose(flip, x20)\n    x22 = ofcolor(x18, TWO)\n    x23 = sfilter(x22, x21)\n    x24 = fork(remove, last, identity)\n    x25 = lbind(colorcount, x18)\n    x26 = compose(x25, x42)\n    x27 = argmin(x23, x26)\n    x28 = ofcolor(x18, x27)\n    x29 = ofcolor(x18, TWO)\n    x30 = initset(x29)\n    x31 = rbind(manhattan, x30)\n    x32 = argmin(x28, x31)\n    x33 = mapply(x32, x28)\n    x34 = fill(x18, TWO, x33)\n    x35 = x17(x34)\n    x36 = ofcolor(x35, x27)\n    x37 = mapply(x16, x36)\n    O = fill(x35, TWO, x37)\n    return O"], [1.1, "def solve_57fce77f(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, T)\n    x4 = merge(x3)\n    x5 = mostcolor(x4)\n    x6 = palette(x1)\n    x7 = other(x6, x5)\n    x8 = switch(x6, x7, x1)\n    x9 =8506404699(x8)\n    x10 = astuple(SIX, FIVE)\n    x11 = canvas(x7, x10)\n    x12 = asindices(x11)\n    x13 = toobject(x12, I)\n    x14 = increment(x13)\n    x15 = mostcolor(I)\n    x16 = shift(x14, x15)\n    x17 = combine(x12, x16)\n    x18 = paint(x11, x17)\n    x19 = hmirror(x18)\n    x20 = objects(x19, T, F, T)\n    x21 = colorfilter(x20, x7)\n    x22 = rbind(adjacent, x21)\n    x23 = mfilter(x22, x22)\n    x24 = replace(x18, x5, xONE)\n    O = paint(x24, x23)\n    return O"], [1.1, "def solve_f8569f27(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(greater, THREE)\n    x3 = chain(x2, vmirror, dmirror)\n    x4 =535(I)\n    x5 = sfilter(x4, x3)\n    x6 = fork(combine, vfrontier, hfrontier)\n    x7 = x6(x5)\n    x8 = rbind(compose, initset)\n    x9 = lbind(rbind, manhattan)\n    x10 = chain(x8, x9, initset)\n    x11 = lbind(compose, initset)\n    x12 = chain(x11, x9, outbox)\n    x13 = compose(merge, x7)\n    x14 = fork(both, x12, x13)\n    x15 = fork(both, xO, x14)\n    x16 = apply(x15, x11)\n    x17 = decrement(x16)\n    x18 = tojvec(x17)\n    x19 = shoot(x18, UNITY)\n    x20 = mapply(x16, x19)\n    x21 = fill(I, ZERO, x20)\n    x22 = asobject(x21)\n    x23 = vmirror(x22)\n    x24 = index(x82, x23)\n    x25 = branch(x24, DOWN, RIGHT)\n    x26 = add(x25, x28)\n    x27 = ulcorner(x25)\n    x28 = add(x27, x28)\n    x29 = shift(x23, x28)\n    x30 = urcorner(x25)\n    x31 = add(x30, x28)\n    x32 = llcorner(x25)\n    x33 = add(x32, x28)\n    x34 = shift(x33, x24)\n    x35 = paint(x21, x29)\n    O = fill(x35, ZERO, x32_ulcorner)\n    return O"], [1.1, "def solve_33e654ed(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = eapply(d511117, x1)\n    O =7599(x2)\n    return O"], [1.1, "def solve_35fc5bab(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    x5 = mostcolor(x4)\n    x6 = objects(x2, T, F, F)\n    x7 = colorfilter(x6, x5)\n    x8 = compose(normalize, toindices)\n    x9 = apply(x8, x7)\n    x10 = x2(x9)\n    x11 = remove(x10, x9)\n    x12 = lbind(sfilter, x11)\n    x13 = lbind(matcher, vline)\n    x14 = chain(x12, x4, x13)\n    x15 =49filter(x12, x14)\n    x16 = difference(x12, x15)\n    x17 = compose(size, x16)\n    x18 = matcher(x17, ZERO)\n    x19 = lbind(sfilter, x15)\n    x20 = lbind(matcher, x18)\n    x21 = compose(x19, x20)\n    x22 = fork(valmax, x21, x17)\n    x23 = lbind(sfilter, x15)\n    x24 = lbind(matcher, x18)\n    x25 = compose(x23, x24)\n    x26 = fork(apply, x25, x21)\n    x27 = lbind(lbind, shift)\n    x28 = compose(x27, dneighbors)\n    x29 = fork(mapply, x28, x22)\n    x30 = fork(mapply, x28, xl)\n    x31 = fork(combine, x29, x30)\n    x32 = mapply(x31, x15)\n    O = paint(x1, x32)\n    return O"], [1.1, "def solve_7553e8e8(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = MN objectsize(x5)\n    x7 = colorcount(I, x3)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x3)\n    x10 = leftmost(x9)\n    x11 = ofcolor(I, x3)\n    x12 = rightmost(x11)\n    x13 = matcher(first, x8)\n    x14 = rbind(sfilter, x13)\n    x15 = chain(x12, delta, x14)\n    x16 = apply(x15, x11)\n    O = fill(I, x3, x16)\n    return O"], [1.1, "def solve_48e54ce9(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =indices(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = double(x width)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = merge(x10)\n    x12 = mostcolor(x11)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = rbind(sfilter, x14)\n    x16 = lbind(occurrences, x6)\n    x17 = compose(x16, x15)\n    x18 = fork(positive, size, x17)\n    x19 = lbind(rbind, subtract)\n    x20 = rbind(rapply, x11)\n    x21 = compose(initset, x18)\n    x22 = chain(first, x20, x21)\n    x23 = compose(x18, x22)\n    x24 = apply(x23, x3)\n    x25 =Contin solve(x24, x6)\n    x26 = cover(x6, x25)\n    x27 = compose(x26, ulcorner)\n    x28 = apply(x27, x02)\n    x29 = vmirror(x28)\n    x30 = multiply(x NEG_TWO, NEG_TWO)\n    x31 = apply(x30, x29)\n    x32 = asindices(x29)\n    x33 = ofcolor(x29, x12)\n    x34 = difference(x32, x33)\n    x35 = lrcorner(x24)\n    x36 = lbind(shift, x24)\n    x37 = mapply(x36, x31)\n    O = paint(x32, x37)\n    return O"], [1.1, "def solve_e1b8c13d(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = apply(normalize, x2)\n    x4 = astuple(NEG_TWO, ONE)\n    x5 = astuple(UNITY, x4)\n    x6 = shift(x3, x5)\n    x7 = rbind(argmin, x3)\n    x8 =44232000(x3)\n    x9 = lbind(rbind, manhattan)\n    x10 = compose(x9, initset)\n    x11 = fork(compose, x7, x10)\n    x12 = product(x1, x6)\n    x13 = fork(shift, identity, x12)\n    x14 = mapply(x13, x12)\n    O = paint(x1, x14)\n    return O"], [1.1, "def solve_ebb2bd74(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = EIGHT(I)\n    x2 = vmirror(x1)\n    O =:\n    (x2, vmirror)\n    return O"], [1.1, "def solve_dd5bcffe(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = rot180(I)\n    x2 = rot270(I)\n    x3 = rot180(x1)\n    x4 =81(x3)\n    x5 = fork(combine, vfrontier, hfrontier)\n    x6 = compose(x5, x4)\n    x7 = sfilter(x2, x6)\n    O = fill(x3, ZERO, x7)\n    return O"], [1.1, "def solve_b825be8b(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = x2(I, TWO)\n    x4 = fgpartition(x3)\n    x5 = merge(x4)\n    x6 = chain(double, numcolors, numcolors)\n    x7 = x6(x5)\n    x8 = compose(vmirror, x7)\n    x9 = power(x8, TWO)\n    x10 = x9(x4)\n    x11 = x9(x4)\n    x12 = toindices(x11)\n    x13 = apply(x8, x12)\n    x14 = contained(x10, x13)\n    x15 = flip(x14)\n    x16 = branch(x15, hmirror, vmirror)\n    x17 = x16(x15)\n    x18 =757(x17, x4)\n    x19 = chain(dmirror, asobject, x18)\n    x20 = matcher(x19, x17)\n    x21 = extract(x50, x20)\n    x22 = x21(x4)\n    x23 = x21(x11)\n    x24 = asindices(x23)\n    x25 =412(flip, x24)\n    x26 = x25(x24)\n    x27 = fill(x22, EIGHT, x25)\n    O = paint(x27, x26)\n    return O"], [1.1, "def solve_211e9ecd(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = rbind(Sfilter, vline)\n    x2 = compose(positive, size)\n    x3 = rbind(sfilter, hline)\n    x4 = compose(x2, x3)\n    x5 = chain(x1, x4, frontiers)\n    x6 = argmax(x5, x4)\n    x7 =6(I)\n    x8 = remove(x6, x7)\n    x9 = lbind(shift, x6)\n    x10 = height(x6)\n    x11 = divide(x10, x9)\n    x12 = width(x6)\n    x13 = divide(x12, x4)\n    x14 = astuple(x11, x13)\n    x15 = maximum(x14)\n    x16 = increment(x15)\n    x17 = interval(ONE, x16, ONE)\n    x18 = matcher(numcolors, x16)\n    x19 = lbind(shift, x6)\n    x20 = rbind(multiply, x15)\n    x21 = lbind(add, x20)\n    x22 = chain(x19, x21, invert)\n    x23 = fork(combine, x18, x22)\n    x24 = lbind(apply, x23)\n    x25 = rbind(colorcount, x6)\n    x26 = compose(x24, x25)\n    x27 = apply(x26, x52)\n    x28 = normalize(x6)\n    x29 = mapply(x28, x27)\n    x30 = shape(x29)\n    x31 = canvas(ZERO, x30)\n    O = paint(x31, x29)\n    return O"]], "2037f2c7": [[0.3154849303341698, "def solve_d4420644(I):\n    x1 = palette(I)\n    x2 = contained(ONE, x1)\n    x3 = contained(TWO, x1)\n    x4 = branch(x2, UNITY, TWO_BY_TWO)\n    x5 = branch(x3, RIGHT, x4)\n    x6 = fork(combine, vfrontier, hfrontier)\n    x7 = x6(x5)\n    x8 = canvas(ZERO, THREE_BY_THREE)\n    O = fill(x8, EIGHT, x7)\n    return O"], [0.42745223426178414, "def solve_9d0463fa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = subgrid(x2, I)\n    x8 = palette(x7)\n    x9 = lbind(colorcount, x7)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.47026220156654935, "def solve_7b32882e(I):\n    x1 = palette(I)\n    x2 = contained(ONE, x1)\n    x3 = contained(TWO, x1)\n    x4 = branch(x2, UNITY, TWO_BY_TWO)\n    x5 = branch(x3, RIGHT, x4)\n    x6 = fork(combine, vfrontier, hfrontier)\n    x7 = x6(x5)\n    x8 = canvas(ZERO, THREE_BY_THREE)\n    O = fill(x8, FIVE, x7)\n    return O"], [0.4709500322543801, "def solve_ff6934ef(I):\n    x1 = palette(I)\n    x2 = remove(TWO, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, T, F, T)\n    x9 = colorfilter(x8, TWO)\n    x10 = size(x9)\n    x11 = double(x10)\n    x12 = interval(ZERO, x11, TWO)\n    x13 = apply(tojvec, x12)\n    x14 = astuple(ONE, NINE)\n    x15 = canvas(x4, x14)\n    x16 = fill(x15, ONE, x13)\n    x17 = hsplit(x16, THREE)\n    O = merge(x17)\n    return O"], [0.5109391515438492, "def solve_1422fc15(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, T)\n    x4 = merge(x3)\n    x5 = astuple(FOUR, FOUR)\n    x6 = canvas(ZERO, x5)\n    x7 = paint(x6, x4)\n    O = rot90(x7)\n    return O"], [0.5124660219282645, "def solve_de92c2ea(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_5bdc5e08(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_5fa5bfea(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_126bd616(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_39069d30(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5180496905134585, "def solve_44535b27(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = color(x3)\n    O = canvas(x4, TWO_BY_TWO)\n    return O"], [0.5267563220461772, "def solve_c7a0a6f6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [0.5341705127937012, "def solve_02fda799(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = branch(x2, ONE, SEVEN)\n    O = canvas(x3, UNITY)\n    return O"], [0.5341705127937012, "def solve_76d422e7(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = neighbors(UNITY)\n    x8 = initset(UNITY)\n    x9 = recolor(x5, x7)\n    x10 = recolor(x6, x8)\n    x11 = combine(x9, x10)\n    x12 = occurrences(I, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, x6, x5)\n    O = canvas(x15, UNITY)\n    return O"], [0.5389342090692021, "def solve_be1b59b4(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.5389342090692021, "def solve_90008deb(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 =color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.5437278100321579, "def solve_6eab0599(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, SIX)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, ONE, SEVEN)\n    x5 = canvas(x4, THREE_BY_THREE)\n    x6 = branch(x1, TWO, ZERO)\n    x7 = connect(ORIGIN, DOWN)\n    x8 = connect(ORIGIN, ZERO_BY_TWO)\n    x9 = combine(x7, x8)\n    O = fill(x5, TWO, x9)\n    return O"], [0.5614714401904005, "def solve_346ef70b(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.565686949714551, "def solve_31ef29a4(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = first(x2)\n    x4 = neighbors(x3)\n    x5 = astuple(TEN, TEN)\n    x6 = canvas(ZERO, x5)\n    x7 = initset(x3)\n    x8 = fill(x6, x1, x7)\n    O = fill(x8, TWO, x4)\n    return O"], [0.5696230758236387, "def solve_4ecaa663(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = mostcolor(x2)\n    x4 = normalize(x2)\n    x5 = mostcolor(I)\n    x6 = shape(x2)\n    x7 = canvas(x5, x6)\n    O = fill(x7, x3, x4)\n    return O"], [0.5863202149434034, "def solve_701ae9e7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, T, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.5863202149434034, "def solve_3bc91ce3(I):\n    x1 = frontiers(I)\n    x2 = mfilter(x1, vline)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, F, T)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.5962408498640382, "def solve_81aa2a4e(I):\n    x1 = objects(I, T, F, T)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = mostcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = extract(x1, x5)\n    O = subgrid(x6, I)\n    return O"], [0.5963048638279206, "def solve_aee26452(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [0.6057341869347498, "def solve_cae86563(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, F, F, T)\n    x6 = rbind(colorcount, ONE)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.6076921592043171, "def solve_1fd87429(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.6194886937848373, "def solve_bc4df508(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.6309126220053929, "def solve_75ab1707(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_0cfcdfc1(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_7ecf000d(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_89e8ae4e(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_bf88c42d(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_89abf998(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_7906d4c3(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_d86facef(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_d9c45414(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_2849a157(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_8c0646b3(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_ab6c7f75(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_81e17c6d(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_3114fbfb(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_52ba8f2a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_85904b3a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_f8aab032(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_49007793(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_43b73717(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.631933306897075, "def solve_93b8e190(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.631933306897075, "def solve_3d29bb24(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.631933306897075, "def solve_49755f7a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.631933306897075, "def solve_2e9466b2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.631933306897075, "def solve_7d5d61aa(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.631933306897075, "def solve_196b5b15(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.6369094320324673, "def solve_6548c1cf(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = replace(x11, ONE, TWO)\n    return O"], [0.652277101112151, "def solve_034242c8(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.6557151442133381, "def solve_57708b48(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.6557151442133381, "def solve_08336b1b(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.6557151442133381, "def solve_9b4bb339(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.6557151442133381, "def solve_04762ae7(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.6557151442133381, "def solve_e2449288(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.6557151442133381, "def solve_e0a8035a(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.6557151442133381, "def solve_349b8865(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.6748161707949084, "def solve_dde66ef1(I):\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [0.7011057993944743, "def solve_345ce9b2(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, x13, x16)\n    return O"], [0.7106768246435561, "def solve_1360f15b(I):\n    x1 = vmirror(I)\n    x2 = fgpartition(x1)\n    x3 = order(x2, size)\n    x4 = last(x3)\n    x5 = remove(x4, x3)\n    x6 = compose(toindices, normalize)\n    x7 = rbind(upscale, TWO)\n    x8 = chain(toindices, x7, normalize)\n    x9 = x6(x4)\n    x10 = rbind(intersection, x9)\n    x11 = chain(size, x10, x8)\n    x12 = argmax(x5, x11)\n    x13 = subgrid(x12, x1)\n    O = vmirror(x13)\n    return O"], [0.7106768246435561, "def solve_9ada3015(I):\n    x1 = vmirror(I)\n    x2 = fgpartition(x1)\n    x3 = order(x2, size)\n    x4 = last(x3)\n    x5 = remove(x4, x3)\n    x6 = compose(toindices, normalize)\n    x7 = rbind(upscale, TWO)\n    x8 = chain(toindices, x7, normalize)\n    x9 = x6(x4)\n    x10 = rbind(intersection, x9)\n    x11 = chain(size, x10, x8)\n    x12 = argmax(x5, x11)\n    x13 = subgrid(x12, x1)\n    O = vmirror(x13)\n    return O"], [0.7120344565700184, "def solve_6d4fa3d9(I):\n    x1 = hsplit(I, THREE)\n    O = first(x1)\n    return O"], [0.7121560919415234, "def solve_d32ee5bb(I):\n    x1 = index(I, ORIGIN)\n    x2 = equality(x1, TWO)\n    x3 = branch(x2, vsplit, hsplit)\n    x4 = x3(I, TWO)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = palette(x5)\n    x8 = palette(x6)\n    x9 = intersection(x7, x8)\n    x10 = first(x9)\n    x11 = shape(x5)\n    x12 = canvas(x10, x11)\n    x13 = ofcolor(x5, x10)\n    x14 = ofcolor(x6, x10)\n    x15 = intersection(x13, x14)\n    O = fill(x12, FIVE, x15)\n    return O"], [0.7313689109828214, "def solve_1444204b(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.7313689109828214, "def solve_4b150a71(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.7313689109828214, "def solve_1e979e12(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.7313689109828214, "def solve_4e2be6ec(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.7313689109828214, "def solve_57021259(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.7313689109828214, "def solve_69229a21(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.7313689109828214, "def solve_346786cc(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.7313689109828214, "def solve_1b57659e(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.7313689109828214, "def solve_19273021(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.7356195315428602, "def solve_be4d29ee(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x7, x16)\n    x20 = ofcolor(x8, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, THREE, x21)\n    return O"], [0.7513894621344644, "def solve_7a50eacb(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.7513894621344644, "def solve_2e488234(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.7514237970163009, "def solve_6bf045ea(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = x2(I, TWO)\n    x4 = order(x3, numcolors)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = objects(x6, F, F, T)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(first, x9)\n    x11 = compose(flip, x10)\n    x12 = rbind(sfilter, x11)\n    x13 = lbind(occurrences, x5)\n    x14 = compose(x13, x12)\n    x15 = chain(positive, size, x14)\n    x16 = sfilter(x7, x15)\n    x17 = chain(first, x13, x12)\n    x18 = compose(ulcorner, x12)\n    x19 = fork(subtract, x17, x18)\n    x20 = fork(shift, identity, x19)\n    x21 = apply(x20, x16)\n    x22 = compose(decrement, width)\n    x23 = chain(positive, decrement, x22)\n    x24 = mfilter(x21, x23)\n    O = paint(x5, x24)\n    return O"], [0.7635614912120104, "def solve_b7ea780c(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    x4 = mostcolor(I)\n    O = replace(x3, x4, ZERO)\n    return O"], [0.7678617751786186, "def solve_abb7c25f(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, bottomhalf)\n    O = x2(I)\n    return O"], [0.7702738530895862, "def solve_e7587275(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_da3ae983(I):\n    x1 = subgrid(I, I)\n    x2 = vmirror(x1)\n    x3 = equality(x2, I)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_8b6d368e(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_5ba9ea34(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_85a2e2db(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_57a3c5d0(I):\n    O = tophalf(I)\n    return O"], [0.7702994509699451, "def solve_b74b2ee6(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = merge(x4)\n    x6 = subgrid(x5, I)\n    x7 = mostcolor(x6)\n    x8 = leastcolor(x6)\n    O = switch(x6, x7, x8)\n    return O"], [0.7707492564922985, "def solve_0b860acc(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.7707492564922985, "def solve_e11328c7(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.7707492564922985, "def solve_e8445d78(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.783810190239905, "def solve_8f4a6a22(I):\n    x1 = trim(I)\n    x2 = trim(x1)\n    x3 = tophalf(x2)\n    x4 = lefthalf(x3)\n    x5 = tophalf(x2)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(x2)\n    x8 = lefthalf(x7)\n    x9 = bottomhalf(x2)\n    x10 = righthalf(x9)\n    x11 = index(I, ORIGIN)\n    x12 = width(I)\n    x13 = decrement(x12)\n    x14 = tojvec(x13)\n    x15 = index(I, x14)\n    x16 = height(I)\n    x17 = decrement(x16)\n    x18 = toivec(x17)\n    x19 = index(I, x18)\n    x20 = shape(I)\n    x21 = decrement(x20)\n    x22 = index(I, x21)\n    x23 = compress(I)\n    x24 = asindices(x23)\n    x25 = box(x24)\n    x26 = corners(x24)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, x23)\n    x29 = color(x28)\n    x30 = palette(x2)\n    x31 = other(x30, x29)\n    x32 = replace(x4, x31, x11)\n    x33 = replace(x6, x31, x15)\n    x34 = replace(x8, x31, x19)\n    x35 = replace(x10, x31, x22)\n    x36 = hconcat(x32, x33)\n    x37 = hconcat(x34, x35)\n    O = vconcat(x36, x37)\n    return O"], [0.7946931652854432, "def solve_dd62be86(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = ofcolor(I, ZERO)\n    x4 = astuple(x1, ONE)\n    x5 = crop(I, ORIGIN, x4)\n    x6 = hupscale(x5, x2)\n    O = fill(x6, ZERO, x3)\n    return O"], [0.7946931652854432, "def solve_35adba73(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.7946931652854432, "def solve_173748df(I):\n    x1 = shape(I)\n    x2 = equality(x1, TWO)\n    x3 = branch(x2, x1, x1)\n    x4 = branch(x2, x1, x1)\n    x5 = canvas(ZERO, x4)\n    x6 = asobject(x5)\n    x7 = occurrences(I, x6)\n    x8 = apply(double, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(shift, x6)\n    x11 = mapply(x10, x9)\n    O = fill(x5, FOUR, x11)\n    return O"], [0.8058042763965544, "def solve_47e25343(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.8058042763965544, "def solve_3828d505(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = compose(last, last)\n    x7 = matcher(x6, x5)\n    x8 = compose(flip, x7)\n    x9 = asobject(I)\n    x10 = fork(both, x3, x8)\n    x11 = sfilter(x9, x10)\n    O = fill(I, x1, x11)\n    return O"], [0.8141732132799135, "def solve_f48a2bf4(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.8277590843976249, "def solve_f541996f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.8277590843976249, "def solve_14139c6d(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.8277590843976249, "def solve_84a1782b(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_7f60ad53(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.8277590843976249, "def solve_375e84de(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.8277590843976249, "def solve_263d005f(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_e3b2d358(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_55485376(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_4904db5d(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_43d2d38b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.8277590843976249, "def solve_4ec97b2f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.8277590843976249, "def solve_95a5b43b(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277875214971026, "def solve_a7927a55(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.8277875214971026, "def solve_a1f7930d(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.8277875214971026, "def solve_a36b0c17(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.829564622162508, "def solve_2f81834b(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.829564622162508, "def solve_6f34a6d3(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.8309805019969229, "def solve_b842301b(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = lbind(recolor, EIGHT)\n    x4 = rbind(ofcolor, x1)\n    x5 = chain(x3, backdrop, x4)\n    x6 = fork(paint, identity, x5)\n    x7 = height(I)\n    x8 = vsplit(I, x7)\n    x9 = mapply(x6, x8)\n    x10 = ofcolor(x9, EIGHT)\n    x11 = dmirror(I)\n    x12 = width(I)\n    x13 = vsplit(x11, x12)\n    x14 = mapply(x6, x13)\n    x15 = dmirror(x14)\n    x16 = ofcolor(x15, EIGHT)\n    x17 = combine(x10, x16)\n    x18 = difference(x17, x2)\n    O = fill(I, EIGHT, x18)\n    return O"], [0.8341973243152688, "def solve_a4c657fa(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.8372727715830096, "def solve_0d017063(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x3, x18)\n    x20 = valmax(x19, x16)\n    x21 = matcher(x16, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(colorcount, x17)\n    x24 = argmax(x22, x23)\n    x25 = shape(I)\n    x26 = canvas(x24, x25)\n    x27 = paint(x26, x2)\n    x28 = normalize(x11)\n    x29 = matcher(first, x3)\n    x30 = compose(flip, x29)\n    x31 = sfilter(x28, x30)\n    x32 = shape(x28)\n    x33 = increment(x32)\n    x34 = matcher(first, FOUR)\n    x35 = sfilter(x28, x34)\n    x36 = center(x35)\n    x37 = multiply(x33, x36)\n    x38 = shift(x31, x37)\n    O = paint(x27, x38)\n    return O"], [0.8447284563617042, "def solve_8bb78835(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = cover(I, x2)\n    x4 = chain(toivec, invert, height)\n    x5 = fork(shift, identity, x4)\n    x6 = mapply(x5, x1)\n    O = paint(x3, x6)\n    return O"], [0.8477590843976248, "def solve_a44520b9(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(add, height, width)\n    x3 = compose(decrement, x2)\n    x4 = fork(equality, size, x3)\n    x5 = fork(difference, toindices, box)\n    x6 = compose(size, x5)\n    x7 = matcher(x6, ZERO)\n    x8 = sfilter(x1, x4)\n    x9 = difference(x1, x8)\n    x10 = sfilter(x9, x7)\n    x11 = merge(x1)\n    x12 = fill(I, TWO, x11)\n    x13 = merge(x8)\n    x14 = fill(x12, ONE, x13)\n    x15 = merge(x10)\n    O = fill(x14, SIX, x15)\n    return O"], [0.8527276661680809, "def solve_b6c48e28(I):\n    x1 = replace(I, FOUR, ZERO)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [0.8527276661680809, "def solve_b0b429e6(I):\n    x1 = replace(I, FOUR, ZERO)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply( x4, x7)\n    O = cmirror(x8)\n    return O"], [0.8530872511837071, "def solve_ba043d5e(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.8530872511837071, "def solve_ba21fa2a(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.8530872511837071, "def solve_a8b2e634(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.8559241864624044, "def solve_300d1f81(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.8580257965533965, "def solve_63fcb204(I):\n    x1 = asindices(I)\n    x2 = tophalf(I)\n    x3 = bottomhalf(I)\n    x4 = leastcolor(x2)\n    x5 = leastcolor(x3)\n    x6 = hfrontier(TWO_BY_ZERO)\n    x7 = box(x1)\n    x8 = combine(x6, x7)\n    x9 = fill(x2, x4, x8)\n    x10 = hmirror(x9)\n    x11 = replace(x10, x4, x5)\n    O = vconcat(x9, x11)\n    return O"], [0.8581546500312859, "def solve_e1196e4b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.8582352748738153, "def solve_6f209644(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = chain(palette, trim, x2)\n    x4 = lbind(contained, THREE)\n    x5 = compose(x4, x3)\n    x6 = fork(add, height, width)\n    x7 = compose(decrement, x6)\n    x8 = fork(equality, size, x7)\n    x9 = mfilter(x1, x5)\n    x10 = mfilter(x1, x8)\n    x11 = replace(I, THREE, SIX)\n    x12 = fill(x11, TWO, x9)\n    O = fill(x12, ONE, x10)\n    return O"], [0.8588701955087359, "def solve_a35c3976(I):\n    x1 = replace(I, SIX, TWO)\n    x2 = objects(x1, T, T, T)\n    x3 = colorfilter(x2, ONE)\n    x4 = merge(x3)\n    O = fill(x1, THREE, x4)\n    return O"], [0.8604574970960375, "def solve_b3e6df2e(I):\n    O = replace(I, SIX, TWO)\n    return O"], [0.8605698141073588, "def solve_dc925b88(I):\n    x1 = ofcolor(I, EIGHT)\n    x2 = dneighbors(UNITY)\n    x3 = insert(UNITY, x2)\n    O = fill(I, THREE, x3)\n    return O"], [0.8618142620242312, "def solve_b4c6ca63(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, x1, x4)\n    return O"], [0.8625466344449646, "def solve_3cad760b(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, FOUR, x3)\n    return O"], [0.8625466344449646, "def solve_f6458605(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, TWO, x3)\n    return O"], [0.862930360325468, "def solve_2c827883(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot180(x3)\n    return O"], [0.8630966423697286, "def solve_ec74704f(I):\n    x1 = fork(multiply, height, width)\n    x2 = partition(I)\n    x3 = argmax(x2, x1)\n    x4 = remove(x3, x2)\n    x5 = argmax(x4, x1)\n    x6 = other(x4, x5)\n    x7 = palette(I)\n    x8 = lrcorner(x5)\n    x9 = add(x8, UNITY)\n    x10 = llcorner(x5)\n    x11 = add(x10, DOWN_LEFT)\n    x12 = urcorner(x5)\n    x13 = add(x12, UP_RIGHT)\n    x14 = ulcorner(x5)\n    x15 = add(x14, NEG_UNITY)\n    x16 = shoot(x9, UNITY)\n    x17 = shoot(x11, DOWN_LEFT)\n    x18 = shoot(x13, UP_RIGHT)\n    x19 = shoot(x15, NEG_UNITY)\n    x20 = combine(x16, x17)\n    x21 = combine(x18, x19)\n    x22 = combine(x20, x21)\n    x23 = color(x6)\n    O = fill(I, x23, x22)\n    return O"], [0.8631356100874941, "def solve_e056dd34(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = recolor(ZERO, x2)\n    x4 = normalize(x3)\n    x5 = occurrences(I, x4)\n    x6 = toindices(x4)\n    x7 = lbind(shift, x6)\n    x8 = mapply(x7, x5)\n    O = fill(I, x1, x8)\n    return O"], [0.8631356100874941, "def solve_a5ee513e(I):\n    x1 = ofcolor(I, TWO)\n    x2 = recolor(ZERO, x1)\n    x3 = normalize(x2)\n    x4 = occurrences(I, x2)\n    x5 = lbind(shift, x3)\n    x6 = apply(x5, x4)\n    x7 = astuple(ONE, THREE)\n    x8 = astuple(FIVE, ONE)\n    x9 = astuple(TWO, SIX)\n    x10 = initset(x7)\n    x11 = insert(x8, x10)\n    x12 = insert(x9, x11)\n    x13 = rbind(contained, x12)\n    x14 = chain(flip, x13, ulcorner)\n    x15 = sfilter(x6, x14)\n    x16 = merge(x15)\n    x17 = recolor(TWO, x16)\n    O = paint(I, x17)\n    return O"], [0.8632184800688373, "def solve_30905d00(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.8632184800688373, "def solve_a07244da(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.8632184800688373, "def solve_323133d6(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.8632184800688373, "def solve_b6322588(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [0.8632787798855505, "def solve_edc0bdf2(I):\n    O = rot270(I)\n    return O"], [0.8632787798855505, "def solve_3eb6d332(I):\n    O = rot90(I)\n    return O"], [0.863678348633302, "def solve_11def15c(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.863706518437685, "def solve_eb11ea87(I):\n    O = dmirror(I)\n    return O"], [0.863706518437685, "def solve_e9ca16ad(I):\n    O = dmirror(I)\n    return O"], [0.8637867634430995, "def solve_39d464fa(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.8637867634430995, "def solve_f668bb98(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.8637867634430995, "def solve_7e08c377(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.8637867634430995, "def solve_2eace2ca(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.8637867634430995, "def solve_46a052e6(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.8637867634430995, "def solve_a489a1e1(I):\n    x1 = mostcolor(I)\n    x2 = vsplit(I, TWO)\n    x3 = apply(numcolors, x2)\n    x4 = contained(ONE, x3)\n    x5 = branch(x4, hmirror, vmirror)\n    x6 = x5(I)\n    x7 = asobject(x6)\n    x8 = matcher(first, x1)\n    x9 = compose(flip, x8)\n    x10 = sfilter(x7, x9)\n    O = paint(I, x10)\n    return O"], [0.8638179923732853, "def solve_434e04ac(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = rbind(difference, x2)\n    x4 = rbind(greater, TWO)\n    x5 = chain(x4, size, x3)\n    x6 = compose(x5, dneighbors)\n    x7 = sfilter(x2, x6)\n    O = fill(I, ZERO, x7)\n    return O"], [0.8638179923732853, "def solve_f9016614(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = rbind(difference, x2)\n    x4 = rbind(greater, TWO)\n    x5 = chain(x4, size, x3)\n    x6 = compose(x5, dneighbors)\n    x7 = sfilter(x2, x6)\n    O = fill(I, ZERO, x7)\n    return O"], [0.863838257851044, "def solve_d8650412(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = lbind(colorcount, I)\n    x5 = argmin(x3, x4)\n    x6 = ofcolor(I, x1)\n    x7 = ofcolor(I, x5)\n    x8 = combine(x6, x7)\n    x9 = mapply(neighbors, x8)\n    x10 = difference(x9, x8)\n    x11 = toobject(x10, I)\n    x12 = leastcolor(x11)\n    x13 = ofcolor(I, x1)\n    x14 = first(x13)\n    x15 = initset(x14)\n    x16 = objects(I, T, F, F)\n    x17 = colorfilter(x16, x12)\n    x18 = lbind(adjacent, x8)\n    x19 = mfilter(x17, x18)\n    x20 = toindices(x19)\n    x21 = rbind(manhattan, x15)\n    x22 = chain(even, x21, initset)\n    x23 = sfilter(x20, x22)\n    x24 = fill(I, x5, x20)\n    O = fill(x24, x1, x23)\n    return O"], [0.8638448240547932, "def solve_a2a79039(I):\n    x1 = ofcolor(I, TWO)\n    x2 = ofcolor(I, THREE)\n    x3 = recolor(TWO, x1)\n    x4 = ulcorner(x2)\n    x5 = ulcorner(x1)\n    x6 = subtract(x4, x5)\n    x7 = increment(x6)\n    O = move(I, x3, x7)\n    return O"], [0.8638701955087361, "def solve_2aea6d72(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.8638701955087361, "def solve_283d0dbe(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.8638701955087361, "def solve_98f7aec9(I):\n    x1 = mostcolor(I)\n    x2 = replace(I, x1, ZERO)\n    x3 = shoot(ORIGIN, UNITY)\n    O = underfill(x2, x1, x3)\n    return O"], [0.8638701955087361, "def solve_b0989855(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.8638701955087361, "def solve_abd3154b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_5a02e5ea(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.8638701955087361, "def solve_c70348e4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = subgrid(x2, I)\n    return O"], [0.8638701955087361, "def solve_d1d5ee2a(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.8638701955087361, "def solve_59c78fe3(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.8638701955087361, "def solve_158fb1ca(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_47e726cc(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = mfilter(x2, x4)\n    O = paint(I, x5)\n    return O"], [0.8638701955087361, "def solve_3269790b(I):\n    x1 = lbind(multiply, THREE)\n    x2 = rbind(add, THREE)\n    x3 = compose(x2, x1)\n    x4 = fork(equality, identity, x3)\n    x5 = compose(x4, last)\n    x6 = ofcolor(I, ZERO)\n    x7 = sfilter(x6, x5)\n    O = fill(I, ZERO, x7)\n    return O"], [0.8638701955087361, "def solve_c609818a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, ZERO, x2)\n    return O"], [0.8638701955087361, "def solve_32f461fa(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.8638701955087361, "def solve_e582411f(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_265580a2(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.8638701955087361, "def solve_60924532(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_ef32b612(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.8638701955087361, "def solve_ddac29ae(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ONE, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    x7 = fill(I, EIGHT, x6)\n    x8 = add(SIX, SIX)\n    x9 = astuple(EIGHT, x8)\n    x10 = index(x7, x9)\n    x11 = equality(x10, EIGHT)\n    x12 = initset(x9)\n    x13 = add(x9, DOWN)\n    x14 = insert(x13, x12)\n    x15 = toobject(x14, x7)\n    x16 = toobject(x14, I)\n    x17 = branch(x11, x16, x15)\n    O = paint(x7, x17)\n    return O"], [0.8638701955087361, "def solve_f83105f3(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, F)\n    x3 = lbind(colorfilter, x2)\n    x4 = compose(size, x3)\n    x5 = valmin(x1, x4)\n    x6 = matcher(x4, x5)\n    x7 = sfilter(x1, x6)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = asobject(I)\n    x11 = matcher(first, x9)\n    x12 = compose(flip, x11)\n    x13 = sfilter(x10, x12)\n    x14 = lbind(contained, x9)\n    x15 = compose(flip, x14)\n    x16 = sfilter(I, x15)\n    x17 = asobject(x16)\n    x18 = hperiod(x17)\n    x19 = dmirror(I)\n    x20 = sfilter(x19, x15)\n    x21 = asobject(x20)\n    x22 = hperiod(x21)\n    x23 = astuple(x22, x18)\n    x24 = lbind(multiply, x23)\n    x25 = neighbors(ORIGIN)\n    x26 = mapply(neighbors, x25)\n    x27 = apply(x24, x26)\n    x28 = lbind(shift, x13)\n    x29 = mapply(x28, x27)\n    O = paint(I, x29)\n    return O"], [0.8638701955087361, "def solve_3c97fd3c(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = fgpartition(I)\n    x6 = objects(I, T, F, F)\n    x3 = colorfilter(x6, x4)\n    x4 = rbind(bordering, I)\n    x5 = compose(flip, x4)\n    x6 = mfilter(x3, x5)\n    O = fill(I, ONE, x6)\n    return O"], [0.8638701955087361, "def solve_b8db33de(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = fork(subtract, first, last)\n    x4 = fork(multiply, sign, identity)\n    x5 = compose(x4, x3)\n    x6 = lbind(greater, THREE)\n    x7 = chain(x6, maximum, x5)\n    x8 = lbind(lbind, astuple)\n    x9 = rbind(chain, x8)\n    x10 = lbind(compose, x7)\n    x11 = rbind(x9, x10)\n    x12 = lbind(lbind, sfilter)\n    x13 = compose(x11, x12)\n    x14 = lbind(mapply, backdrop)\n    x15 = fork(apply, x13, identity)\n    x16 = compose(x14, x15)\n    x17 = power(x16, TWO)\n    x18 = x17(x2)\n    x19 = fill(I, FOUR, x18)\n    O = fill(x19, x1, x2)\n    return O"], [0.8638701955087361, "def solve_40a31bdc(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_4756bb5d(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.8638701955087361, "def solve_b34deaec(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.8638701955087361, "def solve_f9052e5d(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_66585baa(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_fa771c7f(I):\n    x1 = palette(I)\n    x2 = remove(FIVE, x1)\n    x3 = first(x2)\n    x4 = ofcolor(I, x3)\n    x5 = fill(I, ZERO, x4)\n    x6 = ofcolor(I, FIVE)\n    O = fill(x5, x3, x6)\n    return O"], [0.8638701955087361, "def solve_3e317936(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.8638701955087361, "def solve_536ec41c(I):\n    x1 = fgpartition(I)\n    x2 = compose(last, first)\n    x3 = power(last, TWO)\n    x4 = fork(connect, x2, x3)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x1)\n    O = paint(I, x6)\n    return O"], [0.8638763240862932, "def solve_aa0da7ff(I):\n    x1 = objects(I, T, F, T)\n    x2 = mapply(delta, x1)\n    O = fill(I, SEVEN, x2)\n    return O"], [0.8638763240862932, "def solve_4c822624(I):\n    x1 = objects(I, T, F, T)\n    x2 = mapply(delta, x1)\n    O = fill(I, SEVEN, x2)\n    return O"], [0.8638878416543551, "def solve_05c8c2d7(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = astuple(x1, ONE)\n    x8 = astuple(ONE, x2)\n    x9 = decrement(x1)\n    x10 = decrement(x2)\n    x11 = toivec(x10)\n    x12 = tojvec(x9)\n    x13 = crop(I, x11, x8)\n    x14 = crop(I, x12, x7)\n    x15 = asobject(x14)\n    x16 = asobject(x13)\n    x17 = vperiod(x15)\n    x18 = hperiod(x16)\n    x19 = astuple(x17, x18)\n    x20 = lbind(multiply, x19)\n    x21 = neighbors(ORIGIN)\n    x22 = mapply(neighbors, x21)\n    x23 = apply(x20, x22)\n    x24 = lbind(shift, x6)\n    x25 = mapply(x24, x23)\n    O = paint(I, x25)\n    return O"], [0.8638891638983809, "def solve_c9156682(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.863900032004738, "def solve_336ea098(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = center(x2)\n    x4 = dneighbors(x3)\n    x5 = insert(x3, x4)\n    O = fill(I, THREE, x5)\n    return O"], [0.8639170099334305, "def solve_6aa471db(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = normalize(x2)\n    x4 = lbind(matcher, first)\n    x5 = compose(x4, mostcolor)\n    x6 = fork(sfilter, identity, x5)\n    x7 = fork(difference, identity, x6)\n    x8 = lbind(rbind, upscale)\n    x9 = interval(ONE, FOUR, ONE)\n    x10 = apply(x8, x9)\n    x11 = initset(identity)\n    x12 = insert(vmirror, x11)\n    x13 = insert(hmirror, x12)\n    x14 = insert(cmirror, x13)\n    x15 = insert(dmirror, x14)\n    x16 = fork(compose, first, last)\n    x17 = lbind(occurrences, I)\n    x18 = lbind(lbind, shift)\n    x19 = compose(x17, x7)\n    x20 = product(x15, x10)\n    x21 = apply(x16, x20)\n    x22 = rapply(x21, x3)\n    x23 = fork(mapply, x18, x19)\n    x24 = mapply(x23, x22)\n    O = paint(I, x24)\n    return O"], [0.8639438916538609, "def solve_c689ab82(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_47aa2c22(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8639438916538609, "def solve_54fc2322(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8640253338383225, "def solve_600f8178(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_23783247(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_ed49d419(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_216d8721(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_759e05e9(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_47293928(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_48d8d3e1(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8641376097298877, "def solve_31ee8b3e(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.8641376097298877, "def solve_3c5b9738(I):\n    O = rot180(I)\n    return O"], [0.8641376097298877, "def solve_ab3067be(I):\n    x1 = mostcolor(I)\n    x2 = rot270(I)\n    x3 = matcher(identity, x1)\n    x4 = rbind(sfilter, x3)\n    x5 = compose(flip, x3)\n    x6 = rbind(sfilter, x5)\n    x7 = fork(combine, x4, x6)\n    x8 = apply(x7, x2)\n    O = rot90(x8)\n    return O"], [0.8641376097298877, "def solve_3c8b807a(I):\n    O = rot180(I)\n    return O"], [0.8641453134548085, "def solve_019b9742(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.8641453134548085, "def solve_ff0e6161(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.8641453134548085, "def solve_2276b0e0(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.8641474651177995, "def solve_97fae789(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.8642721744821437, "def solve_442fa580(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(shoot, RIGHT)\n    x4 = compose(x3, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(x1, DOWN_LEFT)\n    x9 = initset(x8)\n    x10 = mostcolor(I)\n    x11 = recolor(x10, x9)\n    x12 = objects(x7, T, F, T)\n    x13 = insert(x11, x12)\n    x14 = order(x13, uppermost)\n    x15 = first(x14)\n    x16 = remove(x11, x14)\n    x17 = remove(x15, x14)\n    x18 = compose(lrcorner, first)\n    x19 = compose(lrcorner, last)\n    x20 = fork(connect, x18, x19)\n    x21 = compose(color, first)\n    x22 = fork(recolor, x21, x20)\n    x23 = pair(x16, x17)\n    x24 = mapply(x22, x23)\n    O = underpaint(x7, x24)\n    return O"], [0.8643386284959661, "def solve_62ea7c08(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, last)\n    x5 = fork(recolor, first, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [0.8643497906816929, "def solve_56fff384(I):\n    x1 = fgpartition(I)\n    x2 = fork(recolor, color, backdrop)\n    x3 = mapply(x2, x1)\n    O = paint(I, x3)\n    return O"], [0.8654574970960377, "def solve_02df5367(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = rbind(multiply, THREE)\n    x6 = rbind(divide, THREE)\n    x7 = compose(x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = toindices(x4)\n    x10 = compose(x8, last)\n    x11 = sfilter(x9, x10)\n    O = fill(I, SIX, x11)\n    return O"], [0.8656237858337551, "def solve_f12bbe53(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.8659287967270011, "def solve_4d8b92d5(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = apply(toindices, x6)\n    x8 = rbind(shoot, RIGHT)\n    x9 = compose(x8, center)\n    x10 = fork(recolor, color, x9)\n    x11 = mapply(x10, x6)\n    x12 = paint(I, x11)\n    x13 = width(I)\n    x14 = interval(ZERO, x13, ONE)\n    x15 = apply(double, x14)\n    x16 = apply(increment, x15)\n    x17 = apply(tojvec, x16)\n    x18 = prapply(shift, x7, x17)\n    x19 = merge(x18)\n    O = fill(x12, FIVE, x19)\n    return O"], [0.8672110874210567, "def solve_cd0cd5f8(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.8672110874210567, "def solve_6a2490db(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.8672110874210567, "def solve_cb78fd2c(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.8672110874210567, "def solve_dc9272d7(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.8687415090376716, "def solve_30e5060f(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_521f7d01(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_ef2411e3(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_cf5f5894(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_bcd0445c(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_632d98f3(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_769dcfa4(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_58b88c45(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_050ee037(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_0159e6ca(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_657d180c(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.895840777338116, "def solve_079bcd9e(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, T, T, F)\n    x6 = colorfilter(x5, x4)\n    x7 = fork(add, leftmost, uppermost)\n    x8 = argmin(x6, x7)\n    x9 = argmax(x6, x7)\n    x10 = lbind(sfilter, x6)\n    x11 = rbind(compose, leftmost)\n    x12 = chain(size, x10, x11)\n    x13 = lbind(sfilter, x6)\n    x14 = rbind(compose, uppermost)\n    x15 = chain(size, x13, x14)\n    x16 = lbind(lbind, greater)\n    x17 = chain(x12, x16, leftmost)\n    x18 = lbind(rbind, greater)\n    x19 = chain(x12, x18, leftmost)\n    x20 = lbind(lbind, greater)\n    x21 = chain(x15, x20, uppermost)\n    x22 = lbind(rbind, greater)\n    x23 = chain(x15, x22, uppermost)\n    x24 = fork(equality, x17, x19)\n    x25 = fork(equality, x21, x23)\n    x26 = fork(both, x24, x25)\n    x27 = extract(x6, x26)\n    x28 = fill(I, ONE, x8)\n    x29 = fill(x28, THREE, x9)\n    O = fill(x29, TWO, x27)\n    return O"], [0.8966427298715387, "def solve_f1748008(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.8966427298715387, "def solve_24ebe47d(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.8966427298715387, "def solve_18c3e8d6(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.8966427298715387, "def solve_ea4f93e6(I):\n    x1 = shape(I)\n    x2 = add(x1, TWO)\n    x3 = canvas(ZERO, x2)\n    x4 = asobject(I)\n    x5 = shift(x4, UNITY)\n    x6 = paint(x3, x5)\n    x7 = asindices(x3)\n    x8 = fork(difference, box, corners)\n    x9 = x8(x7)\n    x10 = lbind(lbind, manhattan)\n    x11 = rbind(compose, initset)\n    x12 = chain(x11, x10, initset)\n    x13 = lbind(argmin, x5)\n    x14 = chain(first, x13, x12)\n    x15 = fork(astuple, x14, identity)\n    x16 = apply(x15, x9)\n    O = paint(x6, x16)\n    return O"], [1.0, "def solve_671fd68f(I):\n    x1 = ofcolor(I, EIGHT)\n    x2 = switch(I, THREE, FOUR)\n    x3 = rbind(greater, ONE)\n    x4 = compose(x3, numcolors)\n    x5 = sfilter(x1, x4)\n    x6 = remove(x5, x1)\n    x7 = lbind(colorcount, I)\n    x8 = argmax(x6, x7)\n    x9 = remove(x8, x6)\n    x10 = rbind(contained, x9)\n    x11 = compose(x10, first)\n    x12 = rbind(sfilter, x11)\n    x13 = lbind(rbind, subtract)\n    x14 = lbind(occurrences, I)\n    x15 = lbind(lbind, shift)\n    x16 = compose(x13, ulcorner)\n    x17 = chain(x16, x12, normalize)\n    x18 = chain(x14, x12, normalize)\n    x19 = fork(apply, x17, x18)\n    x20 = compose(x15, normalize)\n    x21 = fork(mapply, x20, x19)\n    x22 = astuple(cmirror, dmirror)\n    x23 = astuple(hmirror, vmirror)\n    x24 = combine(x22, x23)\n    x25 = product(x24, x24)\n    x26 = fork(compose, first, last)\n    x27 = apply(x26, x25)\n    x28 = totuple(x27)\n    x29 = combine(x24, x28)\n    x30 = lbind(rapply, x29)\n    x31 = mapply(x30, x5)\n    x32 = mapply(x21, x31)\n    x33 = paint(I, x32)\n    x34 = merge(x51)\n    O = cover(x33, x34)\n    return O"], [1.0, "def solve_1d6999d9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_58b998dc(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_918926cb(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = rbind(colorcount, ZERO)\n    x3 = chain(x2, double, dmirror)\n    x4 = x3(I)\n    x5 = x1(x4)\n    x6 = objects(x5, T, F, T)\n    x7 = argmax(x6, x5)\n    x8 = apply(color, x7)\n    x9 = fgpartition(x8)\n    x10 = insert(x9, x8)\n    x11 = width(x10)\n    x12 = astuple(x11, x5)\n    x13 = repeat(x12, x11)\n    x14 = combine(x13, x7)\n    x15 = merge(x14)\n    x16 = color(x15)\n    x17 = toindices(x15)\n    x18 = apply(24, x17)\n    x19 = lbind(shift, x15)\n    x20 = mapply(x19, x18)\n    x21 = paint(x5, x20)\n    O = x3(x21)\n    return O"], [1.0, "def solve_efb21fa5(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_b9957d2d(I):\n    x1 = SIX(I, TWO)\n    x2 = vmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = fork(add, first, last)\n    x8 = x7(x2)\n    x9 = toivec(x8)\n    x10 = lbind(shift, x6)\n    x11 = rbind(compose, initset)\n    x12 = chain(x11, x10, last)\n    x13 = lbind(mapply, x12)\n    x14 = rbind(ofcolor, x6)\n    x15 = compose(x13, x14)\n    x16 = fork(paint, identity, x15)\n    x17 = apply(x16, x5)\n    x18 = fork(connect, first, last)\n    x19 = mapply(x18, x17)\n    O = fill(x19, ZERO, x19)\n    return O"], [1.0, "def solve_32fe1c27(I):\n    x1 = fgpartition(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = extract(x1, x3)\n    x5 = normalize(x4)\n    x6 = toindices(x5)\n    x7 = compose(toindices, normalize)\n    x8 = matcher(x7, x6)\n    x9 = mfilter(x1, x8)\n    x10 = fill(I, x4, x9)\n    x11 = replace(x10, ZERO, EIGHT)\n    x12 = fill(x11, TWO, x6)\n    x13 = merge(x12)\n    x14 = dmirror(x13)\n    x15 = fill(x12, ONE, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = rbind(adjacent, x16)\n    x18 = lbind( sfilter, x17)\n    x19 = chain(merge, x18, color)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x2)\n    O = paint(x5, x21)\n    return O"], [1.0, "def solve_25c29c37(I):\n    x1 = width(I)\n    x2 = astuple(ONE, x1)\n    x3 = astuple(TWO, x1)\n    x4 = canvas(THREE, x3)\n    x5 = tojvec(x1)\n    x6 = height(I)\n    x7 = crop(I, x5, x6)\n    x8 = frontiers(x7)\n    x9 = sfilter(x8, hline)\n    x10 = size(x9)\n    x11 = increment(x10)\n    x12 = width(I)\n    x13 = subtract(x12, x11)\n    x14 = increment(x13)\n    x15 = double(x14)\n    x16 = decrement(x15)\n    x17 = lbind(astuple, x16)\n    x18 = lbind(DOWNscale, I)\n    x19 = compose(x17, x18)\n    x20 = decrement(x1)\n    x21 = lbind(multiply, x20)\n    x22 = toivec(x21)\n    x23 = tojvec(x5)\n    x24 = decrement(x23)\n    x25 = lbind(multiply, x24)\n    x26 = add(x22, x25)\n    x27 = vmirror(x6)\n    x28 = vmirror(x26)\n    x29 = compose(x27, x28)\n    x30 = argmin(x29, x27)\n    x31 = ofcolor(x30, EIGHT)\n    x32 = ofcolor(x30, TWO)\n    x33 = combine(x31, x32)\n    x34 = fill(x40, EIGHT, x33)\n    x35 = fill(x34, TWO, x29)\n    O = fill(x35, ONE, x33)\n    return O"], [1.0, "def solve_780d8233(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = merge(x1)\n    x5 = fill(I, NEG_ONE, x4)\n    x6 = shape(I)\n    x7 = canvas(NEG_ONE, x6)\n    x8 = hconcat(x5, x7)\n    x9 = objects(x8, F, F, T)\n    x10 = rbind(other, x3)\n    x11 = compose(x10, palette)\n    x12 = fork(astuple, x11, ulcorner)\n    x13 = apply(x12, x9)\n    x14 = merge(x9)\n    x15 = fill(I, x3, x14)\n    x16 = paint(x15, x13)\n    O = compress(x16)\n    return O"], [1.0, "def solve_4fe3ebd6(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_c4628a92(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_e9d98489(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_86239c66(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_44ed660a(I):\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = ONE(x3)\n    x5 = RIGHT(x4)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = leastcolor(x5)\n    x8 = rbind(shoot, x7)\n    x9 = mapply(x8, x6)\n    x10 = combine(x6, x9)\n    O = fill(I, x7, x10)\n    return O"], [1.0, "def solve_c0bb08a9(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_6779cc10(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_9be52087(I):\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = fart(x5)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = shoot(x7, UP_RIGHT)\n    x10 = combine(x8, x9)\n    x11 = combine(x8, x9)\n    x12 = paint(x3, x11)\n    O = x2(x12)\n    return O"], [1.0, "def solve_17614427(I):\n    x1 = palette(I)\n    x2 = other(x1, ZERO)\n    x3 = ofcolor(I, x2)\n    x4 = asobject(I)\n    x5 = vperiod(x4)\n    x6 = height(I)\n    x7 = halve(x6)\n    x8 = add(x6, x7)\n    x9 = width(I)\n    x10 = astuple(x8, x9)\n    x11 = canvas(ZERO, x10)\n    x12 = increment(x8)\n    x13 = interval(ZERO, x12, x5)\n    x14 = lbind(shift, x3)\n    x15 = apply(toivec, x13)\n    x16 = mapply(x14, x15)\n    O = fill(x11, TWO, x16)\n    return O"], [1.0, "def solve_3d70682b(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_f7b74577(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_18928639(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_3785e926(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_be72322f(I):\n    x1 =first(I)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(ONE, x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = objects(x6, T, F, F)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x5(x10)\n    return O"], [1.0, "def solve_675129ff(I):\n    x1 = lbind(other, I)\n    x2 = compose(x1, palette)\n    x3 = fork(recolor, x2, identity)\n    x4 = mapply(x3, I)\n    x5 = paint(I, x4)\n    O = objects(x5, T, F, T)\n    return O"], [1.0, "def solve_01b5ea66(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = power(double, TWO)\n    x4 = shape(x2)\n    x5 = interval(x4, FIVE, ONE)\n    x6 = lbind(multiply, x4)\n    x7 = apply(x6, x5)\n    x8 = lbind(interval, FIVE)\n    x9 = apply(x8, x5)\n    x10 = lbind(compose, x4)\n    x11 = apply(x10, x9)\n    x12 = lbind(lbind, shift)\n    x13 = dedupe(x7)\n    x14 = mapply(x12, x13)\n    O = paint(I, x14)\n    return O"], [1.0, "def solve_9a0dbf7a(I):\n    x1 = shape(I)\n    x2 = subgrid(x1, I)\n    x3 = mostcolor(I)\n    O = replace(x2, x3, ZERO)\n    return O"], [1.0, "def solve_80ea49cc(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = remove(x3, x2)\n    x5 = lbind(colorfilter, x4)\n    x6 = lbind(rbind, greater)\n    x7 = compose(x5, x6)\n    x8 = rbind(sfilter, x3)\n    x9 = compose(x8, toindices)\n    x10 = lbind(rbind, difference)\n    x11 = compose(x10, toindices)\n    x12 = rbind(compose, initset)\n    x13 = lbind(rbind, manhattan)\n    x14 = compose(x12, x13)\n    x15 = fork(sfilter, x11, x14)\n    x16 = compose(maximum, x15)\n    x17 = compose(minimum, x15)\n    x18 = vsplit(I, TWO)\n    x19 = cmirror(x18)\n    x20 = mostcolor(x19)\n    x21 = initset(x16)\n    x22 = rbind(rapply, x21)\n    x23 = compose(x22, initset)\n    x24 = chain(first, x17, x23)\n    x25 = compose(x20, x24)\n    x26 = fork(paint, x25, x20)\n    x27 = mapply(x26, x4)\n    x28 = merge(x27)\n    O = x27(x28)\n    return O"], [1.0, "def solve_22feee59(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = product(x6, x6)\n    x8 = compose(color, first)\n    x9 = compose(color, last)\n    x10 = fork(equality, x8, x9)\n    x11 = sfilter(x7, x10)\n    x12 = compose(leftmost, first)\n    x13 = compose(leftmost, last)\n    x14 = fork(equality, x12, x13)\n    x15 = compose(uppermost, first)\n    x16 = compose(uppermost, last)\n    x17 = fork(equality, x15, x16)\n    x18 = fork(either, x14, x17)\n    x19 = sfilter(x11, x18)\n    x20 = compose(color, first)\n    x21 = compose(center, first)\n    x22 = compose(center, last)\n    x23 = fork(connect, x21, x22)\n    x24 = fork(recolor, x20, x23)\n    x25 = height(I)\n    x26 = width(I)\n    x27 = matcher(last, ZERO)\n    x28 = decrement(x26)\n    x29 = matcher(last, x28)\n    x30 = fork(either, x27, x29)\n    x31 = compose(flip, x30)\n    x32 = sfilter(x15, x31)\n    x33 = paint(I, x32)\n    x34 = size(x1)\n    x35 = positive(x34)\n    x36 = branch(x35, x22, ZERO)\n    O = canvas(x36, UNITY)\n    return O"], [1.0, "def solve_6151131a(I):\n    x1 = dmirror(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [1.0, "def solve_bd8e1004(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = chain(cmirror, x7, x8)\n    x10 = x9(x8)\n    x11 = dedupe(x10)\n    x12 = dmirror(x11)\n    x13 = dedupe(x12)\n    x14 = dmirror(x13)\n    x15 = mostcolor(x14)\n    x16 = objects(x14, T, T, F)\n    x17 = colorfilter(x16, x15)\n    x18 = compose(normalize, toindices)\n    x19 = box(x18)\n    x20 = difference(x16, x19)\n    x21 = rbind(subgrid, x20)\n    x22 = chain(x21, initset, palette)\n    x23 = rbind(subgrid, x5)\n    x24 = chain(x23, x22, asobject)\n    x25 = lbind(subtract, x15)\n    x26 = compose(first, x25)\n    x27 = chain(x26, x24, x26)\n    x28 = fork(shift, x27, x23)\n    x29 = fork(connect, x28, urcorner)\n    x30 = fork(combine, x28, x29)\n    x31 = compose(x30, x27)\n    x32 = fork(shift, x27, x31)\n    x33 = fork(combine, x32, x31)\n    x34 = mapply(x33, x14)\n    x35 = fill(x5, x15, x34)\n    x36 = replace(x35, x15, x5)\n    O = downscale(x36, THREE)\n    return O"], [1.0, "def solve_4fb4dc53(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = objects(I, T, F, T)\n    x5 = totuple(x4)\n    x6 = apply(color, x5)\n    x7 = lbind(sfilter, x6)\n    x8 = lbind(matcher, identity)\n    x9 = chain(size, x7, x8)\n    x10 = valmax(x3, x9)\n    x11 = matcher(x9, x10)\n    x12 = sfilter(x3, x11)\n    x13 = lbind(colorcount, I)\n    x14 = argmin(x12, x13)\n    x15 = ofcolor(I, x14)\n    x16 = recolor(x14, x15)\n    x17 = apply(initset, x16)\n    x18 = remove(x16, x1)\n    x19 = lbind(argmin, x17)\n    x20 = lbind(rbind, manhattan)\n    x21 = compose(x19, x20)\n    x22 = fork(combine, identity, x21)\n    x23 = apply(x22, x18)\n    x24 = matcher(first, x14)\n    x25 = rbind(sfilter, x24)\n    x26 = chain(invert, ulcorner, x25)\n    x27 = fork(shift, identity, x26)\n    x28 = mapply(x27, x23)\n    x29 = normalize(x28)\n    x30 = shape(x29)\n    x31 = canvas(ZERO, x30)\n    O = paint(x31, x29)\n    return O"], [1.0, "def solve_3e4c3006(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = totuple(x3)\n    x5 = apply(color, x4)\n    x6 = lbind(sfilter, x5)\n    x7 = lbind(matcher, identity)\n    x8 = chain(size, x6, x7)\n    x9 = argmax(x6, x8)\n    x10 = repeat(x9, ONE)\n    O = paint(I, x10)\n    return O"], [1.0, "def solve_1159b49c(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_fead7be2(I):\n    x1 = palette(I)\n    x2 = remove(FIVE, x1)\n    x3 = first(x2)\n    x4 = ofcolor(I, x3)\n    x5 = ZERO(x4)\n    x6 = ofcolor(I, FIVE)\n    x7 = center(x6)\n    x8 = vfrontier(x7)\n    x9 = insert(x13, x8)\n    O = fill(I, ZERO, x9)\n    return O"], [1.0, "def solve_5d78ca1c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_82cda086(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_c6ffa7d5(I):\n    x1 = dmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_424fe7cf(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_d9a7ed46(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = partition(I)\n    x7 = fork(multiply, height, width)\n    x8 = fork(equality, size, x7)\n    x9 = sfilter(x6, x8)\n    x10 = argmax(x9, size)\n    x11 = difference(x5, x10)\n    x12 = apply(initset, x11)\n    x13 = rbind(hmatching, x10)\n    x14 = rbind(vmatching, x10)\n    x15 = fork(either, x13, x14)\n    x16 = sfilter(x12, x15)\n    x17 = rbind(gravitate, x10)\n    x18 = fork(add, center, x17)\n    x19 = fork(connect, center, x18)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x16)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_40139bdc(I):\n    x1 = lbind(fork, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = lbind(compose, flip)\n    x5 = lbind(matcher, first)\n    x6 = compose(x4, x5)\n    x7 = lbind(compose, flip)\n    x8 = compose(x7, x6)\n    x9 = lbind(fork, both)\n    x10 = fork(x9, x3, x8)\n    x11 = lbind(sfilter, x7)\n    x12 = chain(x11, size, x10)\n    x13 = argmax(x2, x12)\n    x14 = compress(x13)\n    x15 = flip(x14)\n    x16 = vmirror(x15)\n    x17 = asobject(x16)\n    x18 = height(x17)\n    x19 = increment(x18)\n    x20 = lbind(subtract, x19)\n    x21 = chain(toivec, x20, double)\n    x22 = fork(shift, identity, x21)\n    x23 = mapply(x22, x17)\n    O = paint(x16, x23)\n    return O"], [1.0, "def solve_3b902004(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_0d6a681a(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot90(I)\n    x4 = upscale(x3, FOUR)\n    x5 = rot270(I)\n    x6 = papply(matcher, first, x2)\n    x7 = sfilter(x4, x6)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [1.0, "def solve_57eb1844(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_8411cf1c(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    O = asobject(x1)\n    return O"], [1.0, "def solve_f37af8f1(I):\n    x1 = hmirror(I)\n    O = vconcat(x1, I)\n    return O"], [1.0, "def solve_294ee897(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_5aec8409(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = matcher(x13, ONE)\n    x15 = fork(both, x7, x14)\n    x16 = extract(x3, x15)\n    x17 = x16(x6)\n    x18 = height(x67)\n    x19 = subtract(x18, TWO)\n    x20 = height(x6)\n    x21 = subtract(x20, TWO)\n    x22 = width(x6)\n    x23 = subtract(x22, DOWN)\n    x24 = width(x6)\n    x25 = subtract(x23, x24)\n    x26 = astuple(x19, x25)\n    x27 = canvas(x1, x26)\n    x28 = astuple(x23, x27)\n    x29 = canvas(x1, x28)\n    x30 = rbind(multiply, x29)\n    x31 = apply(x30, x3)\n    x32 = rbind(shift, x36)\n    x33 = mapply(x32, x31)\n    O = paint(x27, x33)\n    return O"], [1.0, "def solve_2d496010(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = width(I)\n    x5 = astuple(TEN, FIVE)\n    x6 = canvas(x3, x5)\n    x7 = interval(ONE, SIX, ONE)\n    x8 = invert(TEN)\n    x9 = interval(x8, TEN, ONE)\n    x10 = product(x7, x9)\n    x11 = rbind(multiply, TWO)\n    x12 = apply(x11, x10)\n    x13 = apply(tojvec, x12)\n    x14 = prapply(shift, x4, x13)\n    x15 = lbind(shift, x4)\n    x16 = mapply(x15, x14)\n    O = fill(x6, x3, x16)\n    return O"], [1.0, "def solve_120669cc(I):\n    x1 = mostcolor(I)\n    x2 = matcher(first, x1)\n    x3 = compose(flip, x2)\n    x4 = width(I)\n    x5 = rbind(repeat, x4)\n    x6 = lbind(upscale, I)\n    x7 = compose(x5, x6)\n    x8 = order(x2, leftmost)\n    x9 = apply(leftmost, x8)\n    x10 = last(x8)\n    x11 = matcher(first, x10)\n    x12 = compose(flip, x11)\n    x13 = fork(both, x3, x12)\n    x14 = sfilter(x9, x13)\n    x15 = compose(color, first)\n    x16 = fork(recolor, x15, x14)\n    x17 = mapply(x16, x14)\n    O = paint(I, x17)\n    return O"], [1.0, "def solve_577faa35(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = apply(toindices, x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = intersection(x3, x2)\n    x8 = fill(x6, EIGHT, x7)\n    O = replace(x8, UNITY, ONE)\n    return O"], [1.0, "def solve_87696ca2(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = add(TWO, x5)\n    x7 = canvas(x4, x6)\n    x8 = asobject(I)\n    x9 = shift(x8, UNITY)\n    x10 = paint(x7, x9)\n    x11 = palette(x10)\n    x12 = remove(x4, x11)\n    x13 = lbind(ofcolor, x10)\n    x14 = fork(recolor, identity, x13)\n    x15 = apply(x14, x12)\n    x16 = fork(equality, toindices, backdrop)\n    x17 = extract(x15, x16)\n    x18 = other(x15, x17)\n    x19 = color(x18)\n    x20 = astuple(x19, RIGHT)\n    x21 = initset(ZERO_BY_TWO)\n    x22 = insert(ORIGIN, x21)\n    x23 = recolor(x4, x22)\n    x24 = insert(x20, x23)\n    x25 = dmirror(x24)\n    x26 = lbind(shift, x24)\n    x27 = occurrences(x10, x24)\n    x28 = mapply(x26, x27)\n    x29 = lbind(shift, x25)\n    x30 = occurrences(x10, x25)\n    x31 = mapply(x29, x30)\n    x32 = combine(x28, x31)\n    x33 = fill(x10, x4, x32)\n    x34 = ofcolor(x33, x19)\n    x35 = gravitate(x34, x17)\n    x36 = replace(x10, x19, x4)\n    x37 = shift(x34, x35)\n    x38 = fill(x36, x19, x37)\n    O = trim(x38)\n    return O"], [1.0, "def solve_2e820091(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = fork(equality, toindices, box)\n    x7 = sfilter(x2, x6)\n    x8 = fork(multiply, height, width)\n    x9 = argmin(x7, x8)\n    x10 = argmax(x7, x8)\n    x11 = center(x9)\n    x12 = center(x10)\n    x13 = subtract(x11, x12)\n    x14 = add(x13, x11)\n    x15 = rot90(x14)\n    x16 = recolor(x1, x15)\n    x17 = shift(x16, UNITY)\n    x18 = paint(I, x17)\n    x19 = objects(x18, T, F, T)\n    x20 = apply(ulcorner, x19)\n    x21 = rbind(subgrid, x18)\n    x22 = apply(x21, x20)\n    x23 = pair(x15, x22)\n    x24 = mapply(palette, x23)\n    O = sfilter(x24, x24)\n    return O"], [1.0, "def solve_1d4ab164(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_b5b44d30(I):\n    x1 = initset(ORIGIN)\n    x2 = box(x1)\n    x3 = recolor(ZERO, x1)\n    x4 = double(TEN)\n    x5 = multiply(x4, THREE)\n    x6 = interval(ZERO, x5, ONE)\n    x7 = lbind(multiply, x5)\n    x8 = apply(x7, x6)\n    x9 = lbind(shift, x2)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [1.0, "def solve_86c40380(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_9a905fbb(I):\n    x1 = objects(I, T, F, T)\n    x2 = ofcolor(I, ZERO)\n    x3 = sizefilter(x1, ONE)\n    x4 = rbind(adjacent, x2)\n    x5 = extract(x3, x4)\n    x6 = recolor(ZERO, x5)\n    O = paint(I, x6)\n    return O"], [1.0, "def solve_96c960ba(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x833 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, hmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [1.0, "def solve_785e38e6(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_8efe0034(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_1a144b46(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_8fd4361b(I):\n    x1 = trim(I)\n    x2 = objects(x1, T, F, F)\n    x3 = vperiod(x2)\n    x4 = shift(x2, x3)\n    x5 = lbind(shift, x4)\n    x6 = interval(ZERO, NINE, ONE)\n    x7 = apply(x5, x6)\n    x8 = mapply(x7, x3)\n    O = paint(x1, x8)\n    return O"], [1.0, "def solve_5d2b2e0c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_30ef08e8(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_f1047c04(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_504071c2(I):\n    x1 = vmirror(I)\n    x2 = fgpartition(x1)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = compose(double, halve)\n    x6 = fork(equality, identity, x5)\n    x7 = compose(x6, last)\n    x8 = sfilter(x4, x7)\n    x9 = fill(x1, FIVE, x8)\n    O = x9(x4)\n    return O"], [1.0, "def solve_4d7fa4ef(I):\n    x1 = dmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_a7207c65(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = objects(I, T, F, T)\n    x5 = totuple(x4)\n    x6 = apply(color, x5)\n    x7 = lbind(sfilter, x6)\n    x8 = lbind(matcher, identity)\n    x9 = chain(size, x7, x8)\n    x10 = valmax(x3, x9)\n    x11 = matcher(x9, x10)\n    x12 = sfilter(x3, x11)\n    x13 = lbind(colorcount, I)\n    x14 = argmin(x12, x13)\n    x15 = ofcolor(I, x14)\n    x16 = recolor(x14, x15)\n    x17 = apply(initset, x16)\n    x18 = remove(x16, x1)\n    x19 = lbind(argmin, x17)\n    x20 = lbind(rbind, manhattan)\n    x21 = compose(x19, x20)\n    x22 = fork(combine, identity, x21)\n    x23 = apply(x22, x18)\n    x24 = matcher(first, x14)\n    x25 = rbind(sfilter, x24)\n    x26 = chain(invert, ulcorner, x25)\n    x27 = fork(shift, identity, x26)\n    x28 = mapply(x27, x23)\n    x29 = normalize(x28)\n    x30 = shape(x29)\n    x31 = canvas(ZERO, x30)\n    O = paint(x31, x29)\n    return O"], [1.0, "def solve_16bc3ce5(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = palette(I)\n    x4 = lbind(shift, I)\n    x5 = compose(x4, frontiers)\n    x6 = mfilter(x3, x5)\n    x7 = palette(I)\n    x8 = lbind(colorcount, I)\n    x9 = argmin(x7, x8)\n    x10 = shape(I)\n    x11 = canvas(x9, x10)\n    x12 = paint(x11, I)\n    x13 = asobject(x1)\n    x14 = difference(x13, x2)\n    O = paint(x12, x14)\n    return O"], [1.0, "def solve_d1d188b0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_228677e4(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, F)\n    x3 = colorfilter(x2, x1)\n    x4 = compose(normalize, toindices)\n    x5 = difference(x2, x3)\n    x6 = rbind(bordering, I)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x3, x7)\n    x9 = rbind(toobject, I)\n    x10 = lbind(mapply, neighbors)\n    x11 = compose(x10, toindices)\n    x12 = fork(difference, x11, identity)\n    x13 = chain(mostcolor, x9, x12)\n    x14 = totuple(x8)\n    x15 = apply(x13, x14)\n    x16 = mostcommon(x15)\n    x17 = matcher(x13, x16)\n    x18 = sfilter(x8, x17)\n    x19 = lbind(argmax, x5)\n    x20 = lbind(matcher, x4)\n    x21 = chain(x19, x20, x4)\n    x22 = compose(color, x21)\n    x23 = fork(recolor, x22, identity)\n    x24 = mapply(x21, x18)\n    x25 = cover(I, x24)\n    x26 = mapply(x23, x18)\n    O = paint(x25, x26)\n    return O"], [1.0, "def solve_cba0e309(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, first)\n    x31 = fork(recolor, x30, last)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_d5dd8f8e(I):\n    x1 = ofcolor(I, TWO)\n    x2 = vline(x1)\n    x3 = branch(x2, dmirror, identity)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = width(x4)\n    x7 = interval(x5, x6, TWO)\n    x8 = apply(tojvec, x7)\n    x9 = portrait(x8)\n    x10 = branch(x9, identity, last)\n    x11 = x10(x4)\n    x12 = x11(x4)\n    x13 = ofcolor(x12, FIVE)\n    x14 = ofcolor(x12, EIGHT)\n    x15 = fill(x13, ZERO, x13)\n    x16 = fill(x15, FOUR, x14)\n    x17 = fill(x16, ONE, x15)\n    x18 = rot90(x17)\n    x19 = ofcolor(x18, FIVE)\n    x20 = shift(x19, UNITY)\n    O = fill(x20, EIGHT, x19)\n    return O"], [1.0, "def solve_7bcf3180(I):\n    x1 = asindices(I)\n    x2 = objects(I, T, F, T)\n    x3 = first(x2)\n    x4 = rbind(subgrid, I)\n    x5 = fork(equality, identity, rot90)\n    x6 = compose(x5, x4)\n    x7 = extract(x1, x6)\n    x8 = center(x7)\n    x9 = subgrid(x3, I)\n    x10 = hmirror(x9)\n    x11 = objects(x10, F, T, T)\n    x12 = first(x11)\n    x13 = objects(x10, T, T, T)\n    x14 = rbind(subgrid, x10)\n    x15 = compose(x5, x14)\n    x16 = extract(x13, x15)\n    x17 = center(x16)\n    x18 = subtract(x8, x17)\n    x19 = shift(x12, x18)\n    x20 = paint(I, x19)\n    x21 = objects(x20, F, T, T)\n    x22 = first(x21)\n    x23 = subgrid(x22, x20)\n    x24 = vmirror(x23)\n    x25 = objects(x24, F, T, T)\n    x26 = first(x25)\n    x27 = objects(x24, T, T, T)\n    x28 = color(x7)\n    x29 = matcher(color, x28)\n    x30 = extract(x27, x29)\n    x31 = center(x30)\n    x32 = subtract(x8, x31)\n    x33 = shift(x26, x32)\n    O = paint(x20, x33)\n    return O"], [1.0, "def solve_675edd0d(I):\n    x1 = palette(I)\n    x2 = other(x1, ZERO)\n    x3 = shape(I)\n    x4 = multiply(x3, x3)\n    x5 = canvas(ZERO, x4)\n    x6 = ofcolor(I, x2)\n    x7 = lbind(shift, x6)\n    x8 = shape(I)\n    x9 = rbind(multiply, x8)\n    x10 = apply(x9, x6)\n    x11 = mapply(x7, x10)\n    O = fill(x5, x2, x11)\n    return O"], [1.0, "def solve_e4b96337(I):\n    x1 = Fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [1.0, "def solve_6be5c6ba(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_17b810d6(I):\n    x1 = objects(I, T, F, T)\n    x2 = apply(toindices, x1)\n    x3 = lbind(matcher, contained)\n    x4 = compose(x3, last)\n    x5 = extract(x2, x4)\n    x6 = lbind(shift, x5)\n    x7 = compose(x6, ulcorner)\n    x8 = rbind(colorcount, TWO)\n    x9 = argmax(x1, x8)\n    x10 = rbind(contained, x9)\n    x11 = compose(x10, first)\n    x12 = sfilter(x6, x11)\n    x13 = merge(x12)\n    x14 = rbind(shoot, x13)\n    x15 = compose(x14, ulcorner)\n    x16 = fork(recolor, x15, outbox)\n    x17 = mapply(x16, x4)\n    O = paint(I, x17)\n    return O"], [1.0, "def solve_9a8312f7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_b838424d(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_7e611380(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_f5cb02df(I):\n    x1 = f25fb287\n    O = solveconcat(I, x1)\n    return O"], [1.0, "def solve_47358446(I):\n    x1 = rot180(I)\n    x2 = matcher(size, ONE)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, maximum, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_55446d1f(I):\n    x1 = objects(I, T, F, T)\n    x2 = vmirror(x1)\n    O = subgrid(x2, I)\n    return O"], [1.0, "def solve_87f6df0d(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_de673917(I):\n    x1 = ONEORIGIN(I)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(ONE, x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = objects(x6, T, F, F)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x5(x10)\n    return O"], [1.0, "def solve_46ea8a54(I):\n    x1 = paint(I, x2)\n    x2 = vmirror(x1)\n    x3 = equality(x2, I)\n    x4 = branch(x3, x2, x2)\n    O = canvas(x4, ONE)\n    return O"], [1.0, "def solve_19348811(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, identity, dmirror)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = lrcorner(x22)\n    x24 = shape(x23)\n    x25 = increment(x24)\n    x26 = lbind(multiply, x25)\n    x27 = shift(x3, x26)\n    x28 = apply(x27, x22)\n    x29 = lbind(shift, x15)\n    x30 = mapply(x29, x28)\n    O = paint(x6, x30)\n    return O"], [1.0, "def solve_370f9199(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_bd47713d(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, x30)\n    x33 = compose(x32, x31)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [1.0, "def solve_efddeaf4(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_7de9cc51(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    O = apply(initset, x3)\n    x1 = toindices(x3)\n    x2 = asindices(I)\n    x3 = corners(x2)\n    x4 = combine(x1, x2)\n    x5 = fill(I, NEG_ONE, x4)\n    x6 = fgpartition(x5)\n    x7 = merge(x6)\n    x8 = shift(x7, DOWN)\n    x9 = fill(x5, TWO, x8)\n    x10 = shift(x9, UP)\n    x11 = fill(x9, SIX, x10)\n    x12 = shift(x11, RIGHT)\n    x13 = fill(x9, SEVEN, x12)\n    x14 = shift(x11, LEFT)\n    x15 = fill(x13, EIGHT, x14)\n    x16 = shift(x11, UP)\n    x17 = fill(x15, SIX, x16)\n    x18 = shift(x11, DOWN)\n    x19 = fill(x17, EIGHT, x18)\n    x20 = shift(x11, RIGHT)\n    x21 = fill(x19, SEVEN, x20)\n    x22 = shift(x11, LEFT)\n    x23 = fill(x21, EIGHT, x22)\n    x24 = shift(x11, UP)\n    x25 = fill(x23, UNITY, x24)\n    x26 = shift(x11, DOWN)\n    x27 = fill(x25, SIX, x26)\n    x28 = shift(x11, LEFT)\n    x29 = fill(x27, EIGHT, x28)\n    O = paint(x29, x3)\n    return O"], [1.0, "def solve_3b2c71d9(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_580effe7(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_9eb76302(I):\n    O = matcher(identity, ZERO)\n    return O"], [1.0, "def solve_67fe85de(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_28bcb307(I):\n    x1 = objects(I, T, F, T)\n    x2 = lbind(sizefilter, x1)\n    x3 = compose(merge, x2)\n    x4 = x3(I)\n    x5 = halve(x4)\n    x6 = x3(I)\n    x7 = hconcat(x5, x6)\n    x8 = vconcat(x7, x7)\n    x9 = objects(x8, T, F, T)\n    x10 = rbind(shoot, UNITY)\n    x11 = compose(x10, center)\n    x12 = fork(recolor, color, x11)\n    x13 = mapply(x12, x9)\n    x14 = paint(x8, x13)\n    O = hmirror(x14)\n    return O"], [1.0, "def solve_5fe8cd60(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_820a067a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = subtract(Nivec, x14)\n    x16 = lbind(shift, x10)\n    x17 = shift(x15, x16)\n    x18 = fork(combine, vfrontier, hfrontier)\n    x19 = mapply(x18, x17)\n    O = paint(I, x19)\n    return O"], [1.0, "def solve_9f1233bf(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_97b654f1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_cc9add26(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_1f263e3e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_5d96ebe9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_25723d44(I):\n    x1 = double(TEN)\n    x2 = interval(ZERO, x1, ONE)\n    x3 = apply(double, x2)\n    x4 = apply(increment, x3)\n    x5 = apply(tojvec, x4)\n    x6 = prapply(shift, x5, x4)\n    x7 = merge(x6)\n    O = fill(I, FOUR, x7)\n    return O"], [1.0, "def solve_e61ef8f3(I):\n    x1 = shoot(ORIGIN, UNITY)\n    x2 = shoot(x2, DOWN_LEFT)\n    x3 = fork(combine, hfrontier, vfrontier)\n    x4 = mapply(x3, x1)\n    x5 = fill(I, ZERO, x4)\n    O = replace(x5, ONE, TWO)\n    return O"], [1.0, "def solve_d14931da(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = partition(I)\n    x7 = fork(multiply, height, width)\n    x8 = fork(equality, size, x7)\n    x9 = sfilter(x6, x8)\n    x10 = argmax(x9, size)\n    x11 = difference(x5, x10)\n    x12 = apply(initset, x11)\n    x13 = rbind(hmatching, x10)\n    x14 = rbind(vmatching, x10)\n    x15 = fork(either, x13, x14)\n    x16 = sfilter(x12, x15)\n    x17 = rbind(gravitate, x10)\n    x18 = fork(add, center, x17)\n    x19 = fork(connect, center, x18)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x16)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_7d082c2b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_4e0bec6c(I):\n    x1 = ofcolor(I, TWO)\n    x2 = vline(x1)\n    O = branch(x2, dmirror, identity)\n    return O"], [1.0, "def solve_a0134bd8(I):\n    x1 = switch(I, EIGHT, TWO)\n    x2 = switch(x1, TWO, THREE)\n    x3 = switch(x2, EIGHT, ONE)\n    x4 = neighbors(ORIGIN)\n    x5 = mapply(neighbors, x4)\n    x6 = lbind(shift, x3)\n    x7 = apply(x6, x5)\n    x8 = merge(x7)\n    O = paint(I, x8)\n    return O"], [1.0, "def solve_92252c34(I):\n    x1 =9284448403\n    x2 = hmirror(I)\n    O = vconcat(x1, x2)\n    return O"], [1.0, "def solve_4229a6e9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_07a42553(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, last)\n    O = x4(I)\n    return O"], [1.0, "def solve_b4ef1643(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = ofcolor(I, x1)\n    x4 = backdrop(x3)\n    x5 = toobject(x4, I)\n    x6 = matcher(first, x1)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x2, x7)\n    x9 = totuple(x8)\n    x10 = apply(color, x9)\n    x11 = leastcommon(x10)\n    x12 = ofcolor(I, x1)\n    x13 = initset(x12)\n    x14 = position(x13, x4)\n    x15 = width(I)\n    x16 = ulcorner(x12)\n    x17 = lrcorner(x12)\n    x18 = shape(I)\n    x19 = maximum(x18)\n    x20 = interval(ZERO, x19, ONE)\n    x21 = lbind(multiply, x5)\n    x22 = apply(x21, x20)\n    x23 = pair(x26, x22)\n    x24 = mapply(box, x23)\n    O = fill(I, x3, x24)\n    return O"], [1.0, "def solve_e2c0046c(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_8054f488(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_3f068a11(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_273ed211(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_ed598c2d(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = argmin(x2, size)\n    x4 = shoot(x3, UP_RIGHT)\n    x5 = argmax(x2, size)\n    x6 = shoot(x5, DOWN_LEFT)\n    x7 = shoot(x4, UNITY)\n    x8 = combine(x4, x6)\n    x9 = combine(x7, x8)\n    x10 = fill(I, x1, x9)\n    x11 = replace(x10, x1, EIGHT)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = divide(x12, x13)\n    x15 = width(x11)\n    x16 = interval(ZERO, x15, ONE)\n    x17 = interval(ZERO, x13, ZERO)\n    x18 = product(x16, x17)\n    x19 = rbind(multiply, x14)\n    x20 = apply(x19, x18)\n    x21 = rbind(multiply, x14)\n    x22 = apply(x21, x15)\n    x23 = combine(x20, x22)\n    x24 = lbind(shift, x11)\n    x25 = mapply(x24, x23)\n    O = fill(x10, FOUR, x25)\n    return O"], [1.0, "def solve_fbbe925c(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [1.0, "def solve_5ebb7610(I):\n    x1 = initset(ORIGIN)\n    x2 = index(I, x1)\n    x3 = lrcorner(x1)\n    x4 = add(x3, UNITY)\n    x5 = initset(x4)\n    x6 = astuple(x1, x5)\n    x7 = rbind(shoot, UP)\n    x8 = add(x6, DOWN)\n    x9 = interval(ZERO, x5, ONE)\n    x10 = apply(x7, x9)\n    x11 = apply(x8, x10)\n    x12 = papply(shoot, x11, x7)\n    x13 = add(x3, UNITY)\n    x14 = initset(x13)\n    x15 = astuple(x42, x12)\n    x16 = shift(x12, x15)\n    x17 = difference(x7, x16)\n    x18 = rapply(recolor, x17)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_0870f33a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_9b4feb6f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, W, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_24c0baa0(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_1922fa36(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_05d0a3d8(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_66fe244a(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_bef843e1(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = lbind(507, x2)\n    x4 = rbind(ofcolor, x1)\n    x5 = compose(x3, x4)\n    x6 = x5(I)\n    x7 = leastcolor(x6)\n    x8 = ofcolor(I, x7)\n    x9 = lbind(greater, SEVEN)\n    x10 = compose(x9, x5)\n    x11 = sfilter(x8, x10)\n    x12 = mapply(neighbors, x11)\n    O = fill(I, x1, x12)\n    return O"], [1.0, "def solve_94f8d4be(I):\n    x1 = astuple(vsplit, hsplit)\n    x2 = rbind(rbind, TWO)\n    x3 = rbind(rapply, I)\n    x4 = initset(x2)\n    x5 = lbind(rapply, x4)\n    x6 = chain(first, x3, x5)\n    x7 = lbind(apply, numcolors)\n    x8 = compose(x7, x6)\n    x9 = matcher(x8, TWO_BY_TWO)\n    x10 = extract(x1, x9)\n    x11 = x10(I, TWO)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = palette(x12)\n    x15 = palette(x13)\n    x16 = intersection(x14, x15)\n    x17 = first(x16)\n    x18 = shape(x12)\n    x19 = canvas(x17, x18)\n    x20 = ofcolor(x12, x17)\n    x21 = ofcolor(x13, x17)\n    x22 = intersection(x20, x21)\n    O = fill(x19, TWO, x22)\n    return O"], [1.0, "def solve_5c19df38(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_c7e78cf6(I):\n    x1 = ofcolor(I, TWO)\n    x2 = shape(I)\n    x3 = multiply(x2, x2)\n    x4 = canvas(ZERO, x3)\n    x5 = rbind(multiply, x2)\n    x6 = apply(x5, x4)\n    x7 = asobject(I)\n    x8 = lbind(shift, x7)\n    x9 = mapply(x8, x6)\n    O = paint(x4, x9)\n    return O"], [1.0, "def solve_f789e6fe(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = lbind(colorcount, I)\n    x5 = argmin(x3, x4)\n    x6 = ofcolor(I, x1)\n    x7 = ofcolor(I, x5)\n    x8 = combine(x6, x7)\n    x9 = mapply(neighbors, x8)\n    x10 = difference(x9, x8)\n    x11 = toobject(x10, I)\n    x12 = leastcolor(x11)\n    x13 = ofcolor(I, x1)\n    x14 = first(x13)\n    x15 = initset(x14)\n    x16 = objects(I, T, F, F)\n    x17 = colorfilter(x16, x12)\n    x18 = lbind(adjacent, x8)\n    x19 = mfilter(x17, x18)\n    x20 = toindices(x19)\n    x21 = rbind(contained, x20)\n    x22 = compose(x21,t)\n    x23 = sfilter(x19, x22)\n    x24 = fill(I, x5, x20)\n    O = fill(x24, x1, x23)\n    return O"], [1.0, "def solve_5a5e96fe(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_7fa82c53(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_46f5ad1e(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_3e83b9ea(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(normalize, x5)\n    x7 = chain(cmirror, x6, dmirror)\n    x8 = rbind(sfilter, x6)\n    x9 = compose(x8, x7)\n    x10 = lbind(chain, x4)\n    x11 = rbind(x10, x9)\n    x12 = lbind(compose, x1)\n    x13 = chain(x11, x12, x7)\n    x14 = lbind(lbind, shift)\n    x15 = chain(x14, x13, x7)\n    x16 = fork(mapply, x15, x13)\n    x17 = fork(mapply, x16, x7)\n    x18 = x17(x1)\n    x19 = replace(I, SIX, x18)\n    O = downscale(x19, TWO)\n    return O"], [1.0, "def solve_ca699e89(I):\n    x1 = asobject(I)\n    x2 = lbind(shift, x1)\n    x3 = compose(x2, decrement)\n    x4 = fork(recolor, color, x3)\n    x5 = mapply(x4, x1)\n    O = paint(I, x5)\n    return O"], [1.0, "def solve_32c4062a(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_e06f2d09(I):\n    x1 = fgpartition(I)\n    x2 = sizefilter(x1, FOUR)\n    x3 = apply(toindices, x2)\n    x4 = compose( normalize, toindices)\n    x5 = x4(x2)\n    x6 = lbind(shift, x5)\n    x7 = compose(x6, shape)\n    x8 = halve(x2)\n    x9 = rbind(multiply, x8)\n    x10 = chain(x9, halve, shape)\n    x11 = fork(equality, identity, x7)\n    x12 = sfilter(x3, x11)\n    x13 = lbind(intersection, x5)\n    x14 = compose(x13, size)\n    x15 = chain(size, x13, x14)\n    x16 = argmax(x12, x15)\n    x17 = difference(x5, x16)\n    O = fill(I, THREE, x17)\n    return O"], [1.0, "def solve_56f14ba4(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_4db4e1e0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofmass(x14)\n    x25 = difference(x23, x24)\n    x26 = objects(x25, F, F, T)\n    x27 = compose(hfrontier, center)\n    x28 = fork(recolor, color, x27)\n    x29 = mapply(x28, x26)\n    x30 = merge(x26)\n    x31 = paint(x15, x30)\n    O = paint(x31, x29)\n    return O"], [1.0, "def solve_e7328fd6(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(greater, THREE)\n    x6 = compose(x5, first)\n    x7 = sfilter(x4, x6)\n    x8 = merge(x7)\n    x9 = rot90(x8)\n    x10 = shape(x9)\n    x11 = canvas(x3, x10)\n    x12 = hconcat(x9, x11)\n    x13 = hmirror(x12)\n    O = vconcat(x12, x13)\n    return O"], [1.0, "def solve_3d6cfd6e(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_62cc0fad(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_3c6e85f7(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_5876ff10(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_b687023e(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_26435a52(I):\n    x1 = initset(ORIGIN)\n    x2 = insert(7770, x1)\n    x3 = merge(x2)\n    x4 = cover(I, x3)\n    x5 = chain(dmirror, dmirror, merge)\n    x6 = x5(x4)\n    x7 = lbind(remove, FOUR)\n    x8 = chain(x7, toindices, x5)\n    x9 = compose(x8, x6)\n    x10 = fork(3634436, x9,363)\n    x11 = compose(x5, x10)\n    x12 = ofcolor(x4, FIVE)\n    x13 = ZERO(x12)\n    x14 = ofcolor(x4, TWO)\n    x15 = ZERO(x14)\n    x16 = matcher(first, ZERO)\n    x17 = rbind(sfilter, x16)\n    x18 = lbind(compose, x17)\n    x19 = lbind(rbind, contained)\n    x20 = chain(x18, x19, last)\n    x21 = rbind(compose, x20)\n    x22 = lbind(rbind, sfilter)\n    x23 = compose(x21, x22)\n    x24 = chain(x19, x23, first)\n    x25 = rbind(compose, initset)\n    x26 = x25(x4)\n    x27 = x25(x26)\n    x28 = compose(x25, x27)\n    x29 = fork(mapply, x26, x28)\n    x30 = fork(recolor, first, x29)\n    x31 = mapply(x30, x6)\n    x32 = papply(connect, x31, x24)\n    x33 = difference(x31, x32)\n    x34 = toobject(x33, x4)\n    O = paint(x4, x34)\n    return O"], [1.0, "def solve_89c49298(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = height(x2)\n    x4 = width(x2)\n    x5 = neighbors(ORIGIN)\n    x6 = toindices(x2)\n    x7 = lbind(shift, x6)\n    x8 = height(I)\n    x9 = divide(x8, x3)\n    x10 = width(I)\n    x11 = divide(x10, x4)\n    x12 = astuple(x9, x11)\n    x13 = maximum(x12)\n    x14 = increment(x13)\n    x15 = interval(ONE, x14, ONE)\n    x16 = astuple(x3, x4)\n    x17 = lbind(multiply, x16)\n    x18 = compose(crement, x17)\n    x19 = lbind(mapply, x7)\n    x20 = rbind(apply, x15)\n    x21 = lbind(rbind, multiply)\n    x22 = compose(x21, x18)\n    x23 = chain(x19, x20, x22)\n    x24 = rbind(toobject, I)\n    x25 = compose(x7, x18)\n    x26 = chain(palette, x24, x25)\n    x27 = mostcolor(I)\n    x28 = rbind(equality, x27)\n    x29 = rbind(argmin, x28)\n    x30 = compose(x29, x26)\n    x31 = fork(recolor, x30, x23)\n    x32 = mapply(x31, x5)\n    O = paint(I, x32)\n    return O"], [1.0, "def solve_e202aed0(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.1, "def solve_28321aa3(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = asindices(I)\n    x5 = apply(first, x4)\n    x6 = difference(x5, x3)\n    x7 = ofcolor(I, x1)\n    x8 = rbind(interval, ONE)\n    x9 = lbind(rbind, contained)\n    x10 = lbind(sfilter, x6)\n    x11 = rbind(matcher, ZERO)\n    x12 = chain(size, x10, x9)\n    x13 = lbind(sfilter, x7)\n    x14 = lbind(compose, x12)\n    x15 = chain(x13, x11, x14)\n    x16 = lbind(fork, x8)\n    x17 = compose(increment, minimum)\n    x18 = lbind(lbind, astuple)\n    x19 = lbind(chain, x17)\n    x20 = rbind(x19, first)\n    x21 = chain(x20, x18, first)\n    x22 = lbind(chain, maximum)\n    x23 = rbind(x22, first)\n    x24 = chain(x23, x18, first)\n    x25 = fork(x16, x21, x24)\n    x26 = compose(x15, x25)\n    x27 = apply(toivec, x3)\n    x28 = apply(x26, x27)\n    x29 = argmax(x28, width)\n    x30 = remove(x29, x28)\n    x31 = ulcorner(x29)\n    x32 = invert(x31)\n    x33 = shift(x29, x32)\n    x34 = asindices(I)\n    x35 = center(x34)\n    x36 = invert(x35)\n    x37 = shift(x34, x36)\n    x38 = width(I)\n    x39 = asobject(I)\n    x40 = lbind(shift, x39)\n    "], [1.1, "def solve_3f143bae(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(color, TWO)\n    x9 = rbind(colorcount, x3)\n    x10 = compose(x9, palette)\n    x11 = argmin(x7, x10)\n    x12 = other(x7, x11)\n    x13 = remove(x11, x7)\n    x14 = normalize(x13)\n    x15 = last(x14)\n    x16 =495(x15)\n    x17 = color(x11)\n    x18 = remove(x16, x15)\n    x19 = repeat(x17, ONE)\n    x20 = combine(x18, x19)\n    x21 = fgpartition(x20)\n    x22 = argmax(x21, lowermost)\n    x23 = add(x22, UP)\n    x24 = initset(x23)\n    x25 = insert(x22, x24)\n    x26 = lbind(intersection, x25)\n    x27 = compose(x26, last)\n    x28 = fork(recolor, first, x27)\n    x29 = normalize(x25)\n    x30 = objects(x6, T, F, T)\n    x31 = apply(toindices, x30)\n    x32 = lbind(shift, x29)\n    x33 = mapply(x32, x31)\n    x34 = paint(x20, x33)\n    x35 = rot90(x34)\n    x36 = paint(x35, x4)\n    x37 = rot90(x36)\n    x38 = paint(x37, x4)\n    x39 = rot90(x38)\n    x40 = paint(x39, x4)\n    x41 = rot90(x40)\n    x42 = paint("], [1.1, "def solve_f01b5c3d(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = hmirror(x4)\n    x41 = lrcorner(x4)\n"], [1.1, "def solve_7a16d774(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_14e52772(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_5d426466(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = neighbors(x6)\n    x15 = increment(x4)\n    x16 = insert(x15, x14)\n    x17 = initset(x16)\n    x18 =insert(x33, x17)\n    x19 = height(x12)\n    x20 = increment(x4)\n    x21 = insert(x19, x20)\n    x22 = width(x12)\n    x23 = increment(x4)\n    x24 = interval(ZERO, x23, ONE)\n    x25 = lbind(toobject, x12)\n    x26 = increment(x22)\n    x27 = increment(x25)\n    x28 = add(x26, x27)\n    x29 = lbind(toobject, x13)\n    x30 = increment(x24)\n    x31 = increment(x25)\n    x32 = astuple(ZERO, x30)\n    x33 = astuple(ZERO, x31)\n    x34 = add(x32, x33)\n    x35 = lbind(recolor, x3)\n    x36 =decrement(x34)\n    x37 = lbind(ofcolor, x12)\n    x38 = crop(x12, x36, x37)\n    x39 = compose(x35, x38)\n    x40 = power(x39, THREE)\n    x41 = x40(x32)\n    x42 = papply(recolor, x41, x38)\n    O"], [1.1, "def solve_39f3fad4(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, FOUR)\n    x6 = compose(fdg54444(I)\n    x7 = chain(x4, x5, x6)\n    x8 = rbind(repeat, ONE)\n    x9 = compose(x8, x7)\n    x10 = rbind(compose, x4)\n    x11 = lbind(rbind, NEG_ONE)\n    x12 = compose(x11, x10)\n    x13 = chain(x9, x12, x7)\n    x14 = chain(x11, x10, x13)\n    x15 = lbind(lbind, x4)\n    x16 = compose(x15, x14)\n    x17 = fork(compose, x7, x16)\n    x18 = fork(combine, x17, x1111)\n    x19 = lbind(rbind, rot90)\n    x20 = chain(x19, x19, x7)\n    x21 = double(EIGHT)\n    x22 = interval(TWO, x21, ONE)\n    x23 = lbind(x20, x174)\n    x24 = chain(x23, x21, x20)\n    x25 = lbind(lbind, rot270)\n    x26 = chain(x25, rbind, x24)\n    x27 = fork(compose, x28, x26)\n    x28 = lbind(rbind, rot90)\n    x29 = chain(x28, x27, x29)\n    x30 = lbind(lbind, rot270)\n    x31 = chain(x30, rbind, x29)\n    x32 = lbind(lbind, invert)\n    x33 = chain(x32, x31, x18)\n    x34 = fork(compose, x29, x28)\n    x35 = fork(compose, x30, x33)\n    x"], [1.1, "def solve_ad891ae2(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_592eccd8(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = width(x4)\n    x6 = toivec(x5)\n    x7 = index(x4, x6)\n    x8 = shape(x4)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x4, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, rot90)\n    x16 = lbind(power, rot270)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x13)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x19)\n    x24 = uppermost(x12)\n    x25 = lbind(add, x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = lbind(multiply, x27)\n    x29 = chain(toivec, x25, x28)\n    x30 = fork(shift, x23, x29)\n    x31 = compose(asobject, x22)\n    x32 = uppermost(x12)\n    x33 = lbind(subtract, x32)\n    x34 = height(x12)\n    x35 = increment(x34)\n    x36 = lbind(multiply, x35)\n    x37 = chain(toivec, x33, x36)\n    x38 = fork(shift, x31, x37)\n    x39 = fork(combine"], [1.1, "def solve_1e58757b(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    x3 = add(TWO, x2)\n    x4 = canvas(x1, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = paint(x4, x6)\n    x8 = double(SIX)\n    x9 = astuple(ONE, x8)\n    x10 = connect(UNITY, x9)\n    x11 = outbox(x10)\n    x12 = backdrop(x11)\n    x13 = recolor(x1, x12)\n    x14 = recolor(THREE, x10)\n    x15 = lbind(shift, x14)\n    x16 = lbind(mapply, x15)\n    x17 = rbind(occurrences, x13)\n    x18 = compose(x16, x17)\n    x19 = fork(paint, identity, x18)\n    x20 = x19(x7)\n    x21 = ofcolor(x20, THREE)\n    x22 = dmirror(x7)\n    x23 = x19(x22)\n    x24 = dmirror(x23)\n    x25 = ofcolor(x24, THREE)\n    x26 = combine(x21, x25)\n    x27 = fill(x7, THREE, x26)\n    x28 = astuple(TWO, ONE)\n    x29 = dneighbors(UNITY)\n    x30 = remove(x28, x29)\n    x31 = recolor(x1, x30)\n    x32 = initset(UNITY)\n    x33 = recolor(THREE, x32)\n    x34 = combine(x31, x33)\n    x35 = recolor(x1, x34)\n    x36 = astuple(ONE, THREE)\n    x37 = initset(x36)\n    x38 = insert(ZERO_BY_TWO, x37)\n    x39 = insert(RIGHT, x38)\n    x40 = insert(DOWN, x39)\n    x41 ="], [1.1, "def solve_34114419(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(toindices, x3)\n    x5 = partition(I)\n    x6 = fork(equality, identity, corners)\n    x7 = difference(x5, x4)\n    x8 = extract(x7, x6)\n    x9 = leastcolor(x8)\n    x10 = matcher(dmirror, x8)\n    x11 = extract(x10, x6)\n    x12 = lbind(compose, flip)\n    x13 = rbind(matcher, x12)\n    x14 = compose(x13, identity)\n    x15 = lbind(fork, sfilter)\n    x16 = lbind(x15, identity)\n    x17 = lbind(lbind, extract)\n    x18 = compose(x16, x17)\n    x19 = lbind(ofcolor, I)\n    x20 = compose(x19, mostcolor)\n    x21 = fork(apply, x18, x20)\n    x22 = compose(x12, x21)\n    x23 = fork(hmirror, x22, identity)\n    x24 = compatible(x8, x11)\n    x25 = contained(x24, x11)\n    x26 =356(x25, UNITY)\n    x27 = canvas(x9, x26)\n    x28 = asobject(x27)\n    x29 = paint(x27, x28)\n    x30 = height(x28)\n    x31 = width(x28)\n    x32 = divide(x30, x31)\n    x33 = increment(x32)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = compose(double, halve)\n    x36 = lbind(apply, last)\n    x37 = lbind(sfilter, x34)\n    x38 = chain(x37, x35, x36)\n    x39 = lbind(shift, x28)\n    x40 = compose(x39, toivec"], [1.1, "def solve_62730e66(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = compose(x5, color)\n    x7 = compose(double, x4)\n    x8 = lbind(prapply, manhattan)\n    x9 = fork(x8, identity, x7)\n    x10 = lbind(remove, ZERO)\n    x11 = compose(x10, x9)\n    x12 = rbind(branch, NEG_TWO)\n    x13 = fork(x12, positive, x11)\n    x14 = chain(x13, minimum, x11)\n    x15 = fork(add, x14, x7)\n    x16 = chain(x5, x13, x15)\n    x17 = compose(initset, x16)\n    x18 = fork(rapply, x17, x14)\n    x19 = compose(first, x18)\n    x20 = compose(x5, x19)\n    x21 = extract(x2, x20)\n    x22 = first(x21)\n    x23 = last(x21)\n    x24 = divide(x6, x23)\n    x25 = increment(x24)\n    x26 = width(I)\n    x27 = interval(ZERO, x26, x25)\n    x28 = apply(tojvec, x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x27)\n    x31 = fill(I, FIVE, x30)\n    x32 = objects(x31, T, F, T)\n    x33 = colorfilter(x32, FIVE)\n    x34 = apply(first, x33)\n    x35 = valmax(x34, size)\n    x36 = x35(x34)\n    x37 = equality(x36, ONE)\n    x38 = branch(x37, x35, x34)\n    x39"], [1.1, "def solve_c04cbcc9(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =407960873df22(x1, x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(x5, I)\n    x7 = fill(x6, NEG_ONE, x2)\n    x8 = objects(x7, F, F, T)\n    x9 = lbind(contained, FOUR)\n    x10 = compose(x9, palette)\n    x11 = extract(x8, x10)\n    x12 = lbind(sfilter, x8)\n    x13 = compose(size, x12)\n    x14 = rbind(compose, palette)\n    x15 = lbind(lbind, contained)\n    x16 = chain(x13, x14, x15)\n    x17 = merge(x8)\n    x18 = palette(I)\n    x19 = remove(x8, x18)\n    x20 = lbind(colorcount, x17)\n    x21 = argmin(x19, x20)\n    x22 = rbind(colorcount, x21)\n    x23 = rbind(toobject, I)\n    x24 = chain(x22, x23, x28)\n    x25 = colorfilter(x1, x24)\n    x26 = sfilter(x25, x28)\n    x27 = difference(x25, x26)\n    x28 = objects(x27, T, T, T)\n    x29 = rbind(colorcount, x21)\n    x30 = argmax(x29, x28)\n    x31 = subgrid(x30, x27)\n    x32 = rbind(order, identity)\n    x33 = apply(x32, x31)\n    x34 = vmirror(x31)\n    x35 = x36(x34)\n    x36 = x33(x35)\n    x37 = hconcat(x35, x36)\n    x38 = objects(x37, T, T, T)\n    x39 = apply"], [1.1, "def solve_cd4b13d1(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = astuple(d13, c)\n    x9 = astuple(x10, x7)\n    x10 = hline(x8)\n    x11 = ulcorner(x8)\n    x12 = shoot(x11, UNITY)\n    x13 =7220(x12)\n    x14 = mapply(first, x12)\n    x15 =18722224(x14)\n    x16 = center(x15)\n    x17 = matcher(first, x7)\n    x18 = sfilter(x1, x17)\n    x19 = lbind(adjacent, x8)\n    x20 = mfilter(x18, x19)\n    x21 = toindices(x20)\n    x22 = NEG_UNITY(x21)\n    x23 = uppermost(x20)\n    x24 = shoot(x23, UNITY)\n    x25 = size(x24)\n    x26 = increment(x25)\n    x27 = matcher(first, x8)\n    x28 = compose(flip, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = lbind(recolor, x3)\n    x31 = compose(x30, mostcolor)\n    x32 = fork(combine, x29, x31)\n    x33 = lbind(lbind, shift)\n    x34 = lbind(occurrences, I)\n    x35 = compose(x33, x34)\n    x36 = lbind(mapply, x35)\n    x37 = chain(x36, x33, x28)\n    x38 = fork(mapply, x24, x17)\n    x39 = fork(mapply, x28, xcolor)\n    x40 = fork(combine, x38, x39)"], [1.1, "def solve_efe3bb69(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = lbind(index, I)\n    x2 = compose(x1, size)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(775, x5)\n    x5 = astuple(cmirror, x3)\n    x6 = combine(x4, x5)\n    x7 = fork(vsplit, identity, height)\n    x8 = chain(asobject, first, x7)\n    x9 = mostcolor(I)\n    x10 = matcher(x8, x9)\n    x11 = compose(flip, x10)\n    x12 =1111(I)\n    x13 = rbind(f25fb575, x12)\n    x14 = rbind(sfilter, x11)\n    x15 = compose(x14, dneighbors)\n    x16 = chain(x13, x15, toindices)\n    x17 = fork(mapply, x16, identity)\n    x18 = compose(x12, x17)\n    x19 = fork(intersection, x18, toindices)\n    x20 = compose(size, x19)\n    x21 = matcher(x20, ZERO)\n    x22 = lbind(apply, x9)\n    x23 = chain(flip, x21, x22)\n    x24 = fork(mapply, x18, x23)\n    x25 = shape(I)\n    x26 = maximum(x25)\n    x27 = toindices(x26)\n    x28 = ZERO(x25)\n    x29 = toindices(x28)\n    x30 =multiply(x27, x29)\n    x31 = rbind(add, x30)\n    x32 = lbind(object, I)\n    x33 = compose(x31, x32)\n    x34 = ofcolor(x12, x19)\n    x35 = ofcolor(x21, x12)\n    x36 = intersection(x34, x35)\n    x37 = fill(x12, TWO, x36)\n    x38 = lbind(chain, size)\n    x39 = compose"], [1.1, "def solve_130c80b4(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_5e543a93(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, branch)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)\n    "], [1.1, "def solve_79ad0713(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(identity, dmirror)\n    x5 = astuple(cmirror, hmirror)\n    x6 = combine(x4, x5)\n    x7 = rbind(rapply, I)\n    x8 = compose(first, x7)\n    x9 = chain(x3, x8, initset)\n    x10 = extract(x6, x9)\n    x11 = x10(I)\n    x12 = mostcolor(I)\n    x13 = palette(I)\n    x14 = remove(x12, x13)\n    x15 = restuple(x14)\n    x16 = ofcolor(x11, x12)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, identity, vmirror)\n    x20 = x19(x11)\n    x21 = ofcolor(x20, x12)\n    x22 = ofcolor(x20, x12)\n    x23 = leftmost(x22)\n    x24 = equality(x23, ZERO)\n    x25 = branch(x24, identity, hmirror)\n    x26 = x25(x11)\n    x27 = ofcolor(x26, x12)\n    x28 = ofcolor(x26, x12)\n    x29 = rbind(add, DOWN)\n    x30 = compose(x29, last)\n    x31 = fork(equality, identity, x30)\n    x32 = compose(flip, x31)\n    x33 = extract(x27, x32)\n    x34 = x33(x26)\n    x35 = toindices(x34)\n    x36 = first(x35)\n    x37 = last(x35)\n    x38 =573(x36, x37)\n    x39 = shift(x38, x34)\n    x40 = paint(x11, x39)\n    x"], [1.1, "def solve_f8d876b8(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_758888ad(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = fork(shoot, identity, corners)\n    x8 = compose(x7, center)\n    x9 = fork(shoot, identity, x8)\n    x10 = size(x6)\n    x11 = lefthalf(I)\n    x12 = righthalf(I)\n    x13 = rbind(order, identity)\n    x14 = rbind(order, incd)\n    x15 = compose(x13, x14)\n    x16 = lbind(rbind, shift)\n    x17 = compose(x16, x15)\n    x18 = fork(compose, x17, x15)\n    x19 = lbind(lbind, mapply)\n    x20 = compose(x19, x18)\n    x21 = fork(sfilter, x18, x20)\n    x22 = compose(size, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(I)\n    x26 = colorfilter(x25, x24)\n    x27 = compose(maximum, shape)\n    x28 = argmin(x26, x27)\n    x29 = color(x28)\n    x30 = remove(x28, x26)\n    x31 = x30(x36)\n    x32 = mapply(neighbors, x31)\n    x33 = difference(x32, x32)\n    x34 = toobject(x33, I)\n    x35 = apply(x38, x34)\n    x36 = size(x35)\n    x37 = sfilter(x33, x36)\n    x38 = toobject(x37, I)\n    x39 = difference(x34, x38)\n    x40 = canvas(x39, UNITY)\n    x41 = paint(x40, x"], [1.1, "def solve_3e5c6825(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = width(x4)\n    x6 = toivec(x5)\n    x7 = index(x4, x6)\n    x8 = shape(x4)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x4, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, rot90)\n    x16 = lbind(power, rot270)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x13)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x19)\n    x24 = uppermost(x12)\n    x25 = lbind(add, x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = lbind(multiply, x27)\n    x29 = chain(toivec, x25, x28)\n    x30 = fork(shift, x23, x29)\n    x31 = compose(asobject, x22)\n    x32 = uppermost(x12)\n    x33 = lbind(subtract, x32)\n    x34 = height(x12)\n    x35 = increment(x34)\n    x36 = lbind(multiply, x35)\n    x37 = chain(toivec, x33, x36)\n    x38 = fork(shift, x31, x37)\n    x39 = fork(combine"], [1.1, "def solve_ff2c5f3b(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = palette(I)\n    x2 = compose(maximum, shape)\n    x3 = lbind(apply, x2)\n    x4 = lbind(ofcolor, I)\n    x5 = chain(x3, x4, x2)\n    x6 = compose(maximum, shape)\n    x7 = fork(equality, x5, x6)\n    x8 =    filter(x1, x7)\n    x9 = lbind(index, I)\n    x10 = compose(x9, x7)\n    x11 = fork( equality, x10, x6)\n    x12 = fork(either, x12, x11)\n    x13 = matcher(x10, ZERO)\n    x14 = sfilter(x8, x13)\n    x15 = difference(x8, x14)\n    x16 = lbind(colorcount, I)\n    x17 =765d511(x16)\n    x18 = argmin(x15, x17)\n    x19 = ofcolor(I, x18)\n    x20 = urcorner(x14)\n    x21 = ulcorner(x14)\n    x22 = subtract(x20, x21)\n    x23 = colorfilter(x19, x22)\n    x24 = count27(x23)\n    x25 = asobject(I)\n    x26 = subgrid(x25, x24)\n    x27 = asindices(x26)\n    x28 = toobject(x27, x26)\n    x29 = mostcolor(x28)\n    x30 = ofcolor(x26, x29)\n    x31 = replace(I, x18, x29)\n    x32 = x29(x31)\n    x33 = asobject(x32)\n    x34 = occurrences(x31, x33)\n    x35 = mapply(first, x34)\n    x36 = maximum(x31)\n    x37 = downscale(x35, x36)\n    x38 = asindices(x37)\n    x39 = box(x38)\n    x40 = fill(x37, x39, x37)\n    "], [1.1, "def solve_0c7785d7(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_7ee58563(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = width(x27)\n    x29 = divide(x28, THREE)\n    x30 = downscale(x27, x29)\n    x31 = objects(x30, T, F, F)\n    x32 = valmax(x31, size)\n    x33 = equality(x32, ONE)\n    x34 = equality(x32, FOUR)\n    x35 = equality(x32, FIVE)\n    x36 = branch(x33, TWO, ONE)\n    x37 = branch(x34, THREE, x36)\n    x38 = branch(x35, SIX, x37)\n    O = canvas"], [1.1, "def solve_e3e13ea9(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = switch(I, THREE, FOUR)\n    x2 = ofcolor(x1, ZERO)\n    x3 = asindices(x1)\n    x4 = difference(x3, x2)\n    x5 = normalize(x4)\n    x6 = recolor(ONE, x5)\n    x7 = mostcolor(I)\n    x8 = paint(x1, x7)\n    O = compose(initset, lrcorner)\n    x19 = fork( insert, ulcorner, x8)\n    x20 = insert(I, x4)\n    x21 = insert(lrcorner, x20)\n    x22 = fork(contained, square, identity)\n    x23 = compose(x22, ulcorner)\n    x24 = astuple(normalize, NEG_TWO)\n    x25 = branch(x11, x24, x23)\n    x26 = asindices(x1)\n    x27 = box(x26)\n    x28 = toobject(x27, I)\n    x29 = combine(x28, x25)\n    x30 = mostcolor(x29)\n    x31 = matcher(x23, x30)\n    x32 = compose(flip, x31)\n    x33 = rbind(sfilter, x32)\n    x34 = chain(positive, size, x33)\n    x35 = rbind(sfilter, x24)\n    x36 = compose(maximum, x35)\n    x37 = apply(x36, x22)\n    x38 = lbind(fork, FIVE)\n    x39 = lbind(x38, identity)\n    x40 = lbind(lbind, shift)\n    x41 = compose(x39, x40)\n    x42 = lbind(chain, x40)\n    x43 = rbind(x42, x30)\n    x44 = lbind(rbind, occurrences)\n    x45 = chain(x41, x44, identity)\n    x46 = lbind(compose, x flip)\n    x47 = chain(x41, x46, identity)\n    x48 = lbind"], [1.1, "def solve_aa09ef21(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_4df48e23(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_6ed670a2(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = astuple(ONE, THREE)\n    x2 = astuple(TWO, FOUR)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(THREE, SIX)\n    x10 = connect(x6, x9)\n    x11 = combine(x8, x10)\n    x12 = combine(x5, x11)\n    x13 = lbind(contained, x12)\n    x14 = compose(normalize, toindices)\n    x15 = lbind(apply, x14)\n    x16 = chain(x13, x15, partition)\n    x17 = astuple(identity, identity)\n    x18 = astuple(rot90, rot270)\n    x19 = astuple(x17, x18)\n    x20 = astuple(rot180, rot180)\n    x21 = astuple(rot270, rot90)\n    x22 = astuple(x20, x21)\n    x23 = combine(x19, x22)\n    x24 = rbind(rapply, I)\n    x25 = compose(initset, first)\n    x26 = chain(first, x24, x25)\n    x27 = compose(x16, x26)\n    x28 = extract(x23, x27)\n    x29 = first(x28)\n    x30 = last(x28)\n    x31 = x29(I)\n    x32 = palette(I)\n    x33 = lbind(ofcolor, x31)\n    x34 = compose(normalize, x33)\n    x35 = matcher(x34, x12)\n    x36 = extract(x32, x35)\n    x37 = remove(x36, x32)\n    x38 = lbind(colorcount, x31)\n    x39 = argmin(x37, x38)\n    "], [1.1, "def solve_945f0060(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = compose(x32, leftmost)\n    x37 = rbind(compose, x30)\n    x38 = lbind(compose, x37)\n    x39 = lbind(x31, x15)\n    x40 = rbind(sfilter, x35)\n    x41 = chain(x39, x40, size)\n    x42 = lbind(d"], [1.1, "def solve_0509b41f(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_94c8c5ba(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_8a3f88b0(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_7a50a92e(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = vmirror(I)\n    x2 = fgpartition(x1)\n    x3 = merge(x2)\n    x4 = toindices(x3)\n    x5 = index(x1, x4)\n    x6 = portrait(x5)\n    x7 = branch(x6, identity, dmirror)\n    x8 = x7(x1)\n    x9 = objects(x8, T, F, T)\n    x10 = branch(x6, identity, vmirror)\n    x11 = x10(x9)\n    x12 = mostcolor(I)\n    x13 = shape(x11)\n    x14 = canvas(x12, x13)\n    x15 = hconcat(x11, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = apply(uppermost, x16)\n    x18 = size(x17)\n    x19 = order(x17, uppermost)\n    x20 = apply(color, x19)\n    x21 = extract(x20, last)\n    x22 = remove(x21, x19)\n    x23 = argmin(x22, uppermost)\n    x24 = other(x22, x23)\n    x25 = color(x23)\n    x26 = color(x24)\n    x27 = fill(x15, x23, x24)\n    x28 = fill(x27, x26, x25)\n    x29 = fill(x28, x26, x21)\n    x30 = dmirror(x29)\n    x31 = papply(pair, x29, x30)\n    x32 = lbind(apply, maximum)\n    x33 = rbind(sfilter, x32)\n    x34 = chain(cde solve, x33, x24)\n    x35 = pair(x31, x31)\n    x36 = apply(x34, x35)\n    x37 =50(x36)\n    x38 = height(x36)\n    x39 = apply(size, x36)\n    x40 = repeat(x39, ONE)\n    "], [1.1, "def solve_e6d9f80c(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = compose(first, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = compose(last, last)\n    x8 = totuple(x2)\n    x9 = apply(x7, x8)\n    x10 = mostcommon(x9)\n    x11 = compose(first, last)\n    x12 = matcher(x11, x6)\n    x13 = sfilter(x2, x12)\n    x14 = compose(last, last)\n    x15 = matcher(x14, x10)\n    x16 = sfilter(x2, x15)\n    x17 = objects(I, F, T, T)\n    x18 = size(x17)\n    x19 = equality(x18, TWO)\n    x20 = mfilter(x17, hline)\n    x21 = mfilter(x17, vline)\n    x22 = branch(x19, x20, x13)\n    x23 = branch(x19, x21, x16)\n    x24 = width(x22)\n    x25 = lbind(multiply, x24)\n    x26 = width(I)\n    x27 = divide(x26, x24)\n    x28 = increment(x27)\n    x29 = interval(ZERO, x28, ONE)\n    x30 = apply(x25, x29)\n    x31 = apply(invert, x30)\n    x32 = combine(x30, x31)\n    x33 = apply(tojvec, x32)\n    x34 = lbind(shift, x22)\n    x35 = mapply(x34, x33)\n    x36 = height(x23)\n    x37 = lbind(multiply, x36)\n    x38 = height(I)\n    x39 = height(x22)\n    x40 = divide(x38, x39)\n    x41 = increment(x40)\n    x42 = interval"], [1.1, "def solve_3a4e1012(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = partition(I)\n    x6 = fork(multiply, height, width)\n    x7 = fork(equality, size, x6)\n    x8 = extract(x5, x7)\n    x9 = color(x8)\n    x10 = palette(I)\n    x11 = remove(x4, x10)\n    x12 = other(x11, x9)\n    x13 = ofcolor(I, x12)\n    x14 = vmirror(x13)\n    x15 = hmirror(x13)\n    x16 = toindices(x8)\n    x17 = combine(x16, x13)\n    x18 = height(x17)\n    x19 = halve(x18)\n    x20 = increment(x19)\n    x21 = width(x17)\n    x22 = halve(x21)\n    x23 = increment(x22)\n    x24 = astuple(x20, x23)\n    x25 = maximum(x24)\n    x26 = invert(x25)\n    x27 = increment(x25)\n    x28 = interval(x26, x27, ONE)\n    x29 = product(x28, x28)\n    x30 = initset(x15)\n    x31 = insert(x14, x30)\n    x32 = product(x29, x31)\n    x33 = ofcolor(I, x4)\n    x34 = rbind(intersection, x33)\n    x35 = fork(shift, last, first)\n    x36 = chain(size, x34, x35)\n    x37 = matcher(x36, ZERO)\n    x38 = sfilter(x32, x37)\n    x39 = rbind(intersection, x13)\n    x40 = fork(shift, last, first)\n    x41 = chain(size, x39, x40)\n    x42 = argmax(x38, x41"], [1.1, "def solve_a3be86c6(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivef15, x1)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4"], [1.1, "def solve_10a4f2de(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = inbox(x20)\n    x22 = cover(I, x21)\n    x23 = lrcorner(x206)\n    x24 = ofcolor(x22, x18)\n    x25 = inbox(x24)\n    x26 = recolor(x18, x24)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, x22)\n    x29 = color(x28)\n    x30 = inbox(x25)\n    x31 = recolor(x29, x25)\n    x32 = combine(x27, x31)\n    x33 = mapply(d90, x32)\n    x34 = fill(x22, x1, x33)\n    x35 = ofcolor(x34, x19)\n    x36 = subgrid(x35, x34)\n    x37 = asindices(x36)\n    x38 = box(x37)\n    x39 = fill(x34, x19, x38)\n    x40 = difference(x37, x"], [1.1, "def solve_973bb449(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = chain(double, last, first)\n    x4 = fork(equality, x3, x2)\n    x5 = sfilter(x1, x4)\n    x6 = vsplit(I, TWO)\n    x7 = rbind(hsplit, TWO)\n    x8 = extract(x6, x7)\n    x9 =150(x8)\n    x10 = last(x8)\n    x11 = remove(x10, x8)\n    x12 = solve(hline, x11)\n    x13 = center(x12)\n    x14 = dneighbors(x13)\n    x15 = insert(x13, x14)\n    x16 = toobject(x15, I)\n    x17 = mostcolor(x16)\n    x18 = palette(x16)\n    x19 = remove(x17, x18)\n    x20 = valuple(x19, x15)\n    x21 = other(x19, x20)\n    x22 = replace(x9, x21, x11)\n    x23 = combine(x15, x22)\n    x24 = ofcolor(x23, x21)\n    x25 = mapply(dneighbors, x24)\n    x26 = astuple(x25, x22)\n    x27 = other(x25, x26)\n    x28 = color(x27)\n    x29 = color(x8)\n    x30 = greater(x26, x29)\n    x31 = branch(x30, identity, dneighbors)\n    x32 = initset(x13)\n    x33 = insert(x32, x31)\n    x34 = insert(x17, x33)\n    x35 = hconcat(x34, x111)\n    x36 = vconcat(x35, x111)\n    x37 = vconcat(x36, x36)\n    x38 = vconcat(x37, x36)\n    x39 = halve(x38)\n    x40 = dneighbors"], [1.1, "def solve_fd7d21a8(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_90589327(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_074d71dc(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = matcher(x2, ZERO)\n    x4 = astuple(identity, dmirror)\n    x5 = astuple(cmirror, hmirror)\n    x6 = combine(x4, x5)\n    x7 = rbind(rapply, I)\n    x8 = compose(first, x7)\n    x9 = chain(x3, x8, initset)\n    x10 = extract(x6, x9)\n    x11 = x10(I)\n    x12 = mostcolor(I)\n    x13 = palette(I)\n    x14 = remove(x12, x13)\n    x15 = other(x14, TWO)\n    x16 = ofcolor(x11, x15)\n    x17 = rightmost(x16)\n    x18 = equality(x17, ZERO)\n    x19 = branch(x18, identity, vmirror)\n    x20 = x19(x11)\n    x21 = ofcolor(x20, x15)\n    x22 = ofcolor(x20, TWO)\n    x23 = apply(last, x22)\n    x24 = insert(ZERO, x23)\n    x25 = width(x20)\n    x26 = insert(x25, x24)\n    x27 = order(x26, identity)\n    x28 = last(x27)\n    x29 = remove(x28, x27)\n    x30 = first(x27)\n    x31 = remove(x30, x27)\n    x32 = pair(x29, x31)\n    x33 = size(x29)\n    x34 = interval(ZERO, x33, ONE)\n    x35 = pair(x34, x32)\n    x36 = lbind(fork, connect)\n    x37 = compose(first, last)\n    x38 = chain(decrement, last, last)\n    x39 = lbind(lbind, add)\n    x40 = compose(x39, first)\n    x41 = lbind("], [1.1, "def solve_fd4053c0(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind("], [1.1, "def solve_8ada2fb9(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = compose(first, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = compose(last, last)\n    x8 = totuple(x2)\n    x9 = apply(x7, x8)\n    x10 = mostcommon(x9)\n    x11 = compose(first, last)\n    x12 = matcher(x11, x6)\n    x13 = sfilter(x2, x12)\n    x14 = compose(last, last)\n    x15 = matcher(x14, x10)\n    x16 = sfilter(x2, x15)\n    x17 = objects(I, F, T, T)\n    x18 = size(x17)\n    x19 = equality(x18, TWO)\n    x20 = mfilter(x17, hline)\n    x21 = mfilter(x17, vline)\n    x22 = branch(x19, x20, x13)\n    x23 = branch(x19, x21, x16)\n    x24 = width(x22)\n    x25 = lbind(multiply, x24)\n    x26 = width(I)\n    x27 = divide(x26, x24)\n    x28 = increment(x27)\n    x29 = interval(ZERO, x28, ONE)\n    x30 = apply(x25, x29)\n    x31 = apply(invert, x30)\n    x32 = combine(x30, x31)\n    x33 = apply(tojvec, x32)\n    x34 = lbind(shift, x22)\n    x35 = mapply(x34, x33)\n    x36 = height(x23)\n    x37 = lbind(multiply, x36)\n    x38 = height(I)\n    x39 = height(x22)\n    x40 = divide(x38, x39)\n    x41 = increment(x40)\n    x42 = interval"], [1.1, "def solve_e6eb1aed(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 =8888(I, TWO)\n    x2 = apply(d687, x1)\n    x3 = height(x2)\n    x4 = width(x2)\n    x5 = trim(x2)\n    x6 = FOUR(x5)\n    x7 = equality(x6, ONE)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = uppermost(x10)\n    x12 = leftmost(x10)\n    x13 = index(x9, x11)\n    x14 = uppermost(x12)\n    x15 = rightmost(x12)\n    x16 = index(x9, x15)\n    x17 = decrement(x13)\n    x18 = leftmost(x2)\n    x19 = initset(x18)\n    x20 = insert(x11, x19)\n    x21 = difference(x10, x20)\n    x22 =698( fill, FOUR, x21)\n    x23 = objects(x22, T, F, T)\n    x24 = apply(toindices, x23)\n    x25 = lbind(index, x9)\n    x26 = compose(x25, shape)\n    x27 = astuple(x17, x26)\n    x28 = lbind(multiply, x27)\n    x29 = apply(x28, x24)\n    x30 = order(x29, identity)\n    x31 = lbind(apply, last)\n    x32 = lbind(rbind,ofcolor)\n    x33 = rbind(sfilter, x31)\n    x34 = rbind(compose, palette)\n    x35 = lbind(lbind, contained)\n    x36 = chain(x34, x33, x35)\n    x37 = rbind(sfilter, x32)\n    x38 = rbind(compose, palette)\n    x39 = lbind(lbind, contained)\n    x40 = chain(x37, x38, x39)\n    x41 = x36"], [1.1, "def solve_a1d7d322(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_9e476659(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_aa1951bb(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ONE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18, x"], [1.1, "def solve_7ddbef2c(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(F, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(F, x21)\n    x23 = color(I)\n    x24 = canvas(x23, x22)\n    x25 = colorcount(I, x7)\n    x26 = decrement(x25)\n    x27 = tojvec(x26)\n    x28 = connect(ORIGIN, x27)\n    x29 = height(I)\n    x30 = equality(x29, x27)\n    x31 = decrement(x30)\n    x32 = tojvec(x31)\n    x33 = connect(ORIGIN, x32)\n    x34 = width(I)\n    x35 = increment(x34)\n    x36 = tojvec(x35)\n    x37 = decrement(x36)\n    x38 = tojvec(x37)\n    x39 = connect(ORIGIN, x38)\n    x40 = height(I)\n    x41 = decrement(x40)\n    x42 = toivec(x41)\n    x43 = subtract(x42, x31)\n    x44 = width(I)\n    x45 = decrement(x44)\n    x46 = tojvec"], [1.1, "def solve_a9d5674a(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, vmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = divide(x17, x14)\n    x19 = increment(x18)\n    x20 = interval(ZERO, x19, ONE)\n    x21 = width(x3)\n    x22 = multiply(x21, x14)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x18)\n    x25 = rbind(divide, x18)\n    x26 = compose(x24, x25)\n    x27 = apply(x26, x20)\n    x28 = astuple(x19, x22)\n    x29 = lbind(multiply, x28)\n    x30 = apply(x29, x21)\n    x31 = apply(x30, x23)\n    x32 = combine(x29, x31)\n    x33 = mapply(x17, x32)\n    x34 = astuple(x3, x2005)\n    x35 = canvas(ZERO, x34)\n    x36 = asindices(x35)\n    x37 = shift(x36, x37)\n    x38 = shape(I)\n    x39 = maximum(x38)\n    x40 = lbind(multiply,"], [1.1, "def solve_adcb5fc4(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 = shoot(x3, DOWN_LEFT)\n    x9 = recolor(x7, x8)\n    x10 = astuple(dmirror, x6)\n    x11 = astuple(cmirror, x9)\n    x12 = initset(x11)\n    x13 = insert(x10, x12)\n    x14 = product(x1, x13)\n    x15 = asobject(I)\n    x16 = lbind(sfilter, x15)\n    x17 = lbind(compose, flip)\n    x18 = lbind(matcher, first)\n    x19 = chain(x16, x17, x18)\n    x20 = lbind(paint, I)\n    x21 = compose(last, last)\n    x22 = compose(first, last)\n    x23 = lbind(fork, equality)\n    x24 = rbind(x23, identity)\n    x25 = compose(x19, first)\n    x26 = compose(x24, x22)\n    x27 = compose(initset, x22)\n    x28 = fork(rapply, x27, x25)\n    x29 = compose(first, x28)\n    x30 = compose(x20, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = compose(initset, x26)\n    x33 = fork(rapply, x32, x31)\n    x34 = compose(first, x33)\n    x35 = sfilter(x14, x34)\n    x36 = lbind(colorcount, I)\n    x37 = compose(x36, first)\n    x38 = argmin(x35, x37)\n    x39 = first(x38)\n    x40"], [1.1, "def solve_e39c9ff0(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = fork(combine, first, last)\n    x9 = compose(x8, vmirror)\n    x10 = totuple(x7)\n    x11 = apply(x9, x10)\n    x12 = mostcommon(x11)\n    x13 = matcher(x9, x12)\n    x14 = extract(x11, x13)\n    x15 = last(x14)\n    x16 = height(x15)\n    x17 = rot90(I)\n    x18 = interval(ZERO, x17, ONE)\n    x19 = rbind(multiply, x16)\n    x20 = apply(x19, x18)\n    x21 = rbind(multiply, x16)\n    x22 = apply(x21, x18)\n    x23 = pair(x20, x22)\n    x24 = lbind(canvas, ZERO)\n    x25 = compose(x24, last)\n    x26 = fork(other, first, x25)\n    x27 = palette(I)\n    x28 = mostcolor(I)\n    x29 = remove(x28, x29)\n    x30 = lbind(hconcat, I)\n    x31 = argmin(x30, x30)\n    x32 = ofcolor(x15, x31)\n    x33 = mapply(vfrontier, x32)\n    x34 = mapply(hfrontier, x32)\n    x35 = size(x13)\n    x36 = size(x34)\n    x37 = greater(x35, x36)\n    x38 = rbind(canvas, xcolor)\n    x39 = chain(x38, asobject, x38)\n    x40 = compose(first"], [1.1, "def solve_93e42771(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 =8888888888888888888888\n    x2 = astuple(identity, dmirror)\n    x3 = astuple(cmirror, hmirror)\n    x4 = combine(x2, x3)\n    x5 = rbind(rapply, I)\n    x6 = chain(first, x5, initset)\n    x7 = rbind(ofcolor, EIGHT)\n    x8 = chain(lowermost, x7, x6)\n    x9 = chain(decrement, height, x6)\n    x10 = fork(equality, x8, x9)\n    x11 = extract(x4, x10)\n    x12 = x11(I)\n    x13 = ofcolor(x12, ZERO)\n    x14 = dmirror(x13)\n    x15 = width(x12)\n    x16 = decrement(x15)\n    x17 = tojvec(x16)\n    x18 = invert(x17)\n    x19 = rightmost(x13)\n    x20 = decrement(x19)\n    x21 = tojvec(x20)\n    x22 = invert(x21)\n    x23 = astuple(x18, x22)\n    x24 = maximum(x23)\n    x25 = dmirror(x24)\n    x26 = astuple(x24, x25)\n    x27 = branch(x12, x26, x24)\n    x28 = lbind(apply, maximum)\n    x29 = lbind(min, x24)\n    x30 = rbind(rbind, ZERO)\n    x31 = compose(x30, x28)\n    x32 = rbind(sfilter, x31)\n    x33 = lbind(pair, x27)\n    x34 = chain(x32, x33, x25)\n    x35 = rbind(apply, x14)\n    x36 = compose(x35, x24)\n    x37 = fork(add, x36, x34)\n    x38 = rbind(apply, x16)\n    x39 = compose(x38,"], [1.1, "def solve_8a010aa2(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 =78748ivec(x5)\n    x7 = palette(x6)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x11, T, F, T)\n    x13 = colorfilter(x12, x10)\n    x14 = rbind(manhattan, x13)\n    x15 = argmin(x12, x14)\n    x16 = ofcolor(x15, x10)\n    x17 = first(x16)\n    x18 = initset(x17)\n    x19 = argman(x18, x10)\n    x20 = lbind(argmin, x17)\n    x21 = lbind(rbind, manhattan)\n    x22 = compose(x21, initset)\n    x23 = rbind(argmin, x22)\n    x24 = rbind(rbind, manhattan)\n    x25 = compose(x23, x24)\n    x26 = fork(gravitate, identity, x25)\n    x27 = fork(add, identity, x26)\n    x28 = fork(connect, identity, x27)\n    x29 = rbind(2ordering, x11)\n    x30 = rbind(order, uppermost)\n    x31 = chain(x29, x30, x27)\n    x32 = apply(x31, x5)\n    x33 = rbind(contained, x32)\n    x34 = apply(x33, x553)\n    x35 = either(x20, x34)\n    x36 = branch(x35, x22, x25)\n    x37 = objects(x36, T, F, T)\n    x38 = rbind(colorcount, x11)\n    x39 = valmax(x37"], [1.1, "def solve_e7b3c1d2(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x8, x7)\n    x11 = remove(x9, x10)\n    x12 = Mehindices(x8)\n    x13 = merge(x12)\n    x14 = fill(I, x3, x13)\n    x15 = objects(x14, F, F, T)\n    x16 = argmin(x15, leftmost)\n    x17 = argmax(x15, leftmost)\n    x18 = vmirror(x16)\n    x19 = vmirror(x17)\n    x20 = dmirror(x18)\n    x21 = cmirror(x19)\n    x22 = hmirror(x20)\n    x23 = hmirror(x21)\n    x24 =vsplit(x14, x22)\n    x25 = vmirror(x23)\n    x26 = hmirror(x24)\n    x27 = hmirror(x25)\n    x28 = vmirror(x26)\n    x29 = vmirror(x27)\n    x30 = hmirror(x28)\n    x31 = ulcorner(x16)\n    x32 = llcorner(x16)\n    x33 = subtract(x31, x32)\n    x34 = rbind(valmin, x23)\n    x35 = other(x22, x39)\n    x36 = delta(x35)\n    x37 = fill(x14, x3, x36)\n    x38 = objects(x37, F, F, T)\n    x39 = colorfilter(x38, x5)\n    x40 =adjacent(x38, x39)\n    x41 = r"], [1.1, "def solve_ac23c8d7(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = increment(x39)\n    x41 = interval(ZERO, x40, ONE)\n    x42 = apply(tojvec"], [1.1, "def solve_01bcf5ef(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = mfilter(x1, hline)\n    x3 = mfilter(x1, vline)\n    x4 = uppermost(x2)\n    x5 = leftmost(x3)\n    x6 = astuple(x4, x5)\n    x7 = add(x6, NEG_UNITY)\n    x8 = uppermost(x2)\n    x9 = rightmost(x3)\n    x10 = astuple(x8, x9)\n    x11 = add(x10, UP_RIGHT)\n    x12 = lowermost(x2)\n    x13 = leftmost(x3)\n    x14 = astuple(x12, x13)\n    x15 = add(x14, DOWN_LEFT)\n    x16 = lowermost(x2)\n    x17 = rightmost(x3)\n    x18 = astuple(x16, x17)\n    x19 = add(x18, UNITY)\n    x20 = initset(ORIGIN)\n    x21 = insert(x7, x20)\n    x22 = width(I)\n    x23 = decrement(x22)\n    x24 = tojvec(x23)\n    x25 = initset(x24)\n    x26 = insert(x11, x25)\n    x27 = height(I)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = initset(x29)\n    x31 = insert(x15, x30)\n    x32 = shape(I)\n    x33 = decrement(x32)\n    x34 = initset(x33)\n    x35 = insert(x19, x34)\n    x36 = astuple(x21, x26)\n    x37 = astuple(x31, x35)\n    x38 = combine(x36, x37)\n    x39 = rbind(toobject, I)\n    x40 = compose(x39, backdrop)\n    x41 = apply(x40, x38)\n    x42 = matcher(num"], [1.1, "def solve_f2bf5784(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = vline(x1)\n    x3 = branch(x2, dmirror, identity)\n    x4 = x3(I)\n    x5 = ofcolor(x4, THREE)\n    x6 = ofcolor(x4, TWO)\n    x7 = center(x5)\n    x8 = hfrontier(x7)\n    x9 = center(x6)\n    x10 = hfrontier(x9)\n    x11 = mostcolor(I)\n    x12 = palette(I)\n    x13 = remove(THREE, x12)\n    x14 = remove(TWO, x13)\n    x15 = other(x14, x11)\n    x16 = replace(x4, THREE, x11)\n    x17 = difference(x8, x5)\n    x18 = underfill(x16, x17, x15)\n    x19 = replace(x4, TWO, x15)\n    x20 = difference(x10, x6)\n    x21 = underfill(x19, x20, x15)\n    x22 = objects(x18, T, F, F)\n    x23 = colorfilter(x22, x15)\n    x24 = rbind(adjacent, x5)\n    x25 = sfilter(x23, x24)\n    x26 = objects(x21, F, F, T)\n    x27 = colorfilter(x26, x11)\n    x28 = rbind(adjacent, x6)\n    x29 = sfilter(x27, x28)\n    x30 = mapply(toindices, x25)\n    x31 = rbind(equality, x31)\n    x32 = lbind(index, x4)\n    x33 = compose(x32, urcorner)\n    x34 = matcher(x33, x21)\n    x35 = rbind(add, x27)\n    x36 = chain(x31, x35, x4)\n    x37 = sfilter(x30, x34)\n    x38 = lbind(add, x29)\n    x39 = chain"], [1.1, "def solve_ec58bebc(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = vmirror(I)\n    x2 = sizefilter(x1, ONE)\n    x3 = apply(even, x2)\n    x4 = sfilter(x3, hline)\n    x5 = size(x4)\n    x6 = positive(x5)\n    x7 = branch(x6, identity, dmirror)\n    x8 = x7(I)\n    x9 = rbind(toobject, x8)\n    x10 = chain(Example, x9, delta)\n    x11 = apply(x10, x4)\n    x12 = asindices(x11)\n    x13 = shape(x12)\n    x14 = add(x13, THREE)\n    x15 = halve(x14)\n    x16 = add(x15, UP_RIGHT)\n    x17 = crop(x16, x12, x15)\n    x18 = canvas(ZERO, x13)\n    x19 = asobject(x18)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = argmax(x22, last)\n    x24 = add(x23, x22)\n    x25 = flip(x24)\n    x26 = asobject(x25)\n    x27 = equality(x25, x26)\n    x28 = branch(x27, ulcorner, last)\n    x29 = multiply(x27, x28)\n    x30 = branch(x27, llcorner, last)\n    x31 = initset(x30)\n    x32 = insert(x29, x31)\n    x33 = = lbind(2020, x32)\n    x34 = compose(x33, first)\n    x35 = toindices(x34)\n    x36 = sizefilter(x35, x24)\n    x37 = lbind(argmin, x36)\n    x38 = lbind(shift, x24)\n    x39 = compose(x37, x38)\n    x40 = fork(recolor"], [1.1, "def solve_3207db89(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = lbind(apply, toindices)\n    x2 = lbind(rbind, intersection)\n    x3 = compose(x1, x2)\n    x4 = fork(size, x3, color)\n    x5 = palette(I)\n    x6 = compose(x4, x5)\n    x7 = fork(paint, identity, x6)\n    x8 = rbind(compose, palette)\n    x9 = lbind(lfilter, x5)\n    x10 = chain(x8, x9, x7)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(x11, toindices)\n    x13 = chain(size, x12, x7)\n    x14 = matcher(x13, ONE)\n    x15 = fork(both, x14, x13)\n    x16 = merge(x15)\n    x17 = palette(x16)\n    x18 = lbind(colorcount, x16)\n    x19 = compose(x18, argmin)\n    x20 = argmin(x17, x19)\n    x21 = rbind(colorcount, x20)\n    x22 = chain(toivec, first, x21)\n    x23 = fork(shift, x22, ulcorner)\n    x24 = canvas(x20, UNITY)\n    x25 = mapply(x23, x24)\n    x26 = objects(x25, T, T, T)\n    x27 = first(x26)\n    x28 = last(x26)\n    x29 = subgrid(x27, x45)\n    x30 = colorfilter(x26, x20)\n    x31 = rbind(contained, x30)\n    x32 = compose(x31, last)\n    x33 = sfilter(x30, x32)\n    x34 = paint(x29, x33)\n    x35 = ofcolor(x34, x20)\n    x36 = subgrid(x35, x45)\n    x37 = sfilter(x1, x36)\n    x38 =27(x37)\n    x39 = replace("], [1.1, "def solve_09b5b1ea(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_74429dad(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = argadjacent(x24, x23)\n    x26 = subgrid(x25, x14)\n    x27 = asobject(x25)\n    x28 = vmirror(x27)\n    x29 = hconcat(x28, x14)\n    x30 = height(x29)\n    x31 = subgrid(x25, x15)\n    x32 = asobject(x31)\n    x33 = height(x32)\n    x34 = equality(x30, x33)\n    x35 = branch(x34, x29, x28)\n    x36 = add(x34, UNITY)\n    x37 =44(x35)\n    x38 = astuple(x31, x36)\n    x39 = x36(x37)\n    x40 = shift(x39, x37)\n    x41 = ofcolor(x44, x13)\n    x42 = subgrid(x"], [1.1, "def solve_cc785cc9(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, rot90)\n    x3 = branch(x1, identity, rot270)\n    x4 = x2(I)\n    x5 = width(x4)\n    x6 = toivec(x5)\n    x7 = index(x4, x6)\n    x8 = shape(x4)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(x4, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmax(x11, numcolors)\n    x13 = subgrid(x12, x4)\n    x14 = interval(ONE, FOUR, ONE)\n    x15 = lbind(power, insert)\n    x16 = lbind(power, ZERO)\n    x17 = rbind(rapply, x13)\n    x18 = compose(initset, x15)\n    x19 = chain(first, x17, x18)\n    x20 = rbind(rapply, x13)\n    x21 = compose(initset, x16)\n    x22 = chain(first, x20, x21)\n    x23 = compose(asobject, x19)\n    x24 = uppermost(x12)\n    x25 = lbind(add, x24)\n    x26 = height(x12)\n    x27 = increment(x26)\n    x28 = lbind(multiply, x27)\n    x29 = chain(toivec, x25, x28)\n    x30 = fork(shift, x23, x29)\n    x31 = compose(asobject, x22)\n    x32 = uppermost(x12)\n    x33 = lbind(subtract, x32)\n    x34 = height(x12)\n    x35 = increment(x34)\n    x36 = lbind(multiply, x35)\n    x37 = chain(toivec, x33, x36)\n    x38 = fork(shift, x31, x37)\n    x39 = fork(combine,"], [1.1, "def solve_0301447d(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP90)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP90)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, x33)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)\n    x"], [1.1, "def solve_4fc32608(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, T)\n    x4 = merge(x3)\n    x5 = palette(x4)\n    x6 = intersection(x5, x2)\n    x7 = lbind(colorcount, x4)\n    x8 = argmax(x6, x7)\n    x9 = astuple(x8, x2)\n    x10 = canvas(x9, x9)\n    x11 = paint(x10, x4)\n    x12 = objects(x11, T, F, T)\n    x13 = compose(normalize, toindices)\n    x14 = rbind(sordering, x13)\n    x15 = lbind(toobject, x14)\n    x16 = chain(x15, x13, color)\n    x17 = rbind(sfilter, x16)\n    x18 = lbind(recolor, x8)\n    x19 = chain(x18, x17, x35)\n    x20 = fork(combine, x15, x19)\n    x21 = lbind(paint, x11)\n    x22 = compose(x21, x20)\n    x23 = fork(paint, identity, x22)\n    x24 = chain(x13, x17, x23)\n    x25 = rbind(apply, x10)\n    x26 = lbind(lbind, shift)\n    x27 = chain(x26, x17, x24)\n    x28 = fork(apply, x26, x27)\n    x29 = fork(remove, x28, x22)\n    x30 = compose(x25, x29)\n    x31 = fork(paint, x30, x21)\n    x32 = lbind(fork, intersection)\n    x33 = compose(x32, x30)\n    x34 = fork(794, x33, x24)\n    x35 = compose(x31, x34)\n    x36 = fork(ers O, x35, x36)\n    x37 = mapply(x36, x4)\n"], [1.1, "def solve_e8940922(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = frontiers(I)\n    x8 = merge(x7)\n    x9 = mostcolor(x8)\n    x10 = matcher(identity, x9)\n    x11 = rbind(sfilter, x10)\n    x12 = compose(size, x11)\n    x13 = argmin(x6, x12)\n    x14 = repeat(x13, ONE)\n    x15 = asobject(x14)\n    x16 = palette(x15)\n    x17 = totuple(x16)\n    x18 = first(x17)\n    x19 = last(x17)\n    x20 = fgpartition(x6)\n    x21 = merge(x20)\n    x22 = toindices(x21)\n    x23 = apply(first, x22)\n    x24 = lbind(sfilter, x21)\n    x25 = compose(first, last)\n    x26 = lbind(matcher, x25)\n    x27 = compose(x24, x26)\n    x28 = apply(x27, x23)\n    x29 = lbind(shift, x15)\n    x30 = chain(x29, toivec, uppermost)\n    x31 = matcher(first, x18)\n    x32 = rbind(sfilter, x31)\n    x33 = rbind(compose, last)\n    x34 = lbind(rbind, contained)\n    x35 = chain(toindices, x32, x30)\n    x36 = chain(x33, x34, x35)\n    x37 = fork(sfilter, identity, x36)\n    x38 = compose(color, x37)\n    x39 = compose(x32, x30)\n    x40 = fork(recolor, x38, x39)\n    x41 = fork(other, palette,"], [1.1, "def solve_317e3dea(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = compose(initset, x13)\n    x20 = fork(rapply, x19, x18)\n    x21 = compose(first, x20)\n    x22 = rbind(contained, x1)\n    x23 = compose(x22, last)\n    x24 = compose(flip, x23)\n    x25 = rbind( sfilter, x21)\n    x26 = chain(first, x25, x24)\n    x27 = fork(paint, x26, x25)\n    x28 = compose(initset, x15)\n    x29 = fork(rapply, x28, x24)\n    x30 = compose(first, x29)\n    x31 = fork(paint, x30, x27)\n    x32 = compose(initset, x12)\n    x33 = fork(rapply, x32, x24)\n    x34 = compose(first, x33)\n    x35 = extract(x1, x34)\n    x36 = x35(I)\n    x37 = first(x36)\n    x38"], [1.1, "def solve_fc65a4c4(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_c797836b(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = leastcolor(I)\n    x9 = rbind(ofcolor, x8)\n    x10 = rbind(rapply, I)\n    x11 = chain(first, x10, initset)\n    x12 = chain(hline, x9, x11)\n    x13 = rbind(ofcolor, x8)\n    x14 = rbind(rapply, I)\n    x15 = chain(first, x14, initset)\n    x16 = chain(leftmost, x13, x15)\n    x17 = matcher(x16, ZERO)\n    x18 = fork(both, x12, x17)\n    x19 = compose(x18, first)\n    x20 = extract(x7, x19)\n    x21 = first(x20)\n    x22 = last(x20)\n    x23 = x21(I)\n    x24 = ofcolor(x23, x8)\n    x25 = argmax(x24, last)\n    x26 = add(x25, UP_RIGHT)\n    x27 = shoot(x26, UP_RIGHT)\n    x28 = add(x25, DOWN_LEFT)\n    x29 = shoot(x28, DOWN_LEFT)\n    x30 = rbind(shoot, LEFT)\n    x31 = mapply(x30, x27)\n    x32 = rbind(shoot, LEFT)\n    x33 = mapply(x32, x29)\n    x34 = width(x23)\n    x35 = invert(x34)\n    x36 = tojvec(x35)\n    x37 = shift(x31, x36)\n    x38 = combine(x31, x37)\n    x39 ="], [1.1, "def solve_6961916f(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toive694, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_4df9dccc(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = ofcolor(x3, x39"], [1.1, "def solve_e14ac45b(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = height(I)\n    x9 = astuple(x8, ONE)\n    x10 = canvas(THREE, x9)\n    x11 = hconcat(x10, I)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = identity(DOWN)\n    x17 = connect(ORIGIN, x15)\n    x18 = fill(x11, THREE, x17)\n    x19 = identity(x13)\n    x20 = identity(x12)\n    x21 = identity(x12)\n    x22 = identity(F8)\n    x23 = identity(F9)\n    x24 = compose(first, first)\n    x25 = chain(first, last, x24)\n    x26 = compose(first, first)\n    x27 = chain(last, last, x26)\n    x28 = chain(first, first, first)\n    x29 = chain(first, last, last)\n    x30 = chain(first, first, last)\n    x31 = chain(last, first, last)\n    x32 = compose(decrement, x25)\n    x33 = compose(decrement, x27)\n    x34 = fork(astuple, x32, x33)\n    x35 = compose(decrement, x27)\n    x36 = fork(multiply, x30, x35)\n    x37 = fork(add, x29, x36)\n    x38 = compose(positive, size)\n    x39 = lbind(intersection, x7)\n    x40 = chain(x38, x39, xf8)\n    x41 = compose(size"], [1.1, "def solve_5e8234d9(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = partition(I)\n    x6 = fork(multiply, height, width)\n    x7 = fork(equality, size, x6)\n    x8 = extract(x5, x7)\n    x9 = color(x8)\n    x10 = palette(I)\n    x11 = remove(x4, x10)\n    x12 = other(x11, x9)\n    x13 = ofcolor(I, x12)\n    x14 = vmirror(x13)\n    x15 = hmirror(x13)\n    x16 = toindices(x8)\n    x17 = combine(x16, x13)\n    x18 = height(x17)\n    x19 = halve(x18)\n    x20 = increment(x19)\n    x21 = width(x17)\n    x22 = halve(x21)\n    x23 = increment(x22)\n    x24 = astuple(x20, x23)\n    x25 = maximum(x24)\n    x26 = invert(x25)\n    x27 = increment(x25)\n    x28 = interval(x26, x27, ONE)\n    x29 = product(x28, x28)\n    x30 = initset(x15)\n    x31 = insert(x14, x30)\n    x32 = product(x29, x31)\n    x33 = ofcolor(I, x4)\n    x34 = rbind(intersection, x33)\n    x35 = fork(shift, last, first)\n    x36 = chain(size, x34, x35)\n    x37 = matcher(x36, ZERO)\n    x38 = sfilter(x32, x37)\n    x39 = rbind(intersection, x13)\n    x40 = fork(shift, last, first)\n    x41 = chain(size, x39, x40)\n    x42 = argmax(x38, x41"], [1.1, "def solve_ec3a2634(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = corners(x2)\n    x4 = toobject(x3, I)\n    x5 = mostcolor(x4)\n    x6 = colorcount(I, x5)\n    x7 = dmirror(I)\n    x8 = astuple(x6, x7)\n    x9 = dmirror(I)\n    x10 =658(x8, x9)\n    x11 = combine(x3, x10)\n    x12 = ofcolor(x11, x5)\n    x13 = difference(x1, x12)\n    x14 = rbind(argmin, x13)\n    x15 = rbind(sfilter, x15)\n    x16 = compose(x14, x15)\n    x17 = lbind(fork, fly)\n    x18 = lbind(x17, identity)\n    x19 = lbind(rbind, astuple)\n    x20 = compose(x18, x19)\n    x21 = lbind(compose, x16)\n    x22 = rbind(x41, x21)\n    x23 = lbind(rbind, intersection)\n    x24 = chain(x22, x23, x8)\n    x25 = lbind(compose, x17)\n    x26 = x25(x12)\n    x27 = rbind(rapply, x25)\n    x28 = compose(initset, x12)\n    x29 = chain(first, x27, x28)\n    x30 = extract(x12, x29)\n    x31 = x30(I)\n    x32 = palette(I)\n    x33 = first(x32)\n    x34 = ulcorner(x30)\n    x35 = dmirror(x34)\n    x36 = shape(x30)\n    x37 = add(x36, x39)\n    x38 = astuple(x37, x34)\n    x39 = canvas(x30, x38)\n    x40 = asindices(x39)\n    x41 = apply(urcorner,"], [1.1, "def solve_4298d118(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = chain(x4, x5, color)\n    x7 = compose(maximum, shape)\n    x8 = fork(apply, x7, x6)\n    x9 = maximum(x2)\n    x10 = palette(I)\n    x11 = remove(x9, x10)\n    x12 = lbind(outbox, I)\n    x13 = compose(x12, objects)\n    x14 = arg113(x11, x13)\n    x15 = rightmost(x14)\n    x16 = totuple(x15)\n    x17 = apply(normalize, x16)\n    x18 = color(x14)\n    x19 = lbind(replace, x18)\n    x20 = rbind(compose, initset)\n    x21 = lbind(rbind, difference)\n    x22 = chain(x20, x21, color)\n    x23 = apply(x22, x17)\n    x24 = ofcolor(I, x9)\n    x25 = rbind(sfilter, x24)\n    x26 = chain(positive, size, x25)\n    x27 = mfilter(x23, x26)\n    x28 = equality(x27, ONE)\n    x29 = branch(x28, x22, x27)\n    x30 = rbind(colorcount, x18)\n    x31 = argmax(x29, x30)\n    x32 = UNITY(x31)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, x32)\n    x35 = colorfilter(x18, x9)\n    x36 = rbind(vmatching, x34)\n    x37 = fork(both, x35, x36)\n    x38 = x37(x31)\n    x39 = fill(I, x8, x38)\n    x40 =272("], [1.1, "def solve_d5637f2d(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = leftmost(x1)\n    x6 = equality(x5, ZERO)\n    x7 = branch(x6, identity, vmirror)\n    x8 = x7(x4)\n    x9 = ofcolor(x8, EIGHT)\n    x10 = uppermost(x9)\n    x11 = equality(x10, ZERO)\n    x12 = branch(x11, identity, hmirror)\n    x13 = x12(x8)\n    x14 = ofcolor(x13, EIGHT)\n    x15 = ofcolor(x13, TWO)\n    x16 = rbind(shoot, DOWN)\n    x17 = mapply(x16, x14)\n    x18 = height(x13)\n    x19 = apply(first, x15)\n    x20 = insert(ZERO, x19)\n    x21 = insert(x18, x19)\n    x22 = apply(decrement, x21)\n    x23 = order(x20, identity)\n    x24 = order(x22, identity)\n    x25 = size(x15)\n    x26 = increment(x25)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = apply(tojvec, x27)\n    x29 = pair(x23, x24)\n    x30 = lbind(sfilter, x17)\n    x31 = compose(first, last)\n    x32 = chain(decrement, first, first)\n    x33 = fork(greater, x31, x32)\n    x34 = chain(increment, last, first)\n    x35 = fork(greater, x34, x31)\n    x36 = fork(both, x33, x35)\n    x37 = lbind(lbind, astuple)\n    x38 = lbind(compose, x36)\n    x39 = chain(x30, x38, x37)\n    x40"], [1.1, "def solve_5f9f8e92(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = astuple(color, ORIGIN)\n    x2 = astuple(color, TWO)\n    x3 = initset(x2)\n    x4 = insert(TWO_BY_TWO, x3)\n    x5 = insert(x1, x4)\n    x6 = tojvec(THREE)\n    x7 = toivec(THREE)\n    x8 = connect(x6, x7)\n    x9 = astuple(x655, x8)\n    x10 = astuple(xcompose, initset)\n    x11 = lbind(contained, x10)\n    x12 = compose(x11, last)\n    x13 = sfilter(x5, x12)\n    x14 = upscale(x13, TWO)\n    x15 = shape(x13)\n    x16 = add(x15, RIGHT)\n    x17 = crop(x13, UP_BY_ZERO, x16)\n    x18 = asobject(x17)\n    x19 = multiply(UNITY, x15)\n    x20 = crop(x18, DOWN_LEFT, x19)\n    x21 = apply(x16, x20)\n    x22 = paint(x17, x21)\n    x23 = crop(x18, UNITY, x15)\n    x24 = repeat(x23, ONE)\n    x25 = combine(x28, x24)\n    x26 = sfilter(x25, x12)\n    x27 = fork(combine, first, last)\n    x28 = apply(x27, x26)\n    x29 = height(x12)\n    x30 = lbind(repeat, x29)\n    x31 = apply(x30, x27)\n    x32 = combine(x28, x31)\n    x33 = branch(x37, x32, x29)\n    x34 = apply(double, x30)\n    x35 = divide(x34, TWO)\n    x36 = apply(x27, x30)\n    x37 = branch(x37, x36, x29)\n    x38 = branch(x37, x37, x28)\n    "], [1.1, "def solve_fc1c4f8f(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = Faff27(I)\n    x3 = toindices(x2)\n    x4 = difference(x1, x3)\n    x5 = toobject(x4, I)\n    x6 = size(x5)\n    x7 = positive(x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = objects(x9, T, F, T)\n    x11 = color(x10)\n    x12 = leftmost(x11)\n    x13 = leftmost(x12)\n    x14 = subtract(x13, x12)\n    x15 = astuple(x14, x13)\n    x16 = repeat(x9, x15)\n    x17 = x8(x9)\n    x18 = x8(x16)\n    x19 = hsplit(x17, x18)\n    x20 = hsplit(x19, x19)\n    x21 = merge(x20)\n    x22 = last(x21)\n    x23 = remove(x22, x30)\n    x24 = last(x23)\n    x25 = last(x24)\n    x26 = first(x23)\n    x27 = hupscale(x25, x26)\n    x28 = identity(x27)\n    x29 = x8(x22)\n    x30 = x9(x222)\n    x31 =60713(x29)\n    x32 = hupscale(x30, x31)\n    x33 = identity(x32)\n    x34 = hconcat(x29, x33)\n    x35 = hconcat(x34, x28)\n    x36 = vconcat(x35, x28)\n    x37 = vconcat(x36, x28)\n    x38 = astuple(x24, x270)\n    x39 = astuple(x37, x38)\n    x40 = combine(x32, x39)\n    x41 = paint(x40, x33)\n    O = x8(x41)\n"], [1.1, "def solve_476652e6(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = x2(I, TWO)\n    x4 = order(x3, numcolors)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = palette(x5)\n    x8 = remove(ZERO, x7)\n    x9 = other(x8, x6)\n    x10 = branch(x5, height, width)\n    x11 = x10(x6)\n    x12 = astuple(ONE, x11)\n    x13 = canvas(x9, x12)\n    x14 = ofcolor(x13, x6)\n    x15 = mostcolor(x14)\n    x16 = matcher(first, x15)\n    x17 = compose(flip, x16)\n    x18 = rbind(sfilter, x17)\n    x19 = rbind(occurrences, x13)\n    x20 = compose(x19, x18)\n    x21 = apply(x20, x9)\n    x22 = dmirror(x21)\n    x23 = replace(x22, x10, x67)\n    x24 = ofcolor(x23, x6)\n    x25 = ofcolor(x23, x12)\n    x26 = intersection(x24, x25)\n    x27 = fill(x23, ZERO, x26)\n    x28 = astuple(ONE, THREE)\n    x29 = canvas(x9, x28)\n    x30 = dmirror(x29)\n    x31 = fill(x30, x7, x279)\n    x32 = x2(x31)\n    x33 = initset(x32)\n    x34 = insert(x62, x33)\n    x35 = product(x34, x34)\n    x36 = order(x35, identity)\n    x37 = ofcolor(x36, x6)\n    x38 = last(x37)\n    x39 = remove(x38, x37)\n    x40 = first(x39)\n    x"], [1.1, "def solve_8d7c3cda(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = matcher(color, x1)\n    x4 = compose(flip, x3)\n    x5 = extract(x2, x4)\n    x6 =8776cd78\n    \"\"\"\n    x7 = backdrop(x5)\n    x8 = shape(I)\n    x9 = add(TWO, x8)\n    x10 = canvas(x1, x9)\n    x11 = asobject(I)\n    x12 = shift(x11, UNITY)\n    x13 = paint(x10, x12)\n    x14 = double(x3)\n    x15 = power(outbox, x14)\n    x16 = chain( backdrop, x15, initset)\n    x17 = x16(ulcorner)\n    x18 = x16(TWO, x16)\n    x19 = shift(x11, x18)\n    x20 = paint(x13, x19)\n    x21 = ulcorner(x5)\n    x22 = index(x20, x21)\n    x23 = recolor(x1, x22)\n    x24 = paint(x20, x23)\n    x25 = branch(x3, x24, x16)\n    x26 = shape(I)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = product(x27, x27)\n    x29 = lbind(multiply, x287)\n    x30 = apply(x29, x28)\n    x31 = lbind(shift, x12)\n    x32 = mapply(x31, x30)\n    x33 = paint(x20, x32)\n    x34 = branch(x26, UNITY, DOWN_LEFT)\n    x35 = apply(x34, x29)\n    x36 = pair(x35, x31)\n    x37 = size(x36)\n    x38 = positive(x37)\n    x39 = branch(x33, RIGHT, x38)\n    x40 = apply(x39, x36)\n    x41"], [1.1, "def solve_414b7284(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = palette(I)\n    x2 = compose(maximum, shape)\n    x3 = argmin(x1, x2)\n    x4 = canvas(x3, THREE_BY_THREE)\n    x5 = colorcount(I, ZERO)\n    x6 = dmirror(x4)\n    x7 = objects(x6, T, F, T)\n    x8 = argmin(x7, size)\n    x9 = repeat(x8, ONE)\n    x10 = combine(x7, x9)\n    x11 = color(x10)\n    x12 = leftmost(x11)\n    x13 = width(I)\n    x14 = interval(ONE, x13, ONE)\n    x15 = leftmost(x11)\n    x16 = interval(ONE, x15, ONE)\n    x17 = pair(x14, x16)\n    x18 = sizefilter(x17, x11)\n    x19 = apply(invert, x18)\n    x20 = lbind(sfilter, x18)\n    x21 = lbind(matcher, partition)\n    x22 = compose(x21, x20)\n    x23 = chain(size, x20, x22)\n    x24 = sfilter(x19, x23)\n    x25 = chain(increment, minimum, x24)\n    x26 =745 to compose(x25, x20)\n    x27 = fork(repeat, x26, x211)\n    x28 = sfilter(x6, x27)\n    x29 = combine(x27, x28)\n    x30 = lbind(recolor, x11)\n    x31 = lbind(mapply, x30)\n    x32 = fork(paint, identity, x31)\n    x33 = compose(x32, x20)\n    x34 = ofcolor(I, x3)\n    x35 = mapply(x33, x34)\n    x36 = ofcolor(I, FOUR)\n    x37 = mapply(x36, x36)\n    x38 = combine(x35, x37)\n    x39 = paint(I"], [1.1, "def solve_256285cf(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_e6e4b6a8(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = compose(positive, size)\n    x2 = rbind(sfilter, hline)\n    x3 = chain(x1, x2, frontiers)\n    x4 = chain(size, dedupe, first)\n    x5 = chain(size, dedupe, last)\n    x6 = fork(greater, x4, x5)\n    x7 = fork(both, x3, x6)\n    x8 = astuple(identity, dmirror)\n    x9 = astuple(cmirror, hmirror)\n    x10 = combine(x8, x9)\n    x11 =040(x10)\n    x12 = objects(x11, T, F, T)\n    x13 = merge(x12)\n    x14 = shift(x13, TWO)\n    x15 = paint(x3, x14)\n    x16 = objects(x15, T, F, T)\n    x17 = remove(x16, x15)\n    x18 = compose(positive, size)\n    x19 = rbind(sfilter, x18)\n    x20 = chain(x17, x19, frontiers)\n    x21 = merge(x12)\n    x22 = chain(x19, x19, shape)\n    x23 = chain(size, x22, first)\n    x24 = compose(increment, x23)\n    x25 = power(x24, FOUR)\n    x26 = x25(x6)\n    x27 = shape(x26)\n    x28 = canvas(ZERO, x27)\n    x29 = \"b567a423(x26)\n    x30 = chain(size, dedupe, first)\n    x31 = equality(x30, x22)\n    x32 = x31(x16)\n    x33 = first(x32)\n    x34 = last(x32)\n    x35 = fill(x16, THREE, x34)\n    x36 = shift(x33, x35)\n    x37 =74ddupe(x36)\n    x38 = paint(x35, x37)\n    O = trim(x38)\n    return O"], [1.1, "def solve_55b85df0(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = compose(flip, x2)\n    x4 = rbind(sfilter, x3)\n    x5 = replace(x1, FIVE, ZERO)\n    x6 = x4(x5)\n    x7 = asobject(x6)\n    x8 = apply(first, x7)\n    x9 = paint(I, x8)\n    x10 = fgpartition(x9)\n    x11 = merge(x10)\n    x12 = normalize(x11)\n    x13 = width(x12)\n    x14 = subtract(x13, TWO)\n    x15 = height(x12)\n    x16 = astuple(x15, x14)\n    x17 = crop(x12, ORIGIN, x16)\n    x18 = hupscale(x17, x12)\n    x19 = solve(x18, dmirror)\n    x20 = astuple(x15, x16)\n    x21 = crop(x20, ORIGIN, x20)\n    x22 = hupscale(x21, x12)\n    x23 =\n    \"\"\"\n    x24 = hmirror(x12)\n    x25 = vconcat(x22, x24)\n    x26 = vconcat(x25, x12)\n    O = compress(x26)\n    return O"], [1.1, "def solve_26d2dd39(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 =2dee509493\n    x2 = dmirror(I)\n    O = papply(pair, I, x1)\n    return O"], [1.1, "def solve_91502675(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = sizefilter(x1, FOUR)\n    x3 = fork(equality, height, width)\n    x4 = extract(x2, x3)\n    x5 = other(x1, x4)\n    x6 = color(x5)\n    x7 = palette(I)\n    x8 = remove(x6, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = subtract(FOUR, x11)\n    x13 = increment(x12)\n    x14 =255(I)\n    x15 = canvas(x6, x14)\n    x16 = lbind(ofcolor, I)\n    x17 =699(x16, x13)\n    x18 = subgrid(x5, I)\n    x19 = hconcat(x17, x18)\n    x20 = hconcat(x19, x17)\n    x21 = vconcat(x19, x20)\n    x22 = vconcat(x21, x17)\n    x23 = combine(x19, x22)\n    O = fill(x15, x6, x23)\n    return O"], [1.1, "def solve_acaa386b(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = palette(I)\n    x2 = asindices(I)\n    x3 = urcorner(x2)\n    x4 = index(I, ORIGIN)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = recolor(x4, x5)\n    x7 = index(I, x3)\n    x8 =666(ZERO, x3)\n    x9 =66(d3644, x8)\n    x10 = shape(I)\n    x11 = decrement(x10)\n    x12 = index(I, x11)\n    x13 = subtract(FIVE, x12)\n    x14 = crop(I, ORIGIN, x9)\n    x15 = crop(I, x13, x7)\n    x16 = width(x15)\n    x17 = astuple(x16, ORIGIN)\n    x18 = crop(x15, ORIGIN, x17)\n    x19 = vupscale(x18, x14)\n    x20 = hupscale(x19, x12)\n    x21 = rbind(shoot, UNITY)\n    x22 = asindices(x14)\n    x23 = remove(x22, x14)\n    x24 = remove(x22, x23)\n    x25 = intersection(x22, x24)\n    x26 = lbind(occurrences, x15)\n    x27 = compose(x26, last)\n    x28 = fork(combine, first, x27)\n    x29 = product(x15, x17)\n    x30 = sfilter(x29, x28)\n    x31 = fork(shift, first, last)\n    x32 = mapply(x31, x30)\n    O = paint(x15, x32)\n    return O"], [1.1, "def solve_957376a9(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = replace(x6, x3, x4)\n    x8 = objects(x7, T, F, T)\n    x9 = lbind(colorfilter, x8)\n    x10 = chain(merge, x9, palette)\n    x11 = objects(x7, T, F, T)\n    x12 = sfilter(x11, x10)\n    x13 = rbind(gravitate, x12)\n    x14 = compose(x13, toivec)\n    x15 = fork(add, x14, x12)\n    x16 = fork(connect, x15, output:\n    x17 = mapply(x16, x13)\n    O = fill(x7, x3, x17)\n    return O"], [1.1, "def solve_9f4e5183(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = x6(I)\n    x8 = rbind(sfilter, x7)\n    x9 = compose(dmirror, x8)\n    x10 = rbind(sfilter, x9)\n    x11 = compose(vmirror, x10)\n    x12 = dmirror(I)\n    x13 = x11(x12)\n    x14 =37(x13)\n    x15 = width(x13)\n    x16 = decrement(x15)\n    x17 = tojvec(x16)\n    x18 = connect(ORIGIN, x17)\n    x19 = height(x13)\n    x20 = decrement(x19)\n    x21 = toivec(x20)\n    x22 = connect(ORIGIN, x21)\n    x23 = size(x2)\n    x24 = equality(x23, ZERO)\n    x25 = branch(x24, tojvec, toivec)\n    x26 = branch(x24, bottomhalf, x25)\n    x27 = order(x28, x26)\n    x28 = apply(x11, x27)\n    O = x11(x28)\n    return O"], [1.1, "def solve_5e81a8ce(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = trim(I)\n    x2 = repeat(x1, ONE)\n    x3 = toobject(x2, I)\n    x4 = numcolors(x3)\n    x5 = vmirror(x4)\n    x6 = hmirror(x4)\n    x7 = numcolors(x6)\n    x8 = add(TWO, x7)\n    x9 = papply(insert, x3, x8)\n    x10 = toobject(x9, I)\n    x11 = decrement(x10)\n    x12 = objects(x11, F, F, T)\n    x13 = first(x12)\n    x14 =90000009x13\n    x15 = leftmost(x13)\n    x16 = decrement(x15)\n    x17 = tojvec(x16)\n    x18 = shift(x3, x17)\n    x19 = shift(x3, x18)\n    x20 = fork(combine, vfrontier, hfrontier)\n    x21 = compose(x20, initset)\n    x22 = fork(combine, x19, x21)\n    x23 = rapply(x18, x22)\n    x24 = mapply(x23, x1)\n    O = paint(x14, x24)\n    return O"], [1.1, "def solve_0fd9de86(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = box(I)\n    x2 =66666666(x1, I)\n    x3 = equality(x2, TWO)\n    x4 = branch(x3, hsplit, vsplit)\n    x5 = x4(I, TWO)\n    x6 = first(x5)\n    x7 = last(x5)\n    x8 = palette(x6)\n    x9 = palette(x7)\n    x10 = intersection(x8, x9)\n    x11 = first(x10)\n    x12 = shape(x6)\n    x13 = canvas(x11, x12)\n    x14 = ofcolor(x6, x12)\n    x15 = ofcolor(x7, x12)\n    x16 = intersection(x14, x15)\n    O = fill(x13, TWO, x16)\n    return O"], [1.1, "def solve_b3453d12(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =372(x2, I)\n    x4 = shape(I)\n    x5 = multiply(x4, x4)\n    x6 = canvas(ZERO, x5)\n    x7 = rbind(multiply, x6)\n    x8 = apply(x7, x3)\n    x9 = height(I)\n    x10 = width(I)\n    x11 = divide(x9, x10)\n    x12 = increment(x11)\n    x13 = subtract(x12, ONE)\n    x14 = shift(x8, x13)\n    x15 =873(x14)\n    x16 = last(x14)\n    x17 = remove(x16, x14)\n    x18 = last(x17)\n    x19 = canvas(ZERO, x4)\n    x20 = matcher(first, x8)\n    x21 =sfilter(x19, x20)\n    x22 = shift(x19, x21)\n    O = fill(x21, THREE, x22)\n    return O"], [1.1, "def solve_2214e8a1(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 =8885(I)\n    x2 = mostcolor(I)\n    x3 = shape(I)\n    x4 = canvas(x2, x3)\n    x5 = hconcat(I, x4)\n    x6 = objects(x5, F, F, T)\n    x7 = compose(last, centerofmass)\n    x8 = order(x6, x7)\n    x9 =159(x8)\n    x10 = lbind(contained, ZERO)\n    x11 = compose(x10, palette)\n    x12 = sfilter(x8, x11)\n    x13 = size(x12)\n    x14 = interval(ZERO, x13, ONE)\n    x15 = pair(x4, x14)\n    x16 = mapply(first, x15)\n    x17 = mapply(last, x15)\n    x18 = fill(x4, THREE, x16)\n    O = fill(x18, FOUR, x17)\n    return O"], [1.1, "def solve_ad1c5677(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = subgrid(I, I)\n    x2 = trim(x1)\n    x3 = replace(x2, ONE, ZERO)\n    x4 = tojvec(Sfilter)\n    x5 =787\n    7204399287\n    4862897883\n    9972237075\n    \"\"\"\n    x1 = lefthalf(x3)\n    x2 = righthalf(x3)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = fill(x3, ONE, x9)\n    return O"], [1.1, "def solve_e3219962(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 =1111(I, ZERO)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = fill(x2, ZERO, x1)\n    return O"], [1.1, "def solve_d5333426(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = switch(I, EIGHT, TWO)\n    x2 = switch(x1, TWO, ONE)\n    x3 = switch(x2, EIGHT, ONE)\n    x4 = switch(x3, EIGHT, FOUR)\n    O = switch(x4, lowermost,\n    return O"], [1.1, "def solve_5060fb2b(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = tophalf(I)\n    x5 = lefthalf(x4)\n    x6 = tophalf(I)\n    x7 = righthalf(x6)\n    x8 = bottomhalf(I)\n    x9 = righthalf(x8)\n    x10 = bottomhalf(I)\n    x11 = lefthalf(x9)\n    x12 = righthalf(x11)\n    x13 =122200(x2, x12)\n    x14 =122233\n    x15 = merge(x1)\n    x16 = bottomhalf(x2)\n    x17 = lefthalf(x16)\n    x18 = bottomhalf(x2)\n    x19 = righthalf(x17)\n    x20 = width(x13)\n    x21 =145(x13)\n    x22 = astuple(x20, x21)\n    x23 = crop(x13, ORIGIN, x22)\n    x24 = ofcolor(x23, x3)\n    x25 =19color(x24)\n    x26 = dmirror(x23)\n    x27 = invert(x26)\n    x28 = tojvec(x27)\n    x29 = double(xdneighbors)\n    x30 = interval(x29, x27, ONE)\n    x31 = lbind(shift, x25)\n    x32 = apply(x31, x30)\n    x33 = mapply(x27, x32)\n    O = fill(x23, x5, x33)\n    return O"], [1.1, "def solve_db412776(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = switch(I, dmirror, identity)\n    x2 = astuple(x1, x1)\n    x3 = astuple(FOUR, EIGHT)\n    x4 = canvas(NEG_ONE, x3)\n    x5 =9465(x4)\n    x6 = rbind(toobject, x1)\n    x7 = compose(x6, toindices)\n    x8 = rbind(colorcount, x1)\n    x9 = matcher(x8, chain(x8, x7)\n    x10 = matcher(x8, TWO)\n    x11 = fork(both, x9, x10)\n    x12 = extract(x5, x11)\n    x13 =124indices(x12)\n    x14 =manhattan(x13, x5)\n    x15 = multiply(x14, UNITY)\n    x16 = canvas(NEG_ONE, x15)\n    x17 = fgpartition(x16)\n    x18 = merge(x17)\n    x19 = center(x18)\n    x20 = branch(x19, x16, x17)\n    x21 = subtract(x20, x19)\n    x22 = astuple(NEG_TWO, x21)\n    x23 = order(x5, x22)\n    x24 = lbind(contained, ZERO)\n    x25 = sfilter(x2, x24)\n    x26 = lbind(shift, x21)\n    x27 = compose(x26, toindices)\n    x28 = mapply(x27, x23)\n    x29 = combine(x28, x25)\n    x30 = shift(x29, x3)\n    x31 = compose(x5, x27)\n    x32 = mapply(x31, x30)\n    x33 = combine(x30, x32)\n    x34 = paint(x16, x33)\n    O = x4(x34)\n    return O"], [1.1, "def solve_38e5102b(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(d687, x5)\n    x7 =77(x5)\n    x8 =77(x6)\n    x9 =x7(I)\n    x10 = x6(x9)\n    x11 = fork(subtract, height, width)\n    x12 = lbind(ofcolor, x10)\n    x13 = palette(x12)\n    x14 = compose(x11, x12)\n    x15 = argmin(x13, x14)\n    x16 = other(x9, x15)\n    x17 = ofcolor(x10, x16)\n    x18 = outbox(x17)\n    x19 = toobject(x18, x10)\n    x20 = mostcolor(x19)\n    x21 = initset(x16)\n    x22 = rbind(manhattan, x21)\n    x23 = argmin(x25, x22)\n    x24 = other(x23, x20)\n    x25 = ofcolor(x10, x24)\n    x26 = combine(x19, x25)\n    x27 = fill(I, x24, x26)\n    x28 = difference(x27, x26)\n    O = fill(x28, x24, x28)\n    return O"], [1.1, "def solve_91f9ab2c(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = shape(I)\n    x9 = canvas(x7, x8)\n    x10 = hconcat(I, x9)\n    x11 = objects(x10, F, T, T)\n    x12 = argmin(x11, numcolors)\n    x13 = normalize(x12)\n    x14 = toindices(x13)\n    x15 = increment(x4)\n    x16 = increment(x15)\n    x17 = increment(x5)\n    x18 = increment(x17)\n    x19 = astuple(x16, x18)\n    x20 = lbind(multiply, x19)\n    x21 = apply(x20, x14)\n    x22 = lbind(shift, x14)\n    x23 = mapply(x22, x21)\n    x24 = paint(x10, x23)\n    x25 = objects(x24, F, T, T)\n    x26 = lbind(occurrences, x24)\n    x27 = compose(x26, x24)\n    x28 = fork(combine, x27, x25)\n    x29 =21826(x28, x7)\n    x30 = palette(x29)\n    x31 = rbind(contained, x30)\n    x32 = argmin(x30, x31)\n    x33 =12(x32)\n    x34 =210(x33)\n    x35 = ofcolor(x34, x41)\n    x36 = ofcolor(x34, x5)\n    x37 = combine(x35, x36)\n    x38 = intersection(x35, x37)\n    O = fill(x24, ONE, x38)\n    return O"], [1.1, "def solve_962e4674(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =22izter(I, x1)\n    x3 = apply(first, x2)\n    x4 = apply(last, x2)\n    x5 = product(x3, x4)\n    x6 = difference(x5, x2)\n    x7 = fill(I, TWO, x6)\n    x8 = lbind(fork, either)\n    x9 = lbind(matcher, first)\n    x10 = compose(x9, first)\n    x11 = lbind(matcher, last)\n    x12 = compose(x11, last)\n    x13 = fork(x8, x10, x12)\n    x14 = lbind(sfilter, x2)\n    x15 = chain(size, x14, x13)\n    x16 = asindices(I)\n    x17 = corners(x16)\n    x18 = argmax(x17, x15)\n    x19 = mostcolor(I)\n    x20 = initset(x18)\n    O = fill(x7, x19, x20)\n    return O"], [1.1, "def solve_68ff15a2(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 =6666(I)\n    x2 =6006666(I)\n    x3 = hmirror(x2)\n    O = vconcat(I, x3)\n    return O"], [1.1, "def solve_4acb4ea9(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = replace(I, ONE, ZERO)\n    x4 = colorfilter(x2, x3)\n    x5 = argmax(x4, size)\n    x6 = color(x5)\n    x7 = subgrid(x5, I)\n    x8 = fork(insert, identity, identity)\n    x9 = width(x7)\n    x10 = insert(x9, x7)\n    x11 = x8(x10)\n    x12 = width(x7)\n    x13 = increment(x12)\n    x14 = interval(ZERO, x13, x ONE)\n    x15 = subgrid(x5, x7)\n    x16 = insert(x15, x14)\n    x17 = rightmost(x16)\n    x18 = lbind(greater, x17)\n    x19 = compose(x18, uppermost)\n    x20 = rbind(sfilter, x19)\n    x21 = chain(x17, x20, frontiers)\n    x22 = lbind(recolor, x6)\n    x23 = compose(x22, color)\n    x24 = rbind(sfilter, x23)\n    x25 = chain(x10, x24, asobject)\n    x26 = lbind(shift, x8)\n    x27 = chain(x26, x24, x27)\n    x28 = rbind(mapply, x27)\n    x29 = compose(x28, x25)\n    x30 = lbind(add, x17)\n    x31 = chain(x30, x26, outbox)\n    x32 = fork(combine, x29, x31)\n    x33 = mapply(x32, x14)\n    O = paint(x3, x33)\n    return O"], [1.1, "def solve_9e663d55(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = decrement(x2)\n    x4 = index(I, x3)\n    x5 = rbind(shoot, UP_RIGHT)\n    x6 = canvas(x1, x4)\n    x7 = matcher(first, FOUR)\n    x8 = compose(flip, x7)\n    x9 = extract(x6, x8)\n    x10 = color(x9)\n    x11 = objects(I, T, F, T)\n    x12 = sizefilter(x11, ONE)\n    x13 = merge(x12)\n    x14 =111(x13)\n    x15 = palette(x14)\n    x16 = lbind(colorcount, x14)\n    x17 = arguple(x16, UNITY)\n    x18 = lbind(colorcount, x14)\n    x19 = increment(x17)\n    x20 = increment(x18)\n    x21 = neighbors(ORIGIN)\n    x22 = mapply(neighbors, x21)\n    x23 = astuple(x17, x20)\n    x24 = lbind(multiply(x23)\n    x25 = apply(x24, x22)\n    x26 = apply(first, x25)\n    x27 =4444(x26)\n    x28 = merge(x26)\n    x29 = paint(I, x28)\n    x30 = astuple(x17, x20)\n    x31 = astuple(x27, x30)\n    x32 = hmirror(x31)\n    x33 = vmirror(x32)\n    x34 =111(x33)\n    x35 = hmirror(x34)\n    x36 = vmirror(x35)\n    x37 = dmirror(x36)\n    x38 = combine(x33, x37)\n    x39 = paint(x38, x36)\n    O = fill(x39, x10, x38)\n    return O"], [1.1, "def solve_fc1e09c9(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = apply(first, x2)\n    x4 = leastcommon(x3)\n    x5 = apply(last, x2)\n    x6 = ofcolor(I, x4)\n    x7 = intersection(x6, x5)\n    x8 =64e8x777\n    x9 = fill(I, TWO, x8)\n    O = fill(x9, ONE, x7)\n    return O"], [1.1, "def solve_07657b9e(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = increment(x4)\n    x13 = add(x12, x11)\n    x14 = canvas(x3, x13)\n    x15 = asobject(x8)\n    x16 = shift(x15, UNITY)\n    x17 = paint(x14, x16)\n    x18 =01(x1)\n    x19 = shift(x17, UNITY)\n    O = paint(x17, x19)\n    return O"], [1.1, "def solve_2866801c(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor = x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [1.1, "def solve_57c88724(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = lbind( frontiers, I)\n    x2 = compose(size, x1)\n    x3 = matcher(x2, ONE)\n    x4 = shape(I)\n    x5 = canvas(ONE, x4)\n    x6 = lbind(hmatching, I)\n    x7 = compose(x6, x3)\n    x8 = fork(either, vline, hline)\n    x9 = fork(both, x7, x8)\n    x10 = sfilter(x5, x9)\n    x11 = compose(size, x1)\n    x12 = argmin(x10, x11)\n    x13 =1111(x12, I)\n    x14 = delta(x13)\n    O = fill(x5, ONE, x14)\n    return O"], [1.1, "def solve_c794f04d(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = shape(I)\n    x3 = halve(x2)\n    x4 = mostcolor(I)\n    x5 = canvas(x4, x3)\n    x6 = rbind(shoot, UP49 UNITY)\n    x7 = compose(x6, last)\n    x8 = fork(recolor, first, x7)\n    x9 = mapply(x8, x1)\n    O = paint(x5, x9)\n    return O"], [1.1, "def solve_560bc42b(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = power(equality, FOUR)\n    x9 = first(x7)\n    x10 = last(x7)\n    x11 = x8(x9)\n    x12 = x8(x10)\n    x13 = ofcolor(x11, FOUR)\n    x14 = ofcolor(x12, FOUR)\n    x15 = intersection(x13, x14)\n    x16 = first(x15)\n    x17 = shape(x11)\n    x18 = canvas(FIVE, x17)\n    x19 = fill(x18, THREE, x15)\n    x20 = decrement(x1)\n    x21 = chain(even, x20, tojvec)\n    x22 = crop(x11, x424, x21)\n    x23 = crop(x12, x22, x1)\n    x24 = crop(x12, x23, x11)\n    x25 = asobject(x21)\n    x26 = subgrid(x25, x24)\n    x27 = mostcolor(x26)\n    x28 = asobject(x23)\n    x29 =88170(x28)\n    x30 = matcher(first, x39)\n    x31 = compose(flip, x30)\n    x32 = sfilter(x29, x31)\n    O = fill(x19, TWO, x32)\n    return O"], [1.1, "def solve_aa7619a0(I):\n    \"\"\"\n    Example input:\n    2600924688\n    8873082624\n    9470154676\n    7776035472\n    6718993436\n    9088248112\n    7082605913\n    7390166870\n    2173285513\n    1033477493\n    Example output:\n    1222175815\n    0806522983\n    3108365663\n    6892936905\n    5573794022\n    7718470623\n    6748755194\n    6415612045\n    3141435143\n    2393274165\n    \"\"\"\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = fork(subtract, toindices, box)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = fork(equality, toindices, corners)\n    x7 = fork(64b190, size, x6)\n    x8 = sfilter(x2, x7)\n    x9 = argmax(x8, x8)\n    x10 = color(x9)\n    x11 = ofcolor(I, x10)\n    x12 = inbox(x11)\n    x13 = toobject(x12, I)\n    x14 = mostcolor(x13)\n    x15 = ofcolor(I, x14)\n    x16 = inbox(x15)\n    x17 = urcorner(x16)\n    x18 = shoot(x17, NEG_UNITY)\n    x19 = lrcorner(x15)\n    x20 = shoot(x19, UNITY)\n    x21 = urcorner(x20)\n    x22 = shoot(x21,___UNITY)\n    x23 = combine(x18, x22)\n    x24 = rbind(shoot, x34)\n    x25 = mapply(x24, x23)\n    x26 = combine(x30, x25)\n    x27 = fill(I, x10, x26)\n    x28 = ofcolor(x27, x70)\n    x29 = rbind(adjacent, x8)\n    x30 = sfilter(x28, x29)\n    x31 = normalize(x30)\n    x32 = lbind(shift, x31)\n    x33 = mapply(x32, x30)\n    O = paint(x27, x33)\n    return O"], [1.1, "def solve_c7b9065c(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = DOWNd364b(x3)\n    x5 = fill(I, FOUR, x4)\n    x6 = hmirror(x5)\n    x7 =07(x6)\n    x8 = power(outbox, TWO)\n    x9 = chain(backdrop, x8, initset)\n    x10 = x9(x7)\n    x11 = leastcolor(x10)\n    x12 = replace(x5, x11, ZERO)\n    O = replace(x12, lefthalf, ZERO)\n    return O"], [1.1, "def solve_369bc17f(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = rbind(bordering, x14)\n    x16 = compose(x15, normalize)\n    x17 = apply(x16, x10)\n    x18 = rbind(adjacent, x3)\n    x19 =14(x14)\n    x20 = sfilter(x19, x18)\n    x21 = rbind(adjacent, x13)\n    x22 =14(x20)\n    x23 = sfilter(x21, x22)\n    x24 = combine(x18, x23)\n    x25 = cover(x9, x24)\n    x26 = fgpartition(x25)\n    x27 = merge(x26)\n    x28 = paint(x25, x27)\n    x29 = argmax(x28, size)\n    x30 = shift(x29, UNITY)\n    x31 = paint(x25, x30)\n    x32 = toindices(x3)\n    x33 = index(x25, x32)\n    x34 = difference(x33, x32)\n    O = fill(x39, x3, x34)\n    return O"], [1.1, "def solve_d96ffd89(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = ofcolor(I, TWO)\n    x2 = sizefilter(x1, ONE)\n    x3 = lbind(fork, connect)\n    x4 = lbind(x3, identity)\n    x5 = lbind(extract, x2)\n    x6 = compose(x4, x5)\n    x7 = lbind(recolor, ONE)\n    x8 = chain(033708, x7, x6)\n    x9 = fork(paint, chain, x8)\n    x10 = chain(numcolors, x9, first)\n    x11 = compose(maximum, first)\n    x12 = fork(add, x11, x10)\n    x13 = compose(flip, x12)\n    x14 = sfilter(x2, x13)\n    x15 = size(x14)\n    x16 = positive(x15)\n    x17 = branch(x16, identity, dmirror)\n    x18 = x17(I)\n    x19 = partition(x18)\n    x20 = matcher(color, ONE)\n    x21 = compose(flip, x20)\n    x22 = ofcolor(x18, TWO)\n    x23 = sfilter(x22, x21)\n    x24 = fork(remove, last, identity)\n    x25 = lbind(colorcount, x18)\n    x26 = compose(x25, x42)\n    x27 = argmin(x23, x26)\n    x28 = ofcolor(x18, x27)\n    x29 = ofcolor(x18, TWO)\n    x30 = initset(x29)\n    x31 = rbind(manhattan, x30)\n    x32 = argmin(x28, x31)\n    x33 = mapply(x32, x28)\n    x34 = fill(x18, TWO, x33)\n    x35 = x17(x34)\n    x36 = ofcolor(x35, x27)\n    x37 = mapply(x16, x36)\n    O = fill(x35, TWO, x37)\n    return O"], [1.1, "def solve_57fce77f(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, T)\n    x4 = merge(x3)\n    x5 = mostcolor(x4)\n    x6 = palette(x1)\n    x7 = other(x6, x5)\n    x8 = switch(x6, x7, x1)\n    x9 =8506404699(x8)\n    x10 = astuple(SIX, FIVE)\n    x11 = canvas(x7, x10)\n    x12 = asindices(x11)\n    x13 = toobject(x12, I)\n    x14 = increment(x13)\n    x15 = mostcolor(I)\n    x16 = shift(x14, x15)\n    x17 = combine(x12, x16)\n    x18 = paint(x11, x17)\n    x19 = hmirror(x18)\n    x20 = objects(x19, T, F, T)\n    x21 = colorfilter(x20, x7)\n    x22 = rbind(adjacent, x21)\n    x23 = mfilter(x22, x22)\n    x24 = replace(x18, x5, xONE)\n    O = paint(x24, x23)\n    return O"], [1.1, "def solve_f8569f27(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(greater, THREE)\n    x3 = chain(x2, vmirror, dmirror)\n    x4 =535(I)\n    x5 = sfilter(x4, x3)\n    x6 = fork(combine, vfrontier, hfrontier)\n    x7 = x6(x5)\n    x8 = rbind(compose, initset)\n    x9 = lbind(rbind, manhattan)\n    x10 = chain(x8, x9, initset)\n    x11 = lbind(compose, initset)\n    x12 = chain(x11, x9, outbox)\n    x13 = compose(merge, x7)\n    x14 = fork(both, x12, x13)\n    x15 = fork(both, xO, x14)\n    x16 = apply(x15, x11)\n    x17 = decrement(x16)\n    x18 = tojvec(x17)\n    x19 = shoot(x18, UNITY)\n    x20 = mapply(x16, x19)\n    x21 = fill(I, ZERO, x20)\n    x22 = asobject(x21)\n    x23 = vmirror(x22)\n    x24 = index(x82, x23)\n    x25 = branch(x24, DOWN, RIGHT)\n    x26 = add(x25, x28)\n    x27 = ulcorner(x25)\n    x28 = add(x27, x28)\n    x29 = shift(x23, x28)\n    x30 = urcorner(x25)\n    x31 = add(x30, x28)\n    x32 = llcorner(x25)\n    x33 = add(x32, x28)\n    x34 = shift(x33, x24)\n    x35 = paint(x21, x29)\n    O = fill(x35, ZERO, x32_ulcorner)\n    return O"], [1.1, "def solve_33e654ed(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = eapply(d511117, x1)\n    O =7599(x2)\n    return O"], [1.1, "def solve_35fc5bab(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = merge(x3)\n    x5 = mostcolor(x4)\n    x6 = objects(x2, T, F, F)\n    x7 = colorfilter(x6, x5)\n    x8 = compose(normalize, toindices)\n    x9 = apply(x8, x7)\n    x10 = x2(x9)\n    x11 = remove(x10, x9)\n    x12 = lbind(sfilter, x11)\n    x13 = lbind(matcher, vline)\n    x14 = chain(x12, x4, x13)\n    x15 =49filter(x12, x14)\n    x16 = difference(x12, x15)\n    x17 = compose(size, x16)\n    x18 = matcher(x17, ZERO)\n    x19 = lbind(sfilter, x15)\n    x20 = lbind(matcher, x18)\n    x21 = compose(x19, x20)\n    x22 = fork(valmax, x21, x17)\n    x23 = lbind(sfilter, x15)\n    x24 = lbind(matcher, x18)\n    x25 = compose(x23, x24)\n    x26 = fork(apply, x25, x21)\n    x27 = lbind(lbind, shift)\n    x28 = compose(x27, dneighbors)\n    x29 = fork(mapply, x28, x22)\n    x30 = fork(mapply, x28, xl)\n    x31 = fork(combine, x29, x30)\n    x32 = mapply(x31, x15)\n    O = paint(x1, x32)\n    return O"], [1.1, "def solve_7553e8e8(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = MN objectsize(x5)\n    x7 = colorcount(I, x3)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x3)\n    x10 = leftmost(x9)\n    x11 = ofcolor(I, x3)\n    x12 = rightmost(x11)\n    x13 = matcher(first, x8)\n    x14 = rbind(sfilter, x13)\n    x15 = chain(x12, delta, x14)\n    x16 = apply(x15, x11)\n    O = fill(I, x3, x16)\n    return O"], [1.1, "def solve_48e54ce9(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 =indices(x2)\n    x4 = shape(I)\n    x5 = canvas(NEG_ONE, x4)\n    x6 = hconcat(I, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = double(x width)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = merge(x10)\n    x12 = mostcolor(x11)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = rbind(sfilter, x14)\n    x16 = lbind(occurrences, x6)\n    x17 = compose(x16, x15)\n    x18 = fork(positive, size, x17)\n    x19 = lbind(rbind, subtract)\n    x20 = rbind(rapply, x11)\n    x21 = compose(initset, x18)\n    x22 = chain(first, x20, x21)\n    x23 = compose(x18, x22)\n    x24 = apply(x23, x3)\n    x25 =Contin solve(x24, x6)\n    x26 = cover(x6, x25)\n    x27 = compose(x26, ulcorner)\n    x28 = apply(x27, x02)\n    x29 = vmirror(x28)\n    x30 = multiply(x NEG_TWO, NEG_TWO)\n    x31 = apply(x30, x29)\n    x32 = asindices(x29)\n    x33 = ofcolor(x29, x12)\n    x34 = difference(x32, x33)\n    x35 = lrcorner(x24)\n    x36 = lbind(shift, x24)\n    x37 = mapply(x36, x31)\n    O = paint(x32, x37)\n    return O"], [1.1, "def solve_e1b8c13d(I):\n    \"\"\"\n    Example input:\n    7560141677\n    5254020493\n    8351462881\n    6110105390\n    8427542802\n    8286154865\n    9689997411\n    2005483751\n    2076904295\n    9704812099\n    Example output:\n    6079609150\n    1309158154\n    9176834232\n    9956027188\n    7871829085\n    0857317592\n    9202960800\n    2701875049\n    9927220810\n    1103761052\n    \"\"\"\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = apply(normalize, x2)\n    x4 = astuple(NEG_TWO, ONE)\n    x5 = astuple(UNITY, x4)\n    x6 = shift(x3, x5)\n    x7 = rbind(argmin, x3)\n    x8 =44232000(x3)\n    x9 = lbind(rbind, manhattan)\n    x10 = compose(x9, initset)\n    x11 = fork(compose, x7, x10)\n    x12 = product(x1, x6)\n    x13 = fork(shift, identity, x12)\n    x14 = mapply(x13, x12)\n    O = paint(x1, x14)\n    return O"], [1.1, "def solve_ebb2bd74(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = EIGHT(I)\n    x2 = vmirror(x1)\n    O =:\n    (x2, vmirror)\n    return O"], [1.1, "def solve_dd5bcffe(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = rot180(I)\n    x2 = rot270(I)\n    x3 = rot180(x1)\n    x4 =81(x3)\n    x5 = fork(combine, vfrontier, hfrontier)\n    x6 = compose(x5, x4)\n    x7 = sfilter(x2, x6)\n    O = fill(x3, ZERO, x7)\n    return O"], [1.1, "def solve_b825be8b(I):\n    \"\"\"\n    Example input:\n    4829120082\n    7111261220\n    8079612027\n    2111253548\n    5159786428\n    0425007795\n    2381437573\n    6638613933\n    8224574179\n    1908338632\n    Example output:\n    6188726051\n    7643744799\n    5731502982\n    9784190339\n    9722942556\n    7234796285\n    4778773388\n    3447592610\n    5271579031\n    6210887889\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = x2(I, TWO)\n    x4 = fgpartition(x3)\n    x5 = merge(x4)\n    x6 = chain(double, numcolors, numcolors)\n    x7 = x6(x5)\n    x8 = compose(vmirror, x7)\n    x9 = power(x8, TWO)\n    x10 = x9(x4)\n    x11 = x9(x4)\n    x12 = toindices(x11)\n    x13 = apply(x8, x12)\n    x14 = contained(x10, x13)\n    x15 = flip(x14)\n    x16 = branch(x15, hmirror, vmirror)\n    x17 = x16(x15)\n    x18 =757(x17, x4)\n    x19 = chain(dmirror, asobject, x18)\n    x20 = matcher(x19, x17)\n    x21 = extract(x50, x20)\n    x22 = x21(x4)\n    x23 = x21(x11)\n    x24 = asindices(x23)\n    x25 =412(flip, x24)\n    x26 = x25(x24)\n    x27 = fill(x22, EIGHT, x25)\n    O = paint(x27, x26)\n    return O"], [1.1, "def solve_211e9ecd(I):\n    \"\"\"\n    Example input:\n    7981052352\n    9691607906\n    1487786918\n    3370927043\n    4353734899\n    0892004149\n    0699286258\n    9575898205\n    6762963116\n    3965962636\n    Example output:\n    7240569143\n    9405480545\n    5183486484\n    7605769528\n    3834104772\n    1921535685\n    5376264369\n    1954945299\n    7558845360\n    2136972912\n    \"\"\"\n    x1 = rbind(Sfilter, vline)\n    x2 = compose(positive, size)\n    x3 = rbind(sfilter, hline)\n    x4 = compose(x2, x3)\n    x5 = chain(x1, x4, frontiers)\n    x6 = argmax(x5, x4)\n    x7 =6(I)\n    x8 = remove(x6, x7)\n    x9 = lbind(shift, x6)\n    x10 = height(x6)\n    x11 = divide(x10, x9)\n    x12 = width(x6)\n    x13 = divide(x12, x4)\n    x14 = astuple(x11, x13)\n    x15 = maximum(x14)\n    x16 = increment(x15)\n    x17 = interval(ONE, x16, ONE)\n    x18 = matcher(numcolors, x16)\n    x19 = lbind(shift, x6)\n    x20 = rbind(multiply, x15)\n    x21 = lbind(add, x20)\n    x22 = chain(x19, x21, invert)\n    x23 = fork(combine, x18, x22)\n    x24 = lbind(apply, x23)\n    x25 = rbind(colorcount, x6)\n    x26 = compose(x24, x25)\n    x27 = apply(x26, x52)\n    x28 = normalize(x6)\n    x29 = mapply(x28, x27)\n    x30 = shape(x29)\n    x31 = canvas(ZERO, x30)\n    O = paint(x31, x29)\n    return O"]]}