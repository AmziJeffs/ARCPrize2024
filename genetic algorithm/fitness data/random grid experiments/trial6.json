{"d56f2372": [[0.29037478188052895, "def solve_6c8d2a06(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, T, F, F)\n    x6 = rbind(colorcount, ONE)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.29706172839506173, "def solve_a0f968c0(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.29706172839506173, "def solve_b546c6bd(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.29706172839506173, "def solve_71221886(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.3040587683921017, "def solve_02612f31(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [0.31036002669336005, "def solve_8abdcc84(I):\n    x1 = objects(I, T, F, F)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = lbind(chain, positive)\n    x6 = lbind(x5, size)\n    x7 = rbind(compose, backdrop)\n    x8 = lbind(lbind, intersection)\n    x9 = chain(x6, x7, x8)\n    x10 = chain(x9, backdrop, outbox)\n    x11 = lbind(sfilter, x4)\n    x12 = compose(x11, x10)\n    x13 = chain(positive, size, x12)\n    x14 = sfilter(x4, x13)\n    x15 = compose(merge, x12)\n    x16 = apply(x15, x14)\n    x17 = rbind(subgrid, I)\n    x18 = apply(x17, x16)\n    x19 = merge(x16)\n    x20 = palette(x19)\n    x21 = lbind(colorcount, x19)\n    x22 = argmin(x20, x21)\n    x23 = rbind(colorcount, x22)\n    O = argmax(x18, x23)\n    return O"], [0.32625362023912746, "def solve_cd8377b8(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = subgrid(x20, I)\n    x22 = switch(x21, x18, x19)\n    x23 = replace(x22, x18, x4)\n    x24 = lbind(downscale, x23)\n    x25 = fork(upscale, x24, identity)\n    x26 = matcher(x25, x23)\n    x27 = shape(x23)\n    x28 = maximum(x27)\n    x29 = interval(ONE, x28, ONE)\n    x30 = sfilter(x29, x26)\n    x31 = maximum(x30)\n    O = downscale(x23, x31)\n    return O"], [0.3346827117477524, "def solve_5c588e1a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_7d1e61c4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_9f10e83b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_c98899f1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_75cfeb54(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_0f688366(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_cb1026e1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_7a1dddd4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.3346827117477524, "def solve_3dd0e274(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.4093797170990154, "def solve_cff8ce5e(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = valmax(x2, shape)\n    x4 = canvas(x1, x3)\n    x5 = apply(normalize, x2)\n    x6 = lbind(subtract, x3)\n    x7 = chain(halve, x6, shape)\n    x8 = fork(shift, identity, x7)\n    x9 = mapply(x8, x5)\n    O = paint(x4, x9)\n    return O"], [0.41699831998382725, "def solve_9418cabd(I):\n    x1 = initset(ORIGIN)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.41699831998382725, "def solve_ea44bb60(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.41699831998382725, "def solve_4add9518(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.41699831998382725, "def solve_4b8b40a0(I):\n    x1 = width(I)\n    x2 = astuple(NINE, x1)\n    x3 = canvas(ZERO, x2)\n    x4 = vconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = rbind(colorcount, TWO)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.41971940137157526, "def solve_7988cc7f(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, size)\n    x3 = subgrid(x2, I)\n    O = trim(x3)\n    return O"], [0.42660068541227963, "def solve_5020f3c5(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = astuple(FOUR, FOUR)\n    x4 = ofcolor(x1, ZERO)\n    x5 = ofcolor(x2, ZERO)\n    x6 = intersection(x4, x5)\n    x7 = canvas(ZERO, x3)\n    O = fill(x7, THREE, x6)\n    return O"], [0.4464086780662446, "def solve_c63a7545(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = subgrid(x2, I)\n    x4 = lefthalf(x3)\n    O = tophalf(x4)\n    return O"], [0.4559751358985313, "def solve_d66db884(I):\n    x1 = palette(I)\n    x2 = contained(ONE, x1)\n    x3 = contained(TWO, x1)\n    x4 = branch(x2, UNITY, TWO_BY_TWO)\n    x5 = branch(x3, RIGHT, x4)\n    x6 = fork(combine, vfrontier, hfrontier)\n    x7 = x6(x5)\n    x8 = canvas(ZERO, THREE_BY_THREE)\n    O = fill(x8, FIVE, x7)\n    return O"], [0.47145600561542583, "def solve_6762fa62(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.47145600561542583, "def solve_f8b63e1f(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.4725027588082295, "def solve_468204d3(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.4725027588082295, "def solve_c0f08e67(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.47364664791178007, "def solve_4858c5b1(I):\n    x1 = astuple(ONE, THREE)\n    x2 = size(x1)\n    x3 = decrement(x2)\n    x4 = canvas(ZERO, x1)\n    x5 = tojvec(x3)\n    x6 = connect(ORIGIN, x5)\n    x7 = equality(x2, FOUR)\n    x8 = insert(UNITY, x6)\n    x9 = branch(x7, x8, x6)\n    O = fill(x4, TWO, x9)\n    return O"], [0.4744327528950218, "def solve_d9c70a34(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, F, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.47691676185236953, "def solve_2da17ccf(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.4784421882465361, "def solve_ffe25cd0(I):\n    x1 = palette(I)\n    x2 = remove(ONE, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = canvas(x4, THREE_BY_THREE)\n    x6 = colorcount(I, ONE)\n    x7 = decrement(x6)\n    x8 = tojvec(x7)\n    x9 = connect(ORIGIN, x8)\n    x10 = fill(x5, TWO, x9)\n    x11 = initset(UNITY)\n    x12 = equality(x6, FOUR)\n    x13 = branch(x12, x11, x9)\n    O = fill(x10, TWO, x13)\n    return O"], [0.4826994012265918, "def solve_3de58a17(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = mapply(dneighbors, x2)\n    x4 = toobject(x3, I)\n    x5 = mostcolor(x4)\n    x6 = palette(I)\n    x7 = remove(x5, x6)\n    x8 = order(x7, identity)\n    x9 = first(x8)\n    x10 = last(x8)\n    x11 = ofcolor(I, x9)\n    x12 = ofcolor(I, x10)\n    x13 = switch(I, x10, x9)\n    x14 = combine(x11, x12)\n    x15 = subgrid(x14, x13)\n    O = trim(x15)\n    return O"], [0.4892123598355482, "def solve_099cd861(I):\n    x1 = objects(I, T, F, F)\n    x2 = sizefilter(x1, ONE)\n    x3 = apply(color, x2)\n    x4 = difference(x1, x2)\n    x5 = rbind(subgrid, I)\n    x6 = apply(x5, x4)\n    x7 = rbind(colorcount, SIX)\n    x8 = argmax(x6, x7)\n    x9 = mostcolor(x8)\n    O = canvas(x9, UNITY)\n    return O"], [0.49325354355789136, "def solve_d37efd93(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = astuple(ONE, THREE)\n    x8 = size(x6)\n    x9 = order(x6, leftmost)\n    x10 = apply(color, x9)\n    x11 = rbind(canvas, UNITY)\n    x12 = apply(x11, x10)\n    x13 = merge(x12)\n    x14 = dmirror(x13)\n    x15 = subtract(NINE, x8)\n    x16 = astuple(ONE, x15)\n    x17 = mostcolor(I)\n    x18 = canvas(x17, x16)\n    x19 = hconcat(x14, x18)\n    x20 = hsplit(x19, THREE)\n    x21 = merge(x20)\n    x22 = crop(x21, ORIGIN, x7)\n    x23 = crop(x21, DOWN, x7)\n    x24 = crop(x21, TWO_BY_ZERO, x7)\n    x25 = vmirror(x23)\n    x26 = vconcat(x22, x25)\n    O = vconcat(x26, x24)\n    return O"], [0.4954775600294643, "def solve_f3fd0914(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, T, T)\n    x3 = first(x2)\n    x4 = vline(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(x1)\n    x7 = objects(x6, T, T, T)\n    x8 = order(x7, uppermost)\n    x9 = apply(color, x8)\n    x10 = dedupe(x9)\n    x11 = size(x10)\n    x12 = rbind(repeat, x11)\n    O = apply(x12, x10)\n    return O"], [0.49704719435154215, "def solve_3936d83c(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_6ce7e217(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_27616eb4(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_1f621c95(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_2bd5d1be(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_56bd2134(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_ed6b6093(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_de236228(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_693c28fe(I):\n    x1 = rot180(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot180(x2)\n    return O"], [0.49704719435154215, "def solve_2a16f093(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.49704719435154215, "def solve_01bdc5be(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5056030890741036, "def solve_690030d6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.5060421464669482, "def solve_f38fc494(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = ofcolor(x1, ZERO)\n    x4 = ofcolor(x2, ZERO)\n    x5 = intersection(x3, x4)\n    x6 = size(x5)\n    x7 = astuple(FOUR, FOUR)\n    x8 = canvas(THREE, x7)\n    x9 = fill(x8, ZERO, x3)\n    O = fill(x9, TWO, x4)\n    return O"], [0.5307798906710026, "def solve_bc2b4fb8(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5307798906710026, "def solve_bc691e20(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5395814698857562, "def solve_cfb55a72(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    O = rot180(x2)\n    return O"], [0.5502516534918191, "def solve_4bde5106(I):\n    x1 = trim(I)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(ONE, x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = objects(x6, T, F, F)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x5(x10)\n    return O"], [0.5585024261811583, "def solve_db8b69d5(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5585024261811583, "def solve_7b321275(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5585024261811583, "def solve_74f998dd(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5585024261811583, "def solve_f400889a(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5585024261811583, "def solve_d558cb8a(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5652441058672942, "def solve_ffda0447(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = color(x3)\n    x5 = remove(ZERO, x1)\n    x6 = other(x5, x4)\n    O = canvas(x6, UNITY)\n    return O"], [0.5655699956434946, "def solve_9e2c34c7(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = flip(x9)\n    x11 = branch(x10, dmirror, identity)\n    x12 = x11(x8)\n    x13 = objects(x12, T, F, F)\n    x14 = order(x13, leftmost)\n    x15 = apply(color, x14)\n    x16 = repeat(x15, ONE)\n    O = x11(x16)\n    return O"], [0.5766800033031917, "def solve_be5cb8b0(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(equality, toindices, box)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = argmax(x3, x4)\n    x6 = fgpartition(I)\n    x7 = merge(x6)\n    x8 = difference(x7, x5)\n    x9 = subgrid(x5, I)\n    x10 = subgrid(x8, I)\n    x11 = height(x9)\n    x12 = subtract(x11, TWO)\n    x13 = height(x10)\n    x14 = divide(x12, x13)\n    x15 = width(x9)\n    x16 = subtract(x15, TWO)\n    x17 = width(x10)\n    x18 = divide(x16, x17)\n    x19 = hupscale(x10, x18)\n    x20 = vupscale(x19, x14)\n    x21 = asobject(x20)\n    x22 = shift(x21, UNITY)\n    O = paint(x9, x22)\n    return O"], [0.5985774392006277, "def solve_c25334c6(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.5985774392006277, "def solve_f6eab80c(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.5985774392006277, "def solve_46a4c9f5(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.6181018953185965, "def solve_9a5cba85(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_47143755(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_f806b6fc(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_de2b6808(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_77026548(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_dec8195a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_82db253a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_e861c1ef(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_868dbe6e(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_f5bbc6f8(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_3bbd14bd(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_52dd0580(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_716a7ac9(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_5b4c7e19(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6181018953185965, "def solve_7048e271(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6206220158679393, "def solve_eb9f3875(I):\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [0.6291436647232063, "def solve_712908b7(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 =equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_4b1f1373(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6291436647232063, "def solve_4b9b7594(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.6307531254528715, "def solve_fa599f79(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x7, x16)\n    x20 = ofcolor(x8, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, THREE, x21)\n    return O"], [0.6411654239156103, "def solve_c04a553f(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [0.6416977053214553, "def solve_a1e670d5(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.6416977053214553, "def solve_10e9514d(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.6416977053214553, "def solve_e2f23174(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.6477810322403378, "def solve_e41b3a1d(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = ofcolor(x1, ZERO)\n    x4 = ofcolor(x2, ZERO)\n    x5 = intersection(x3, x4)\n    x6 = replace(x1, NINE, ZERO)\n    O = fill(x6, EIGHT, x5)\n    return O"], [0.6572952903476961, "def solve_349a7715(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.6572952903476961, "def solve_e482eab4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.6572952903476961, "def solve_e75095ef(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = objects(x3, T, F, T)\n    x5 = merge(x4)\n    O = paint(x1, x5)\n    return O"], [0.6602138625163511, "def solve_ce729be0(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.6602138625163511, "def solve_81bc7ebf(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.6602138625163511, "def solve_2967c114(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6602138625163511, "def solve_1d95db98(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.6662146786568869, "def solve_1e6984ea(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, vline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = combine(x15, x16)\n    x18 = intersection(x15, x16)\n    x19 = difference(x17, x18)\n    O = fill(x14, THREE, x19)\n    return O"], [0.6978401405853463, "def solve_f68f5a98(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.6978401405853463, "def solve_cc69fd20(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.6978401405853463, "def solve_dd8c3732(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.6978401405853463, "def solve_ea0c1245(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.7046776153928492, "def solve_0c976d01(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.7068705363346716, "def solve_2a19a59b(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, SIX)\n    x3 = compose(flip, x2)\n    x4 = mfilter(x1, x2)\n    x5 = mfilter(x1, x3)\n    x6 = fill(I, TWO, x4)\n    O = fill(x6, ONE, x5)\n    return O"], [0.7092132972493429, "def solve_d0ed3e3d(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [0.7209610573661548, "def solve_15147233(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.7209610573661548, "def solve_d8988e44(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.7209610573661548, "def solve_be7cab67(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = remove(x2, x1)\n    x4 = normalize(x2)\n    x5 = shape(x2)\n    x6 = halve(x5)\n    x7 = invert(x6)\n    x8 = shift(x4, x7)\n    x9 = sizefilter(x3, ONE)\n    x10 = apply(center, x9)\n    x11 = lbind(shift, x8)\n    x12 = mapply(x11, x10)\n    x13 = paint(I, x12)\n    O = rot180(x13)\n    return O"], [0.7218824464135642, "def solve_4266a79b(I):\n    x1 = rot270(I)\n    x2 = fork(equality, toindices, rot90)\n    x3 = rot180(x1)\n    x4 = rot270(x1)\n    x5 = either(x2, x3)\n    x6 = branch(x5, rbind, ONE)\n    x7 = branch(x5, lefthalf, tophalf)\n    x8 = branch(x5, righthalf, bottomhalf)\n    x9 = branch(x5, hconcat, vconcat)\n    x10 = x7(I)\n    x11 = x8(I)\n    x12 = index(x10, ORIGIN)\n    x13 = shape(x11)\n    x14 = decrement(x13)\n    x15 = index(x11, x14)\n    x16 = replace(x10, THREE, x12)\n    x17 = replace(x11, THREE, x15)\n    O = x9(x16, x17)\n    return O"], [0.7220296100651739, "def solve_0a738006(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(add, height, width)\n    x3 = compose(decrement, x2)\n    x4 = fork(equality, size, x3)\n    x5 = fork(difference, toindices, box)\n    x6 = compose(size, x5)\n    x7 = matcher(x6, ZERO)\n    x8 = sfilter(x1, x4)\n    x9 = difference(x1, x8)\n    x10 = sfilter(x9, x7)\n    x11 = merge(x1)\n    x12 = fill(I, TWO, x11)\n    x13 = merge(x8)\n    x14 = fill(x12, ONE, x13)\n    x15 = merge(x10)\n    O = fill(x14, SIX, x15)\n    return O"], [0.7226167626040653, "def solve_830db236(I):\n    x1 = objects(I, T, F, T)\n    x2 = lbind(sfilter, x1)\n    x3 = compose(size, x2)\n    x4 = x3(vline)\n    x5 = x3(hline)\n    x6 = greater(x4, x5)\n    x7 = branch(x6, lefthalf, tophalf)\n    x8 = branch(x6, righthalf, bottomhalf)\n    x9 = branch(x6, hconcat, vconcat)\n    x10 = x7(I)\n    x11 = x8(I)\n    x12 = index(x10, ORIGIN)\n    x13 = shape(x11)\n    x14 = decrement(x13)\n    x15 = index(x11, x14)\n    x16 = replace(x10, THREE, x12)\n    x17 = replace(x11, THREE, x15)\n    O = x9(x16, x17)\n    return O"], [0.7253714992428528, "def solve_532cc8a8(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.7253714992428528, "def solve_72273abc(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.7286997024901773, "def solve_52d4dd56(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = prapply(connect, x2, x2)\n    x4 = fgpartition(I)\n    x5 = merge(x4)\n    x6 = cover(I, x5)\n    x7 = fork(either, hline, vline)\n    x8 = box(x5)\n    x9 = rbind(difference, x8)\n    x10 = chain(positive, size, x9)\n    x11 = fork(both, x7, x10)\n    x12 = mfilter(x3, x11)\n    O = fill(x6, x1, x12)\n    return O"], [0.7289045042337138, "def solve_e4415c36(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.7289045042337138, "def solve_e59a7693(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.7289045042337138, "def solve_e61f52eb(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.7291281817097496, "def solve_d0d9d11c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = sfilter(x1, hline)\n    x5 = size(x4)\n    x6 = positive(x5)\n    x7 = branch(x6, identity, dmirror)\n    x8 = x7(I)\n    x9 = rbind(subgrid, x8)\n    x10 = matcher(color, x3)\n    x11 = compose(flip, x10)\n    x12 = partition(x8)\n    x13 = sfilter(x12, x11)\n    x14 = rbind(ofcolor, x3)\n    x15 = lbind(mapply, vfrontier)\n    x16 = chain(x15, x14, x9)\n    x17 = fork(shift, x16, ulcorner)\n    x18 = fork(intersection, toindices, x17)\n    x19 = mapply(x18, x13)\n    x20 = fill(x8, ZERO, x19)\n    O = x7(x20)\n    return O"], [0.7305542811310891, "def solve_4ad0f610(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = chain(palette, trim, x2)\n    x4 = lbind(contained, THREE)\n    x5 = compose(x4, x3)\n    x6 = fork(add, height, width)\n    x7 = compose(decrement, x6)\n    x8 = fork(equality, size, x7)\n    x9 = mfilter(x1, x5)\n    x10 = mfilter(x1, x8)\n    x11 = replace(I, THREE, SIX)\n    x12 = fill(x11, TWO, x9)\n    O = fill(x12, ONE, x10)\n    return O"], [0.7305542811310891, "def solve_676acfd6(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = chain(palette, trim, x2)\n    x4 = lbind(contained, THREE)\n    x5 = compose(x4, x3)\n    x6 = fork(add, height, width)\n    x7 = compose(decrement, x6)\n    x8 = fork(equality, size, x7)\n    x9 = mfilter(x1, x5)\n    x10 = mfilter(x1, x8)\n    x11 = replace(I, THREE, SIX)\n    x12 = fill(x11, TWO, x9)\n    O = fill(x12, ONE, x10)\n    return O"], [0.7327606579059885, "def solve_f20dc35f(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.7328950067132097, "def solve_b29df95f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.7328950067132097, "def solve_c5df6a75(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.7361102977736663, "def solve_a1393f8c(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = astuple(SIX, THREE)\n    x6 = astuple(FOUR, EIGHT)\n    x7 = astuple(ONE, TWO)\n    x8 = initset(x5)\n    x9 = insert(x6, x8)\n    x10 = insert(x7, x9)\n    x11 = mapply(x4, x10)\n    O = paint(I, x11)\n    return O"], [0.739396261410893, "def solve_30668c56(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.739396261410893, "def solve_16daba00(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.739396261410893, "def solve_0d7588db(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, TWO, x3)\n    return O"], [0.739396261410893, "def solve_3c888f24(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.7410606318002912, "def solve_7eb304f9(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = height(x2)\n    x4 = height(I)\n    x5 = interval(ZERO, x4, x3)\n    x6 = lbind(shift, x2)\n    x7 = compose(x6, toivec)\n    x8 = compose(x7, invert)\n    x9 = fork(combine, x7, x8)\n    x10 = mapply(x9, x5)\n    O = paint(I, x10)\n    return O"], [0.7411341780448716, "def solve_c118dc2c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7411341780448716, "def solve_c52c0925(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7411341780448716, "def solve_c74814de(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7413614427731575, "def solve_7e0960ce(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = lbind(greater, THREE)\n    x4 = compose(x3, size)\n    x5 = sfilter(x2, x4)\n    x6 = mapply(toindices, x5)\n    x7 = fill(I, x1, x6)\n    x8 = objects(x7, T, F, T)\n    x9 = fork(recolor, color, backdrop)\n    x10 = mapply(x9, x8)\n    O = paint(x7, x10)\n    return O"], [0.7414654147115858, "def solve_ca6a9b87(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7414654147115858, "def solve_f1c7bbbd(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.7414654147115858, "def solve_54436cb3(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_e71f7902(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_b54d0461(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7414654147115858, "def solve_c83601ce(I):\n    O = replace(I, FOUR, NEG_ONE)\n    return O"], [0.7414654147115858, "def solve_ecdc6445(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7414654147115858, "def solve_e12b3625(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_f878706b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7414654147115858, "def solve_5447fdea(I):\n    x1 = asindices(I)\n    x2 = shape(I)\n    x3 = halve(x2)\n    x4 = connect(ORIGIN, x3)\n    x5 = height(x4)\n    x6 = halve(x5)\n    x7 = width(x4)\n    x8 = halve(x7)\n    x9 = tojvec(x8)\n    x10 = height(x4)\n    x11 = decrement(x10)\n    x12 = lbind(astuple, x11)\n    x13 = rbind(shoot, x9)\n    x14 = compose(x12, x13)\n    x15 = fork(combine, x14, last)\n    x16 = apply(x15, x4)\n    O = fill(I, ZERO, x16)\n    return O"], [0.7414654147115858, "def solve_1a66c75a(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = fill(I, x8, x32)\n    return O"], [0.7414654147115858, "def solve_11c7f307(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.7414654147115858, "def solve_ba1de0a8(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7414654147115858, "def solve_b4252d0c(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7414654147115858, "def solve_21c5f80a(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7414654147115858, "def solve_0bea6a70(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.741575878420431, "def solve_cf5f3182(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = astuple(x1, ONE)\n    x8 = astuple(ONE, x2)\n    x9 = decrement(x1)\n    x10 = decrement(x2)\n    x11 = toivec(x10)\n    x12 = tojvec(x9)\n    x13 = crop(I, x11, x8)\n    x14 = crop(I, x12, x7)\n    x15 = asobject(x14)\n    x16 = asobject(x13)\n    x17 = vperiod(x15)\n    x98 = hperiod(x16)\n    x99 = astuple(x17, x98)\n    x10 = lbind(multiply, x10)\n    x11 = neighbors(ORIGIN)\n    x12 = mapply(neighbors, x11)\n    x13 = apply(x10, x12)\n    x14 = lbind(shift, x6)\n    x15 = mapply(x14, x13)\n    O = paint(I, x15)\n    return O"], [0.7416653922422002, "def solve_14ef5834(I):\n    x1 = shape(I)\n    x2 = canvas(ZERO, x1)\n    x3 = hconcat(I, x2)\n    x4 = objects(x3, F, F, T)\n    x5 = matcher(color, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = sizefilter(x7, ONE)\n    x9 = merge(x8)\n    O = fill(I, ONE, x9)\n    return O"], [0.7417579528548929, "def solve_52bcda1e(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = prapply(connect, x2, x2)\n    x4 = rbind(greater, ONE)\n    x5 = compose(x4, size)\n    x6 = sfilter(x3, x5)\n    x7 = fork(either, vline, hline)\n    x8 = mfilter(x6, x7)\n    x9 = fill(I, THREE, x8)\n    x10 = leastcolor(I)\n    O = fill(x9, x10, x2)\n    return O"], [0.7418199067909033, "def solve_7fa510ce(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = frontiers(I)\n    x6 = colorfilter(x5, x4)\n    x7 = size(x6)\n    x8 = positive(x7)\n    x9 = branch(x8, dmirror, identity)\n    x10 = ofcolor(I, x4)\n    x11 = ofcolor(I, TWO)\n    x12 = ofcolor(I, ONE)\n    x13 = rbind(gravitate, x10)\n    x14 = compose(x13, initset)\n    x15 = fork(add, identity, x14)\n    x16 = fork(connect, identity, x15)\n    x17 = shape(I)\n    x18 = maximum(x17)\n    x19 = lbind(multiply, x18)\n    x20 = lbind(gravitate, x10)\n    x21 = chain(x19, sign, x20)\n    x22 = compose(x21, initset)\n    x23 = fork(add, identity, x22)\n    x24 = fork(connect, identity, x23)\n    x25 = mapply(x16, x11)\n    x26 = mapply(x24, x12)\n    x27 = fill(I, TWO, x25)\n    O = fill(x27, ONE, x26)\n    return O"], [0.7418642138333315, "def solve_f83f9a53(I):\n    x1 = switch(I, FIVE, EIGHT)\n    O = switch(x1, EIGHT, TWO)\n    return O"], [0.7418642138333315, "def solve_e5b651d8(I):\n    x1 = switch(I, ORIGIN, THREE)\n    x2 = switch(x1, EIGHT, TWO)\n    x3 = switch(x2, TWO, ONE)\n    O = switch(x3, ONE, FOUR)\n    return O"], [0.7419294883893283, "def solve_f2764e95(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_0287bf80(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_d786afa4(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_0ddb2b7b(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_4ea083dd(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_57386026(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_ee2265d2(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_14ef9b6a(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_118e7952(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_49bd86c3(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_113147be(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7419294883893283, "def solve_0289ef55(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7426909638249383, "def solve_014bb1fa(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7426909638249383, "def solve_f66c9b52(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7431714033758151, "def solve_02888a76(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, T)\n    x3 = rbind(objects, F)\n    x4 = rbind(x3, F)\n    x5 = rbind(x4, T)\n    x6 = lbind(canvas, x1)\n    x7 = compose(x6, shape)\n    x8 = fork(paint, x7, normalize)\n    x9 = compose(x5, x8)\n    x10 = fork(colorfilter, x9, color)\n    x11 = rbind(shift, RIGHT)\n    x12 = rbind(argmax, rightmost)\n    x13 = compose(x12, x10)\n    x14 = fork(remove, x13, x10)\n    x15 = chain(x11, merge, x14)\n    x16 = rbind(argmax, rightmost)\n    x17 = compose(x16, x10)\n    x18 = fork(combine, x17, x15)\n    x19 = fork(shift, x18, ulcorner)\n    x20 = merge(x2)\n    x21 = fill(I, x1, x20)\n    x22 = mapply(x19, x2)\n    O = paint(x21, x22)\n    return O"], [0.743417242412885, "def solve_ecf3f142(I):\n    x1 = fork(multiply, height, width)\n    x2 = partition(I)\n    x3 = argmax(x2, x1)\n    x4 = remove(x3, x2)\n    x5 = argmax(x4, x1)\n    x6 = other(x4, x5)\n    x7 = palette(I)\n    x8 = lrcorner(x5)\n    x9 = add(x8, UNITY)\n    x10 = llcorner(x5)\n    x11 = add(x10, DOWN_LEFT)\n    x12 = urcorner(x5)\n    x13 = add(x12, UP_RIGHT)\n    x14 = ulcorner(x5)\n    x15 = add(x14, NEG_UNITY)\n    x16 = shoot(x9, UNITY)\n    x17 = shoot(x11, DOWN_LEFT)\n    x18 = shoot(x13, UP_RIGHT)\n    x19 = shoot(x15, NEG_UNITY)\n    x20 = combine(x16, x17)\n    x21 = combine(x18, x19)\n    x22 = combine(x20, x21)\n    x23 = color(x6)\n    O = fill(I, x23, x22)\n    return O"], [0.744309578111282, "def solve_f6aff4de(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.744309578111282, "def solve_25b71daa(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.744309578111282, "def solve_60b18f38(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.7453226770852263, "def solve_2ee9819a(I):\n    x1 = objects(I, T, F, T)\n    x2 = mapply(delta, x1)\n    O = fill(I, SEVEN, x2)\n    return O"], [0.7454776898542618, "def solve_a2ad9994(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.7457900921401196, "def solve_f5a04b82(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, NEG_ONE, x4)\n    return O"], [0.7459277957144733, "def solve_8bda1693(I):\n    x1 = objects(I, T, F, F)\n    x2 = compose(maximum, shape)\n    x3 = order(x1, x2)\n    x4 = first(x3)\n    x5 = last(x3)\n    x6 = color(x4)\n    x7 = color(x5)\n    x8 = equality(x6, x7)\n    x9 = combine(x4, x5)\n    x10 = repeat(x9, ONE)\n    x11 = remove(x4, x3)\n    x12 = remove(x5, x11)\n    x13 = compose(hfrontier, center)\n    x14 = fork(recolor, color, x13)\n    x15 = mapply(x14, x12)\n    O = paint(I, x15)\n    return O"], [0.746036831698095, "def solve_a4ad214b(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.7461098366866447, "def solve_5dfb35cb(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = rbind(multiply, THREE)\n    x6 = rbind(divide, THREE)\n    x7 = compose(x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = toindices(x4)\n    x10 = compose(x8, last)\n    x11 = sfilter(x9, x10)\n    O = fill(I, SIX, x11)\n    return O"], [0.7462669862994846, "def solve_c31648c7(I):\n    O = dmirror(I)\n    return O"], [0.7464740545096182, "def solve_9b77a7d2(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_44df1595(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_9915a86c(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_c95ea8ea(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_71487622(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_38586d59(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_86516d9c(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_353966b3(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7464740545096182, "def solve_85aa7f23(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7467587450693074, "def solve_92d74748(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(shoot, RIGHT)\n    x4 = compose(x3, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(x1, DOWN_LEFT)\n    x9 = initset(x8)\n    x10 = mostcolor(I)\n    x11 = recolor(x10, x9)\n    x12 = objects(x7, T, F, T)\n    x13 = insert(x11, x12)\n    x14 = order(x13, uppermost)\n    x15 = first(x14)\n    x16 = remove(x11, x14)\n    x17 = remove(x15, x14)\n    x18 = compose(lrcorner, first)\n    x19 = compose(lrcorner, last)\n    x20 = fork(connect, x18, x19)\n    x21 = compose(color, first)\n    x22 = fork(recolor, x21, x20)\n    x23 = pair(x16, x17)\n    x24 = mapply(x22, x23)\n    O = underpaint(x7, x24)\n    return O"], [0.7467587450693074, "def solve_49183c77(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(shoot, RIGHT)\n    x4 = compose(x3, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(x1, DOWN_LEFT)\n    x9 = initset(x8)\n    x10 = mostcolor(I)\n    x11 = recolor(x10, x9)\n    x12 = objects(x7, T, F, T)\n    x13 = insert(x11, x12)\n    x14 = order(x13, uppermost)\n    x15 = first(x14)\n    x16 = remove(x11, x14)\n    x17 = remove(x15, x14)\n    x18 = compose(lrcorner, first)\n    x19 = compose(lrcorner, last)\n    x20 = fork(connect, x18, x19)\n    x21 = compose(color, first)\n    x22 = fork(recolor, x21, x20)\n    x23 = pair(x16, x17)\n    x24 = mapply(x22, x23)\n    O = underpaint(x7, x24)\n    return O"], [0.7476233794761621, "def solve_18b2110e(I):\n    O = rot180(I)\n    return O"], [0.7476233794761621, "def solve_d6948f4e(I):\n    O = rot180(I)\n    return O"], [0.7476233794761621, "def solve_8150f32c(I):\n    O = rot180(I)\n    return O"], [0.7476233794761621, "def solve_d9c50c15(I):\n    O = rot180(I)\n    return O"], [0.7476233794761621, "def solve_f5150224(I):\n    O = rot180(I)\n    return O"], [0.7477556894835988, "def solve_9241658c(I):\n    O = hmirror(I)\n    return O"], [0.7478561079652767, "def solve_a03c489d(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = recolor(ZERO, x2)\n    x4 = normalize(x3)\n    x5 = occurrences(I, x4)\n    x6 = toindices(x4)\n    x7 = lbind(shift, x6)\n    x8 = mapply(x7, x5)\n    O = fill(I, x1, x8)\n    return O"], [0.7480983828045926, "def solve_f0160443(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, last)\n    x5 = fork(recolor, first, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [0.7481170341881848, "def solve_dcaf4aa6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7481170341881848, "def solve_e37c947e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7481170341881848, "def solve_4084e9cd(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7481170341881848, "def solve_6972c097(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7482565735643151, "def solve_6ce84a7d(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_5b6a6a11(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_06858a4e(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_6cef9a04(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_0d6d5f46(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_0f33f28f(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_e586a6ca(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_ec5d73c7(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7482565735643151, "def solve_118cfe50(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7484974551407092, "def solve_f348a2d6(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.7487022635082722, "def solve_e8f97d58(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.7487035816092084, "def solve_c3094d4a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.7487035816092084, "def solve_c178e374(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.7491103860227947, "def solve_edc28001(I):\n    O = rot270(I)\n    return O"], [0.749321253046244, "def solve_76dbc30e(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.749321253046244, "def solve_1337d54c(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.7493770004739405, "def solve_bdbc6c83(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = lbind(recolor, EIGHT)\n    x4 = rbind(ofcolor, x1)\n    x5 = chain(x3, backdrop, x4)\n    x6 = fork(paint, identity, x5)\n    x7 = height(I)\n    x8 = vsplit(I, x7)\n    x9 = mapply(x6, x8)\n    x10 = ofcolor(x9, EIGHT)\n    x11 = dmirror(I)\n    x12 = width(I)\n    x13 = vsplit(x11, x12)\n    x14 = mapply(x6, x13)\n    x15 = dmirror(x14)\n    x16 = ofcolor(x15, EIGHT)\n    x17 = combine(x10, x16)\n    x18 = difference(x17, x2)\n    O = fill(I, EIGHT, x18)\n    return O"], [0.7498499462550435, "def solve_760714e6(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.7498499462550435, "def solve_5cc03688(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.7498499462550435, "def solve_e0c5e458(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.7513616932305588, "def solve_46b8caba(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.7516087933992682, "def solve_a413f355(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.7516087933992682, "def solve_7a79cd2a(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.7516087933992682, "def solve_7392c7e5(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.7518753424364076, "def solve_97b4f6cf(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7518753424364076, "def solve_83e1f9b2(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7522366246475464, "def solve_a1a15b27(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = lbind(power, outbox)\n    x8 = chain(x7, halve, width)\n    x9 = initset(x8)\n    x10 = lbind(rapply, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = compose(backdrop, x12)\n    x14 = fork(difference, x13, toindices)\n    x15 = mapply(x14, x1)\n    x16 = mostcolor(I)\n    x17 = ofcolor(I, x16)\n    x18 = intersection(x15, x17)\n    O = fill(x6, THREE, x18)\n    return O"], [0.7523838742319264, "def solve_ae79e827(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, TWO, x6)\n    return O"], [0.7523838742319264, "def solve_a8d2bd7c(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, TWO, x6)\n    return O"], [0.7523838742319265, "def solve_098a307f(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, FOUR, x6)\n    return O"], [0.7529753249444425, "def solve_618efc47(I):\n    x1 = objects(I, T, F, T)\n    x2 = ofcolor(I, TWO)\n    x3 = argmin(x1, numcolors)\n    x4 = normalize(x3)\n    x5 = occurrences(I, x4)\n    x6 = toindices(x4)\n    x7 = lbind(shift, x6)\n    x8 = mapply(x7, x5)\n    O = fill(I, ONE, x8)\n    return O"], [0.7538479972456863, "def solve_fd479b93(I):\n    x1 = switch(I, FOUR, EIGHT)\n    O = switch(x1, ONE, TWO)\n    return O"], [0.7545626265317441, "def solve_f492f9a6(I):\n    x1 = switch(I, FIVE, EIGHT)\n    x2 = switch(x1, THREE, FOUR)\n    x3 = switch(x2, EIGHT, NINE)\n    x4 = switch(x3, ONE, FOUR)\n    O = switch(x4, TWO, NINE)\n    return O"], [0.7576309521390785, "def solve_e3319c05(I):\n    x1 = replace(I, ZERO, THREE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [0.7598499462550435, "def solve_ad274ceb(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.7598499462550435, "def solve_77678f50(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.7598499462550435, "def solve_d3a21eb2(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.7598499462550435, "def solve_cd5e5ac1(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.770283578319142, "def solve_97c80cb9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.770283578319142, "def solve_f9c173a1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.770283578319142, "def solve_a74b3ab2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.770283578319142, "def solve_cb12132f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.770283578319142, "def solve_cd1f9d36(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.770283578319142, "def solve_c73575b4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6,88, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.770283578319142, "def solve_0f1b5b9b(I):\n    x1 = switch(I, EIGHT, TWO)\n    x2 = switch(x1, THREE, FOUR)\n    x3 = switch(x2,9, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.7790456764162133, "def solve_2c080de7(I):\n    x1 = frontiers(I)\n    x2 = matcher(color, ZERO)\n    x3 = extract(x1, x2)\n    x4 = shape(x3)\n    x5 = canvas(ZERO, x4)\n    x6 = hconcat(x5, x3)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7790633012367362, "def solve_5451e371(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7790633012367362, "def solve_0520f955(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7790633012367362, "def solve_591788a2(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7790633012367362, "def solve_a264b1ea(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7790633012367362, "def solve_72472149(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7790633012367362, "def solve_87a29689(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7790633012367362, "def solve_195d5ca0(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7829819910175547, "def solve_0cd3d63d(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.7829819910175547, "def solve_e3d3f20f(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.7829819910175547, "def solve_a7d718a6(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.7829819910175547, "def solve_2ef6a3a9(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.7829819910175547, "def solve_26e31701(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.7871062946758173, "def solve_288cfff0(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = sfilter(x2, square)\n    x4 = difference(x2, x3)\n    x5 = merge(x3)\n    x6 = recolor(THREE, x5)\n    x7 = merge(x4)\n    x8 = recolor(FOUR, x7)\n    x9 = paint(I, x6)\n    O = paint(x9, x8)\n    return O"], [0.7886935962631189, "def solve_2f7672a5(I):\n    x1 = objects(I, T, F, F)\n    x2 = asindices(I)\n    x3 = box(x2)\n    x4 = toobject(x3, I)\n    x5 = mostcolor(x4)\n    x6 = colorfilter(x1, x5)\n    x7 = rbind(bordering, I)\n    x8 = compose(flip, x7)\n    x9 = mfilter(x6, x8)\n    x10 = fill(I, TWO, x9)\n    O = replace(x10, x5, THREE)\n    return O"], [0.8216126169787495, "def solve_ff7854b1(I):\n    x1 = shape(I)\n    x2 = remove(x1, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = canvas(x4, x1)\n    x6 = colorcount(I, x4)\n    x7 = decrement(x6)\n    x8 = tojvec(x7)\n    x9 = connect(ORIGIN, x8)\n    x10 = fill(x5, TWO, x9)\n    x11 = initset(UNITY)\n    x12 = equality(x6, FOUR)\n    x13 = branch(x12, x11, x9)\n    O = fill(x10, TWO, x13)\n    return O"], [1.0, "def solve_d9a5e169(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_1ef9b4e0(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_289be062(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_9e09be27(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_68de77ff(I):\n    x1 = remove(I, x1)\n    x2 = merge(x1)\n    x3 = cover(I, x2)\n    x4 = mapply(daeighbors, x1)\n    x5 = mapply(neighbors, x1)\n    x6 = fill(x3, ONE, x4)\n    O = fill(x6, TWO, x5)\n    return O"], [1.0, "def solve_18fe9976(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_34234cf4(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = rbind(toobject, I)\n    x5 = chain(leastcolor, x4, delta)\n    x6 = rbind(shift, UP)\n    x7 = fork(connect, ulcorner, urcorner)\n    x8 = compose(x6, x7)\n    x9 = rbind(shift, DOWN)\n    x10 = fork(connect, llcorner, lrcorner)\n    x11 = compose(x9, x10)\n    x12 = fork(astuple, x8, x11)\n    x13 = lbind(rbind, manhattan)\n    x14 = compose(x13, delta)\n    x15 = fork(argmin, x12, x14)\n    x16 = fork(combine, delta, x15)\n    x17 = fork(recolor, x5, x16)\n    x18 = mapply(x17, x3)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_2110d98f(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_86b137f8(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_f3fe2460(I):\n    x1 = asindices(I)\n    x2 = shape(I)\n    x3 = halve(x2)\n    x4 = rbind(greater, x3)\n    x5 = compose(x4, size)\n    x6 = sfilter(x1, x5)\n    x7 = compose(last, last)\n    x8 = order(x6, x7)\n    x9 = argmax(x8, size)\n    x10 = mostcolor(x9)\n    x11 = palette(I)\n    x12 = remove(x10, x11)\n    x13 = lbind(colorcount, I)\n    x14 = argmin(x12, x13)\n    x15 = mostcolor(I)\n    x16 = ofcolor(I, x14)\n    x17 = ofcolor(I, x18)\n    x18 = combine(x16, x17)\n    x19 = mapply(neighbors, x18)\n    x20 = difference(x19, x18)\n    x21 = toobject(x20, I)\n    x22 = leastcolor(x21)\n    x23 = toindices(x21)\n    x24 = ofcolor(I, x22)\n    x25 = ofcolor(I, x23)\n    x26 = neighbors(ORIGIN)\n    x27 = mapply(neighbors, x26)\n    x28 = sfilter(x24, x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x22)\n    O = fill(I, x11, x30)\n    return O"], [1.0, "def solve_648b0ca4(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_40d7f8da(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = Feca(x2)\n    x4 = shape(I)\n    x5 = canvas(ZERO, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [1.0, "def solve_529cc78d(I):\n    x1 = lbind(rbind, sfilter)\n    x2 = lbind(compose, flip)\n    x3 = lbind(matcher, first)\n    x4 = chain(x3, x1, x2)\n    x5 = lbind(paint, I)\n    x6 = compose(last, last)\n    x7 = chain(decrement, x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = toindices(xEG029493)\n    x10 = compose(x8, last)\n    x11 = sfilter(x9, x10)\n    O = fill(I, ZERO, x11)\n    return O"], [1.0, "def solve_3a99a165(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = rot68b190(x2)\n    return O"], [1.0, "def solve_087b3361(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = first(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(x1, THREE, x3)\n    x6 = paint(x5, x4)\n    x7 = uppermost(x4)\n    x8 = leftmost(x4)\n    x9 = subtract(x8, TEN)\n    x10 = add(x8, TEN)\n    x11 = interval(x9, x10, TWO)\n    x12 = lbind(greater, x7)\n    x13 = compose(x12, first)\n    x14 = rbind(contained, x11)\n    x15 = compose(x14, last)\n    x16 = sfilter(x1, x13)\n    x17 = sfilter(x16, x15)\n    O = fill(x6, FOUR, x17)\n    return O"], [1.0, "def solve_1ef1a851(I):\n    x1 = ofcolor(I, ONE)\n    x2 =neighbors(UNITY)\n    x3 = initset(UNITY)\n    x4 = recolor(ONE, x3)\n    x5 = upscale(x4, THREE)\n    x6 = toindices(x5)\n    x7 = lrcorner(x5)\n    x8 = ulcorner(x5)\n    x9 = rbind(contained, x8)\n    x10 = compose(x9, portrait)\n    x11 = sfilter(x6, x10)\n    x12 = merge(x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, ONE)\n    x18 = ulcorner(x5)\n    x19 = subgrid(x18, x16)\n    x20 = branch(x19, identity, height)\n    x21 = x20(x16)\n    x22 = subtract(x21, TWO)\n    x23 = multiply(x22, x13)\n    x24 = add(x23, x8)\n    x25 = repeat(x24, ONE)\n    x26 = x15(x25)\n    x27 = ofcolor(x26, ONE)\n    x28 = subgrid(x27, x26)\n    x29 = interval(ZERO, x28, ONE)\n    x30 = apply(x15, x29)\n    x31 = initset(x30)\n    x32 = insert(x77, x31)\n    x33 = backdrop(x32)\n    x34 = cover(x16, x33)\n    x35 = dmirror(x34)\n    x36 = x15(x35)\n    x37 = shift(x34, x36)\n    x38 = lbind(shift, x37)\n    x39 = mapply(x38, x30)\n    O = paint(x34, x39)\n    return O"], [1.0, "def solve_751d4a10(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = equality(x2, FOUR)\n    x4 = branch(x3, leftmost, RIGHT)\n    x5 = x4(x1)\n    x6 = interval(ONE, FIVE, ONE)\n    x7 = lbind(multiply, x5)\n    x8 = apply(x7, x6)\n    x9 = repeat(x8, ONE)\n    x10 = combine(x7, x9)\n    x11 = apply(x7, x10)\n    x12 = extract(x11, last)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = subgrid(x13, I)\n    x16 = rot90(x15)\n    x17 = rot180(x15)\n    x18 = rot270(x17)\n    x19 = hconcat(x16, x14)\n    x20 = hconcat(x18, x16)\n    x21 = vconcat(x19, x20)\n    x22 = vconcat(x21, x21)\n    x23 = asobject(x22)\n    x24 = rot270(x23)\n    x25 = vconcat(x24, x23)\n    x26 = vconcat(x25, x24)\n    O = downscale(x26, THREE)\n    return O"], [1.0, "def solve_9d5fddf4(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_f3892808(I):\n    x1 = asindices(I)\n    x2 = toobject(x1, I)\n    x3 = mostcolor(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(chain, size)\n    x7 = rbind(x6, toindices)\n    x8 = lbind(lbind, contained)\n    x9 = lbind(ofcolor, I)\n    x10 = chain(x9, x7, x7)\n    x11 = lbind(matcher, x10)\n    x12 = compose(x11, ZERO)\n    x13 = chain(flip, x12, x10)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(x15, x10)\n    x17 = palette(I)\n    x18 = remove(x3, x17)\n    x19 = lbind(colorcount, I)\n    x20 = argmin(x18, x19)\n    x21 = x20(x64)\n    x22 = x20(x6)\n    x23 = x20(x4)\n    x24 = x20(x16)\n    x25 = compose(last, first)\n    x26 = compose(last, last)\n    x27 = fork(either, x25, x26)\n    x28 = compose(initset, x12)\n    x29 = compose(colorcount, x28)\n    x30 = fork(equality, x29, x27)\n    x31 = sfilter(x28, x30)\n    x32 = ofcolor(I, x21)\n    x33 = difference(x32, x31)\n    x34 = mapply(neighbors, x33)\n    x35 = mapply(neighbors, x34)\n    x36 = colorfilter(x31, x21)\n    x37 = fill(I, x20, x36)\n    O = fill(x37, x20, x25)\n    return O"], [1.0, "def solve_369647e5(I):\n    x1 = lbind(contained, THREE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, THREE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(invert, size)\n    x9 = order(x3, x8)\n    x10 = apply(normalize, x9)\n    x11 = size(x10)\n    x12 = interval(ZERO, x11, ONE)\n    x13 = apply(toivec, x12)\n    x14 = mpapply(shift, x10, x13)\n    x15 = merge(x14)\n    x16 = rot90(x15)\n    x17 = shape(x15)\n    x18 = canvas(ZERO, x17)\n    x19 = paint(x18, x16)\n    O = rot270(x19)\n    return O"], [1.0, "def solve_7a641a60(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_8b56ddca(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_1e027ee9(I):\n    x1 = frontiers(I)\n    x2 = matcher(identity, ZERO)\n    x3 = rbind(sfilter, x2)\n    x4 = compose(size, x3)\n    x5 = matcher(x4, ONE)\n    x6 = asindices(I)\n    x7 = lrcorner(x6)\n    x8 = add(UNITY, x7)\n    x9 = initset(x8)\n    x10 = fill(I, ZERO, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = apply(x11, x10)\n    x14 = apply(x12, x10)\n    x15 = contained(x13, x14)\n    x16 = width(I)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = compose(tojvec,00000)\n    x19 = height(I)\n    x20 = decrement(x19)\n    x21 = lbind(astuple, x20)\n    x22 = apply(x21, x17)\n    x23 = astuple(x6, x5)\n    x24 = canvas(ZERO, x23)\n    x25 = asindices(x24)\n    x26 = box(x25)\n    x27 = fill(x24, EIGHT, x26)\n    x28 = lbind(shift, x25)\n    x29 = mapply(x28, x26)\n    O = paint(x27, x29)\n    return O"], [1.0, "def solve_ad9dbd38(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = compose(x2, x1)\n    x4 = fork(intersection, x1, x3)\n    x5 = compose(size, x4)\n    x6 = palette(I)\n    x7 = matcher(x5, ZERO)\n    x8 = sfilter(x6, x7)\n    x9 = totuple(x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = mapply(neighbors, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = ofcolor(I, x11)\n    x17 = mapply(neighbors, x16)\n    x18 = toobject(x17, I)\n    x19 = mostcolor(x18)\n    x20 = rbind(shoot, UNITY)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = fork(combine, x20, x21)\n    x23 = rbind(shoot, UP_RIGHT)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = fork(combine, x23, x24)\n    x26 = fork(combine, x22, x25)\n    x27 = ofcolor(I, x11)\n    x28 = ofcolor(I, x10)\n    x29 = combine(x27, x28)\n    x30 = mapply(x26, x29)\n    x31 = ofcolor(I, x15)\n    x32 = intersection(x31, x30)\n    x33 = ofcolor(I, x19)\n    x34 = intersection(x33, x30)\n    x35 = fill(I, x10, x32)\n    O = fill(x35, x11, x34)\n    return O"], [1.0, "def solve_2ffdd91a(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = toobject(x1, I)\n    x3 = mostcolor(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = order(x5, identity)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = ofcolor(I, x7)\n    x10 = ofcolor(I, x8)\n    x11 = switch(I, x9, x10)\n    x12 = objects(x11, T, T, T)\n    x13 = colorfilter(x12, x7)\n    x14 = rbind(adjacent, x13)\n    x15 = mfilter(x14, vline)\n    x16 = mfilter(x14, hline)\n    x17 = size(x15)\n    x18 = size(x16)\n    x19 = greater(x17, x18)\n    x20 = branch(x19, x18, x15)\n    O = canvas(x20, UNITY)\n    return O"], [1.0, "def solve_1b0b411a(I):\n    x1 = rbind(toobject, I)\n    x2 = rbind(colorcount, ZERO)\n    x3 = chain(x2, x1, dneighbors)\n    x4 = matcher(x3, ONE)\n    x5 = astuple(extract, x4)\n    x6 = astuple(insert, x5)\n    x7 = astuple(ONE, x6)\n    x8 = canvas(ZERO, x7)\n    x9 = asindices(x8)\n    x10 = shift(x9, UNITY)\n    x11 = paint(x8, x10)\n    x12 = ofcolor(x11, ZERO)\n    x13 = ulcorner(x12)\n    x14 = shoot(x13, NEG_UNITY)\n    x15 = shoot(x13, UNITY)\n    x16 = shoot(x13, DOWN_LEFT)\n    x17 = shoot(x13, UP_RIGHT)\n    x18 = combine(x14, x16)\n    x19 = combine(x18, x17)\n    x20 = combine(x18, x18)\n    x21 = combine(x19, x20)\n    O = fill(x11, THREE, x21)\n    return O"], [1.0, "def solve_61a74e3b(I):\n    x1 = shape(I)\n    x2 = subgrid(x1, I)\n    x3 = index(I, ORIGIN)\n    x4 = decrerecolor(x2, x3)\n    x5 = hmirror(x4)\n    x6 = vmirror(x4)\n    x7 = objects(x6, T, F, F)\n    x8 = astuple(x5, x6)\n    x9 = canvas(x3, x8)\n    x10 = hmirror(x9)\n    x11 = vmirror(x9)\n    x12 = objects(x10, T, F, T)\n    x13 = merge(x12)\n    x14 = paint(x9, x13)\n    x15 = astuple(x11, x10)\n    x16 = astuple(x13, x15)\n    x17 = replace(x14, x9, x3)\n    x18 = fill(x17, FOUR, x16)\n    x19 = merge(x12)\n    x20 = cover(x18, x19)\n    x21 = downscale(x20, THREE)\n    x22 = crop(x21, ORIGIN, x7)\n    O = downscale(x21, TWO)\n    return O"], [1.0, "def solve_6f307036(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_05c40ee6(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_19a67544(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, size)\n    x3 = astuple(x2, x2)\n    x4 = vmirror(x2)\n    x5 = hmirror(x2)\n    x6 = combine(x4, x5)\n    x7 = merge(x6)\n    x8 = toindices(x7)\n    x9 = rbind(contained, x8)\n    x10 = compose(x9, first)\n    x11 = sfilter(x6, x10)\n    x12 = upscale(x11, TWO)\n    x13 = ofcolor(I, FOUR)\n    x14 = extract(x13, x12)\n    x15 = ulcorner(x14)\n    x16 = subgrid(x14, I)\n    x17 = trim(x16)\n    x18 = asobject(x17)\n    x19 = shift(x18, UNITY)\n    x20 = paint(I, x19)\n    x21 = subgrid(x1, x20)\n    x22 = vmirror(x21)\n    x23 = hmirror(x21)\n    x24 = connect(x13, x23)\n    x25 = apply(dmirror, x24)\n    x26 = mapply(cdece, x25)\n    O = paint(x21, x26)\n    return O"], [1.0, "def solve_92cf5840(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, ZERO)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_e892207c(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = rbind(toobject, I)\n    x5 = chain(leastcolor, x4, delta)\n    x6 = rbind(shift, UP)\n    x7 = fork(connect, ulcorner, urcorner)\n    x8 = compose(x6, x7)\n    x9 = rbind(shift, DOWN)\n    x10 = fork(connect, llcorner, lrcorner)\n    x11 = compose(x9, x10)\n    x12 = fork(astuple, x8, x11)\n    x13 = lbind(rbind, manhattan)\n    x14 = compose(x13, delta)\n    x15 = fork(argmin, x12, x14)\n    x16 = fork(combine, delta, x15)\n    x17 = fork(recolor, x5, x16)\n    x18 = mapply(x17, x3)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_5cd2b1de(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_ea333ae4(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    x14 = apply(x4, x13)\n    x15 = ofcolor(I, FOUR)\n    x16 = subgrid(x15, x14)\n    x17 = apply(x4, x15)\n    x18 = lbind(shift, x16)\n    x19 = mapply(x18, x17)\n    O = fill(x16, ZERO, x19)\n    return O"], [1.0, "def solve_a6e03b10(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = rot90(x1)\n    x3 = rot180(x1)\n    x4 = rot270(x1)\n    x5 = hconcat(x2, x1)\n    x6 = hconcat(x3, x1)\n    x7 = vconcat(x5, x6)\n    x8 = vconcat(x7, x6)\n    O = x9(x8)\n    return O"], [1.0, "def solve_5f4ac0bc(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    O = upscale(I, x2)\n    return O"], [1.0, "def solve_4839ff05(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_f1860e60(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_60455e17(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = matcher(first, x4)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x1, x6)\n    x8 = difference(x1, x7)\n    x9 = toobject(x8, I)\n    x10 = apply(initset, x9)\n    x11 = rbind(shoot, UNITY)\n    x12 = compose(x11, ulcorner)\n    x13 = fork(combine, vfrontier, hfrontier)\n    x14 = compose(x13, x12)\n    x15 = fork(shift, identity, x14)\n    x16 = mapply(x15, x5)\n    O = paint(I, x16)\n    return O"], [1.0, "def solve_67a86756(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_a7bf3ff1(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x15)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [1.0, "def solve_33fbf2ee(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_7139a5a0(I):\n    x1 = lbind(I, THREE)\n    x2 = compose(positive, size)\n    x3 = rbind(s000, ZERO)\n    x4 = compose(x2, x3)\n    x5 = fork(add, first, x4)\n    x6 = compose(invert, x5)\n    x7 = fork(shoot, identity, x6)\n    x8 = fork(difference, toindices, x7)\n    x9 = chain(decrement, size, x8)\n    x10 = fork(equality, toindices, x9)\n    x11 = fork(shoot, ZERO, DOWN_LEFT)\n    x12 = chain(flip, x10, x11)\n    x13 = sfilter(x1, x12)\n    x14 = argmax(x13, x9)\n    x15 = center(x14)\n    x16 = outbox(x14)\n    x17 = ulcorner(x16)\n    x18 = subgrid(x14, I)\n    x19 = hmirror(x18)\n    x20 = lbind(shift, x19)\n    x21 = fgpartition(x19)\n    x22 = merge(x21)\n    x23 = cover(x19, x22)\n    x24 = shift(x23, x5)\n    x25 = paint(x23, x24)\n    O = vmirror(x25)\n    return O"], [1.0, "def solve_18fefce7(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_674593bf(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_f9a49cf6(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_e21fe008(I):\n    x1 = fgpartition(I)\n    x2 = compose(dneighbors, center)\n    x3 = fork(difference, backdrop, x2)\n    x4 = fork(equality, toindices, x3)\n    x5 = matcher(size, FIVE)\n    x6 = fork(both, x4, x5)\n    x7 = extract(x1, x6)\n    x8 = color(x7)\n    x9 = merge(x1)\n    x10 = compose(hmirror, vmirror)\n    x11 = initset(x10)\n    x12 = insert(vmirror, x11)\n    x13 = insert(hmirror, x12)\n    x14 = rapply(x13, x9)\n    x15 = ulcorner(x7)\n    x16 = lbind(subtract, x15)\n    x17 = matcher(first, x8)\n    x18 = rbind(sfilter, x17)\n    x19 = chain(x16, ulcorner, x18)\n    x20 = fork(shift, identity, x19)\n    x21 = mapply(x20, x14)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_8e0e70b0(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_40abf5b3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_e9ea88c1(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = fork(multiply, height, width)\n    x4 = argmax(x2, x3)\n    x5 = mostcolor(x4)\n    x6 = canvas(x5, x1)\n    x7 = palette(x6)\n    x8 = remove(x5, x7)\n    x9 = other(x8, x8)\n    x10 = ofcolor(I, x4)\n    x11 = ofcolor(I, x9)\n    x12 = apply(first, x10)\n    x13 = compose(first, last)\n    x14 = totuple(x12)\n    x15 = apply(x13, x14)\n    x16 = asobject(x15)\n    x17 = x13(x16)\n    x18 = x13(x11)\n    x19 = ulcorner(x16)\n    x20 = increment(x19)\n    x21 = rbind(subtract, x20)\n    x22 = toindices(x16)\n    x23 = apply(x21, x22)\n    x24 = lbind(shift, x17)\n    x25 = mapply(x24, x23)\n    O = fill(I, x9, x25)\n    return O"], [1.0, "def solve_a424d533(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x9 = mostcolor(x8)\n    x10 = palette(x8)\n    x11 = remove(x9, x10)\n    x12 = other(x11, x12)\n    x13 = ofcolor(x8, x12)\n    x14 = vmirror(x13)\n    x15 = hmirror(x13)\n    x16 = width(x8)\n    x17 = ulcorner(x8)\n    x18 = lbind(subtract, x17)\n    x19 = chain(positive, x18, last)\n    x20 = lbind(shift, x8)\n    x21 = rbind(multiply, x16)\n    x22 = chain(x19, x20, x21)\n    x23 =sfilter(x13, x22)\n    x24 = maximum(x23)\n    x25 = dmirror(x24)\n    x26 = objects(x25, T, F, T)\n    x27 = mapply(x26, x26)\n    x28 = astuple(x24, x27)\n    x29 = astuple(x24, x27)\n    x30 = canvas(x9, x29)\n    x31 = vmirror(x30)\n    x32 = ofcolor(x31, x12)\n    x33 = initset(x40)\n    x34 = rbind(manhattan, x33)\n    x35 = compose(x34, initset)\n    x36 = argmin(x32, x35)\n    x37 = x30(x36)\n    O = paint(x31, x37)\n    return O"], [1.0, "def solve_ef7ec8c6(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = recolor(ZERO, x1)\n    x3 = lbind(shift, x2)\n    x4 = height(I)\n    x5 = rbind(multiply, x4)\n    x6 = apply(x5, x3)\n    x7 = mapply(x6, x2)\n    O = fill(I, EIGHT, x7)\n    return O"], [1.0, "def solve_44dab636(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_bd33b779(I):\n    x1 = compose(positive, size)\n    x2 = rbind(sfilter, hline)\n    x3 = chain(x1, x2, frontiers)\n    x4 = chain(size, dedupe, first)\n    x5 = chain(size, dedupe, last)\n    x6 = fork(greater, x4, x5)\n    x7 = fork(both, x3, x6)\n    x8 = astuple(identity, rot90)\n    x9 = astuple(rot180, rot270)\n    x10 = combine(x8, x9)\n    x11 = astuple(identity, rot270)\n    x12 = astuple(rot180, rot90)\n    x13 = combine(x11, x12)\n    x14 = pair(x10, x13)\n    x15 = rbind(rapply, I)\n    x16(compose, initset, first)\n    x17 = compose(first, x16)\n    x18 = chain(size, x15, x17)\n    x19 = mostcolor(I)\n    x20 =fixmax(x14, x18)\n    x21 = matcher(x18, x20)\n    x22 = compose(flip, x21)\n    x23 = fork(both, x21, x22)\n    x24 = extract(x19, x23)\n    x25 = itastuple(x24, x22)\n    x26 = delta(x25)\n    x27 = fill(I, x19, x26)\n    x28 = compose(size, x22)\n    x29 = apply(x28, x25)\n    x30 = asindices(x27)\n    x31 = ofcolor(x27, x19)\n    x32 = difference(x30, x31)\n    x33 = fill(x27,valmax, x32)\n    x34 = lbind(shift, x28)\n    x35 = mapply(x34, x33)\n    O = paint(x33, x35)\n    return O"], [1.0, "def solve_3c58e97f(I):\n    x1 =8888104991\n    x2 = astuple(ONE, THREE)\n    x3 = size(x1)\n    x4 = decrement(x3)\n    x5 = astuple(TWO, x4)\n    x6 = canvas(ZERO, x5)\n    x7 = tojvec(x4)\n    x8 = crop(x6, x7, x4)\n    x9 = hmirror(x8)\n    x10 = objects(x9, T, F, T)\n    x11 = colorfilter(x10, TWO)\n    x12 = size(x11)\n    x13 = interval(ZERO, x5, ONE)\n    x14 = pair(x13, x11)\n    x15 = compose(invert, first)\n    x16 = power(outbox, x15)\n    x17 = fork(equality, identity, x16)\n    x18 = compose(x17, last)\n    x19 = sfilter(x14, x18)\n    x20 = totuple(x19)\n    x21 = apply(color, x20)\n    x22 = dedupe(x21)\n    x23 = size(x22)\n    x24 = equality(x23, ONE)\n    x25 = decrement(x24)\n    x26 = apply(decrement, x25)\n    x27 = height(x22)\n    x28 = maximum(x22)\n    x29 = equality(x27, ZERO)\n    x30 = branch(x28, x26, x29)\n    x31 = apply(x30, x22)\n    x32 = lbind(repeat, x306)\n    x33 = apply(x32, x31)\n    O = xconcat(x22, x33)\n    return O"], [1.0, "def solve_60ad08a0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = merge(x1)\n    x5 = fill(I, NEG_ONE, x4)\n    x6 = shape(I)\n    x7 = canvas(NEG_ONE, x6)\n    x8 = hconcat(x5, x7)\n    x9 = objects(x8, F, F, T)\n    x10 = rbind(other, x3)\n    x11 = compose(x10, palette)\n    x12 = fork(astuple, x11, ulcorner)\n    x13 = apply(x12, x9)\n    x14 = merge(x9)\n    x15 = fill(I, x3, x14)\n    x16 = paint(x15, x13)\n    O = compress(x16)\n    return O"], [1.0, "def solve_628fd0c9(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(multiply, THREE)\n    x19 = rbind(divide, THREE)\n    x20 = chain(x18, x19, last)\n    x21 = initset(x15)\n    x22 = insert(x65, x21)\n    x23 = backdrop(x22)\n    x24 = lbind(shift, x23)\n    x25 = mapply(x24, x4)\n    O = paint(x16, x25)\n    return O"], [1.0, "def solve_1b9d5a7e(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = x2(I, TWO)\n    x4 = first(x3)\n    x5 = last(x3)\n    x6 = fgpartition(x4)\n    x7 = merge(x6)\n    x8 = difference(x7, x5)\n    x9 = merge(x8)\n    x10 = color(x4)\n    x11 = fill(x4, x10, x9)\n    x12 = fill(x11, TWO, x5)\n    x13 = replace(x12, ZERO, EIGHT)\n    x14 = dmirror(x13)\n    x15 = papply(pair, x13, x14)\n    x16 = lbind(apply, maximum)\n    x17 = apply(x16, x15)\n    x18 = cmirror(x17)\n    x19 = papply(pair, x17, x18)\n    x20 = apply(x16, x19)\n    x21 = papply(pair, x16, x20)\n    x22 = apply(x16, x21)\n    x23 = papply(pair, x22, x17)\n    x24 = papply(pair, x23, x23)\n    x25 = compose(increment, x24)\n    x26 = lbind(apply, x25)\n    x27 = lbind(colorfilter, x17)\n    x28 = chain(x26, x27, last)\n    x29 = fork(recolor, first, x28)\n    x30 = mapply(x29, x15)\n    O = paint(x3, x30)\n    return O"], [1.0, "def solve_e3275e45(I):\n    x1 = llcorner(I)\n    x2 = shoot(x1,ORIGIN)\n    x3 = equality(x2, ZERO)\n    x4 = branch(x3, x2, x2)\n    x5 = shoot(x4, DOWN)\n    x6 = combine(x2, x5)\n    O = fill(I, ONE, x6)\n    return O"], [1.0, "def solve_0b4e4cce(I):\n    x1 = switch(I, EIGHT, TWO)\n    x2 = switch(x1, TWO, ZERO)\n    x3 = switch(x2, EIGHT, ONE)\n    x4 = switch(x3, EIGHT, FOUR)\n    x5 = switch(x4, EIGHT, FIVE)\n    x6 = switch(x5, TWO, FOUR)\n    x7 = switch(x6, EIGHT, ONE)\n    x8 = switch(x7, x2, FOUR)\n    x9 = fork(connect, ulcorner, urcorner)\n    x10 = fork(connect, ulcorner, llcorner)\n    x11 = fork(combine, x9, x10)\n    x12 = x11(x1)\n    x13 = x11(x2)\n    x14 = fork(recolor, color, x12)\n    x15 = fork(recolor, color, x13)\n    x16 = fork(combine, x14, x15)\n    x17 = x16(x2)\n    x18 = paint(x3, x17)\n    O = paint(x18, x2)\n    return O"], [1.0, "def solve_7abf562f(I):\n    x1 = lbind(fork, connect)\n    x2 = lbind(matcher, first)\n    x3 = compose(x2, leastcolor)\n    x4 = lbind(matcher, first)\n    x5 = compose(x4, mostcolor)\n    x6 = fork(extract, identity, x3)\n    x7 = compose(last, x6)\n    x8 = compose(dneighbors, x7)\n    x9 = lbind(apply, last)\n    x10 = fork(sfilter, identity, x5)\n    x11 = compose(x9, x10)\n    x12 = fork(difference, x8, x11)\n    x13 = compose(first, x12)\n    x14 = fork(subtract, x7, x13)\n    x15 = fork(shoot, x7, x14)\n    x16 = fork(recolor, leastcolor, x15)\n    x17 = mapply(x16, x1)\n    O = underpaint(I, x17)\n    return O"], [1.0, "def solve_fd571042(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_cec3b342(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_e20e0b07(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = partition(I)\n    x7 = fork(multiply, height, width)\n    x8 = fork(equality, size, x7)\n    x9 = sfilter(x6, x8)\n    x10 = argmax(x9, size)\n    x11 = difference(x5, x10)\n    x12 = apply(initset, x11)\n    x13 = rbind(hmatching, x10)\n    x14 = rbind(vmatching, x10)\n    x15 = fork(either, x13, x14)\n    x16 = sfilter(x12, x15)\n    x17 = rbind(gravitate, x10)\n    x18 = fork(add, center, x17)\n    x19 = fork(connect, center, x18)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x16)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_b56e63bb(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_e08ff4eb(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_1a5ecc43(I):\n    x1 = rot270(I)\n    x2 = argmax(x1, numcolors)\n    x3 = portrait(x2)\n    x4 = branch(x3, mostcolor, x1)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = interval(ONE, FIVE, ONE)\n    x8 = lbind(multiply, x5)\n    x9 = apply(x8, x7)\n    x10 = lbind(shift, x2)\n    x11 = mapply(x10, x9)\n    O = paint(x6, x11)\n    return O"], [1.0, "def solve_ecd1ca27(I):\n    x1 = objects(I, T, F, T)\n    x2 = size(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = apply(double, x3)\n    x5 = apply(double, x4)\n    x6 = astuple(ONE, NINE)\n    x7 = canvas(ZERO, x6)\n    x8 = fill(x7, ONE, x5)\n    x9 = fill(x8, TWO, x4)\n    O = fill(x9, THREE, x5)\n    return O"], [1.0, "def solve_5a3f2775(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_69984d3f(I):\n    x1 = leastcolor(I)\n    x2 = height(I)\n    x3 = vsplit(I, x2)\n    x4 = rbind(ofcolor, x1)\n    x5 = compose(leftmost, x4)\n    x6 = width(I)\n    x7 = divide(x6, THREE)\n    x8 = multiply(x7, TWO)\n    x9 = lbind(greater, x7)\n    x10 = compose(x9, x5)\n    x11 = lbind(greater, x8)\n    x12 = compose(x11, x5)\n    x13 = compose(flip, x10)\n    x14 = fork(both, x12, x13)\n    x15 = fork(either, x10, x14)\n    x16 = compose(flip, x15)\n    x17 = rbind(multiply, TWO)\n    x18 = compose(x17, x10)\n    x19 = rbind(multiply, FOUR)\n    x20 = compose(x19, x14)\n    x21 = rbind(multiply, THREE)\n    x22 = compose(x21, x16)\n    x23 = fork(add, x18, x20)\n    x24 = fork(add, x23, x22)\n    x25 = width(I)\n    x26 = rbind(repeat, x25)\n    x27 = compose(x26, x24)\n    O = apply(x27, x3)\n    return O"], [1.0, "def solve_50d5eeed(I):\n    x1 = Fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_70bf081b(I):\n    x1 = objects(I, T, F, T)\n    x2 = ofcolor(I, TWO)\n    x3 = mapply(vfrontier, x2)\n    x4 = underfill(I, ONE, x3)\n    x5 = hconcat(x4, x4)\n    O = vconcat(x5, x5)\n    return O"], [1.0, "def solve_80c1d51e(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_6b126768(I):\n    x1 = mostcolor(I)\n    x2 = replace(I, x1, ZERO)\n    x3 = leastcolor(x2)\n    O = ofcolor(I, x3)\n    return O"], [1.0, "def solve_d90b349a(I):\n    x1 = rot270(I)\n    x2 = rot180(I)\n    x3 = rot270(x2)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_771ee578(I):\n    x1 = lbind(contained, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = chain(merge, vmirror, hmirror)\n    x5 = x4(x3)\n    x6 = fork(recolor, color, x5)\n    x7 = mapply(x6, x4)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_0b8b8ce0(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_447fd2c6(I):\n    x1 = asobject(I)\n    x2 = shape(I)\n    x3 = decrement(x2)\n    x4 = index(I, x3)\n    x5 = double(x2)\n    x6 = canvas(x4, x5)\n    x7 = paint(x6, x1)\n    x8 = objects(x7, F, F, T)\n    x9 = first(x8)\n    x10 = shift(x9, LEFT)\n    x11 = vperiod(x10)\n    x12 = hperiod(x10)\n    x13 = neighbors(ORIGIN)\n    x14 = lbind(mapply, neighbors)\n    x15 = power(x14, TWO)\n    x16 = x15(x13)\n    x17 = astuple(x11, x12)\n    x18 = lbind(multiply, x17)\n    x19 = astuple(x18, x16)\n    x20 = lbind(shift, x10)\n    x21 = occurrences(x12, x13)\n    x22 = mapply(x20, x21)\n    O = paint(x7, x22)\n    return O"], [1.0, "def solve_a59f77f9(I):\n    x1 = argmin(I, bounds)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = compose(flip, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    O = canvas(x5, UNITY)\n    return O"], [1.0, "def solve_64fc3813(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = hfrontier(x1)\n    x4 = vfrontier(x2)\n    x5 = intersection(x3, x4)\n    x6 = astuple(x2, x5)\n    x7 = canvas(ZERO, x6)\n    O = fill(x7, TWO, x3)\n    return O"], [1.0, "def solve_6aee7734(I):\n    x1 = fgpartition(I)\n    x2 = valmax(x1, numcolors)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, mostcolor, I)\n    x5 = branch(x3, backdrop, x4)\n    x6 = urcorner(x5)\n    x7 = index(I, x6)\n    x8 = equality(x7, ONE)\n    x9 = add(x6, x8)\n    x10 = shift(x9, UNITY)\n    x11 = paint(I, x10)\n    x12 = objects(x11, T, F, T)\n    x13 = colorfilter(x12, TWO)\n    x14 = rbind(bordering, I)\n    x15 = compose(flip, x14)\n    x16 = mfilter(x13, x15)\n    O = paint(x11, x16)\n    return O"], [1.0, "def solve_0bb08e31(I):\n    x1 = shape(I)\n    x2 = subgrid(x1, I)\n    x3 = ofcolor(I, ZERO)\n    x4 = mapply(vfrontier, x3)\n    x5 = mapply(hfrontier, x3)\n    x6 = size(x4)\n    x7 = size(x5)\n    x8 = greater(x6, x7)\n    x9 = fill(I, ZERO, x4)\n    x10 = fill(x9, ZERO, x5)\n    O = fill(x10, TWO, x6)\n    return O"], [1.0, "def solve_4ed20adc(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_fc0a3cb2(I):\n    x1 = rot45(I)\n    x2 = fgpartition(x1)\n    x3 = compose(flip, even)\n    x4 = extract(x2, x3)\n    x5 = other(x2, x4)\n    x6 = rbind(colorcount, x5)\n    x7 = apply(x6, x4)\n    x8 = normalize(x5)\n    x9 = lbind(shift, x8)\n    x10 = apply(x9, x7)\n    x11 = rbind(intersection, x5)\n    x12 = compose(size, x11)\n    x13 = argmax(x10, x12)\n    O = underfill(x1, x5, x13)\n    return O"], [1.0, "def solve_94f7618a(I):\n    x1 = astuple(vsplit, hsplit)\n    x2 = rbind(rbind, TWO)\n    x3 = rbind(rapply, I)\n    x4 = initset(x2)\n    x5 = lbind(rapply, x4)\n    x6 = chain(first, x3, x5)\n    x7 = lbind(apply, numcolors)\n    x8 = compose(x7, x6)\n    x9 = matcher(x8, TWO_BY_TWO)\n    x10 = extract(x1, x9)\n    x11 = x10(I, TWO)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = palette(x12)\n    x15 = palette(x13)\n    x16 = intersection(x14, x15)\n    x17 = first(x16)\n    x18 = shape(x12)\n    x19 = canvas(x17, x18)\n    x20 = ofcolor(x12, x17)\n    x21 = ofcolor(x13, x17)\n    x22 = intersection(x20, x21)\n    O = fill(x19, TWO, x22)\n    return O"], [1.0, "def solve_e273c8d5(I):\n    x1 = ONE(I)\n    x2 = branch(x1, ZERO, ORIGIN)\n    x3 = shape(x2)\n    x4 = maximum(x3)\n    x5 = halve(x4)\n    x6 = interval(ONE, x5, ONE)\n    x7 = lbind(power, inbox)\n    x8 = rbind(rapply, x2)\n    x9 = compose(initset, x7)\n    x10 = chain(first, x8, x9)\n    x11 = apply(x10, x6)\n    x12 = repeat(x2, ONE)\n    x13 = combine(x12, x11)\n    x14 = rbind(toobject, I)\n    x15 = compose(color, x14)\n    x16 = apply(x15, x13)\n    x17 = interval(ZERO, x5, ONE)\n    x18 = pair(x17, x16)\n    x19 = compose(invert, first)\n    x20 = order(x18, x19)\n    x21 = apply(last, x20)\n    x22 = mpapply(recolor, x21, x13)\n    O = paint(I, x22)\n    return O"], [1.0, "def solve_fdea3b9d(I):\n    x1 = rot270(I)\n    x2 = leastcolor(x1)\n    x3 = shape(I)\n    x4 = add(TWO, x3)\n    x5 = canvas(x2, x4)\n    x6 = asobject(I)\n    x7 = shift(x6, UNITY)\n    x8 = paint(x5, x7)\n    x9 = rot90(x8)\n    x10 = astuple(x4, x9)\n    x11 = leastcolor(x10)\n    x12 = rot180(x8)\n    x13 = astuple(x4, x12)\n    x14 = leastcolor(x13)\n    x15 = ofcolor(x11, x14)\n    x16 = shift(x15, UP)\n    x17 = ofcolor(x11, x16)\n    x18 = rapply(x17, x15)\n    x19 = ulcorner(x15)\n    x20 = lbind(subtract, x19)\n    x21 = matcher(first, x11)\n    x22 = rbind(sfilter, x21)\n    x23 = lbind(upscale, x10)\n    x24 = chain(x20, x22, x23)\n    x25 = fork(concat, identity, x24)\n    x26 = chain(asobject, x23, x25)\n    x27 = mapply(x26, x18)\n    O = paint(x8, x27)\n    return O"], [1.0, "def solve_6aa6ba82(I):\n    x1 = objects(I, F, T, T)\n    x2 = mapply(d2, x1)\n    O = underfill(I, EIGHT, x2)\n    return O"], [1.0, "def solve_dc356b1a(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_4bf0e74b(I):\n    x1 = ofcolor(I, TWO)\n    x2 = vline(x1)\n    x3 = branch(x2, dmirror, identity)\n    x4 = x3(I)\n    x5 = ofcolor(x4, THREE)\n    x6 = ofcolor(x4, TWO)\n    x7 = center(x5)\n    x8 = hfrontier(x7)\n    x9 = center(x6)\n    x10 = hfrontier(x9)\n    x11 = mostcolor(I)\n    x12 = palette(I)\n    x13 = remove( THREE, x12)\n    x14 = remove( TWO, x13)\n    x15 = other(x14, x11)\n    x16 = replace(x4, THREE, x11)\n    x17 = difference(x8, x15)\n    x18 = underfill(x16, THREE, x17)\n    x19 = replace(x4, TWO, x11)\n    x20 = difference(x10, x19)\n    O = fill(x18, THREE, x20)\n    return O"], [1.0, "def solve_77930746(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = normalize(x2)\n    x4 = lbind(matcher, first)\n    x5 = compose(x4, mostcolor)\n    x6 = fork(sfilter, identity, x5)\n    x7 = fork(difference, identity, x6)\n    x8 = lbind(rbind, upscale)\n    x9 = interval(ONE, FOUR, ONE)\n    x10 = apply(x8, x9)\n    x11 = lbind(recolor, ZERO)\n    x12 = compose(x11, outbox)\n    x13 = fork(combine, identity, x12)\n    x14 = lbind(occurrences, I)\n    x15 = lbind(rbind, subtract)\n    x16 = lbind(apply, increment)\n    x17 = lbind(lbind, shift)\n    x18 = chain(x15, ulcorner, x7)\n    x19 = chain(x14, x13, x7)\n    x20 = fork(apply, x18, x19)\n    x21 = compose(x16, x20)\n    x22 = fork(mapply, x17, x21)\n    x23 = rapply(x10, x3)\n    x24 = mapply(x22, x23)\n    O = paint(I, x24)\n    return O"], [1.0, "def solve_1fbeb872(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_2dca882d(I):\n    x1 = hconcat(I, I)\n    x2 = vconcat(x1, x1)\n    x3 = asindices(x2)\n    x4 = mostcolor(I)\n    x5 = ofcolor(x2, x4)\n    x6 = difference(x3, x5)\n    x7 = mapply(ineighbors, x6)\n    O = underfill(x2, EIGHT, x7)\n    return O"], [1.0, "def solve_18ca7167(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = partition(I)\n    x6 = fork(multiply, height, width)\n    x7 = fork(equality, size, x6)\n    x8 = extract(x5, x7)\n    x9 = color(x8)\n    x10 = palette(I)\n    x11 = remove(x4, x10)\n    x12 = other(x11, x9)\n    x13 = ofcolor(I, x12)\n    x14 = vmirror(x13)\n    x15 = hmirror(x13)\n    x16 = astuple(x14, x15)\n    x17 = subgrid(x9, I)\n    x18 = closet(x16, x4)\n    x19 = extract(x18, x7)\n    x20 = last(x19)\n    x21 = replace(I, x4, x20)\n    x22 = vmirror(x21)\n    x23 = hmirror(x21)\n    x24 = astuple(x22, x23)\n    x25 = combine(x21, x24)\n    x26 = vmirror(x25)\n    x27 = ulcorner(x8)\n    x28 = lrcorner(x8)\n    x29 = shape(x28)\n    x30 = add(x27, x29)\n    x31 =pletion(x26, x30)\n    x32 = ofcolor(x25, x4)\n    x33 = vmirror(x32)\n    x34 = hmirror(x32)\n    x35 = astuple(x33, x34)\n    x36 = combine(x31, x35)\n    x37 = rbind(adjacent, x8)\n    x38 = sfilter(x36, x37)\n    O = extract(x38, x29)\n    return O"], [1.0, "def solve_d749fff7(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [1.0, "def solve_9a0e197c(I):\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = normalize(x2)\n    x4 = ulcorner(x3)\n    x5 = shoot(x4, NEG_UNITY)\n    x6 = shape(x3)\n    x7 = rbind(multiply, x6)\n    x8 = rbind(shoot, UP_RIGHT)\n    x9 = mapply(x7, x5)\n    x10 = mapply(x8, x5)\n    x11 = fill(I, x1, x9)\n    O = fill(x11, x1, x10)\n    return O"], [1.0, "def solve_6b324514(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_440021f1(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_8de40c65(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_36257036(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_21c826a0(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = matcher(size, ZERO)\n    x4 = rbind(sfilter, x3)\n    x5 = lbind( compose, DOWN)\n    x6 = lbind(rbind, sfilter)\n    x7 = chain(x5, x4, x6)\n    x8 = compose(color, merge)\n    x9 = fork(recolor, x8, identity)\n    x10 = compose(x9, x7)\n    x11 = fork(combine, x7, x10)\n    x12 = compose(x11, x11)\n    x13 = fork(lrcorner, x12, toindices)\n    x14 = rbind(contained, x12)\n    x15 = compose(x14, last)\n    x16 = sfilter(x1, x15)\n    x17 = vsplit(I, TWO)\n    x18 = hsplit(I, TWO)\n    x19 = merge(x18)\n    x20 = width(x19)\n    x21 = increment(x20)\n    x22 = interval(ZERO, x21, TWO)\n    x23 = height(x19)\n    x24 = rbind(multiply, x23)\n    x25 = chain(x24, ZERO, last)\n    x26 = fork(recolor, mostcolor, x25)\n    x27 = mapply(x26, x22)\n    x28 = paint(x17, x27)\n    x29 = replace(x28, EIGHT, ONE)\n    x30 = compose(x29, last)\n    x31 = fork(combine, x30, first)\n    x32 = sfilter(x1, x31)\n    x33 = paint(x29, x32)\n    O = fork(connect, first, last)\n    return O"], [1.0, "def solve_8ddfde31(I):\n    x1 = box(I)\n    x2 = shape(I)\n    x3 = halve(x2)\n    x4 = vmirror(I)\n    x5 = lbind(shift, x4)\n    x6 = compose(x5, x3)\n    x7 = interval(THREE, x3, ONE)\n    x8 = apply(x6, x7)\n    x9 = mapply(x5, x8)\n    O = paint(I, x9)\n    return O"], [1.0, "def solve_3069e105(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = fill(x8, ONE, x11)\n    return O"], [1.0, "def solve_07468077(I):\n    x1 = matcher(first, TWO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_22ac083e(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_65375ace(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 =remove(x9, x10)\n    x12 = NEindices(x11)\n    x13 = normalize(x12)\n    x14 = shift(x13, NEG_UNITY)\n    x15 = ulcorner(x9)\n    x16 = lbind(shift, x14)\n    x17 = rbind(multiply, x11)\n    x18 = chain(x17, x16, last)\n    x19 = mapply(x18, x14)\n    x20 = paint(x9, x19)\n    O = rot270(x20)\n    return O"], [1.0, "def solve_541281f2(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(recolor, x13, x14)\n    x16 = compose(size, x15)\n    x17 = matcher(x16, ZERO)\n    x18 = astuple(x5, x17)\n    x19 = canvas(ZERO, x18)\n    x20 = sfilter(x19, x17)\n    x21 = difference(x19, x20)\n    O = paint(x19, x21)\n    return O"], [1.0, "def solve_5c3cdd18(I):\n    x1 = box(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [1.0, "def solve_f7793207(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_1576f1f7(I):\n    x1 = rbind(shoot, UNITY)\n    x2 = rbind(add, UNITY)\n    x3 = chain(x2, x1, lrcorner)\n    x4 = fork(recolor, color, x3)\n    x5 = compose(x4, toindices)\n    x6 = mapply(x5, x1)\n    O = paint(I, x6)\n    return O"], [1.0, "def solve_6f480d87(I):\n    x1 = asindices(I)\n    x2 = toobject(x1, I)\n    x3 = mostcolor(x2)\n    x4 = objects(I, T, F, F)\n    x5 = colorfilter(x4, x3)\n    x6 = fork(bordering, toindices, outbox)\n    x7 = compose(flip, x6)\n    x8 = mfilter(x5, x7)\n    O = fill(I, x3, x8)\n    return O"], [1.0, "def solve_98342054(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fork(subtract, x10, x11)\n    return O"], [1.0, "def solve_8ce4be3a(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_5d59c959(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_d821e963(I):\n    x1 = crop(I, ORIGIN, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = hperiod(x2)\n    x4 = height(I)\n    x5 = astuple(x4, x3)\n    x6 = ulcorner(x2)\n    x7 = crop(I, x6, x5)\n    x8 = rot90(x7)\n    x9 = double(x4)\n    x10 = divide(x9, x3)\n    x11 = increment(x10)\n    x12 = repeat(x8, x11)\n    x13 = merge(x12)\n    x14 = rot270(x13)\n    x15 = astuple(x4, x9)\n    O = crop(x14, ORIGIN, x15)\n    return O"], [1.0, "def solve_af38330d(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_a538eeab(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_6f136dd4(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_035fd738(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_cd4ca982(I):\n    x1 =alf(I)\n    x2 = vmirror(x1)\n    x3 = equality(x2, I)\n    x4 = branch(x3, ONE, SEVEN)\n    O = canvas(x4, UNITY)\n    return O"], [1.0, "def solve_ac533e15(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [1.0, "def solve_9be4a4ec(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_9c167625(I):\n    O = subgrid(x1, I)\n    return O"], [1.0, "def solve_17fd7da2(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP9RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [1.0, "def solve_7407f0f1(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_9e0a5f2b(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_87472d3a(I):\n    x1 = shape(I)\n    x2 = add(x1, TWO)\n    x3 = canvas(ZERO, x2)\n    x4 = asobject(I)\n    x5 = shift(x4, UNITY)\n    x6 = paint(x3, x5)\n    x7 = asindices(x3)\n    x8 = fork(505, identity, vmirror)\n    x9 = x8(x7)\n    x10 = lbind(shift, x9)\n    x11 = objects(x6, T, T, T)\n    x12 = mapply(x10, x11)\n    x13 = paint(x6, x12)\n    O = paint(x13, x4)\n    return O"], [1.0, "def solve_d40b95f9(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = lbind(shift, x11)\n    x14 = occurrences(I, x12)\n    x15 = mapply(x13, x14)\n    x16 = shift(x15, x12)\n    x17 = ofcolor(I, x9)\n    x18 = prapply(connect, x17, x16)\n    x19 = mapply(x18, x16)\n    x20 = intersection(x15, x19)\n    O = fill(I, x9, x20)\n    return O"], [1.0, "def solve_d03d1ab4(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_1fbdd497(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_a26bfb0c(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_704dbe4e(I):\n    x1 = matcher(first, TWO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_d0a17cae(I):\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    O =paint(x3, x3)\n    return O"], [1.0, "def solve_8b80a64e(I):\n    x1 = subgrid(ONE, I)\n    x2 = partition(x1)\n    x3 = halve(x2)\n    x4 = height(x1)\n    x5 = matcher(last, x4)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x3, x6)\n    x8 = fork(combine, vfrontier, hfrontier)\n    x9 = compose(x8, center)\n    x10 = fork(recolor, color, x9)\n    x11 = mapply(x10, x7)\n    x12 = merge(x3)\n    x13 = paint(x1, x12)\n    O = paint(x13, x11)\n    return O"], [1.0, "def solve_d69de930(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_6157c561(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_b4fce146(I):\n    x1 = rot270(I)\n    x2 = decrement(x1)\n    O = upscale(x3, x2)\n    return O"], [1.0, "def solve_736132e2(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [1.0, "def solve_c4741741(I):\n    O = solve5099\n    return O"], [1.0, "def solve_37b22850(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x888, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_3ad40553(I):\n    x1 = vmirror(I)\n    x2 =hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_87fe7286(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_90522f30(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = rbind(toobject, I)\n    x5 = chain(leastcolor, x4, delta)\n    x6 = rbind(shift, UP)\n    x7 = fork(connect, ulcorner, urcorner)\n    x8 = compose(x6, x7)\n    x9 = rbind(shift, DOWN)\n    x10 = fork(connect, llcorner, lrcorner)\n    x11 = compose(x9, x10)\n    x12 = fork(astuple, x8, x11)\n    x13 = lbind(rbind, manhattan)\n    x14 = compose(x13, delta)\n    x15 = fork(argmin, x12, x14)\n    x16 = fork(combine, delta, x15)\n    x17 = fork(recolor, x5, x16)\n    x18 = mapply(x17, x3)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_af3af83d(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_8c953107(I):\n    x1 = objects(I, T, F, F)\n    x2 = compose(normal, shape)\n    x3 = chain(x2, totuple, palette)\n    x4 = chain(normal, canvas, x3)\n    x5 = matcher(x4, ONE)\n    x6 =sfilter(x1, x5)\n    x7 = fork(equality, toindices, box)\n    x8 = sfilter(x6, x7)\n    x9 = matcher(x7, x8)\n    x10 = sfilter(x1, x9)\n    x11 = fork(multiply, height, width)\n    x12 = subtract(NINE, x11)\n    x13 = multiply(x12, TWO)\n    x14 = power(outbox, x13)\n    x15 = center(x6)\n    x16 = outbox(x6)\n    x17 = objects(I, T, F, F)\n    x18 = colorfilter(x17, ZERO)\n    x19 = lbind(bordering, x16)\n    x20 = compose(normalize, x19)\n    x21 = mfilter(x18, x20)\n    x22 = outbox(x6)\n    x23 = difference(x21, x22)\n    x24 = fill(I, ONE, x32)\n    O = fill(x24, THREE, x23)\n    return O"], [1.0, "def solve_c059cb99(I):\n    O = upscale(I, TWO)\n    return O"], [1.0, "def solve_6bc7072c(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [1.1, "def solve_a6f2ffd1(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = apply(x15, x13)\n    x17 = mapply(x13, x16)\n    x18 = height(x3)\n    x19 = divide(x18, x14)\n    x20 = increment(x19)\n    x21 = width(x3)\n    x22 = divide(x21, x14)\n    x23 = increment(x22)\n    x24 = interval(ZERO, x23, ONE)\n    x25 = product(x24, x24)\n    x26 = rbind(multiply, x19)\n    x27 = apply(x26, x25)\n    x28 = toindices(x3)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x27)\n    x31 =palette(x30)\n    x32 = other(x31, x22)\n    x33 = partition(x3)\n    x34 = ofcolor(x33, x32)\n    x35 = mapply(toindices, x34)\n    x36 = toindices(x3)\n    x37 = apply(x36, x32)\n    x38 = mapply(x27, x37)\n    x39 = papply(shift, x35, x38)\n    x40 = mapply(toobject, x33)\n    x"], [1.1, "def solve_51d21435(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = power(x37, TWO)\n    x39 = lbind(shift, x31)\n    x40 = fork(recolor"], [1.1, "def solve_9366b8e9(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = rot3599 flip(I)\n    x2 = rbind(ofcolor, ZERO)\n    x3 = compose(lowermost, x2)\n    x4 = matcher(x3, ZERO)\n    x5 = extract(x1, x4)\n    x6 = apply(uppermost, x5)\n    x7 = lbind(subtract, x6)\n    x8 = chain(increment, x7, initset)\n    x9 = lbind(fork, add)\n    x10 = lbind(x9, identity)\n    x11 = lbind(lbind, astuple)\n    x12 = lbind(rbind, astuple)\n    x13 = compose(x11, x12)\n    x14 = lbind(compose, x8)\n    x15 = dmirror(x14)\n    x16 = lbind(compose, x10)\n    x17 = x16(x15)\n    x18 = compose(x14, x17)\n    x19 = lbind(rapply, x13)\n    x20 = compose(initset, x18)\n    x21 = chain(first, x19, x20)\n    x22 = compose(x11, x21)\n    x23 = fork(remove, x22, x15)\n    x24 = compose(x23, x258)\n    x25 = size(x1)\n    x26 = height(x25)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = lbind(apply, maximum)\n    x29 = apply(x28, x27)\n    x30 = lbind(sfilter, x21)\n    x31 = lbind(mapply, subtract)\n    x32 = rbind(sfilter, x26)\n    x33 = chain(x30, x31, x32)\n    x34 = compose(x33, x24)\n    x35 = chain(positive, last, x34)\n    x36 = lbind(s84, x43)\n    x37 = chain(x35, x36, xa)\n    x38 = lbind(compose, x10)"], [1.1, "def solve_ffb70173(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = palette(I)\n    x3 = lbind(sfilter, x1)\n    x4 = lbind(compose, flip)\n    x5 = lbind(matcher, first)\n    x6 = chain(x3, x4, x5)\n    x7 = rbind(compose, asobject)\n    x8 = lbind(mirror, x1)\n    x9 = chain(x7, x8, x6)\n    x10 = fork(combine, x7, x9)\n    x11 = fork(equality, identity, x10)\n    x12 =222(x2, I)\n    x13 = rbind(multiply, TWO)\n    x14 = chain(x13, x11, x12)\n    x15 = fork(4444, x14, xExample output:\n    854978\n    2215\n    \"\"\"\n    x1 = fork(multiply, height, width)\n    x2 = chain(palette, partition, x1)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = lbind(colorcount, I)\n    x6 = argmin(x4, x5)\n    x7 = repeat(x6, ONE)\n    x8 = merge(x7)\n    x9 = color(x8)\n    x10 = astuple(x6, x13)\n    x11 = astuple(x9, x10)\n    x12 = combine(x10, x11)\n    x13 = mapply(x8, x12)\n    x14 = astuple(x6, x13)\n    x15 = canvas(x9, x14)\n    x16 = astuple(x15, x13)\n    x17 = combine(x16, x13)\n    x18 = sizefilter(x17, ONE)\n    x19 = merge(x18)\n    x20 = palette(x19)\n    x21 = double(EIGHT)\n    x22 = astuple(x21, x20)\n    x23"], [1.1, "def solve_3357d1a1(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_e5af63a6(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, vsplit)\n    x3 = x2(I)\n    x4 = asobject(x3)\n    x5 = shift(x4, DOWN)\n    x6 = apply(initset, x5)\n    x7 = remove(x5, x6)\n    x8 = input:\n    7777786651\n    7770886856\n    \"\"\"\n    x1 =446(argmin, identity)\n    x2 =44fgpartition(x3)\n    x3 = merge(x2)\n    x4 = cover(x3, x4)\n    x5 =805(contained, DOWN)\n    x6 = portrait(x5)\n    x7 = branch(x6, identity, hmirror)\n    x8 = x7(x4)\n    x9 = x7(x8)\n    x10 = branch(x6, identity, vmirror)\n    x11 = x10(x8)\n    x12 = x10(x9)\n    x13 = hmirror( x11)\n    x14 = hmirror(x12)\n    x15 = shift(x1, x14)\n    x16 = paint(x5, x15)\n    x17 =8(argmax)\n    x18 = color(x17)\n    x19 =883afar(x17, x13)\n    x20 = paint(x16, x19)\n    x21 = objects(x20, T, F, T)\n    x22 = compose(flip, x1)\n    x23 = sfilter(x21, x22)\n    x24 = order(x23, uppermost)\n    x25 = astuple(x24, x24)\n    x26 = remove(x25, x24)\n    x27 = compose(last, last)\n    x28 = rbind(argmin, x27)\n    x29 = compose(first, last)\n    x30 = lbind(9, x25)\n    x31 = compose(x29, x30)\n    x32 = fork(astuple, x31, x21)"], [1.1, "def solve_b9911307(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(normalize, x3)\n    x5 = merge(x3)\n    x6 = cover(I, x5)\n    x7 = lbind(compose, flip)\n    x8 = lbind(matcher, first)\n    x9 = chain(x7, x8, mostcolor)\n    x10 = fork(sfilter, identity, x9)\n    x11 = chain(identity, x10, first)\n    x12 = lbind(lbind, shift)\n    x13 = rbind(x12, RIGHT)\n    x14 = chain(x13, x12, x11)\n    x15 = lbind(lbind, shift)\n    x16 = rbind(x15, RIGHT)\n    x17 = chain(x16, x12, x11)\n    x18 = fork(sfilter, identity, x14)\n    x19 = fork(matcher, first, x17)\n    x20 = compose(flip, x18)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, x19)\n    x23 = fork(compose, x17, x22)\n    x24 = lbind(rapply, x83)\n    x25 = chain(ineighbors, x24, x11)\n    x26 = fork(rapply, x23, x25)\n    x27 = compose(cmirror, x26)\n    x28 = compose(hmirror, x27)\n    x29 = fork(compose, x28, x11)\n    x30 = compose(vmirror, x29)\n    x31 = fork(rapply, x30, x11)\n    x32 = compose(box, x31)\n    x33 = fork(difference, x32, x26)\n    x34 = compose(x33, x28)\n    x35 = fork(pair, x24, x35)\n    x36 = x35(x6)\n    x37 = x35(x"], [1.1, "def solve_322fe984(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = compose(x12, x6)\n    x14 = apply(x13, x1)\n    x15 = fork(intersection, x12, size)\n    x16 = compose(size, x15)\n    x17 = matcher(x16, ZERO)\n    x18 = fork(both, x15, x17)\n    x19 = extract(x14, x18)\n    x20 = first(x19)\n    x21 = last(x19)\n    x22 = x20(I)\n    x23 =:\n    x22 = fgpartition(x22)\n    x24 = merge(x23)\n    x25 =    x24(x22)\n    x26 = ulcorner(x25)\n    x27 = subgrid(x25, x22)\n    x28 = replace(x27, ZERO, THREE)\n    x29 = asindices(x28)\n    x30 = shift(x29, x26)\n    x31 = ulcorner(x15)\n    x32 =84corner(x15)\n    x33 = initset(x32)\n    x34 = Fgpartition(x33)\n    x35 = merge(x34)\n    x36 = cover(x22, x35)\n    x37 = insert(x26, x36)\n    x38 = width(x37)\n    x39 = tojvec(x38)\n    x40 = shift(x31, x39)\n    x41 = ulcorner(x"], [1.1, "def solve_a4f6f0d6(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_ad07e1d8(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = order(x1, x2)\n    x4 = lbind(apply, last)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(x3)\n    x9 = x7(x4)\n    x10 = x7(x9)\n    x11 = fork(equality, toindices, box)\n    x12 = fork(equality, toindices, x8)\n    x13 = fork(equality, toindices, x10)\n    x14 = lbind(index, I)\n    x15 = compose(x14, uppermost)\n    x16 = matcher(x15, x11)\n    x17 = fork(either, x13, x16)\n    x18 = compose(x17, vline)\n    x19 = lbind(add, x8)\n    x20 = x19(x16)\n    x21 = matcher(x19, x20)\n    x22 = compose(flip, x21)\n    x23 = fork(both, x18, x22)\n    x24 = extract(x3, x23)\n    x25 = subgrid(x24, I)\n    x26 = width(x25)\n    x27 = subtract(x26, TWO)\n    x28 = tojvec(x27)\n    x29 = shift(x25, x28)\n    x30 = paint(x25, x29)\n    x31 = double(x30)\n    x32 = interval(ZERO, x31, ONE)\n    x33 = rbind(contained, x32)\n    x34 = compose(x33, last)\n    x35 = rbind(sfilter, x34)\n    x36 = lbind(rbind, shift)\n    x37 = chain(x15, x35, x36)\n    x38 = fork(combine, x35, x37)\n    x39 = fork(apply, x38, x34)\n"], [1.1, "def solve_17bd76f7(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = fork(multiply, height, width)\n    x2 = decrement(x1)\n    x3 = astuple(x2, THREE)\n    x4 = crop(I, ORIGIN, x3)\n    x5 =477(x4)\n    x6 = vmirror(x5)\n    x7 = hconcat(x5, x6)\n    x8 = astuple(x2, ONE)\n    x9 = crop(x7, DOWN, x8)\n    x10 = vmirror(x9)\n    x11 = papply(pair, x7, x10)\n    x12 = apply(x11, x11)\n    x13 = papply(pair, x7, x12)\n    x14 = apply(x13, x11)\n    x15 = papply(pair, x7, x14)\n    x16 = apply(x15, x11)\n    x17 = papply(pair, x7, x16)\n    x18 = apply(x17, x11)\n    x19 = palette(x18)\n    x20 = lbind(colorcount, x18)\n    x21 = compose(x20, ofcolor)\n    x22 = argmin(x19, x21)\n    x23 = rbind(colorcount, x22)\n    x24 =contained(x23, x18)\n    x25 = ofcolor(x18, x22)\n    x26 = difference(x25, x26)\n    x27 = x21(x26)\n    x28 = asindices(x27)\n    x29 = outbox(x28)\n    x30 = subgrid(x29, x7)\n    x31 = asindices(x30)\n    x32 = box(x31)\n    x33 = hmirror(x32)\n    x34 = vmirror(x32)\n    x35 = dmirror(x33)\n    x36 =b548(x34, x1)\n    x37 = ofcolor(x35, x22)\n    x38 = mapply(x36, x37)\n    x39 = fill(x30, x22, x"], [1.1, "def solve_a109ebf3(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = x18(x21)\n    x23 = argmax(x22, numcolors)\n    x24 = argmin(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape, x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind(multiply"], [1.1, "def solve_d07410d2(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = matcher(x22, x21)\n    x24 = rbind(sfilter, x23)\n    x25 = chain(merge, x24, x22)\n    x26 = lbind(recolor, x18)\n    x27 = lbind(mapply, vfrontier)\n    x28 = rbind(ofcolor, x18)\n    x29 = chain(x26, x27, x28)\n    x30 = fork(paint, x25, x29)\n    x31 = fork(paint, x30, x29)\n    x32 =79mirror(x7)\n    x33 = rbind(\"\"\"\n    x34 = rbind(contained, x33)\n    x35 = compose(x34, last)\n    x36 = sfilter(x32, x35)\n    x37 = sfilter(x32, x36)\n    x38 = fork(either, x32, x37)\n"], [1.1, "def solve_c4d08cfa(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = shape(I)\n    x2 = multiply(THREE, x1)\n    x3 = mostcolor(I)\n    x4 = canvas(x3, x2)\n    x5 = objects(I, F, F, T)\n    x6 = merge(x5)\n    x7 = mostcolor(x6)\n    x8 = first(x5)\n    x9 = matcher(first, x7)\n    x10 = sfilter(x8, x9)\n    x11 = normalize(x10)\n    x12 = delta(x11)\n    x13 = first(x12)\n    x14 = subtract(ONE, x13)\n    x15 = asobject(I)\n    x16 = shape(I)\n    x17 = double(x16)\n    x18 = multiply(x14, x17)\n    x19 = shift(x15, x18)\n    x20 = paint(x4, x19)\n    x21 = objects(x20, F, F, T)\n    x22 = lbind(mapply, dneighbors)\n    x23 = matcher(first, x11)\n    x24 = rbind(sfilter, x23)\n    x25 = chain(x22, delta, x24)\n    x26 = ineighbors(ORIGIN)\n    x27 = apply(double, x26)\n    x28 = rbind(apply, x27)\n    x29 = lbind(lbind, shift)\n    x30 = compose(x28, x29)\n    x31 = lbind(rbind, adjacent)\n    x32 = compose(x31, x25)\n    x33 = fork(extract, x30, x32)\n    x34 = fork(combine, identity, x33)\n    x35 = compose(backdrop, x34)\n    x36 = double(x13)\n    x37 = decrement(x36)\n    x38 = multiply(x37, FOUR)\n    x39 = rbind(shift, x38)\n    x40 = compose(x39, x35)\n    x41 = fork(combine, x35, x40)"], [1.1, "def solve_a98f4174(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = replace(I, ZERO, TWO)\n    x2 = lbind(apply, maximum)\n    x3 = lbind(colorfilter, x1)\n    x4 = chain(x2, x3, color)\n    x5 = fork(paint, identity, x4)\n    x6 = chain(x5, size, x4)\n    x7 = matcher(x6, ONE)\n    x8 = extract(x1, x7)\n    x9 = x6(x8)\n    x10 = objects(I, T, T, T)\n    x11 = rbind(objects, F)\n    x12 = rbind(x11, F)\n    x13 = rbind(x12, T)\n    x14 = chain(x13, x11, x6)\n    x15 = rbind(toobject, x5)\n    x16 = chain(palette, x15, x14)\n    x17 = fork(x16, x16, color)\n    x18 = extract(x10, x17)\n    x19 = lbind(colorcount, I)\n    x20 = argmin(x18, x19)\n    x21 = rbind(colorcount, x20)\n    x22 = chain(x1, x21, palette)\n    x23 = argmin(x10, x22)\n    x24 = rbind(contained, x23)\n    x25 = rbind(rapply, x24)\n    x26 = chain(first, x25, initset)\n    x27 = fork(rapply, x26, identity)\n    x28 = fork(first, x27, last)\n    x29 = matcher(x28, x11)\n    x30 = extract(x10, x29)\n    x31 = x30(I)\n    x32 = first(x31)\n    x33 = last(x31)\n    x34 = ofcolor(x33, x20)\n    x35 = difference(x34, x32)\n    x36 = cover(x31, x35)\n    x37 = apply(initset, x339)\n    x38 = insert(x32,"], [1.1, "def solve_ae5ab87f(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, F, T, T)\n    x6 = rbind(509999\n    5509948495\n    55978959944\n    5899294555\n    5558555554\n    5869995449\n    4854445555\n    5555554999\n    6856555584\n    8585522254\n    5528525884\n    \"\"\"\n    x1 = matcher(identity, x1)\n    x2 = rbind(sfilter, x7)\n    x3 = compose(size, x2)\n    x4 = argmax(x5, x3)\n    x5 = palette(x4)\n    x6 = remove(ZERO, x5)\n    x7 = lbind(colorcount, x4)\n    x8 = argmax(x6, x7)\n    x9 = ulcorner(x4)\n    x10 = contained(x9, x4)\n    x11 = contained(x7, x4)\n    x12 = branch(x10, UNITY, ONE)\n    x13 = branch(x11, NEG_UNITY, ONE)\n    x14 =312(x12, x13)\n    x15 = subgrid(x14, I)\n    x16 = width(x15)\n    x17 = subtract(x16, TWO)\n    x18 = upscale(x15, x17)\n    x19 = height(x15)\n    x20 = divide(x19, x17)\n    x21 = x18(x20)\n    x22 = subtract(x21, TWO)\n    x23 = divide(x22, x17)\n    x24 = repeat(x23, x8)\n    x25 = merge(x24)\n    x26 = cover(x15, x25)\n    x27 = lbind(repeat, x26)\n    x28 = compose(x27, tojvec)\n    x29 = matcher(x28, x211)\n    x30"], [1.1, "def solve_ab6a33f7(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_56f6fe7f(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = trim(I)\n    x2 = tophalf(x1)\n    x3 = lefthalf(x2)\n    x4 = tophalf(x3)\n    x5 = dmirror(x4)\n    x6 = bottomhalf(x1)\n    x7 = lefthalf(x6)\n    x8 = bottomhalf(x7)\n    x9 = height(x9)\n    x10 = width(x9)\n    x11 = hfrontier(ORIGIN)\n    x12 = fill(x3, ZERO, x11)\n    x13 = hfrontier(x10)\n    x14 = fill(x12, ZERO, x13)\n    x15 = compress(x14)\n    x16 = width(x9)\n    x17 = height(x9)\n    x18 = decrement(x17)\n    x19 = tojvec(x18)\n    x20 = connect(ORIGIN, x19)\n    x21 = fill(x10, ZERO, x20)\n    x22 = vconcat(x23, x21)\n    x23 = width(x9)\n    x24 = subtract(x18, x23)\n    x25 = tojvec(x24)\n    x26 = vitate(x25, x24)\n    x27 = height(x9)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = connect(x25, x29)\n    x31 = fill(x10, ZERO, x30)\n    x32 = lbind(16, x26)\n    x33 = tojvec(x32)\n    x34 = v reflectors(x33)\n    x35 = cover(x31, x34)\n    x36 = astuple(x29, x306)\n    x37 = crop(x35, x36, x34)\n    x38 = fork(combine, vfrontier, hfrontier)\n    x39 = compose(x38, tojvec)\n    x40 = lbind(extract, x35)\n    x41 = chain(first,"], [1.1, "def solve_d76107ea(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(both, x29, x30)\n    x34 = fork(both, x31, x32)\n    x35 = fork(both, x33, x34)\n    x36 = compose(x"], [1.1, "def solve_a260c865(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = sizefilter(x1, FOUR)\n    x3 = fork(equality, height, width)\n    x4 = extract(x2, x3)\n    x5 = other(x1, x4)\n    x6 = color(x5)\n    x7 = astuple(ONE, THREE)\n    x8 = canvas(x6, x7)\n    x9 = sizefilter(x1, ONE)\n    x10 = initset(x4)\n    x11 = insert(x6, x9)\n    x12 = insert(x8, x11)\n    x13 = hmirror(x12)\n    x14 = toindices(x13)\n    x15 = lbind(rbind, contained)\n    x16 = lbind(compose, flip)\n    x17 = lbind(matcher, first)\n    x18 = chain(x15, x16, x17)\n    x19 = lbind(contained, TWO)\n    x20 = compose(x19, first)\n    x21 = lbind(sfilter, x17)\n    x22 = compose(x21, x18)\n    x23 = fork(contained, identity, x22)\n    x24 = compose(x17, toindices)\n    x25 = fork(compose, x24, x23)\n    x26 = lbind(sfilter, x12)\n    x27 = compose(x26, x25)\n    x28 = fork( inconsistenciesensor vsplit, identity, x27)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, hmirror)\n    x31 = fork(equality, identity, vmirror)\n    x32 = lbind(index, I)\n    x33 = compose(x32, palette)\n    x34 = remove(x33, x5)\n    x35 =Resourceindex(I, x10)\n    x36 = other(x34, x35)\n    x37 = apply(x36, x32)\n    x38 = astuple(dmirror, cmirror)\n    x"], [1.1, "def solve_0027cdb2(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_904af7cc(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = compose(first, last)\n    x41 = chain(corners, subgrid, x40)\n    x42 = compose(x37"], [1.1, "def solve_def361e3(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, ONE)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)"], [1.1, "def solve_ba6cbe34(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x50 = lbind(ofcolor, I)\n    x51 = chain(x8, x9, x50)\n    x52 = rbind(matcher, vline)\n    x53 = compose(x52, x41)\n    x54 = chain(flip, x53, x41)\n    x55 = sfilter(x6, x49)\n    x56 = sfilter(x6, x540)\n    x57 = height(x556)\n    x58 =6129801(x57)\n    x59 = chain(lowermost, x50, x58)\n    x60 = matcher(x59, ZERO)\n    x61 = objects(I, T, F, F)\n    x62 = sfilter(x61, x60)\n    x63 = argmax(x62, x25)\n    x64 = subgrid(x63, I)\n    x65 = chain( decreased width, decrement,\n    x66 = matcher(x65, x34)\n    x67 = fork(greater, x66, identity)\n    x68 = sfilter(x67, x60)\n    x69 = argmax(x68, x67)\n    x70 = matcher(first, x04)\n    x71 = compose(flip, x70)\n    x72 = sfilter(x41, x70)\n    x73 = argmax(x72, x27)\n    x74 = leastcolor(x73)\n    x75 =,(x74, x110)\n    x76 = ofcolor(x76, x4)\n    x77 = mapply(vfrontier, x76)\n    x78 = mapply(hfrontier, x76)\n    x79 = size"], [1.1, "def solve_72bbec99(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, size)\n    x3 = lowermost(x2)\n    x4 = height(x2)\n    x5 = equality(x4, x3)\n    x6 = branch(x5, lefthalf, tophalf)\n    x7 = branch(x5, righthalf, bottomhalf)\n    x8 = branch(x5, hconcat, vconcat)\n    x9 = x6(I)\n    x10 = x7(I)\n    x11 = index(x9, ORIGIN)\n    x12 = shape(x10)\n    x13 = decrement(x12)\n    x14 = index(x10, x13)\n    x15 = mostcolor(I)\n    x16 = mostcolor(I)\n    x17 = palette(I)\n    x18 = remove(x11, x17)\n    x19 = remove(x14, x18)\n    x20 = remove(x16, x19)\n    x21 = first(x20)\n    x22 = replace(x9, x21, x11)\n    x23 = branch(x5, width, height)\n    x24 = astuple(x23, x22)\n    x25 = crop(x9, ORIGIN, x24)\n    x26 = hmirror(x25)\n    x27 = vconcat(x25, x26)\n    x28 = upscale(x27, TWO)\n    x29 = merge(x28)\n    x30 = palette(x29)\n    x31 = double(x30)\n    x32 = interval(ZERO, x31, ONE)\n    x33 = upscale(x27, x32)\n    x34 =60c8cdece60(x28)\n    x35 = lbind(multiply, x34)\n    x36 = apply(x35, x30)\n    x37 = lbind(shift, x29)\n    x38 = mapply(x37, x36)\n    x39 = fill(x22, x21, x38)\n    x40 = replace(x39"], [1.1, "def solve_ebe908fa(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_0112343a(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = lbind(matcher, first)\n    x2 = compose(x1, mostcolor)\n    x3 = fork(sfilter, identity, x2)\n    x4 = fork(difference, identity, x3)\n    x5 = lbind(rbind, upscale)\n    x6 = rbind(x5, toindices)\n    x7 = compose(x6, x4)\n    x8 = fork(intersection, identity, x7)\n    x9 = compose(size, x8)\n    x10 = valmax(x1, x9)\n    x11 = matcher(x9, x10)\n    x12 =flip(x11, ONE)\n    x13 = sfilter(x1, x12)\n    x14 = order(x13, identity)\n    x15 = apply(x5, x14)\n    x16 = ofcolor(x15, ONE)\n    x17 = ofcolor(x15, TWO)\n    x18 = apply(x11, x17)\n    x19 = apply(x15, x18)\n    x20 = ofcolor(x19, ONE)\n    x21 = rbind(manhattan, DOWN)\n    x22 = chain(x19, x21, initset)\n    x23 = fork(add, identity, x22)\n    x24 = chain(initset, x18, x23)\n    x25 = fork(insert, identity, x24)\n    x26 = lbind(rbind, manhattan)\n    x27 = compose(x26, initset)\n    x28 = fork(argmin, x25, x27)\n    x29 = fork(gravitate, initset, x28)\n    x30 = compose(crement, x29)\n    x31 = fork(add, identity, x30)\n    x32 = fork(gravitate, initset, x33)\n    x33 = compose(crement, x32)\n    x34 = fork(add, identity, x33)\n    x35 = fork(gravitate, toindices, x34)\n    x36 = fork(add, identity, x35)\n    x37"], [1.1, "def solve_9eb377d3(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_e1604aef(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = matcher(first, ZERO)\n    x2 =044(I, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = compose(normalize, x3)\n    x5 = apply(x4, x2)\n    x6 = astuple(NEG_TWO, NEG_TWO)\n    x7 = shift(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = rbind(toobject, I)\n    x11 = rbind(shoot,ORIGIN)\n    x12 = compose(x10, x11)\n    x13 = rbind(colorcount, SIX)\n    x14 = chain(x13, double, x12)\n    x15 = fork(equality, x14, identity)\n    x16 = chain(numcolors, x15, fgpartition)\n    x17 = matcher(x16, FIVE)\n    x18 = extract(x9, x17)\n    x19 = neighbors(ORIGIN)\n    x20 = insert(ORIGIN, x19)\n    x21 = rbind(shoot, ZERO_BY_TWO)\n    x22 = rbind(shift, x21)\n    x23 = pair(x20, x22)\n    x24 = chain(x entire, x23, last)\n    x25 = rbind(colorcount, SEVEN)\n    x26 = matcher(x25, EIGHT)\n    x27 = fork(668, x26, identity)\n    x28 = chain(x22, x27, first)\n    x29 = lbind(fork, outbox)\n    x30 = rbind(x29, x28)\n    x31 = lbind(fork, recolor)\n    x32 = lbind(x31, x30)\n    x33 = rbind(shift, x29)\n    x34 = lbind(chain, x33)\n    x35 = lbind(x34, x28)\n    x36 = lbind(rbind, mapply)\n    x37 = compose(x35, x36)"], [1.1, "def solve_994c0c1a(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(re"], [1.1, "def solve_c4ce205e(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shape(I)\n    x5 = maximum(x4)\n    x6 = canvas(ZERO, x5)\n    x7 = asindices(x6)\n    x8 = normalize(x7)\n    x9 = to\n    74dd113061\n    x10 = paint(x6, x9)\n    x11 = height(x10)\n    x12 = width(x10)\n    x13 = fgpartition(x10)\n    x14 = merge(x13)\n    x15 = width(x10)\n    x16 = height(x14)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = lbind(multiply, x5)\n    x19 = apply(x18, x17)\n    x20 = lbind(multiply, x4)\n    x21 = apply(x20, x17)\n    x22 = lbind(interval, ZERO)\n    x23 = rbind(x22, ONE)\n    x24 = lbind(interra, x2)\n    x25 = rbind(x24, ONE)\n    x26 = lbind(colorfilter, x36)\n    x27 = chain(x23, x25, x26)\n    x28 = lbind(78, x multiply)\n    x29 = chain(x28, x27, last)\n    x30 = fork(recolor, first, x29)\n    x31 = astuple(SIX, THREE)\n    x32 = astuple(FOUR, EIGHT)\n    x33 = astuple(ONE, DOWN)\n    x34 = initset(x33)\n    x35 = insert(x34, x32)\n    x36 = insert(x30, x35)\n    x37 = apply(x32, x36)\n    x38 = papply(recolor, x37)\n    x39 = lbind(shift, x8)\n    x40 = mapply(x39, x38)\n    O = paint(x10,"], [1.1, "def solve_caa8cb0f(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = asobject(I)\n    x6 = matcher(first, x4)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x5, x7)\n    x9 = hperiod(x8)\n    x10 = vperiod(x8)\n    x11 = width(I)\n    x12 = width(x8)\n    x13 = subtract(x11, x12)\n    x14 = add(x13, TWO)\n    x15 = height(I)\n    x16 = height(x8)\n    x17 = subtract(x15, x16)\n    x18 = add(x17, TWO)\n    x19 = rbind(multiply, x9)\n    x20 = invert(x14)\n    x21 = interval(x20, x14, ONE)\n    x22 = apply(x19, x21)\n    x23 = rbind(multiply, x10)\n    x24 = invert(x18)\n    x25 = interval(x24, x18, ONE)\n    x26 = apply(x23, x25)\n    x27 = product(x26, x22)\n    x28 = lbind(shift, x8)\n    x29 = mapply(x28, x27)\n    x30 = index(I, ORIGIN)\n    x31 = equality(x30, x4)\n    x32 = flip(x31)\n    x33 = asindices(I)\n    x34 = urcorner(x33)\n    x35 = index(I, x34)\n    x36 = equality(x35, x4)\n    x37 = flip(x36)\n    x38 = asindices(I)\n    x39 = lrcorner(x38)\n    x40 = index(I, x39)\n    x41 = equality(x40, x4)\n    x42 = flip(x41)\n    x43 = asindices("], [1.1, "def solve_4a9e9729(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = astuple(SIX, TWO)\n    x2 = size(x1)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, hmirror, vmirror)\n    x5 = x4(I)\n    x6 = canvas(ZERO, x1)\n    x7 = partition(x6)\n    x8 = sizefilter(x7, ONE)\n    x9 = merge(x8)\n    x10 = palette(x9)\n    x11 = totuple(x10)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = switch(x6, x12, x13)\n    x15 = ofcolor(x14, x12)\n    x16 = inbox(x15)\n    x17 = recolor(ZERO, x16)\n    x18 = double(x2)\n    x19 = add(x18, THREE)\n    x20 = initset(x19)\n    x21 = recolor(x12, x20)\n    x22 =434(x21, x15)\n    x23 = product(x17, x22)\n    x24 = mapply(toindices, x17)\n    x25 = mapply(x24, x23)\n    x26 = flip(x25)\n    x27 = dmirror(x26)\n    x28 = toobject(x27, x14)\n    x29 = hperiod(x28)\n    x30 = shift(x25, x29)\n    x31 = toobject(x27, x14)\n    x32 = vperiod(x31)\n    x33 = hperiod(x32)\n    x34 = neighbors(ORIGIN)\n    x35 = mapply(neighbors, x34)\n    x36 = astuple(x32, x33)\n    x37 = rbind(shift, x36)\n    x38 = combine(x30, x37)\n    x39 = fill(x6, x12, x38)\n    x40 = shift(x31, x39)\n    x41 = paint(x39, x40)"], [1.1, "def solve_35afca6b(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = objects(I, T, T, T)\n    x2 =389ca(I)\n    x3 = subgrid(x2, I)\n    x4 = height(x3)\n    x5 = width(x3)\n    x6 = vsplit(x3, x4)\n    x7 = neighbors(ORIGIN)\n    x8 = toindices(x7)\n    x9 = compose(hupscale, x8)\n    x10 = power(x9, TWO)\n    x11 = shape(x3)\n    x12 = maximum(x11)\n    x13 = lbind(replace, x12)\n    x14 =0000000000000000(x\n    x15 = lbind(downscale, x10)\n    x16 = compose(x14, x15)\n    x17 = lbind(power, equality)\n    x18 = chain(x17, x13, x16)\n    x19 = lbind(rapply, x8)\n    x20 = compose(initset, x18)\n    x21 = chain(first, x19, x20)\n    x22 = compose(flip, x21)\n    x23 = fork(22, x18, x22)\n    x24 = fork(combine, x21, x23)\n    x25 = compose(x4, x24)\n    x26 = palette(x2)\n    x27 = palette(x10)\n    x28 = intersection(x26, x27)\n    x29 = argmax(x28, x25)\n    x30 = urcorner(x29)\n    x31 = invert(x30)\n    x32 = shift(x29, x31)\n    x33 = apply(x25, x32)\n    x34 = shift(x32, x33)\n    x35 = ofcolor(x30, xpal)\n    x36 = ofcolor(x30, x66666666\n    x37 = lbind(index, x30)\n    x38 = compose(x37, urcorner)\n    x39 = cover(x30, x33)\n    x40 = x38(x39)\n    x41 = ofcolor("], [1.1, "def solve_06304daa(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 =173(I)\n    x2 = tophalf(x1)\n    x3 = lefthalf(x2)\n    x4 = tophalf(x3)\n    x5 = righthalf(x4)\n    x6 = bottomhalf(x4)\n    x7 = lefthalf(x6)\n    x8 = bottomhalf(x6)\n    x9 = righthalf(x8)\n    x10 = index(I, ORIGIN)\n    x11 = width(I)\n    x12 = decrement(x11)\n    x13 = tojvec(x12)\n    x14 = index(I, x13)\n    x15 = height(I)\n    x16 = decrement(x15)\n    x17 = toivec(x16)\n    x18 = index(I, x17)\n    x19 = shape(I)\n    x20 = decrement(x19)\n    x21 = tojvec(x20)\n    x22 = index(I, x21)\n    x23 = compress(I)\n    x24 = asindices(x23)\n    x25 = box(x24)\n    x26 = corners(x24)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, x23)\n    x29 = color(x28)\n    x30 = palette(x2)\n    x31 = other(x30, x29)\n    x32 = replace(x3, x31, x\n    x33 = x31(x2)\n    x34 = tojvec(x33)\n    x35 = shift(x34, x36)\n    x36 = combine(x28, x35)\n    x37 = rbind(contained, x36)\n    x38 = compose(x37, first)\n    x39 = sfilter(x19, x38)\n    x40 = difference(x19, x39)\n    x41 = fill(I, x31, x40)\n    x42 = compose(size, first)\n    x43 = objects(x41, T, F, F)\n    x44 = rbind"], [1.1, "def solve_98b670ae(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = lefthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = righthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(I)\n    x18 = halve(x17)\n    x19 = canvas(x16, x18)\n    x20 = matcher(first, x16)\n    x21 = compose(flip, x20)\n    x22 = rbind(sfilter, x21)\n    x23 = compose(x22, asobject)\n    x24 = x24(x2)\n    x25 = x24(x6)\n    x26 = x23(x24)\n    x27 = x25(x6)\n    x28 = shape(x27)\n    x29 = canvas(x24, x28)\n    x30 = paint(x29, x27)\n    x31 = rbind(shift, x38)\n    x32 = compose(x31, dneighbors)\n    x33 = initset(x32)\n    x34 = recolor(x16, x33)\n    x35 = dmirror(x30)\n    x36 = paint(x35, x34)\n    x37 = combine(x32, x36)\n    x38 = fork(combine, vfrontier, hfrontier)\n    x39 = compose(x38, x37)\n    x40 = fork(combine, x43, x39)\n    x41 = apply(x40, x33)\n    x42 = mapply(x37, x41)\n"], [1.1, "def solve_47bcfd76(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_717d29a0(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_016bda61(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, ulcorner)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, dmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, ulcorner)\n    x13 = rbind(shift, NEG_UNITY)\n    x14 = compose(x13, vmirror)\n    x15 = rbind(shift, NEG_UNITY)\n    x16 = compose(x15, hmirror)\n    x17 = rbind(shift, DOWN_LEFT)\n    x18 = compose(x17, hmirror)\n    x19 = rbind(shift, UP_RIGHT)\n    x20 = compose(x19, vmirror)\n    x21 = rbind(shift, RIGHT)\n    x22 = compose(x21, hmirror)\n    x23 = rbind(shift, DOWN)\n    x24 =compose(x23, x8)\n    x25 = fork(compose, x14, x20)\n    x26 = fork(compose, x24, x12)\n    x27 = compose(x26, x5)\n    x28 = rbind(shift, LEFT)\n    x29 = rbind(shift, RIGHT)\n    x30 = compose(x28, x9)\n    x31 = compose(x29, x7)\n    x32 = fork(compose, x30, x31)\n    x33 = fork(compose, x32, x5)\n    x34 = compose(x33, x5)\n    x35 = fork(contained, RIGHT, last)\n    x36 = fork(contained, contained, x35)\n    x"], [1.1, "def solve_236abd13(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = chain(positive, size, dedupe)\n    x2 = x1(I)\n    x3 = x1(x2)\n    x4 = height(x3)\n    x5 = width(x3)\n    x6 = partition(x3)\n    x7 = ofcolor(x3, ONE)\n    x8 = ofcolor(x3, FOUR)\n    x9 = center(x7)\n    x10 = delta(x7)\n    x11 = center(x8)\n    x12 = subtract(x10, x11)\n    x13 = multiply(x12, x4)\n    x14 = power(x13, TWO)\n    x15 = toindices(x4)\n    x16 = lbind(toindices, x15)\n    x17 = chain(x16, x15, outbox)\n    x18 = lbind(power, outbox)\n    x19 = compose(x18, x17)\n    x20 = initset(x19)\n    x21 = cover(x3, x20)\n    x22 = chain(size, x18, outbox)\n    x23 = argmax(x6, x22)\n    x24 = objects(x14, T, F, F)\n    x25 = color(x23)\n    x26 = center(x23)\n    x27 = invert(x25)\n    x28 = shift(x26, x27)\n    x29 = fork(combine, vfrontier, hfrontier)\n    x30 = mapply(x29, x28)\n    x31 = fill(x21, x25, x30)\n    x32 = ofcolor(x31, x1)\n    x33 = lbind(contained, x16)\n    x34 = rbind(contained, x33)\n    x35 = compose(x34, last)\n    x36 = sfilter(x32, x35)\n    x37 = sizefilter(x36, ONE)\n    x38 = fork(equality, identity, last)\n    x39 = fork(multiply, height, width)\n    x40 = chain(x38, x39,"], [1.1, "def solve_09dafe25(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x1, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x"], [1.1, "def solve_35c650fe(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = GMTcolors(I)\n    x3 = compose(flip, x2)\n    x4 = extract(x1, x3)\n    x5 =1989(x4)\n    x6 =1755499991\n    7857767553\n    634 neighbors\n    5548957955\n    5579755589\n    4729655744\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = chain(flip, x1, dmirror)\n    x3 = fork(both, x2, x3)\n    x4 = extract(x1, x3)\n    x5 = compose(flip, x4)\n    x6 = sfilter(x5, x3)\n    x7 = compose(hmirror, merge)\n    x8 = fork(equality, identity, x7)\n    x9 = sfilter(x6, x8)\n    x10 = compose(vmirror, dmirror)\n    x11 = fork(equality, identity, x10)\n    x12 = sfilter(x9, x11)\n    x13 = compose(leftmost, merge)\n    x14 = compose(rightmost, merge)\n    x15 = fork(equality, identity, x14)\n    x16 = compose(leftmost, invert)\n    x17 = compose(rightmost, invert)\n    x18 = fork(equality, identity, x17)\n    x19 = fork(both, x13, x18)\n    x20 = sfilter(x6, x19)\n    x21 = compose(last,283)\n    x22 = sfilter(x6, x21)\n    x23 = RIGHT(x20, x22)\n    x24 = mapply(dneighbors, x23)\n    x25 = mapply(ineighbors, x24)\n    x26 = shape(x25)\n    x27 = canvas(ZERO, x26)\n    x28 = ofcolor(x25, ONE)\n    x29 = ofcolor(x25, TWO)\n    x30 = rbind(multiply, x27)\n"], [1.1, "def solve_d06297a7(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = double(TEN)\n    x2 = interval(ZERO, x1, ONE)\n    x3 = connect(ORIGIN, DOWN)\n    x4 = connect(ORIGIN, ZERO_BY_TWO)\n    x5 = combine(x3, x4)\n    x6 = astuple(NEG_TWO, TWO)\n    x7 = lbind(multiply, x6)\n    x8 = toivec(NEG_TWO)\n    x9 = apply(x7, x2)\n    x10 = rbind(subtract, TWO_BY_ZERO)\n    x11 = fork(ofcolor, identity, leastcolor)\n    x12 = chain(x10, center, x11)\n    x13 = rbind(mapply, x9)\n    x14 = lbind(lbind, shift)\n    x15 = lbind(shift, x5)\n    x16 = compose(x15, x12)\n    x17 = chain(x13, x14, x16)\n    x18 = lbind(recolor, FIVE)\n    x19 = compose(x18, x17)\n    x20 = fork(paint, identity, x19)\n    x21 = compose(rot180, x20)\n    x22 = fork(ofcolor, x21, leastcolor)\n    x23 = compose(center, x22)\n    x24 = fork(subtract, x23, x12)\n    x25 = fork(shift, x17, x24)\n    x26 = lbind(recolor, FIVE)\n    x27 = rbind(shift, x8)\n    x28 = chain(x26, x27, x25)\n    x29 = fork(paint, x21, x28)\n    x30 = compose(rot180, x29)\n    x31 = rbind(ofcolor, FIVE)\n    x32 = compose(x31, x30)\n    x33 = leastcolor(I)\n    x34 = ofcolor(I, x33)\n    x35 = mostcolor(I)\n    x36 = shape(I)\n    x37 = canvas(x35, x"], [1.1, "def solve_f03a7f2e(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = fill(x6, TWO, x3)\n    x8 =757(999, UNITY)\n    x9 = ofcolor(x8, ONE)\n    x10 = lowermost(x9)\n    x11 = width(x9)\n    x12 = rbind(greater, x10)\n    x13 = compose(x12, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = lbind(recolor, ZERO)\n    x16 = lbind(ofcolor, x8)\n    x17 = chain(x15, x14, x16)\n    x18 = fork(paint, identity, x17)\n    x19 = chain(x9, first, x18)\n    x20 = difference(x1, x19)\n    x21 = rbind(greater, x10)\n    x22 = compose(x21, first)\n    x23 = rbind(sfilter, x22)\n    x24 = chain(x20, x23, x18)\n    x25 = rbind(greater, x10)\n    x26 = compose(x25, first)\n    x27 = rbind(sfilter, x26)\n    x28 = chain(x20, x27, x18)\n    x29 = rbind(gravitate, x2)\n    x30 = compose(x29, invert)\n    x31 = fork(add, identity, x30)\n    x32 = fork(insert, identity, x31)\n    x33 = fork(insert, identity, x32)\n    x34 = size(x1)\n    x35 = decrement(x34)\n    x36 = power(x33, x35)\n    x37 = compose(x33, x28)\n    x38 = power(x37, x36)\n    x39 = astuple("], [1.1, "def solve_363f59d0(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = index(I, ORIGIN)\n    x2 = objects(I, T, F, F)\n    x3 = fork(multiply, height, width)\n    x4 = fork(equality, size, x3)\n    x5 = chain(positive, decrement, size)\n    x6 = rbind(greater, ONE)\n    x7 = chain(x6, x5, shape)\n    x8 = sfilter(x2, x7)\n    x9 = fork(both, x4, x8)\n    x10 = sfilter(x2, x4)\n    x11 = fork(multiply, first, last)\n    x12 = chain(decrement, decrement, x11)\n    x13 = fork(greater, x12, x9)\n    x14 = sfilter(x2, x13)\n    x15 = palette(I)\n    x16 = remove(ZERO, x15)\n    x17 = lbind(colorcount, I)\n    x18 = argmin(x16, x17)\n    x19 = other(x16, x18)\n    x20 = color(I)\n    x21 = colorfilter(x2, x20)\n    x22 = outbox(x21)\n    x23 = difference(x22, x21)\n    x24 = fill(I, x19, x23)\n    x25 = argmin(x2, width)\n    x26 = other(x211, x25)\n    x27 =787(x26)\n    x28 = mostcolor(x27)\n    x29 = fill(x24, x28, x27)\n    x30 = normalize(x27)\n    x31 = ulcorner(x30)\n    x32 = width(x10)\n    x33 = x30(x12)\n    x34 = invert(x33)\n    x35 = tojvec(x34)\n    x36 = height(x10)\n    x37 = shift(x32, x36)\n    x38 = combine(x31, x37)\n    x39 = paint(x29, x38)\n    O = x20(x"], [1.1, "def solve_0a5f7455(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = shape(x12)\n    x15 = canvas(ZERO, x14)\n    x16 = lbind(multiply, x13)\n    x17 = apply(x16, x15)\n    x18 = rbind(contained, x17)\n    x19 = sfilter(x1, x18)\n    x20 = lbind(mapply, x12)\n    x21 = rbind(occurrences, x3)\n    x22 = chain(x20, x21, asindices)\n    x23 = lbind(mapply, x22)\n    x24 = chain(invert, x23, x26)\n    x25 = fork(shift, x22, x24)\n    x26 = compose(x5, x25)\n    x27 = palette(I)\n    x28 = mapply(x26, x27)\n    x29 = palette(I)\n    x30 = remove(x28, x29)\n    x31 = lbind(colorcount, x18)\n    x32 = argmax(x30, x31)\n    x33 = rbind(contained, x37)\n    x34 = compose(x33, first)\n    x35 = sfilter(x12, x34)\n    x36 = output(x35, x32)\n    x37 =021(x36)\n    x38 = argmin(x35, x27)\n    x39 = cover(x38, x39)\n    O ="], [1.1, "def solve_771b4948(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = palette(I)\n    x3 = compose(maximum, shape)\n    x4 = lbind(apply, x3)\n    x5 = lbind(colorfilter, x1)\n    x6 = chain(maximum, x4, x5)\n    x7 = matcher(x6, ONE)\n    x8 = extract(x2, x7)\n    x9 = lbind(ofcolor, I)\n    x10 = compose(backdrop, x9)\n    x11 = fork(equality, x9, x10)\n    x12 = extract(x2, x11)\n    x13 = ofcolor(I, x12)\n    x14 = ofcolor(I, x8)\n    x15 = rbind(manhattan, x13)\n    x16 = compose(x15, initset)\n    x17 = argmin(x14, x16)\n    x18 = ulcorner(x14)\n    x19 = contained(x18, x14)\n    x20 = shoot(x17, UNITY)\n    x21 = shoot(x17, NEG_UNITY)\n    x22 = combine(x20, x21)\n    x23 = shoot(x17, UP_RIGHT)\n    x24 = shoot(x17, DOWN_LEFT)\n    x25 = combine(x23, x24)\n    x26 = branch(x19, x22, x25)\n    x27 = asindices(I)\n    x28 = outbox(x13)\n    x29 = intersection(x27, x28)\n    x30 = intersection(x29, x26)\n    x31 = initset(x17)\n    x32 = rbind(manhattan, x31)\n    x33 = compose(x32, initset)\n    x34 = argmin(x30, x33)\n    x35 = height(x13)\n    x36 = height(I)\n    x37 = equality(x35, x36)\n    x38 = leftmost(x14)\n    x39 = leftmost(x13)\n    x40 = greater("], [1.1, "def solve_6a2ff814(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, T)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = rbind(colorcount, x9)\n    x11 = argmax(x5, x10)\n    x12 = other(x5, x11)\n    x13 = color(x12)\n    x14 = subgrid(x11, I)\n    x15 = lbind(insert, DOWN)\n    x16 = compose(lrcorner, asindices)\n    x17 = chain(x15, initset, x16)\n    x18 = fork(add, identity, x17)\n    x19 = compose(x14, x18)\n    x20 = fork(insert, x19, x6)\n    x21 = compose(x15, x20)\n    x22 = fork(subtract, x21, x18)\n    x23 = compose(x17, x22)\n    x24 = fork(subtract, x23, x16)\n    x25 = fork(insert, x24, x6)\n    x26 = compose(x21, x25)\n    x27 = fork(subtract, x26, x25)\n    x28 = rapply(x27, x7)\n    x29 = merge(x28)\n    x30 = cover(x14, x29)\n    x31 = argmax(x30, x29)\n    x32 = paint(x31, x3)\n    x33 = replace(x32, x9, replace(x30, x10)\n    x34 =2c2cce22(x31)\n    x35 = recolor(x34, x32)\n    x36 = lbind(shift, x31)\n    x37 = mapply(x36, x"], [1.1, "def solve_74a1ece0(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_34c13905(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_e30a35ae(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = d23(I)\n    x6 = add(TWO, x5)\n    x7 = tojvec(x6)\n    x8 = increment(x14)\n    x9 = canvas(x4, x8)\n    x10 = asobject(I)\n    x11 = shift(x10, x7)\n    x12 = palette(x11)\n    x13 = lbind(chain, size)\n    x14 = rbind(x13, toindices)\n    x15 = lbind(lbind, contained)\n    x16 = lbind(sfilter, x11)\n    x17 = compose(x15, x16)\n    x18 = chain(x17, x9, normalize)\n    x19 = lbind(colorcount, I)\n    x20 = compose(x19, palette)\n    x21 = matcher(x20, TWO)\n    x22 = extract(x12, x21)\n    x23 = colorcount(I, x22)\n    x24 =count(x10, ZERO)\n    x25 = positive(x24)\n    x26 = branch(x25, x22, x25)\n    x27 = ofcolor(I, x22)\n    x28 =314187(x27)\n    x29 = ofcolor(I, TWO)\n    x30 = recolor(x22, x29)\n    x31 = leftmost(x30)\n    x32 = lowermost(x30)\n    x33 = matcher(first, ZERO)\n    x34 = rightmost(x30)\n    x35 = matcher(first, TWO)\n    x36 = leftmost(x30)\n    x37 = rightmost(x30)\n    x38 = paint(x32, x31)\n    x39 = paint(x38, x34)\n    x40 = greater(x39, x26)\n    x41 = branch(x40, x33, x35)\n    x42 = leftmost"], [1.1, "def solve_42df03fe(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x24 = astuple(x10, cmirror)\n    x25 = astuple(x25, x24)\n    x26 = compose(x50, merge)\n    x27 = compose(x50, even)\n    x28 = fork(subtract, x26, x27)\n    x29 = fork(multiply, first, x28)\n    x30 = output(I, x11)\n    x31 = lbind(ofcolor, x30)\n    x32 = compose(x11, x30)\n    x33 = fork( difference, x29, x32)\n    x34 = rbind(toobject, I)\n    x35 = compose(x34, x30)\n    x36 = apply(x35, x3)\n    x37 = astuple(x31, x presents)\n    x38 = astuple(x37, x disagree)\n    x39 = initset(x38)\n    x40 = insert(x39, x"], [1.1, "def solve_35823430(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =548colors(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = toindices(x3)\n    x5 = asindices(I)\n    x6 = corners(x5)\n    x7 = lbind(rbind, manhattan)\n    x8 = toindices(x3)\n    x9 = combine(x6, x8)\n    x10 = fill(I, TEN, x9)\n    x11 = fork(manhattan, identity, initset)\n    x12 = fork(add, identity, x11)\n    x13 = height(x10)\n    x14 = width(x10)\n    x15 =multiply(x14, x13)\n    x16 = increment(x15)\n    x17 = width(x5)\n    x18 = divide(x17, x12)\n    x19 = increment(x18)\n    x20 = height(x3)\n    x21 = subtract(x20, x16)\n    x22 = divide(x21, x12)\n    x23 = increment(x22)\n    x24 = repeat(x10, x21)\n    x25 = subtract(x23, x24)\n    x26 =split(x25, x8)\n    x27 = lbind(intersection, x19)\n    x28 = chain(positive, size, x27)\n    x29 = matcher(x28, ZERO)\n    x30 = partition(x26)\n    x31 = sfilter(x30, x29)\n    x32 =68b19color(I)\n    x33 = compose(flip, x31)\n    x34 = sfilter(x31, x33)\n    x35 = dmirror(x14)\n    x36 = mpapply(recolor, x35, x34)\n    x37 = paint(x10, x36)\n    x38 = toindices(x3)\n    x39 = apply(x37, x38)\n    x40 = fork(add, last, first)\n    x41 =1995(x83)"], [1.1, "def solve_3cac6b51(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_8a10fdcc(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, size)\n    x3 = subgrid(x2, I)\n    x4 = normalize(x3)\n    x5 = replace(x3, ZERO, x4)\n    x6 = toindices(x4)\n    x7 = lbind(toindices, x6)\n    x8 = x7(x1)\n    x9 =3322696666602986756666\n    x10 = rbind(greater, ONE)\n    x11 = chain(x10, size, dedupe)\n    x12 = sfilter(x6, x11)\n    x13 = center(x12)\n    x14 = color(x12)\n    x15 = fill(x5, x14, x13)\n    x16 = objects(x15, T, F, T)\n    x17 = colorfilter(x16, x12)\n    x18 = rbind(toobject, x17)\n    x19 = chain(x18, color, x17)\n    x20 = rbind(colorcount, x14)\n    x21 = chain(x20, usgrid, x19)\n    x22 = fork(equality, x21, x19)\n    x23 = sfilter(x17, x22)\n    x24 = floindices(x23)\n    x25 = rbind(contained, x24)\n    x26 = lbind(index, x24)\n    x27 = compose(x25, x26)\n    x28 = fork(3355, x27, x26)\n    x29 = chain(x24, x27, x28)\n    x30 = fork(recolor, x29, x23)\n    x31 = mapply(x30, x23)\n    x32 = paint(x15, x31)\n    x33 = objects(x32, T, F, T)\n    x34 = rbind(adjacent, x2)\n    x35 = rbind(adjacent, x2)\n    x36 = fork(both, x34, x35)\n    x37 = sfilter(x33, x36"], [1.1, "def solve_13c9cced(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = compose(x5, color)\n    x7 = compose(double, x4)\n    x8 = lbind(prapply, manhattan)\n    x9 = fork(x8, identity, identity)\n    x10 = lbind(remove, ZERO)\n    x11 = compose(x10, x9)\n    x12 = rbind(branch, NEG_TWO)\n    x13 = fork(x12, positive, decrement)\n    x14 = chain(x13, minimum, x11)\n    x15 = fork(add, x14, x7)\n    x16 = compose(x15, x6)\n    x17 = compose(invert, x16)\n    x18 = order(x2, x17)\n    x19 = rbind(argmin, centerofmass)\n    x20 = compose(initset, vmirror)\n    x21 = fork(insert, dmirror, x20)\n    x22 = fork(insert, cmirror, x21)\n    x23 = fork(insert, hmirror, x22)\n    x24 = compose(x19, x23)\n    x25 = apply(x24, x18)\n    x26 = size(x2)\n    x27 = apply(size, x2)\n    x28 = contained(ONE, x27)\n    x29 = increment(x26)\n    x30 = branch(x28, x26, x29)\n    x31 = double(x30)\n    x32 = decrement(x31)\n    x33 = apply(normalize, x25)\n    x34 = interval(ZERO, x30, ONE)\n    x35 = pair(x34, x34)\n    x36 = mpapply(shift, x33, x35)\n    x37 = astuple(x32, x32)\n    x38 = canvas(x1, x37)"], [1.1, "def solve_4a897ca3(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = height(I)\n    x9 = astuple(x8, ONE)\n    x10 = canvas(THREE, x9)\n    x11 = hconcat(x10, I)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = identity(DOWN)\n    x17 = connect(ORIGIN, x15)\n    x18 = fill(x11, THREE, x17)\n    x19 = identity(x13)\n    x20 = identity(x12)\n    x21 = identity(x12)\n    x22 = identity(F)\n    x23 = identity(I)\n    x24 = compose(first, first)\n    x25 = chain(first, last, x24)\n    x26 = compose(first, first)\n    x27 = chain(last, last, x26)\n    x28 = chain(first, first, first)\n    x29 = chain(first, last, last)\n    x30 = chain(first, first, last)\n    x31 = chain(last, first, last)\n    x32 = compose(decrement, x25)\n    x33 = compose(decrement, x27)\n    x34 = fork(astuple, x32, x33)\n    x35 = compose(decrement, x27)\n    x36 = fork(multiply, x30, x35)\n    x37 = fork(add, x29, x36)\n    x38 = compose(decrement, x28)\n    x39 = fork(multiply, x30, x38)\n    x40 = fork(add, x29, x39)\n    x41 = fork"], [1.1, "def solve_2ad55902(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = argmin(I, ORIGIN)\n    x2 =56528x1, ZERO)\n    x3 = flip(x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    x5 = lbind(righthalf, I)\n    x6 = palette(I)\n    x7 = other(x6, ZERO)\n    x8 = rbind(colorcount, x7)\n    x9 = argmin(x2, x8)\n    x10 = rbind(colorcount, x7)\n    x11 = width(I)\n    x12 = decrement(x11)\n    x13 = tojvec(x12)\n    x14 = add(x13, UNITY)\n    x15 = multiply(x14, x12)\n    x16 = canvas(x7, x15)\n    x17 = ofcolor(I, x9)\n    x18 =(x17, x16)\n    x19 = rbind(contained, x18)\n    x20 = compose(x19, last)\n    x21 = sfilter(x17, x20)\n    x22 = compose(first, last)\n    x23 = fork( constructorform, first, last)\n    x24 = fork(equality, x22, x23)\n    x25 = sfilter(x21, x24)\n    x26 = undeman(x25)\n    O = replace(x16, x9, x26)\n    return O"], [1.1, "def solve_8a2862c0(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = partition(I)\n    x2 = product(x1, x1)\n    x3 = fork(equality, corners, toindices)\n    x4 = extract(x2, x3)\n    x5 = subgrid(x4, I)\n    x6 = objects(x5, T, F, F)\n    x7 =66916\n    \"\"\"\n    x8 = hsplit(x5, THREE)\n    x9 = merge(x8)\n    x10 = extract(x1, x9)\n    x11 = paint(x5, x10)\n    x12 = ofcolor(x11, ZERO)\n    x13 = first(x12)\n    x14 = ulcorner(x xx13)\n    x15 =68b1906(x14)\n    x16 = shift(x13, x15)\n    O = replace(x11, ZERO, FIVE)\n    return O"], [1.1, "def solve_698782f1(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = matcher(height, ONE)\n    x5 = fork(equality, toindices, x4)\n    x6 = sfilter(x3, x5)\n    x7 = sizefilter(x6, x2)\n    x8 = fork(adjacent, first, last)\n    x9 = compose(flip, x8)\n    x10 = extract(x7, x9)\n    x11 = remove(x10, x7)\n    x12 = merge(x11)\n    x13 = width(x12)\n    x14 = totuple(x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 =2266(x15, x16)\n    x18 =88(x17, x12)\n    x19 = shape(x10)\n    x20 = canvas(ZERO, x19)\n    x21 =_hconcat(x18, x20)\n    x22 = objects(x21, color, recovered)\n    x23 = first(x22)\n    x24 = apply(ulcorner, x23)\n    x25 = normalize(x23)\n    x26 = matcher(first, ZERO)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x24, x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    O = paint(I, x30)\n    return O"], [1.1, "def solve_633b7a08(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = rot180(I)\n    x2 = rbind(sfilter, hline)\n    x3 = compose(size, dedupe)\n    x4 = matcher(x3, ONE)\n    x5 = rbind(sfilter, x4)\n    x6 = chain( size, x5, dmirror)\n    x7 =\n    x8 = x6(I)\n    x9 = objects(x7, T, F, F)\n    x10 = argmax(x9, size)\n    x11 = color(x10)\n    x12 = x2(x10)\n    x13 = objects(x7, T, F, F)\n    x14 = extensions(x13, x12)\n    x15 = rbind(shoot, DOWN)\n    x16 = leftmost(x15)\n    x17 = rbind(mapply, x16)\n    x18 = lbind(rbind, manhattan)\n    x19 = chain(x18, initset, x17)\n    x20 = fork(combine, x17, x19)\n    x21 = compose(x12, x20)\n    x22 = fork(shift, x21, ulcorner)\n    x23 = compose(x3, x22)\n    x24 = fork(intersection, x23, size)\n    x25 = fork(recolor, x23, x24)\n    x26 = compose(x3, x22)\n    x27 = fork(mapply, x26, x25)\n    x28 = interval(SIX, FOUR, ONE)\n    x29 = mapply(x27, x28)\n    x30 = mapply(x22, x29)\n    x31 = paint(x1, x30)\n    O = paint(x31, x304)\n    return O"], [1.1, "def solve_9730b7f2(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =233c669\n    2667526606\n    6362062184\n    3609967069\n    8680902806\n    6860166707\n    2116086365\n    7766369577\n    0769843602\n    \"\"\"\n    x2 = frontiers(I)\n    x3 = merge(x2)\n    x4 = difference(x5, x3)\n    x5 = mapply(toindices, x4)\n    x6 = objects(I, T, F, F)\n    x7 =x6(x5)\n    x8 = shift(x7, ulcorner)\n    x9 = mapply(toindices, x6)\n    x10 = mapply(toindices, x9)\n    x11 = fill(I, FOUR, x5)\n    x12 = fill(x11, TWO, x10)\n    x13 = rbind(a61f2674\n    x14 = rbind(toobject, I)\n    x15 = chain(x13, x14, delta)\n    x16 = x15(x6)\n    x17 = fill(x12, TWO, x16)\n    x18 = color(x2)\n    x19 = fill(x17, x18, x20)\n    x20 = objects(x19, T, F, F)\n    x21 = apply(toindices, x20)\n    x22 = apply(x21, x12)\n    x23 = normalize(x22)\n    x24 = lbind(shift, x23)\n    x25 = mapply(x24, x2)\n    O = paint(x19, x25)\n    return O"], [1.1, "def solve_3fbdd3ab(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    O = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.1, "def solve_a5295d96(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 =80(I)\n    x2 = objects(I, T, F, T)\n    x3 = sizefilter(x2, ONE)\n    x4 = difference(x2, x3)\n    x5 = apply(color, x4)\n    x6 = rbind(contained, x5)\n    x7 = compose(x6, color)\n    x8 = sfilter(x3, x7)\n    x9 = lbind(colorfilter, x4)\n    x10 = chain(first, x9, color)\n    x11 = fork(gravitate, identity, x10)\n    x12 = fork(shift, identity, x11)\n    x13 = mapply(x12, x8)\n    O = paint(I, x13)\n    return O"], [1.1, "def solve_1a82dcaa(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = lbind(sfilter, x12)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = chain(size, x3, little)\n    x5 = fork(repeat, x3, x4)\n    x6 = compose(dmirror, x5)\n    x7 = fork(equality, identity, x6)\n    x8 =istine(I)\n    x9 = sfilter(x8, x7)\n    x10 = argmax(x9, x5)\n    x11 =002(x10, identity)\n    x12 = objects(x11, T, F, F)\n    x13 = merge(x12)\n    x14 = color(x13)\n    x15 = leftmost(x10)\n    x16 = interval(ONE, x15, ONE)\n    x17 = rbind(contained, x16)\n    x18 = compose(x17, last)\n    x19 = sfilter(x15, x18)\n    x20 = increment(x15)\n    x21 = rbind(contained, x20)\n    x22 = compose(x21, last)\n    x23 = fork(subtract, first, x22)\n    x24 = chain(increment, x23, last)\n    x25 = fork(greater, x24, identity)\n    x26 = compose(x25, last)\n    x27 = rbind(sfilter, x26)\n    x28 = chain(merge, x27, x24)\n    x29 = apply(x28, x19)\n    x30 = sfilter(x29, x5)\n    x31 = compose(vfrontier, x24)\n    x32 = x31(x30)\n    x33 = lbind(mapply, x36)\n    x34 = rbind(sfilter, x33)\n    x35 = compose(x34, x24)\n    x36 = pair(x32, x35)\n    x37 = mapply(x36, x22)\n    O = underfill(x11, x paint, x37)\n    return O"], [1.1, "def solve_56b32cb2(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = compose(first, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = compose(last, last)\n    x8 = totuple(x2)\n    x9 = apply(x7, x8)\n    x10 = mostcommon(x9)\n    x11 = compose(first, last)\n    x12 = matcher(x11, x6)\n    x13 = sfilter(x2, x12)\n    x14 = compose(last, last)\n    x15 = matcher(x14, x10)\n    x16 = sfilter(x2, x15)\n    x17 =88bind(astuple, x13)\n    x18 = initset(x17)\n    x19 = matcher(first, x6)\n    x20 = compose(flip, x19)\n    x21 = mfilter(x18, x20)\n    O = fill(I, TWO, x21)\n    return O"], [1.1, "def solve_8a32ee85(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 =2217a3322\n    x2 =711213578\n    x3 =4421417dc433765\n    5224774785    7995ad74\n    1863443112\n    3207563528\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =22ofcolor(I, x1)\n    x3 =444(TWO, x2)\n    x4 = neighbors(UNITY)\n    x5 = recolor(x1, x4)\n    x6 = asindices(I)\n    x7 = outbox(x6)\n    x8 = lbind(shift, x7)\n    x9 = mapply(x8, x5)\n    x10 = combine(x4, x9)\n    O = paint(I, x10)\n    return O"], [1.1, "def solve_2263002b(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, T, F, T)\n    x13 = colorfilter(x12, x11)\n    x14 = rbind(manhattan, x8)\n    x15 = argmin(x13, x14)\n    x16 = ofcolor(x15, x10)\n    x17 = hmirror(x16)\n    x18 = invert(x17)\n    x19 =18(TWO)\n    x20 = shift(x18, x19)\n    x21 = lbind(shift, x20)\n    x22 = rbind( toobject, x25)\n    x23 = mostcolor(x22)\n    x24 = lbind(shift, x25)\n    x25 = rbind(toobject, x6)\n    x26 = mapply(x24, x21)\n    x27 = combine(x23, x26)\n    x28 = rbind(contained, x27)\n    x29 = apply(x28, x27)\n    x30 =gravitate(x29, x28)\n    x31 = rbind(add, x29)\n    x32 = initset(x15)\n    x33 = rbind(add, x32)\n    x34 = fork(subtract, x33, x31)\n    x35 = fork(shift, identity, x34)\n    x36 = mapply(x35, x30)\n    O = paint(x15, x36)\n    return O"], [1.1, "def solve_4245c791(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =225(I)\n    x2 = objects(x1, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = apply(ulcorner, x2)\n    x5 = normalize(x3)\n    x6 = lbind(shift, x5)\n    x7 = mapply(x6, x4)\n    O = paint(x1, x7)\n    return O"], [1.1, "def solve_2e959a4a(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 =91 thing(I, T, F, T)\n    x2 = matcher(size, TWO)\n    x3 = mfilter(x1, x2)\n    x4 = matcher(size, ONE)\n    x5 = mfilter(x1, x4)\n    x6 = matcher(size, FOUR)\n    x7 = mfilter(x1, x6)\n    x8 = fill(I, THREE, x3)\n    x9 = fill(x8, TWO, x5)\n    O = fill(x9, ONE, x7)\n    return O"], [1.1, "def solve_8115fd37(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = totuple(x3)\n    x5 = apply(color, x4)\n    x6 = mostcommon(x5)\n    x7 =422(x4, identity)\n    x8 = lbind(matcher, x7)\n    x9 = compose(x8, color)\n    x10 = fork(sfilter, identity, x9)\n    x11 = size(x1)\n    x12 =objects(I)\n    x13 = rbind(colorcount, x6)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x6)\n    x16 = matcher(x15, x14)\n    x17 = mfilter(x12, x16)\n    x18 =82(I, x17)\n    x19 = replace(x18, x6, x1)\n    O = fill(x19, ZERO, x17)\n    return O"], [1.1, "def solve_20395068(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = combine(x13, x15)\n    x17 = shape(I)\n    x18 = maximum(x17)\n    x19 = lbind(shift, x17)\n    x20 = mapply(x19, x16)\n    x21 = paint(I, x20)\n    x22 = toindices(x5)\n    x23 = center(x22)\n    x24 = initset(x23)\n    x25 = insert(x24, x1)\n    x26 = insert(x35, x25)\n    x27 = dmirror(x26)\n    x28 = lbind(shift, x27)\n    x29 = apply(x28, x24)\n    x30 =393(x21)\n    x31 = rbind(rapply, x30)\n    x32 = apply(x31, x22)\n    x33 = mapply(x32, x29)\n    O = fill(x21, x9, x33)\n    return O"], [1.1, "def solve_f60ebd4b(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    O =19985 to86(I):\n    return O"], [1.1, "def solve_eed37371(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(normalize, x3)\n    x5 = mapply(toindices, x4)\n    x6 = difference(x5, x4)\n    x7 = fill(I, EIGHT, x6)\n    x8 = index(x7, ORIGIN)\n    x9 = colorcount(x7, ZERO)\n    x10 = positive(x9)\n    x11 = branch(x10, dmirror, identity)\n    x12 = x11(x7)\n    x13 = objects(x12, T, F, T)\n    x14 =454(x13)\n    x15 =111(x14)\n    x16 = replace(x15, FIVE, ZERO)\n    O = x11(x16)\n    return O"], [1.1, "def solve_9c95dec5(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = ofcolor(I, TWO)\n    x3 = argmax(x1, size)\n    x4 = subgrid(x2, I)\n    x5 = normalize(x3)\n    x6 = replace(x4, TWO, ZERO)\n    x7 = lbind(insert, x6)\n    x8 = chain(x7, ulcorner, last)\n    x9 = x8(x5)\n    x10 = lbind(recolor11\n    \n    x11 = rbind(ofcolor, TWO)\n    x12 = compose(x10, x11)\n    x13 = fork(paint, identity, x12)\n    x14 = height(x5)\n    x15 = vsplit(x5, x14)\n    x16 = mapply(x6, x15)\n    x17 = ofcolor(x16, TWO)\n    x18 = compose(x3, x17)\n    x19 = x18(x5)\n    x20 = gravitate(x19, x17)\n    O = fill(x9, ZERO, x20)\n    return O"], [1.1, "def solve_ce11ddca(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =445(I)\n    x2 =1168838699464(x1, ONE)\n    x3 = leastcolor(x2)\n    x4 = ofcolor(I, x3)\n    x5 = fill(I, ZERO, x4)\n    x6 = ofcolor(I, x4)\n    x7 = box(x6)\n    x8 = fill(x5, x3, x7)\n    x9 = mapply(delta, x8)\n    O = fill(x9, x4, xExample output:\n    8888888044\n    8649488800\n    1248042948\n    80146180036\n    8848856486\n    36683484853\n    1326880488\n    8684486648\n    8883248536\n    4874225538\n    \"\"\"\n    x1 = fill(x8, x3, x2)\n    O = fill(x1, x4, x3)\n    return O"], [1.1, "def solve_531d3962(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 =9999(I, T31)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(x3, ONE)\n    x5 = branch(x4, dmirror, identity)\n    x6 = branch(x4, height, width)\n    x7 = x6(I)\n    x8 = astuple(ONE, x7)\n    x9 = x5(I)\n    x10 = crop(x9, ORIGIN, x8)\n    x11 = apply(dedupe, x10)\n    O = x5(x11)\n    return O"], [1.1, "def solve_a23eff2b(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =03733(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = partition(I)\n    x7 = fork(multiply, height, width)\n    x8 = fork(equality, size, x7)\n    x9 = sfilter(x6, x8)\n    x10 = argmax(x9, size)\n    x11 = difference(x5, x10)\n    x12 = apply(initset, x11)\n    x13 = rbind(hmatching, x10)\n    x14 = rbind(vmatching, x10)\n    x15 = fork(either, x13, x14)\n    x16 = sfilter(x12, x15)\n    x17 = rbind(gravitate, x10)\n    x18 = fork(add, center, x17)\n    x19 = fork(connect, center, x18)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x16)\n    O = paint(I, x21)\n    return O"], [1.1, "def solve_a10739a5(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = lbind(canvas, ZERO)\n    x2 = lbind(occurrences, I)\n    x3 = compose(x1, x2)\n    x4 = fork(apply, x3, leastcolor)\n    x5 = compose(maximum, x4)\n    x6 = compose(subtract, x5)\n    x7 = fork(astuple, x6, identity)\n    x8 = apply(x7, I)\n    x9 = maximum(x8)\n    x10 = dmirror(I)\n    x11 = x9(x10)\n    x12 = dmirror(x11)\n    x13 = x7(x12)\n    x14 = width(x11)\n    x15 = astuple(x14, x13)\n    x16 = repeat(x15, ONE)\n    x17 = output:\n    171\n    516\n    \"\"\"\n    x1 = x9(I)\n    x2 = fork(subtract, last, last)\n    x3 = compose(first, x2)\n    x4 = extract(x1, x3)\n    x5 = x4(x1)\n    x6 = last(x5)\n    x7 = compose(first, last)\n    x8 = difference(x5, x6)\n    x9 = file(x8, x7)\n    x10 = matcher(first, x6)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x9, x11)\n    O = fill(x6, TWO, x12)\n    return O"], [1.1, "def solve_0e025c9a(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 =33177(I,33177)\n    x2 = equality(x1, ZERO)\n    x3 = branch(x2, UP, RIGHT)\n    x4 = branch(x3, DOWN, RIGHT)\n    x5 = multiply(x4, x4)\n    x6 = add(x5, TWO)\n    O = canvas(ZERO, x5)\n    return O"], [1.1, "def solve_859b4d13(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = leftmost(x2)\n    x5 = width(I)\n    x6 = interval(x4, x5, TWO)\n    x7 = apply(tojvec, x6)\n    x8 = astuple(x interval, x4)\n    x9 = lbind(canvas, ZERO)\n    x10 = lbind(occurrences, I)\n    x11 = lbind(lbind, shift)\n    x12 = compose(x11, last)\n    x13 = lbind(recolor, x3)\n    x14 =decrement(x5)\n    x15 =853000(x14, x12)\n    x16 = paint(I, x15)\n    x17 = interval(x5, x16, ONE)\n    x18 = ofcolor(x16, x3)\n    x19 = rbind(ofcolor, x3)\n    x20 = compose(x19, center)\n    x21 = fork(recolor, x20, last)\n    x22 = mapply(x21, x17)\n    O = paint(x16, x22)\n    return O"], [1.1, "def solve_8611488f(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =4468117(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [1.1, "def solve_887ebcd9(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = height(I)\n    x5 = width(I)\n    x6 = matcher(925, x4)\n    x7 =16(I)\n    x8 = extract(x3, x6)\n    x9 = partition(x8)\n    x10 = sizefilter(x9, ONE)\n    x11 = lbind(greater, ONE)\n    x12 = compose(x11, size)\n    x13 = argmin(x10, x12)\n    x14 = palette(x13)\n    x15 = remove(x8, x14)\n    x16 = other(x15, x13)\n    x17 = palette(x13)\n    x18 = vmirror(x17)\n    x19 = lbind(shift, x18)\n    x20 = mapply(x19, x17)\n    x21 = ofcolor(x13, x16)\n    x22 = ofcolor(x18, x16)\n    x23 = combine(x21, x22)\n    x24 = fill(x13, ZERO, x23)\n    x25 = difference(x19, x23)\n    x26 = objects(x24, F, T, T)\n    x27 = rbind(adjacent, x26)\n    x28 = rbind(adjacent, x25)\n    x29 = extract(x27, x28)\n    x30 = initset(x29)\n    x31 = recolor(x16, x30)\n    x32 = combine(x27, x31)\n    x33 = fork(combine, vfrontier, hfrontier)\n    x34 = mapply(x33, x32)\n    O = fill(x24, x20, x34)\n    return O"], [1.1, "def solve_0a37c001(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = sizefilter(x1, ONE)\n    x3 = compose(neighbors, center)\n    x4 = fork(recolor, color, x3)\n    x5 = compose(decrement,472)\n    x6 = apply(x4, x2)\n    x7 = order(x6, identity)\n    x8 = compose(last, last)\n    x9 = compose(8042, x8)\n    x10 = apply(x9, x7)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = sfilter(x10, x11)\n    x14 = sfilter(x12, x7)\n    x15 = merge(x13)\n    x16 =9999512(x15)\n    x17 = mapply(x4, x13)\n    x18 = mapply(x4, x14)\n    x19 = paint(I, x13)\n    x20 = paint(x19, x18)\n    O = paint(x20, x17)\n    return O"], [1.1, "def solve_a854a2b4(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 =94a9b722(x2)\n    x4 = toindices(x3)\n    x5 = compose(double, halve)\n    x6 = fork(equality, identity, x5)\n    x7 = compose(x6, last)\n    x8 = sfilter(x4, x7)\n    x9 = fill(I, x1, x8)\n    O = replace(x9, FIVE, ZERO)\n    return O"], [1.1, "def solve_65464a30(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 =184(I)\n    x2 =754(I)\n    x3 = urcorner(x2)\n    x4 = shoot(x3, UP_RIGHT)\n    x5 =87(x4)\n    x6 = branch(x1, x5, x4)\n    O = crop(I, x3, x6)\n    return O"], [1.1, "def solve_cc1490c8(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 =0000000(I)\n    x2 =0000000(I)\n    x3 =0000000(I)\n    x4 = neighbors(ORIGIN)\n    x5 = mapply(neighbors, x4)\n    x6 = lbind(shift, x1)\n    x7 = apply(x6, x5)\n    x8 = lbind(recolor, TWO)\n    x9 = mapply(x8, x7)\n    O = paint(I, x9)\n    return O"], [1.1, "def solve_b0e08ea9(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 =279(I)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = asindices(x4)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = intersection(x5, x6)\n    x8 = lrcorner(x7)\n    x9 = shoot(x8, DOWN_LEFT)\n    x10 = intersection(x7, x9)\n    x11 = combine(x7, x10)\n    x12 = llcorner(x11)\n    x13 = remove(x12, x11)\n    x14 = lbind(shift, x13)\n    x15 = height(x12)\n    x16 = lbind(multiply, x15)\n    x17 = chain(x14, width, x16)\n    x18 = fgpartition(x4)\n    x19 = sizefilter(x18, FOUR)\n    x20 = fork(equality, toindices, x19)\n    x21 = sfilter(x19, x20)\n    x22 = mapply(x17, x21)\n    x23 = paint(x4, x22)\n    x24 = quotecdecrement(x5)\n    x25 =O = crop(x23, x24, x20)\n    O = x3(x25)\n    return O"], [1.1, "def solve_29fdfe4d(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = trim(I)\n    x2 = tophalf(x1)\n    x3 = lefthalf(x2)\n    x4 = tophalf(x3)\n    x5 = righthalf(x3)\n    x6 = bottomhalf(x3)\n    x7 = lefthalf(x5)\n    x8 = bottomhalf(x5)\n    x9 = righthalf(x6)\n    x10 = index(I, ORIGIN)\n    x11 = width(I)\n    x12 = decrement(x11)\n    x13 = tojvec(x12)\n    x14 = index(I, x13)\n    x15 = height(I)\n    x16 = decrement(x15)\n    x17 = toivec(x16)\n    x18 = index(I, x17)\n    x19 = shape(I)\n    x20 = decrement(x19)\n    x21 = index(I, x20)\n    x22 = compress(I)\n    x23 = asindices(x22)\n    x24 = box(x23)\n    x25 = fill(x22, x24, x23)\n    x26 =000000(x25)\n    O = replace(x26, x18, x20)\n    return O"], [1.1, "def solve_c5ddb86f(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = SEVEN(I)\n    x2 =matcher(first, ZERO)\n    x3 = rbind(s16, THREE)\n    x4 = compose(x2, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = lbind(toobject, x5)\n    x7 = chain(x1, x5, x6)\n    x8 = astuple(numcolors, ONE)\n    x9 = x7(x8)\n    x10 = decrement(x9)\n    x11 =1(x10)\n    x12 = subtract(x11, x10)\n    x13 = recolor(ZERO, x112)\n    x14 = paint(I, x13)\n    x15 = hsplit(x14, THREE)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = vmirror(x17)\n    x19 = hconcat(x16, x18)\n    x20 = hmirror(x19)\n    x21 = vconcat(x19, x20)\n    x22 = vconcat(x21, x22)\n    O = hmirror(x22)\n    return O"], [1.1, "def solve_cd005206(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =445(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = fork(multiply, height, width)\n    x7 = halve(x5)\n    x8 = lefthalf(I)\n    x9 = righthalf(I)\n    x10 = connect(x8, x9)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x10, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, vsplit, hsplit)\n    x16 = x15(I, TWO)\n    x17 = first(x16)\n    x18 = last(x16)\n    x19 = palette(x17)\n    x20 = palette(x18)\n    x21 = intersection(x19, x20)\n    x22 = first(x21)\n    x23 = shape(x17)\n    x24 = canvas(x22, x23)\n    x25 = ofcolor(x17, x22)\n    x26 = ofcolor(x18, x22)\n    x27 = intersection(x25, x26)\n    O = fill(x24, TWO, x27)\n    return O"], [1.1, "def solve_7fc9d2a4(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = color(x6)\n    x8 = lbind(recolor, NEG_ONE)\n    x9 = rbind(ofcolor, x7)\n    x10 = chain(x8, x9, backdrop)\n    x11 = fork(paint, identity, x10)\n    x12 =1111(x11, x5)\n    x13 = dmirror(x12)\n    x14 = ulcorner(x2)\n    x15 = lrcorner(x2)\n    x16 = shape(x12)\n    x17 = add(x16, UP_RIGHT)\n    x18 = add(x14, DOWN_LEFT)\n    x19 = shift(x13, x17)\n    x20 = x15(x19)\n    x21 = paint(x12, x20)\n    O = paint(x21, x3)\n    return O"], [1.1, "def solve_0ae8b0f1(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = ONE)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(x3, ONE)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = objects(x6, T, F, F)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x5(x10)\n    return O"], [1.1, "def solve_484b562b(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 =173(I)\n    x2 = frontiers(I)\n    x3 = merge(x2)\n    x4 = difference(x1, x3)\n    x5 = mostcolor(x4)\n    x6 = objects(I, T, F, F)\n    x7 = color(x3)\n    x8 = matcher(color, x7)\n    x9 = matcher(color, x5)\n    x10 = fork(either, x8, x9)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x6, x11)\n    x13 = merge(x12)\n    x14 = palette(x13)\n    x15 = lbind(mfilter, x12)\n    x16 = lbind(matcher,color)\n    x17 = compose(x15, x16)\n    x18 = apply(x17, x14)\n    x19 = fork(either, vline, hline)\n    x20 = lbind(prapply, connect)\n    x21 = fork(x20, identity, identity)\n    x22 = compose(x21, toindices)\n    x23 = rbind(sfilter, x19)\n    x24 = chain(merge, x23, x22)\n    x25 = fork(recolor, color, x24)\n    x26 = mapply(x25, x18)\n    x27 = paint(I, x26)\n    O = paint(x27, x3)\n    return O"], [1.1, "def solve_0a2d7acf(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = Turtle\n    5555558555\n    5558558555\n    5015585569\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, dmirror, identity)\n    x3 = x2(I)\n    x4 = objects(x3, T, F, T)\n    x5 = argmin(x4, leftmost)\n    x6 = argmax(x4, leftmost)\n    x7 = color(x5)\n    x8 = color(x6)\n    x9 = leftmost(x5)\n    x10 = leftmost(x6)\n    x11 = subtract(x10, x9)\n    x12 = double(x11)\n    x13 = multiply(THREE, TEN)\n    x14 = interval(x9, x13, x12)\n    x15 = interval(x10, x13, x12)\n    x16 = compose(vfrontier, tojvec)\n    x17 = mapply(x16, x14)\n    x18 = mapply(x16, x15)\n    x19 = recolor(x7, x17)\n    x20 = recolor(x8, x18)\n    x21 = combine(x19, x20)\n    x22 = paint(x3, x21)\n    O = x2(x22)\n    return O"], [1.1, "def solve_58fe9c06(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = matcher(ineighbors, UNITY)\n    x3 = extract(x1, x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(x3, x6)\n    x8 = objects(x7, F, T, T)\n    x9 = argmin(x8, size)\n    x10 = normalize(x9)\n    x11 = toindices(x10)\n    x12 = increment(x5)\n    x13 = increment(x12)\n    x14 = shift(x11, x13)\n    x15 = shift(x11, x14)\n    x16 =100(x15)\n    x17 = ulcorner(x10)\n    x18 = urcorner(x15)\n    x19 = shoot(x17, NEG_UNITY)\n    x20 = shoot(x18, DOWN_LEFT)\n    x21 = combine(x19, x20)\n    x22 = combine(x18, x21)\n    x23 = x5(x22)\n    O = fill(x6, x4, x23)\n    return O"], [1.1, "def solve_670c1eae(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = width(I)\n    x5 = astuple(x4, x4)\n    x6 = canvas(x3, x5)\n    x7 = interval(ONE,SIX, ONE)\n    x8 = invert(TEN)\n    x9 = interval(x8, TEN, ONE)\n    x10 = product(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = apply(x11, x10)\n    x14 = apply(x12, x10)\n    x15 = divide(x4, x4)\n    x16 = width(I)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = height(I)\n    x19 = interval(ZERO, x18, ONE)\n    x20 = pair(x19, x14)\n    x21 = apply(x11, x20)\n    x22 = apply(box, x21)\n    x23 = pair(x21, x22)\n    x24 = mapply(to fill, x23, THREE)\n    O = fill(x24, FOUR, x2)\n    return O"], [1.1, "def solve_20156c2f(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = rot270(I)\n    x2 = hconcat(I, x1)\n    x3 = mapply(d4469remove, x2)\n    x4 =O = rot90(x2)\n    x5 =180(x4)\n    x6 = astuple(x5, x4)\n    x7 = x8(I)\n    x8 = x9(x7)\n    x9 = rot270(x8)\n    x10 = hconcat(x9, x1)\n    x11 = hconcat(x10, x8)\n    O = vconcat(x9, x11)\n    return O"], [1.1, "def solve_16f7ed9d(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = rbind(Sfilter, ORIG2)\n    x2 = compose(dmirror, x1)\n    x3 = chain(size, dedupe, x2)\n    x4 = matcher(x3, ONE)\n    x5 = compose(71,042)\n    x6 = difference(x1, x5)\n    x7 = astuple(ONE, THREE)\n    x8 = astuple(TWO, FOUR)\n    x9 = initset(x7)\n    x10 = insert(x8, x9)\n    x11 = insert(x4, x10)\n    x12 = insert(x501, x11)\n    x13 = lbind(ofcolor, I)\n    x14 = lbind(mapply, neighbors)\n    x15 = chain(x14, x13, x141)\n    x16 = fork(difference, x15, identity)\n    x17 = chain(size, x13, x16)\n    x18 = matcher(x17, ZERO)\n    x19 = lbind(extract, x5)\n    x20 = chain(x19, x13, x141)\n    x21 = compose(last, x20)\n    x22 = fork(subtract, x21, x15)\n    x23 = chain(initset, x500, x22)\n    x24 = fork(rapply, x23, identity)\n    x25 = compose(first, x24)\n    x26 = compose(x5, x22)\n    x27 = fork(intersection, x26, x25)\n    x28 = chain(x19, x24, x27)\n    x29 = compose(x5, x27)\n    x30 = fork(intersection, x29, x28)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(I, x32)\n    O = trim(x33)\n    return O"], [1.1, "def solve_8b3368f7(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(673ef23, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"]], "1e97544e": [[0.03276475738208417, "def solve_288cfff0(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = sfilter(x2, square)\n    x4 = difference(x2, x3)\n    x5 = merge(x3)\n    x6 = recolor(THREE, x5)\n    x7 = merge(x4)\n    x8 = recolor(FOUR, x7)\n    x9 = paint(I, x6)\n    O = paint(x9, x8)\n    return O"], [0.03379847868066785, "def solve_098a307f(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, FOUR, x6)\n    return O"], [0.03516084518623489, "def solve_ae79e827(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, TWO, x6)\n    return O"], [0.03516084518623489, "def solve_a8d2bd7c(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, TWO, x6)\n    return O"], [0.05090373268510345, "def solve_6ce84a7d(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_5b6a6a11(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_06858a4e(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_6cef9a04(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_0d6d5f46(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_0f33f28f(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_e586a6ca(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_ec5d73c7(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.05090373268510345, "def solve_118cfe50(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.06555616266185658, "def solve_f1c7bbbd(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.06555616266185658, "def solve_a03c489d(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = recolor(ZERO, x2)\n    x4 = normalize(x3)\n    x5 = occurrences(I, x4)\n    x6 = toindices(x4)\n    x7 = lbind(shift, x6)\n    x8 = mapply(x7, x5)\n    O = fill(I, x1, x8)\n    return O"], [0.06555616266185658, "def solve_54436cb3(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_e71f7902(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_e12b3625(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_ecf3f142(I):\n    x1 = fork(multiply, height, width)\n    x2 = partition(I)\n    x3 = argmax(x2, x1)\n    x4 = remove(x3, x2)\n    x5 = argmax(x4, x1)\n    x6 = other(x4, x5)\n    x7 = palette(I)\n    x8 = lrcorner(x5)\n    x9 = add(x8, UNITY)\n    x10 = llcorner(x5)\n    x11 = add(x10, DOWN_LEFT)\n    x12 = urcorner(x5)\n    x13 = add(x12, UP_RIGHT)\n    x14 = ulcorner(x5)\n    x15 = add(x14, NEG_UNITY)\n    x16 = shoot(x9, UNITY)\n    x17 = shoot(x11, DOWN_LEFT)\n    x18 = shoot(x13, UP_RIGHT)\n    x19 = shoot(x15, NEG_UNITY)\n    x20 = combine(x16, x17)\n    x21 = combine(x18, x19)\n    x22 = combine(x20, x21)\n    x23 = color(x6)\n    O = fill(I, x23, x22)\n    return O"], [0.06555616266185658, "def solve_f20dc35f(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.06555616266185658, "def solve_f878706b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.06555616266185658, "def solve_77930746(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = normalize(x2)\n    x4 = lbind(matcher, first)\n    x5 = compose(x4, mostcolor)\n    x6 = fork(sfilter, identity, x5)\n    x7 = fork(difference, identity, x6)\n    x8 = lbind(rbind, upscale)\n    x9 = interval(ONE, FOUR, ONE)\n    x10 = apply(x8, x9)\n    x11 = lbind(recolor, ZERO)\n    x12 = compose(x11, outbox)\n    x13 = fork(combine, identity, x12)\n    x14 = lbind(occurrences, I)\n    x15 = lbind(rbind, subtract)\n    x16 = lbind(apply, increment)\n    x17 = lbind(lbind, shift)\n    x18 = chain(x15, ulcorner, x7)\n    x19 = chain(x14, x13, x7)\n    x20 = fork(apply, x18, x19)\n    x21 = compose(x16, x20)\n    x22 = fork(mapply, x17, x21)\n    x23 = rapply(x10, x3)\n    x24 = mapply(x22, x23)\n    O = paint(I, x24)\n    return O"], [0.06555616266185658, "def solve_11c7f307(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.06555616266185658, "def solve_7eb304f9(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = height(x2)\n    x4 = height(I)\n    x5 = interval(ZERO, x4, x3)\n    x6 = lbind(shift, x2)\n    x7 = compose(x6, toivec)\n    x8 = compose(x7, invert)\n    x9 = fork(combine, x7, x8)\n    x10 = mapply(x9, x5)\n    O = paint(I, x10)\n    return O"], [0.06555616266185658, "def solve_4b8b40a0(I):\n    x1 = width(I)\n    x2 = astuple(NINE, x1)\n    x3 = canvas(ZERO, x2)\n    x4 = vconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = rbind(colorcount, TWO)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.06555616266185658, "def solve_14ef5834(I):\n    x1 = shape(I)\n    x2 = canvas(ZERO, x1)\n    x3 = hconcat(I, x2)\n    x4 = objects(x3, F, F, T)\n    x5 = matcher(color, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = sizefilter(x7, ONE)\n    x9 = merge(x8)\n    O = fill(I, ONE, x9)\n    return O"], [0.06555616266185658, "def solve_0bea6a70(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.0657577601984795, "def solve_02888a76(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, T)\n    x3 = rbind(objects, F)\n    x4 = rbind(x3, F)\n    x5 = rbind(x4, T)\n    x6 = lbind(canvas, x1)\n    x7 = compose(x6, shape)\n    x8 = fork(paint, x7, normalize)\n    x9 = compose(x5, x8)\n    x10 = fork(colorfilter, x9, color)\n    x11 = rbind(shift, RIGHT)\n    x12 = rbind(argmax, rightmost)\n    x13 = compose(x12, x10)\n    x14 = fork(remove, x13, x10)\n    x15 = chain(x11, merge, x14)\n    x16 = rbind(argmax, rightmost)\n    x17 = compose(x16, x10)\n    x18 = fork(combine, x17, x15)\n    x19 = fork(shift, x18, ulcorner)\n    x20 = merge(x2)\n    x21 = fill(I, x1, x20)\n    x22 = mapply(x19, x2)\n    O = paint(x21, x22)\n    return O"], [0.06927348904207718, "def solve_1a66c75a(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = fill(I, x8, x32)\n    return O"], [0.06959741552663885, "def solve_a4ad214b(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.0702135574591548, "def solve_ca6a9b87(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.0702135574591548, "def solve_b54d0461(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.0702135574591548, "def solve_ecdc6445(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.0702135574591548, "def solve_ba1de0a8(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.0702135574591548, "def solve_b4252d0c(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.0702135574591548, "def solve_21c5f80a(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.0709170432415734, "def solve_76dbc30e(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.0709170432415734, "def solve_1337d54c(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.07641808482315048, "def solve_9a5cba85(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_47143755(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_f806b6fc(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_de2b6808(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_77026548(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_dec8195a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_82db253a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_e861c1ef(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_868dbe6e(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_f5bbc6f8(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_3bbd14bd(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_52dd0580(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_716a7ac9(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_5b4c7e19(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07641808482315048, "def solve_7048e271(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.07909280166991962, "def solve_c3094d4a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.07909280166991962, "def solve_c178e374(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.07965827462600561, "def solve_618efc47(I):\n    x1 = objects(I, T, F, T)\n    x2 = ofcolor(I, TWO)\n    x3 = argmin(x1, numcolors)\n    x4 = normalize(x3)\n    x5 = occurrences(I, x4)\n    x6 = toindices(x4)\n    x7 = lbind(shift, x6)\n    x8 = mapply(x7, x5)\n    O = fill(I, ONE, x8)\n    return O"], [0.0868238750835419, "def solve_f2764e95(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_0287bf80(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_d786afa4(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_0ddb2b7b(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_4ea083dd(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_57386026(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_ee2265d2(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_14ef9b6a(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_118e7952(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_49bd86c3(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_113147be(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.0868238750835419, "def solve_0289ef55(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08814760712595086, "def solve_cf5f3182(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = astuple(x1, ONE)\n    x8 = astuple(ONE, x2)\n    x9 = decrement(x1)\n    x10 = decrement(x2)\n    x11 = toivec(x10)\n    x12 = tojvec(x9)\n    x13 = crop(I, x11, x8)\n    x14 = crop(I, x12, x7)\n    x15 = asobject(x14)\n    x16 = asobject(x13)\n    x17 = vperiod(x15)\n    x98 = hperiod(x16)\n    x99 = astuple(x17, x98)\n    x10 = lbind(multiply, x10)\n    x11 = neighbors(ORIGIN)\n    x12 = mapply(neighbors, x11)\n    x13 = apply(x10, x12)\n    x14 = lbind(shift, x6)\n    x15 = mapply(x14, x13)\n    O = paint(I, x15)\n    return O"], [0.09043595976481883, "def solve_2f7672a5(I):\n    x1 = objects(I, T, F, F)\n    x2 = asindices(I)\n    x3 = box(x2)\n    x4 = toobject(x3, I)\n    x5 = mostcolor(x4)\n    x6 = colorfilter(x1, x5)\n    x7 = rbind(bordering, I)\n    x8 = compose(flip, x7)\n    x9 = mfilter(x6, x8)\n    x10 = fill(I, TWO, x9)\n    O = replace(x10, x5, THREE)\n    return O"], [0.09320112108071621, "def solve_d749fff7(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [0.09320112108071621, "def solve_ac533e15(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [0.09320112108071621, "def solve_736132e2(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [0.09577613189738625, "def solve_760714e6(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.09577613189738625, "def solve_5cc03688(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.09577613189738625, "def solve_e0c5e458(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.10434388482560263, "def solve_e4415c36(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.10434388482560263, "def solve_e59a7693(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.10434388482560263, "def solve_e61f52eb(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.10940340166655955, "def solve_52bcda1e(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = prapply(connect, x2, x2)\n    x4 = rbind(greater, ONE)\n    x5 = compose(x4, size)\n    x6 = sfilter(x3, x5)\n    x7 = fork(either, vline, hline)\n    x8 = mfilter(x6, x7)\n    x9 = fill(I, THREE, x8)\n    x10 = leastcolor(I)\n    O = fill(x9, x10, x2)\n    return O"], [0.11410495726315961, "def solve_b29df95f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.11410495726315961, "def solve_c5df6a75(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.11873730483078786, "def solve_c52c0925(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.11873730483078786, "def solve_c74814de(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.12169800916884342, "def solve_0c976d01(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.12223455982756781, "def solve_087b3361(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = first(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(x1, THREE, x3)\n    x6 = paint(x5, x4)\n    x7 = uppermost(x4)\n    x8 = leftmost(x4)\n    x9 = subtract(x8, TEN)\n    x10 = add(x8, TEN)\n    x11 = interval(x9, x10, TWO)\n    x12 = lbind(greater, x7)\n    x13 = compose(x12, first)\n    x14 = rbind(contained, x11)\n    x15 = compose(x14, last)\n    x16 = sfilter(x1, x13)\n    x17 = sfilter(x16, x15)\n    O = fill(x6, FOUR, x17)\n    return O"], [0.1239852807263826, "def solve_97b4f6cf(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.1239852807263826, "def solve_83e1f9b2(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.12706715242232244, "def solve_f0160443(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, last)\n    x5 = fork(recolor, first, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [0.1291415585217549, "def solve_bdbc6c83(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = lbind(recolor, EIGHT)\n    x4 = rbind(ofcolor, x1)\n    x5 = chain(x3, backdrop, x4)\n    x6 = fork(paint, identity, x5)\n    x7 = height(I)\n    x8 = vsplit(I, x7)\n    x9 = mapply(x6, x8)\n    x10 = ofcolor(x9, EIGHT)\n    x11 = dmirror(I)\n    x12 = width(I)\n    x13 = vsplit(x11, x12)\n    x14 = mapply(x6, x13)\n    x15 = dmirror(x14)\n    x16 = ofcolor(x15, EIGHT)\n    x17 = combine(x10, x16)\n    x18 = difference(x17, x2)\n    O = fill(I, EIGHT, x18)\n    return O"], [0.13134103434345124, "def solve_30668c56(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.13134103434345124, "def solve_16daba00(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.13134103434345124, "def solve_3c888f24(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.13256015955962436, "def solve_5dfb35cb(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = rbind(multiply, THREE)\n    x6 = rbind(divide, THREE)\n    x7 = compose(x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = toindices(x4)\n    x10 = compose(x8, last)\n    x11 = sfilter(x9, x10)\n    O = fill(I, SIX, x11)\n    return O"], [0.13351065044779606, "def solve_a1a15b27(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = lbind(power, outbox)\n    x8 = chain(x7, halve, width)\n    x9 = initset(x8)\n    x10 = lbind(rapply, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = compose(backdrop, x12)\n    x14 = fork(difference, x13, toindices)\n    x15 = mapply(x14, x1)\n    x16 = mostcolor(I)\n    x17 = ofcolor(I, x16)\n    x18 = intersection(x15, x17)\n    O = fill(x6, THREE, x18)\n    return O"], [0.13398503644855894, "def solve_f5a04b82(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, NEG_ONE, x4)\n    return O"], [0.13732320260021091, "def solve_7e0960ce(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = lbind(greater, THREE)\n    x4 = compose(x3, size)\n    x5 = sfilter(x2, x4)\n    x6 = mapply(toindices, x5)\n    x7 = fill(I, x1, x6)\n    x8 = objects(x7, T, F, T)\n    x9 = fork(recolor, color, backdrop)\n    x10 = mapply(x9, x8)\n    O = paint(x7, x10)\n    return O"], [0.14085477486846634, "def solve_0d7588db(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, TWO, x3)\n    return O"], [0.14125400895450432, "def solve_92d74748(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(shoot, RIGHT)\n    x4 = compose(x3, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(x1, DOWN_LEFT)\n    x9 = initset(x8)\n    x10 = mostcolor(I)\n    x11 = recolor(x10, x9)\n    x12 = objects(x7, T, F, T)\n    x13 = insert(x11, x12)\n    x14 = order(x13, uppermost)\n    x15 = first(x14)\n    x16 = remove(x11, x14)\n    x17 = remove(x15, x14)\n    x18 = compose(lrcorner, first)\n    x19 = compose(lrcorner, last)\n    x20 = fork(connect, x18, x19)\n    x21 = compose(color, first)\n    x22 = fork(recolor, x21, x20)\n    x23 = pair(x16, x17)\n    x24 = mapply(x22, x23)\n    O = underpaint(x7, x24)\n    return O"], [0.14125400895450432, "def solve_49183c77(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(shoot, RIGHT)\n    x4 = compose(x3, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(x1, DOWN_LEFT)\n    x9 = initset(x8)\n    x10 = mostcolor(I)\n    x11 = recolor(x10, x9)\n    x12 = objects(x7, T, F, T)\n    x13 = insert(x11, x12)\n    x14 = order(x13, uppermost)\n    x15 = first(x14)\n    x16 = remove(x11, x14)\n    x17 = remove(x15, x14)\n    x18 = compose(lrcorner, first)\n    x19 = compose(lrcorner, last)\n    x20 = fork(connect, x18, x19)\n    x21 = compose(color, first)\n    x22 = fork(recolor, x21, x20)\n    x23 = pair(x16, x17)\n    x24 = mapply(x22, x23)\n    O = underpaint(x7, x24)\n    return O"], [0.14154243752245577, "def solve_c83601ce(I):\n    O = replace(I, FOUR, NEG_ONE)\n    return O"], [0.14343122109904335, "def solve_a2ad9994(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.14616952830534066, "def solve_c118dc2c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.15917203888710219, "def solve_9418cabd(I):\n    x1 = initset(ORIGIN)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.15924388832696912, "def solve_dcaf4aa6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.15924388832696912, "def solve_e37c947e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.15924388832696912, "def solve_4084e9cd(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.15924388832696912, "def solve_6972c097(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.1640619468675584, "def solve_8bda1693(I):\n    x1 = objects(I, T, F, F)\n    x2 = compose(maximum, shape)\n    x3 = order(x1, x2)\n    x4 = first(x3)\n    x5 = last(x3)\n    x6 = color(x4)\n    x7 = color(x5)\n    x8 = equality(x6, x7)\n    x9 = combine(x4, x5)\n    x10 = repeat(x9, ONE)\n    x11 = remove(x4, x3)\n    x12 = remove(x5, x11)\n    x13 = compose(hfrontier, center)\n    x14 = fork(recolor, color, x13)\n    x15 = mapply(x14, x12)\n    O = paint(I, x15)\n    return O"], [0.16724353719904816, "def solve_f83f9a53(I):\n    x1 = switch(I, FIVE, EIGHT)\n    O = switch(x1, EIGHT, TWO)\n    return O"], [0.16903724504454612, "def solve_014bb1fa(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.16903724504454612, "def solve_f66c9b52(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.1695915995493272, "def solve_9241658c(I):\n    O = hmirror(I)\n    return O"], [0.1773065582183363, "def solve_ea44bb60(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.1773065582183363, "def solve_4add9518(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.18190769514794702, "def solve_2ee9819a(I):\n    x1 = objects(I, T, F, T)\n    x2 = mapply(delta, x1)\n    O = fill(I, SEVEN, x2)\n    return O"], [0.1821991489554815, "def solve_4266a79b(I):\n    x1 = rot270(I)\n    x2 = fork(equality, toindices, rot90)\n    x3 = rot180(x1)\n    x4 = rot270(x1)\n    x5 = either(x2, x3)\n    x6 = branch(x5, rbind, ONE)\n    x7 = branch(x5, lefthalf, tophalf)\n    x8 = branch(x5, righthalf, bottomhalf)\n    x9 = branch(x5, hconcat, vconcat)\n    x10 = x7(I)\n    x11 = x8(I)\n    x12 = index(x10, ORIGIN)\n    x13 = shape(x11)\n    x14 = decrement(x13)\n    x15 = index(x11, x14)\n    x16 = replace(x10, THREE, x12)\n    x17 = replace(x11, THREE, x15)\n    O = x9(x16, x17)\n    return O"], [0.1821991489554815, "def solve_830db236(I):\n    x1 = objects(I, T, F, T)\n    x2 = lbind(sfilter, x1)\n    x3 = compose(size, x2)\n    x4 = x3(vline)\n    x5 = x3(hline)\n    x6 = greater(x4, x5)\n    x7 = branch(x6, lefthalf, tophalf)\n    x8 = branch(x6, righthalf, bottomhalf)\n    x9 = branch(x6, hconcat, vconcat)\n    x10 = x7(I)\n    x11 = x8(I)\n    x12 = index(x10, ORIGIN)\n    x13 = shape(x11)\n    x14 = decrement(x13)\n    x15 = index(x11, x14)\n    x16 = replace(x10, THREE, x12)\n    x17 = replace(x11, THREE, x15)\n    O = x9(x16, x17)\n    return O"], [0.18335650834767755, "def solve_ad274ceb(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.18335650834767755, "def solve_77678f50(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.18335650834767755, "def solve_d3a21eb2(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.18335650834767755, "def solve_cd5e5ac1(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.19082520987900767, "def solve_f348a2d6(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.19430658187993063, "def solve_fd479b93(I):\n    x1 = switch(I, FOUR, EIGHT)\n    O = switch(x1, ONE, TWO)\n    return O"], [0.1958638344623164, "def solve_d0ed3e3d(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [0.20306126840468763, "def solve_c31648c7(I):\n    O = dmirror(I)\n    return O"], [0.20358415715405612, "def solve_e3319c05(I):\n    x1 = replace(I, ZERO, THREE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [0.20523726896576466, "def solve_7fa510ce(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = frontiers(I)\n    x6 = colorfilter(x5, x4)\n    x7 = size(x6)\n    x8 = positive(x7)\n    x9 = branch(x8, dmirror, identity)\n    x10 = ofcolor(I, x4)\n    x11 = ofcolor(I, TWO)\n    x12 = ofcolor(I, ONE)\n    x13 = rbind(gravitate, x10)\n    x14 = compose(x13, initset)\n    x15 = fork(add, identity, x14)\n    x16 = fork(connect, identity, x15)\n    x17 = shape(I)\n    x18 = maximum(x17)\n    x19 = lbind(multiply, x18)\n    x20 = lbind(gravitate, x10)\n    x21 = chain(x19, sign, x20)\n    x22 = compose(x21, initset)\n    x23 = fork(add, identity, x22)\n    x24 = fork(connect, identity, x23)\n    x25 = mapply(x16, x11)\n    x26 = mapply(x24, x12)\n    x27 = fill(I, TWO, x25)\n    O = fill(x27, ONE, x26)\n    return O"], [0.20919525218074, "def solve_46b8caba(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.20955539093771366, "def solve_edc28001(I):\n    O = rot270(I)\n    return O"], [0.21391916164730382, "def solve_f6aff4de(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.21391916164730382, "def solve_25b71daa(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.21391916164730382, "def solve_60b18f38(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.21833352585432822, "def solve_be7cab67(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = remove(x2, x1)\n    x4 = normalize(x2)\n    x5 = shape(x2)\n    x6 = halve(x5)\n    x7 = invert(x6)\n    x8 = shift(x4, x7)\n    x9 = sizefilter(x3, ONE)\n    x10 = apply(center, x9)\n    x11 = lbind(shift, x8)\n    x12 = mapply(x11, x10)\n    x13 = paint(I, x12)\n    O = rot180(x13)\n    return O"], [0.21904040042169512, "def solve_18b2110e(I):\n    O = rot180(I)\n    return O"], [0.21904040042169512, "def solve_d6948f4e(I):\n    O = rot180(I)\n    return O"], [0.21904040042169512, "def solve_8150f32c(I):\n    O = rot180(I)\n    return O"], [0.21904040042169512, "def solve_d9c50c15(I):\n    O = rot180(I)\n    return O"], [0.21904040042169512, "def solve_f5150224(I):\n    O = rot180(I)\n    return O"], [0.21924101368423873, "def solve_a1393f8c(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = astuple(SIX, THREE)\n    x6 = astuple(FOUR, EIGHT)\n    x7 = astuple(ONE, TWO)\n    x8 = initset(x5)\n    x9 = insert(x6, x8)\n    x10 = insert(x7, x9)\n    x11 = mapply(x4, x10)\n    O = paint(I, x11)\n    return O"], [0.22840986411980327, "def solve_0cd3d63d(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.22840986411980327, "def solve_e3d3f20f(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.22840986411980327, "def solve_a7d718a6(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.22840986411980327, "def solve_2ef6a3a9(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.22840986411980327, "def solve_26e31701(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.23424985902563292, "def solve_cff8ce5e(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = valmax(x2, shape)\n    x4 = canvas(x1, x3)\n    x5 = apply(normalize, x2)\n    x6 = lbind(subtract, x3)\n    x7 = chain(halve, x6, shape)\n    x8 = fork(shift, identity, x7)\n    x9 = mapply(x8, x5)\n    O = paint(x4, x9)\n    return O"], [0.2409305874037885, "def solve_f492f9a6(I):\n    x1 = switch(I, FIVE, EIGHT)\n    x2 = switch(x1, THREE, FOUR)\n    x3 = switch(x2, EIGHT, NINE)\n    x4 = switch(x3, ONE, FOUR)\n    O = switch(x4, TWO, NINE)\n    return O"], [0.24987654334823972, "def solve_e5b651d8(I):\n    x1 = switch(I, ORIGIN, THREE)\n    x2 = switch(x1, EIGHT, TWO)\n    x3 = switch(x2, TWO, ONE)\n    O = switch(x3, ONE, FOUR)\n    return O"], [0.2537260279414613, "def solve_712908b7(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 =equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2537260279414613, "def solve_4b1f1373(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.25570919672274256, "def solve_4b9b7594(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.2628520538655998, "def solve_e41b3a1d(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = ofcolor(x1, ZERO)\n    x4 = ofcolor(x2, ZERO)\n    x5 = intersection(x3, x4)\n    x6 = replace(x1, NINE, ZERO)\n    O = fill(x6, EIGHT, x5)\n    return O"], [0.2686091447400782, "def solve_0a738006(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(add, height, width)\n    x3 = compose(decrement, x2)\n    x4 = fork(equality, size, x3)\n    x5 = fork(difference, toindices, box)\n    x6 = compose(size, x5)\n    x7 = matcher(x6, ZERO)\n    x8 = sfilter(x1, x4)\n    x9 = difference(x1, x8)\n    x10 = sfilter(x9, x7)\n    x11 = merge(x1)\n    x12 = fill(I, TWO, x11)\n    x13 = merge(x8)\n    x14 = fill(x12, ONE, x13)\n    x15 = merge(x10)\n    O = fill(x14, SIX, x15)\n    return O"], [0.2704028721250951, "def solve_f68f5a98(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.2704028721250951, "def solve_cc69fd20(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.2704028721250951, "def solve_dd8c3732(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.2704028721250951, "def solve_ea0c1245(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.2809230916330308, "def solve_0f1b5b9b(I):\n    x1 = switch(I, EIGHT, TWO)\n    x2 = switch(x1, THREE, FOUR)\n    x3 = switch(x2,9, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.29118241282602314, "def solve_5451e371(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.29118241282602314, "def solve_0520f955(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.29118241282602314, "def solve_591788a2(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.29118241282602314, "def solve_a264b1ea(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.29118241282602314, "def solve_72472149(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.29118241282602314, "def solve_87a29689(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.29118241282602314, "def solve_195d5ca0(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.2969700117912533, "def solve_cd8377b8(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = subgrid(x20, I)\n    x22 = switch(x21, x18, x19)\n    x23 = replace(x22, x18, x4)\n    x24 = lbind(downscale, x23)\n    x25 = fork(upscale, x24, identity)\n    x26 = matcher(x25, x23)\n    x27 = shape(x23)\n    x28 = maximum(x27)\n    x29 = interval(ONE, x28, ONE)\n    x30 = sfilter(x29, x26)\n    x31 = maximum(x30)\n    O = downscale(x23, x31)\n    return O"], [0.30116122897529934, "def solve_3de58a17(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = mapply(dneighbors, x2)\n    x4 = toobject(x3, I)\n    x5 = mostcolor(x4)\n    x6 = palette(I)\n    x7 = remove(x5, x6)\n    x8 = order(x7, identity)\n    x9 = first(x8)\n    x10 = last(x8)\n    x11 = ofcolor(I, x9)\n    x12 = ofcolor(I, x10)\n    x13 = switch(I, x10, x9)\n    x14 = combine(x11, x12)\n    x15 = subgrid(x14, x13)\n    O = trim(x15)\n    return O"], [0.3063136421137608, "def solve_e8f97d58(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.30649821446512787, "def solve_2a19a59b(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, SIX)\n    x3 = compose(flip, x2)\n    x4 = mfilter(x1, x2)\n    x5 = mfilter(x1, x3)\n    x6 = fill(I, TWO, x4)\n    O = fill(x6, ONE, x5)\n    return O"], [0.3082441023536176, "def solve_a413f355(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.3082441023536176, "def solve_7a79cd2a(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.3082441023536176, "def solve_7392c7e5(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.31011174594270147, "def solve_97c80cb9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.31011174594270147, "def solve_f9c173a1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.31011174594270147, "def solve_a74b3ab2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.31011174594270147, "def solve_cb12132f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.31011174594270147, "def solve_cd1f9d36(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.3104501482052144, "def solve_9b77a7d2(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_44df1595(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_9915a86c(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_c95ea8ea(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_71487622(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_38586d59(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_86516d9c(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_353966b3(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3104501482052144, "def solve_85aa7f23(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.3149430218593218, "def solve_d0d9d11c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = sfilter(x1, hline)\n    x5 = size(x4)\n    x6 = positive(x5)\n    x7 = branch(x6, identity, dmirror)\n    x8 = x7(I)\n    x9 = rbind(subgrid, x8)\n    x10 = matcher(color, x3)\n    x11 = compose(flip, x10)\n    x12 = partition(x8)\n    x13 = sfilter(x12, x11)\n    x14 = rbind(ofcolor, x3)\n    x15 = lbind(mapply, vfrontier)\n    x16 = chain(x15, x14, x9)\n    x17 = fork(shift, x16, ulcorner)\n    x18 = fork(intersection, toindices, x17)\n    x19 = mapply(x18, x13)\n    x20 = fill(x8, ZERO, x19)\n    O = x7(x20)\n    return O"], [0.31659249691417035, "def solve_4ad0f610(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = chain(palette, trim, x2)\n    x4 = lbind(contained, THREE)\n    x5 = compose(x4, x3)\n    x6 = fork(add, height, width)\n    x7 = compose(decrement, x6)\n    x8 = fork(equality, size, x7)\n    x9 = mfilter(x1, x5)\n    x10 = mfilter(x1, x8)\n    x11 = replace(I, THREE, SIX)\n    x12 = fill(x11, TWO, x9)\n    O = fill(x12, ONE, x10)\n    return O"], [0.31659249691417035, "def solve_676acfd6(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = chain(palette, trim, x2)\n    x4 = lbind(contained, THREE)\n    x5 = compose(x4, x3)\n    x6 = fork(add, height, width)\n    x7 = compose(decrement, x6)\n    x8 = fork(equality, size, x7)\n    x9 = mfilter(x1, x5)\n    x10 = mfilter(x1, x8)\n    x11 = replace(I, THREE, SIX)\n    x12 = fill(x11, TWO, x9)\n    O = fill(x12, ONE, x10)\n    return O"], [0.32829485329485325, "def solve_7988cc7f(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, size)\n    x3 = subgrid(x2, I)\n    O = trim(x3)\n    return O"], [0.33050933843814106, "def solve_e75095ef(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = objects(x3, T, F, T)\n    x5 = merge(x4)\n    O = paint(x1, x5)\n    return O"], [0.33125188020762586, "def solve_52d4dd56(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = prapply(connect, x2, x2)\n    x4 = fgpartition(I)\n    x5 = merge(x4)\n    x6 = cover(I, x5)\n    x7 = fork(either, hline, vline)\n    x8 = box(x5)\n    x9 = rbind(difference, x8)\n    x10 = chain(positive, size, x9)\n    x11 = fork(both, x7, x10)\n    x12 = mfilter(x3, x11)\n    O = fill(x6, x1, x12)\n    return O"], [0.3314449532924934, "def solve_a1e670d5(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.3314449532924934, "def solve_10e9514d(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.3314449532924934, "def solve_e2f23174(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.3384341187221576, "def solve_349a7715(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.3384341187221576, "def solve_e482eab4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.35285797856791773, "def solve_15147233(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.35285797856791773, "def solve_d8988e44(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.3646584896584897, "def solve_8abdcc84(I):\n    x1 = objects(I, T, F, F)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = lbind(chain, positive)\n    x6 = lbind(x5, size)\n    x7 = rbind(compose, backdrop)\n    x8 = lbind(lbind, intersection)\n    x9 = chain(x6, x7, x8)\n    x10 = chain(x9, backdrop, outbox)\n    x11 = lbind(sfilter, x4)\n    x12 = compose(x11, x10)\n    x13 = chain(positive, size, x12)\n    x14 = sfilter(x4, x13)\n    x15 = compose(merge, x12)\n    x16 = apply(x15, x14)\n    x17 = rbind(subgrid, I)\n    x18 = apply(x17, x16)\n    x19 = merge(x16)\n    x20 = palette(x19)\n    x21 = lbind(colorcount, x19)\n    x22 = argmin(x20, x21)\n    x23 = rbind(colorcount, x22)\n    O = argmax(x18, x23)\n    return O"], [0.37473544973544975, "def solve_ff7854b1(I):\n    x1 = shape(I)\n    x2 = remove(x1, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = canvas(x4, x1)\n    x6 = colorcount(I, x4)\n    x7 = decrement(x6)\n    x8 = tojvec(x7)\n    x9 = connect(ORIGIN, x8)\n    x10 = fill(x5, TWO, x9)\n    x11 = initset(UNITY)\n    x12 = equality(x6, FOUR)\n    x13 = branch(x12, x11, x9)\n    O = fill(x10, TWO, x13)\n    return O"], [0.4062968519814561, "def solve_02612f31(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [0.40995162868139406, "def solve_7b321275(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.4170310435194296, "def solve_db8b69d5(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.4170310435194296, "def solve_74f998dd(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.4170310435194296, "def solve_f400889a(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.4170310435194296, "def solve_d558cb8a(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.4188225087214558, "def solve_cfb55a72(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    O = rot180(x2)\n    return O"], [0.4231949243417133, "def solve_6762fa62(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.4231949243417133, "def solve_f8b63e1f(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.48123001957418393, "def solve_1e6984ea(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, vline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = combine(x15, x16)\n    x18 = intersection(x15, x16)\n    x19 = difference(x17, x18)\n    O = fill(x14, THREE, x19)\n    return O"], [0.48269935405826175, "def solve_fa599f79(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x7, x16)\n    x20 = ofcolor(x8, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, THREE, x21)\n    return O"], [0.49928676227558905, "def solve_6c8d2a06(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, T, F, F)\n    x6 = rbind(colorcount, ONE)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.5033734845047396, "def solve_468204d3(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.5033734845047396, "def solve_c0f08e67(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.5064013204664738, "def solve_eb9f3875(I):\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [0.5183944733486018, "def solve_c63a7545(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = subgrid(x2, I)\n    x4 = lefthalf(x3)\n    O = tophalf(x4)\n    return O"], [0.5362773561664594, "def solve_f3fd0914(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, T, T)\n    x3 = first(x2)\n    x4 = vline(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(x1)\n    x7 = objects(x6, T, T, T)\n    x8 = order(x7, uppermost)\n    x9 = apply(color, x8)\n    x10 = dedupe(x9)\n    x11 = size(x10)\n    x12 = rbind(repeat, x11)\n    O = apply(x12, x10)\n    return O"], [0.5371132714255592, "def solve_2da17ccf(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.5455548516524127, "def solve_a0f968c0(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.5455548516524127, "def solve_b546c6bd(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.5455548516524127, "def solve_71221886(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.5586554186554187, "def solve_ce729be0(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.5586554186554187, "def solve_81bc7ebf(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.5586554186554187, "def solve_2967c114(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.5586554186554187, "def solve_1d95db98(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.5801077246461932, "def solve_bc2b4fb8(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5801077246461932, "def solve_bc691e20(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.6767316017316017, "def solve_3936d83c(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_6ce7e217(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_27616eb4(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_1f621c95(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_2bd5d1be(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_56bd2134(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_ed6b6093(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_de236228(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_2a16f093(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6767316017316017, "def solve_01bdc5be(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.6793066105327229, "def solve_d37efd93(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = astuple(ONE, THREE)\n    x8 = size(x6)\n    x9 = order(x6, leftmost)\n    x10 = apply(color, x9)\n    x11 = rbind(canvas, UNITY)\n    x12 = apply(x11, x10)\n    x13 = merge(x12)\n    x14 = dmirror(x13)\n    x15 = subtract(NINE, x8)\n    x16 = astuple(ONE, x15)\n    x17 = mostcolor(I)\n    x18 = canvas(x17, x16)\n    x19 = hconcat(x14, x18)\n    x20 = hsplit(x19, THREE)\n    x21 = merge(x20)\n    x22 = crop(x21, ORIGIN, x7)\n    x23 = crop(x21, DOWN, x7)\n    x24 = crop(x21, TWO_BY_ZERO, x7)\n    x25 = vmirror(x23)\n    x26 = vconcat(x22, x25)\n    O = vconcat(x26, x24)\n    return O"], [0.6869167869167869, "def solve_693c28fe(I):\n    x1 = rot180(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot180(x2)\n    return O"], [0.6912337662337663, "def solve_532cc8a8(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.6912337662337663, "def solve_72273abc(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.704578360372753, "def solve_ffe25cd0(I):\n    x1 = palette(I)\n    x2 = remove(ONE, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = canvas(x4, THREE_BY_THREE)\n    x6 = colorcount(I, ONE)\n    x7 = decrement(x6)\n    x8 = tojvec(x7)\n    x9 = connect(ORIGIN, x8)\n    x10 = fill(x5, TWO, x9)\n    x11 = initset(UNITY)\n    x12 = equality(x6, FOUR)\n    x13 = branch(x12, x11, x9)\n    O = fill(x10, TWO, x13)\n    return O"], [0.7048836276655356, "def solve_f38fc494(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = ofcolor(x1, ZERO)\n    x4 = ofcolor(x2, ZERO)\n    x5 = intersection(x3, x4)\n    x6 = size(x5)\n    x7 = astuple(FOUR, FOUR)\n    x8 = canvas(THREE, x7)\n    x9 = fill(x8, ZERO, x3)\n    O = fill(x9, TWO, x4)\n    return O"], [0.7349775533108867, "def solve_be5cb8b0(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(equality, toindices, box)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = argmax(x3, x4)\n    x6 = fgpartition(I)\n    x7 = merge(x6)\n    x8 = difference(x7, x5)\n    x9 = subgrid(x5, I)\n    x10 = subgrid(x8, I)\n    x11 = height(x9)\n    x12 = subtract(x11, TWO)\n    x13 = height(x10)\n    x14 = divide(x12, x13)\n    x15 = width(x9)\n    x16 = subtract(x15, TWO)\n    x17 = width(x10)\n    x18 = divide(x16, x17)\n    x19 = hupscale(x10, x18)\n    x20 = vupscale(x19, x14)\n    x21 = asobject(x20)\n    x22 = shift(x21, UNITY)\n    O = paint(x9, x22)\n    return O"], [0.7378747641671847, "def solve_d66db884(I):\n    x1 = palette(I)\n    x2 = contained(ONE, x1)\n    x3 = contained(TWO, x1)\n    x4 = branch(x2, UNITY, TWO_BY_TWO)\n    x5 = branch(x3, RIGHT, x4)\n    x6 = fork(combine, vfrontier, hfrontier)\n    x7 = x6(x5)\n    x8 = canvas(ZERO, THREE_BY_THREE)\n    O = fill(x8, FIVE, x7)\n    return O"], [0.7565536315536315, "def solve_4858c5b1(I):\n    x1 = astuple(ONE, THREE)\n    x2 = size(x1)\n    x3 = decrement(x2)\n    x4 = canvas(ZERO, x1)\n    x5 = tojvec(x3)\n    x6 = connect(ORIGIN, x5)\n    x7 = equality(x2, FOUR)\n    x8 = insert(UNITY, x6)\n    x9 = branch(x7, x8, x6)\n    O = fill(x4, TWO, x9)\n    return O"], [0.7635281385281386, "def solve_690030d6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.7710317460317461, "def solve_099cd861(I):\n    x1 = objects(I, T, F, F)\n    x2 = sizefilter(x1, ONE)\n    x3 = apply(color, x2)\n    x4 = difference(x1, x2)\n    x5 = rbind(subgrid, I)\n    x6 = apply(x5, x4)\n    x7 = rbind(colorcount, SIX)\n    x8 = argmax(x6, x7)\n    x9 = mostcolor(x8)\n    O = canvas(x9, UNITY)\n    return O"], [0.7710317460317461, "def solve_ffda0447(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = color(x3)\n    x5 = remove(ZERO, x1)\n    x6 = other(x5, x4)\n    O = canvas(x6, UNITY)\n    return O"], [0.7821428571428571, "def solve_c25334c6(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.7821428571428571, "def solve_f6eab80c(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.7821428571428571, "def solve_46a4c9f5(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.8704545454545455, "def solve_d9c70a34(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, F, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.9454545454545457, "def solve_5020f3c5(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = astuple(FOUR, FOUR)\n    x4 = ofcolor(x1, ZERO)\n    x5 = ofcolor(x2, ZERO)\n    x6 = intersection(x4, x5)\n    x7 = canvas(ZERO, x3)\n    O = fill(x7, THREE, x6)\n    return O"], [1.0, "def solve_d9a5e169(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_1ef9b4e0(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_289be062(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_9e09be27(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_68de77ff(I):\n    x1 = remove(I, x1)\n    x2 = merge(x1)\n    x3 = cover(I, x2)\n    x4 = mapply(daeighbors, x1)\n    x5 = mapply(neighbors, x1)\n    x6 = fill(x3, ONE, x4)\n    O = fill(x6, TWO, x5)\n    return O"], [1.0, "def solve_18fe9976(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_34234cf4(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = rbind(toobject, I)\n    x5 = chain(leastcolor, x4, delta)\n    x6 = rbind(shift, UP)\n    x7 = fork(connect, ulcorner, urcorner)\n    x8 = compose(x6, x7)\n    x9 = rbind(shift, DOWN)\n    x10 = fork(connect, llcorner, lrcorner)\n    x11 = compose(x9, x10)\n    x12 = fork(astuple, x8, x11)\n    x13 = lbind(rbind, manhattan)\n    x14 = compose(x13, delta)\n    x15 = fork(argmin, x12, x14)\n    x16 = fork(combine, delta, x15)\n    x17 = fork(recolor, x5, x16)\n    x18 = mapply(x17, x3)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_2110d98f(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_86b137f8(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_f3fe2460(I):\n    x1 = asindices(I)\n    x2 = shape(I)\n    x3 = halve(x2)\n    x4 = rbind(greater, x3)\n    x5 = compose(x4, size)\n    x6 = sfilter(x1, x5)\n    x7 = compose(last, last)\n    x8 = order(x6, x7)\n    x9 = argmax(x8, size)\n    x10 = mostcolor(x9)\n    x11 = palette(I)\n    x12 = remove(x10, x11)\n    x13 = lbind(colorcount, I)\n    x14 = argmin(x12, x13)\n    x15 = mostcolor(I)\n    x16 = ofcolor(I, x14)\n    x17 = ofcolor(I, x18)\n    x18 = combine(x16, x17)\n    x19 = mapply(neighbors, x18)\n    x20 = difference(x19, x18)\n    x21 = toobject(x20, I)\n    x22 = leastcolor(x21)\n    x23 = toindices(x21)\n    x24 = ofcolor(I, x22)\n    x25 = ofcolor(I, x23)\n    x26 = neighbors(ORIGIN)\n    x27 = mapply(neighbors, x26)\n    x28 = sfilter(x24, x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x22)\n    O = fill(I, x11, x30)\n    return O"], [1.0, "def solve_648b0ca4(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_40d7f8da(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = Feca(x2)\n    x4 = shape(I)\n    x5 = canvas(ZERO, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [1.0, "def solve_529cc78d(I):\n    x1 = lbind(rbind, sfilter)\n    x2 = lbind(compose, flip)\n    x3 = lbind(matcher, first)\n    x4 = chain(x3, x1, x2)\n    x5 = lbind(paint, I)\n    x6 = compose(last, last)\n    x7 = chain(decrement, x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = toindices(xEG029493)\n    x10 = compose(x8, last)\n    x11 = sfilter(x9, x10)\n    O = fill(I, ZERO, x11)\n    return O"], [1.0, "def solve_3a99a165(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = rot68b190(x2)\n    return O"], [1.0, "def solve_1ef1a851(I):\n    x1 = ofcolor(I, ONE)\n    x2 =neighbors(UNITY)\n    x3 = initset(UNITY)\n    x4 = recolor(ONE, x3)\n    x5 = upscale(x4, THREE)\n    x6 = toindices(x5)\n    x7 = lrcorner(x5)\n    x8 = ulcorner(x5)\n    x9 = rbind(contained, x8)\n    x10 = compose(x9, portrait)\n    x11 = sfilter(x6, x10)\n    x12 = merge(x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, ONE)\n    x18 = ulcorner(x5)\n    x19 = subgrid(x18, x16)\n    x20 = branch(x19, identity, height)\n    x21 = x20(x16)\n    x22 = subtract(x21, TWO)\n    x23 = multiply(x22, x13)\n    x24 = add(x23, x8)\n    x25 = repeat(x24, ONE)\n    x26 = x15(x25)\n    x27 = ofcolor(x26, ONE)\n    x28 = subgrid(x27, x26)\n    x29 = interval(ZERO, x28, ONE)\n    x30 = apply(x15, x29)\n    x31 = initset(x30)\n    x32 = insert(x77, x31)\n    x33 = backdrop(x32)\n    x34 = cover(x16, x33)\n    x35 = dmirror(x34)\n    x36 = x15(x35)\n    x37 = shift(x34, x36)\n    x38 = lbind(shift, x37)\n    x39 = mapply(x38, x30)\n    O = paint(x34, x39)\n    return O"], [1.0, "def solve_751d4a10(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = equality(x2, FOUR)\n    x4 = branch(x3, leftmost, RIGHT)\n    x5 = x4(x1)\n    x6 = interval(ONE, FIVE, ONE)\n    x7 = lbind(multiply, x5)\n    x8 = apply(x7, x6)\n    x9 = repeat(x8, ONE)\n    x10 = combine(x7, x9)\n    x11 = apply(x7, x10)\n    x12 = extract(x11, last)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = subgrid(x13, I)\n    x16 = rot90(x15)\n    x17 = rot180(x15)\n    x18 = rot270(x17)\n    x19 = hconcat(x16, x14)\n    x20 = hconcat(x18, x16)\n    x21 = vconcat(x19, x20)\n    x22 = vconcat(x21, x21)\n    x23 = asobject(x22)\n    x24 = rot270(x23)\n    x25 = vconcat(x24, x23)\n    x26 = vconcat(x25, x24)\n    O = downscale(x26, THREE)\n    return O"], [1.0, "def solve_9d5fddf4(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_f3892808(I):\n    x1 = asindices(I)\n    x2 = toobject(x1, I)\n    x3 = mostcolor(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(chain, size)\n    x7 = rbind(x6, toindices)\n    x8 = lbind(lbind, contained)\n    x9 = lbind(ofcolor, I)\n    x10 = chain(x9, x7, x7)\n    x11 = lbind(matcher, x10)\n    x12 = compose(x11, ZERO)\n    x13 = chain(flip, x12, x10)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(x15, x10)\n    x17 = palette(I)\n    x18 = remove(x3, x17)\n    x19 = lbind(colorcount, I)\n    x20 = argmin(x18, x19)\n    x21 = x20(x64)\n    x22 = x20(x6)\n    x23 = x20(x4)\n    x24 = x20(x16)\n    x25 = compose(last, first)\n    x26 = compose(last, last)\n    x27 = fork(either, x25, x26)\n    x28 = compose(initset, x12)\n    x29 = compose(colorcount, x28)\n    x30 = fork(equality, x29, x27)\n    x31 = sfilter(x28, x30)\n    x32 = ofcolor(I, x21)\n    x33 = difference(x32, x31)\n    x34 = mapply(neighbors, x33)\n    x35 = mapply(neighbors, x34)\n    x36 = colorfilter(x31, x21)\n    x37 = fill(I, x20, x36)\n    O = fill(x37, x20, x25)\n    return O"], [1.0, "def solve_369647e5(I):\n    x1 = lbind(contained, THREE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, THREE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(invert, size)\n    x9 = order(x3, x8)\n    x10 = apply(normalize, x9)\n    x11 = size(x10)\n    x12 = interval(ZERO, x11, ONE)\n    x13 = apply(toivec, x12)\n    x14 = mpapply(shift, x10, x13)\n    x15 = merge(x14)\n    x16 = rot90(x15)\n    x17 = shape(x15)\n    x18 = canvas(ZERO, x17)\n    x19 = paint(x18, x16)\n    O = rot270(x19)\n    return O"], [1.0, "def solve_7a641a60(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_8b56ddca(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_1e027ee9(I):\n    x1 = frontiers(I)\n    x2 = matcher(identity, ZERO)\n    x3 = rbind(sfilter, x2)\n    x4 = compose(size, x3)\n    x5 = matcher(x4, ONE)\n    x6 = asindices(I)\n    x7 = lrcorner(x6)\n    x8 = add(UNITY, x7)\n    x9 = initset(x8)\n    x10 = fill(I, ZERO, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = apply(x11, x10)\n    x14 = apply(x12, x10)\n    x15 = contained(x13, x14)\n    x16 = width(I)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = compose(tojvec,00000)\n    x19 = height(I)\n    x20 = decrement(x19)\n    x21 = lbind(astuple, x20)\n    x22 = apply(x21, x17)\n    x23 = astuple(x6, x5)\n    x24 = canvas(ZERO, x23)\n    x25 = asindices(x24)\n    x26 = box(x25)\n    x27 = fill(x24, EIGHT, x26)\n    x28 = lbind(shift, x25)\n    x29 = mapply(x28, x26)\n    O = paint(x27, x29)\n    return O"], [1.0, "def solve_ad9dbd38(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = compose(x2, x1)\n    x4 = fork(intersection, x1, x3)\n    x5 = compose(size, x4)\n    x6 = palette(I)\n    x7 = matcher(x5, ZERO)\n    x8 = sfilter(x6, x7)\n    x9 = totuple(x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = mapply(neighbors, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = ofcolor(I, x11)\n    x17 = mapply(neighbors, x16)\n    x18 = toobject(x17, I)\n    x19 = mostcolor(x18)\n    x20 = rbind(shoot, UNITY)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = fork(combine, x20, x21)\n    x23 = rbind(shoot, UP_RIGHT)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = fork(combine, x23, x24)\n    x26 = fork(combine, x22, x25)\n    x27 = ofcolor(I, x11)\n    x28 = ofcolor(I, x10)\n    x29 = combine(x27, x28)\n    x30 = mapply(x26, x29)\n    x31 = ofcolor(I, x15)\n    x32 = intersection(x31, x30)\n    x33 = ofcolor(I, x19)\n    x34 = intersection(x33, x30)\n    x35 = fill(I, x10, x32)\n    O = fill(x35, x11, x34)\n    return O"], [1.0, "def solve_2ffdd91a(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = toobject(x1, I)\n    x3 = mostcolor(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = order(x5, identity)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = ofcolor(I, x7)\n    x10 = ofcolor(I, x8)\n    x11 = switch(I, x9, x10)\n    x12 = objects(x11, T, T, T)\n    x13 = colorfilter(x12, x7)\n    x14 = rbind(adjacent, x13)\n    x15 = mfilter(x14, vline)\n    x16 = mfilter(x14, hline)\n    x17 = size(x15)\n    x18 = size(x16)\n    x19 = greater(x17, x18)\n    x20 = branch(x19, x18, x15)\n    O = canvas(x20, UNITY)\n    return O"], [1.0, "def solve_1b0b411a(I):\n    x1 = rbind(toobject, I)\n    x2 = rbind(colorcount, ZERO)\n    x3 = chain(x2, x1, dneighbors)\n    x4 = matcher(x3, ONE)\n    x5 = astuple(extract, x4)\n    x6 = astuple(insert, x5)\n    x7 = astuple(ONE, x6)\n    x8 = canvas(ZERO, x7)\n    x9 = asindices(x8)\n    x10 = shift(x9, UNITY)\n    x11 = paint(x8, x10)\n    x12 = ofcolor(x11, ZERO)\n    x13 = ulcorner(x12)\n    x14 = shoot(x13, NEG_UNITY)\n    x15 = shoot(x13, UNITY)\n    x16 = shoot(x13, DOWN_LEFT)\n    x17 = shoot(x13, UP_RIGHT)\n    x18 = combine(x14, x16)\n    x19 = combine(x18, x17)\n    x20 = combine(x18, x18)\n    x21 = combine(x19, x20)\n    O = fill(x11, THREE, x21)\n    return O"], [1.0, "def solve_61a74e3b(I):\n    x1 = shape(I)\n    x2 = subgrid(x1, I)\n    x3 = index(I, ORIGIN)\n    x4 = decrerecolor(x2, x3)\n    x5 = hmirror(x4)\n    x6 = vmirror(x4)\n    x7 = objects(x6, T, F, F)\n    x8 = astuple(x5, x6)\n    x9 = canvas(x3, x8)\n    x10 = hmirror(x9)\n    x11 = vmirror(x9)\n    x12 = objects(x10, T, F, T)\n    x13 = merge(x12)\n    x14 = paint(x9, x13)\n    x15 = astuple(x11, x10)\n    x16 = astuple(x13, x15)\n    x17 = replace(x14, x9, x3)\n    x18 = fill(x17, FOUR, x16)\n    x19 = merge(x12)\n    x20 = cover(x18, x19)\n    x21 = downscale(x20, THREE)\n    x22 = crop(x21, ORIGIN, x7)\n    O = downscale(x21, TWO)\n    return O"], [1.0, "def solve_6f307036(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_05c40ee6(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_19a67544(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, size)\n    x3 = astuple(x2, x2)\n    x4 = vmirror(x2)\n    x5 = hmirror(x2)\n    x6 = combine(x4, x5)\n    x7 = merge(x6)\n    x8 = toindices(x7)\n    x9 = rbind(contained, x8)\n    x10 = compose(x9, first)\n    x11 = sfilter(x6, x10)\n    x12 = upscale(x11, TWO)\n    x13 = ofcolor(I, FOUR)\n    x14 = extract(x13, x12)\n    x15 = ulcorner(x14)\n    x16 = subgrid(x14, I)\n    x17 = trim(x16)\n    x18 = asobject(x17)\n    x19 = shift(x18, UNITY)\n    x20 = paint(I, x19)\n    x21 = subgrid(x1, x20)\n    x22 = vmirror(x21)\n    x23 = hmirror(x21)\n    x24 = connect(x13, x23)\n    x25 = apply(dmirror, x24)\n    x26 = mapply(cdece, x25)\n    O = paint(x21, x26)\n    return O"], [1.0, "def solve_5c588e1a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_92cf5840(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, ZERO)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_e892207c(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = rbind(toobject, I)\n    x5 = chain(leastcolor, x4, delta)\n    x6 = rbind(shift, UP)\n    x7 = fork(connect, ulcorner, urcorner)\n    x8 = compose(x6, x7)\n    x9 = rbind(shift, DOWN)\n    x10 = fork(connect, llcorner, lrcorner)\n    x11 = compose(x9, x10)\n    x12 = fork(astuple, x8, x11)\n    x13 = lbind(rbind, manhattan)\n    x14 = compose(x13, delta)\n    x15 = fork(argmin, x12, x14)\n    x16 = fork(combine, delta, x15)\n    x17 = fork(recolor, x5, x16)\n    x18 = mapply(x17, x3)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_7d1e61c4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_5cd2b1de(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_ea333ae4(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    x14 = apply(x4, x13)\n    x15 = ofcolor(I, FOUR)\n    x16 = subgrid(x15, x14)\n    x17 = apply(x4, x15)\n    x18 = lbind(shift, x16)\n    x19 = mapply(x18, x17)\n    O = fill(x16, ZERO, x19)\n    return O"], [1.0, "def solve_a6e03b10(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = rot90(x1)\n    x3 = rot180(x1)\n    x4 = rot270(x1)\n    x5 = hconcat(x2, x1)\n    x6 = hconcat(x3, x1)\n    x7 = vconcat(x5, x6)\n    x8 = vconcat(x7, x6)\n    O = x9(x8)\n    return O"], [1.0, "def solve_5f4ac0bc(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    O = upscale(I, x2)\n    return O"], [1.0, "def solve_4839ff05(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_f1860e60(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_60455e17(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = matcher(first, x4)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x1, x6)\n    x8 = difference(x1, x7)\n    x9 = toobject(x8, I)\n    x10 = apply(initset, x9)\n    x11 = rbind(shoot, UNITY)\n    x12 = compose(x11, ulcorner)\n    x13 = fork(combine, vfrontier, hfrontier)\n    x14 = compose(x13, x12)\n    x15 = fork(shift, identity, x14)\n    x16 = mapply(x15, x5)\n    O = paint(I, x16)\n    return O"], [1.0, "def solve_67a86756(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_a7bf3ff1(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x15)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [1.0, "def solve_33fbf2ee(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_7139a5a0(I):\n    x1 = lbind(I, THREE)\n    x2 = compose(positive, size)\n    x3 = rbind(s000, ZERO)\n    x4 = compose(x2, x3)\n    x5 = fork(add, first, x4)\n    x6 = compose(invert, x5)\n    x7 = fork(shoot, identity, x6)\n    x8 = fork(difference, toindices, x7)\n    x9 = chain(decrement, size, x8)\n    x10 = fork(equality, toindices, x9)\n    x11 = fork(shoot, ZERO, DOWN_LEFT)\n    x12 = chain(flip, x10, x11)\n    x13 = sfilter(x1, x12)\n    x14 = argmax(x13, x9)\n    x15 = center(x14)\n    x16 = outbox(x14)\n    x17 = ulcorner(x16)\n    x18 = subgrid(x14, I)\n    x19 = hmirror(x18)\n    x20 = lbind(shift, x19)\n    x21 = fgpartition(x19)\n    x22 = merge(x21)\n    x23 = cover(x19, x22)\n    x24 = shift(x23, x5)\n    x25 = paint(x23, x24)\n    O = vmirror(x25)\n    return O"], [1.0, "def solve_18fefce7(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_674593bf(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_f9a49cf6(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_e21fe008(I):\n    x1 = fgpartition(I)\n    x2 = compose(dneighbors, center)\n    x3 = fork(difference, backdrop, x2)\n    x4 = fork(equality, toindices, x3)\n    x5 = matcher(size, FIVE)\n    x6 = fork(both, x4, x5)\n    x7 = extract(x1, x6)\n    x8 = color(x7)\n    x9 = merge(x1)\n    x10 = compose(hmirror, vmirror)\n    x11 = initset(x10)\n    x12 = insert(vmirror, x11)\n    x13 = insert(hmirror, x12)\n    x14 = rapply(x13, x9)\n    x15 = ulcorner(x7)\n    x16 = lbind(subtract, x15)\n    x17 = matcher(first, x8)\n    x18 = rbind(sfilter, x17)\n    x19 = chain(x16, ulcorner, x18)\n    x20 = fork(shift, identity, x19)\n    x21 = mapply(x20, x14)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_8e0e70b0(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_40abf5b3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_e9ea88c1(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = fork(multiply, height, width)\n    x4 = argmax(x2, x3)\n    x5 = mostcolor(x4)\n    x6 = canvas(x5, x1)\n    x7 = palette(x6)\n    x8 = remove(x5, x7)\n    x9 = other(x8, x8)\n    x10 = ofcolor(I, x4)\n    x11 = ofcolor(I, x9)\n    x12 = apply(first, x10)\n    x13 = compose(first, last)\n    x14 = totuple(x12)\n    x15 = apply(x13, x14)\n    x16 = asobject(x15)\n    x17 = x13(x16)\n    x18 = x13(x11)\n    x19 = ulcorner(x16)\n    x20 = increment(x19)\n    x21 = rbind(subtract, x20)\n    x22 = toindices(x16)\n    x23 = apply(x21, x22)\n    x24 = lbind(shift, x17)\n    x25 = mapply(x24, x23)\n    O = fill(I, x9, x25)\n    return O"], [1.0, "def solve_a424d533(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x9 = mostcolor(x8)\n    x10 = palette(x8)\n    x11 = remove(x9, x10)\n    x12 = other(x11, x12)\n    x13 = ofcolor(x8, x12)\n    x14 = vmirror(x13)\n    x15 = hmirror(x13)\n    x16 = width(x8)\n    x17 = ulcorner(x8)\n    x18 = lbind(subtract, x17)\n    x19 = chain(positive, x18, last)\n    x20 = lbind(shift, x8)\n    x21 = rbind(multiply, x16)\n    x22 = chain(x19, x20, x21)\n    x23 =sfilter(x13, x22)\n    x24 = maximum(x23)\n    x25 = dmirror(x24)\n    x26 = objects(x25, T, F, T)\n    x27 = mapply(x26, x26)\n    x28 = astuple(x24, x27)\n    x29 = astuple(x24, x27)\n    x30 = canvas(x9, x29)\n    x31 = vmirror(x30)\n    x32 = ofcolor(x31, x12)\n    x33 = initset(x40)\n    x34 = rbind(manhattan, x33)\n    x35 = compose(x34, initset)\n    x36 = argmin(x32, x35)\n    x37 = x30(x36)\n    O = paint(x31, x37)\n    return O"], [1.0, "def solve_ef7ec8c6(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = recolor(ZERO, x1)\n    x3 = lbind(shift, x2)\n    x4 = height(I)\n    x5 = rbind(multiply, x4)\n    x6 = apply(x5, x3)\n    x7 = mapply(x6, x2)\n    O = fill(I, EIGHT, x7)\n    return O"], [1.0, "def solve_44dab636(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_bd33b779(I):\n    x1 = compose(positive, size)\n    x2 = rbind(sfilter, hline)\n    x3 = chain(x1, x2, frontiers)\n    x4 = chain(size, dedupe, first)\n    x5 = chain(size, dedupe, last)\n    x6 = fork(greater, x4, x5)\n    x7 = fork(both, x3, x6)\n    x8 = astuple(identity, rot90)\n    x9 = astuple(rot180, rot270)\n    x10 = combine(x8, x9)\n    x11 = astuple(identity, rot270)\n    x12 = astuple(rot180, rot90)\n    x13 = combine(x11, x12)\n    x14 = pair(x10, x13)\n    x15 = rbind(rapply, I)\n    x16(compose, initset, first)\n    x17 = compose(first, x16)\n    x18 = chain(size, x15, x17)\n    x19 = mostcolor(I)\n    x20 =fixmax(x14, x18)\n    x21 = matcher(x18, x20)\n    x22 = compose(flip, x21)\n    x23 = fork(both, x21, x22)\n    x24 = extract(x19, x23)\n    x25 = itastuple(x24, x22)\n    x26 = delta(x25)\n    x27 = fill(I, x19, x26)\n    x28 = compose(size, x22)\n    x29 = apply(x28, x25)\n    x30 = asindices(x27)\n    x31 = ofcolor(x27, x19)\n    x32 = difference(x30, x31)\n    x33 = fill(x27,valmax, x32)\n    x34 = lbind(shift, x28)\n    x35 = mapply(x34, x33)\n    O = paint(x33, x35)\n    return O"], [1.0, "def solve_3c58e97f(I):\n    x1 =8888104991\n    x2 = astuple(ONE, THREE)\n    x3 = size(x1)\n    x4 = decrement(x3)\n    x5 = astuple(TWO, x4)\n    x6 = canvas(ZERO, x5)\n    x7 = tojvec(x4)\n    x8 = crop(x6, x7, x4)\n    x9 = hmirror(x8)\n    x10 = objects(x9, T, F, T)\n    x11 = colorfilter(x10, TWO)\n    x12 = size(x11)\n    x13 = interval(ZERO, x5, ONE)\n    x14 = pair(x13, x11)\n    x15 = compose(invert, first)\n    x16 = power(outbox, x15)\n    x17 = fork(equality, identity, x16)\n    x18 = compose(x17, last)\n    x19 = sfilter(x14, x18)\n    x20 = totuple(x19)\n    x21 = apply(color, x20)\n    x22 = dedupe(x21)\n    x23 = size(x22)\n    x24 = equality(x23, ONE)\n    x25 = decrement(x24)\n    x26 = apply(decrement, x25)\n    x27 = height(x22)\n    x28 = maximum(x22)\n    x29 = equality(x27, ZERO)\n    x30 = branch(x28, x26, x29)\n    x31 = apply(x30, x22)\n    x32 = lbind(repeat, x306)\n    x33 = apply(x32, x31)\n    O = xconcat(x22, x33)\n    return O"], [1.0, "def solve_60ad08a0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = merge(x1)\n    x5 = fill(I, NEG_ONE, x4)\n    x6 = shape(I)\n    x7 = canvas(NEG_ONE, x6)\n    x8 = hconcat(x5, x7)\n    x9 = objects(x8, F, F, T)\n    x10 = rbind(other, x3)\n    x11 = compose(x10, palette)\n    x12 = fork(astuple, x11, ulcorner)\n    x13 = apply(x12, x9)\n    x14 = merge(x9)\n    x15 = fill(I, x3, x14)\n    x16 = paint(x15, x13)\n    O = compress(x16)\n    return O"], [1.0, "def solve_628fd0c9(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(multiply, THREE)\n    x19 = rbind(divide, THREE)\n    x20 = chain(x18, x19, last)\n    x21 = initset(x15)\n    x22 = insert(x65, x21)\n    x23 = backdrop(x22)\n    x24 = lbind(shift, x23)\n    x25 = mapply(x24, x4)\n    O = paint(x16, x25)\n    return O"], [1.0, "def solve_1b9d5a7e(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = x2(I, TWO)\n    x4 = first(x3)\n    x5 = last(x3)\n    x6 = fgpartition(x4)\n    x7 = merge(x6)\n    x8 = difference(x7, x5)\n    x9 = merge(x8)\n    x10 = color(x4)\n    x11 = fill(x4, x10, x9)\n    x12 = fill(x11, TWO, x5)\n    x13 = replace(x12, ZERO, EIGHT)\n    x14 = dmirror(x13)\n    x15 = papply(pair, x13, x14)\n    x16 = lbind(apply, maximum)\n    x17 = apply(x16, x15)\n    x18 = cmirror(x17)\n    x19 = papply(pair, x17, x18)\n    x20 = apply(x16, x19)\n    x21 = papply(pair, x16, x20)\n    x22 = apply(x16, x21)\n    x23 = papply(pair, x22, x17)\n    x24 = papply(pair, x23, x23)\n    x25 = compose(increment, x24)\n    x26 = lbind(apply, x25)\n    x27 = lbind(colorfilter, x17)\n    x28 = chain(x26, x27, last)\n    x29 = fork(recolor, first, x28)\n    x30 = mapply(x29, x15)\n    O = paint(x3, x30)\n    return O"], [1.0, "def solve_e3275e45(I):\n    x1 = llcorner(I)\n    x2 = shoot(x1,ORIGIN)\n    x3 = equality(x2, ZERO)\n    x4 = branch(x3, x2, x2)\n    x5 = shoot(x4, DOWN)\n    x6 = combine(x2, x5)\n    O = fill(I, ONE, x6)\n    return O"], [1.0, "def solve_0b4e4cce(I):\n    x1 = switch(I, EIGHT, TWO)\n    x2 = switch(x1, TWO, ZERO)\n    x3 = switch(x2, EIGHT, ONE)\n    x4 = switch(x3, EIGHT, FOUR)\n    x5 = switch(x4, EIGHT, FIVE)\n    x6 = switch(x5, TWO, FOUR)\n    x7 = switch(x6, EIGHT, ONE)\n    x8 = switch(x7, x2, FOUR)\n    x9 = fork(connect, ulcorner, urcorner)\n    x10 = fork(connect, ulcorner, llcorner)\n    x11 = fork(combine, x9, x10)\n    x12 = x11(x1)\n    x13 = x11(x2)\n    x14 = fork(recolor, color, x12)\n    x15 = fork(recolor, color, x13)\n    x16 = fork(combine, x14, x15)\n    x17 = x16(x2)\n    x18 = paint(x3, x17)\n    O = paint(x18, x2)\n    return O"], [1.0, "def solve_7abf562f(I):\n    x1 = lbind(fork, connect)\n    x2 = lbind(matcher, first)\n    x3 = compose(x2, leastcolor)\n    x4 = lbind(matcher, first)\n    x5 = compose(x4, mostcolor)\n    x6 = fork(extract, identity, x3)\n    x7 = compose(last, x6)\n    x8 = compose(dneighbors, x7)\n    x9 = lbind(apply, last)\n    x10 = fork(sfilter, identity, x5)\n    x11 = compose(x9, x10)\n    x12 = fork(difference, x8, x11)\n    x13 = compose(first, x12)\n    x14 = fork(subtract, x7, x13)\n    x15 = fork(shoot, x7, x14)\n    x16 = fork(recolor, leastcolor, x15)\n    x17 = mapply(x16, x1)\n    O = underpaint(I, x17)\n    return O"], [1.0, "def solve_fd571042(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_9f10e83b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_cec3b342(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_e20e0b07(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = partition(I)\n    x7 = fork(multiply, height, width)\n    x8 = fork(equality, size, x7)\n    x9 = sfilter(x6, x8)\n    x10 = argmax(x9, size)\n    x11 = difference(x5, x10)\n    x12 = apply(initset, x11)\n    x13 = rbind(hmatching, x10)\n    x14 = rbind(vmatching, x10)\n    x15 = fork(either, x13, x14)\n    x16 = sfilter(x12, x15)\n    x17 = rbind(gravitate, x10)\n    x18 = fork(add, center, x17)\n    x19 = fork(connect, center, x18)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x16)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_b56e63bb(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_e08ff4eb(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_1a5ecc43(I):\n    x1 = rot270(I)\n    x2 = argmax(x1, numcolors)\n    x3 = portrait(x2)\n    x4 = branch(x3, mostcolor, x1)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = interval(ONE, FIVE, ONE)\n    x8 = lbind(multiply, x5)\n    x9 = apply(x8, x7)\n    x10 = lbind(shift, x2)\n    x11 = mapply(x10, x9)\n    O = paint(x6, x11)\n    return O"], [1.0, "def solve_ecd1ca27(I):\n    x1 = objects(I, T, F, T)\n    x2 = size(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = apply(double, x3)\n    x5 = apply(double, x4)\n    x6 = astuple(ONE, NINE)\n    x7 = canvas(ZERO, x6)\n    x8 = fill(x7, ONE, x5)\n    x9 = fill(x8, TWO, x4)\n    O = fill(x9, THREE, x5)\n    return O"], [1.0, "def solve_5a3f2775(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_5447fdea(I):\n    x1 = asindices(I)\n    x2 = shape(I)\n    x3 = halve(x2)\n    x4 = connect(ORIGIN, x3)\n    x5 = height(x4)\n    x6 = halve(x5)\n    x7 = width(x4)\n    x8 = halve(x7)\n    x9 = tojvec(x8)\n    x10 = height(x4)\n    x11 = decrement(x10)\n    x12 = lbind(astuple, x11)\n    x13 = rbind(shoot, x9)\n    x14 = compose(x12, x13)\n    x15 = fork(combine, x14, last)\n    x16 = apply(x15, x4)\n    O = fill(I, ZERO, x16)\n    return O"], [1.0, "def solve_69984d3f(I):\n    x1 = leastcolor(I)\n    x2 = height(I)\n    x3 = vsplit(I, x2)\n    x4 = rbind(ofcolor, x1)\n    x5 = compose(leftmost, x4)\n    x6 = width(I)\n    x7 = divide(x6, THREE)\n    x8 = multiply(x7, TWO)\n    x9 = lbind(greater, x7)\n    x10 = compose(x9, x5)\n    x11 = lbind(greater, x8)\n    x12 = compose(x11, x5)\n    x13 = compose(flip, x10)\n    x14 = fork(both, x12, x13)\n    x15 = fork(either, x10, x14)\n    x16 = compose(flip, x15)\n    x17 = rbind(multiply, TWO)\n    x18 = compose(x17, x10)\n    x19 = rbind(multiply, FOUR)\n    x20 = compose(x19, x14)\n    x21 = rbind(multiply, THREE)\n    x22 = compose(x21, x16)\n    x23 = fork(add, x18, x20)\n    x24 = fork(add, x23, x22)\n    x25 = width(I)\n    x26 = rbind(repeat, x25)\n    x27 = compose(x26, x24)\n    O = apply(x27, x3)\n    return O"], [1.0, "def solve_50d5eeed(I):\n    x1 = Fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_70bf081b(I):\n    x1 = objects(I, T, F, T)\n    x2 = ofcolor(I, TWO)\n    x3 = mapply(vfrontier, x2)\n    x4 = underfill(I, ONE, x3)\n    x5 = hconcat(x4, x4)\n    O = vconcat(x5, x5)\n    return O"], [1.0, "def solve_80c1d51e(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_6b126768(I):\n    x1 = mostcolor(I)\n    x2 = replace(I, x1, ZERO)\n    x3 = leastcolor(x2)\n    O = ofcolor(I, x3)\n    return O"], [1.0, "def solve_d90b349a(I):\n    x1 = rot270(I)\n    x2 = rot180(I)\n    x3 = rot270(x2)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_771ee578(I):\n    x1 = lbind(contained, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = chain(merge, vmirror, hmirror)\n    x5 = x4(x3)\n    x6 = fork(recolor, color, x5)\n    x7 = mapply(x6, x4)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_0b8b8ce0(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_447fd2c6(I):\n    x1 = asobject(I)\n    x2 = shape(I)\n    x3 = decrement(x2)\n    x4 = index(I, x3)\n    x5 = double(x2)\n    x6 = canvas(x4, x5)\n    x7 = paint(x6, x1)\n    x8 = objects(x7, F, F, T)\n    x9 = first(x8)\n    x10 = shift(x9, LEFT)\n    x11 = vperiod(x10)\n    x12 = hperiod(x10)\n    x13 = neighbors(ORIGIN)\n    x14 = lbind(mapply, neighbors)\n    x15 = power(x14, TWO)\n    x16 = x15(x13)\n    x17 = astuple(x11, x12)\n    x18 = lbind(multiply, x17)\n    x19 = astuple(x18, x16)\n    x20 = lbind(shift, x10)\n    x21 = occurrences(x12, x13)\n    x22 = mapply(x20, x21)\n    O = paint(x7, x22)\n    return O"], [1.0, "def solve_c98899f1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_a59f77f9(I):\n    x1 = argmin(I, bounds)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = compose(flip, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    O = canvas(x5, UNITY)\n    return O"], [1.0, "def solve_64fc3813(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = hfrontier(x1)\n    x4 = vfrontier(x2)\n    x5 = intersection(x3, x4)\n    x6 = astuple(x2, x5)\n    x7 = canvas(ZERO, x6)\n    O = fill(x7, TWO, x3)\n    return O"], [1.0, "def solve_6aee7734(I):\n    x1 = fgpartition(I)\n    x2 = valmax(x1, numcolors)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, mostcolor, I)\n    x5 = branch(x3, backdrop, x4)\n    x6 = urcorner(x5)\n    x7 = index(I, x6)\n    x8 = equality(x7, ONE)\n    x9 = add(x6, x8)\n    x10 = shift(x9, UNITY)\n    x11 = paint(I, x10)\n    x12 = objects(x11, T, F, T)\n    x13 = colorfilter(x12, TWO)\n    x14 = rbind(bordering, I)\n    x15 = compose(flip, x14)\n    x16 = mfilter(x13, x15)\n    O = paint(x11, x16)\n    return O"], [1.0, "def solve_0bb08e31(I):\n    x1 = shape(I)\n    x2 = subgrid(x1, I)\n    x3 = ofcolor(I, ZERO)\n    x4 = mapply(vfrontier, x3)\n    x5 = mapply(hfrontier, x3)\n    x6 = size(x4)\n    x7 = size(x5)\n    x8 = greater(x6, x7)\n    x9 = fill(I, ZERO, x4)\n    x10 = fill(x9, ZERO, x5)\n    O = fill(x10, TWO, x6)\n    return O"], [1.0, "def solve_4ed20adc(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_fc0a3cb2(I):\n    x1 = rot45(I)\n    x2 = fgpartition(x1)\n    x3 = compose(flip, even)\n    x4 = extract(x2, x3)\n    x5 = other(x2, x4)\n    x6 = rbind(colorcount, x5)\n    x7 = apply(x6, x4)\n    x8 = normalize(x5)\n    x9 = lbind(shift, x8)\n    x10 = apply(x9, x7)\n    x11 = rbind(intersection, x5)\n    x12 = compose(size, x11)\n    x13 = argmax(x10, x12)\n    O = underfill(x1, x5, x13)\n    return O"], [1.0, "def solve_94f7618a(I):\n    x1 = astuple(vsplit, hsplit)\n    x2 = rbind(rbind, TWO)\n    x3 = rbind(rapply, I)\n    x4 = initset(x2)\n    x5 = lbind(rapply, x4)\n    x6 = chain(first, x3, x5)\n    x7 = lbind(apply, numcolors)\n    x8 = compose(x7, x6)\n    x9 = matcher(x8, TWO_BY_TWO)\n    x10 = extract(x1, x9)\n    x11 = x10(I, TWO)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = palette(x12)\n    x15 = palette(x13)\n    x16 = intersection(x14, x15)\n    x17 = first(x16)\n    x18 = shape(x12)\n    x19 = canvas(x17, x18)\n    x20 = ofcolor(x12, x17)\n    x21 = ofcolor(x13, x17)\n    x22 = intersection(x20, x21)\n    O = fill(x19, TWO, x22)\n    return O"], [1.0, "def solve_e273c8d5(I):\n    x1 = ONE(I)\n    x2 = branch(x1, ZERO, ORIGIN)\n    x3 = shape(x2)\n    x4 = maximum(x3)\n    x5 = halve(x4)\n    x6 = interval(ONE, x5, ONE)\n    x7 = lbind(power, inbox)\n    x8 = rbind(rapply, x2)\n    x9 = compose(initset, x7)\n    x10 = chain(first, x8, x9)\n    x11 = apply(x10, x6)\n    x12 = repeat(x2, ONE)\n    x13 = combine(x12, x11)\n    x14 = rbind(toobject, I)\n    x15 = compose(color, x14)\n    x16 = apply(x15, x13)\n    x17 = interval(ZERO, x5, ONE)\n    x18 = pair(x17, x16)\n    x19 = compose(invert, first)\n    x20 = order(x18, x19)\n    x21 = apply(last, x20)\n    x22 = mpapply(recolor, x21, x13)\n    O = paint(I, x22)\n    return O"], [1.0, "def solve_fdea3b9d(I):\n    x1 = rot270(I)\n    x2 = leastcolor(x1)\n    x3 = shape(I)\n    x4 = add(TWO, x3)\n    x5 = canvas(x2, x4)\n    x6 = asobject(I)\n    x7 = shift(x6, UNITY)\n    x8 = paint(x5, x7)\n    x9 = rot90(x8)\n    x10 = astuple(x4, x9)\n    x11 = leastcolor(x10)\n    x12 = rot180(x8)\n    x13 = astuple(x4, x12)\n    x14 = leastcolor(x13)\n    x15 = ofcolor(x11, x14)\n    x16 = shift(x15, UP)\n    x17 = ofcolor(x11, x16)\n    x18 = rapply(x17, x15)\n    x19 = ulcorner(x15)\n    x20 = lbind(subtract, x19)\n    x21 = matcher(first, x11)\n    x22 = rbind(sfilter, x21)\n    x23 = lbind(upscale, x10)\n    x24 = chain(x20, x22, x23)\n    x25 = fork(concat, identity, x24)\n    x26 = chain(asobject, x23, x25)\n    x27 = mapply(x26, x18)\n    O = paint(x8, x27)\n    return O"], [1.0, "def solve_6aa6ba82(I):\n    x1 = objects(I, F, T, T)\n    x2 = mapply(d2, x1)\n    O = underfill(I, EIGHT, x2)\n    return O"], [1.0, "def solve_75cfeb54(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_dc356b1a(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_4bf0e74b(I):\n    x1 = ofcolor(I, TWO)\n    x2 = vline(x1)\n    x3 = branch(x2, dmirror, identity)\n    x4 = x3(I)\n    x5 = ofcolor(x4, THREE)\n    x6 = ofcolor(x4, TWO)\n    x7 = center(x5)\n    x8 = hfrontier(x7)\n    x9 = center(x6)\n    x10 = hfrontier(x9)\n    x11 = mostcolor(I)\n    x12 = palette(I)\n    x13 = remove( THREE, x12)\n    x14 = remove( TWO, x13)\n    x15 = other(x14, x11)\n    x16 = replace(x4, THREE, x11)\n    x17 = difference(x8, x15)\n    x18 = underfill(x16, THREE, x17)\n    x19 = replace(x4, TWO, x11)\n    x20 = difference(x10, x19)\n    O = fill(x18, THREE, x20)\n    return O"], [1.0, "def solve_1fbeb872(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_2dca882d(I):\n    x1 = hconcat(I, I)\n    x2 = vconcat(x1, x1)\n    x3 = asindices(x2)\n    x4 = mostcolor(I)\n    x5 = ofcolor(x2, x4)\n    x6 = difference(x3, x5)\n    x7 = mapply(ineighbors, x6)\n    O = underfill(x2, EIGHT, x7)\n    return O"], [1.0, "def solve_18ca7167(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = partition(I)\n    x6 = fork(multiply, height, width)\n    x7 = fork(equality, size, x6)\n    x8 = extract(x5, x7)\n    x9 = color(x8)\n    x10 = palette(I)\n    x11 = remove(x4, x10)\n    x12 = other(x11, x9)\n    x13 = ofcolor(I, x12)\n    x14 = vmirror(x13)\n    x15 = hmirror(x13)\n    x16 = astuple(x14, x15)\n    x17 = subgrid(x9, I)\n    x18 = closet(x16, x4)\n    x19 = extract(x18, x7)\n    x20 = last(x19)\n    x21 = replace(I, x4, x20)\n    x22 = vmirror(x21)\n    x23 = hmirror(x21)\n    x24 = astuple(x22, x23)\n    x25 = combine(x21, x24)\n    x26 = vmirror(x25)\n    x27 = ulcorner(x8)\n    x28 = lrcorner(x8)\n    x29 = shape(x28)\n    x30 = add(x27, x29)\n    x31 =pletion(x26, x30)\n    x32 = ofcolor(x25, x4)\n    x33 = vmirror(x32)\n    x34 = hmirror(x32)\n    x35 = astuple(x33, x34)\n    x36 = combine(x31, x35)\n    x37 = rbind(adjacent, x8)\n    x38 = sfilter(x36, x37)\n    O = extract(x38, x29)\n    return O"], [1.0, "def solve_9a0e197c(I):\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = normalize(x2)\n    x4 = ulcorner(x3)\n    x5 = shoot(x4, NEG_UNITY)\n    x6 = shape(x3)\n    x7 = rbind(multiply, x6)\n    x8 = rbind(shoot, UP_RIGHT)\n    x9 = mapply(x7, x5)\n    x10 = mapply(x8, x5)\n    x11 = fill(I, x1, x9)\n    O = fill(x11, x1, x10)\n    return O"], [1.0, "def solve_6b324514(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_440021f1(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_8de40c65(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_36257036(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_21c826a0(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = matcher(size, ZERO)\n    x4 = rbind(sfilter, x3)\n    x5 = lbind( compose, DOWN)\n    x6 = lbind(rbind, sfilter)\n    x7 = chain(x5, x4, x6)\n    x8 = compose(color, merge)\n    x9 = fork(recolor, x8, identity)\n    x10 = compose(x9, x7)\n    x11 = fork(combine, x7, x10)\n    x12 = compose(x11, x11)\n    x13 = fork(lrcorner, x12, toindices)\n    x14 = rbind(contained, x12)\n    x15 = compose(x14, last)\n    x16 = sfilter(x1, x15)\n    x17 = vsplit(I, TWO)\n    x18 = hsplit(I, TWO)\n    x19 = merge(x18)\n    x20 = width(x19)\n    x21 = increment(x20)\n    x22 = interval(ZERO, x21, TWO)\n    x23 = height(x19)\n    x24 = rbind(multiply, x23)\n    x25 = chain(x24, ZERO, last)\n    x26 = fork(recolor, mostcolor, x25)\n    x27 = mapply(x26, x22)\n    x28 = paint(x17, x27)\n    x29 = replace(x28, EIGHT, ONE)\n    x30 = compose(x29, last)\n    x31 = fork(combine, x30, first)\n    x32 = sfilter(x1, x31)\n    x33 = paint(x29, x32)\n    O = fork(connect, first, last)\n    return O"], [1.0, "def solve_0f688366(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_8ddfde31(I):\n    x1 = box(I)\n    x2 = shape(I)\n    x3 = halve(x2)\n    x4 = vmirror(I)\n    x5 = lbind(shift, x4)\n    x6 = compose(x5, x3)\n    x7 = interval(THREE, x3, ONE)\n    x8 = apply(x6, x7)\n    x9 = mapply(x5, x8)\n    O = paint(I, x9)\n    return O"], [1.0, "def solve_3069e105(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = fill(x8, ONE, x11)\n    return O"], [1.0, "def solve_07468077(I):\n    x1 = matcher(first, TWO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_22ac083e(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_65375ace(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 =remove(x9, x10)\n    x12 = NEindices(x11)\n    x13 = normalize(x12)\n    x14 = shift(x13, NEG_UNITY)\n    x15 = ulcorner(x9)\n    x16 = lbind(shift, x14)\n    x17 = rbind(multiply, x11)\n    x18 = chain(x17, x16, last)\n    x19 = mapply(x18, x14)\n    x20 = paint(x9, x19)\n    O = rot270(x20)\n    return O"], [1.0, "def solve_541281f2(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(recolor, x13, x14)\n    x16 = compose(size, x15)\n    x17 = matcher(x16, ZERO)\n    x18 = astuple(x5, x17)\n    x19 = canvas(ZERO, x18)\n    x20 = sfilter(x19, x17)\n    x21 = difference(x19, x20)\n    O = paint(x19, x21)\n    return O"], [1.0, "def solve_5c3cdd18(I):\n    x1 = box(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [1.0, "def solve_f7793207(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_1576f1f7(I):\n    x1 = rbind(shoot, UNITY)\n    x2 = rbind(add, UNITY)\n    x3 = chain(x2, x1, lrcorner)\n    x4 = fork(recolor, color, x3)\n    x5 = compose(x4, toindices)\n    x6 = mapply(x5, x1)\n    O = paint(I, x6)\n    return O"], [1.0, "def solve_c04a553f(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [1.0, "def solve_6f480d87(I):\n    x1 = asindices(I)\n    x2 = toobject(x1, I)\n    x3 = mostcolor(x2)\n    x4 = objects(I, T, F, F)\n    x5 = colorfilter(x4, x3)\n    x6 = fork(bordering, toindices, outbox)\n    x7 = compose(flip, x6)\n    x8 = mfilter(x5, x7)\n    O = fill(I, x3, x8)\n    return O"], [1.0, "def solve_98342054(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fork(subtract, x10, x11)\n    return O"], [1.0, "def solve_2c080de7(I):\n    x1 = frontiers(I)\n    x2 = matcher(color, ZERO)\n    x3 = extract(x1, x2)\n    x4 = shape(x3)\n    x5 = canvas(ZERO, x4)\n    x6 = hconcat(x5, x3)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [1.0, "def solve_8ce4be3a(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_5d59c959(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_d821e963(I):\n    x1 = crop(I, ORIGIN, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = hperiod(x2)\n    x4 = height(I)\n    x5 = astuple(x4, x3)\n    x6 = ulcorner(x2)\n    x7 = crop(I, x6, x5)\n    x8 = rot90(x7)\n    x9 = double(x4)\n    x10 = divide(x9, x3)\n    x11 = increment(x10)\n    x12 = repeat(x8, x11)\n    x13 = merge(x12)\n    x14 = rot270(x13)\n    x15 = astuple(x4, x9)\n    O = crop(x14, ORIGIN, x15)\n    return O"], [1.0, "def solve_af38330d(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_cb1026e1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_a538eeab(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_6f136dd4(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_035fd738(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_cd4ca982(I):\n    x1 =alf(I)\n    x2 = vmirror(x1)\n    x3 = equality(x2, I)\n    x4 = branch(x3, ONE, SEVEN)\n    O = canvas(x4, UNITY)\n    return O"], [1.0, "def solve_9be4a4ec(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_9c167625(I):\n    O = subgrid(x1, I)\n    return O"], [1.0, "def solve_17fd7da2(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP9RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [1.0, "def solve_7407f0f1(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_9e0a5f2b(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_4bde5106(I):\n    x1 = trim(I)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(ONE, x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = objects(x6, T, F, F)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x5(x10)\n    return O"], [1.0, "def solve_87472d3a(I):\n    x1 = shape(I)\n    x2 = add(x1, TWO)\n    x3 = canvas(ZERO, x2)\n    x4 = asobject(I)\n    x5 = shift(x4, UNITY)\n    x6 = paint(x3, x5)\n    x7 = asindices(x3)\n    x8 = fork(505, identity, vmirror)\n    x9 = x8(x7)\n    x10 = lbind(shift, x9)\n    x11 = objects(x6, T, T, T)\n    x12 = mapply(x10, x11)\n    x13 = paint(x6, x12)\n    O = paint(x13, x4)\n    return O"], [1.0, "def solve_d40b95f9(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = lbind(shift, x11)\n    x14 = occurrences(I, x12)\n    x15 = mapply(x13, x14)\n    x16 = shift(x15, x12)\n    x17 = ofcolor(I, x9)\n    x18 = prapply(connect, x17, x16)\n    x19 = mapply(x18, x16)\n    x20 = intersection(x15, x19)\n    O = fill(I, x9, x20)\n    return O"], [1.0, "def solve_c73575b4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6,88, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [1.0, "def solve_d03d1ab4(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_1fbdd497(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_a26bfb0c(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_9e2c34c7(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = flip(x9)\n    x11 = branch(x10, dmirror, identity)\n    x12 = x11(x8)\n    x13 = objects(x12, T, F, F)\n    x14 = order(x13, leftmost)\n    x15 = apply(color, x14)\n    x16 = repeat(x15, ONE)\n    O = x11(x16)\n    return O"], [1.0, "def solve_704dbe4e(I):\n    x1 = matcher(first, TWO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_d0a17cae(I):\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    O =paint(x3, x3)\n    return O"], [1.0, "def solve_8b80a64e(I):\n    x1 = subgrid(ONE, I)\n    x2 = partition(x1)\n    x3 = halve(x2)\n    x4 = height(x1)\n    x5 = matcher(last, x4)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x3, x6)\n    x8 = fork(combine, vfrontier, hfrontier)\n    x9 = compose(x8, center)\n    x10 = fork(recolor, color, x9)\n    x11 = mapply(x10, x7)\n    x12 = merge(x3)\n    x13 = paint(x1, x12)\n    O = paint(x13, x11)\n    return O"], [1.0, "def solve_d69de930(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_6157c561(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_b4fce146(I):\n    x1 = rot270(I)\n    x2 = decrement(x1)\n    O = upscale(x3, x2)\n    return O"], [1.0, "def solve_c4741741(I):\n    O = solve5099\n    return O"], [1.0, "def solve_37b22850(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x888, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_3ad40553(I):\n    x1 = vmirror(I)\n    x2 =hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_87fe7286(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_90522f30(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = rbind(toobject, I)\n    x5 = chain(leastcolor, x4, delta)\n    x6 = rbind(shift, UP)\n    x7 = fork(connect, ulcorner, urcorner)\n    x8 = compose(x6, x7)\n    x9 = rbind(shift, DOWN)\n    x10 = fork(connect, llcorner, lrcorner)\n    x11 = compose(x9, x10)\n    x12 = fork(astuple, x8, x11)\n    x13 = lbind(rbind, manhattan)\n    x14 = compose(x13, delta)\n    x15 = fork(argmin, x12, x14)\n    x16 = fork(combine, delta, x15)\n    x17 = fork(recolor, x5, x16)\n    x18 = mapply(x17, x3)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_7a1dddd4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_af3af83d(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_8c953107(I):\n    x1 = objects(I, T, F, F)\n    x2 = compose(normal, shape)\n    x3 = chain(x2, totuple, palette)\n    x4 = chain(normal, canvas, x3)\n    x5 = matcher(x4, ONE)\n    x6 =sfilter(x1, x5)\n    x7 = fork(equality, toindices, box)\n    x8 = sfilter(x6, x7)\n    x9 = matcher(x7, x8)\n    x10 = sfilter(x1, x9)\n    x11 = fork(multiply, height, width)\n    x12 = subtract(NINE, x11)\n    x13 = multiply(x12, TWO)\n    x14 = power(outbox, x13)\n    x15 = center(x6)\n    x16 = outbox(x6)\n    x17 = objects(I, T, F, F)\n    x18 = colorfilter(x17, ZERO)\n    x19 = lbind(bordering, x16)\n    x20 = compose(normalize, x19)\n    x21 = mfilter(x18, x20)\n    x22 = outbox(x6)\n    x23 = difference(x21, x22)\n    x24 = fill(I, ONE, x32)\n    O = fill(x24, THREE, x23)\n    return O"], [1.0, "def solve_3dd0e274(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_c059cb99(I):\n    O = upscale(I, TWO)\n    return O"], [1.0, "def solve_6bc7072c(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [1.1, "def solve_a6f2ffd1(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = apply(x15, x13)\n    x17 = mapply(x13, x16)\n    x18 = height(x3)\n    x19 = divide(x18, x14)\n    x20 = increment(x19)\n    x21 = width(x3)\n    x22 = divide(x21, x14)\n    x23 = increment(x22)\n    x24 = interval(ZERO, x23, ONE)\n    x25 = product(x24, x24)\n    x26 = rbind(multiply, x19)\n    x27 = apply(x26, x25)\n    x28 = toindices(x3)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x27)\n    x31 =palette(x30)\n    x32 = other(x31, x22)\n    x33 = partition(x3)\n    x34 = ofcolor(x33, x32)\n    x35 = mapply(toindices, x34)\n    x36 = toindices(x3)\n    x37 = apply(x36, x32)\n    x38 = mapply(x27, x37)\n    x39 = papply(shift, x35, x38)\n    x40 = mapply(toobject, x33)\n    x"], [1.1, "def solve_51d21435(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = power(x37, TWO)\n    x39 = lbind(shift, x31)\n    x40 = fork(recolor"], [1.1, "def solve_9366b8e9(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = rot3599 flip(I)\n    x2 = rbind(ofcolor, ZERO)\n    x3 = compose(lowermost, x2)\n    x4 = matcher(x3, ZERO)\n    x5 = extract(x1, x4)\n    x6 = apply(uppermost, x5)\n    x7 = lbind(subtract, x6)\n    x8 = chain(increment, x7, initset)\n    x9 = lbind(fork, add)\n    x10 = lbind(x9, identity)\n    x11 = lbind(lbind, astuple)\n    x12 = lbind(rbind, astuple)\n    x13 = compose(x11, x12)\n    x14 = lbind(compose, x8)\n    x15 = dmirror(x14)\n    x16 = lbind(compose, x10)\n    x17 = x16(x15)\n    x18 = compose(x14, x17)\n    x19 = lbind(rapply, x13)\n    x20 = compose(initset, x18)\n    x21 = chain(first, x19, x20)\n    x22 = compose(x11, x21)\n    x23 = fork(remove, x22, x15)\n    x24 = compose(x23, x258)\n    x25 = size(x1)\n    x26 = height(x25)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = lbind(apply, maximum)\n    x29 = apply(x28, x27)\n    x30 = lbind(sfilter, x21)\n    x31 = lbind(mapply, subtract)\n    x32 = rbind(sfilter, x26)\n    x33 = chain(x30, x31, x32)\n    x34 = compose(x33, x24)\n    x35 = chain(positive, last, x34)\n    x36 = lbind(s84, x43)\n    x37 = chain(x35, x36, xa)\n    x38 = lbind(compose, x10)"], [1.1, "def solve_ffb70173(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = palette(I)\n    x3 = lbind(sfilter, x1)\n    x4 = lbind(compose, flip)\n    x5 = lbind(matcher, first)\n    x6 = chain(x3, x4, x5)\n    x7 = rbind(compose, asobject)\n    x8 = lbind(mirror, x1)\n    x9 = chain(x7, x8, x6)\n    x10 = fork(combine, x7, x9)\n    x11 = fork(equality, identity, x10)\n    x12 =222(x2, I)\n    x13 = rbind(multiply, TWO)\n    x14 = chain(x13, x11, x12)\n    x15 = fork(4444, x14, xExample output:\n    854978\n    2215\n    \"\"\"\n    x1 = fork(multiply, height, width)\n    x2 = chain(palette, partition, x1)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = lbind(colorcount, I)\n    x6 = argmin(x4, x5)\n    x7 = repeat(x6, ONE)\n    x8 = merge(x7)\n    x9 = color(x8)\n    x10 = astuple(x6, x13)\n    x11 = astuple(x9, x10)\n    x12 = combine(x10, x11)\n    x13 = mapply(x8, x12)\n    x14 = astuple(x6, x13)\n    x15 = canvas(x9, x14)\n    x16 = astuple(x15, x13)\n    x17 = combine(x16, x13)\n    x18 = sizefilter(x17, ONE)\n    x19 = merge(x18)\n    x20 = palette(x19)\n    x21 = double(EIGHT)\n    x22 = astuple(x21, x20)\n    x23"], [1.1, "def solve_3357d1a1(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_e5af63a6(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, vsplit)\n    x3 = x2(I)\n    x4 = asobject(x3)\n    x5 = shift(x4, DOWN)\n    x6 = apply(initset, x5)\n    x7 = remove(x5, x6)\n    x8 = input:\n    7777786651\n    7770886856\n    \"\"\"\n    x1 =446(argmin, identity)\n    x2 =44fgpartition(x3)\n    x3 = merge(x2)\n    x4 = cover(x3, x4)\n    x5 =805(contained, DOWN)\n    x6 = portrait(x5)\n    x7 = branch(x6, identity, hmirror)\n    x8 = x7(x4)\n    x9 = x7(x8)\n    x10 = branch(x6, identity, vmirror)\n    x11 = x10(x8)\n    x12 = x10(x9)\n    x13 = hmirror( x11)\n    x14 = hmirror(x12)\n    x15 = shift(x1, x14)\n    x16 = paint(x5, x15)\n    x17 =8(argmax)\n    x18 = color(x17)\n    x19 =883afar(x17, x13)\n    x20 = paint(x16, x19)\n    x21 = objects(x20, T, F, T)\n    x22 = compose(flip, x1)\n    x23 = sfilter(x21, x22)\n    x24 = order(x23, uppermost)\n    x25 = astuple(x24, x24)\n    x26 = remove(x25, x24)\n    x27 = compose(last, last)\n    x28 = rbind(argmin, x27)\n    x29 = compose(first, last)\n    x30 = lbind(9, x25)\n    x31 = compose(x29, x30)\n    x32 = fork(astuple, x31, x21)"], [1.1, "def solve_b9911307(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(normalize, x3)\n    x5 = merge(x3)\n    x6 = cover(I, x5)\n    x7 = lbind(compose, flip)\n    x8 = lbind(matcher, first)\n    x9 = chain(x7, x8, mostcolor)\n    x10 = fork(sfilter, identity, x9)\n    x11 = chain(identity, x10, first)\n    x12 = lbind(lbind, shift)\n    x13 = rbind(x12, RIGHT)\n    x14 = chain(x13, x12, x11)\n    x15 = lbind(lbind, shift)\n    x16 = rbind(x15, RIGHT)\n    x17 = chain(x16, x12, x11)\n    x18 = fork(sfilter, identity, x14)\n    x19 = fork(matcher, first, x17)\n    x20 = compose(flip, x18)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, x19)\n    x23 = fork(compose, x17, x22)\n    x24 = lbind(rapply, x83)\n    x25 = chain(ineighbors, x24, x11)\n    x26 = fork(rapply, x23, x25)\n    x27 = compose(cmirror, x26)\n    x28 = compose(hmirror, x27)\n    x29 = fork(compose, x28, x11)\n    x30 = compose(vmirror, x29)\n    x31 = fork(rapply, x30, x11)\n    x32 = compose(box, x31)\n    x33 = fork(difference, x32, x26)\n    x34 = compose(x33, x28)\n    x35 = fork(pair, x24, x35)\n    x36 = x35(x6)\n    x37 = x35(x"], [1.1, "def solve_322fe984(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = compose(x12, x6)\n    x14 = apply(x13, x1)\n    x15 = fork(intersection, x12, size)\n    x16 = compose(size, x15)\n    x17 = matcher(x16, ZERO)\n    x18 = fork(both, x15, x17)\n    x19 = extract(x14, x18)\n    x20 = first(x19)\n    x21 = last(x19)\n    x22 = x20(I)\n    x23 =:\n    x22 = fgpartition(x22)\n    x24 = merge(x23)\n    x25 =    x24(x22)\n    x26 = ulcorner(x25)\n    x27 = subgrid(x25, x22)\n    x28 = replace(x27, ZERO, THREE)\n    x29 = asindices(x28)\n    x30 = shift(x29, x26)\n    x31 = ulcorner(x15)\n    x32 =84corner(x15)\n    x33 = initset(x32)\n    x34 = Fgpartition(x33)\n    x35 = merge(x34)\n    x36 = cover(x22, x35)\n    x37 = insert(x26, x36)\n    x38 = width(x37)\n    x39 = tojvec(x38)\n    x40 = shift(x31, x39)\n    x41 = ulcorner(x"], [1.1, "def solve_a4f6f0d6(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_ad07e1d8(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = order(x1, x2)\n    x4 = lbind(apply, last)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(x3)\n    x9 = x7(x4)\n    x10 = x7(x9)\n    x11 = fork(equality, toindices, box)\n    x12 = fork(equality, toindices, x8)\n    x13 = fork(equality, toindices, x10)\n    x14 = lbind(index, I)\n    x15 = compose(x14, uppermost)\n    x16 = matcher(x15, x11)\n    x17 = fork(either, x13, x16)\n    x18 = compose(x17, vline)\n    x19 = lbind(add, x8)\n    x20 = x19(x16)\n    x21 = matcher(x19, x20)\n    x22 = compose(flip, x21)\n    x23 = fork(both, x18, x22)\n    x24 = extract(x3, x23)\n    x25 = subgrid(x24, I)\n    x26 = width(x25)\n    x27 = subtract(x26, TWO)\n    x28 = tojvec(x27)\n    x29 = shift(x25, x28)\n    x30 = paint(x25, x29)\n    x31 = double(x30)\n    x32 = interval(ZERO, x31, ONE)\n    x33 = rbind(contained, x32)\n    x34 = compose(x33, last)\n    x35 = rbind(sfilter, x34)\n    x36 = lbind(rbind, shift)\n    x37 = chain(x15, x35, x36)\n    x38 = fork(combine, x35, x37)\n    x39 = fork(apply, x38, x34)\n"], [1.1, "def solve_17bd76f7(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = fork(multiply, height, width)\n    x2 = decrement(x1)\n    x3 = astuple(x2, THREE)\n    x4 = crop(I, ORIGIN, x3)\n    x5 =477(x4)\n    x6 = vmirror(x5)\n    x7 = hconcat(x5, x6)\n    x8 = astuple(x2, ONE)\n    x9 = crop(x7, DOWN, x8)\n    x10 = vmirror(x9)\n    x11 = papply(pair, x7, x10)\n    x12 = apply(x11, x11)\n    x13 = papply(pair, x7, x12)\n    x14 = apply(x13, x11)\n    x15 = papply(pair, x7, x14)\n    x16 = apply(x15, x11)\n    x17 = papply(pair, x7, x16)\n    x18 = apply(x17, x11)\n    x19 = palette(x18)\n    x20 = lbind(colorcount, x18)\n    x21 = compose(x20, ofcolor)\n    x22 = argmin(x19, x21)\n    x23 = rbind(colorcount, x22)\n    x24 =contained(x23, x18)\n    x25 = ofcolor(x18, x22)\n    x26 = difference(x25, x26)\n    x27 = x21(x26)\n    x28 = asindices(x27)\n    x29 = outbox(x28)\n    x30 = subgrid(x29, x7)\n    x31 = asindices(x30)\n    x32 = box(x31)\n    x33 = hmirror(x32)\n    x34 = vmirror(x32)\n    x35 = dmirror(x33)\n    x36 =b548(x34, x1)\n    x37 = ofcolor(x35, x22)\n    x38 = mapply(x36, x37)\n    x39 = fill(x30, x22, x"], [1.1, "def solve_a109ebf3(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = x18(x21)\n    x23 = argmax(x22, numcolors)\n    x24 = argmin(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape, x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind(multiply"], [1.1, "def solve_d07410d2(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = matcher(x22, x21)\n    x24 = rbind(sfilter, x23)\n    x25 = chain(merge, x24, x22)\n    x26 = lbind(recolor, x18)\n    x27 = lbind(mapply, vfrontier)\n    x28 = rbind(ofcolor, x18)\n    x29 = chain(x26, x27, x28)\n    x30 = fork(paint, x25, x29)\n    x31 = fork(paint, x30, x29)\n    x32 =79mirror(x7)\n    x33 = rbind(\"\"\"\n    x34 = rbind(contained, x33)\n    x35 = compose(x34, last)\n    x36 = sfilter(x32, x35)\n    x37 = sfilter(x32, x36)\n    x38 = fork(either, x32, x37)\n"], [1.1, "def solve_c4d08cfa(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = shape(I)\n    x2 = multiply(THREE, x1)\n    x3 = mostcolor(I)\n    x4 = canvas(x3, x2)\n    x5 = objects(I, F, F, T)\n    x6 = merge(x5)\n    x7 = mostcolor(x6)\n    x8 = first(x5)\n    x9 = matcher(first, x7)\n    x10 = sfilter(x8, x9)\n    x11 = normalize(x10)\n    x12 = delta(x11)\n    x13 = first(x12)\n    x14 = subtract(ONE, x13)\n    x15 = asobject(I)\n    x16 = shape(I)\n    x17 = double(x16)\n    x18 = multiply(x14, x17)\n    x19 = shift(x15, x18)\n    x20 = paint(x4, x19)\n    x21 = objects(x20, F, F, T)\n    x22 = lbind(mapply, dneighbors)\n    x23 = matcher(first, x11)\n    x24 = rbind(sfilter, x23)\n    x25 = chain(x22, delta, x24)\n    x26 = ineighbors(ORIGIN)\n    x27 = apply(double, x26)\n    x28 = rbind(apply, x27)\n    x29 = lbind(lbind, shift)\n    x30 = compose(x28, x29)\n    x31 = lbind(rbind, adjacent)\n    x32 = compose(x31, x25)\n    x33 = fork(extract, x30, x32)\n    x34 = fork(combine, identity, x33)\n    x35 = compose(backdrop, x34)\n    x36 = double(x13)\n    x37 = decrement(x36)\n    x38 = multiply(x37, FOUR)\n    x39 = rbind(shift, x38)\n    x40 = compose(x39, x35)\n    x41 = fork(combine, x35, x40)"], [1.1, "def solve_a98f4174(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = replace(I, ZERO, TWO)\n    x2 = lbind(apply, maximum)\n    x3 = lbind(colorfilter, x1)\n    x4 = chain(x2, x3, color)\n    x5 = fork(paint, identity, x4)\n    x6 = chain(x5, size, x4)\n    x7 = matcher(x6, ONE)\n    x8 = extract(x1, x7)\n    x9 = x6(x8)\n    x10 = objects(I, T, T, T)\n    x11 = rbind(objects, F)\n    x12 = rbind(x11, F)\n    x13 = rbind(x12, T)\n    x14 = chain(x13, x11, x6)\n    x15 = rbind(toobject, x5)\n    x16 = chain(palette, x15, x14)\n    x17 = fork(x16, x16, color)\n    x18 = extract(x10, x17)\n    x19 = lbind(colorcount, I)\n    x20 = argmin(x18, x19)\n    x21 = rbind(colorcount, x20)\n    x22 = chain(x1, x21, palette)\n    x23 = argmin(x10, x22)\n    x24 = rbind(contained, x23)\n    x25 = rbind(rapply, x24)\n    x26 = chain(first, x25, initset)\n    x27 = fork(rapply, x26, identity)\n    x28 = fork(first, x27, last)\n    x29 = matcher(x28, x11)\n    x30 = extract(x10, x29)\n    x31 = x30(I)\n    x32 = first(x31)\n    x33 = last(x31)\n    x34 = ofcolor(x33, x20)\n    x35 = difference(x34, x32)\n    x36 = cover(x31, x35)\n    x37 = apply(initset, x339)\n    x38 = insert(x32,"], [1.1, "def solve_ae5ab87f(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, F, T, T)\n    x6 = rbind(509999\n    5509948495\n    55978959944\n    5899294555\n    5558555554\n    5869995449\n    4854445555\n    5555554999\n    6856555584\n    8585522254\n    5528525884\n    \"\"\"\n    x1 = matcher(identity, x1)\n    x2 = rbind(sfilter, x7)\n    x3 = compose(size, x2)\n    x4 = argmax(x5, x3)\n    x5 = palette(x4)\n    x6 = remove(ZERO, x5)\n    x7 = lbind(colorcount, x4)\n    x8 = argmax(x6, x7)\n    x9 = ulcorner(x4)\n    x10 = contained(x9, x4)\n    x11 = contained(x7, x4)\n    x12 = branch(x10, UNITY, ONE)\n    x13 = branch(x11, NEG_UNITY, ONE)\n    x14 =312(x12, x13)\n    x15 = subgrid(x14, I)\n    x16 = width(x15)\n    x17 = subtract(x16, TWO)\n    x18 = upscale(x15, x17)\n    x19 = height(x15)\n    x20 = divide(x19, x17)\n    x21 = x18(x20)\n    x22 = subtract(x21, TWO)\n    x23 = divide(x22, x17)\n    x24 = repeat(x23, x8)\n    x25 = merge(x24)\n    x26 = cover(x15, x25)\n    x27 = lbind(repeat, x26)\n    x28 = compose(x27, tojvec)\n    x29 = matcher(x28, x211)\n    x30"], [1.1, "def solve_ab6a33f7(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_56f6fe7f(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = trim(I)\n    x2 = tophalf(x1)\n    x3 = lefthalf(x2)\n    x4 = tophalf(x3)\n    x5 = dmirror(x4)\n    x6 = bottomhalf(x1)\n    x7 = lefthalf(x6)\n    x8 = bottomhalf(x7)\n    x9 = height(x9)\n    x10 = width(x9)\n    x11 = hfrontier(ORIGIN)\n    x12 = fill(x3, ZERO, x11)\n    x13 = hfrontier(x10)\n    x14 = fill(x12, ZERO, x13)\n    x15 = compress(x14)\n    x16 = width(x9)\n    x17 = height(x9)\n    x18 = decrement(x17)\n    x19 = tojvec(x18)\n    x20 = connect(ORIGIN, x19)\n    x21 = fill(x10, ZERO, x20)\n    x22 = vconcat(x23, x21)\n    x23 = width(x9)\n    x24 = subtract(x18, x23)\n    x25 = tojvec(x24)\n    x26 = vitate(x25, x24)\n    x27 = height(x9)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = connect(x25, x29)\n    x31 = fill(x10, ZERO, x30)\n    x32 = lbind(16, x26)\n    x33 = tojvec(x32)\n    x34 = v reflectors(x33)\n    x35 = cover(x31, x34)\n    x36 = astuple(x29, x306)\n    x37 = crop(x35, x36, x34)\n    x38 = fork(combine, vfrontier, hfrontier)\n    x39 = compose(x38, tojvec)\n    x40 = lbind(extract, x35)\n    x41 = chain(first,"], [1.1, "def solve_d76107ea(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(both, x29, x30)\n    x34 = fork(both, x31, x32)\n    x35 = fork(both, x33, x34)\n    x36 = compose(x"], [1.1, "def solve_a260c865(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = sizefilter(x1, FOUR)\n    x3 = fork(equality, height, width)\n    x4 = extract(x2, x3)\n    x5 = other(x1, x4)\n    x6 = color(x5)\n    x7 = astuple(ONE, THREE)\n    x8 = canvas(x6, x7)\n    x9 = sizefilter(x1, ONE)\n    x10 = initset(x4)\n    x11 = insert(x6, x9)\n    x12 = insert(x8, x11)\n    x13 = hmirror(x12)\n    x14 = toindices(x13)\n    x15 = lbind(rbind, contained)\n    x16 = lbind(compose, flip)\n    x17 = lbind(matcher, first)\n    x18 = chain(x15, x16, x17)\n    x19 = lbind(contained, TWO)\n    x20 = compose(x19, first)\n    x21 = lbind(sfilter, x17)\n    x22 = compose(x21, x18)\n    x23 = fork(contained, identity, x22)\n    x24 = compose(x17, toindices)\n    x25 = fork(compose, x24, x23)\n    x26 = lbind(sfilter, x12)\n    x27 = compose(x26, x25)\n    x28 = fork( inconsistenciesensor vsplit, identity, x27)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, hmirror)\n    x31 = fork(equality, identity, vmirror)\n    x32 = lbind(index, I)\n    x33 = compose(x32, palette)\n    x34 = remove(x33, x5)\n    x35 =Resourceindex(I, x10)\n    x36 = other(x34, x35)\n    x37 = apply(x36, x32)\n    x38 = astuple(dmirror, cmirror)\n    x"], [1.1, "def solve_0027cdb2(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_904af7cc(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = compose(first, last)\n    x41 = chain(corners, subgrid, x40)\n    x42 = compose(x37"], [1.1, "def solve_def361e3(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, ONE)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)"], [1.1, "def solve_ba6cbe34(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x50 = lbind(ofcolor, I)\n    x51 = chain(x8, x9, x50)\n    x52 = rbind(matcher, vline)\n    x53 = compose(x52, x41)\n    x54 = chain(flip, x53, x41)\n    x55 = sfilter(x6, x49)\n    x56 = sfilter(x6, x540)\n    x57 = height(x556)\n    x58 =6129801(x57)\n    x59 = chain(lowermost, x50, x58)\n    x60 = matcher(x59, ZERO)\n    x61 = objects(I, T, F, F)\n    x62 = sfilter(x61, x60)\n    x63 = argmax(x62, x25)\n    x64 = subgrid(x63, I)\n    x65 = chain( decreased width, decrement,\n    x66 = matcher(x65, x34)\n    x67 = fork(greater, x66, identity)\n    x68 = sfilter(x67, x60)\n    x69 = argmax(x68, x67)\n    x70 = matcher(first, x04)\n    x71 = compose(flip, x70)\n    x72 = sfilter(x41, x70)\n    x73 = argmax(x72, x27)\n    x74 = leastcolor(x73)\n    x75 =,(x74, x110)\n    x76 = ofcolor(x76, x4)\n    x77 = mapply(vfrontier, x76)\n    x78 = mapply(hfrontier, x76)\n    x79 = size"], [1.1, "def solve_72bbec99(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, size)\n    x3 = lowermost(x2)\n    x4 = height(x2)\n    x5 = equality(x4, x3)\n    x6 = branch(x5, lefthalf, tophalf)\n    x7 = branch(x5, righthalf, bottomhalf)\n    x8 = branch(x5, hconcat, vconcat)\n    x9 = x6(I)\n    x10 = x7(I)\n    x11 = index(x9, ORIGIN)\n    x12 = shape(x10)\n    x13 = decrement(x12)\n    x14 = index(x10, x13)\n    x15 = mostcolor(I)\n    x16 = mostcolor(I)\n    x17 = palette(I)\n    x18 = remove(x11, x17)\n    x19 = remove(x14, x18)\n    x20 = remove(x16, x19)\n    x21 = first(x20)\n    x22 = replace(x9, x21, x11)\n    x23 = branch(x5, width, height)\n    x24 = astuple(x23, x22)\n    x25 = crop(x9, ORIGIN, x24)\n    x26 = hmirror(x25)\n    x27 = vconcat(x25, x26)\n    x28 = upscale(x27, TWO)\n    x29 = merge(x28)\n    x30 = palette(x29)\n    x31 = double(x30)\n    x32 = interval(ZERO, x31, ONE)\n    x33 = upscale(x27, x32)\n    x34 =60c8cdece60(x28)\n    x35 = lbind(multiply, x34)\n    x36 = apply(x35, x30)\n    x37 = lbind(shift, x29)\n    x38 = mapply(x37, x36)\n    x39 = fill(x22, x21, x38)\n    x40 = replace(x39"], [1.1, "def solve_ebe908fa(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_0112343a(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = lbind(matcher, first)\n    x2 = compose(x1, mostcolor)\n    x3 = fork(sfilter, identity, x2)\n    x4 = fork(difference, identity, x3)\n    x5 = lbind(rbind, upscale)\n    x6 = rbind(x5, toindices)\n    x7 = compose(x6, x4)\n    x8 = fork(intersection, identity, x7)\n    x9 = compose(size, x8)\n    x10 = valmax(x1, x9)\n    x11 = matcher(x9, x10)\n    x12 =flip(x11, ONE)\n    x13 = sfilter(x1, x12)\n    x14 = order(x13, identity)\n    x15 = apply(x5, x14)\n    x16 = ofcolor(x15, ONE)\n    x17 = ofcolor(x15, TWO)\n    x18 = apply(x11, x17)\n    x19 = apply(x15, x18)\n    x20 = ofcolor(x19, ONE)\n    x21 = rbind(manhattan, DOWN)\n    x22 = chain(x19, x21, initset)\n    x23 = fork(add, identity, x22)\n    x24 = chain(initset, x18, x23)\n    x25 = fork(insert, identity, x24)\n    x26 = lbind(rbind, manhattan)\n    x27 = compose(x26, initset)\n    x28 = fork(argmin, x25, x27)\n    x29 = fork(gravitate, initset, x28)\n    x30 = compose(crement, x29)\n    x31 = fork(add, identity, x30)\n    x32 = fork(gravitate, initset, x33)\n    x33 = compose(crement, x32)\n    x34 = fork(add, identity, x33)\n    x35 = fork(gravitate, toindices, x34)\n    x36 = fork(add, identity, x35)\n    x37"], [1.1, "def solve_9eb377d3(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_e1604aef(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = matcher(first, ZERO)\n    x2 =044(I, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = compose(normalize, x3)\n    x5 = apply(x4, x2)\n    x6 = astuple(NEG_TWO, NEG_TWO)\n    x7 = shift(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = rbind(toobject, I)\n    x11 = rbind(shoot,ORIGIN)\n    x12 = compose(x10, x11)\n    x13 = rbind(colorcount, SIX)\n    x14 = chain(x13, double, x12)\n    x15 = fork(equality, x14, identity)\n    x16 = chain(numcolors, x15, fgpartition)\n    x17 = matcher(x16, FIVE)\n    x18 = extract(x9, x17)\n    x19 = neighbors(ORIGIN)\n    x20 = insert(ORIGIN, x19)\n    x21 = rbind(shoot, ZERO_BY_TWO)\n    x22 = rbind(shift, x21)\n    x23 = pair(x20, x22)\n    x24 = chain(x entire, x23, last)\n    x25 = rbind(colorcount, SEVEN)\n    x26 = matcher(x25, EIGHT)\n    x27 = fork(668, x26, identity)\n    x28 = chain(x22, x27, first)\n    x29 = lbind(fork, outbox)\n    x30 = rbind(x29, x28)\n    x31 = lbind(fork, recolor)\n    x32 = lbind(x31, x30)\n    x33 = rbind(shift, x29)\n    x34 = lbind(chain, x33)\n    x35 = lbind(x34, x28)\n    x36 = lbind(rbind, mapply)\n    x37 = compose(x35, x36)"], [1.1, "def solve_994c0c1a(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(re"], [1.1, "def solve_c4ce205e(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shape(I)\n    x5 = maximum(x4)\n    x6 = canvas(ZERO, x5)\n    x7 = asindices(x6)\n    x8 = normalize(x7)\n    x9 = to\n    74dd113061\n    x10 = paint(x6, x9)\n    x11 = height(x10)\n    x12 = width(x10)\n    x13 = fgpartition(x10)\n    x14 = merge(x13)\n    x15 = width(x10)\n    x16 = height(x14)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = lbind(multiply, x5)\n    x19 = apply(x18, x17)\n    x20 = lbind(multiply, x4)\n    x21 = apply(x20, x17)\n    x22 = lbind(interval, ZERO)\n    x23 = rbind(x22, ONE)\n    x24 = lbind(interra, x2)\n    x25 = rbind(x24, ONE)\n    x26 = lbind(colorfilter, x36)\n    x27 = chain(x23, x25, x26)\n    x28 = lbind(78, x multiply)\n    x29 = chain(x28, x27, last)\n    x30 = fork(recolor, first, x29)\n    x31 = astuple(SIX, THREE)\n    x32 = astuple(FOUR, EIGHT)\n    x33 = astuple(ONE, DOWN)\n    x34 = initset(x33)\n    x35 = insert(x34, x32)\n    x36 = insert(x30, x35)\n    x37 = apply(x32, x36)\n    x38 = papply(recolor, x37)\n    x39 = lbind(shift, x8)\n    x40 = mapply(x39, x38)\n    O = paint(x10,"], [1.1, "def solve_caa8cb0f(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = asobject(I)\n    x6 = matcher(first, x4)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x5, x7)\n    x9 = hperiod(x8)\n    x10 = vperiod(x8)\n    x11 = width(I)\n    x12 = width(x8)\n    x13 = subtract(x11, x12)\n    x14 = add(x13, TWO)\n    x15 = height(I)\n    x16 = height(x8)\n    x17 = subtract(x15, x16)\n    x18 = add(x17, TWO)\n    x19 = rbind(multiply, x9)\n    x20 = invert(x14)\n    x21 = interval(x20, x14, ONE)\n    x22 = apply(x19, x21)\n    x23 = rbind(multiply, x10)\n    x24 = invert(x18)\n    x25 = interval(x24, x18, ONE)\n    x26 = apply(x23, x25)\n    x27 = product(x26, x22)\n    x28 = lbind(shift, x8)\n    x29 = mapply(x28, x27)\n    x30 = index(I, ORIGIN)\n    x31 = equality(x30, x4)\n    x32 = flip(x31)\n    x33 = asindices(I)\n    x34 = urcorner(x33)\n    x35 = index(I, x34)\n    x36 = equality(x35, x4)\n    x37 = flip(x36)\n    x38 = asindices(I)\n    x39 = lrcorner(x38)\n    x40 = index(I, x39)\n    x41 = equality(x40, x4)\n    x42 = flip(x41)\n    x43 = asindices("], [1.1, "def solve_4a9e9729(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = astuple(SIX, TWO)\n    x2 = size(x1)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, hmirror, vmirror)\n    x5 = x4(I)\n    x6 = canvas(ZERO, x1)\n    x7 = partition(x6)\n    x8 = sizefilter(x7, ONE)\n    x9 = merge(x8)\n    x10 = palette(x9)\n    x11 = totuple(x10)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = switch(x6, x12, x13)\n    x15 = ofcolor(x14, x12)\n    x16 = inbox(x15)\n    x17 = recolor(ZERO, x16)\n    x18 = double(x2)\n    x19 = add(x18, THREE)\n    x20 = initset(x19)\n    x21 = recolor(x12, x20)\n    x22 =434(x21, x15)\n    x23 = product(x17, x22)\n    x24 = mapply(toindices, x17)\n    x25 = mapply(x24, x23)\n    x26 = flip(x25)\n    x27 = dmirror(x26)\n    x28 = toobject(x27, x14)\n    x29 = hperiod(x28)\n    x30 = shift(x25, x29)\n    x31 = toobject(x27, x14)\n    x32 = vperiod(x31)\n    x33 = hperiod(x32)\n    x34 = neighbors(ORIGIN)\n    x35 = mapply(neighbors, x34)\n    x36 = astuple(x32, x33)\n    x37 = rbind(shift, x36)\n    x38 = combine(x30, x37)\n    x39 = fill(x6, x12, x38)\n    x40 = shift(x31, x39)\n    x41 = paint(x39, x40)"], [1.1, "def solve_35afca6b(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = objects(I, T, T, T)\n    x2 =389ca(I)\n    x3 = subgrid(x2, I)\n    x4 = height(x3)\n    x5 = width(x3)\n    x6 = vsplit(x3, x4)\n    x7 = neighbors(ORIGIN)\n    x8 = toindices(x7)\n    x9 = compose(hupscale, x8)\n    x10 = power(x9, TWO)\n    x11 = shape(x3)\n    x12 = maximum(x11)\n    x13 = lbind(replace, x12)\n    x14 =0000000000000000(x\n    x15 = lbind(downscale, x10)\n    x16 = compose(x14, x15)\n    x17 = lbind(power, equality)\n    x18 = chain(x17, x13, x16)\n    x19 = lbind(rapply, x8)\n    x20 = compose(initset, x18)\n    x21 = chain(first, x19, x20)\n    x22 = compose(flip, x21)\n    x23 = fork(22, x18, x22)\n    x24 = fork(combine, x21, x23)\n    x25 = compose(x4, x24)\n    x26 = palette(x2)\n    x27 = palette(x10)\n    x28 = intersection(x26, x27)\n    x29 = argmax(x28, x25)\n    x30 = urcorner(x29)\n    x31 = invert(x30)\n    x32 = shift(x29, x31)\n    x33 = apply(x25, x32)\n    x34 = shift(x32, x33)\n    x35 = ofcolor(x30, xpal)\n    x36 = ofcolor(x30, x66666666\n    x37 = lbind(index, x30)\n    x38 = compose(x37, urcorner)\n    x39 = cover(x30, x33)\n    x40 = x38(x39)\n    x41 = ofcolor("], [1.1, "def solve_06304daa(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 =173(I)\n    x2 = tophalf(x1)\n    x3 = lefthalf(x2)\n    x4 = tophalf(x3)\n    x5 = righthalf(x4)\n    x6 = bottomhalf(x4)\n    x7 = lefthalf(x6)\n    x8 = bottomhalf(x6)\n    x9 = righthalf(x8)\n    x10 = index(I, ORIGIN)\n    x11 = width(I)\n    x12 = decrement(x11)\n    x13 = tojvec(x12)\n    x14 = index(I, x13)\n    x15 = height(I)\n    x16 = decrement(x15)\n    x17 = toivec(x16)\n    x18 = index(I, x17)\n    x19 = shape(I)\n    x20 = decrement(x19)\n    x21 = tojvec(x20)\n    x22 = index(I, x21)\n    x23 = compress(I)\n    x24 = asindices(x23)\n    x25 = box(x24)\n    x26 = corners(x24)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, x23)\n    x29 = color(x28)\n    x30 = palette(x2)\n    x31 = other(x30, x29)\n    x32 = replace(x3, x31, x\n    x33 = x31(x2)\n    x34 = tojvec(x33)\n    x35 = shift(x34, x36)\n    x36 = combine(x28, x35)\n    x37 = rbind(contained, x36)\n    x38 = compose(x37, first)\n    x39 = sfilter(x19, x38)\n    x40 = difference(x19, x39)\n    x41 = fill(I, x31, x40)\n    x42 = compose(size, first)\n    x43 = objects(x41, T, F, F)\n    x44 = rbind"], [1.1, "def solve_98b670ae(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = lefthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = righthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(I)\n    x18 = halve(x17)\n    x19 = canvas(x16, x18)\n    x20 = matcher(first, x16)\n    x21 = compose(flip, x20)\n    x22 = rbind(sfilter, x21)\n    x23 = compose(x22, asobject)\n    x24 = x24(x2)\n    x25 = x24(x6)\n    x26 = x23(x24)\n    x27 = x25(x6)\n    x28 = shape(x27)\n    x29 = canvas(x24, x28)\n    x30 = paint(x29, x27)\n    x31 = rbind(shift, x38)\n    x32 = compose(x31, dneighbors)\n    x33 = initset(x32)\n    x34 = recolor(x16, x33)\n    x35 = dmirror(x30)\n    x36 = paint(x35, x34)\n    x37 = combine(x32, x36)\n    x38 = fork(combine, vfrontier, hfrontier)\n    x39 = compose(x38, x37)\n    x40 = fork(combine, x43, x39)\n    x41 = apply(x40, x33)\n    x42 = mapply(x37, x41)\n"], [1.1, "def solve_47bcfd76(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_717d29a0(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_016bda61(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, ulcorner)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, dmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, ulcorner)\n    x13 = rbind(shift, NEG_UNITY)\n    x14 = compose(x13, vmirror)\n    x15 = rbind(shift, NEG_UNITY)\n    x16 = compose(x15, hmirror)\n    x17 = rbind(shift, DOWN_LEFT)\n    x18 = compose(x17, hmirror)\n    x19 = rbind(shift, UP_RIGHT)\n    x20 = compose(x19, vmirror)\n    x21 = rbind(shift, RIGHT)\n    x22 = compose(x21, hmirror)\n    x23 = rbind(shift, DOWN)\n    x24 =compose(x23, x8)\n    x25 = fork(compose, x14, x20)\n    x26 = fork(compose, x24, x12)\n    x27 = compose(x26, x5)\n    x28 = rbind(shift, LEFT)\n    x29 = rbind(shift, RIGHT)\n    x30 = compose(x28, x9)\n    x31 = compose(x29, x7)\n    x32 = fork(compose, x30, x31)\n    x33 = fork(compose, x32, x5)\n    x34 = compose(x33, x5)\n    x35 = fork(contained, RIGHT, last)\n    x36 = fork(contained, contained, x35)\n    x"], [1.1, "def solve_236abd13(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = chain(positive, size, dedupe)\n    x2 = x1(I)\n    x3 = x1(x2)\n    x4 = height(x3)\n    x5 = width(x3)\n    x6 = partition(x3)\n    x7 = ofcolor(x3, ONE)\n    x8 = ofcolor(x3, FOUR)\n    x9 = center(x7)\n    x10 = delta(x7)\n    x11 = center(x8)\n    x12 = subtract(x10, x11)\n    x13 = multiply(x12, x4)\n    x14 = power(x13, TWO)\n    x15 = toindices(x4)\n    x16 = lbind(toindices, x15)\n    x17 = chain(x16, x15, outbox)\n    x18 = lbind(power, outbox)\n    x19 = compose(x18, x17)\n    x20 = initset(x19)\n    x21 = cover(x3, x20)\n    x22 = chain(size, x18, outbox)\n    x23 = argmax(x6, x22)\n    x24 = objects(x14, T, F, F)\n    x25 = color(x23)\n    x26 = center(x23)\n    x27 = invert(x25)\n    x28 = shift(x26, x27)\n    x29 = fork(combine, vfrontier, hfrontier)\n    x30 = mapply(x29, x28)\n    x31 = fill(x21, x25, x30)\n    x32 = ofcolor(x31, x1)\n    x33 = lbind(contained, x16)\n    x34 = rbind(contained, x33)\n    x35 = compose(x34, last)\n    x36 = sfilter(x32, x35)\n    x37 = sizefilter(x36, ONE)\n    x38 = fork(equality, identity, last)\n    x39 = fork(multiply, height, width)\n    x40 = chain(x38, x39,"], [1.1, "def solve_09dafe25(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x1, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x"], [1.1, "def solve_35c650fe(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = GMTcolors(I)\n    x3 = compose(flip, x2)\n    x4 = extract(x1, x3)\n    x5 =1989(x4)\n    x6 =1755499991\n    7857767553\n    634 neighbors\n    5548957955\n    5579755589\n    4729655744\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = chain(flip, x1, dmirror)\n    x3 = fork(both, x2, x3)\n    x4 = extract(x1, x3)\n    x5 = compose(flip, x4)\n    x6 = sfilter(x5, x3)\n    x7 = compose(hmirror, merge)\n    x8 = fork(equality, identity, x7)\n    x9 = sfilter(x6, x8)\n    x10 = compose(vmirror, dmirror)\n    x11 = fork(equality, identity, x10)\n    x12 = sfilter(x9, x11)\n    x13 = compose(leftmost, merge)\n    x14 = compose(rightmost, merge)\n    x15 = fork(equality, identity, x14)\n    x16 = compose(leftmost, invert)\n    x17 = compose(rightmost, invert)\n    x18 = fork(equality, identity, x17)\n    x19 = fork(both, x13, x18)\n    x20 = sfilter(x6, x19)\n    x21 = compose(last,283)\n    x22 = sfilter(x6, x21)\n    x23 = RIGHT(x20, x22)\n    x24 = mapply(dneighbors, x23)\n    x25 = mapply(ineighbors, x24)\n    x26 = shape(x25)\n    x27 = canvas(ZERO, x26)\n    x28 = ofcolor(x25, ONE)\n    x29 = ofcolor(x25, TWO)\n    x30 = rbind(multiply, x27)\n"], [1.1, "def solve_d06297a7(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = double(TEN)\n    x2 = interval(ZERO, x1, ONE)\n    x3 = connect(ORIGIN, DOWN)\n    x4 = connect(ORIGIN, ZERO_BY_TWO)\n    x5 = combine(x3, x4)\n    x6 = astuple(NEG_TWO, TWO)\n    x7 = lbind(multiply, x6)\n    x8 = toivec(NEG_TWO)\n    x9 = apply(x7, x2)\n    x10 = rbind(subtract, TWO_BY_ZERO)\n    x11 = fork(ofcolor, identity, leastcolor)\n    x12 = chain(x10, center, x11)\n    x13 = rbind(mapply, x9)\n    x14 = lbind(lbind, shift)\n    x15 = lbind(shift, x5)\n    x16 = compose(x15, x12)\n    x17 = chain(x13, x14, x16)\n    x18 = lbind(recolor, FIVE)\n    x19 = compose(x18, x17)\n    x20 = fork(paint, identity, x19)\n    x21 = compose(rot180, x20)\n    x22 = fork(ofcolor, x21, leastcolor)\n    x23 = compose(center, x22)\n    x24 = fork(subtract, x23, x12)\n    x25 = fork(shift, x17, x24)\n    x26 = lbind(recolor, FIVE)\n    x27 = rbind(shift, x8)\n    x28 = chain(x26, x27, x25)\n    x29 = fork(paint, x21, x28)\n    x30 = compose(rot180, x29)\n    x31 = rbind(ofcolor, FIVE)\n    x32 = compose(x31, x30)\n    x33 = leastcolor(I)\n    x34 = ofcolor(I, x33)\n    x35 = mostcolor(I)\n    x36 = shape(I)\n    x37 = canvas(x35, x"], [1.1, "def solve_f03a7f2e(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = fill(x6, TWO, x3)\n    x8 =757(999, UNITY)\n    x9 = ofcolor(x8, ONE)\n    x10 = lowermost(x9)\n    x11 = width(x9)\n    x12 = rbind(greater, x10)\n    x13 = compose(x12, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = lbind(recolor, ZERO)\n    x16 = lbind(ofcolor, x8)\n    x17 = chain(x15, x14, x16)\n    x18 = fork(paint, identity, x17)\n    x19 = chain(x9, first, x18)\n    x20 = difference(x1, x19)\n    x21 = rbind(greater, x10)\n    x22 = compose(x21, first)\n    x23 = rbind(sfilter, x22)\n    x24 = chain(x20, x23, x18)\n    x25 = rbind(greater, x10)\n    x26 = compose(x25, first)\n    x27 = rbind(sfilter, x26)\n    x28 = chain(x20, x27, x18)\n    x29 = rbind(gravitate, x2)\n    x30 = compose(x29, invert)\n    x31 = fork(add, identity, x30)\n    x32 = fork(insert, identity, x31)\n    x33 = fork(insert, identity, x32)\n    x34 = size(x1)\n    x35 = decrement(x34)\n    x36 = power(x33, x35)\n    x37 = compose(x33, x28)\n    x38 = power(x37, x36)\n    x39 = astuple("], [1.1, "def solve_363f59d0(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = index(I, ORIGIN)\n    x2 = objects(I, T, F, F)\n    x3 = fork(multiply, height, width)\n    x4 = fork(equality, size, x3)\n    x5 = chain(positive, decrement, size)\n    x6 = rbind(greater, ONE)\n    x7 = chain(x6, x5, shape)\n    x8 = sfilter(x2, x7)\n    x9 = fork(both, x4, x8)\n    x10 = sfilter(x2, x4)\n    x11 = fork(multiply, first, last)\n    x12 = chain(decrement, decrement, x11)\n    x13 = fork(greater, x12, x9)\n    x14 = sfilter(x2, x13)\n    x15 = palette(I)\n    x16 = remove(ZERO, x15)\n    x17 = lbind(colorcount, I)\n    x18 = argmin(x16, x17)\n    x19 = other(x16, x18)\n    x20 = color(I)\n    x21 = colorfilter(x2, x20)\n    x22 = outbox(x21)\n    x23 = difference(x22, x21)\n    x24 = fill(I, x19, x23)\n    x25 = argmin(x2, width)\n    x26 = other(x211, x25)\n    x27 =787(x26)\n    x28 = mostcolor(x27)\n    x29 = fill(x24, x28, x27)\n    x30 = normalize(x27)\n    x31 = ulcorner(x30)\n    x32 = width(x10)\n    x33 = x30(x12)\n    x34 = invert(x33)\n    x35 = tojvec(x34)\n    x36 = height(x10)\n    x37 = shift(x32, x36)\n    x38 = combine(x31, x37)\n    x39 = paint(x29, x38)\n    O = x20(x"], [1.1, "def solve_0a5f7455(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = shape(x12)\n    x15 = canvas(ZERO, x14)\n    x16 = lbind(multiply, x13)\n    x17 = apply(x16, x15)\n    x18 = rbind(contained, x17)\n    x19 = sfilter(x1, x18)\n    x20 = lbind(mapply, x12)\n    x21 = rbind(occurrences, x3)\n    x22 = chain(x20, x21, asindices)\n    x23 = lbind(mapply, x22)\n    x24 = chain(invert, x23, x26)\n    x25 = fork(shift, x22, x24)\n    x26 = compose(x5, x25)\n    x27 = palette(I)\n    x28 = mapply(x26, x27)\n    x29 = palette(I)\n    x30 = remove(x28, x29)\n    x31 = lbind(colorcount, x18)\n    x32 = argmax(x30, x31)\n    x33 = rbind(contained, x37)\n    x34 = compose(x33, first)\n    x35 = sfilter(x12, x34)\n    x36 = output(x35, x32)\n    x37 =021(x36)\n    x38 = argmin(x35, x27)\n    x39 = cover(x38, x39)\n    O ="], [1.1, "def solve_771b4948(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = palette(I)\n    x3 = compose(maximum, shape)\n    x4 = lbind(apply, x3)\n    x5 = lbind(colorfilter, x1)\n    x6 = chain(maximum, x4, x5)\n    x7 = matcher(x6, ONE)\n    x8 = extract(x2, x7)\n    x9 = lbind(ofcolor, I)\n    x10 = compose(backdrop, x9)\n    x11 = fork(equality, x9, x10)\n    x12 = extract(x2, x11)\n    x13 = ofcolor(I, x12)\n    x14 = ofcolor(I, x8)\n    x15 = rbind(manhattan, x13)\n    x16 = compose(x15, initset)\n    x17 = argmin(x14, x16)\n    x18 = ulcorner(x14)\n    x19 = contained(x18, x14)\n    x20 = shoot(x17, UNITY)\n    x21 = shoot(x17, NEG_UNITY)\n    x22 = combine(x20, x21)\n    x23 = shoot(x17, UP_RIGHT)\n    x24 = shoot(x17, DOWN_LEFT)\n    x25 = combine(x23, x24)\n    x26 = branch(x19, x22, x25)\n    x27 = asindices(I)\n    x28 = outbox(x13)\n    x29 = intersection(x27, x28)\n    x30 = intersection(x29, x26)\n    x31 = initset(x17)\n    x32 = rbind(manhattan, x31)\n    x33 = compose(x32, initset)\n    x34 = argmin(x30, x33)\n    x35 = height(x13)\n    x36 = height(I)\n    x37 = equality(x35, x36)\n    x38 = leftmost(x14)\n    x39 = leftmost(x13)\n    x40 = greater("], [1.1, "def solve_6a2ff814(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, T)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = rbind(colorcount, x9)\n    x11 = argmax(x5, x10)\n    x12 = other(x5, x11)\n    x13 = color(x12)\n    x14 = subgrid(x11, I)\n    x15 = lbind(insert, DOWN)\n    x16 = compose(lrcorner, asindices)\n    x17 = chain(x15, initset, x16)\n    x18 = fork(add, identity, x17)\n    x19 = compose(x14, x18)\n    x20 = fork(insert, x19, x6)\n    x21 = compose(x15, x20)\n    x22 = fork(subtract, x21, x18)\n    x23 = compose(x17, x22)\n    x24 = fork(subtract, x23, x16)\n    x25 = fork(insert, x24, x6)\n    x26 = compose(x21, x25)\n    x27 = fork(subtract, x26, x25)\n    x28 = rapply(x27, x7)\n    x29 = merge(x28)\n    x30 = cover(x14, x29)\n    x31 = argmax(x30, x29)\n    x32 = paint(x31, x3)\n    x33 = replace(x32, x9, replace(x30, x10)\n    x34 =2c2cce22(x31)\n    x35 = recolor(x34, x32)\n    x36 = lbind(shift, x31)\n    x37 = mapply(x36, x"], [1.1, "def solve_74a1ece0(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_34c13905(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_e30a35ae(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = d23(I)\n    x6 = add(TWO, x5)\n    x7 = tojvec(x6)\n    x8 = increment(x14)\n    x9 = canvas(x4, x8)\n    x10 = asobject(I)\n    x11 = shift(x10, x7)\n    x12 = palette(x11)\n    x13 = lbind(chain, size)\n    x14 = rbind(x13, toindices)\n    x15 = lbind(lbind, contained)\n    x16 = lbind(sfilter, x11)\n    x17 = compose(x15, x16)\n    x18 = chain(x17, x9, normalize)\n    x19 = lbind(colorcount, I)\n    x20 = compose(x19, palette)\n    x21 = matcher(x20, TWO)\n    x22 = extract(x12, x21)\n    x23 = colorcount(I, x22)\n    x24 =count(x10, ZERO)\n    x25 = positive(x24)\n    x26 = branch(x25, x22, x25)\n    x27 = ofcolor(I, x22)\n    x28 =314187(x27)\n    x29 = ofcolor(I, TWO)\n    x30 = recolor(x22, x29)\n    x31 = leftmost(x30)\n    x32 = lowermost(x30)\n    x33 = matcher(first, ZERO)\n    x34 = rightmost(x30)\n    x35 = matcher(first, TWO)\n    x36 = leftmost(x30)\n    x37 = rightmost(x30)\n    x38 = paint(x32, x31)\n    x39 = paint(x38, x34)\n    x40 = greater(x39, x26)\n    x41 = branch(x40, x33, x35)\n    x42 = leftmost"], [1.1, "def solve_42df03fe(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x24 = astuple(x10, cmirror)\n    x25 = astuple(x25, x24)\n    x26 = compose(x50, merge)\n    x27 = compose(x50, even)\n    x28 = fork(subtract, x26, x27)\n    x29 = fork(multiply, first, x28)\n    x30 = output(I, x11)\n    x31 = lbind(ofcolor, x30)\n    x32 = compose(x11, x30)\n    x33 = fork( difference, x29, x32)\n    x34 = rbind(toobject, I)\n    x35 = compose(x34, x30)\n    x36 = apply(x35, x3)\n    x37 = astuple(x31, x presents)\n    x38 = astuple(x37, x disagree)\n    x39 = initset(x38)\n    x40 = insert(x39, x"], [1.1, "def solve_35823430(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =548colors(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = toindices(x3)\n    x5 = asindices(I)\n    x6 = corners(x5)\n    x7 = lbind(rbind, manhattan)\n    x8 = toindices(x3)\n    x9 = combine(x6, x8)\n    x10 = fill(I, TEN, x9)\n    x11 = fork(manhattan, identity, initset)\n    x12 = fork(add, identity, x11)\n    x13 = height(x10)\n    x14 = width(x10)\n    x15 =multiply(x14, x13)\n    x16 = increment(x15)\n    x17 = width(x5)\n    x18 = divide(x17, x12)\n    x19 = increment(x18)\n    x20 = height(x3)\n    x21 = subtract(x20, x16)\n    x22 = divide(x21, x12)\n    x23 = increment(x22)\n    x24 = repeat(x10, x21)\n    x25 = subtract(x23, x24)\n    x26 =split(x25, x8)\n    x27 = lbind(intersection, x19)\n    x28 = chain(positive, size, x27)\n    x29 = matcher(x28, ZERO)\n    x30 = partition(x26)\n    x31 = sfilter(x30, x29)\n    x32 =68b19color(I)\n    x33 = compose(flip, x31)\n    x34 = sfilter(x31, x33)\n    x35 = dmirror(x14)\n    x36 = mpapply(recolor, x35, x34)\n    x37 = paint(x10, x36)\n    x38 = toindices(x3)\n    x39 = apply(x37, x38)\n    x40 = fork(add, last, first)\n    x41 =1995(x83)"], [1.1, "def solve_3cac6b51(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_8a10fdcc(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, size)\n    x3 = subgrid(x2, I)\n    x4 = normalize(x3)\n    x5 = replace(x3, ZERO, x4)\n    x6 = toindices(x4)\n    x7 = lbind(toindices, x6)\n    x8 = x7(x1)\n    x9 =3322696666602986756666\n    x10 = rbind(greater, ONE)\n    x11 = chain(x10, size, dedupe)\n    x12 = sfilter(x6, x11)\n    x13 = center(x12)\n    x14 = color(x12)\n    x15 = fill(x5, x14, x13)\n    x16 = objects(x15, T, F, T)\n    x17 = colorfilter(x16, x12)\n    x18 = rbind(toobject, x17)\n    x19 = chain(x18, color, x17)\n    x20 = rbind(colorcount, x14)\n    x21 = chain(x20, usgrid, x19)\n    x22 = fork(equality, x21, x19)\n    x23 = sfilter(x17, x22)\n    x24 = floindices(x23)\n    x25 = rbind(contained, x24)\n    x26 = lbind(index, x24)\n    x27 = compose(x25, x26)\n    x28 = fork(3355, x27, x26)\n    x29 = chain(x24, x27, x28)\n    x30 = fork(recolor, x29, x23)\n    x31 = mapply(x30, x23)\n    x32 = paint(x15, x31)\n    x33 = objects(x32, T, F, T)\n    x34 = rbind(adjacent, x2)\n    x35 = rbind(adjacent, x2)\n    x36 = fork(both, x34, x35)\n    x37 = sfilter(x33, x36"], [1.1, "def solve_13c9cced(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = compose(x5, color)\n    x7 = compose(double, x4)\n    x8 = lbind(prapply, manhattan)\n    x9 = fork(x8, identity, identity)\n    x10 = lbind(remove, ZERO)\n    x11 = compose(x10, x9)\n    x12 = rbind(branch, NEG_TWO)\n    x13 = fork(x12, positive, decrement)\n    x14 = chain(x13, minimum, x11)\n    x15 = fork(add, x14, x7)\n    x16 = compose(x15, x6)\n    x17 = compose(invert, x16)\n    x18 = order(x2, x17)\n    x19 = rbind(argmin, centerofmass)\n    x20 = compose(initset, vmirror)\n    x21 = fork(insert, dmirror, x20)\n    x22 = fork(insert, cmirror, x21)\n    x23 = fork(insert, hmirror, x22)\n    x24 = compose(x19, x23)\n    x25 = apply(x24, x18)\n    x26 = size(x2)\n    x27 = apply(size, x2)\n    x28 = contained(ONE, x27)\n    x29 = increment(x26)\n    x30 = branch(x28, x26, x29)\n    x31 = double(x30)\n    x32 = decrement(x31)\n    x33 = apply(normalize, x25)\n    x34 = interval(ZERO, x30, ONE)\n    x35 = pair(x34, x34)\n    x36 = mpapply(shift, x33, x35)\n    x37 = astuple(x32, x32)\n    x38 = canvas(x1, x37)"], [1.1, "def solve_4a897ca3(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = height(I)\n    x9 = astuple(x8, ONE)\n    x10 = canvas(THREE, x9)\n    x11 = hconcat(x10, I)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = identity(DOWN)\n    x17 = connect(ORIGIN, x15)\n    x18 = fill(x11, THREE, x17)\n    x19 = identity(x13)\n    x20 = identity(x12)\n    x21 = identity(x12)\n    x22 = identity(F)\n    x23 = identity(I)\n    x24 = compose(first, first)\n    x25 = chain(first, last, x24)\n    x26 = compose(first, first)\n    x27 = chain(last, last, x26)\n    x28 = chain(first, first, first)\n    x29 = chain(first, last, last)\n    x30 = chain(first, first, last)\n    x31 = chain(last, first, last)\n    x32 = compose(decrement, x25)\n    x33 = compose(decrement, x27)\n    x34 = fork(astuple, x32, x33)\n    x35 = compose(decrement, x27)\n    x36 = fork(multiply, x30, x35)\n    x37 = fork(add, x29, x36)\n    x38 = compose(decrement, x28)\n    x39 = fork(multiply, x30, x38)\n    x40 = fork(add, x29, x39)\n    x41 = fork"], [1.1, "def solve_2ad55902(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = argmin(I, ORIGIN)\n    x2 =56528x1, ZERO)\n    x3 = flip(x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    x5 = lbind(righthalf, I)\n    x6 = palette(I)\n    x7 = other(x6, ZERO)\n    x8 = rbind(colorcount, x7)\n    x9 = argmin(x2, x8)\n    x10 = rbind(colorcount, x7)\n    x11 = width(I)\n    x12 = decrement(x11)\n    x13 = tojvec(x12)\n    x14 = add(x13, UNITY)\n    x15 = multiply(x14, x12)\n    x16 = canvas(x7, x15)\n    x17 = ofcolor(I, x9)\n    x18 =(x17, x16)\n    x19 = rbind(contained, x18)\n    x20 = compose(x19, last)\n    x21 = sfilter(x17, x20)\n    x22 = compose(first, last)\n    x23 = fork( constructorform, first, last)\n    x24 = fork(equality, x22, x23)\n    x25 = sfilter(x21, x24)\n    x26 = undeman(x25)\n    O = replace(x16, x9, x26)\n    return O"], [1.1, "def solve_8a2862c0(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = partition(I)\n    x2 = product(x1, x1)\n    x3 = fork(equality, corners, toindices)\n    x4 = extract(x2, x3)\n    x5 = subgrid(x4, I)\n    x6 = objects(x5, T, F, F)\n    x7 =66916\n    \"\"\"\n    x8 = hsplit(x5, THREE)\n    x9 = merge(x8)\n    x10 = extract(x1, x9)\n    x11 = paint(x5, x10)\n    x12 = ofcolor(x11, ZERO)\n    x13 = first(x12)\n    x14 = ulcorner(x xx13)\n    x15 =68b1906(x14)\n    x16 = shift(x13, x15)\n    O = replace(x11, ZERO, FIVE)\n    return O"], [1.1, "def solve_698782f1(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = matcher(height, ONE)\n    x5 = fork(equality, toindices, x4)\n    x6 = sfilter(x3, x5)\n    x7 = sizefilter(x6, x2)\n    x8 = fork(adjacent, first, last)\n    x9 = compose(flip, x8)\n    x10 = extract(x7, x9)\n    x11 = remove(x10, x7)\n    x12 = merge(x11)\n    x13 = width(x12)\n    x14 = totuple(x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 =2266(x15, x16)\n    x18 =88(x17, x12)\n    x19 = shape(x10)\n    x20 = canvas(ZERO, x19)\n    x21 =_hconcat(x18, x20)\n    x22 = objects(x21, color, recovered)\n    x23 = first(x22)\n    x24 = apply(ulcorner, x23)\n    x25 = normalize(x23)\n    x26 = matcher(first, ZERO)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x24, x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    O = paint(I, x30)\n    return O"], [1.1, "def solve_633b7a08(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = rot180(I)\n    x2 = rbind(sfilter, hline)\n    x3 = compose(size, dedupe)\n    x4 = matcher(x3, ONE)\n    x5 = rbind(sfilter, x4)\n    x6 = chain( size, x5, dmirror)\n    x7 =\n    x8 = x6(I)\n    x9 = objects(x7, T, F, F)\n    x10 = argmax(x9, size)\n    x11 = color(x10)\n    x12 = x2(x10)\n    x13 = objects(x7, T, F, F)\n    x14 = extensions(x13, x12)\n    x15 = rbind(shoot, DOWN)\n    x16 = leftmost(x15)\n    x17 = rbind(mapply, x16)\n    x18 = lbind(rbind, manhattan)\n    x19 = chain(x18, initset, x17)\n    x20 = fork(combine, x17, x19)\n    x21 = compose(x12, x20)\n    x22 = fork(shift, x21, ulcorner)\n    x23 = compose(x3, x22)\n    x24 = fork(intersection, x23, size)\n    x25 = fork(recolor, x23, x24)\n    x26 = compose(x3, x22)\n    x27 = fork(mapply, x26, x25)\n    x28 = interval(SIX, FOUR, ONE)\n    x29 = mapply(x27, x28)\n    x30 = mapply(x22, x29)\n    x31 = paint(x1, x30)\n    O = paint(x31, x304)\n    return O"], [1.1, "def solve_9730b7f2(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =233c669\n    2667526606\n    6362062184\n    3609967069\n    8680902806\n    6860166707\n    2116086365\n    7766369577\n    0769843602\n    \"\"\"\n    x2 = frontiers(I)\n    x3 = merge(x2)\n    x4 = difference(x5, x3)\n    x5 = mapply(toindices, x4)\n    x6 = objects(I, T, F, F)\n    x7 =x6(x5)\n    x8 = shift(x7, ulcorner)\n    x9 = mapply(toindices, x6)\n    x10 = mapply(toindices, x9)\n    x11 = fill(I, FOUR, x5)\n    x12 = fill(x11, TWO, x10)\n    x13 = rbind(a61f2674\n    x14 = rbind(toobject, I)\n    x15 = chain(x13, x14, delta)\n    x16 = x15(x6)\n    x17 = fill(x12, TWO, x16)\n    x18 = color(x2)\n    x19 = fill(x17, x18, x20)\n    x20 = objects(x19, T, F, F)\n    x21 = apply(toindices, x20)\n    x22 = apply(x21, x12)\n    x23 = normalize(x22)\n    x24 = lbind(shift, x23)\n    x25 = mapply(x24, x2)\n    O = paint(x19, x25)\n    return O"], [1.1, "def solve_3fbdd3ab(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    O = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.1, "def solve_a5295d96(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 =80(I)\n    x2 = objects(I, T, F, T)\n    x3 = sizefilter(x2, ONE)\n    x4 = difference(x2, x3)\n    x5 = apply(color, x4)\n    x6 = rbind(contained, x5)\n    x7 = compose(x6, color)\n    x8 = sfilter(x3, x7)\n    x9 = lbind(colorfilter, x4)\n    x10 = chain(first, x9, color)\n    x11 = fork(gravitate, identity, x10)\n    x12 = fork(shift, identity, x11)\n    x13 = mapply(x12, x8)\n    O = paint(I, x13)\n    return O"], [1.1, "def solve_1a82dcaa(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = lbind(sfilter, x12)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = chain(size, x3, little)\n    x5 = fork(repeat, x3, x4)\n    x6 = compose(dmirror, x5)\n    x7 = fork(equality, identity, x6)\n    x8 =istine(I)\n    x9 = sfilter(x8, x7)\n    x10 = argmax(x9, x5)\n    x11 =002(x10, identity)\n    x12 = objects(x11, T, F, F)\n    x13 = merge(x12)\n    x14 = color(x13)\n    x15 = leftmost(x10)\n    x16 = interval(ONE, x15, ONE)\n    x17 = rbind(contained, x16)\n    x18 = compose(x17, last)\n    x19 = sfilter(x15, x18)\n    x20 = increment(x15)\n    x21 = rbind(contained, x20)\n    x22 = compose(x21, last)\n    x23 = fork(subtract, first, x22)\n    x24 = chain(increment, x23, last)\n    x25 = fork(greater, x24, identity)\n    x26 = compose(x25, last)\n    x27 = rbind(sfilter, x26)\n    x28 = chain(merge, x27, x24)\n    x29 = apply(x28, x19)\n    x30 = sfilter(x29, x5)\n    x31 = compose(vfrontier, x24)\n    x32 = x31(x30)\n    x33 = lbind(mapply, x36)\n    x34 = rbind(sfilter, x33)\n    x35 = compose(x34, x24)\n    x36 = pair(x32, x35)\n    x37 = mapply(x36, x22)\n    O = underfill(x11, x paint, x37)\n    return O"], [1.1, "def solve_56b32cb2(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = compose(first, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = compose(last, last)\n    x8 = totuple(x2)\n    x9 = apply(x7, x8)\n    x10 = mostcommon(x9)\n    x11 = compose(first, last)\n    x12 = matcher(x11, x6)\n    x13 = sfilter(x2, x12)\n    x14 = compose(last, last)\n    x15 = matcher(x14, x10)\n    x16 = sfilter(x2, x15)\n    x17 =88bind(astuple, x13)\n    x18 = initset(x17)\n    x19 = matcher(first, x6)\n    x20 = compose(flip, x19)\n    x21 = mfilter(x18, x20)\n    O = fill(I, TWO, x21)\n    return O"], [1.1, "def solve_8a32ee85(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 =2217a3322\n    x2 =711213578\n    x3 =4421417dc433765\n    5224774785    7995ad74\n    1863443112\n    3207563528\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =22ofcolor(I, x1)\n    x3 =444(TWO, x2)\n    x4 = neighbors(UNITY)\n    x5 = recolor(x1, x4)\n    x6 = asindices(I)\n    x7 = outbox(x6)\n    x8 = lbind(shift, x7)\n    x9 = mapply(x8, x5)\n    x10 = combine(x4, x9)\n    O = paint(I, x10)\n    return O"], [1.1, "def solve_2263002b(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, T, F, T)\n    x13 = colorfilter(x12, x11)\n    x14 = rbind(manhattan, x8)\n    x15 = argmin(x13, x14)\n    x16 = ofcolor(x15, x10)\n    x17 = hmirror(x16)\n    x18 = invert(x17)\n    x19 =18(TWO)\n    x20 = shift(x18, x19)\n    x21 = lbind(shift, x20)\n    x22 = rbind( toobject, x25)\n    x23 = mostcolor(x22)\n    x24 = lbind(shift, x25)\n    x25 = rbind(toobject, x6)\n    x26 = mapply(x24, x21)\n    x27 = combine(x23, x26)\n    x28 = rbind(contained, x27)\n    x29 = apply(x28, x27)\n    x30 =gravitate(x29, x28)\n    x31 = rbind(add, x29)\n    x32 = initset(x15)\n    x33 = rbind(add, x32)\n    x34 = fork(subtract, x33, x31)\n    x35 = fork(shift, identity, x34)\n    x36 = mapply(x35, x30)\n    O = paint(x15, x36)\n    return O"], [1.1, "def solve_4245c791(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =225(I)\n    x2 = objects(x1, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = apply(ulcorner, x2)\n    x5 = normalize(x3)\n    x6 = lbind(shift, x5)\n    x7 = mapply(x6, x4)\n    O = paint(x1, x7)\n    return O"], [1.1, "def solve_2e959a4a(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 =91 thing(I, T, F, T)\n    x2 = matcher(size, TWO)\n    x3 = mfilter(x1, x2)\n    x4 = matcher(size, ONE)\n    x5 = mfilter(x1, x4)\n    x6 = matcher(size, FOUR)\n    x7 = mfilter(x1, x6)\n    x8 = fill(I, THREE, x3)\n    x9 = fill(x8, TWO, x5)\n    O = fill(x9, ONE, x7)\n    return O"], [1.1, "def solve_8115fd37(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = totuple(x3)\n    x5 = apply(color, x4)\n    x6 = mostcommon(x5)\n    x7 =422(x4, identity)\n    x8 = lbind(matcher, x7)\n    x9 = compose(x8, color)\n    x10 = fork(sfilter, identity, x9)\n    x11 = size(x1)\n    x12 =objects(I)\n    x13 = rbind(colorcount, x6)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x6)\n    x16 = matcher(x15, x14)\n    x17 = mfilter(x12, x16)\n    x18 =82(I, x17)\n    x19 = replace(x18, x6, x1)\n    O = fill(x19, ZERO, x17)\n    return O"], [1.1, "def solve_20395068(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = combine(x13, x15)\n    x17 = shape(I)\n    x18 = maximum(x17)\n    x19 = lbind(shift, x17)\n    x20 = mapply(x19, x16)\n    x21 = paint(I, x20)\n    x22 = toindices(x5)\n    x23 = center(x22)\n    x24 = initset(x23)\n    x25 = insert(x24, x1)\n    x26 = insert(x35, x25)\n    x27 = dmirror(x26)\n    x28 = lbind(shift, x27)\n    x29 = apply(x28, x24)\n    x30 =393(x21)\n    x31 = rbind(rapply, x30)\n    x32 = apply(x31, x22)\n    x33 = mapply(x32, x29)\n    O = fill(x21, x9, x33)\n    return O"], [1.1, "def solve_f60ebd4b(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    O =19985 to86(I):\n    return O"], [1.1, "def solve_eed37371(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(normalize, x3)\n    x5 = mapply(toindices, x4)\n    x6 = difference(x5, x4)\n    x7 = fill(I, EIGHT, x6)\n    x8 = index(x7, ORIGIN)\n    x9 = colorcount(x7, ZERO)\n    x10 = positive(x9)\n    x11 = branch(x10, dmirror, identity)\n    x12 = x11(x7)\n    x13 = objects(x12, T, F, T)\n    x14 =454(x13)\n    x15 =111(x14)\n    x16 = replace(x15, FIVE, ZERO)\n    O = x11(x16)\n    return O"], [1.1, "def solve_9c95dec5(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = ofcolor(I, TWO)\n    x3 = argmax(x1, size)\n    x4 = subgrid(x2, I)\n    x5 = normalize(x3)\n    x6 = replace(x4, TWO, ZERO)\n    x7 = lbind(insert, x6)\n    x8 = chain(x7, ulcorner, last)\n    x9 = x8(x5)\n    x10 = lbind(recolor11\n    \n    x11 = rbind(ofcolor, TWO)\n    x12 = compose(x10, x11)\n    x13 = fork(paint, identity, x12)\n    x14 = height(x5)\n    x15 = vsplit(x5, x14)\n    x16 = mapply(x6, x15)\n    x17 = ofcolor(x16, TWO)\n    x18 = compose(x3, x17)\n    x19 = x18(x5)\n    x20 = gravitate(x19, x17)\n    O = fill(x9, ZERO, x20)\n    return O"], [1.1, "def solve_ce11ddca(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =445(I)\n    x2 =1168838699464(x1, ONE)\n    x3 = leastcolor(x2)\n    x4 = ofcolor(I, x3)\n    x5 = fill(I, ZERO, x4)\n    x6 = ofcolor(I, x4)\n    x7 = box(x6)\n    x8 = fill(x5, x3, x7)\n    x9 = mapply(delta, x8)\n    O = fill(x9, x4, xExample output:\n    8888888044\n    8649488800\n    1248042948\n    80146180036\n    8848856486\n    36683484853\n    1326880488\n    8684486648\n    8883248536\n    4874225538\n    \"\"\"\n    x1 = fill(x8, x3, x2)\n    O = fill(x1, x4, x3)\n    return O"], [1.1, "def solve_531d3962(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 =9999(I, T31)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(x3, ONE)\n    x5 = branch(x4, dmirror, identity)\n    x6 = branch(x4, height, width)\n    x7 = x6(I)\n    x8 = astuple(ONE, x7)\n    x9 = x5(I)\n    x10 = crop(x9, ORIGIN, x8)\n    x11 = apply(dedupe, x10)\n    O = x5(x11)\n    return O"], [1.1, "def solve_a23eff2b(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =03733(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = partition(I)\n    x7 = fork(multiply, height, width)\n    x8 = fork(equality, size, x7)\n    x9 = sfilter(x6, x8)\n    x10 = argmax(x9, size)\n    x11 = difference(x5, x10)\n    x12 = apply(initset, x11)\n    x13 = rbind(hmatching, x10)\n    x14 = rbind(vmatching, x10)\n    x15 = fork(either, x13, x14)\n    x16 = sfilter(x12, x15)\n    x17 = rbind(gravitate, x10)\n    x18 = fork(add, center, x17)\n    x19 = fork(connect, center, x18)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x16)\n    O = paint(I, x21)\n    return O"], [1.1, "def solve_a10739a5(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = lbind(canvas, ZERO)\n    x2 = lbind(occurrences, I)\n    x3 = compose(x1, x2)\n    x4 = fork(apply, x3, leastcolor)\n    x5 = compose(maximum, x4)\n    x6 = compose(subtract, x5)\n    x7 = fork(astuple, x6, identity)\n    x8 = apply(x7, I)\n    x9 = maximum(x8)\n    x10 = dmirror(I)\n    x11 = x9(x10)\n    x12 = dmirror(x11)\n    x13 = x7(x12)\n    x14 = width(x11)\n    x15 = astuple(x14, x13)\n    x16 = repeat(x15, ONE)\n    x17 = output:\n    171\n    516\n    \"\"\"\n    x1 = x9(I)\n    x2 = fork(subtract, last, last)\n    x3 = compose(first, x2)\n    x4 = extract(x1, x3)\n    x5 = x4(x1)\n    x6 = last(x5)\n    x7 = compose(first, last)\n    x8 = difference(x5, x6)\n    x9 = file(x8, x7)\n    x10 = matcher(first, x6)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x9, x11)\n    O = fill(x6, TWO, x12)\n    return O"], [1.1, "def solve_0e025c9a(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 =33177(I,33177)\n    x2 = equality(x1, ZERO)\n    x3 = branch(x2, UP, RIGHT)\n    x4 = branch(x3, DOWN, RIGHT)\n    x5 = multiply(x4, x4)\n    x6 = add(x5, TWO)\n    O = canvas(ZERO, x5)\n    return O"], [1.1, "def solve_859b4d13(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = leftmost(x2)\n    x5 = width(I)\n    x6 = interval(x4, x5, TWO)\n    x7 = apply(tojvec, x6)\n    x8 = astuple(x interval, x4)\n    x9 = lbind(canvas, ZERO)\n    x10 = lbind(occurrences, I)\n    x11 = lbind(lbind, shift)\n    x12 = compose(x11, last)\n    x13 = lbind(recolor, x3)\n    x14 =decrement(x5)\n    x15 =853000(x14, x12)\n    x16 = paint(I, x15)\n    x17 = interval(x5, x16, ONE)\n    x18 = ofcolor(x16, x3)\n    x19 = rbind(ofcolor, x3)\n    x20 = compose(x19, center)\n    x21 = fork(recolor, x20, last)\n    x22 = mapply(x21, x17)\n    O = paint(x16, x22)\n    return O"], [1.1, "def solve_8611488f(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =4468117(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [1.1, "def solve_887ebcd9(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = height(I)\n    x5 = width(I)\n    x6 = matcher(925, x4)\n    x7 =16(I)\n    x8 = extract(x3, x6)\n    x9 = partition(x8)\n    x10 = sizefilter(x9, ONE)\n    x11 = lbind(greater, ONE)\n    x12 = compose(x11, size)\n    x13 = argmin(x10, x12)\n    x14 = palette(x13)\n    x15 = remove(x8, x14)\n    x16 = other(x15, x13)\n    x17 = palette(x13)\n    x18 = vmirror(x17)\n    x19 = lbind(shift, x18)\n    x20 = mapply(x19, x17)\n    x21 = ofcolor(x13, x16)\n    x22 = ofcolor(x18, x16)\n    x23 = combine(x21, x22)\n    x24 = fill(x13, ZERO, x23)\n    x25 = difference(x19, x23)\n    x26 = objects(x24, F, T, T)\n    x27 = rbind(adjacent, x26)\n    x28 = rbind(adjacent, x25)\n    x29 = extract(x27, x28)\n    x30 = initset(x29)\n    x31 = recolor(x16, x30)\n    x32 = combine(x27, x31)\n    x33 = fork(combine, vfrontier, hfrontier)\n    x34 = mapply(x33, x32)\n    O = fill(x24, x20, x34)\n    return O"], [1.1, "def solve_0a37c001(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = sizefilter(x1, ONE)\n    x3 = compose(neighbors, center)\n    x4 = fork(recolor, color, x3)\n    x5 = compose(decrement,472)\n    x6 = apply(x4, x2)\n    x7 = order(x6, identity)\n    x8 = compose(last, last)\n    x9 = compose(8042, x8)\n    x10 = apply(x9, x7)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = sfilter(x10, x11)\n    x14 = sfilter(x12, x7)\n    x15 = merge(x13)\n    x16 =9999512(x15)\n    x17 = mapply(x4, x13)\n    x18 = mapply(x4, x14)\n    x19 = paint(I, x13)\n    x20 = paint(x19, x18)\n    O = paint(x20, x17)\n    return O"], [1.1, "def solve_a854a2b4(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 =94a9b722(x2)\n    x4 = toindices(x3)\n    x5 = compose(double, halve)\n    x6 = fork(equality, identity, x5)\n    x7 = compose(x6, last)\n    x8 = sfilter(x4, x7)\n    x9 = fill(I, x1, x8)\n    O = replace(x9, FIVE, ZERO)\n    return O"], [1.1, "def solve_65464a30(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 =184(I)\n    x2 =754(I)\n    x3 = urcorner(x2)\n    x4 = shoot(x3, UP_RIGHT)\n    x5 =87(x4)\n    x6 = branch(x1, x5, x4)\n    O = crop(I, x3, x6)\n    return O"], [1.1, "def solve_cc1490c8(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 =0000000(I)\n    x2 =0000000(I)\n    x3 =0000000(I)\n    x4 = neighbors(ORIGIN)\n    x5 = mapply(neighbors, x4)\n    x6 = lbind(shift, x1)\n    x7 = apply(x6, x5)\n    x8 = lbind(recolor, TWO)\n    x9 = mapply(x8, x7)\n    O = paint(I, x9)\n    return O"], [1.1, "def solve_b0e08ea9(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 =279(I)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = asindices(x4)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = intersection(x5, x6)\n    x8 = lrcorner(x7)\n    x9 = shoot(x8, DOWN_LEFT)\n    x10 = intersection(x7, x9)\n    x11 = combine(x7, x10)\n    x12 = llcorner(x11)\n    x13 = remove(x12, x11)\n    x14 = lbind(shift, x13)\n    x15 = height(x12)\n    x16 = lbind(multiply, x15)\n    x17 = chain(x14, width, x16)\n    x18 = fgpartition(x4)\n    x19 = sizefilter(x18, FOUR)\n    x20 = fork(equality, toindices, x19)\n    x21 = sfilter(x19, x20)\n    x22 = mapply(x17, x21)\n    x23 = paint(x4, x22)\n    x24 = quotecdecrement(x5)\n    x25 =O = crop(x23, x24, x20)\n    O = x3(x25)\n    return O"], [1.1, "def solve_29fdfe4d(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = trim(I)\n    x2 = tophalf(x1)\n    x3 = lefthalf(x2)\n    x4 = tophalf(x3)\n    x5 = righthalf(x3)\n    x6 = bottomhalf(x3)\n    x7 = lefthalf(x5)\n    x8 = bottomhalf(x5)\n    x9 = righthalf(x6)\n    x10 = index(I, ORIGIN)\n    x11 = width(I)\n    x12 = decrement(x11)\n    x13 = tojvec(x12)\n    x14 = index(I, x13)\n    x15 = height(I)\n    x16 = decrement(x15)\n    x17 = toivec(x16)\n    x18 = index(I, x17)\n    x19 = shape(I)\n    x20 = decrement(x19)\n    x21 = index(I, x20)\n    x22 = compress(I)\n    x23 = asindices(x22)\n    x24 = box(x23)\n    x25 = fill(x22, x24, x23)\n    x26 =000000(x25)\n    O = replace(x26, x18, x20)\n    return O"], [1.1, "def solve_c5ddb86f(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = SEVEN(I)\n    x2 =matcher(first, ZERO)\n    x3 = rbind(s16, THREE)\n    x4 = compose(x2, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = lbind(toobject, x5)\n    x7 = chain(x1, x5, x6)\n    x8 = astuple(numcolors, ONE)\n    x9 = x7(x8)\n    x10 = decrement(x9)\n    x11 =1(x10)\n    x12 = subtract(x11, x10)\n    x13 = recolor(ZERO, x112)\n    x14 = paint(I, x13)\n    x15 = hsplit(x14, THREE)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = vmirror(x17)\n    x19 = hconcat(x16, x18)\n    x20 = hmirror(x19)\n    x21 = vconcat(x19, x20)\n    x22 = vconcat(x21, x22)\n    O = hmirror(x22)\n    return O"], [1.1, "def solve_cd005206(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =445(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = fork(multiply, height, width)\n    x7 = halve(x5)\n    x8 = lefthalf(I)\n    x9 = righthalf(I)\n    x10 = connect(x8, x9)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x10, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, vsplit, hsplit)\n    x16 = x15(I, TWO)\n    x17 = first(x16)\n    x18 = last(x16)\n    x19 = palette(x17)\n    x20 = palette(x18)\n    x21 = intersection(x19, x20)\n    x22 = first(x21)\n    x23 = shape(x17)\n    x24 = canvas(x22, x23)\n    x25 = ofcolor(x17, x22)\n    x26 = ofcolor(x18, x22)\n    x27 = intersection(x25, x26)\n    O = fill(x24, TWO, x27)\n    return O"], [1.1, "def solve_7fc9d2a4(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = color(x6)\n    x8 = lbind(recolor, NEG_ONE)\n    x9 = rbind(ofcolor, x7)\n    x10 = chain(x8, x9, backdrop)\n    x11 = fork(paint, identity, x10)\n    x12 =1111(x11, x5)\n    x13 = dmirror(x12)\n    x14 = ulcorner(x2)\n    x15 = lrcorner(x2)\n    x16 = shape(x12)\n    x17 = add(x16, UP_RIGHT)\n    x18 = add(x14, DOWN_LEFT)\n    x19 = shift(x13, x17)\n    x20 = x15(x19)\n    x21 = paint(x12, x20)\n    O = paint(x21, x3)\n    return O"], [1.1, "def solve_0ae8b0f1(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = ONE)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(x3, ONE)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = objects(x6, T, F, F)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x5(x10)\n    return O"], [1.1, "def solve_484b562b(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 =173(I)\n    x2 = frontiers(I)\n    x3 = merge(x2)\n    x4 = difference(x1, x3)\n    x5 = mostcolor(x4)\n    x6 = objects(I, T, F, F)\n    x7 = color(x3)\n    x8 = matcher(color, x7)\n    x9 = matcher(color, x5)\n    x10 = fork(either, x8, x9)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x6, x11)\n    x13 = merge(x12)\n    x14 = palette(x13)\n    x15 = lbind(mfilter, x12)\n    x16 = lbind(matcher,color)\n    x17 = compose(x15, x16)\n    x18 = apply(x17, x14)\n    x19 = fork(either, vline, hline)\n    x20 = lbind(prapply, connect)\n    x21 = fork(x20, identity, identity)\n    x22 = compose(x21, toindices)\n    x23 = rbind(sfilter, x19)\n    x24 = chain(merge, x23, x22)\n    x25 = fork(recolor, color, x24)\n    x26 = mapply(x25, x18)\n    x27 = paint(I, x26)\n    O = paint(x27, x3)\n    return O"], [1.1, "def solve_0a2d7acf(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = Turtle\n    5555558555\n    5558558555\n    5015585569\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, dmirror, identity)\n    x3 = x2(I)\n    x4 = objects(x3, T, F, T)\n    x5 = argmin(x4, leftmost)\n    x6 = argmax(x4, leftmost)\n    x7 = color(x5)\n    x8 = color(x6)\n    x9 = leftmost(x5)\n    x10 = leftmost(x6)\n    x11 = subtract(x10, x9)\n    x12 = double(x11)\n    x13 = multiply(THREE, TEN)\n    x14 = interval(x9, x13, x12)\n    x15 = interval(x10, x13, x12)\n    x16 = compose(vfrontier, tojvec)\n    x17 = mapply(x16, x14)\n    x18 = mapply(x16, x15)\n    x19 = recolor(x7, x17)\n    x20 = recolor(x8, x18)\n    x21 = combine(x19, x20)\n    x22 = paint(x3, x21)\n    O = x2(x22)\n    return O"], [1.1, "def solve_58fe9c06(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = matcher(ineighbors, UNITY)\n    x3 = extract(x1, x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(x3, x6)\n    x8 = objects(x7, F, T, T)\n    x9 = argmin(x8, size)\n    x10 = normalize(x9)\n    x11 = toindices(x10)\n    x12 = increment(x5)\n    x13 = increment(x12)\n    x14 = shift(x11, x13)\n    x15 = shift(x11, x14)\n    x16 =100(x15)\n    x17 = ulcorner(x10)\n    x18 = urcorner(x15)\n    x19 = shoot(x17, NEG_UNITY)\n    x20 = shoot(x18, DOWN_LEFT)\n    x21 = combine(x19, x20)\n    x22 = combine(x18, x21)\n    x23 = x5(x22)\n    O = fill(x6, x4, x23)\n    return O"], [1.1, "def solve_670c1eae(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = width(I)\n    x5 = astuple(x4, x4)\n    x6 = canvas(x3, x5)\n    x7 = interval(ONE,SIX, ONE)\n    x8 = invert(TEN)\n    x9 = interval(x8, TEN, ONE)\n    x10 = product(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = apply(x11, x10)\n    x14 = apply(x12, x10)\n    x15 = divide(x4, x4)\n    x16 = width(I)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = height(I)\n    x19 = interval(ZERO, x18, ONE)\n    x20 = pair(x19, x14)\n    x21 = apply(x11, x20)\n    x22 = apply(box, x21)\n    x23 = pair(x21, x22)\n    x24 = mapply(to fill, x23, THREE)\n    O = fill(x24, FOUR, x2)\n    return O"], [1.1, "def solve_20156c2f(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = rot270(I)\n    x2 = hconcat(I, x1)\n    x3 = mapply(d4469remove, x2)\n    x4 =O = rot90(x2)\n    x5 =180(x4)\n    x6 = astuple(x5, x4)\n    x7 = x8(I)\n    x8 = x9(x7)\n    x9 = rot270(x8)\n    x10 = hconcat(x9, x1)\n    x11 = hconcat(x10, x8)\n    O = vconcat(x9, x11)\n    return O"], [1.1, "def solve_16f7ed9d(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = rbind(Sfilter, ORIG2)\n    x2 = compose(dmirror, x1)\n    x3 = chain(size, dedupe, x2)\n    x4 = matcher(x3, ONE)\n    x5 = compose(71,042)\n    x6 = difference(x1, x5)\n    x7 = astuple(ONE, THREE)\n    x8 = astuple(TWO, FOUR)\n    x9 = initset(x7)\n    x10 = insert(x8, x9)\n    x11 = insert(x4, x10)\n    x12 = insert(x501, x11)\n    x13 = lbind(ofcolor, I)\n    x14 = lbind(mapply, neighbors)\n    x15 = chain(x14, x13, x141)\n    x16 = fork(difference, x15, identity)\n    x17 = chain(size, x13, x16)\n    x18 = matcher(x17, ZERO)\n    x19 = lbind(extract, x5)\n    x20 = chain(x19, x13, x141)\n    x21 = compose(last, x20)\n    x22 = fork(subtract, x21, x15)\n    x23 = chain(initset, x500, x22)\n    x24 = fork(rapply, x23, identity)\n    x25 = compose(first, x24)\n    x26 = compose(x5, x22)\n    x27 = fork(intersection, x26, x25)\n    x28 = chain(x19, x24, x27)\n    x29 = compose(x5, x27)\n    x30 = fork(intersection, x29, x28)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(I, x32)\n    O = trim(x33)\n    return O"], [1.1, "def solve_8b3368f7(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(673ef23, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"]], "3490cc26": [[0.08173484697705038, "def solve_ca6a9b87(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.08173484697705038, "def solve_7fa510ce(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = frontiers(I)\n    x6 = colorfilter(x5, x4)\n    x7 = size(x6)\n    x8 = positive(x7)\n    x9 = branch(x8, dmirror, identity)\n    x10 = ofcolor(I, x4)\n    x11 = ofcolor(I, TWO)\n    x12 = ofcolor(I, ONE)\n    x13 = rbind(gravitate, x10)\n    x14 = compose(x13, initset)\n    x15 = fork(add, identity, x14)\n    x16 = fork(connect, identity, x15)\n    x17 = shape(I)\n    x18 = maximum(x17)\n    x19 = lbind(multiply, x18)\n    x20 = lbind(gravitate, x10)\n    x21 = chain(x19, sign, x20)\n    x22 = compose(x21, initset)\n    x23 = fork(add, identity, x22)\n    x24 = fork(connect, identity, x23)\n    x25 = mapply(x16, x11)\n    x26 = mapply(x24, x12)\n    x27 = fill(I, TWO, x25)\n    O = fill(x27, ONE, x26)\n    return O"], [0.08173484697705038, "def solve_30668c56(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.08173484697705038, "def solve_f1c7bbbd(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.08173484697705038, "def solve_54436cb3(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_e71f7902(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_b54d0461(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.08173484697705038, "def solve_02888a76(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, T)\n    x3 = rbind(objects, F)\n    x4 = rbind(x3, F)\n    x5 = rbind(x4, T)\n    x6 = lbind(canvas, x1)\n    x7 = compose(x6, shape)\n    x8 = fork(paint, x7, normalize)\n    x9 = compose(x5, x8)\n    x10 = fork(colorfilter, x9, color)\n    x11 = rbind(shift, RIGHT)\n    x12 = rbind(argmax, rightmost)\n    x13 = compose(x12, x10)\n    x14 = fork(remove, x13, x10)\n    x15 = chain(x11, merge, x14)\n    x16 = rbind(argmax, rightmost)\n    x17 = compose(x16, x10)\n    x18 = fork(combine, x17, x15)\n    x19 = fork(shift, x18, ulcorner)\n    x20 = merge(x2)\n    x21 = fill(I, x1, x20)\n    x22 = mapply(x19, x2)\n    O = paint(x21, x22)\n    return O"], [0.08173484697705038, "def solve_c83601ce(I):\n    O = replace(I, FOUR, NEG_ONE)\n    return O"], [0.08173484697705038, "def solve_ecdc6445(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.08173484697705038, "def solve_16daba00(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.08173484697705038, "def solve_e12b3625(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_f878706b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08173484697705038, "def solve_0d7588db(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, TWO, x3)\n    return O"], [0.08173484697705038, "def solve_5447fdea(I):\n    x1 = asindices(I)\n    x2 = shape(I)\n    x3 = halve(x2)\n    x4 = connect(ORIGIN, x3)\n    x5 = height(x4)\n    x6 = halve(x5)\n    x7 = width(x4)\n    x8 = halve(x7)\n    x9 = tojvec(x8)\n    x10 = height(x4)\n    x11 = decrement(x10)\n    x12 = lbind(astuple, x11)\n    x13 = rbind(shoot, x9)\n    x14 = compose(x12, x13)\n    x15 = fork(combine, x14, last)\n    x16 = apply(x15, x4)\n    O = fill(I, ZERO, x16)\n    return O"], [0.08173484697705038, "def solve_7e0960ce(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = lbind(greater, THREE)\n    x4 = compose(x3, size)\n    x5 = sfilter(x2, x4)\n    x6 = mapply(toindices, x5)\n    x7 = fill(I, x1, x6)\n    x8 = objects(x7, T, F, T)\n    x9 = fork(recolor, color, backdrop)\n    x10 = mapply(x9, x8)\n    O = paint(x7, x10)\n    return O"], [0.08173484697705038, "def solve_830db236(I):\n    x1 = objects(I, T, F, T)\n    x2 = lbind(sfilter, x1)\n    x3 = compose(size, x2)\n    x4 = x3(vline)\n    x5 = x3(hline)\n    x6 = greater(x4, x5)\n    x7 = branch(x6, lefthalf, tophalf)\n    x8 = branch(x6, righthalf, bottomhalf)\n    x9 = branch(x6, hconcat, vconcat)\n    x10 = x7(I)\n    x11 = x8(I)\n    x12 = index(x10, ORIGIN)\n    x13 = shape(x11)\n    x14 = decrement(x13)\n    x15 = index(x11, x14)\n    x16 = replace(x10, THREE, x12)\n    x17 = replace(x11, THREE, x15)\n    O = x9(x16, x17)\n    return O"], [0.08173484697705038, "def solve_11c7f307(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.08173484697705038, "def solve_3c888f24(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.08173484697705038, "def solve_ba1de0a8(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.08173484697705038, "def solve_b4252d0c(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.08173484697705038, "def solve_6f480d87(I):\n    x1 = asindices(I)\n    x2 = toobject(x1, I)\n    x3 = mostcolor(x2)\n    x4 = objects(I, T, F, F)\n    x5 = colorfilter(x4, x3)\n    x6 = fork(bordering, toindices, outbox)\n    x7 = compose(flip, x6)\n    x8 = mfilter(x5, x7)\n    O = fill(I, x3, x8)\n    return O"], [0.08173484697705038, "def solve_2c080de7(I):\n    x1 = frontiers(I)\n    x2 = matcher(color, ZERO)\n    x3 = extract(x1, x2)\n    x4 = shape(x3)\n    x5 = canvas(ZERO, x4)\n    x6 = hconcat(x5, x3)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.08173484697705038, "def solve_2ee9819a(I):\n    x1 = objects(I, T, F, T)\n    x2 = mapply(delta, x1)\n    O = fill(I, SEVEN, x2)\n    return O"], [0.08173484697705038, "def solve_21c5f80a(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.08173484697705038, "def solve_4ad0f610(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = chain(palette, trim, x2)\n    x4 = lbind(contained, THREE)\n    x5 = compose(x4, x3)\n    x6 = fork(add, height, width)\n    x7 = compose(decrement, x6)\n    x8 = fork(equality, size, x7)\n    x9 = mfilter(x1, x5)\n    x10 = mfilter(x1, x8)\n    x11 = replace(I, THREE, SIX)\n    x12 = fill(x11, TWO, x9)\n    O = fill(x12, ONE, x10)\n    return O"], [0.08173484697705038, "def solve_bdbc6c83(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = lbind(recolor, EIGHT)\n    x4 = rbind(ofcolor, x1)\n    x5 = chain(x3, backdrop, x4)\n    x6 = fork(paint, identity, x5)\n    x7 = height(I)\n    x8 = vsplit(I, x7)\n    x9 = mapply(x6, x8)\n    x10 = ofcolor(x9, EIGHT)\n    x11 = dmirror(I)\n    x12 = width(I)\n    x13 = vsplit(x11, x12)\n    x14 = mapply(x6, x13)\n    x15 = dmirror(x14)\n    x16 = ofcolor(x15, EIGHT)\n    x17 = combine(x10, x16)\n    x18 = difference(x17, x2)\n    O = fill(I, EIGHT, x18)\n    return O"], [0.08173484697705038, "def solve_52bcda1e(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = prapply(connect, x2, x2)\n    x4 = rbind(greater, ONE)\n    x5 = compose(x4, size)\n    x6 = sfilter(x3, x5)\n    x7 = fork(either, vline, hline)\n    x8 = mfilter(x6, x7)\n    x9 = fill(I, THREE, x8)\n    x10 = leastcolor(I)\n    O = fill(x9, x10, x2)\n    return O"], [0.08173484697705038, "def solve_14ef5834(I):\n    x1 = shape(I)\n    x2 = canvas(ZERO, x1)\n    x3 = hconcat(I, x2)\n    x4 = objects(x3, F, F, T)\n    x5 = matcher(color, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = sizefilter(x7, ONE)\n    x9 = merge(x8)\n    O = fill(I, ONE, x9)\n    return O"], [0.08173484697705038, "def solve_676acfd6(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = chain(palette, trim, x2)\n    x4 = lbind(contained, THREE)\n    x5 = compose(x4, x3)\n    x6 = fork(add, height, width)\n    x7 = compose(decrement, x6)\n    x8 = fork(equality, size, x7)\n    x9 = mfilter(x1, x5)\n    x10 = mfilter(x1, x8)\n    x11 = replace(I, THREE, SIX)\n    x12 = fill(x11, TWO, x9)\n    O = fill(x12, ONE, x10)\n    return O"], [0.08173484697705038, "def solve_0bea6a70(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.08318632736744225, "def solve_f2764e95(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_0287bf80(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_d786afa4(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_0ddb2b7b(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_4ea083dd(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_57386026(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_ee2265d2(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_14ef9b6a(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_118e7952(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_49bd86c3(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_113147be(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.08318632736744225, "def solve_0289ef55(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.09156826806047147, "def solve_4266a79b(I):\n    x1 = rot270(I)\n    x2 = fork(equality, toindices, rot90)\n    x3 = rot180(x1)\n    x4 = rot270(x1)\n    x5 = either(x2, x3)\n    x6 = branch(x5, rbind, ONE)\n    x7 = branch(x5, lefthalf, tophalf)\n    x8 = branch(x5, righthalf, bottomhalf)\n    x9 = branch(x5, hconcat, vconcat)\n    x10 = x7(I)\n    x11 = x8(I)\n    x12 = index(x10, ORIGIN)\n    x13 = shape(x11)\n    x14 = decrement(x13)\n    x15 = index(x11, x14)\n    x16 = replace(x10, THREE, x12)\n    x17 = replace(x11, THREE, x15)\n    O = x9(x16, x17)\n    return O"], [0.09977289344345569, "def solve_0f1b5b9b(I):\n    x1 = switch(I, EIGHT, TWO)\n    x2 = switch(x1, THREE, FOUR)\n    x3 = switch(x2,9, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.10317109898049412, "def solve_cf5f3182(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = astuple(x1, ONE)\n    x8 = astuple(ONE, x2)\n    x9 = decrement(x1)\n    x10 = decrement(x2)\n    x11 = toivec(x10)\n    x12 = tojvec(x9)\n    x13 = crop(I, x11, x8)\n    x14 = crop(I, x12, x7)\n    x15 = asobject(x14)\n    x16 = asobject(x13)\n    x17 = vperiod(x15)\n    x98 = hperiod(x16)\n    x99 = astuple(x17, x98)\n    x10 = lbind(multiply, x10)\n    x11 = neighbors(ORIGIN)\n    x12 = mapply(neighbors, x11)\n    x13 = apply(x10, x12)\n    x14 = lbind(shift, x6)\n    x15 = mapply(x14, x13)\n    O = paint(I, x15)\n    return O"], [0.1179007840135784, "def solve_5dfb35cb(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = rbind(multiply, THREE)\n    x6 = rbind(divide, THREE)\n    x7 = compose(x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = toindices(x4)\n    x10 = compose(x8, last)\n    x11 = sfilter(x9, x10)\n    O = fill(I, SIX, x11)\n    return O"], [0.12814991617905258, "def solve_4839ff05(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [0.12814991617905258, "def solve_18fefce7(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [0.12814991617905258, "def solve_a538eeab(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [0.13194490800051364, "def solve_d0d9d11c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = sfilter(x1, hline)\n    x5 = size(x4)\n    x6 = positive(x5)\n    x7 = branch(x6, identity, dmirror)\n    x8 = x7(I)\n    x9 = rbind(subgrid, x8)\n    x10 = matcher(color, x3)\n    x11 = compose(flip, x10)\n    x12 = partition(x8)\n    x13 = sfilter(x12, x11)\n    x14 = rbind(ofcolor, x3)\n    x15 = lbind(mapply, vfrontier)\n    x16 = chain(x15, x14, x9)\n    x17 = fork(shift, x16, ulcorner)\n    x18 = fork(intersection, toindices, x17)\n    x19 = mapply(x18, x13)\n    x20 = fill(x8, ZERO, x19)\n    O = x7(x20)\n    return O"], [0.13468134728045977, "def solve_dcaf4aa6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13468134728045977, "def solve_c118dc2c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_e37c947e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13468134728045977, "def solve_4084e9cd(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13468134728045977, "def solve_c52c0925(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_c74814de(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.13468134728045977, "def solve_6972c097(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.13604469536847255, "def solve_ecf3f142(I):\n    x1 = fork(multiply, height, width)\n    x2 = partition(I)\n    x3 = argmax(x2, x1)\n    x4 = remove(x3, x2)\n    x5 = argmax(x4, x1)\n    x6 = other(x4, x5)\n    x7 = palette(I)\n    x8 = lrcorner(x5)\n    x9 = add(x8, UNITY)\n    x10 = llcorner(x5)\n    x11 = add(x10, DOWN_LEFT)\n    x12 = urcorner(x5)\n    x13 = add(x12, UP_RIGHT)\n    x14 = ulcorner(x5)\n    x15 = add(x14, NEG_UNITY)\n    x16 = shoot(x9, UNITY)\n    x17 = shoot(x11, DOWN_LEFT)\n    x18 = shoot(x13, UP_RIGHT)\n    x19 = shoot(x15, NEG_UNITY)\n    x20 = combine(x16, x17)\n    x21 = combine(x18, x19)\n    x22 = combine(x20, x21)\n    x23 = color(x6)\n    O = fill(I, x23, x22)\n    return O"], [0.13811265931525568, "def solve_f348a2d6(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.147039853263387, "def solve_1a66c75a(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = fill(I, x8, x32)\n    return O"], [0.15329845560571315, "def solve_e20e0b07(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = partition(I)\n    x7 = fork(multiply, height, width)\n    x8 = fork(equality, size, x7)\n    x9 = sfilter(x6, x8)\n    x10 = argmax(x9, size)\n    x11 = difference(x5, x10)\n    x12 = apply(initset, x11)\n    x13 = rbind(hmatching, x10)\n    x14 = rbind(vmatching, x10)\n    x15 = fork(either, x13, x14)\n    x16 = sfilter(x12, x15)\n    x17 = rbind(gravitate, x10)\n    x18 = fork(add, center, x17)\n    x19 = fork(connect, center, x18)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x16)\n    O = paint(I, x21)\n    return O"], [0.167039853263387, "def solve_618efc47(I):\n    x1 = objects(I, T, F, T)\n    x2 = ofcolor(I, TWO)\n    x3 = argmin(x1, numcolors)\n    x4 = normalize(x3)\n    x5 = occurrences(I, x4)\n    x6 = toindices(x4)\n    x7 = lbind(shift, x6)\n    x8 = mapply(x7, x5)\n    O = fill(I, ONE, x8)\n    return O"], [0.168463732206312, "def solve_f6aff4de(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.168463732206312, "def solve_25b71daa(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.168463732206312, "def solve_60b18f38(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.1697728934434557, "def solve_97c80cb9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.1697728934434557, "def solve_f9c173a1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.1697728934434557, "def solve_a74b3ab2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.1697728934434557, "def solve_f83f9a53(I):\n    x1 = switch(I, FIVE, EIGHT)\n    O = switch(x1, EIGHT, TWO)\n    return O"], [0.1697728934434557, "def solve_cb12132f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.1697728934434557, "def solve_cd1f9d36(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.1697728934434557, "def solve_c73575b4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6,88, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.1697728934434557, "def solve_e5b651d8(I):\n    x1 = switch(I, ORIGIN, THREE)\n    x2 = switch(x1, EIGHT, TWO)\n    x3 = switch(x2, TWO, ONE)\n    O = switch(x3, ONE, FOUR)\n    return O"], [0.17098233381512817, "def solve_f5a04b82(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, NEG_ONE, x4)\n    return O"], [0.17098233381512817, "def solve_f20dc35f(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.17098233381512817, "def solve_b29df95f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.17098233381512817, "def solve_c5df6a75(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.1816725678756399, "def solve_7eb304f9(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = height(x2)\n    x4 = height(I)\n    x5 = interval(ZERO, x4, x3)\n    x6 = lbind(shift, x2)\n    x7 = compose(x6, toivec)\n    x8 = compose(x7, invert)\n    x9 = fork(combine, x7, x8)\n    x10 = mapply(x9, x5)\n    O = paint(I, x10)\n    return O"], [0.19326297813860446, "def solve_a2ad9994(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.19986952115995066, "def solve_e8f97d58(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.20252763457609518, "def solve_014bb1fa(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.20252763457609518, "def solve_f66c9b52(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.20977289344345568, "def solve_9b77a7d2(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_44df1595(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_0a738006(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(add, height, width)\n    x3 = compose(decrement, x2)\n    x4 = fork(equality, size, x3)\n    x5 = fork(difference, toindices, box)\n    x6 = compose(size, x5)\n    x7 = matcher(x6, ZERO)\n    x8 = sfilter(x1, x4)\n    x9 = difference(x1, x8)\n    x10 = sfilter(x9, x7)\n    x11 = merge(x1)\n    x12 = fill(I, TWO, x11)\n    x13 = merge(x8)\n    x14 = fill(x12, ONE, x13)\n    x15 = merge(x10)\n    O = fill(x14, SIX, x15)\n    return O"], [0.20977289344345568, "def solve_9915a86c(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_c95ea8ea(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_71487622(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_38586d59(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_86516d9c(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_353966b3(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_85aa7f23(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.20977289344345568, "def solve_2a19a59b(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, SIX)\n    x3 = compose(flip, x2)\n    x4 = mfilter(x1, x2)\n    x5 = mfilter(x1, x3)\n    x6 = fill(I, TWO, x4)\n    O = fill(x6, ONE, x5)\n    return O"], [0.2110590985215381, "def solve_52d4dd56(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = prapply(connect, x2, x2)\n    x4 = fgpartition(I)\n    x5 = merge(x4)\n    x6 = cover(I, x5)\n    x7 = fork(either, hline, vline)\n    x8 = box(x5)\n    x9 = rbind(difference, x8)\n    x10 = chain(positive, size, x9)\n    x11 = fork(both, x7, x10)\n    x12 = mfilter(x3, x11)\n    O = fill(x6, x1, x12)\n    return O"], [0.2164395601101224, "def solve_0cd3d63d(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.2164395601101224, "def solve_e3d3f20f(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.2164395601101224, "def solve_a7d718a6(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.2164395601101224, "def solve_f492f9a6(I):\n    x1 = switch(I, FIVE, EIGHT)\n    x2 = switch(x1, THREE, FOUR)\n    x3 = switch(x2, EIGHT, NINE)\n    x4 = switch(x3, ONE, FOUR)\n    O = switch(x4, TWO, NINE)\n    return O"], [0.2164395601101224, "def solve_2ef6a3a9(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.2164395601101224, "def solve_26e31701(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.2164395601101224, "def solve_fd479b93(I):\n    x1 = switch(I, FOUR, EIGHT)\n    O = switch(x1, ONE, TWO)\n    return O"], [0.21724245422789054, "def solve_92d74748(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(shoot, RIGHT)\n    x4 = compose(x3, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(x1, DOWN_LEFT)\n    x9 = initset(x8)\n    x10 = mostcolor(I)\n    x11 = recolor(x10, x9)\n    x12 = objects(x7, T, F, T)\n    x13 = insert(x11, x12)\n    x14 = order(x13, uppermost)\n    x15 = first(x14)\n    x16 = remove(x11, x14)\n    x17 = remove(x15, x14)\n    x18 = compose(lrcorner, first)\n    x19 = compose(lrcorner, last)\n    x20 = fork(connect, x18, x19)\n    x21 = compose(color, first)\n    x22 = fork(recolor, x21, x20)\n    x23 = pair(x16, x17)\n    x24 = mapply(x22, x23)\n    O = underpaint(x7, x24)\n    return O"], [0.21724245422789054, "def solve_49183c77(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(shoot, RIGHT)\n    x4 = compose(x3, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(x1, DOWN_LEFT)\n    x9 = initset(x8)\n    x10 = mostcolor(I)\n    x11 = recolor(x10, x9)\n    x12 = objects(x7, T, F, T)\n    x13 = insert(x11, x12)\n    x14 = order(x13, uppermost)\n    x15 = first(x14)\n    x16 = remove(x11, x14)\n    x17 = remove(x15, x14)\n    x18 = compose(lrcorner, first)\n    x19 = compose(lrcorner, last)\n    x20 = fork(connect, x18, x19)\n    x21 = compose(color, first)\n    x22 = fork(recolor, x21, x20)\n    x23 = pair(x16, x17)\n    x24 = mapply(x22, x23)\n    O = underpaint(x7, x24)\n    return O"], [0.22208695827893984, "def solve_a413f355(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.22208695827893984, "def solve_7a79cd2a(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.22208695827893984, "def solve_7392c7e5(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.22780599026714027, "def solve_8bda1693(I):\n    x1 = objects(I, T, F, F)\n    x2 = compose(maximum, shape)\n    x3 = order(x1, x2)\n    x4 = first(x3)\n    x5 = last(x3)\n    x6 = color(x4)\n    x7 = color(x5)\n    x8 = equality(x6, x7)\n    x9 = combine(x4, x5)\n    x10 = repeat(x9, ONE)\n    x11 = remove(x4, x3)\n    x12 = remove(x5, x11)\n    x13 = compose(hfrontier, center)\n    x14 = fork(recolor, color, x13)\n    x15 = mapply(x14, x12)\n    O = paint(I, x15)\n    return O"], [0.23590358470014935, "def solve_9241658c(I):\n    O = hmirror(I)\n    return O"], [0.24440527968330814, "def solve_0c976d01(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.2473346261417366, "def solve_532cc8a8(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.2473346261417366, "def solve_72273abc(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.253858380731812, "def solve_f0160443(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, last)\n    x5 = fork(recolor, first, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [0.25586824336349373, "def solve_760714e6(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.25586824336349373, "def solve_5cc03688(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.25586824336349373, "def solve_e0c5e458(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.2730213103674518, "def solve_18b2110e(I):\n    O = rot180(I)\n    return O"], [0.2730213103674518, "def solve_d6948f4e(I):\n    O = rot180(I)\n    return O"], [0.2730213103674518, "def solve_8150f32c(I):\n    O = rot180(I)\n    return O"], [0.2730213103674518, "def solve_d9c50c15(I):\n    O = rot180(I)\n    return O"], [0.2730213103674518, "def solve_be7cab67(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = remove(x2, x1)\n    x4 = normalize(x2)\n    x5 = shape(x2)\n    x6 = halve(x5)\n    x7 = invert(x6)\n    x8 = shift(x4, x7)\n    x9 = sizefilter(x3, ONE)\n    x10 = apply(center, x9)\n    x11 = lbind(shift, x8)\n    x12 = mapply(x11, x10)\n    x13 = paint(I, x12)\n    O = rot180(x13)\n    return O"], [0.2730213103674518, "def solve_f5150224(I):\n    O = rot180(I)\n    return O"], [0.2781097602204145, "def solve_4b9b7594(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.28257229929506134, "def solve_97b4f6cf(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.28257229929506134, "def solve_83e1f9b2(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.28271352439090625, "def solve_5451e371(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.28271352439090625, "def solve_0520f955(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.28271352439090625, "def solve_591788a2(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.28271352439090625, "def solve_a264b1ea(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.28271352439090625, "def solve_72472149(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.28271352439090625, "def solve_87a29689(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.28271352439090625, "def solve_195d5ca0(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.2912996173225872, "def solve_712908b7(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 =equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2912996173225872, "def solve_4b1f1373(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.2957105825141008, "def solve_d0ed3e3d(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [0.29660861186373566, "def solve_76dbc30e(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.29660861186373566, "def solve_1337d54c(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.3074019960118805, "def solve_e4415c36(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.3074019960118805, "def solve_e59a7693(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.3074019960118805, "def solve_e61f52eb(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.31572456964802403, "def solve_349a7715(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.31572456964802403, "def solve_e482eab4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.31572456964802403, "def solve_e75095ef(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = objects(x3, T, F, T)\n    x5 = merge(x4)\n    O = paint(x1, x5)\n    return O"], [0.326168988805897, "def solve_a1e670d5(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.326168988805897, "def solve_10e9514d(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.326168988805897, "def solve_e2f23174(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.3315011728051802, "def solve_f68f5a98(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.3315011728051802, "def solve_cc69fd20(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.3315011728051802, "def solve_dd8c3732(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.3315011728051802, "def solve_ea0c1245(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.36791347770439387, "def solve_c31648c7(I):\n    O = dmirror(I)\n    return O"], [0.3702111384573228, "def solve_a1393f8c(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = astuple(SIX, THREE)\n    x6 = astuple(FOUR, EIGHT)\n    x7 = astuple(ONE, TWO)\n    x8 = initset(x5)\n    x9 = insert(x6, x8)\n    x10 = insert(x7, x9)\n    x11 = mapply(x4, x10)\n    O = paint(I, x11)\n    return O"], [0.3807233128441688, "def solve_edc28001(I):\n    O = rot270(I)\n    return O"], [0.38969952784619355, "def solve_46b8caba(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.3997728934434557, "def solve_ad274ceb(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.3997728934434557, "def solve_15147233(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.3997728934434557, "def solve_77678f50(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.3997728934434557, "def solve_d8988e44(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.3997728934434557, "def solve_d3a21eb2(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.3997728934434557, "def solve_cd5e5ac1(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.4121180954681841, "def solve_a4ad214b(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.41434496433667933, "def solve_a03c489d(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = recolor(ZERO, x2)\n    x4 = normalize(x3)\n    x5 = occurrences(I, x4)\n    x6 = toindices(x4)\n    x7 = lbind(shift, x6)\n    x8 = mapply(x7, x5)\n    O = fill(I, x1, x8)\n    return O"], [0.41434496433667933, "def solve_ae79e827(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, TWO, x6)\n    return O"], [0.41434496433667933, "def solve_a8d2bd7c(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, TWO, x6)\n    return O"], [0.4221658498666133, "def solve_c3094d4a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.4221658498666133, "def solve_c178e374(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.44421029663584294, "def solve_6ce84a7d(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_5b6a6a11(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_06858a4e(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_6cef9a04(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_0d6d5f46(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_0f33f28f(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_e586a6ca(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_ec5d73c7(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44421029663584294, "def solve_118cfe50(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.44434496433667936, "def solve_098a307f(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, FOUR, x6)\n    return O"], [0.46735865100246843, "def solve_a1a15b27(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = lbind(power, outbox)\n    x8 = chain(x7, halve, width)\n    x9 = initset(x8)\n    x10 = lbind(rapply, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = compose(backdrop, x12)\n    x14 = fork(difference, x13, toindices)\n    x15 = mapply(x14, x1)\n    x16 = mostcolor(I)\n    x17 = ofcolor(I, x16)\n    x18 = intersection(x15, x17)\n    O = fill(x6, THREE, x18)\n    return O"], [0.469992675486797, "def solve_1e6984ea(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, vline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = combine(x15, x16)\n    x18 = intersection(x15, x16)\n    x19 = difference(x17, x18)\n    O = fill(x14, THREE, x19)\n    return O"], [0.4853084736970792, "def solve_2f7672a5(I):\n    x1 = objects(I, T, F, F)\n    x2 = asindices(I)\n    x3 = box(x2)\n    x4 = toobject(x3, I)\n    x5 = mostcolor(x4)\n    x6 = colorfilter(x1, x5)\n    x7 = rbind(bordering, I)\n    x8 = compose(flip, x7)\n    x9 = mfilter(x6, x8)\n    x10 = fill(I, TWO, x9)\n    O = replace(x10, x5, THREE)\n    return O"], [0.4853084736970792, "def solve_288cfff0(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = sfilter(x2, square)\n    x4 = difference(x2, x3)\n    x5 = merge(x3)\n    x6 = recolor(THREE, x5)\n    x7 = merge(x4)\n    x8 = recolor(FOUR, x7)\n    x9 = paint(I, x6)\n    O = paint(x9, x8)\n    return O"], [0.49128802196072596, "def solve_cff8ce5e(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = valmax(x2, shape)\n    x4 = canvas(x1, x3)\n    x5 = apply(normalize, x2)\n    x6 = lbind(subtract, x3)\n    x7 = chain(halve, x6, shape)\n    x8 = fork(shift, identity, x7)\n    x9 = mapply(x8, x5)\n    O = paint(x4, x9)\n    return O"], [0.5086219017989793, "def solve_6c8d2a06(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, T, F, F)\n    x6 = rbind(colorcount, ONE)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.5133832625018109, "def solve_e41b3a1d(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = ofcolor(x1, ZERO)\n    x4 = ofcolor(x2, ZERO)\n    x5 = intersection(x3, x4)\n    x6 = replace(x1, NINE, ZERO)\n    O = fill(x6, EIGHT, x5)\n    return O"], [0.5235791174015115, "def solve_db8b69d5(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5235791174015115, "def solve_7b321275(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5235791174015115, "def solve_74f998dd(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5235791174015115, "def solve_f400889a(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5235791174015115, "def solve_d558cb8a(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5311442307692307, "def solve_ff7854b1(I):\n    x1 = shape(I)\n    x2 = remove(x1, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = canvas(x4, x1)\n    x6 = colorcount(I, x4)\n    x7 = decrement(x6)\n    x8 = tojvec(x7)\n    x9 = connect(ORIGIN, x8)\n    x10 = fill(x5, TWO, x9)\n    x11 = initset(UNITY)\n    x12 = equality(x6, FOUR)\n    x13 = branch(x12, x11, x9)\n    O = fill(x10, TWO, x13)\n    return O"], [0.5519519369106645, "def solve_e3319c05(I):\n    x1 = replace(I, ZERO, THREE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [0.5542587288414367, "def solve_bc2b4fb8(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5542587288414367, "def solve_bc691e20(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5641693586048402, "def solve_6762fa62(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.5641693586048402, "def solve_f8b63e1f(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.5648229277707709, "def solve_cd8377b8(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = subgrid(x20, I)\n    x22 = switch(x21, x18, x19)\n    x23 = replace(x22, x18, x4)\n    x24 = lbind(downscale, x23)\n    x25 = fork(upscale, x24, identity)\n    x26 = matcher(x25, x23)\n    x27 = shape(x23)\n    x28 = maximum(x27)\n    x29 = interval(ONE, x28, ONE)\n    x30 = sfilter(x29, x26)\n    x31 = maximum(x30)\n    O = downscale(x23, x31)\n    return O"], [0.5828312571318451, "def solve_cfb55a72(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    O = rot180(x2)\n    return O"], [0.641276367065674, "def solve_690030d6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.6460408141864922, "def solve_ce729be0(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.6460408141864922, "def solve_81bc7ebf(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.6460408141864922, "def solve_2967c114(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6460408141864922, "def solve_1d95db98(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.6947586846156356, "def solve_468204d3(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.6947586846156356, "def solve_c0f08e67(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.6968040052377024, "def solve_2da17ccf(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.7540848163604722, "def solve_c04a553f(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [0.7779700058051356, "def solve_4bde5106(I):\n    x1 = trim(I)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(ONE, x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = objects(x6, T, F, F)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x5(x10)\n    return O"], [0.7915392052312495, "def solve_9a5cba85(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_47143755(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_f806b6fc(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_de2b6808(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_77026548(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_dec8195a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_82db253a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_e861c1ef(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_868dbe6e(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_f5bbc6f8(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_3bbd14bd(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_52dd0580(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_716a7ac9(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_5b4c7e19(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.7915392052312495, "def solve_7048e271(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.8151095953372474, "def solve_9e2c34c7(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = flip(x9)\n    x11 = branch(x10, dmirror, identity)\n    x12 = x11(x8)\n    x13 = objects(x12, T, F, F)\n    x14 = order(x13, leftmost)\n    x15 = apply(color, x14)\n    x16 = repeat(x15, ONE)\n    O = x11(x16)\n    return O"], [0.8585740049506482, "def solve_ffe25cd0(I):\n    x1 = palette(I)\n    x2 = remove(ONE, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = canvas(x4, THREE_BY_THREE)\n    x6 = colorcount(I, ONE)\n    x7 = decrement(x6)\n    x8 = tojvec(x7)\n    x9 = connect(ORIGIN, x8)\n    x10 = fill(x5, TWO, x9)\n    x11 = initset(UNITY)\n    x12 = equality(x6, FOUR)\n    x13 = branch(x12, x11, x9)\n    O = fill(x10, TWO, x13)\n    return O"], [0.8642031835623443, "def solve_d37efd93(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = astuple(ONE, THREE)\n    x8 = size(x6)\n    x9 = order(x6, leftmost)\n    x10 = apply(color, x9)\n    x11 = rbind(canvas, UNITY)\n    x12 = apply(x11, x10)\n    x13 = merge(x12)\n    x14 = dmirror(x13)\n    x15 = subtract(NINE, x8)\n    x16 = astuple(ONE, x15)\n    x17 = mostcolor(I)\n    x18 = canvas(x17, x16)\n    x19 = hconcat(x14, x18)\n    x20 = hsplit(x19, THREE)\n    x21 = merge(x20)\n    x22 = crop(x21, ORIGIN, x7)\n    x23 = crop(x21, DOWN, x7)\n    x24 = crop(x21, TWO_BY_ZERO, x7)\n    x25 = vmirror(x23)\n    x26 = vconcat(x22, x25)\n    O = vconcat(x26, x24)\n    return O"], [0.868349128540305, "def solve_f3fd0914(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, T, T)\n    x3 = first(x2)\n    x4 = vline(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(x1)\n    x7 = objects(x6, T, T, T)\n    x8 = order(x7, uppermost)\n    x9 = apply(color, x8)\n    x10 = dedupe(x9)\n    x11 = size(x10)\n    x12 = rbind(repeat, x11)\n    O = apply(x12, x10)\n    return O"], [0.8736467832112765, "def solve_f38fc494(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = ofcolor(x1, ZERO)\n    x4 = ofcolor(x2, ZERO)\n    x5 = intersection(x3, x4)\n    x6 = size(x5)\n    x7 = astuple(FOUR, FOUR)\n    x8 = canvas(THREE, x7)\n    x9 = fill(x8, ZERO, x3)\n    O = fill(x9, TWO, x4)\n    return O"], [0.8799409467082004, "def solve_4858c5b1(I):\n    x1 = astuple(ONE, THREE)\n    x2 = size(x1)\n    x3 = decrement(x2)\n    x4 = canvas(ZERO, x1)\n    x5 = tojvec(x3)\n    x6 = connect(ORIGIN, x5)\n    x7 = equality(x2, FOUR)\n    x8 = insert(UNITY, x6)\n    x9 = branch(x7, x8, x6)\n    O = fill(x4, TWO, x9)\n    return O"], [0.9001514323097631, "def solve_d66db884(I):\n    x1 = palette(I)\n    x2 = contained(ONE, x1)\n    x3 = contained(TWO, x1)\n    x4 = branch(x2, UNITY, TWO_BY_TWO)\n    x5 = branch(x3, RIGHT, x4)\n    x6 = fork(combine, vfrontier, hfrontier)\n    x7 = x6(x5)\n    x8 = canvas(ZERO, THREE_BY_THREE)\n    O = fill(x8, FIVE, x7)\n    return O"], [0.9081403808721191, "def solve_3936d83c(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_6ce7e217(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_27616eb4(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_1f621c95(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_2bd5d1be(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_56bd2134(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_ed6b6093(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_de236228(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_693c28fe(I):\n    x1 = rot180(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot180(x2)\n    return O"], [0.9081403808721191, "def solve_2a16f093(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9081403808721191, "def solve_01bdc5be(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.9182807290875006, "def solve_be5cb8b0(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(equality, toindices, box)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = argmax(x3, x4)\n    x6 = fgpartition(I)\n    x7 = merge(x6)\n    x8 = difference(x7, x5)\n    x9 = subgrid(x5, I)\n    x10 = subgrid(x8, I)\n    x11 = height(x9)\n    x12 = subtract(x11, TWO)\n    x13 = height(x10)\n    x14 = divide(x12, x13)\n    x15 = width(x9)\n    x16 = subtract(x15, TWO)\n    x17 = width(x10)\n    x18 = divide(x16, x17)\n    x19 = hupscale(x10, x18)\n    x20 = vupscale(x19, x14)\n    x21 = asobject(x20)\n    x22 = shift(x21, UNITY)\n    O = paint(x9, x22)\n    return O"], [0.9182807290875006, "def solve_5c588e1a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_7d1e61c4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_9f10e83b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_c98899f1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_a0f968c0(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.9182807290875006, "def solve_75cfeb54(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_b546c6bd(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.9182807290875006, "def solve_d9c70a34(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, F, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.9182807290875006, "def solve_0f688366(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_71221886(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.9182807290875006, "def solve_cb1026e1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_7a1dddd4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9182807290875006, "def solve_3dd0e274(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.9183491285403049, "def solve_9418cabd(I):\n    x1 = initset(ORIGIN)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.9183491285403049, "def solve_8abdcc84(I):\n    x1 = objects(I, T, F, F)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = lbind(chain, positive)\n    x6 = lbind(x5, size)\n    x7 = rbind(compose, backdrop)\n    x8 = lbind(lbind, intersection)\n    x9 = chain(x6, x7, x8)\n    x10 = chain(x9, backdrop, outbox)\n    x11 = lbind(sfilter, x4)\n    x12 = compose(x11, x10)\n    x13 = chain(positive, size, x12)\n    x14 = sfilter(x4, x13)\n    x15 = compose(merge, x12)\n    x16 = apply(x15, x14)\n    x17 = rbind(subgrid, I)\n    x18 = apply(x17, x16)\n    x19 = merge(x16)\n    x20 = palette(x19)\n    x21 = lbind(colorcount, x19)\n    x22 = argmin(x20, x21)\n    x23 = rbind(colorcount, x22)\n    O = argmax(x18, x23)\n    return O"], [0.9183491285403049, "def solve_ea44bb60(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.9183491285403049, "def solve_4add9518(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.9183491285403049, "def solve_4b8b40a0(I):\n    x1 = width(I)\n    x2 = astuple(NINE, x1)\n    x3 = canvas(ZERO, x2)\n    x4 = vconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = rbind(colorcount, TWO)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.922547385620915, "def solve_5020f3c5(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = astuple(FOUR, FOUR)\n    x4 = ofcolor(x1, ZERO)\n    x5 = ofcolor(x2, ZERO)\n    x6 = intersection(x4, x5)\n    x7 = canvas(ZERO, x3)\n    O = fill(x7, THREE, x6)\n    return O"], [0.9498931623931623, "def solve_099cd861(I):\n    x1 = objects(I, T, F, F)\n    x2 = sizefilter(x1, ONE)\n    x3 = apply(color, x2)\n    x4 = difference(x1, x2)\n    x5 = rbind(subgrid, I)\n    x6 = apply(x5, x4)\n    x7 = rbind(colorcount, SIX)\n    x8 = argmax(x6, x7)\n    x9 = mostcolor(x8)\n    O = canvas(x9, UNITY)\n    return O"], [0.95, "def solve_c25334c6(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.95, "def solve_f6eab80c(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.95, "def solve_ffda0447(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = color(x3)\n    x5 = remove(ZERO, x1)\n    x6 = other(x5, x4)\n    O = canvas(x6, UNITY)\n    return O"], [0.95, "def solve_c63a7545(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = subgrid(x2, I)\n    x4 = lefthalf(x3)\n    O = tophalf(x4)\n    return O"], [0.95, "def solve_46a4c9f5(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [1.0, "def solve_d9a5e169(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_1ef9b4e0(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_289be062(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_9e09be27(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_68de77ff(I):\n    x1 = remove(I, x1)\n    x2 = merge(x1)\n    x3 = cover(I, x2)\n    x4 = mapply(daeighbors, x1)\n    x5 = mapply(neighbors, x1)\n    x6 = fill(x3, ONE, x4)\n    O = fill(x6, TWO, x5)\n    return O"], [1.0, "def solve_18fe9976(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_34234cf4(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = rbind(toobject, I)\n    x5 = chain(leastcolor, x4, delta)\n    x6 = rbind(shift, UP)\n    x7 = fork(connect, ulcorner, urcorner)\n    x8 = compose(x6, x7)\n    x9 = rbind(shift, DOWN)\n    x10 = fork(connect, llcorner, lrcorner)\n    x11 = compose(x9, x10)\n    x12 = fork(astuple, x8, x11)\n    x13 = lbind(rbind, manhattan)\n    x14 = compose(x13, delta)\n    x15 = fork(argmin, x12, x14)\n    x16 = fork(combine, delta, x15)\n    x17 = fork(recolor, x5, x16)\n    x18 = mapply(x17, x3)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_2110d98f(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_86b137f8(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_f3fe2460(I):\n    x1 = asindices(I)\n    x2 = shape(I)\n    x3 = halve(x2)\n    x4 = rbind(greater, x3)\n    x5 = compose(x4, size)\n    x6 = sfilter(x1, x5)\n    x7 = compose(last, last)\n    x8 = order(x6, x7)\n    x9 = argmax(x8, size)\n    x10 = mostcolor(x9)\n    x11 = palette(I)\n    x12 = remove(x10, x11)\n    x13 = lbind(colorcount, I)\n    x14 = argmin(x12, x13)\n    x15 = mostcolor(I)\n    x16 = ofcolor(I, x14)\n    x17 = ofcolor(I, x18)\n    x18 = combine(x16, x17)\n    x19 = mapply(neighbors, x18)\n    x20 = difference(x19, x18)\n    x21 = toobject(x20, I)\n    x22 = leastcolor(x21)\n    x23 = toindices(x21)\n    x24 = ofcolor(I, x22)\n    x25 = ofcolor(I, x23)\n    x26 = neighbors(ORIGIN)\n    x27 = mapply(neighbors, x26)\n    x28 = sfilter(x24, x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x22)\n    O = fill(I, x11, x30)\n    return O"], [1.0, "def solve_648b0ca4(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_40d7f8da(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = Feca(x2)\n    x4 = shape(I)\n    x5 = canvas(ZERO, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [1.0, "def solve_529cc78d(I):\n    x1 = lbind(rbind, sfilter)\n    x2 = lbind(compose, flip)\n    x3 = lbind(matcher, first)\n    x4 = chain(x3, x1, x2)\n    x5 = lbind(paint, I)\n    x6 = compose(last, last)\n    x7 = chain(decrement, x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = toindices(xEG029493)\n    x10 = compose(x8, last)\n    x11 = sfilter(x9, x10)\n    O = fill(I, ZERO, x11)\n    return O"], [1.0, "def solve_3a99a165(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = rot68b190(x2)\n    return O"], [1.0, "def solve_087b3361(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = first(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(x1, THREE, x3)\n    x6 = paint(x5, x4)\n    x7 = uppermost(x4)\n    x8 = leftmost(x4)\n    x9 = subtract(x8, TEN)\n    x10 = add(x8, TEN)\n    x11 = interval(x9, x10, TWO)\n    x12 = lbind(greater, x7)\n    x13 = compose(x12, first)\n    x14 = rbind(contained, x11)\n    x15 = compose(x14, last)\n    x16 = sfilter(x1, x13)\n    x17 = sfilter(x16, x15)\n    O = fill(x6, FOUR, x17)\n    return O"], [1.0, "def solve_1ef1a851(I):\n    x1 = ofcolor(I, ONE)\n    x2 =neighbors(UNITY)\n    x3 = initset(UNITY)\n    x4 = recolor(ONE, x3)\n    x5 = upscale(x4, THREE)\n    x6 = toindices(x5)\n    x7 = lrcorner(x5)\n    x8 = ulcorner(x5)\n    x9 = rbind(contained, x8)\n    x10 = compose(x9, portrait)\n    x11 = sfilter(x6, x10)\n    x12 = merge(x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, ONE)\n    x18 = ulcorner(x5)\n    x19 = subgrid(x18, x16)\n    x20 = branch(x19, identity, height)\n    x21 = x20(x16)\n    x22 = subtract(x21, TWO)\n    x23 = multiply(x22, x13)\n    x24 = add(x23, x8)\n    x25 = repeat(x24, ONE)\n    x26 = x15(x25)\n    x27 = ofcolor(x26, ONE)\n    x28 = subgrid(x27, x26)\n    x29 = interval(ZERO, x28, ONE)\n    x30 = apply(x15, x29)\n    x31 = initset(x30)\n    x32 = insert(x77, x31)\n    x33 = backdrop(x32)\n    x34 = cover(x16, x33)\n    x35 = dmirror(x34)\n    x36 = x15(x35)\n    x37 = shift(x34, x36)\n    x38 = lbind(shift, x37)\n    x39 = mapply(x38, x30)\n    O = paint(x34, x39)\n    return O"], [1.0, "def solve_751d4a10(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = equality(x2, FOUR)\n    x4 = branch(x3, leftmost, RIGHT)\n    x5 = x4(x1)\n    x6 = interval(ONE, FIVE, ONE)\n    x7 = lbind(multiply, x5)\n    x8 = apply(x7, x6)\n    x9 = repeat(x8, ONE)\n    x10 = combine(x7, x9)\n    x11 = apply(x7, x10)\n    x12 = extract(x11, last)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = subgrid(x13, I)\n    x16 = rot90(x15)\n    x17 = rot180(x15)\n    x18 = rot270(x17)\n    x19 = hconcat(x16, x14)\n    x20 = hconcat(x18, x16)\n    x21 = vconcat(x19, x20)\n    x22 = vconcat(x21, x21)\n    x23 = asobject(x22)\n    x24 = rot270(x23)\n    x25 = vconcat(x24, x23)\n    x26 = vconcat(x25, x24)\n    O = downscale(x26, THREE)\n    return O"], [1.0, "def solve_9d5fddf4(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_f3892808(I):\n    x1 = asindices(I)\n    x2 = toobject(x1, I)\n    x3 = mostcolor(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(chain, size)\n    x7 = rbind(x6, toindices)\n    x8 = lbind(lbind, contained)\n    x9 = lbind(ofcolor, I)\n    x10 = chain(x9, x7, x7)\n    x11 = lbind(matcher, x10)\n    x12 = compose(x11, ZERO)\n    x13 = chain(flip, x12, x10)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(x15, x10)\n    x17 = palette(I)\n    x18 = remove(x3, x17)\n    x19 = lbind(colorcount, I)\n    x20 = argmin(x18, x19)\n    x21 = x20(x64)\n    x22 = x20(x6)\n    x23 = x20(x4)\n    x24 = x20(x16)\n    x25 = compose(last, first)\n    x26 = compose(last, last)\n    x27 = fork(either, x25, x26)\n    x28 = compose(initset, x12)\n    x29 = compose(colorcount, x28)\n    x30 = fork(equality, x29, x27)\n    x31 = sfilter(x28, x30)\n    x32 = ofcolor(I, x21)\n    x33 = difference(x32, x31)\n    x34 = mapply(neighbors, x33)\n    x35 = mapply(neighbors, x34)\n    x36 = colorfilter(x31, x21)\n    x37 = fill(I, x20, x36)\n    O = fill(x37, x20, x25)\n    return O"], [1.0, "def solve_369647e5(I):\n    x1 = lbind(contained, THREE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, THREE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(invert, size)\n    x9 = order(x3, x8)\n    x10 = apply(normalize, x9)\n    x11 = size(x10)\n    x12 = interval(ZERO, x11, ONE)\n    x13 = apply(toivec, x12)\n    x14 = mpapply(shift, x10, x13)\n    x15 = merge(x14)\n    x16 = rot90(x15)\n    x17 = shape(x15)\n    x18 = canvas(ZERO, x17)\n    x19 = paint(x18, x16)\n    O = rot270(x19)\n    return O"], [1.0, "def solve_7a641a60(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_8b56ddca(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_1e027ee9(I):\n    x1 = frontiers(I)\n    x2 = matcher(identity, ZERO)\n    x3 = rbind(sfilter, x2)\n    x4 = compose(size, x3)\n    x5 = matcher(x4, ONE)\n    x6 = asindices(I)\n    x7 = lrcorner(x6)\n    x8 = add(UNITY, x7)\n    x9 = initset(x8)\n    x10 = fill(I, ZERO, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = apply(x11, x10)\n    x14 = apply(x12, x10)\n    x15 = contained(x13, x14)\n    x16 = width(I)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = compose(tojvec,00000)\n    x19 = height(I)\n    x20 = decrement(x19)\n    x21 = lbind(astuple, x20)\n    x22 = apply(x21, x17)\n    x23 = astuple(x6, x5)\n    x24 = canvas(ZERO, x23)\n    x25 = asindices(x24)\n    x26 = box(x25)\n    x27 = fill(x24, EIGHT, x26)\n    x28 = lbind(shift, x25)\n    x29 = mapply(x28, x26)\n    O = paint(x27, x29)\n    return O"], [1.0, "def solve_ad9dbd38(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = compose(x2, x1)\n    x4 = fork(intersection, x1, x3)\n    x5 = compose(size, x4)\n    x6 = palette(I)\n    x7 = matcher(x5, ZERO)\n    x8 = sfilter(x6, x7)\n    x9 = totuple(x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = mapply(neighbors, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = ofcolor(I, x11)\n    x17 = mapply(neighbors, x16)\n    x18 = toobject(x17, I)\n    x19 = mostcolor(x18)\n    x20 = rbind(shoot, UNITY)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = fork(combine, x20, x21)\n    x23 = rbind(shoot, UP_RIGHT)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = fork(combine, x23, x24)\n    x26 = fork(combine, x22, x25)\n    x27 = ofcolor(I, x11)\n    x28 = ofcolor(I, x10)\n    x29 = combine(x27, x28)\n    x30 = mapply(x26, x29)\n    x31 = ofcolor(I, x15)\n    x32 = intersection(x31, x30)\n    x33 = ofcolor(I, x19)\n    x34 = intersection(x33, x30)\n    x35 = fill(I, x10, x32)\n    O = fill(x35, x11, x34)\n    return O"], [1.0, "def solve_2ffdd91a(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = toobject(x1, I)\n    x3 = mostcolor(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = order(x5, identity)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = ofcolor(I, x7)\n    x10 = ofcolor(I, x8)\n    x11 = switch(I, x9, x10)\n    x12 = objects(x11, T, T, T)\n    x13 = colorfilter(x12, x7)\n    x14 = rbind(adjacent, x13)\n    x15 = mfilter(x14, vline)\n    x16 = mfilter(x14, hline)\n    x17 = size(x15)\n    x18 = size(x16)\n    x19 = greater(x17, x18)\n    x20 = branch(x19, x18, x15)\n    O = canvas(x20, UNITY)\n    return O"], [1.0, "def solve_1b0b411a(I):\n    x1 = rbind(toobject, I)\n    x2 = rbind(colorcount, ZERO)\n    x3 = chain(x2, x1, dneighbors)\n    x4 = matcher(x3, ONE)\n    x5 = astuple(extract, x4)\n    x6 = astuple(insert, x5)\n    x7 = astuple(ONE, x6)\n    x8 = canvas(ZERO, x7)\n    x9 = asindices(x8)\n    x10 = shift(x9, UNITY)\n    x11 = paint(x8, x10)\n    x12 = ofcolor(x11, ZERO)\n    x13 = ulcorner(x12)\n    x14 = shoot(x13, NEG_UNITY)\n    x15 = shoot(x13, UNITY)\n    x16 = shoot(x13, DOWN_LEFT)\n    x17 = shoot(x13, UP_RIGHT)\n    x18 = combine(x14, x16)\n    x19 = combine(x18, x17)\n    x20 = combine(x18, x18)\n    x21 = combine(x19, x20)\n    O = fill(x11, THREE, x21)\n    return O"], [1.0, "def solve_61a74e3b(I):\n    x1 = shape(I)\n    x2 = subgrid(x1, I)\n    x3 = index(I, ORIGIN)\n    x4 = decrerecolor(x2, x3)\n    x5 = hmirror(x4)\n    x6 = vmirror(x4)\n    x7 = objects(x6, T, F, F)\n    x8 = astuple(x5, x6)\n    x9 = canvas(x3, x8)\n    x10 = hmirror(x9)\n    x11 = vmirror(x9)\n    x12 = objects(x10, T, F, T)\n    x13 = merge(x12)\n    x14 = paint(x9, x13)\n    x15 = astuple(x11, x10)\n    x16 = astuple(x13, x15)\n    x17 = replace(x14, x9, x3)\n    x18 = fill(x17, FOUR, x16)\n    x19 = merge(x12)\n    x20 = cover(x18, x19)\n    x21 = downscale(x20, THREE)\n    x22 = crop(x21, ORIGIN, x7)\n    O = downscale(x21, TWO)\n    return O"], [1.0, "def solve_6f307036(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_05c40ee6(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_19a67544(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, size)\n    x3 = astuple(x2, x2)\n    x4 = vmirror(x2)\n    x5 = hmirror(x2)\n    x6 = combine(x4, x5)\n    x7 = merge(x6)\n    x8 = toindices(x7)\n    x9 = rbind(contained, x8)\n    x10 = compose(x9, first)\n    x11 = sfilter(x6, x10)\n    x12 = upscale(x11, TWO)\n    x13 = ofcolor(I, FOUR)\n    x14 = extract(x13, x12)\n    x15 = ulcorner(x14)\n    x16 = subgrid(x14, I)\n    x17 = trim(x16)\n    x18 = asobject(x17)\n    x19 = shift(x18, UNITY)\n    x20 = paint(I, x19)\n    x21 = subgrid(x1, x20)\n    x22 = vmirror(x21)\n    x23 = hmirror(x21)\n    x24 = connect(x13, x23)\n    x25 = apply(dmirror, x24)\n    x26 = mapply(cdece, x25)\n    O = paint(x21, x26)\n    return O"], [1.0, "def solve_92cf5840(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, ZERO)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_e892207c(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = rbind(toobject, I)\n    x5 = chain(leastcolor, x4, delta)\n    x6 = rbind(shift, UP)\n    x7 = fork(connect, ulcorner, urcorner)\n    x8 = compose(x6, x7)\n    x9 = rbind(shift, DOWN)\n    x10 = fork(connect, llcorner, lrcorner)\n    x11 = compose(x9, x10)\n    x12 = fork(astuple, x8, x11)\n    x13 = lbind(rbind, manhattan)\n    x14 = compose(x13, delta)\n    x15 = fork(argmin, x12, x14)\n    x16 = fork(combine, delta, x15)\n    x17 = fork(recolor, x5, x16)\n    x18 = mapply(x17, x3)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_fa599f79(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x7, x16)\n    x20 = ofcolor(x8, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, THREE, x21)\n    return O"], [1.0, "def solve_5cd2b1de(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_ea333ae4(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    x14 = apply(x4, x13)\n    x15 = ofcolor(I, FOUR)\n    x16 = subgrid(x15, x14)\n    x17 = apply(x4, x15)\n    x18 = lbind(shift, x16)\n    x19 = mapply(x18, x17)\n    O = fill(x16, ZERO, x19)\n    return O"], [1.0, "def solve_a6e03b10(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = rot90(x1)\n    x3 = rot180(x1)\n    x4 = rot270(x1)\n    x5 = hconcat(x2, x1)\n    x6 = hconcat(x3, x1)\n    x7 = vconcat(x5, x6)\n    x8 = vconcat(x7, x6)\n    O = x9(x8)\n    return O"], [1.0, "def solve_5f4ac0bc(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    O = upscale(I, x2)\n    return O"], [1.0, "def solve_f1860e60(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_60455e17(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = matcher(first, x4)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x1, x6)\n    x8 = difference(x1, x7)\n    x9 = toobject(x8, I)\n    x10 = apply(initset, x9)\n    x11 = rbind(shoot, UNITY)\n    x12 = compose(x11, ulcorner)\n    x13 = fork(combine, vfrontier, hfrontier)\n    x14 = compose(x13, x12)\n    x15 = fork(shift, identity, x14)\n    x16 = mapply(x15, x5)\n    O = paint(I, x16)\n    return O"], [1.0, "def solve_02612f31(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [1.0, "def solve_67a86756(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_a7bf3ff1(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x15)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [1.0, "def solve_33fbf2ee(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_7139a5a0(I):\n    x1 = lbind(I, THREE)\n    x2 = compose(positive, size)\n    x3 = rbind(s000, ZERO)\n    x4 = compose(x2, x3)\n    x5 = fork(add, first, x4)\n    x6 = compose(invert, x5)\n    x7 = fork(shoot, identity, x6)\n    x8 = fork(difference, toindices, x7)\n    x9 = chain(decrement, size, x8)\n    x10 = fork(equality, toindices, x9)\n    x11 = fork(shoot, ZERO, DOWN_LEFT)\n    x12 = chain(flip, x10, x11)\n    x13 = sfilter(x1, x12)\n    x14 = argmax(x13, x9)\n    x15 = center(x14)\n    x16 = outbox(x14)\n    x17 = ulcorner(x16)\n    x18 = subgrid(x14, I)\n    x19 = hmirror(x18)\n    x20 = lbind(shift, x19)\n    x21 = fgpartition(x19)\n    x22 = merge(x21)\n    x23 = cover(x19, x22)\n    x24 = shift(x23, x5)\n    x25 = paint(x23, x24)\n    O = vmirror(x25)\n    return O"], [1.0, "def solve_674593bf(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_f9a49cf6(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_e21fe008(I):\n    x1 = fgpartition(I)\n    x2 = compose(dneighbors, center)\n    x3 = fork(difference, backdrop, x2)\n    x4 = fork(equality, toindices, x3)\n    x5 = matcher(size, FIVE)\n    x6 = fork(both, x4, x5)\n    x7 = extract(x1, x6)\n    x8 = color(x7)\n    x9 = merge(x1)\n    x10 = compose(hmirror, vmirror)\n    x11 = initset(x10)\n    x12 = insert(vmirror, x11)\n    x13 = insert(hmirror, x12)\n    x14 = rapply(x13, x9)\n    x15 = ulcorner(x7)\n    x16 = lbind(subtract, x15)\n    x17 = matcher(first, x8)\n    x18 = rbind(sfilter, x17)\n    x19 = chain(x16, ulcorner, x18)\n    x20 = fork(shift, identity, x19)\n    x21 = mapply(x20, x14)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_8e0e70b0(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_40abf5b3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_e9ea88c1(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = fork(multiply, height, width)\n    x4 = argmax(x2, x3)\n    x5 = mostcolor(x4)\n    x6 = canvas(x5, x1)\n    x7 = palette(x6)\n    x8 = remove(x5, x7)\n    x9 = other(x8, x8)\n    x10 = ofcolor(I, x4)\n    x11 = ofcolor(I, x9)\n    x12 = apply(first, x10)\n    x13 = compose(first, last)\n    x14 = totuple(x12)\n    x15 = apply(x13, x14)\n    x16 = asobject(x15)\n    x17 = x13(x16)\n    x18 = x13(x11)\n    x19 = ulcorner(x16)\n    x20 = increment(x19)\n    x21 = rbind(subtract, x20)\n    x22 = toindices(x16)\n    x23 = apply(x21, x22)\n    x24 = lbind(shift, x17)\n    x25 = mapply(x24, x23)\n    O = fill(I, x9, x25)\n    return O"], [1.0, "def solve_a424d533(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x9 = mostcolor(x8)\n    x10 = palette(x8)\n    x11 = remove(x9, x10)\n    x12 = other(x11, x12)\n    x13 = ofcolor(x8, x12)\n    x14 = vmirror(x13)\n    x15 = hmirror(x13)\n    x16 = width(x8)\n    x17 = ulcorner(x8)\n    x18 = lbind(subtract, x17)\n    x19 = chain(positive, x18, last)\n    x20 = lbind(shift, x8)\n    x21 = rbind(multiply, x16)\n    x22 = chain(x19, x20, x21)\n    x23 =sfilter(x13, x22)\n    x24 = maximum(x23)\n    x25 = dmirror(x24)\n    x26 = objects(x25, T, F, T)\n    x27 = mapply(x26, x26)\n    x28 = astuple(x24, x27)\n    x29 = astuple(x24, x27)\n    x30 = canvas(x9, x29)\n    x31 = vmirror(x30)\n    x32 = ofcolor(x31, x12)\n    x33 = initset(x40)\n    x34 = rbind(manhattan, x33)\n    x35 = compose(x34, initset)\n    x36 = argmin(x32, x35)\n    x37 = x30(x36)\n    O = paint(x31, x37)\n    return O"], [1.0, "def solve_ef7ec8c6(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = recolor(ZERO, x1)\n    x3 = lbind(shift, x2)\n    x4 = height(I)\n    x5 = rbind(multiply, x4)\n    x6 = apply(x5, x3)\n    x7 = mapply(x6, x2)\n    O = fill(I, EIGHT, x7)\n    return O"], [1.0, "def solve_44dab636(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_bd33b779(I):\n    x1 = compose(positive, size)\n    x2 = rbind(sfilter, hline)\n    x3 = chain(x1, x2, frontiers)\n    x4 = chain(size, dedupe, first)\n    x5 = chain(size, dedupe, last)\n    x6 = fork(greater, x4, x5)\n    x7 = fork(both, x3, x6)\n    x8 = astuple(identity, rot90)\n    x9 = astuple(rot180, rot270)\n    x10 = combine(x8, x9)\n    x11 = astuple(identity, rot270)\n    x12 = astuple(rot180, rot90)\n    x13 = combine(x11, x12)\n    x14 = pair(x10, x13)\n    x15 = rbind(rapply, I)\n    x16(compose, initset, first)\n    x17 = compose(first, x16)\n    x18 = chain(size, x15, x17)\n    x19 = mostcolor(I)\n    x20 =fixmax(x14, x18)\n    x21 = matcher(x18, x20)\n    x22 = compose(flip, x21)\n    x23 = fork(both, x21, x22)\n    x24 = extract(x19, x23)\n    x25 = itastuple(x24, x22)\n    x26 = delta(x25)\n    x27 = fill(I, x19, x26)\n    x28 = compose(size, x22)\n    x29 = apply(x28, x25)\n    x30 = asindices(x27)\n    x31 = ofcolor(x27, x19)\n    x32 = difference(x30, x31)\n    x33 = fill(x27,valmax, x32)\n    x34 = lbind(shift, x28)\n    x35 = mapply(x34, x33)\n    O = paint(x33, x35)\n    return O"], [1.0, "def solve_7988cc7f(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, size)\n    x3 = subgrid(x2, I)\n    O = trim(x3)\n    return O"], [1.0, "def solve_3c58e97f(I):\n    x1 =8888104991\n    x2 = astuple(ONE, THREE)\n    x3 = size(x1)\n    x4 = decrement(x3)\n    x5 = astuple(TWO, x4)\n    x6 = canvas(ZERO, x5)\n    x7 = tojvec(x4)\n    x8 = crop(x6, x7, x4)\n    x9 = hmirror(x8)\n    x10 = objects(x9, T, F, T)\n    x11 = colorfilter(x10, TWO)\n    x12 = size(x11)\n    x13 = interval(ZERO, x5, ONE)\n    x14 = pair(x13, x11)\n    x15 = compose(invert, first)\n    x16 = power(outbox, x15)\n    x17 = fork(equality, identity, x16)\n    x18 = compose(x17, last)\n    x19 = sfilter(x14, x18)\n    x20 = totuple(x19)\n    x21 = apply(color, x20)\n    x22 = dedupe(x21)\n    x23 = size(x22)\n    x24 = equality(x23, ONE)\n    x25 = decrement(x24)\n    x26 = apply(decrement, x25)\n    x27 = height(x22)\n    x28 = maximum(x22)\n    x29 = equality(x27, ZERO)\n    x30 = branch(x28, x26, x29)\n    x31 = apply(x30, x22)\n    x32 = lbind(repeat, x306)\n    x33 = apply(x32, x31)\n    O = xconcat(x22, x33)\n    return O"], [1.0, "def solve_60ad08a0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = merge(x1)\n    x5 = fill(I, NEG_ONE, x4)\n    x6 = shape(I)\n    x7 = canvas(NEG_ONE, x6)\n    x8 = hconcat(x5, x7)\n    x9 = objects(x8, F, F, T)\n    x10 = rbind(other, x3)\n    x11 = compose(x10, palette)\n    x12 = fork(astuple, x11, ulcorner)\n    x13 = apply(x12, x9)\n    x14 = merge(x9)\n    x15 = fill(I, x3, x14)\n    x16 = paint(x15, x13)\n    O = compress(x16)\n    return O"], [1.0, "def solve_628fd0c9(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(multiply, THREE)\n    x19 = rbind(divide, THREE)\n    x20 = chain(x18, x19, last)\n    x21 = initset(x15)\n    x22 = insert(x65, x21)\n    x23 = backdrop(x22)\n    x24 = lbind(shift, x23)\n    x25 = mapply(x24, x4)\n    O = paint(x16, x25)\n    return O"], [1.0, "def solve_1b9d5a7e(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = x2(I, TWO)\n    x4 = first(x3)\n    x5 = last(x3)\n    x6 = fgpartition(x4)\n    x7 = merge(x6)\n    x8 = difference(x7, x5)\n    x9 = merge(x8)\n    x10 = color(x4)\n    x11 = fill(x4, x10, x9)\n    x12 = fill(x11, TWO, x5)\n    x13 = replace(x12, ZERO, EIGHT)\n    x14 = dmirror(x13)\n    x15 = papply(pair, x13, x14)\n    x16 = lbind(apply, maximum)\n    x17 = apply(x16, x15)\n    x18 = cmirror(x17)\n    x19 = papply(pair, x17, x18)\n    x20 = apply(x16, x19)\n    x21 = papply(pair, x16, x20)\n    x22 = apply(x16, x21)\n    x23 = papply(pair, x22, x17)\n    x24 = papply(pair, x23, x23)\n    x25 = compose(increment, x24)\n    x26 = lbind(apply, x25)\n    x27 = lbind(colorfilter, x17)\n    x28 = chain(x26, x27, last)\n    x29 = fork(recolor, first, x28)\n    x30 = mapply(x29, x15)\n    O = paint(x3, x30)\n    return O"], [1.0, "def solve_e3275e45(I):\n    x1 = llcorner(I)\n    x2 = shoot(x1,ORIGIN)\n    x3 = equality(x2, ZERO)\n    x4 = branch(x3, x2, x2)\n    x5 = shoot(x4, DOWN)\n    x6 = combine(x2, x5)\n    O = fill(I, ONE, x6)\n    return O"], [1.0, "def solve_0b4e4cce(I):\n    x1 = switch(I, EIGHT, TWO)\n    x2 = switch(x1, TWO, ZERO)\n    x3 = switch(x2, EIGHT, ONE)\n    x4 = switch(x3, EIGHT, FOUR)\n    x5 = switch(x4, EIGHT, FIVE)\n    x6 = switch(x5, TWO, FOUR)\n    x7 = switch(x6, EIGHT, ONE)\n    x8 = switch(x7, x2, FOUR)\n    x9 = fork(connect, ulcorner, urcorner)\n    x10 = fork(connect, ulcorner, llcorner)\n    x11 = fork(combine, x9, x10)\n    x12 = x11(x1)\n    x13 = x11(x2)\n    x14 = fork(recolor, color, x12)\n    x15 = fork(recolor, color, x13)\n    x16 = fork(combine, x14, x15)\n    x17 = x16(x2)\n    x18 = paint(x3, x17)\n    O = paint(x18, x2)\n    return O"], [1.0, "def solve_7abf562f(I):\n    x1 = lbind(fork, connect)\n    x2 = lbind(matcher, first)\n    x3 = compose(x2, leastcolor)\n    x4 = lbind(matcher, first)\n    x5 = compose(x4, mostcolor)\n    x6 = fork(extract, identity, x3)\n    x7 = compose(last, x6)\n    x8 = compose(dneighbors, x7)\n    x9 = lbind(apply, last)\n    x10 = fork(sfilter, identity, x5)\n    x11 = compose(x9, x10)\n    x12 = fork(difference, x8, x11)\n    x13 = compose(first, x12)\n    x14 = fork(subtract, x7, x13)\n    x15 = fork(shoot, x7, x14)\n    x16 = fork(recolor, leastcolor, x15)\n    x17 = mapply(x16, x1)\n    O = underpaint(I, x17)\n    return O"], [1.0, "def solve_fd571042(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_cec3b342(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_b56e63bb(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_e08ff4eb(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_1a5ecc43(I):\n    x1 = rot270(I)\n    x2 = argmax(x1, numcolors)\n    x3 = portrait(x2)\n    x4 = branch(x3, mostcolor, x1)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = interval(ONE, FIVE, ONE)\n    x8 = lbind(multiply, x5)\n    x9 = apply(x8, x7)\n    x10 = lbind(shift, x2)\n    x11 = mapply(x10, x9)\n    O = paint(x6, x11)\n    return O"], [1.0, "def solve_ecd1ca27(I):\n    x1 = objects(I, T, F, T)\n    x2 = size(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = apply(double, x3)\n    x5 = apply(double, x4)\n    x6 = astuple(ONE, NINE)\n    x7 = canvas(ZERO, x6)\n    x8 = fill(x7, ONE, x5)\n    x9 = fill(x8, TWO, x4)\n    O = fill(x9, THREE, x5)\n    return O"], [1.0, "def solve_5a3f2775(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_69984d3f(I):\n    x1 = leastcolor(I)\n    x2 = height(I)\n    x3 = vsplit(I, x2)\n    x4 = rbind(ofcolor, x1)\n    x5 = compose(leftmost, x4)\n    x6 = width(I)\n    x7 = divide(x6, THREE)\n    x8 = multiply(x7, TWO)\n    x9 = lbind(greater, x7)\n    x10 = compose(x9, x5)\n    x11 = lbind(greater, x8)\n    x12 = compose(x11, x5)\n    x13 = compose(flip, x10)\n    x14 = fork(both, x12, x13)\n    x15 = fork(either, x10, x14)\n    x16 = compose(flip, x15)\n    x17 = rbind(multiply, TWO)\n    x18 = compose(x17, x10)\n    x19 = rbind(multiply, FOUR)\n    x20 = compose(x19, x14)\n    x21 = rbind(multiply, THREE)\n    x22 = compose(x21, x16)\n    x23 = fork(add, x18, x20)\n    x24 = fork(add, x23, x22)\n    x25 = width(I)\n    x26 = rbind(repeat, x25)\n    x27 = compose(x26, x24)\n    O = apply(x27, x3)\n    return O"], [1.0, "def solve_50d5eeed(I):\n    x1 = Fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_70bf081b(I):\n    x1 = objects(I, T, F, T)\n    x2 = ofcolor(I, TWO)\n    x3 = mapply(vfrontier, x2)\n    x4 = underfill(I, ONE, x3)\n    x5 = hconcat(x4, x4)\n    O = vconcat(x5, x5)\n    return O"], [1.0, "def solve_80c1d51e(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_6b126768(I):\n    x1 = mostcolor(I)\n    x2 = replace(I, x1, ZERO)\n    x3 = leastcolor(x2)\n    O = ofcolor(I, x3)\n    return O"], [1.0, "def solve_d90b349a(I):\n    x1 = rot270(I)\n    x2 = rot180(I)\n    x3 = rot270(x2)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_771ee578(I):\n    x1 = lbind(contained, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = chain(merge, vmirror, hmirror)\n    x5 = x4(x3)\n    x6 = fork(recolor, color, x5)\n    x7 = mapply(x6, x4)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_0b8b8ce0(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_447fd2c6(I):\n    x1 = asobject(I)\n    x2 = shape(I)\n    x3 = decrement(x2)\n    x4 = index(I, x3)\n    x5 = double(x2)\n    x6 = canvas(x4, x5)\n    x7 = paint(x6, x1)\n    x8 = objects(x7, F, F, T)\n    x9 = first(x8)\n    x10 = shift(x9, LEFT)\n    x11 = vperiod(x10)\n    x12 = hperiod(x10)\n    x13 = neighbors(ORIGIN)\n    x14 = lbind(mapply, neighbors)\n    x15 = power(x14, TWO)\n    x16 = x15(x13)\n    x17 = astuple(x11, x12)\n    x18 = lbind(multiply, x17)\n    x19 = astuple(x18, x16)\n    x20 = lbind(shift, x10)\n    x21 = occurrences(x12, x13)\n    x22 = mapply(x20, x21)\n    O = paint(x7, x22)\n    return O"], [1.0, "def solve_a59f77f9(I):\n    x1 = argmin(I, bounds)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = compose(flip, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    O = canvas(x5, UNITY)\n    return O"], [1.0, "def solve_64fc3813(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = hfrontier(x1)\n    x4 = vfrontier(x2)\n    x5 = intersection(x3, x4)\n    x6 = astuple(x2, x5)\n    x7 = canvas(ZERO, x6)\n    O = fill(x7, TWO, x3)\n    return O"], [1.0, "def solve_6aee7734(I):\n    x1 = fgpartition(I)\n    x2 = valmax(x1, numcolors)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, mostcolor, I)\n    x5 = branch(x3, backdrop, x4)\n    x6 = urcorner(x5)\n    x7 = index(I, x6)\n    x8 = equality(x7, ONE)\n    x9 = add(x6, x8)\n    x10 = shift(x9, UNITY)\n    x11 = paint(I, x10)\n    x12 = objects(x11, T, F, T)\n    x13 = colorfilter(x12, TWO)\n    x14 = rbind(bordering, I)\n    x15 = compose(flip, x14)\n    x16 = mfilter(x13, x15)\n    O = paint(x11, x16)\n    return O"], [1.0, "def solve_0bb08e31(I):\n    x1 = shape(I)\n    x2 = subgrid(x1, I)\n    x3 = ofcolor(I, ZERO)\n    x4 = mapply(vfrontier, x3)\n    x5 = mapply(hfrontier, x3)\n    x6 = size(x4)\n    x7 = size(x5)\n    x8 = greater(x6, x7)\n    x9 = fill(I, ZERO, x4)\n    x10 = fill(x9, ZERO, x5)\n    O = fill(x10, TWO, x6)\n    return O"], [1.0, "def solve_4ed20adc(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_fc0a3cb2(I):\n    x1 = rot45(I)\n    x2 = fgpartition(x1)\n    x3 = compose(flip, even)\n    x4 = extract(x2, x3)\n    x5 = other(x2, x4)\n    x6 = rbind(colorcount, x5)\n    x7 = apply(x6, x4)\n    x8 = normalize(x5)\n    x9 = lbind(shift, x8)\n    x10 = apply(x9, x7)\n    x11 = rbind(intersection, x5)\n    x12 = compose(size, x11)\n    x13 = argmax(x10, x12)\n    O = underfill(x1, x5, x13)\n    return O"], [1.0, "def solve_94f7618a(I):\n    x1 = astuple(vsplit, hsplit)\n    x2 = rbind(rbind, TWO)\n    x3 = rbind(rapply, I)\n    x4 = initset(x2)\n    x5 = lbind(rapply, x4)\n    x6 = chain(first, x3, x5)\n    x7 = lbind(apply, numcolors)\n    x8 = compose(x7, x6)\n    x9 = matcher(x8, TWO_BY_TWO)\n    x10 = extract(x1, x9)\n    x11 = x10(I, TWO)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = palette(x12)\n    x15 = palette(x13)\n    x16 = intersection(x14, x15)\n    x17 = first(x16)\n    x18 = shape(x12)\n    x19 = canvas(x17, x18)\n    x20 = ofcolor(x12, x17)\n    x21 = ofcolor(x13, x17)\n    x22 = intersection(x20, x21)\n    O = fill(x19, TWO, x22)\n    return O"], [1.0, "def solve_eb9f3875(I):\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [1.0, "def solve_e273c8d5(I):\n    x1 = ONE(I)\n    x2 = branch(x1, ZERO, ORIGIN)\n    x3 = shape(x2)\n    x4 = maximum(x3)\n    x5 = halve(x4)\n    x6 = interval(ONE, x5, ONE)\n    x7 = lbind(power, inbox)\n    x8 = rbind(rapply, x2)\n    x9 = compose(initset, x7)\n    x10 = chain(first, x8, x9)\n    x11 = apply(x10, x6)\n    x12 = repeat(x2, ONE)\n    x13 = combine(x12, x11)\n    x14 = rbind(toobject, I)\n    x15 = compose(color, x14)\n    x16 = apply(x15, x13)\n    x17 = interval(ZERO, x5, ONE)\n    x18 = pair(x17, x16)\n    x19 = compose(invert, first)\n    x20 = order(x18, x19)\n    x21 = apply(last, x20)\n    x22 = mpapply(recolor, x21, x13)\n    O = paint(I, x22)\n    return O"], [1.0, "def solve_fdea3b9d(I):\n    x1 = rot270(I)\n    x2 = leastcolor(x1)\n    x3 = shape(I)\n    x4 = add(TWO, x3)\n    x5 = canvas(x2, x4)\n    x6 = asobject(I)\n    x7 = shift(x6, UNITY)\n    x8 = paint(x5, x7)\n    x9 = rot90(x8)\n    x10 = astuple(x4, x9)\n    x11 = leastcolor(x10)\n    x12 = rot180(x8)\n    x13 = astuple(x4, x12)\n    x14 = leastcolor(x13)\n    x15 = ofcolor(x11, x14)\n    x16 = shift(x15, UP)\n    x17 = ofcolor(x11, x16)\n    x18 = rapply(x17, x15)\n    x19 = ulcorner(x15)\n    x20 = lbind(subtract, x19)\n    x21 = matcher(first, x11)\n    x22 = rbind(sfilter, x21)\n    x23 = lbind(upscale, x10)\n    x24 = chain(x20, x22, x23)\n    x25 = fork(concat, identity, x24)\n    x26 = chain(asobject, x23, x25)\n    x27 = mapply(x26, x18)\n    O = paint(x8, x27)\n    return O"], [1.0, "def solve_6aa6ba82(I):\n    x1 = objects(I, F, T, T)\n    x2 = mapply(d2, x1)\n    O = underfill(I, EIGHT, x2)\n    return O"], [1.0, "def solve_dc356b1a(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_4bf0e74b(I):\n    x1 = ofcolor(I, TWO)\n    x2 = vline(x1)\n    x3 = branch(x2, dmirror, identity)\n    x4 = x3(I)\n    x5 = ofcolor(x4, THREE)\n    x6 = ofcolor(x4, TWO)\n    x7 = center(x5)\n    x8 = hfrontier(x7)\n    x9 = center(x6)\n    x10 = hfrontier(x9)\n    x11 = mostcolor(I)\n    x12 = palette(I)\n    x13 = remove( THREE, x12)\n    x14 = remove( TWO, x13)\n    x15 = other(x14, x11)\n    x16 = replace(x4, THREE, x11)\n    x17 = difference(x8, x15)\n    x18 = underfill(x16, THREE, x17)\n    x19 = replace(x4, TWO, x11)\n    x20 = difference(x10, x19)\n    O = fill(x18, THREE, x20)\n    return O"], [1.0, "def solve_77930746(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = normalize(x2)\n    x4 = lbind(matcher, first)\n    x5 = compose(x4, mostcolor)\n    x6 = fork(sfilter, identity, x5)\n    x7 = fork(difference, identity, x6)\n    x8 = lbind(rbind, upscale)\n    x9 = interval(ONE, FOUR, ONE)\n    x10 = apply(x8, x9)\n    x11 = lbind(recolor, ZERO)\n    x12 = compose(x11, outbox)\n    x13 = fork(combine, identity, x12)\n    x14 = lbind(occurrences, I)\n    x15 = lbind(rbind, subtract)\n    x16 = lbind(apply, increment)\n    x17 = lbind(lbind, shift)\n    x18 = chain(x15, ulcorner, x7)\n    x19 = chain(x14, x13, x7)\n    x20 = fork(apply, x18, x19)\n    x21 = compose(x16, x20)\n    x22 = fork(mapply, x17, x21)\n    x23 = rapply(x10, x3)\n    x24 = mapply(x22, x23)\n    O = paint(I, x24)\n    return O"], [1.0, "def solve_1fbeb872(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_2dca882d(I):\n    x1 = hconcat(I, I)\n    x2 = vconcat(x1, x1)\n    x3 = asindices(x2)\n    x4 = mostcolor(I)\n    x5 = ofcolor(x2, x4)\n    x6 = difference(x3, x5)\n    x7 = mapply(ineighbors, x6)\n    O = underfill(x2, EIGHT, x7)\n    return O"], [1.0, "def solve_18ca7167(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = partition(I)\n    x6 = fork(multiply, height, width)\n    x7 = fork(equality, size, x6)\n    x8 = extract(x5, x7)\n    x9 = color(x8)\n    x10 = palette(I)\n    x11 = remove(x4, x10)\n    x12 = other(x11, x9)\n    x13 = ofcolor(I, x12)\n    x14 = vmirror(x13)\n    x15 = hmirror(x13)\n    x16 = astuple(x14, x15)\n    x17 = subgrid(x9, I)\n    x18 = closet(x16, x4)\n    x19 = extract(x18, x7)\n    x20 = last(x19)\n    x21 = replace(I, x4, x20)\n    x22 = vmirror(x21)\n    x23 = hmirror(x21)\n    x24 = astuple(x22, x23)\n    x25 = combine(x21, x24)\n    x26 = vmirror(x25)\n    x27 = ulcorner(x8)\n    x28 = lrcorner(x8)\n    x29 = shape(x28)\n    x30 = add(x27, x29)\n    x31 =pletion(x26, x30)\n    x32 = ofcolor(x25, x4)\n    x33 = vmirror(x32)\n    x34 = hmirror(x32)\n    x35 = astuple(x33, x34)\n    x36 = combine(x31, x35)\n    x37 = rbind(adjacent, x8)\n    x38 = sfilter(x36, x37)\n    O = extract(x38, x29)\n    return O"], [1.0, "def solve_d749fff7(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [1.0, "def solve_9a0e197c(I):\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = normalize(x2)\n    x4 = ulcorner(x3)\n    x5 = shoot(x4, NEG_UNITY)\n    x6 = shape(x3)\n    x7 = rbind(multiply, x6)\n    x8 = rbind(shoot, UP_RIGHT)\n    x9 = mapply(x7, x5)\n    x10 = mapply(x8, x5)\n    x11 = fill(I, x1, x9)\n    O = fill(x11, x1, x10)\n    return O"], [1.0, "def solve_6b324514(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_440021f1(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_8de40c65(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_36257036(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_21c826a0(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = matcher(size, ZERO)\n    x4 = rbind(sfilter, x3)\n    x5 = lbind( compose, DOWN)\n    x6 = lbind(rbind, sfilter)\n    x7 = chain(x5, x4, x6)\n    x8 = compose(color, merge)\n    x9 = fork(recolor, x8, identity)\n    x10 = compose(x9, x7)\n    x11 = fork(combine, x7, x10)\n    x12 = compose(x11, x11)\n    x13 = fork(lrcorner, x12, toindices)\n    x14 = rbind(contained, x12)\n    x15 = compose(x14, last)\n    x16 = sfilter(x1, x15)\n    x17 = vsplit(I, TWO)\n    x18 = hsplit(I, TWO)\n    x19 = merge(x18)\n    x20 = width(x19)\n    x21 = increment(x20)\n    x22 = interval(ZERO, x21, TWO)\n    x23 = height(x19)\n    x24 = rbind(multiply, x23)\n    x25 = chain(x24, ZERO, last)\n    x26 = fork(recolor, mostcolor, x25)\n    x27 = mapply(x26, x22)\n    x28 = paint(x17, x27)\n    x29 = replace(x28, EIGHT, ONE)\n    x30 = compose(x29, last)\n    x31 = fork(combine, x30, first)\n    x32 = sfilter(x1, x31)\n    x33 = paint(x29, x32)\n    O = fork(connect, first, last)\n    return O"], [1.0, "def solve_8ddfde31(I):\n    x1 = box(I)\n    x2 = shape(I)\n    x3 = halve(x2)\n    x4 = vmirror(I)\n    x5 = lbind(shift, x4)\n    x6 = compose(x5, x3)\n    x7 = interval(THREE, x3, ONE)\n    x8 = apply(x6, x7)\n    x9 = mapply(x5, x8)\n    O = paint(I, x9)\n    return O"], [1.0, "def solve_3069e105(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = fill(x8, ONE, x11)\n    return O"], [1.0, "def solve_07468077(I):\n    x1 = matcher(first, TWO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_22ac083e(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_65375ace(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 =remove(x9, x10)\n    x12 = NEindices(x11)\n    x13 = normalize(x12)\n    x14 = shift(x13, NEG_UNITY)\n    x15 = ulcorner(x9)\n    x16 = lbind(shift, x14)\n    x17 = rbind(multiply, x11)\n    x18 = chain(x17, x16, last)\n    x19 = mapply(x18, x14)\n    x20 = paint(x9, x19)\n    O = rot270(x20)\n    return O"], [1.0, "def solve_541281f2(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(recolor, x13, x14)\n    x16 = compose(size, x15)\n    x17 = matcher(x16, ZERO)\n    x18 = astuple(x5, x17)\n    x19 = canvas(ZERO, x18)\n    x20 = sfilter(x19, x17)\n    x21 = difference(x19, x20)\n    O = paint(x19, x21)\n    return O"], [1.0, "def solve_5c3cdd18(I):\n    x1 = box(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [1.0, "def solve_f7793207(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_1576f1f7(I):\n    x1 = rbind(shoot, UNITY)\n    x2 = rbind(add, UNITY)\n    x3 = chain(x2, x1, lrcorner)\n    x4 = fork(recolor, color, x3)\n    x5 = compose(x4, toindices)\n    x6 = mapply(x5, x1)\n    O = paint(I, x6)\n    return O"], [1.0, "def solve_98342054(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fork(subtract, x10, x11)\n    return O"], [1.0, "def solve_8ce4be3a(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_5d59c959(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_d821e963(I):\n    x1 = crop(I, ORIGIN, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = hperiod(x2)\n    x4 = height(I)\n    x5 = astuple(x4, x3)\n    x6 = ulcorner(x2)\n    x7 = crop(I, x6, x5)\n    x8 = rot90(x7)\n    x9 = double(x4)\n    x10 = divide(x9, x3)\n    x11 = increment(x10)\n    x12 = repeat(x8, x11)\n    x13 = merge(x12)\n    x14 = rot270(x13)\n    x15 = astuple(x4, x9)\n    O = crop(x14, ORIGIN, x15)\n    return O"], [1.0, "def solve_af38330d(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_6f136dd4(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_035fd738(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_3de58a17(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = mapply(dneighbors, x2)\n    x4 = toobject(x3, I)\n    x5 = mostcolor(x4)\n    x6 = palette(I)\n    x7 = remove(x5, x6)\n    x8 = order(x7, identity)\n    x9 = first(x8)\n    x10 = last(x8)\n    x11 = ofcolor(I, x9)\n    x12 = ofcolor(I, x10)\n    x13 = switch(I, x10, x9)\n    x14 = combine(x11, x12)\n    x15 = subgrid(x14, x13)\n    O = trim(x15)\n    return O"], [1.0, "def solve_cd4ca982(I):\n    x1 =alf(I)\n    x2 = vmirror(x1)\n    x3 = equality(x2, I)\n    x4 = branch(x3, ONE, SEVEN)\n    O = canvas(x4, UNITY)\n    return O"], [1.0, "def solve_ac533e15(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [1.0, "def solve_9be4a4ec(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_9c167625(I):\n    O = subgrid(x1, I)\n    return O"], [1.0, "def solve_17fd7da2(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP9RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [1.0, "def solve_7407f0f1(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_9e0a5f2b(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_87472d3a(I):\n    x1 = shape(I)\n    x2 = add(x1, TWO)\n    x3 = canvas(ZERO, x2)\n    x4 = asobject(I)\n    x5 = shift(x4, UNITY)\n    x6 = paint(x3, x5)\n    x7 = asindices(x3)\n    x8 = fork(505, identity, vmirror)\n    x9 = x8(x7)\n    x10 = lbind(shift, x9)\n    x11 = objects(x6, T, T, T)\n    x12 = mapply(x10, x11)\n    x13 = paint(x6, x12)\n    O = paint(x13, x4)\n    return O"], [1.0, "def solve_d40b95f9(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = lbind(shift, x11)\n    x14 = occurrences(I, x12)\n    x15 = mapply(x13, x14)\n    x16 = shift(x15, x12)\n    x17 = ofcolor(I, x9)\n    x18 = prapply(connect, x17, x16)\n    x19 = mapply(x18, x16)\n    x20 = intersection(x15, x19)\n    O = fill(I, x9, x20)\n    return O"], [1.0, "def solve_d03d1ab4(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_1fbdd497(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_a26bfb0c(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_704dbe4e(I):\n    x1 = matcher(first, TWO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_d0a17cae(I):\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    O =paint(x3, x3)\n    return O"], [1.0, "def solve_8b80a64e(I):\n    x1 = subgrid(ONE, I)\n    x2 = partition(x1)\n    x3 = halve(x2)\n    x4 = height(x1)\n    x5 = matcher(last, x4)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x3, x6)\n    x8 = fork(combine, vfrontier, hfrontier)\n    x9 = compose(x8, center)\n    x10 = fork(recolor, color, x9)\n    x11 = mapply(x10, x7)\n    x12 = merge(x3)\n    x13 = paint(x1, x12)\n    O = paint(x13, x11)\n    return O"], [1.0, "def solve_d69de930(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_6157c561(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_b4fce146(I):\n    x1 = rot270(I)\n    x2 = decrement(x1)\n    O = upscale(x3, x2)\n    return O"], [1.0, "def solve_736132e2(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [1.0, "def solve_c4741741(I):\n    O = solve5099\n    return O"], [1.0, "def solve_37b22850(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x888, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_3ad40553(I):\n    x1 = vmirror(I)\n    x2 =hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_87fe7286(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_90522f30(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = rbind(toobject, I)\n    x5 = chain(leastcolor, x4, delta)\n    x6 = rbind(shift, UP)\n    x7 = fork(connect, ulcorner, urcorner)\n    x8 = compose(x6, x7)\n    x9 = rbind(shift, DOWN)\n    x10 = fork(connect, llcorner, lrcorner)\n    x11 = compose(x9, x10)\n    x12 = fork(astuple, x8, x11)\n    x13 = lbind(rbind, manhattan)\n    x14 = compose(x13, delta)\n    x15 = fork(argmin, x12, x14)\n    x16 = fork(combine, delta, x15)\n    x17 = fork(recolor, x5, x16)\n    x18 = mapply(x17, x3)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_af3af83d(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_8c953107(I):\n    x1 = objects(I, T, F, F)\n    x2 = compose(normal, shape)\n    x3 = chain(x2, totuple, palette)\n    x4 = chain(normal, canvas, x3)\n    x5 = matcher(x4, ONE)\n    x6 =sfilter(x1, x5)\n    x7 = fork(equality, toindices, box)\n    x8 = sfilter(x6, x7)\n    x9 = matcher(x7, x8)\n    x10 = sfilter(x1, x9)\n    x11 = fork(multiply, height, width)\n    x12 = subtract(NINE, x11)\n    x13 = multiply(x12, TWO)\n    x14 = power(outbox, x13)\n    x15 = center(x6)\n    x16 = outbox(x6)\n    x17 = objects(I, T, F, F)\n    x18 = colorfilter(x17, ZERO)\n    x19 = lbind(bordering, x16)\n    x20 = compose(normalize, x19)\n    x21 = mfilter(x18, x20)\n    x22 = outbox(x6)\n    x23 = difference(x21, x22)\n    x24 = fill(I, ONE, x32)\n    O = fill(x24, THREE, x23)\n    return O"], [1.0, "def solve_c059cb99(I):\n    O = upscale(I, TWO)\n    return O"], [1.0, "def solve_6bc7072c(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [1.1, "def solve_a6f2ffd1(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = apply(x15, x13)\n    x17 = mapply(x13, x16)\n    x18 = height(x3)\n    x19 = divide(x18, x14)\n    x20 = increment(x19)\n    x21 = width(x3)\n    x22 = divide(x21, x14)\n    x23 = increment(x22)\n    x24 = interval(ZERO, x23, ONE)\n    x25 = product(x24, x24)\n    x26 = rbind(multiply, x19)\n    x27 = apply(x26, x25)\n    x28 = toindices(x3)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x27)\n    x31 =palette(x30)\n    x32 = other(x31, x22)\n    x33 = partition(x3)\n    x34 = ofcolor(x33, x32)\n    x35 = mapply(toindices, x34)\n    x36 = toindices(x3)\n    x37 = apply(x36, x32)\n    x38 = mapply(x27, x37)\n    x39 = papply(shift, x35, x38)\n    x40 = mapply(toobject, x33)\n    x"], [1.1, "def solve_51d21435(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = power(x37, TWO)\n    x39 = lbind(shift, x31)\n    x40 = fork(recolor"], [1.1, "def solve_9366b8e9(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = rot3599 flip(I)\n    x2 = rbind(ofcolor, ZERO)\n    x3 = compose(lowermost, x2)\n    x4 = matcher(x3, ZERO)\n    x5 = extract(x1, x4)\n    x6 = apply(uppermost, x5)\n    x7 = lbind(subtract, x6)\n    x8 = chain(increment, x7, initset)\n    x9 = lbind(fork, add)\n    x10 = lbind(x9, identity)\n    x11 = lbind(lbind, astuple)\n    x12 = lbind(rbind, astuple)\n    x13 = compose(x11, x12)\n    x14 = lbind(compose, x8)\n    x15 = dmirror(x14)\n    x16 = lbind(compose, x10)\n    x17 = x16(x15)\n    x18 = compose(x14, x17)\n    x19 = lbind(rapply, x13)\n    x20 = compose(initset, x18)\n    x21 = chain(first, x19, x20)\n    x22 = compose(x11, x21)\n    x23 = fork(remove, x22, x15)\n    x24 = compose(x23, x258)\n    x25 = size(x1)\n    x26 = height(x25)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = lbind(apply, maximum)\n    x29 = apply(x28, x27)\n    x30 = lbind(sfilter, x21)\n    x31 = lbind(mapply, subtract)\n    x32 = rbind(sfilter, x26)\n    x33 = chain(x30, x31, x32)\n    x34 = compose(x33, x24)\n    x35 = chain(positive, last, x34)\n    x36 = lbind(s84, x43)\n    x37 = chain(x35, x36, xa)\n    x38 = lbind(compose, x10)"], [1.1, "def solve_ffb70173(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = palette(I)\n    x3 = lbind(sfilter, x1)\n    x4 = lbind(compose, flip)\n    x5 = lbind(matcher, first)\n    x6 = chain(x3, x4, x5)\n    x7 = rbind(compose, asobject)\n    x8 = lbind(mirror, x1)\n    x9 = chain(x7, x8, x6)\n    x10 = fork(combine, x7, x9)\n    x11 = fork(equality, identity, x10)\n    x12 =222(x2, I)\n    x13 = rbind(multiply, TWO)\n    x14 = chain(x13, x11, x12)\n    x15 = fork(4444, x14, xExample output:\n    854978\n    2215\n    \"\"\"\n    x1 = fork(multiply, height, width)\n    x2 = chain(palette, partition, x1)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = lbind(colorcount, I)\n    x6 = argmin(x4, x5)\n    x7 = repeat(x6, ONE)\n    x8 = merge(x7)\n    x9 = color(x8)\n    x10 = astuple(x6, x13)\n    x11 = astuple(x9, x10)\n    x12 = combine(x10, x11)\n    x13 = mapply(x8, x12)\n    x14 = astuple(x6, x13)\n    x15 = canvas(x9, x14)\n    x16 = astuple(x15, x13)\n    x17 = combine(x16, x13)\n    x18 = sizefilter(x17, ONE)\n    x19 = merge(x18)\n    x20 = palette(x19)\n    x21 = double(EIGHT)\n    x22 = astuple(x21, x20)\n    x23"], [1.1, "def solve_3357d1a1(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_e5af63a6(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, vsplit)\n    x3 = x2(I)\n    x4 = asobject(x3)\n    x5 = shift(x4, DOWN)\n    x6 = apply(initset, x5)\n    x7 = remove(x5, x6)\n    x8 = input:\n    7777786651\n    7770886856\n    \"\"\"\n    x1 =446(argmin, identity)\n    x2 =44fgpartition(x3)\n    x3 = merge(x2)\n    x4 = cover(x3, x4)\n    x5 =805(contained, DOWN)\n    x6 = portrait(x5)\n    x7 = branch(x6, identity, hmirror)\n    x8 = x7(x4)\n    x9 = x7(x8)\n    x10 = branch(x6, identity, vmirror)\n    x11 = x10(x8)\n    x12 = x10(x9)\n    x13 = hmirror( x11)\n    x14 = hmirror(x12)\n    x15 = shift(x1, x14)\n    x16 = paint(x5, x15)\n    x17 =8(argmax)\n    x18 = color(x17)\n    x19 =883afar(x17, x13)\n    x20 = paint(x16, x19)\n    x21 = objects(x20, T, F, T)\n    x22 = compose(flip, x1)\n    x23 = sfilter(x21, x22)\n    x24 = order(x23, uppermost)\n    x25 = astuple(x24, x24)\n    x26 = remove(x25, x24)\n    x27 = compose(last, last)\n    x28 = rbind(argmin, x27)\n    x29 = compose(first, last)\n    x30 = lbind(9, x25)\n    x31 = compose(x29, x30)\n    x32 = fork(astuple, x31, x21)"], [1.1, "def solve_b9911307(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(normalize, x3)\n    x5 = merge(x3)\n    x6 = cover(I, x5)\n    x7 = lbind(compose, flip)\n    x8 = lbind(matcher, first)\n    x9 = chain(x7, x8, mostcolor)\n    x10 = fork(sfilter, identity, x9)\n    x11 = chain(identity, x10, first)\n    x12 = lbind(lbind, shift)\n    x13 = rbind(x12, RIGHT)\n    x14 = chain(x13, x12, x11)\n    x15 = lbind(lbind, shift)\n    x16 = rbind(x15, RIGHT)\n    x17 = chain(x16, x12, x11)\n    x18 = fork(sfilter, identity, x14)\n    x19 = fork(matcher, first, x17)\n    x20 = compose(flip, x18)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, x19)\n    x23 = fork(compose, x17, x22)\n    x24 = lbind(rapply, x83)\n    x25 = chain(ineighbors, x24, x11)\n    x26 = fork(rapply, x23, x25)\n    x27 = compose(cmirror, x26)\n    x28 = compose(hmirror, x27)\n    x29 = fork(compose, x28, x11)\n    x30 = compose(vmirror, x29)\n    x31 = fork(rapply, x30, x11)\n    x32 = compose(box, x31)\n    x33 = fork(difference, x32, x26)\n    x34 = compose(x33, x28)\n    x35 = fork(pair, x24, x35)\n    x36 = x35(x6)\n    x37 = x35(x"], [1.1, "def solve_322fe984(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = compose(x12, x6)\n    x14 = apply(x13, x1)\n    x15 = fork(intersection, x12, size)\n    x16 = compose(size, x15)\n    x17 = matcher(x16, ZERO)\n    x18 = fork(both, x15, x17)\n    x19 = extract(x14, x18)\n    x20 = first(x19)\n    x21 = last(x19)\n    x22 = x20(I)\n    x23 =:\n    x22 = fgpartition(x22)\n    x24 = merge(x23)\n    x25 =    x24(x22)\n    x26 = ulcorner(x25)\n    x27 = subgrid(x25, x22)\n    x28 = replace(x27, ZERO, THREE)\n    x29 = asindices(x28)\n    x30 = shift(x29, x26)\n    x31 = ulcorner(x15)\n    x32 =84corner(x15)\n    x33 = initset(x32)\n    x34 = Fgpartition(x33)\n    x35 = merge(x34)\n    x36 = cover(x22, x35)\n    x37 = insert(x26, x36)\n    x38 = width(x37)\n    x39 = tojvec(x38)\n    x40 = shift(x31, x39)\n    x41 = ulcorner(x"], [1.1, "def solve_a4f6f0d6(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_ad07e1d8(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = order(x1, x2)\n    x4 = lbind(apply, last)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(x3)\n    x9 = x7(x4)\n    x10 = x7(x9)\n    x11 = fork(equality, toindices, box)\n    x12 = fork(equality, toindices, x8)\n    x13 = fork(equality, toindices, x10)\n    x14 = lbind(index, I)\n    x15 = compose(x14, uppermost)\n    x16 = matcher(x15, x11)\n    x17 = fork(either, x13, x16)\n    x18 = compose(x17, vline)\n    x19 = lbind(add, x8)\n    x20 = x19(x16)\n    x21 = matcher(x19, x20)\n    x22 = compose(flip, x21)\n    x23 = fork(both, x18, x22)\n    x24 = extract(x3, x23)\n    x25 = subgrid(x24, I)\n    x26 = width(x25)\n    x27 = subtract(x26, TWO)\n    x28 = tojvec(x27)\n    x29 = shift(x25, x28)\n    x30 = paint(x25, x29)\n    x31 = double(x30)\n    x32 = interval(ZERO, x31, ONE)\n    x33 = rbind(contained, x32)\n    x34 = compose(x33, last)\n    x35 = rbind(sfilter, x34)\n    x36 = lbind(rbind, shift)\n    x37 = chain(x15, x35, x36)\n    x38 = fork(combine, x35, x37)\n    x39 = fork(apply, x38, x34)\n"], [1.1, "def solve_17bd76f7(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = fork(multiply, height, width)\n    x2 = decrement(x1)\n    x3 = astuple(x2, THREE)\n    x4 = crop(I, ORIGIN, x3)\n    x5 =477(x4)\n    x6 = vmirror(x5)\n    x7 = hconcat(x5, x6)\n    x8 = astuple(x2, ONE)\n    x9 = crop(x7, DOWN, x8)\n    x10 = vmirror(x9)\n    x11 = papply(pair, x7, x10)\n    x12 = apply(x11, x11)\n    x13 = papply(pair, x7, x12)\n    x14 = apply(x13, x11)\n    x15 = papply(pair, x7, x14)\n    x16 = apply(x15, x11)\n    x17 = papply(pair, x7, x16)\n    x18 = apply(x17, x11)\n    x19 = palette(x18)\n    x20 = lbind(colorcount, x18)\n    x21 = compose(x20, ofcolor)\n    x22 = argmin(x19, x21)\n    x23 = rbind(colorcount, x22)\n    x24 =contained(x23, x18)\n    x25 = ofcolor(x18, x22)\n    x26 = difference(x25, x26)\n    x27 = x21(x26)\n    x28 = asindices(x27)\n    x29 = outbox(x28)\n    x30 = subgrid(x29, x7)\n    x31 = asindices(x30)\n    x32 = box(x31)\n    x33 = hmirror(x32)\n    x34 = vmirror(x32)\n    x35 = dmirror(x33)\n    x36 =b548(x34, x1)\n    x37 = ofcolor(x35, x22)\n    x38 = mapply(x36, x37)\n    x39 = fill(x30, x22, x"], [1.1, "def solve_a109ebf3(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = x18(x21)\n    x23 = argmax(x22, numcolors)\n    x24 = argmin(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape, x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind(multiply"], [1.1, "def solve_d07410d2(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = matcher(x22, x21)\n    x24 = rbind(sfilter, x23)\n    x25 = chain(merge, x24, x22)\n    x26 = lbind(recolor, x18)\n    x27 = lbind(mapply, vfrontier)\n    x28 = rbind(ofcolor, x18)\n    x29 = chain(x26, x27, x28)\n    x30 = fork(paint, x25, x29)\n    x31 = fork(paint, x30, x29)\n    x32 =79mirror(x7)\n    x33 = rbind(\"\"\"\n    x34 = rbind(contained, x33)\n    x35 = compose(x34, last)\n    x36 = sfilter(x32, x35)\n    x37 = sfilter(x32, x36)\n    x38 = fork(either, x32, x37)\n"], [1.1, "def solve_c4d08cfa(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = shape(I)\n    x2 = multiply(THREE, x1)\n    x3 = mostcolor(I)\n    x4 = canvas(x3, x2)\n    x5 = objects(I, F, F, T)\n    x6 = merge(x5)\n    x7 = mostcolor(x6)\n    x8 = first(x5)\n    x9 = matcher(first, x7)\n    x10 = sfilter(x8, x9)\n    x11 = normalize(x10)\n    x12 = delta(x11)\n    x13 = first(x12)\n    x14 = subtract(ONE, x13)\n    x15 = asobject(I)\n    x16 = shape(I)\n    x17 = double(x16)\n    x18 = multiply(x14, x17)\n    x19 = shift(x15, x18)\n    x20 = paint(x4, x19)\n    x21 = objects(x20, F, F, T)\n    x22 = lbind(mapply, dneighbors)\n    x23 = matcher(first, x11)\n    x24 = rbind(sfilter, x23)\n    x25 = chain(x22, delta, x24)\n    x26 = ineighbors(ORIGIN)\n    x27 = apply(double, x26)\n    x28 = rbind(apply, x27)\n    x29 = lbind(lbind, shift)\n    x30 = compose(x28, x29)\n    x31 = lbind(rbind, adjacent)\n    x32 = compose(x31, x25)\n    x33 = fork(extract, x30, x32)\n    x34 = fork(combine, identity, x33)\n    x35 = compose(backdrop, x34)\n    x36 = double(x13)\n    x37 = decrement(x36)\n    x38 = multiply(x37, FOUR)\n    x39 = rbind(shift, x38)\n    x40 = compose(x39, x35)\n    x41 = fork(combine, x35, x40)"], [1.1, "def solve_a98f4174(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = replace(I, ZERO, TWO)\n    x2 = lbind(apply, maximum)\n    x3 = lbind(colorfilter, x1)\n    x4 = chain(x2, x3, color)\n    x5 = fork(paint, identity, x4)\n    x6 = chain(x5, size, x4)\n    x7 = matcher(x6, ONE)\n    x8 = extract(x1, x7)\n    x9 = x6(x8)\n    x10 = objects(I, T, T, T)\n    x11 = rbind(objects, F)\n    x12 = rbind(x11, F)\n    x13 = rbind(x12, T)\n    x14 = chain(x13, x11, x6)\n    x15 = rbind(toobject, x5)\n    x16 = chain(palette, x15, x14)\n    x17 = fork(x16, x16, color)\n    x18 = extract(x10, x17)\n    x19 = lbind(colorcount, I)\n    x20 = argmin(x18, x19)\n    x21 = rbind(colorcount, x20)\n    x22 = chain(x1, x21, palette)\n    x23 = argmin(x10, x22)\n    x24 = rbind(contained, x23)\n    x25 = rbind(rapply, x24)\n    x26 = chain(first, x25, initset)\n    x27 = fork(rapply, x26, identity)\n    x28 = fork(first, x27, last)\n    x29 = matcher(x28, x11)\n    x30 = extract(x10, x29)\n    x31 = x30(I)\n    x32 = first(x31)\n    x33 = last(x31)\n    x34 = ofcolor(x33, x20)\n    x35 = difference(x34, x32)\n    x36 = cover(x31, x35)\n    x37 = apply(initset, x339)\n    x38 = insert(x32,"], [1.1, "def solve_ae5ab87f(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, F, T, T)\n    x6 = rbind(509999\n    5509948495\n    55978959944\n    5899294555\n    5558555554\n    5869995449\n    4854445555\n    5555554999\n    6856555584\n    8585522254\n    5528525884\n    \"\"\"\n    x1 = matcher(identity, x1)\n    x2 = rbind(sfilter, x7)\n    x3 = compose(size, x2)\n    x4 = argmax(x5, x3)\n    x5 = palette(x4)\n    x6 = remove(ZERO, x5)\n    x7 = lbind(colorcount, x4)\n    x8 = argmax(x6, x7)\n    x9 = ulcorner(x4)\n    x10 = contained(x9, x4)\n    x11 = contained(x7, x4)\n    x12 = branch(x10, UNITY, ONE)\n    x13 = branch(x11, NEG_UNITY, ONE)\n    x14 =312(x12, x13)\n    x15 = subgrid(x14, I)\n    x16 = width(x15)\n    x17 = subtract(x16, TWO)\n    x18 = upscale(x15, x17)\n    x19 = height(x15)\n    x20 = divide(x19, x17)\n    x21 = x18(x20)\n    x22 = subtract(x21, TWO)\n    x23 = divide(x22, x17)\n    x24 = repeat(x23, x8)\n    x25 = merge(x24)\n    x26 = cover(x15, x25)\n    x27 = lbind(repeat, x26)\n    x28 = compose(x27, tojvec)\n    x29 = matcher(x28, x211)\n    x30"], [1.1, "def solve_ab6a33f7(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_56f6fe7f(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = trim(I)\n    x2 = tophalf(x1)\n    x3 = lefthalf(x2)\n    x4 = tophalf(x3)\n    x5 = dmirror(x4)\n    x6 = bottomhalf(x1)\n    x7 = lefthalf(x6)\n    x8 = bottomhalf(x7)\n    x9 = height(x9)\n    x10 = width(x9)\n    x11 = hfrontier(ORIGIN)\n    x12 = fill(x3, ZERO, x11)\n    x13 = hfrontier(x10)\n    x14 = fill(x12, ZERO, x13)\n    x15 = compress(x14)\n    x16 = width(x9)\n    x17 = height(x9)\n    x18 = decrement(x17)\n    x19 = tojvec(x18)\n    x20 = connect(ORIGIN, x19)\n    x21 = fill(x10, ZERO, x20)\n    x22 = vconcat(x23, x21)\n    x23 = width(x9)\n    x24 = subtract(x18, x23)\n    x25 = tojvec(x24)\n    x26 = vitate(x25, x24)\n    x27 = height(x9)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = connect(x25, x29)\n    x31 = fill(x10, ZERO, x30)\n    x32 = lbind(16, x26)\n    x33 = tojvec(x32)\n    x34 = v reflectors(x33)\n    x35 = cover(x31, x34)\n    x36 = astuple(x29, x306)\n    x37 = crop(x35, x36, x34)\n    x38 = fork(combine, vfrontier, hfrontier)\n    x39 = compose(x38, tojvec)\n    x40 = lbind(extract, x35)\n    x41 = chain(first,"], [1.1, "def solve_d76107ea(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(both, x29, x30)\n    x34 = fork(both, x31, x32)\n    x35 = fork(both, x33, x34)\n    x36 = compose(x"], [1.1, "def solve_a260c865(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = sizefilter(x1, FOUR)\n    x3 = fork(equality, height, width)\n    x4 = extract(x2, x3)\n    x5 = other(x1, x4)\n    x6 = color(x5)\n    x7 = astuple(ONE, THREE)\n    x8 = canvas(x6, x7)\n    x9 = sizefilter(x1, ONE)\n    x10 = initset(x4)\n    x11 = insert(x6, x9)\n    x12 = insert(x8, x11)\n    x13 = hmirror(x12)\n    x14 = toindices(x13)\n    x15 = lbind(rbind, contained)\n    x16 = lbind(compose, flip)\n    x17 = lbind(matcher, first)\n    x18 = chain(x15, x16, x17)\n    x19 = lbind(contained, TWO)\n    x20 = compose(x19, first)\n    x21 = lbind(sfilter, x17)\n    x22 = compose(x21, x18)\n    x23 = fork(contained, identity, x22)\n    x24 = compose(x17, toindices)\n    x25 = fork(compose, x24, x23)\n    x26 = lbind(sfilter, x12)\n    x27 = compose(x26, x25)\n    x28 = fork( inconsistenciesensor vsplit, identity, x27)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, hmirror)\n    x31 = fork(equality, identity, vmirror)\n    x32 = lbind(index, I)\n    x33 = compose(x32, palette)\n    x34 = remove(x33, x5)\n    x35 =Resourceindex(I, x10)\n    x36 = other(x34, x35)\n    x37 = apply(x36, x32)\n    x38 = astuple(dmirror, cmirror)\n    x"], [1.1, "def solve_0027cdb2(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_904af7cc(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = compose(first, last)\n    x41 = chain(corners, subgrid, x40)\n    x42 = compose(x37"], [1.1, "def solve_def361e3(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, ONE)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)"], [1.1, "def solve_ba6cbe34(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x50 = lbind(ofcolor, I)\n    x51 = chain(x8, x9, x50)\n    x52 = rbind(matcher, vline)\n    x53 = compose(x52, x41)\n    x54 = chain(flip, x53, x41)\n    x55 = sfilter(x6, x49)\n    x56 = sfilter(x6, x540)\n    x57 = height(x556)\n    x58 =6129801(x57)\n    x59 = chain(lowermost, x50, x58)\n    x60 = matcher(x59, ZERO)\n    x61 = objects(I, T, F, F)\n    x62 = sfilter(x61, x60)\n    x63 = argmax(x62, x25)\n    x64 = subgrid(x63, I)\n    x65 = chain( decreased width, decrement,\n    x66 = matcher(x65, x34)\n    x67 = fork(greater, x66, identity)\n    x68 = sfilter(x67, x60)\n    x69 = argmax(x68, x67)\n    x70 = matcher(first, x04)\n    x71 = compose(flip, x70)\n    x72 = sfilter(x41, x70)\n    x73 = argmax(x72, x27)\n    x74 = leastcolor(x73)\n    x75 =,(x74, x110)\n    x76 = ofcolor(x76, x4)\n    x77 = mapply(vfrontier, x76)\n    x78 = mapply(hfrontier, x76)\n    x79 = size"], [1.1, "def solve_72bbec99(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, size)\n    x3 = lowermost(x2)\n    x4 = height(x2)\n    x5 = equality(x4, x3)\n    x6 = branch(x5, lefthalf, tophalf)\n    x7 = branch(x5, righthalf, bottomhalf)\n    x8 = branch(x5, hconcat, vconcat)\n    x9 = x6(I)\n    x10 = x7(I)\n    x11 = index(x9, ORIGIN)\n    x12 = shape(x10)\n    x13 = decrement(x12)\n    x14 = index(x10, x13)\n    x15 = mostcolor(I)\n    x16 = mostcolor(I)\n    x17 = palette(I)\n    x18 = remove(x11, x17)\n    x19 = remove(x14, x18)\n    x20 = remove(x16, x19)\n    x21 = first(x20)\n    x22 = replace(x9, x21, x11)\n    x23 = branch(x5, width, height)\n    x24 = astuple(x23, x22)\n    x25 = crop(x9, ORIGIN, x24)\n    x26 = hmirror(x25)\n    x27 = vconcat(x25, x26)\n    x28 = upscale(x27, TWO)\n    x29 = merge(x28)\n    x30 = palette(x29)\n    x31 = double(x30)\n    x32 = interval(ZERO, x31, ONE)\n    x33 = upscale(x27, x32)\n    x34 =60c8cdece60(x28)\n    x35 = lbind(multiply, x34)\n    x36 = apply(x35, x30)\n    x37 = lbind(shift, x29)\n    x38 = mapply(x37, x36)\n    x39 = fill(x22, x21, x38)\n    x40 = replace(x39"], [1.1, "def solve_ebe908fa(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_0112343a(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = lbind(matcher, first)\n    x2 = compose(x1, mostcolor)\n    x3 = fork(sfilter, identity, x2)\n    x4 = fork(difference, identity, x3)\n    x5 = lbind(rbind, upscale)\n    x6 = rbind(x5, toindices)\n    x7 = compose(x6, x4)\n    x8 = fork(intersection, identity, x7)\n    x9 = compose(size, x8)\n    x10 = valmax(x1, x9)\n    x11 = matcher(x9, x10)\n    x12 =flip(x11, ONE)\n    x13 = sfilter(x1, x12)\n    x14 = order(x13, identity)\n    x15 = apply(x5, x14)\n    x16 = ofcolor(x15, ONE)\n    x17 = ofcolor(x15, TWO)\n    x18 = apply(x11, x17)\n    x19 = apply(x15, x18)\n    x20 = ofcolor(x19, ONE)\n    x21 = rbind(manhattan, DOWN)\n    x22 = chain(x19, x21, initset)\n    x23 = fork(add, identity, x22)\n    x24 = chain(initset, x18, x23)\n    x25 = fork(insert, identity, x24)\n    x26 = lbind(rbind, manhattan)\n    x27 = compose(x26, initset)\n    x28 = fork(argmin, x25, x27)\n    x29 = fork(gravitate, initset, x28)\n    x30 = compose(crement, x29)\n    x31 = fork(add, identity, x30)\n    x32 = fork(gravitate, initset, x33)\n    x33 = compose(crement, x32)\n    x34 = fork(add, identity, x33)\n    x35 = fork(gravitate, toindices, x34)\n    x36 = fork(add, identity, x35)\n    x37"], [1.1, "def solve_9eb377d3(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_e1604aef(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = matcher(first, ZERO)\n    x2 =044(I, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = compose(normalize, x3)\n    x5 = apply(x4, x2)\n    x6 = astuple(NEG_TWO, NEG_TWO)\n    x7 = shift(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = rbind(toobject, I)\n    x11 = rbind(shoot,ORIGIN)\n    x12 = compose(x10, x11)\n    x13 = rbind(colorcount, SIX)\n    x14 = chain(x13, double, x12)\n    x15 = fork(equality, x14, identity)\n    x16 = chain(numcolors, x15, fgpartition)\n    x17 = matcher(x16, FIVE)\n    x18 = extract(x9, x17)\n    x19 = neighbors(ORIGIN)\n    x20 = insert(ORIGIN, x19)\n    x21 = rbind(shoot, ZERO_BY_TWO)\n    x22 = rbind(shift, x21)\n    x23 = pair(x20, x22)\n    x24 = chain(x entire, x23, last)\n    x25 = rbind(colorcount, SEVEN)\n    x26 = matcher(x25, EIGHT)\n    x27 = fork(668, x26, identity)\n    x28 = chain(x22, x27, first)\n    x29 = lbind(fork, outbox)\n    x30 = rbind(x29, x28)\n    x31 = lbind(fork, recolor)\n    x32 = lbind(x31, x30)\n    x33 = rbind(shift, x29)\n    x34 = lbind(chain, x33)\n    x35 = lbind(x34, x28)\n    x36 = lbind(rbind, mapply)\n    x37 = compose(x35, x36)"], [1.1, "def solve_994c0c1a(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(re"], [1.1, "def solve_c4ce205e(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shape(I)\n    x5 = maximum(x4)\n    x6 = canvas(ZERO, x5)\n    x7 = asindices(x6)\n    x8 = normalize(x7)\n    x9 = to\n    74dd113061\n    x10 = paint(x6, x9)\n    x11 = height(x10)\n    x12 = width(x10)\n    x13 = fgpartition(x10)\n    x14 = merge(x13)\n    x15 = width(x10)\n    x16 = height(x14)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = lbind(multiply, x5)\n    x19 = apply(x18, x17)\n    x20 = lbind(multiply, x4)\n    x21 = apply(x20, x17)\n    x22 = lbind(interval, ZERO)\n    x23 = rbind(x22, ONE)\n    x24 = lbind(interra, x2)\n    x25 = rbind(x24, ONE)\n    x26 = lbind(colorfilter, x36)\n    x27 = chain(x23, x25, x26)\n    x28 = lbind(78, x multiply)\n    x29 = chain(x28, x27, last)\n    x30 = fork(recolor, first, x29)\n    x31 = astuple(SIX, THREE)\n    x32 = astuple(FOUR, EIGHT)\n    x33 = astuple(ONE, DOWN)\n    x34 = initset(x33)\n    x35 = insert(x34, x32)\n    x36 = insert(x30, x35)\n    x37 = apply(x32, x36)\n    x38 = papply(recolor, x37)\n    x39 = lbind(shift, x8)\n    x40 = mapply(x39, x38)\n    O = paint(x10,"], [1.1, "def solve_caa8cb0f(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = asobject(I)\n    x6 = matcher(first, x4)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x5, x7)\n    x9 = hperiod(x8)\n    x10 = vperiod(x8)\n    x11 = width(I)\n    x12 = width(x8)\n    x13 = subtract(x11, x12)\n    x14 = add(x13, TWO)\n    x15 = height(I)\n    x16 = height(x8)\n    x17 = subtract(x15, x16)\n    x18 = add(x17, TWO)\n    x19 = rbind(multiply, x9)\n    x20 = invert(x14)\n    x21 = interval(x20, x14, ONE)\n    x22 = apply(x19, x21)\n    x23 = rbind(multiply, x10)\n    x24 = invert(x18)\n    x25 = interval(x24, x18, ONE)\n    x26 = apply(x23, x25)\n    x27 = product(x26, x22)\n    x28 = lbind(shift, x8)\n    x29 = mapply(x28, x27)\n    x30 = index(I, ORIGIN)\n    x31 = equality(x30, x4)\n    x32 = flip(x31)\n    x33 = asindices(I)\n    x34 = urcorner(x33)\n    x35 = index(I, x34)\n    x36 = equality(x35, x4)\n    x37 = flip(x36)\n    x38 = asindices(I)\n    x39 = lrcorner(x38)\n    x40 = index(I, x39)\n    x41 = equality(x40, x4)\n    x42 = flip(x41)\n    x43 = asindices("], [1.1, "def solve_4a9e9729(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = astuple(SIX, TWO)\n    x2 = size(x1)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, hmirror, vmirror)\n    x5 = x4(I)\n    x6 = canvas(ZERO, x1)\n    x7 = partition(x6)\n    x8 = sizefilter(x7, ONE)\n    x9 = merge(x8)\n    x10 = palette(x9)\n    x11 = totuple(x10)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = switch(x6, x12, x13)\n    x15 = ofcolor(x14, x12)\n    x16 = inbox(x15)\n    x17 = recolor(ZERO, x16)\n    x18 = double(x2)\n    x19 = add(x18, THREE)\n    x20 = initset(x19)\n    x21 = recolor(x12, x20)\n    x22 =434(x21, x15)\n    x23 = product(x17, x22)\n    x24 = mapply(toindices, x17)\n    x25 = mapply(x24, x23)\n    x26 = flip(x25)\n    x27 = dmirror(x26)\n    x28 = toobject(x27, x14)\n    x29 = hperiod(x28)\n    x30 = shift(x25, x29)\n    x31 = toobject(x27, x14)\n    x32 = vperiod(x31)\n    x33 = hperiod(x32)\n    x34 = neighbors(ORIGIN)\n    x35 = mapply(neighbors, x34)\n    x36 = astuple(x32, x33)\n    x37 = rbind(shift, x36)\n    x38 = combine(x30, x37)\n    x39 = fill(x6, x12, x38)\n    x40 = shift(x31, x39)\n    x41 = paint(x39, x40)"], [1.1, "def solve_35afca6b(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = objects(I, T, T, T)\n    x2 =389ca(I)\n    x3 = subgrid(x2, I)\n    x4 = height(x3)\n    x5 = width(x3)\n    x6 = vsplit(x3, x4)\n    x7 = neighbors(ORIGIN)\n    x8 = toindices(x7)\n    x9 = compose(hupscale, x8)\n    x10 = power(x9, TWO)\n    x11 = shape(x3)\n    x12 = maximum(x11)\n    x13 = lbind(replace, x12)\n    x14 =0000000000000000(x\n    x15 = lbind(downscale, x10)\n    x16 = compose(x14, x15)\n    x17 = lbind(power, equality)\n    x18 = chain(x17, x13, x16)\n    x19 = lbind(rapply, x8)\n    x20 = compose(initset, x18)\n    x21 = chain(first, x19, x20)\n    x22 = compose(flip, x21)\n    x23 = fork(22, x18, x22)\n    x24 = fork(combine, x21, x23)\n    x25 = compose(x4, x24)\n    x26 = palette(x2)\n    x27 = palette(x10)\n    x28 = intersection(x26, x27)\n    x29 = argmax(x28, x25)\n    x30 = urcorner(x29)\n    x31 = invert(x30)\n    x32 = shift(x29, x31)\n    x33 = apply(x25, x32)\n    x34 = shift(x32, x33)\n    x35 = ofcolor(x30, xpal)\n    x36 = ofcolor(x30, x66666666\n    x37 = lbind(index, x30)\n    x38 = compose(x37, urcorner)\n    x39 = cover(x30, x33)\n    x40 = x38(x39)\n    x41 = ofcolor("], [1.1, "def solve_06304daa(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 =173(I)\n    x2 = tophalf(x1)\n    x3 = lefthalf(x2)\n    x4 = tophalf(x3)\n    x5 = righthalf(x4)\n    x6 = bottomhalf(x4)\n    x7 = lefthalf(x6)\n    x8 = bottomhalf(x6)\n    x9 = righthalf(x8)\n    x10 = index(I, ORIGIN)\n    x11 = width(I)\n    x12 = decrement(x11)\n    x13 = tojvec(x12)\n    x14 = index(I, x13)\n    x15 = height(I)\n    x16 = decrement(x15)\n    x17 = toivec(x16)\n    x18 = index(I, x17)\n    x19 = shape(I)\n    x20 = decrement(x19)\n    x21 = tojvec(x20)\n    x22 = index(I, x21)\n    x23 = compress(I)\n    x24 = asindices(x23)\n    x25 = box(x24)\n    x26 = corners(x24)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, x23)\n    x29 = color(x28)\n    x30 = palette(x2)\n    x31 = other(x30, x29)\n    x32 = replace(x3, x31, x\n    x33 = x31(x2)\n    x34 = tojvec(x33)\n    x35 = shift(x34, x36)\n    x36 = combine(x28, x35)\n    x37 = rbind(contained, x36)\n    x38 = compose(x37, first)\n    x39 = sfilter(x19, x38)\n    x40 = difference(x19, x39)\n    x41 = fill(I, x31, x40)\n    x42 = compose(size, first)\n    x43 = objects(x41, T, F, F)\n    x44 = rbind"], [1.1, "def solve_98b670ae(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = lefthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = righthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(I)\n    x18 = halve(x17)\n    x19 = canvas(x16, x18)\n    x20 = matcher(first, x16)\n    x21 = compose(flip, x20)\n    x22 = rbind(sfilter, x21)\n    x23 = compose(x22, asobject)\n    x24 = x24(x2)\n    x25 = x24(x6)\n    x26 = x23(x24)\n    x27 = x25(x6)\n    x28 = shape(x27)\n    x29 = canvas(x24, x28)\n    x30 = paint(x29, x27)\n    x31 = rbind(shift, x38)\n    x32 = compose(x31, dneighbors)\n    x33 = initset(x32)\n    x34 = recolor(x16, x33)\n    x35 = dmirror(x30)\n    x36 = paint(x35, x34)\n    x37 = combine(x32, x36)\n    x38 = fork(combine, vfrontier, hfrontier)\n    x39 = compose(x38, x37)\n    x40 = fork(combine, x43, x39)\n    x41 = apply(x40, x33)\n    x42 = mapply(x37, x41)\n"], [1.1, "def solve_47bcfd76(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_717d29a0(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_016bda61(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, ulcorner)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, dmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, ulcorner)\n    x13 = rbind(shift, NEG_UNITY)\n    x14 = compose(x13, vmirror)\n    x15 = rbind(shift, NEG_UNITY)\n    x16 = compose(x15, hmirror)\n    x17 = rbind(shift, DOWN_LEFT)\n    x18 = compose(x17, hmirror)\n    x19 = rbind(shift, UP_RIGHT)\n    x20 = compose(x19, vmirror)\n    x21 = rbind(shift, RIGHT)\n    x22 = compose(x21, hmirror)\n    x23 = rbind(shift, DOWN)\n    x24 =compose(x23, x8)\n    x25 = fork(compose, x14, x20)\n    x26 = fork(compose, x24, x12)\n    x27 = compose(x26, x5)\n    x28 = rbind(shift, LEFT)\n    x29 = rbind(shift, RIGHT)\n    x30 = compose(x28, x9)\n    x31 = compose(x29, x7)\n    x32 = fork(compose, x30, x31)\n    x33 = fork(compose, x32, x5)\n    x34 = compose(x33, x5)\n    x35 = fork(contained, RIGHT, last)\n    x36 = fork(contained, contained, x35)\n    x"], [1.1, "def solve_236abd13(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = chain(positive, size, dedupe)\n    x2 = x1(I)\n    x3 = x1(x2)\n    x4 = height(x3)\n    x5 = width(x3)\n    x6 = partition(x3)\n    x7 = ofcolor(x3, ONE)\n    x8 = ofcolor(x3, FOUR)\n    x9 = center(x7)\n    x10 = delta(x7)\n    x11 = center(x8)\n    x12 = subtract(x10, x11)\n    x13 = multiply(x12, x4)\n    x14 = power(x13, TWO)\n    x15 = toindices(x4)\n    x16 = lbind(toindices, x15)\n    x17 = chain(x16, x15, outbox)\n    x18 = lbind(power, outbox)\n    x19 = compose(x18, x17)\n    x20 = initset(x19)\n    x21 = cover(x3, x20)\n    x22 = chain(size, x18, outbox)\n    x23 = argmax(x6, x22)\n    x24 = objects(x14, T, F, F)\n    x25 = color(x23)\n    x26 = center(x23)\n    x27 = invert(x25)\n    x28 = shift(x26, x27)\n    x29 = fork(combine, vfrontier, hfrontier)\n    x30 = mapply(x29, x28)\n    x31 = fill(x21, x25, x30)\n    x32 = ofcolor(x31, x1)\n    x33 = lbind(contained, x16)\n    x34 = rbind(contained, x33)\n    x35 = compose(x34, last)\n    x36 = sfilter(x32, x35)\n    x37 = sizefilter(x36, ONE)\n    x38 = fork(equality, identity, last)\n    x39 = fork(multiply, height, width)\n    x40 = chain(x38, x39,"], [1.1, "def solve_09dafe25(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x1, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x"], [1.1, "def solve_35c650fe(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = GMTcolors(I)\n    x3 = compose(flip, x2)\n    x4 = extract(x1, x3)\n    x5 =1989(x4)\n    x6 =1755499991\n    7857767553\n    634 neighbors\n    5548957955\n    5579755589\n    4729655744\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = chain(flip, x1, dmirror)\n    x3 = fork(both, x2, x3)\n    x4 = extract(x1, x3)\n    x5 = compose(flip, x4)\n    x6 = sfilter(x5, x3)\n    x7 = compose(hmirror, merge)\n    x8 = fork(equality, identity, x7)\n    x9 = sfilter(x6, x8)\n    x10 = compose(vmirror, dmirror)\n    x11 = fork(equality, identity, x10)\n    x12 = sfilter(x9, x11)\n    x13 = compose(leftmost, merge)\n    x14 = compose(rightmost, merge)\n    x15 = fork(equality, identity, x14)\n    x16 = compose(leftmost, invert)\n    x17 = compose(rightmost, invert)\n    x18 = fork(equality, identity, x17)\n    x19 = fork(both, x13, x18)\n    x20 = sfilter(x6, x19)\n    x21 = compose(last,283)\n    x22 = sfilter(x6, x21)\n    x23 = RIGHT(x20, x22)\n    x24 = mapply(dneighbors, x23)\n    x25 = mapply(ineighbors, x24)\n    x26 = shape(x25)\n    x27 = canvas(ZERO, x26)\n    x28 = ofcolor(x25, ONE)\n    x29 = ofcolor(x25, TWO)\n    x30 = rbind(multiply, x27)\n"], [1.1, "def solve_d06297a7(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = double(TEN)\n    x2 = interval(ZERO, x1, ONE)\n    x3 = connect(ORIGIN, DOWN)\n    x4 = connect(ORIGIN, ZERO_BY_TWO)\n    x5 = combine(x3, x4)\n    x6 = astuple(NEG_TWO, TWO)\n    x7 = lbind(multiply, x6)\n    x8 = toivec(NEG_TWO)\n    x9 = apply(x7, x2)\n    x10 = rbind(subtract, TWO_BY_ZERO)\n    x11 = fork(ofcolor, identity, leastcolor)\n    x12 = chain(x10, center, x11)\n    x13 = rbind(mapply, x9)\n    x14 = lbind(lbind, shift)\n    x15 = lbind(shift, x5)\n    x16 = compose(x15, x12)\n    x17 = chain(x13, x14, x16)\n    x18 = lbind(recolor, FIVE)\n    x19 = compose(x18, x17)\n    x20 = fork(paint, identity, x19)\n    x21 = compose(rot180, x20)\n    x22 = fork(ofcolor, x21, leastcolor)\n    x23 = compose(center, x22)\n    x24 = fork(subtract, x23, x12)\n    x25 = fork(shift, x17, x24)\n    x26 = lbind(recolor, FIVE)\n    x27 = rbind(shift, x8)\n    x28 = chain(x26, x27, x25)\n    x29 = fork(paint, x21, x28)\n    x30 = compose(rot180, x29)\n    x31 = rbind(ofcolor, FIVE)\n    x32 = compose(x31, x30)\n    x33 = leastcolor(I)\n    x34 = ofcolor(I, x33)\n    x35 = mostcolor(I)\n    x36 = shape(I)\n    x37 = canvas(x35, x"], [1.1, "def solve_f03a7f2e(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = fill(x6, TWO, x3)\n    x8 =757(999, UNITY)\n    x9 = ofcolor(x8, ONE)\n    x10 = lowermost(x9)\n    x11 = width(x9)\n    x12 = rbind(greater, x10)\n    x13 = compose(x12, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = lbind(recolor, ZERO)\n    x16 = lbind(ofcolor, x8)\n    x17 = chain(x15, x14, x16)\n    x18 = fork(paint, identity, x17)\n    x19 = chain(x9, first, x18)\n    x20 = difference(x1, x19)\n    x21 = rbind(greater, x10)\n    x22 = compose(x21, first)\n    x23 = rbind(sfilter, x22)\n    x24 = chain(x20, x23, x18)\n    x25 = rbind(greater, x10)\n    x26 = compose(x25, first)\n    x27 = rbind(sfilter, x26)\n    x28 = chain(x20, x27, x18)\n    x29 = rbind(gravitate, x2)\n    x30 = compose(x29, invert)\n    x31 = fork(add, identity, x30)\n    x32 = fork(insert, identity, x31)\n    x33 = fork(insert, identity, x32)\n    x34 = size(x1)\n    x35 = decrement(x34)\n    x36 = power(x33, x35)\n    x37 = compose(x33, x28)\n    x38 = power(x37, x36)\n    x39 = astuple("], [1.1, "def solve_363f59d0(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = index(I, ORIGIN)\n    x2 = objects(I, T, F, F)\n    x3 = fork(multiply, height, width)\n    x4 = fork(equality, size, x3)\n    x5 = chain(positive, decrement, size)\n    x6 = rbind(greater, ONE)\n    x7 = chain(x6, x5, shape)\n    x8 = sfilter(x2, x7)\n    x9 = fork(both, x4, x8)\n    x10 = sfilter(x2, x4)\n    x11 = fork(multiply, first, last)\n    x12 = chain(decrement, decrement, x11)\n    x13 = fork(greater, x12, x9)\n    x14 = sfilter(x2, x13)\n    x15 = palette(I)\n    x16 = remove(ZERO, x15)\n    x17 = lbind(colorcount, I)\n    x18 = argmin(x16, x17)\n    x19 = other(x16, x18)\n    x20 = color(I)\n    x21 = colorfilter(x2, x20)\n    x22 = outbox(x21)\n    x23 = difference(x22, x21)\n    x24 = fill(I, x19, x23)\n    x25 = argmin(x2, width)\n    x26 = other(x211, x25)\n    x27 =787(x26)\n    x28 = mostcolor(x27)\n    x29 = fill(x24, x28, x27)\n    x30 = normalize(x27)\n    x31 = ulcorner(x30)\n    x32 = width(x10)\n    x33 = x30(x12)\n    x34 = invert(x33)\n    x35 = tojvec(x34)\n    x36 = height(x10)\n    x37 = shift(x32, x36)\n    x38 = combine(x31, x37)\n    x39 = paint(x29, x38)\n    O = x20(x"], [1.1, "def solve_0a5f7455(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = shape(x12)\n    x15 = canvas(ZERO, x14)\n    x16 = lbind(multiply, x13)\n    x17 = apply(x16, x15)\n    x18 = rbind(contained, x17)\n    x19 = sfilter(x1, x18)\n    x20 = lbind(mapply, x12)\n    x21 = rbind(occurrences, x3)\n    x22 = chain(x20, x21, asindices)\n    x23 = lbind(mapply, x22)\n    x24 = chain(invert, x23, x26)\n    x25 = fork(shift, x22, x24)\n    x26 = compose(x5, x25)\n    x27 = palette(I)\n    x28 = mapply(x26, x27)\n    x29 = palette(I)\n    x30 = remove(x28, x29)\n    x31 = lbind(colorcount, x18)\n    x32 = argmax(x30, x31)\n    x33 = rbind(contained, x37)\n    x34 = compose(x33, first)\n    x35 = sfilter(x12, x34)\n    x36 = output(x35, x32)\n    x37 =021(x36)\n    x38 = argmin(x35, x27)\n    x39 = cover(x38, x39)\n    O ="], [1.1, "def solve_771b4948(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = palette(I)\n    x3 = compose(maximum, shape)\n    x4 = lbind(apply, x3)\n    x5 = lbind(colorfilter, x1)\n    x6 = chain(maximum, x4, x5)\n    x7 = matcher(x6, ONE)\n    x8 = extract(x2, x7)\n    x9 = lbind(ofcolor, I)\n    x10 = compose(backdrop, x9)\n    x11 = fork(equality, x9, x10)\n    x12 = extract(x2, x11)\n    x13 = ofcolor(I, x12)\n    x14 = ofcolor(I, x8)\n    x15 = rbind(manhattan, x13)\n    x16 = compose(x15, initset)\n    x17 = argmin(x14, x16)\n    x18 = ulcorner(x14)\n    x19 = contained(x18, x14)\n    x20 = shoot(x17, UNITY)\n    x21 = shoot(x17, NEG_UNITY)\n    x22 = combine(x20, x21)\n    x23 = shoot(x17, UP_RIGHT)\n    x24 = shoot(x17, DOWN_LEFT)\n    x25 = combine(x23, x24)\n    x26 = branch(x19, x22, x25)\n    x27 = asindices(I)\n    x28 = outbox(x13)\n    x29 = intersection(x27, x28)\n    x30 = intersection(x29, x26)\n    x31 = initset(x17)\n    x32 = rbind(manhattan, x31)\n    x33 = compose(x32, initset)\n    x34 = argmin(x30, x33)\n    x35 = height(x13)\n    x36 = height(I)\n    x37 = equality(x35, x36)\n    x38 = leftmost(x14)\n    x39 = leftmost(x13)\n    x40 = greater("], [1.1, "def solve_6a2ff814(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, T)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = rbind(colorcount, x9)\n    x11 = argmax(x5, x10)\n    x12 = other(x5, x11)\n    x13 = color(x12)\n    x14 = subgrid(x11, I)\n    x15 = lbind(insert, DOWN)\n    x16 = compose(lrcorner, asindices)\n    x17 = chain(x15, initset, x16)\n    x18 = fork(add, identity, x17)\n    x19 = compose(x14, x18)\n    x20 = fork(insert, x19, x6)\n    x21 = compose(x15, x20)\n    x22 = fork(subtract, x21, x18)\n    x23 = compose(x17, x22)\n    x24 = fork(subtract, x23, x16)\n    x25 = fork(insert, x24, x6)\n    x26 = compose(x21, x25)\n    x27 = fork(subtract, x26, x25)\n    x28 = rapply(x27, x7)\n    x29 = merge(x28)\n    x30 = cover(x14, x29)\n    x31 = argmax(x30, x29)\n    x32 = paint(x31, x3)\n    x33 = replace(x32, x9, replace(x30, x10)\n    x34 =2c2cce22(x31)\n    x35 = recolor(x34, x32)\n    x36 = lbind(shift, x31)\n    x37 = mapply(x36, x"], [1.1, "def solve_74a1ece0(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_34c13905(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_e30a35ae(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = d23(I)\n    x6 = add(TWO, x5)\n    x7 = tojvec(x6)\n    x8 = increment(x14)\n    x9 = canvas(x4, x8)\n    x10 = asobject(I)\n    x11 = shift(x10, x7)\n    x12 = palette(x11)\n    x13 = lbind(chain, size)\n    x14 = rbind(x13, toindices)\n    x15 = lbind(lbind, contained)\n    x16 = lbind(sfilter, x11)\n    x17 = compose(x15, x16)\n    x18 = chain(x17, x9, normalize)\n    x19 = lbind(colorcount, I)\n    x20 = compose(x19, palette)\n    x21 = matcher(x20, TWO)\n    x22 = extract(x12, x21)\n    x23 = colorcount(I, x22)\n    x24 =count(x10, ZERO)\n    x25 = positive(x24)\n    x26 = branch(x25, x22, x25)\n    x27 = ofcolor(I, x22)\n    x28 =314187(x27)\n    x29 = ofcolor(I, TWO)\n    x30 = recolor(x22, x29)\n    x31 = leftmost(x30)\n    x32 = lowermost(x30)\n    x33 = matcher(first, ZERO)\n    x34 = rightmost(x30)\n    x35 = matcher(first, TWO)\n    x36 = leftmost(x30)\n    x37 = rightmost(x30)\n    x38 = paint(x32, x31)\n    x39 = paint(x38, x34)\n    x40 = greater(x39, x26)\n    x41 = branch(x40, x33, x35)\n    x42 = leftmost"], [1.1, "def solve_42df03fe(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x24 = astuple(x10, cmirror)\n    x25 = astuple(x25, x24)\n    x26 = compose(x50, merge)\n    x27 = compose(x50, even)\n    x28 = fork(subtract, x26, x27)\n    x29 = fork(multiply, first, x28)\n    x30 = output(I, x11)\n    x31 = lbind(ofcolor, x30)\n    x32 = compose(x11, x30)\n    x33 = fork( difference, x29, x32)\n    x34 = rbind(toobject, I)\n    x35 = compose(x34, x30)\n    x36 = apply(x35, x3)\n    x37 = astuple(x31, x presents)\n    x38 = astuple(x37, x disagree)\n    x39 = initset(x38)\n    x40 = insert(x39, x"], [1.1, "def solve_35823430(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =548colors(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = toindices(x3)\n    x5 = asindices(I)\n    x6 = corners(x5)\n    x7 = lbind(rbind, manhattan)\n    x8 = toindices(x3)\n    x9 = combine(x6, x8)\n    x10 = fill(I, TEN, x9)\n    x11 = fork(manhattan, identity, initset)\n    x12 = fork(add, identity, x11)\n    x13 = height(x10)\n    x14 = width(x10)\n    x15 =multiply(x14, x13)\n    x16 = increment(x15)\n    x17 = width(x5)\n    x18 = divide(x17, x12)\n    x19 = increment(x18)\n    x20 = height(x3)\n    x21 = subtract(x20, x16)\n    x22 = divide(x21, x12)\n    x23 = increment(x22)\n    x24 = repeat(x10, x21)\n    x25 = subtract(x23, x24)\n    x26 =split(x25, x8)\n    x27 = lbind(intersection, x19)\n    x28 = chain(positive, size, x27)\n    x29 = matcher(x28, ZERO)\n    x30 = partition(x26)\n    x31 = sfilter(x30, x29)\n    x32 =68b19color(I)\n    x33 = compose(flip, x31)\n    x34 = sfilter(x31, x33)\n    x35 = dmirror(x14)\n    x36 = mpapply(recolor, x35, x34)\n    x37 = paint(x10, x36)\n    x38 = toindices(x3)\n    x39 = apply(x37, x38)\n    x40 = fork(add, last, first)\n    x41 =1995(x83)"], [1.1, "def solve_3cac6b51(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_8a10fdcc(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, size)\n    x3 = subgrid(x2, I)\n    x4 = normalize(x3)\n    x5 = replace(x3, ZERO, x4)\n    x6 = toindices(x4)\n    x7 = lbind(toindices, x6)\n    x8 = x7(x1)\n    x9 =3322696666602986756666\n    x10 = rbind(greater, ONE)\n    x11 = chain(x10, size, dedupe)\n    x12 = sfilter(x6, x11)\n    x13 = center(x12)\n    x14 = color(x12)\n    x15 = fill(x5, x14, x13)\n    x16 = objects(x15, T, F, T)\n    x17 = colorfilter(x16, x12)\n    x18 = rbind(toobject, x17)\n    x19 = chain(x18, color, x17)\n    x20 = rbind(colorcount, x14)\n    x21 = chain(x20, usgrid, x19)\n    x22 = fork(equality, x21, x19)\n    x23 = sfilter(x17, x22)\n    x24 = floindices(x23)\n    x25 = rbind(contained, x24)\n    x26 = lbind(index, x24)\n    x27 = compose(x25, x26)\n    x28 = fork(3355, x27, x26)\n    x29 = chain(x24, x27, x28)\n    x30 = fork(recolor, x29, x23)\n    x31 = mapply(x30, x23)\n    x32 = paint(x15, x31)\n    x33 = objects(x32, T, F, T)\n    x34 = rbind(adjacent, x2)\n    x35 = rbind(adjacent, x2)\n    x36 = fork(both, x34, x35)\n    x37 = sfilter(x33, x36"], [1.1, "def solve_13c9cced(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = compose(x5, color)\n    x7 = compose(double, x4)\n    x8 = lbind(prapply, manhattan)\n    x9 = fork(x8, identity, identity)\n    x10 = lbind(remove, ZERO)\n    x11 = compose(x10, x9)\n    x12 = rbind(branch, NEG_TWO)\n    x13 = fork(x12, positive, decrement)\n    x14 = chain(x13, minimum, x11)\n    x15 = fork(add, x14, x7)\n    x16 = compose(x15, x6)\n    x17 = compose(invert, x16)\n    x18 = order(x2, x17)\n    x19 = rbind(argmin, centerofmass)\n    x20 = compose(initset, vmirror)\n    x21 = fork(insert, dmirror, x20)\n    x22 = fork(insert, cmirror, x21)\n    x23 = fork(insert, hmirror, x22)\n    x24 = compose(x19, x23)\n    x25 = apply(x24, x18)\n    x26 = size(x2)\n    x27 = apply(size, x2)\n    x28 = contained(ONE, x27)\n    x29 = increment(x26)\n    x30 = branch(x28, x26, x29)\n    x31 = double(x30)\n    x32 = decrement(x31)\n    x33 = apply(normalize, x25)\n    x34 = interval(ZERO, x30, ONE)\n    x35 = pair(x34, x34)\n    x36 = mpapply(shift, x33, x35)\n    x37 = astuple(x32, x32)\n    x38 = canvas(x1, x37)"], [1.1, "def solve_4a897ca3(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = height(I)\n    x9 = astuple(x8, ONE)\n    x10 = canvas(THREE, x9)\n    x11 = hconcat(x10, I)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = identity(DOWN)\n    x17 = connect(ORIGIN, x15)\n    x18 = fill(x11, THREE, x17)\n    x19 = identity(x13)\n    x20 = identity(x12)\n    x21 = identity(x12)\n    x22 = identity(F)\n    x23 = identity(I)\n    x24 = compose(first, first)\n    x25 = chain(first, last, x24)\n    x26 = compose(first, first)\n    x27 = chain(last, last, x26)\n    x28 = chain(first, first, first)\n    x29 = chain(first, last, last)\n    x30 = chain(first, first, last)\n    x31 = chain(last, first, last)\n    x32 = compose(decrement, x25)\n    x33 = compose(decrement, x27)\n    x34 = fork(astuple, x32, x33)\n    x35 = compose(decrement, x27)\n    x36 = fork(multiply, x30, x35)\n    x37 = fork(add, x29, x36)\n    x38 = compose(decrement, x28)\n    x39 = fork(multiply, x30, x38)\n    x40 = fork(add, x29, x39)\n    x41 = fork"], [1.1, "def solve_2ad55902(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = argmin(I, ORIGIN)\n    x2 =56528x1, ZERO)\n    x3 = flip(x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    x5 = lbind(righthalf, I)\n    x6 = palette(I)\n    x7 = other(x6, ZERO)\n    x8 = rbind(colorcount, x7)\n    x9 = argmin(x2, x8)\n    x10 = rbind(colorcount, x7)\n    x11 = width(I)\n    x12 = decrement(x11)\n    x13 = tojvec(x12)\n    x14 = add(x13, UNITY)\n    x15 = multiply(x14, x12)\n    x16 = canvas(x7, x15)\n    x17 = ofcolor(I, x9)\n    x18 =(x17, x16)\n    x19 = rbind(contained, x18)\n    x20 = compose(x19, last)\n    x21 = sfilter(x17, x20)\n    x22 = compose(first, last)\n    x23 = fork( constructorform, first, last)\n    x24 = fork(equality, x22, x23)\n    x25 = sfilter(x21, x24)\n    x26 = undeman(x25)\n    O = replace(x16, x9, x26)\n    return O"], [1.1, "def solve_8a2862c0(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = partition(I)\n    x2 = product(x1, x1)\n    x3 = fork(equality, corners, toindices)\n    x4 = extract(x2, x3)\n    x5 = subgrid(x4, I)\n    x6 = objects(x5, T, F, F)\n    x7 =66916\n    \"\"\"\n    x8 = hsplit(x5, THREE)\n    x9 = merge(x8)\n    x10 = extract(x1, x9)\n    x11 = paint(x5, x10)\n    x12 = ofcolor(x11, ZERO)\n    x13 = first(x12)\n    x14 = ulcorner(x xx13)\n    x15 =68b1906(x14)\n    x16 = shift(x13, x15)\n    O = replace(x11, ZERO, FIVE)\n    return O"], [1.1, "def solve_698782f1(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = matcher(height, ONE)\n    x5 = fork(equality, toindices, x4)\n    x6 = sfilter(x3, x5)\n    x7 = sizefilter(x6, x2)\n    x8 = fork(adjacent, first, last)\n    x9 = compose(flip, x8)\n    x10 = extract(x7, x9)\n    x11 = remove(x10, x7)\n    x12 = merge(x11)\n    x13 = width(x12)\n    x14 = totuple(x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 =2266(x15, x16)\n    x18 =88(x17, x12)\n    x19 = shape(x10)\n    x20 = canvas(ZERO, x19)\n    x21 =_hconcat(x18, x20)\n    x22 = objects(x21, color, recovered)\n    x23 = first(x22)\n    x24 = apply(ulcorner, x23)\n    x25 = normalize(x23)\n    x26 = matcher(first, ZERO)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x24, x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    O = paint(I, x30)\n    return O"], [1.1, "def solve_633b7a08(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = rot180(I)\n    x2 = rbind(sfilter, hline)\n    x3 = compose(size, dedupe)\n    x4 = matcher(x3, ONE)\n    x5 = rbind(sfilter, x4)\n    x6 = chain( size, x5, dmirror)\n    x7 =\n    x8 = x6(I)\n    x9 = objects(x7, T, F, F)\n    x10 = argmax(x9, size)\n    x11 = color(x10)\n    x12 = x2(x10)\n    x13 = objects(x7, T, F, F)\n    x14 = extensions(x13, x12)\n    x15 = rbind(shoot, DOWN)\n    x16 = leftmost(x15)\n    x17 = rbind(mapply, x16)\n    x18 = lbind(rbind, manhattan)\n    x19 = chain(x18, initset, x17)\n    x20 = fork(combine, x17, x19)\n    x21 = compose(x12, x20)\n    x22 = fork(shift, x21, ulcorner)\n    x23 = compose(x3, x22)\n    x24 = fork(intersection, x23, size)\n    x25 = fork(recolor, x23, x24)\n    x26 = compose(x3, x22)\n    x27 = fork(mapply, x26, x25)\n    x28 = interval(SIX, FOUR, ONE)\n    x29 = mapply(x27, x28)\n    x30 = mapply(x22, x29)\n    x31 = paint(x1, x30)\n    O = paint(x31, x304)\n    return O"], [1.1, "def solve_9730b7f2(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =233c669\n    2667526606\n    6362062184\n    3609967069\n    8680902806\n    6860166707\n    2116086365\n    7766369577\n    0769843602\n    \"\"\"\n    x2 = frontiers(I)\n    x3 = merge(x2)\n    x4 = difference(x5, x3)\n    x5 = mapply(toindices, x4)\n    x6 = objects(I, T, F, F)\n    x7 =x6(x5)\n    x8 = shift(x7, ulcorner)\n    x9 = mapply(toindices, x6)\n    x10 = mapply(toindices, x9)\n    x11 = fill(I, FOUR, x5)\n    x12 = fill(x11, TWO, x10)\n    x13 = rbind(a61f2674\n    x14 = rbind(toobject, I)\n    x15 = chain(x13, x14, delta)\n    x16 = x15(x6)\n    x17 = fill(x12, TWO, x16)\n    x18 = color(x2)\n    x19 = fill(x17, x18, x20)\n    x20 = objects(x19, T, F, F)\n    x21 = apply(toindices, x20)\n    x22 = apply(x21, x12)\n    x23 = normalize(x22)\n    x24 = lbind(shift, x23)\n    x25 = mapply(x24, x2)\n    O = paint(x19, x25)\n    return O"], [1.1, "def solve_3fbdd3ab(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    O = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.1, "def solve_a5295d96(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 =80(I)\n    x2 = objects(I, T, F, T)\n    x3 = sizefilter(x2, ONE)\n    x4 = difference(x2, x3)\n    x5 = apply(color, x4)\n    x6 = rbind(contained, x5)\n    x7 = compose(x6, color)\n    x8 = sfilter(x3, x7)\n    x9 = lbind(colorfilter, x4)\n    x10 = chain(first, x9, color)\n    x11 = fork(gravitate, identity, x10)\n    x12 = fork(shift, identity, x11)\n    x13 = mapply(x12, x8)\n    O = paint(I, x13)\n    return O"], [1.1, "def solve_1a82dcaa(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = lbind(sfilter, x12)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = chain(size, x3, little)\n    x5 = fork(repeat, x3, x4)\n    x6 = compose(dmirror, x5)\n    x7 = fork(equality, identity, x6)\n    x8 =istine(I)\n    x9 = sfilter(x8, x7)\n    x10 = argmax(x9, x5)\n    x11 =002(x10, identity)\n    x12 = objects(x11, T, F, F)\n    x13 = merge(x12)\n    x14 = color(x13)\n    x15 = leftmost(x10)\n    x16 = interval(ONE, x15, ONE)\n    x17 = rbind(contained, x16)\n    x18 = compose(x17, last)\n    x19 = sfilter(x15, x18)\n    x20 = increment(x15)\n    x21 = rbind(contained, x20)\n    x22 = compose(x21, last)\n    x23 = fork(subtract, first, x22)\n    x24 = chain(increment, x23, last)\n    x25 = fork(greater, x24, identity)\n    x26 = compose(x25, last)\n    x27 = rbind(sfilter, x26)\n    x28 = chain(merge, x27, x24)\n    x29 = apply(x28, x19)\n    x30 = sfilter(x29, x5)\n    x31 = compose(vfrontier, x24)\n    x32 = x31(x30)\n    x33 = lbind(mapply, x36)\n    x34 = rbind(sfilter, x33)\n    x35 = compose(x34, x24)\n    x36 = pair(x32, x35)\n    x37 = mapply(x36, x22)\n    O = underfill(x11, x paint, x37)\n    return O"], [1.1, "def solve_56b32cb2(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = compose(first, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = compose(last, last)\n    x8 = totuple(x2)\n    x9 = apply(x7, x8)\n    x10 = mostcommon(x9)\n    x11 = compose(first, last)\n    x12 = matcher(x11, x6)\n    x13 = sfilter(x2, x12)\n    x14 = compose(last, last)\n    x15 = matcher(x14, x10)\n    x16 = sfilter(x2, x15)\n    x17 =88bind(astuple, x13)\n    x18 = initset(x17)\n    x19 = matcher(first, x6)\n    x20 = compose(flip, x19)\n    x21 = mfilter(x18, x20)\n    O = fill(I, TWO, x21)\n    return O"], [1.1, "def solve_8a32ee85(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 =2217a3322\n    x2 =711213578\n    x3 =4421417dc433765\n    5224774785    7995ad74\n    1863443112\n    3207563528\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =22ofcolor(I, x1)\n    x3 =444(TWO, x2)\n    x4 = neighbors(UNITY)\n    x5 = recolor(x1, x4)\n    x6 = asindices(I)\n    x7 = outbox(x6)\n    x8 = lbind(shift, x7)\n    x9 = mapply(x8, x5)\n    x10 = combine(x4, x9)\n    O = paint(I, x10)\n    return O"], [1.1, "def solve_2263002b(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, T, F, T)\n    x13 = colorfilter(x12, x11)\n    x14 = rbind(manhattan, x8)\n    x15 = argmin(x13, x14)\n    x16 = ofcolor(x15, x10)\n    x17 = hmirror(x16)\n    x18 = invert(x17)\n    x19 =18(TWO)\n    x20 = shift(x18, x19)\n    x21 = lbind(shift, x20)\n    x22 = rbind( toobject, x25)\n    x23 = mostcolor(x22)\n    x24 = lbind(shift, x25)\n    x25 = rbind(toobject, x6)\n    x26 = mapply(x24, x21)\n    x27 = combine(x23, x26)\n    x28 = rbind(contained, x27)\n    x29 = apply(x28, x27)\n    x30 =gravitate(x29, x28)\n    x31 = rbind(add, x29)\n    x32 = initset(x15)\n    x33 = rbind(add, x32)\n    x34 = fork(subtract, x33, x31)\n    x35 = fork(shift, identity, x34)\n    x36 = mapply(x35, x30)\n    O = paint(x15, x36)\n    return O"], [1.1, "def solve_4245c791(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =225(I)\n    x2 = objects(x1, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = apply(ulcorner, x2)\n    x5 = normalize(x3)\n    x6 = lbind(shift, x5)\n    x7 = mapply(x6, x4)\n    O = paint(x1, x7)\n    return O"], [1.1, "def solve_2e959a4a(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 =91 thing(I, T, F, T)\n    x2 = matcher(size, TWO)\n    x3 = mfilter(x1, x2)\n    x4 = matcher(size, ONE)\n    x5 = mfilter(x1, x4)\n    x6 = matcher(size, FOUR)\n    x7 = mfilter(x1, x6)\n    x8 = fill(I, THREE, x3)\n    x9 = fill(x8, TWO, x5)\n    O = fill(x9, ONE, x7)\n    return O"], [1.1, "def solve_8115fd37(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = totuple(x3)\n    x5 = apply(color, x4)\n    x6 = mostcommon(x5)\n    x7 =422(x4, identity)\n    x8 = lbind(matcher, x7)\n    x9 = compose(x8, color)\n    x10 = fork(sfilter, identity, x9)\n    x11 = size(x1)\n    x12 =objects(I)\n    x13 = rbind(colorcount, x6)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x6)\n    x16 = matcher(x15, x14)\n    x17 = mfilter(x12, x16)\n    x18 =82(I, x17)\n    x19 = replace(x18, x6, x1)\n    O = fill(x19, ZERO, x17)\n    return O"], [1.1, "def solve_20395068(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = combine(x13, x15)\n    x17 = shape(I)\n    x18 = maximum(x17)\n    x19 = lbind(shift, x17)\n    x20 = mapply(x19, x16)\n    x21 = paint(I, x20)\n    x22 = toindices(x5)\n    x23 = center(x22)\n    x24 = initset(x23)\n    x25 = insert(x24, x1)\n    x26 = insert(x35, x25)\n    x27 = dmirror(x26)\n    x28 = lbind(shift, x27)\n    x29 = apply(x28, x24)\n    x30 =393(x21)\n    x31 = rbind(rapply, x30)\n    x32 = apply(x31, x22)\n    x33 = mapply(x32, x29)\n    O = fill(x21, x9, x33)\n    return O"], [1.1, "def solve_f60ebd4b(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    O =19985 to86(I):\n    return O"], [1.1, "def solve_eed37371(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(normalize, x3)\n    x5 = mapply(toindices, x4)\n    x6 = difference(x5, x4)\n    x7 = fill(I, EIGHT, x6)\n    x8 = index(x7, ORIGIN)\n    x9 = colorcount(x7, ZERO)\n    x10 = positive(x9)\n    x11 = branch(x10, dmirror, identity)\n    x12 = x11(x7)\n    x13 = objects(x12, T, F, T)\n    x14 =454(x13)\n    x15 =111(x14)\n    x16 = replace(x15, FIVE, ZERO)\n    O = x11(x16)\n    return O"], [1.1, "def solve_9c95dec5(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = ofcolor(I, TWO)\n    x3 = argmax(x1, size)\n    x4 = subgrid(x2, I)\n    x5 = normalize(x3)\n    x6 = replace(x4, TWO, ZERO)\n    x7 = lbind(insert, x6)\n    x8 = chain(x7, ulcorner, last)\n    x9 = x8(x5)\n    x10 = lbind(recolor11\n    \n    x11 = rbind(ofcolor, TWO)\n    x12 = compose(x10, x11)\n    x13 = fork(paint, identity, x12)\n    x14 = height(x5)\n    x15 = vsplit(x5, x14)\n    x16 = mapply(x6, x15)\n    x17 = ofcolor(x16, TWO)\n    x18 = compose(x3, x17)\n    x19 = x18(x5)\n    x20 = gravitate(x19, x17)\n    O = fill(x9, ZERO, x20)\n    return O"], [1.1, "def solve_ce11ddca(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =445(I)\n    x2 =1168838699464(x1, ONE)\n    x3 = leastcolor(x2)\n    x4 = ofcolor(I, x3)\n    x5 = fill(I, ZERO, x4)\n    x6 = ofcolor(I, x4)\n    x7 = box(x6)\n    x8 = fill(x5, x3, x7)\n    x9 = mapply(delta, x8)\n    O = fill(x9, x4, xExample output:\n    8888888044\n    8649488800\n    1248042948\n    80146180036\n    8848856486\n    36683484853\n    1326880488\n    8684486648\n    8883248536\n    4874225538\n    \"\"\"\n    x1 = fill(x8, x3, x2)\n    O = fill(x1, x4, x3)\n    return O"], [1.1, "def solve_531d3962(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 =9999(I, T31)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(x3, ONE)\n    x5 = branch(x4, dmirror, identity)\n    x6 = branch(x4, height, width)\n    x7 = x6(I)\n    x8 = astuple(ONE, x7)\n    x9 = x5(I)\n    x10 = crop(x9, ORIGIN, x8)\n    x11 = apply(dedupe, x10)\n    O = x5(x11)\n    return O"], [1.1, "def solve_a23eff2b(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =03733(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = partition(I)\n    x7 = fork(multiply, height, width)\n    x8 = fork(equality, size, x7)\n    x9 = sfilter(x6, x8)\n    x10 = argmax(x9, size)\n    x11 = difference(x5, x10)\n    x12 = apply(initset, x11)\n    x13 = rbind(hmatching, x10)\n    x14 = rbind(vmatching, x10)\n    x15 = fork(either, x13, x14)\n    x16 = sfilter(x12, x15)\n    x17 = rbind(gravitate, x10)\n    x18 = fork(add, center, x17)\n    x19 = fork(connect, center, x18)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x16)\n    O = paint(I, x21)\n    return O"], [1.1, "def solve_a10739a5(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = lbind(canvas, ZERO)\n    x2 = lbind(occurrences, I)\n    x3 = compose(x1, x2)\n    x4 = fork(apply, x3, leastcolor)\n    x5 = compose(maximum, x4)\n    x6 = compose(subtract, x5)\n    x7 = fork(astuple, x6, identity)\n    x8 = apply(x7, I)\n    x9 = maximum(x8)\n    x10 = dmirror(I)\n    x11 = x9(x10)\n    x12 = dmirror(x11)\n    x13 = x7(x12)\n    x14 = width(x11)\n    x15 = astuple(x14, x13)\n    x16 = repeat(x15, ONE)\n    x17 = output:\n    171\n    516\n    \"\"\"\n    x1 = x9(I)\n    x2 = fork(subtract, last, last)\n    x3 = compose(first, x2)\n    x4 = extract(x1, x3)\n    x5 = x4(x1)\n    x6 = last(x5)\n    x7 = compose(first, last)\n    x8 = difference(x5, x6)\n    x9 = file(x8, x7)\n    x10 = matcher(first, x6)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x9, x11)\n    O = fill(x6, TWO, x12)\n    return O"], [1.1, "def solve_0e025c9a(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 =33177(I,33177)\n    x2 = equality(x1, ZERO)\n    x3 = branch(x2, UP, RIGHT)\n    x4 = branch(x3, DOWN, RIGHT)\n    x5 = multiply(x4, x4)\n    x6 = add(x5, TWO)\n    O = canvas(ZERO, x5)\n    return O"], [1.1, "def solve_859b4d13(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = leftmost(x2)\n    x5 = width(I)\n    x6 = interval(x4, x5, TWO)\n    x7 = apply(tojvec, x6)\n    x8 = astuple(x interval, x4)\n    x9 = lbind(canvas, ZERO)\n    x10 = lbind(occurrences, I)\n    x11 = lbind(lbind, shift)\n    x12 = compose(x11, last)\n    x13 = lbind(recolor, x3)\n    x14 =decrement(x5)\n    x15 =853000(x14, x12)\n    x16 = paint(I, x15)\n    x17 = interval(x5, x16, ONE)\n    x18 = ofcolor(x16, x3)\n    x19 = rbind(ofcolor, x3)\n    x20 = compose(x19, center)\n    x21 = fork(recolor, x20, last)\n    x22 = mapply(x21, x17)\n    O = paint(x16, x22)\n    return O"], [1.1, "def solve_8611488f(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =4468117(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [1.1, "def solve_887ebcd9(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = height(I)\n    x5 = width(I)\n    x6 = matcher(925, x4)\n    x7 =16(I)\n    x8 = extract(x3, x6)\n    x9 = partition(x8)\n    x10 = sizefilter(x9, ONE)\n    x11 = lbind(greater, ONE)\n    x12 = compose(x11, size)\n    x13 = argmin(x10, x12)\n    x14 = palette(x13)\n    x15 = remove(x8, x14)\n    x16 = other(x15, x13)\n    x17 = palette(x13)\n    x18 = vmirror(x17)\n    x19 = lbind(shift, x18)\n    x20 = mapply(x19, x17)\n    x21 = ofcolor(x13, x16)\n    x22 = ofcolor(x18, x16)\n    x23 = combine(x21, x22)\n    x24 = fill(x13, ZERO, x23)\n    x25 = difference(x19, x23)\n    x26 = objects(x24, F, T, T)\n    x27 = rbind(adjacent, x26)\n    x28 = rbind(adjacent, x25)\n    x29 = extract(x27, x28)\n    x30 = initset(x29)\n    x31 = recolor(x16, x30)\n    x32 = combine(x27, x31)\n    x33 = fork(combine, vfrontier, hfrontier)\n    x34 = mapply(x33, x32)\n    O = fill(x24, x20, x34)\n    return O"], [1.1, "def solve_0a37c001(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = sizefilter(x1, ONE)\n    x3 = compose(neighbors, center)\n    x4 = fork(recolor, color, x3)\n    x5 = compose(decrement,472)\n    x6 = apply(x4, x2)\n    x7 = order(x6, identity)\n    x8 = compose(last, last)\n    x9 = compose(8042, x8)\n    x10 = apply(x9, x7)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = sfilter(x10, x11)\n    x14 = sfilter(x12, x7)\n    x15 = merge(x13)\n    x16 =9999512(x15)\n    x17 = mapply(x4, x13)\n    x18 = mapply(x4, x14)\n    x19 = paint(I, x13)\n    x20 = paint(x19, x18)\n    O = paint(x20, x17)\n    return O"], [1.1, "def solve_a854a2b4(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 =94a9b722(x2)\n    x4 = toindices(x3)\n    x5 = compose(double, halve)\n    x6 = fork(equality, identity, x5)\n    x7 = compose(x6, last)\n    x8 = sfilter(x4, x7)\n    x9 = fill(I, x1, x8)\n    O = replace(x9, FIVE, ZERO)\n    return O"], [1.1, "def solve_65464a30(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 =184(I)\n    x2 =754(I)\n    x3 = urcorner(x2)\n    x4 = shoot(x3, UP_RIGHT)\n    x5 =87(x4)\n    x6 = branch(x1, x5, x4)\n    O = crop(I, x3, x6)\n    return O"], [1.1, "def solve_cc1490c8(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 =0000000(I)\n    x2 =0000000(I)\n    x3 =0000000(I)\n    x4 = neighbors(ORIGIN)\n    x5 = mapply(neighbors, x4)\n    x6 = lbind(shift, x1)\n    x7 = apply(x6, x5)\n    x8 = lbind(recolor, TWO)\n    x9 = mapply(x8, x7)\n    O = paint(I, x9)\n    return O"], [1.1, "def solve_b0e08ea9(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 =279(I)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = asindices(x4)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = intersection(x5, x6)\n    x8 = lrcorner(x7)\n    x9 = shoot(x8, DOWN_LEFT)\n    x10 = intersection(x7, x9)\n    x11 = combine(x7, x10)\n    x12 = llcorner(x11)\n    x13 = remove(x12, x11)\n    x14 = lbind(shift, x13)\n    x15 = height(x12)\n    x16 = lbind(multiply, x15)\n    x17 = chain(x14, width, x16)\n    x18 = fgpartition(x4)\n    x19 = sizefilter(x18, FOUR)\n    x20 = fork(equality, toindices, x19)\n    x21 = sfilter(x19, x20)\n    x22 = mapply(x17, x21)\n    x23 = paint(x4, x22)\n    x24 = quotecdecrement(x5)\n    x25 =O = crop(x23, x24, x20)\n    O = x3(x25)\n    return O"], [1.1, "def solve_29fdfe4d(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = trim(I)\n    x2 = tophalf(x1)\n    x3 = lefthalf(x2)\n    x4 = tophalf(x3)\n    x5 = righthalf(x3)\n    x6 = bottomhalf(x3)\n    x7 = lefthalf(x5)\n    x8 = bottomhalf(x5)\n    x9 = righthalf(x6)\n    x10 = index(I, ORIGIN)\n    x11 = width(I)\n    x12 = decrement(x11)\n    x13 = tojvec(x12)\n    x14 = index(I, x13)\n    x15 = height(I)\n    x16 = decrement(x15)\n    x17 = toivec(x16)\n    x18 = index(I, x17)\n    x19 = shape(I)\n    x20 = decrement(x19)\n    x21 = index(I, x20)\n    x22 = compress(I)\n    x23 = asindices(x22)\n    x24 = box(x23)\n    x25 = fill(x22, x24, x23)\n    x26 =000000(x25)\n    O = replace(x26, x18, x20)\n    return O"], [1.1, "def solve_c5ddb86f(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = SEVEN(I)\n    x2 =matcher(first, ZERO)\n    x3 = rbind(s16, THREE)\n    x4 = compose(x2, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = lbind(toobject, x5)\n    x7 = chain(x1, x5, x6)\n    x8 = astuple(numcolors, ONE)\n    x9 = x7(x8)\n    x10 = decrement(x9)\n    x11 =1(x10)\n    x12 = subtract(x11, x10)\n    x13 = recolor(ZERO, x112)\n    x14 = paint(I, x13)\n    x15 = hsplit(x14, THREE)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = vmirror(x17)\n    x19 = hconcat(x16, x18)\n    x20 = hmirror(x19)\n    x21 = vconcat(x19, x20)\n    x22 = vconcat(x21, x22)\n    O = hmirror(x22)\n    return O"], [1.1, "def solve_cd005206(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =445(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = fork(multiply, height, width)\n    x7 = halve(x5)\n    x8 = lefthalf(I)\n    x9 = righthalf(I)\n    x10 = connect(x8, x9)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x10, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, vsplit, hsplit)\n    x16 = x15(I, TWO)\n    x17 = first(x16)\n    x18 = last(x16)\n    x19 = palette(x17)\n    x20 = palette(x18)\n    x21 = intersection(x19, x20)\n    x22 = first(x21)\n    x23 = shape(x17)\n    x24 = canvas(x22, x23)\n    x25 = ofcolor(x17, x22)\n    x26 = ofcolor(x18, x22)\n    x27 = intersection(x25, x26)\n    O = fill(x24, TWO, x27)\n    return O"], [1.1, "def solve_7fc9d2a4(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = color(x6)\n    x8 = lbind(recolor, NEG_ONE)\n    x9 = rbind(ofcolor, x7)\n    x10 = chain(x8, x9, backdrop)\n    x11 = fork(paint, identity, x10)\n    x12 =1111(x11, x5)\n    x13 = dmirror(x12)\n    x14 = ulcorner(x2)\n    x15 = lrcorner(x2)\n    x16 = shape(x12)\n    x17 = add(x16, UP_RIGHT)\n    x18 = add(x14, DOWN_LEFT)\n    x19 = shift(x13, x17)\n    x20 = x15(x19)\n    x21 = paint(x12, x20)\n    O = paint(x21, x3)\n    return O"], [1.1, "def solve_0ae8b0f1(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = ONE)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(x3, ONE)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = objects(x6, T, F, F)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x5(x10)\n    return O"], [1.1, "def solve_484b562b(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 =173(I)\n    x2 = frontiers(I)\n    x3 = merge(x2)\n    x4 = difference(x1, x3)\n    x5 = mostcolor(x4)\n    x6 = objects(I, T, F, F)\n    x7 = color(x3)\n    x8 = matcher(color, x7)\n    x9 = matcher(color, x5)\n    x10 = fork(either, x8, x9)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x6, x11)\n    x13 = merge(x12)\n    x14 = palette(x13)\n    x15 = lbind(mfilter, x12)\n    x16 = lbind(matcher,color)\n    x17 = compose(x15, x16)\n    x18 = apply(x17, x14)\n    x19 = fork(either, vline, hline)\n    x20 = lbind(prapply, connect)\n    x21 = fork(x20, identity, identity)\n    x22 = compose(x21, toindices)\n    x23 = rbind(sfilter, x19)\n    x24 = chain(merge, x23, x22)\n    x25 = fork(recolor, color, x24)\n    x26 = mapply(x25, x18)\n    x27 = paint(I, x26)\n    O = paint(x27, x3)\n    return O"], [1.1, "def solve_0a2d7acf(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = Turtle\n    5555558555\n    5558558555\n    5015585569\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, dmirror, identity)\n    x3 = x2(I)\n    x4 = objects(x3, T, F, T)\n    x5 = argmin(x4, leftmost)\n    x6 = argmax(x4, leftmost)\n    x7 = color(x5)\n    x8 = color(x6)\n    x9 = leftmost(x5)\n    x10 = leftmost(x6)\n    x11 = subtract(x10, x9)\n    x12 = double(x11)\n    x13 = multiply(THREE, TEN)\n    x14 = interval(x9, x13, x12)\n    x15 = interval(x10, x13, x12)\n    x16 = compose(vfrontier, tojvec)\n    x17 = mapply(x16, x14)\n    x18 = mapply(x16, x15)\n    x19 = recolor(x7, x17)\n    x20 = recolor(x8, x18)\n    x21 = combine(x19, x20)\n    x22 = paint(x3, x21)\n    O = x2(x22)\n    return O"], [1.1, "def solve_58fe9c06(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = matcher(ineighbors, UNITY)\n    x3 = extract(x1, x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(x3, x6)\n    x8 = objects(x7, F, T, T)\n    x9 = argmin(x8, size)\n    x10 = normalize(x9)\n    x11 = toindices(x10)\n    x12 = increment(x5)\n    x13 = increment(x12)\n    x14 = shift(x11, x13)\n    x15 = shift(x11, x14)\n    x16 =100(x15)\n    x17 = ulcorner(x10)\n    x18 = urcorner(x15)\n    x19 = shoot(x17, NEG_UNITY)\n    x20 = shoot(x18, DOWN_LEFT)\n    x21 = combine(x19, x20)\n    x22 = combine(x18, x21)\n    x23 = x5(x22)\n    O = fill(x6, x4, x23)\n    return O"], [1.1, "def solve_670c1eae(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = width(I)\n    x5 = astuple(x4, x4)\n    x6 = canvas(x3, x5)\n    x7 = interval(ONE,SIX, ONE)\n    x8 = invert(TEN)\n    x9 = interval(x8, TEN, ONE)\n    x10 = product(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = apply(x11, x10)\n    x14 = apply(x12, x10)\n    x15 = divide(x4, x4)\n    x16 = width(I)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = height(I)\n    x19 = interval(ZERO, x18, ONE)\n    x20 = pair(x19, x14)\n    x21 = apply(x11, x20)\n    x22 = apply(box, x21)\n    x23 = pair(x21, x22)\n    x24 = mapply(to fill, x23, THREE)\n    O = fill(x24, FOUR, x2)\n    return O"], [1.1, "def solve_20156c2f(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = rot270(I)\n    x2 = hconcat(I, x1)\n    x3 = mapply(d4469remove, x2)\n    x4 =O = rot90(x2)\n    x5 =180(x4)\n    x6 = astuple(x5, x4)\n    x7 = x8(I)\n    x8 = x9(x7)\n    x9 = rot270(x8)\n    x10 = hconcat(x9, x1)\n    x11 = hconcat(x10, x8)\n    O = vconcat(x9, x11)\n    return O"], [1.1, "def solve_16f7ed9d(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = rbind(Sfilter, ORIG2)\n    x2 = compose(dmirror, x1)\n    x3 = chain(size, dedupe, x2)\n    x4 = matcher(x3, ONE)\n    x5 = compose(71,042)\n    x6 = difference(x1, x5)\n    x7 = astuple(ONE, THREE)\n    x8 = astuple(TWO, FOUR)\n    x9 = initset(x7)\n    x10 = insert(x8, x9)\n    x11 = insert(x4, x10)\n    x12 = insert(x501, x11)\n    x13 = lbind(ofcolor, I)\n    x14 = lbind(mapply, neighbors)\n    x15 = chain(x14, x13, x141)\n    x16 = fork(difference, x15, identity)\n    x17 = chain(size, x13, x16)\n    x18 = matcher(x17, ZERO)\n    x19 = lbind(extract, x5)\n    x20 = chain(x19, x13, x141)\n    x21 = compose(last, x20)\n    x22 = fork(subtract, x21, x15)\n    x23 = chain(initset, x500, x22)\n    x24 = fork(rapply, x23, identity)\n    x25 = compose(first, x24)\n    x26 = compose(x5, x22)\n    x27 = fork(intersection, x26, x25)\n    x28 = chain(x19, x24, x27)\n    x29 = compose(x5, x27)\n    x30 = fork(intersection, x29, x28)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(I, x32)\n    O = trim(x33)\n    return O"], [1.1, "def solve_8b3368f7(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(673ef23, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"]], "bf699163": [[0.1607843137254902, "def solve_6c8d2a06(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, T, F, F)\n    x6 = rbind(colorcount, ONE)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.1607843137254902, "def solve_d9c70a34(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, F, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.28823529411764703, "def solve_693c28fe(I):\n    x1 = rot180(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot180(x2)\n    return O"], [0.30490196078431375, "def solve_3936d83c(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_6ce7e217(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_27616eb4(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_1f621c95(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_2bd5d1be(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_56bd2134(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_ed6b6093(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_de236228(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_2a16f093(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.30490196078431375, "def solve_01bdc5be(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.3215686274509804, "def solve_9418cabd(I):\n    x1 = initset(ORIGIN)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.3215686274509804, "def solve_be5cb8b0(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(equality, toindices, box)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = argmax(x3, x4)\n    x6 = fgpartition(I)\n    x7 = merge(x6)\n    x8 = difference(x7, x5)\n    x9 = subgrid(x5, I)\n    x10 = subgrid(x8, I)\n    x11 = height(x9)\n    x12 = subtract(x11, TWO)\n    x13 = height(x10)\n    x14 = divide(x12, x13)\n    x15 = width(x9)\n    x16 = subtract(x15, TWO)\n    x17 = width(x10)\n    x18 = divide(x16, x17)\n    x19 = hupscale(x10, x18)\n    x20 = vupscale(x19, x14)\n    x21 = asobject(x20)\n    x22 = shift(x21, UNITY)\n    O = paint(x9, x22)\n    return O"], [0.3215686274509804, "def solve_ffe25cd0(I):\n    x1 = palette(I)\n    x2 = remove(ONE, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = canvas(x4, THREE_BY_THREE)\n    x6 = colorcount(I, ONE)\n    x7 = decrement(x6)\n    x8 = tojvec(x7)\n    x9 = connect(ORIGIN, x8)\n    x10 = fill(x5, TWO, x9)\n    x11 = initset(UNITY)\n    x12 = equality(x6, FOUR)\n    x13 = branch(x12, x11, x9)\n    O = fill(x10, TWO, x13)\n    return O"], [0.3215686274509804, "def solve_ea44bb60(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.3215686274509804, "def solve_4add9518(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.3215686274509804, "def solve_a0f968c0(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.3215686274509804, "def solve_d66db884(I):\n    x1 = palette(I)\n    x2 = contained(ONE, x1)\n    x3 = contained(TWO, x1)\n    x4 = branch(x2, UNITY, TWO_BY_TWO)\n    x5 = branch(x3, RIGHT, x4)\n    x6 = fork(combine, vfrontier, hfrontier)\n    x7 = x6(x5)\n    x8 = canvas(ZERO, THREE_BY_THREE)\n    O = fill(x8, FIVE, x7)\n    return O"], [0.3215686274509804, "def solve_4b8b40a0(I):\n    x1 = width(I)\n    x2 = astuple(NINE, x1)\n    x3 = canvas(ZERO, x2)\n    x4 = vconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = rbind(colorcount, TWO)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.3215686274509804, "def solve_b546c6bd(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.3215686274509804, "def solve_71221886(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.3215686274509804, "def solve_cd8377b8(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = subgrid(x20, I)\n    x22 = switch(x21, x18, x19)\n    x23 = replace(x22, x18, x4)\n    x24 = lbind(downscale, x23)\n    x25 = fork(upscale, x24, identity)\n    x26 = matcher(x25, x23)\n    x27 = shape(x23)\n    x28 = maximum(x27)\n    x29 = interval(ONE, x28, ONE)\n    x30 = sfilter(x29, x26)\n    x31 = maximum(x30)\n    O = downscale(x23, x31)\n    return O"], [0.36851851851851847, "def solve_ffda0447(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = color(x3)\n    x5 = remove(ZERO, x1)\n    x6 = other(x5, x4)\n    O = canvas(x6, UNITY)\n    return O"], [0.36851851851851847, "def solve_c63a7545(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = subgrid(x2, I)\n    x4 = lefthalf(x3)\n    O = tophalf(x4)\n    return O"], [0.3685185185185185, "def solve_7988cc7f(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, size)\n    x3 = subgrid(x2, I)\n    O = trim(x3)\n    return O"], [0.37411764705882355, "def solve_d37efd93(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = astuple(ONE, THREE)\n    x8 = size(x6)\n    x9 = order(x6, leftmost)\n    x10 = apply(color, x9)\n    x11 = rbind(canvas, UNITY)\n    x12 = apply(x11, x10)\n    x13 = merge(x12)\n    x14 = dmirror(x13)\n    x15 = subtract(NINE, x8)\n    x16 = astuple(ONE, x15)\n    x17 = mostcolor(I)\n    x18 = canvas(x17, x16)\n    x19 = hconcat(x14, x18)\n    x20 = hsplit(x19, THREE)\n    x21 = merge(x20)\n    x22 = crop(x21, ORIGIN, x7)\n    x23 = crop(x21, DOWN, x7)\n    x24 = crop(x21, TWO_BY_ZERO, x7)\n    x25 = vmirror(x23)\n    x26 = vconcat(x22, x25)\n    O = vconcat(x26, x24)\n    return O"], [0.3931917211328976, "def solve_690030d6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.3985185185185185, "def solve_60ad08a0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = merge(x1)\n    x5 = fill(I, NEG_ONE, x4)\n    x6 = shape(I)\n    x7 = canvas(NEG_ONE, x6)\n    x8 = hconcat(x5, x7)\n    x9 = objects(x8, F, F, T)\n    x10 = rbind(other, x3)\n    x11 = compose(x10, palette)\n    x12 = fork(astuple, x11, ulcorner)\n    x13 = apply(x12, x9)\n    x14 = merge(x9)\n    x15 = fill(I, x3, x14)\n    x16 = paint(x15, x13)\n    O = compress(x16)\n    return O"], [0.40763616557734206, "def solve_5c588e1a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_7d1e61c4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_9f10e83b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_c98899f1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_75cfeb54(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_0f688366(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_cb1026e1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_7a1dddd4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.40763616557734206, "def solve_3dd0e274(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [0.4148148148148148, "def solve_4858c5b1(I):\n    x1 = astuple(ONE, THREE)\n    x2 = size(x1)\n    x3 = decrement(x2)\n    x4 = canvas(ZERO, x1)\n    x5 = tojvec(x3)\n    x6 = connect(ORIGIN, x5)\n    x7 = equality(x2, FOUR)\n    x8 = insert(UNITY, x6)\n    x9 = branch(x7, x8, x6)\n    O = fill(x4, TWO, x9)\n    return O"], [0.4296296296296296, "def solve_c25334c6(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.4296296296296296, "def solve_f6eab80c(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.4296296296296296, "def solve_099cd861(I):\n    x1 = objects(I, T, F, F)\n    x2 = sizefilter(x1, ONE)\n    x3 = apply(color, x2)\n    x4 = difference(x1, x2)\n    x5 = rbind(subgrid, I)\n    x6 = apply(x5, x4)\n    x7 = rbind(colorcount, SIX)\n    x8 = argmax(x6, x7)\n    x9 = mostcolor(x8)\n    O = canvas(x9, UNITY)\n    return O"], [0.4296296296296296, "def solve_46a4c9f5(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.4715975529100529, "def solve_8abdcc84(I):\n    x1 = objects(I, T, F, F)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = lbind(chain, positive)\n    x6 = lbind(x5, size)\n    x7 = rbind(compose, backdrop)\n    x8 = lbind(lbind, intersection)\n    x9 = chain(x6, x7, x8)\n    x10 = chain(x9, backdrop, outbox)\n    x11 = lbind(sfilter, x4)\n    x12 = compose(x11, x10)\n    x13 = chain(positive, size, x12)\n    x14 = sfilter(x4, x13)\n    x15 = compose(merge, x12)\n    x16 = apply(x15, x14)\n    x17 = rbind(subgrid, I)\n    x18 = apply(x17, x16)\n    x19 = merge(x16)\n    x20 = palette(x19)\n    x21 = lbind(colorcount, x19)\n    x22 = argmin(x20, x21)\n    x23 = rbind(colorcount, x22)\n    O = argmax(x18, x23)\n    return O"], [0.5023148148148148, "def solve_f38fc494(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = ofcolor(x1, ZERO)\n    x4 = ofcolor(x2, ZERO)\n    x5 = intersection(x3, x4)\n    x6 = size(x5)\n    x7 = astuple(FOUR, FOUR)\n    x8 = canvas(THREE, x7)\n    x9 = fill(x8, ZERO, x3)\n    O = fill(x9, TWO, x4)\n    return O"], [0.5232709913889689, "def solve_bc2b4fb8(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5232709913889689, "def solve_bc691e20(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.5361111111111111, "def solve_2da17ccf(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.5587301587301587, "def solve_f3fd0914(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, T, T)\n    x3 = first(x2)\n    x4 = vline(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(x1)\n    x7 = objects(x6, T, T, T)\n    x8 = order(x7, uppermost)\n    x9 = apply(color, x8)\n    x10 = dedupe(x9)\n    x11 = size(x10)\n    x12 = rbind(repeat, x11)\n    O = apply(x12, x10)\n    return O"], [0.580258954008954, "def solve_cff8ce5e(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = valmax(x2, shape)\n    x4 = canvas(x1, x3)\n    x5 = apply(normalize, x2)\n    x6 = lbind(subtract, x3)\n    x7 = chain(halve, x6, shape)\n    x8 = fork(shift, identity, x7)\n    x9 = mapply(x8, x5)\n    O = paint(x4, x9)\n    return O"], [0.5900055192264699, "def solve_db8b69d5(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5900055192264699, "def solve_74f998dd(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5900055192264699, "def solve_f400889a(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5900055192264699, "def solve_d558cb8a(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.5902430555555556, "def solve_7b321275(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.5916319444444444, "def solve_6762fa62(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.5916319444444444, "def solve_f8b63e1f(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.5936739417989418, "def solve_02612f31(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [0.5985457166636943, "def solve_cfb55a72(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    O = rot180(x2)\n    return O"], [0.6148148148148148, "def solve_5020f3c5(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = astuple(FOUR, FOUR)\n    x4 = ofcolor(x1, ZERO)\n    x5 = ofcolor(x2, ZERO)\n    x6 = intersection(x4, x5)\n    x7 = canvas(ZERO, x3)\n    O = fill(x7, THREE, x6)\n    return O"], [0.6163211951447245, "def solve_4bde5106(I):\n    x1 = trim(I)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(ONE, x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = objects(x6, T, F, F)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x5(x10)\n    return O"], [0.6163211951447245, "def solve_9e2c34c7(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = flip(x9)\n    x11 = branch(x10, dmirror, identity)\n    x12 = x11(x8)\n    x13 = objects(x12, T, F, F)\n    x14 = order(x13, leftmost)\n    x15 = apply(color, x14)\n    x16 = repeat(x15, ONE)\n    O = x11(x16)\n    return O"], [0.6199160165858457, "def solve_eb9f3875(I):\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [0.6345541215447758, "def solve_3de58a17(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = mapply(dneighbors, x2)\n    x4 = toobject(x3, I)\n    x5 = mostcolor(x4)\n    x6 = palette(I)\n    x7 = remove(x5, x6)\n    x8 = order(x7, identity)\n    x9 = first(x8)\n    x10 = last(x8)\n    x11 = ofcolor(I, x9)\n    x12 = ofcolor(I, x10)\n    x13 = switch(I, x10, x9)\n    x14 = combine(x11, x12)\n    x15 = subgrid(x14, x13)\n    O = trim(x15)\n    return O"], [0.6600575299564271, "def solve_ce729be0(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.6600575299564271, "def solve_81bc7ebf(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.6600575299564271, "def solve_2967c114(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.6600575299564271, "def solve_1d95db98(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.660134929337232, "def solve_fa599f79(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x7, x16)\n    x20 = ofcolor(x8, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, THREE, x21)\n    return O"], [0.6667887568583583, "def solve_2a19a59b(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, SIX)\n    x3 = compose(flip, x2)\n    x4 = mfilter(x1, x2)\n    x5 = mfilter(x1, x3)\n    x6 = fill(I, TWO, x4)\n    O = fill(x6, ONE, x5)\n    return O"], [0.6671484598793516, "def solve_52d4dd56(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = prapply(connect, x2, x2)\n    x4 = fgpartition(I)\n    x5 = merge(x4)\n    x6 = cover(I, x5)\n    x7 = fork(either, hline, vline)\n    x8 = box(x5)\n    x9 = rbind(difference, x8)\n    x10 = chain(positive, size, x9)\n    x11 = fork(both, x7, x10)\n    x12 = mfilter(x3, x11)\n    O = fill(x6, x1, x12)\n    return O"], [0.6672060197871419, "def solve_4b9b7594(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.6696587388610415, "def solve_a1e670d5(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.6696587388610415, "def solve_10e9514d(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.6696587388610415, "def solve_e2f23174(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.671323326432022, "def solve_e41b3a1d(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = ofcolor(x1, ZERO)\n    x4 = ofcolor(x2, ZERO)\n    x5 = intersection(x3, x4)\n    x6 = replace(x1, NINE, ZERO)\n    O = fill(x6, EIGHT, x5)\n    return O"], [0.674180469289165, "def solve_349a7715(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.674180469289165, "def solve_e482eab4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.674180469289165, "def solve_e75095ef(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = objects(x3, T, F, T)\n    x5 = merge(x4)\n    O = paint(x1, x5)\n    return O"], [0.6837830785199206, "def solve_9a5cba85(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_47143755(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_f806b6fc(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_de2b6808(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_77026548(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_dec8195a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_82db253a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_e861c1ef(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_868dbe6e(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_f5bbc6f8(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_3bbd14bd(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_52dd0580(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_716a7ac9(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_5b4c7e19(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6837830785199206, "def solve_7048e271(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6901349293372321, "def solve_712908b7(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 =equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6901349293372321, "def solve_4b1f1373(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.6986111111111111, "def solve_1e6984ea(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, vline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = combine(x15, x16)\n    x18 = intersection(x15, x16)\n    x19 = difference(x17, x18)\n    O = fill(x14, THREE, x19)\n    return O"], [0.700481793212685, "def solve_9b77a7d2(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_44df1595(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_15147233(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.700481793212685, "def solve_9915a86c(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_c95ea8ea(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_d8988e44(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.700481793212685, "def solve_be7cab67(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = remove(x2, x1)\n    x4 = normalize(x2)\n    x5 = shape(x2)\n    x6 = halve(x5)\n    x7 = invert(x6)\n    x8 = shift(x4, x7)\n    x9 = sizefilter(x3, ONE)\n    x10 = apply(center, x9)\n    x11 = lbind(shift, x8)\n    x12 = mapply(x11, x10)\n    x13 = paint(I, x12)\n    O = rot180(x13)\n    return O"], [0.700481793212685, "def solve_71487622(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_38586d59(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_86516d9c(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_353966b3(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.700481793212685, "def solve_85aa7f23(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.7026546999333007, "def solve_0c976d01(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.709172269403161, "def solve_0a738006(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(add, height, width)\n    x3 = compose(decrement, x2)\n    x4 = fork(equality, size, x3)\n    x5 = fork(difference, toindices, box)\n    x6 = compose(size, x5)\n    x7 = matcher(x6, ZERO)\n    x8 = sfilter(x1, x4)\n    x9 = difference(x1, x8)\n    x10 = sfilter(x9, x7)\n    x11 = merge(x1)\n    x12 = fill(I, TWO, x11)\n    x13 = merge(x8)\n    x14 = fill(x12, ONE, x13)\n    x15 = merge(x10)\n    O = fill(x14, SIX, x15)\n    return O"], [0.7167554635380722, "def solve_c04a553f(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [0.7208389360698277, "def solve_a1393f8c(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = astuple(SIX, THREE)\n    x6 = astuple(FOUR, EIGHT)\n    x7 = astuple(ONE, TWO)\n    x8 = initset(x5)\n    x9 = insert(x6, x8)\n    x10 = insert(x7, x9)\n    x11 = mapply(x4, x10)\n    O = paint(I, x11)\n    return O"], [0.7275056027364944, "def solve_4ad0f610(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = chain(palette, trim, x2)\n    x4 = lbind(contained, THREE)\n    x5 = compose(x4, x3)\n    x6 = fork(add, height, width)\n    x7 = compose(decrement, x6)\n    x8 = fork(equality, size, x7)\n    x9 = mfilter(x1, x5)\n    x10 = mfilter(x1, x8)\n    x11 = replace(I, THREE, SIX)\n    x12 = fill(x11, TWO, x9)\n    O = fill(x12, ONE, x10)\n    return O"], [0.7275056027364944, "def solve_676acfd6(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = chain(palette, trim, x2)\n    x4 = lbind(contained, THREE)\n    x5 = compose(x4, x3)\n    x6 = fork(add, height, width)\n    x7 = compose(decrement, x6)\n    x8 = fork(equality, size, x7)\n    x9 = mfilter(x1, x5)\n    x10 = mfilter(x1, x8)\n    x11 = replace(I, THREE, SIX)\n    x12 = fill(x11, TWO, x9)\n    O = fill(x12, ONE, x10)\n    return O"], [0.7275112822906941, "def solve_532cc8a8(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.7275112822906941, "def solve_72273abc(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.7302617642288691, "def solve_830db236(I):\n    x1 = objects(I, T, F, T)\n    x2 = lbind(sfilter, x1)\n    x3 = compose(size, x2)\n    x4 = x3(vline)\n    x5 = x3(hline)\n    x6 = greater(x4, x5)\n    x7 = branch(x6, lefthalf, tophalf)\n    x8 = branch(x6, righthalf, bottomhalf)\n    x9 = branch(x6, hconcat, vconcat)\n    x10 = x7(I)\n    x11 = x8(I)\n    x12 = index(x10, ORIGIN)\n    x13 = shape(x11)\n    x14 = decrement(x13)\n    x15 = index(x11, x14)\n    x16 = replace(x10, THREE, x12)\n    x17 = replace(x11, THREE, x15)\n    O = x9(x16, x17)\n    return O"], [0.7338151265460182, "def solve_a413f355(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.7338151265460182, "def solve_7a79cd2a(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.7338151265460182, "def solve_7392c7e5(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.7341722694031612, "def solve_4266a79b(I):\n    x1 = rot270(I)\n    x2 = fork(equality, toindices, rot90)\n    x3 = rot180(x1)\n    x4 = rot270(x1)\n    x5 = either(x2, x3)\n    x6 = branch(x5, rbind, ONE)\n    x7 = branch(x5, lefthalf, tophalf)\n    x8 = branch(x5, righthalf, bottomhalf)\n    x9 = branch(x5, hconcat, vconcat)\n    x10 = x7(I)\n    x11 = x8(I)\n    x12 = index(x10, ORIGIN)\n    x13 = shape(x11)\n    x14 = decrement(x13)\n    x15 = index(x11, x14)\n    x16 = replace(x10, THREE, x12)\n    x17 = replace(x11, THREE, x15)\n    O = x9(x16, x17)\n    return O"], [0.7341722694031612, "def solve_618efc47(I):\n    x1 = objects(I, T, F, T)\n    x2 = ofcolor(I, TWO)\n    x3 = argmin(x1, numcolors)\n    x4 = normalize(x3)\n    x5 = occurrences(I, x4)\n    x6 = toindices(x4)\n    x7 = lbind(shift, x6)\n    x8 = mapply(x7, x5)\n    O = fill(I, ONE, x8)\n    return O"], [0.741832732082732, "def solve_0cd3d63d(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.741832732082732, "def solve_e3d3f20f(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.741832732082732, "def solve_a7d718a6(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.741832732082732, "def solve_2ef6a3a9(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.741832732082732, "def solve_26e31701(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.741832732082732, "def solve_0f1b5b9b(I):\n    x1 = switch(I, EIGHT, TWO)\n    x2 = switch(x1, THREE, FOUR)\n    x3 = switch(x2,9, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.7421484598793515, "def solve_ad274ceb(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.7421484598793515, "def solve_77678f50(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.7421484598793515, "def solve_d3a21eb2(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.7421484598793515, "def solve_cd5e5ac1(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.7430184297716247, "def solve_f492f9a6(I):\n    x1 = switch(I, FIVE, EIGHT)\n    x2 = switch(x1, THREE, FOUR)\n    x3 = switch(x2, EIGHT, NINE)\n    x4 = switch(x3, ONE, FOUR)\n    O = switch(x4, TWO, NINE)\n    return O"], [0.7433389360698277, "def solve_18b2110e(I):\n    O = rot180(I)\n    return O"], [0.7433389360698277, "def solve_760714e6(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.7433389360698277, "def solve_edc28001(I):\n    O = rot270(I)\n    return O"], [0.7433389360698277, "def solve_d6948f4e(I):\n    O = rot180(I)\n    return O"], [0.7433389360698277, "def solve_8150f32c(I):\n    O = rot180(I)\n    return O"], [0.7433389360698277, "def solve_cf5f3182(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = astuple(x1, ONE)\n    x8 = astuple(ONE, x2)\n    x9 = decrement(x1)\n    x10 = decrement(x2)\n    x11 = toivec(x10)\n    x12 = tojvec(x9)\n    x13 = crop(I, x11, x8)\n    x14 = crop(I, x12, x7)\n    x15 = asobject(x14)\n    x16 = asobject(x13)\n    x17 = vperiod(x15)\n    x98 = hperiod(x16)\n    x99 = astuple(x17, x98)\n    x10 = lbind(multiply, x10)\n    x11 = neighbors(ORIGIN)\n    x12 = mapply(neighbors, x11)\n    x13 = apply(x10, x12)\n    x14 = lbind(shift, x6)\n    x15 = mapply(x14, x13)\n    O = paint(I, x15)\n    return O"], [0.7433389360698277, "def solve_d9c50c15(I):\n    O = rot180(I)\n    return O"], [0.7433389360698277, "def solve_5cc03688(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.7433389360698277, "def solve_f5150224(I):\n    O = rot180(I)\n    return O"], [0.7433389360698277, "def solve_e0c5e458(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.7434969814540464, "def solve_d0d9d11c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = sfilter(x1, hline)\n    x5 = size(x4)\n    x6 = positive(x5)\n    x7 = branch(x6, identity, dmirror)\n    x8 = x7(I)\n    x9 = rbind(subgrid, x8)\n    x10 = matcher(color, x3)\n    x11 = compose(flip, x10)\n    x12 = partition(x8)\n    x13 = sfilter(x12, x11)\n    x14 = rbind(ofcolor, x3)\n    x15 = lbind(mapply, vfrontier)\n    x16 = chain(x15, x14, x9)\n    x17 = fork(shift, x16, ulcorner)\n    x18 = fork(intersection, toindices, x17)\n    x19 = mapply(x18, x13)\n    x20 = fill(x8, ZERO, x19)\n    O = x7(x20)\n    return O"], [0.7436574074074074, "def solve_46b8caba(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.7436574074074074, "def solve_f83f9a53(I):\n    x1 = switch(I, FIVE, EIGHT)\n    O = switch(x1, EIGHT, TWO)\n    return O"], [0.7436960789269706, "def solve_ca6a9b87(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7436960789269706, "def solve_7fa510ce(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = frontiers(I)\n    x6 = colorfilter(x5, x4)\n    x7 = size(x6)\n    x8 = positive(x7)\n    x9 = branch(x8, dmirror, identity)\n    x10 = ofcolor(I, x4)\n    x11 = ofcolor(I, TWO)\n    x12 = ofcolor(I, ONE)\n    x13 = rbind(gravitate, x10)\n    x14 = compose(x13, initset)\n    x15 = fork(add, identity, x14)\n    x16 = fork(connect, identity, x15)\n    x17 = shape(I)\n    x18 = maximum(x17)\n    x19 = lbind(multiply, x18)\n    x20 = lbind(gravitate, x10)\n    x21 = chain(x19, sign, x20)\n    x22 = compose(x21, initset)\n    x23 = fork(add, identity, x22)\n    x24 = fork(connect, identity, x23)\n    x25 = mapply(x16, x11)\n    x26 = mapply(x24, x12)\n    x27 = fill(I, TWO, x25)\n    O = fill(x27, ONE, x26)\n    return O"], [0.7436960789269706, "def solve_30668c56(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.7436960789269706, "def solve_f2764e95(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_f1c7bbbd(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.7436960789269706, "def solve_a03c489d(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = recolor(ZERO, x2)\n    x4 = normalize(x3)\n    x5 = occurrences(I, x4)\n    x6 = toindices(x4)\n    x7 = lbind(shift, x6)\n    x8 = mapply(x7, x5)\n    O = fill(I, x1, x8)\n    return O"], [0.7436960789269706, "def solve_8bda1693(I):\n    x1 = objects(I, T, F, F)\n    x2 = compose(maximum, shape)\n    x3 = order(x1, x2)\n    x4 = first(x3)\n    x5 = last(x3)\n    x6 = color(x4)\n    x7 = color(x5)\n    x8 = equality(x6, x7)\n    x9 = combine(x4, x5)\n    x10 = repeat(x9, ONE)\n    x11 = remove(x4, x3)\n    x12 = remove(x5, x11)\n    x13 = compose(hfrontier, center)\n    x14 = fork(recolor, color, x13)\n    x15 = mapply(x14, x12)\n    O = paint(I, x15)\n    return O"], [0.7436960789269706, "def solve_2110d98f(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [0.7436960789269706, "def solve_014bb1fa(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7436960789269706, "def solve_54436cb3(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_e71f7902(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_6ce84a7d(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_b54d0461(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7436960789269706, "def solve_02888a76(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, T)\n    x3 = rbind(objects, F)\n    x4 = rbind(x3, F)\n    x5 = rbind(x4, T)\n    x6 = lbind(canvas, x1)\n    x7 = compose(x6, shape)\n    x8 = fork(paint, x7, normalize)\n    x9 = compose(x5, x8)\n    x10 = fork(colorfilter, x9, color)\n    x11 = rbind(shift, RIGHT)\n    x12 = rbind(argmax, rightmost)\n    x13 = compose(x12, x10)\n    x14 = fork(remove, x13, x10)\n    x15 = chain(x11, merge, x14)\n    x16 = rbind(argmax, rightmost)\n    x17 = compose(x16, x10)\n    x18 = fork(combine, x17, x15)\n    x19 = fork(shift, x18, ulcorner)\n    x20 = merge(x2)\n    x21 = fill(I, x1, x20)\n    x22 = mapply(x19, x2)\n    O = paint(x21, x22)\n    return O"], [0.7436960789269706, "def solve_f0160443(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, last)\n    x5 = fork(recolor, first, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [0.7436960789269706, "def solve_ecdc6445(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7436960789269706, "def solve_16daba00(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.7436960789269706, "def solve_97b4f6cf(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7436960789269706, "def solve_e12b3625(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_0287bf80(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_5b6a6a11(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_f6aff4de(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.7436960789269706, "def solve_d786afa4(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_f9a49cf6(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [0.7436960789269706, "def solve_06858a4e(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_9241658c(I):\n    O = hmirror(I)\n    return O"], [0.7436960789269706, "def solve_ecf3f142(I):\n    x1 = fork(multiply, height, width)\n    x2 = partition(I)\n    x3 = argmax(x2, x1)\n    x4 = remove(x3, x2)\n    x5 = argmax(x4, x1)\n    x6 = other(x4, x5)\n    x7 = palette(I)\n    x8 = lrcorner(x5)\n    x9 = add(x8, UNITY)\n    x10 = llcorner(x5)\n    x11 = add(x10, DOWN_LEFT)\n    x12 = urcorner(x5)\n    x13 = add(x12, UP_RIGHT)\n    x14 = ulcorner(x5)\n    x15 = add(x14, NEG_UNITY)\n    x16 = shoot(x9, UNITY)\n    x17 = shoot(x11, DOWN_LEFT)\n    x18 = shoot(x13, UP_RIGHT)\n    x19 = shoot(x15, NEG_UNITY)\n    x20 = combine(x16, x17)\n    x21 = combine(x18, x19)\n    x22 = combine(x20, x21)\n    x23 = color(x6)\n    O = fill(I, x23, x22)\n    return O"], [0.7436960789269706, "def solve_f20dc35f(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.7436960789269706, "def solve_0ddb2b7b(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_4ea083dd(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_f878706b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_098a307f(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, FOUR, x6)\n    return O"], [0.7436960789269706, "def solve_fd479b93(I):\n    x1 = switch(I, FOUR, EIGHT)\n    O = switch(x1, ONE, TWO)\n    return O"], [0.7436960789269706, "def solve_6cef9a04(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_fd571042(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [0.7436960789269706, "def solve_0d7588db(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, TWO, x3)\n    return O"], [0.7436960789269706, "def solve_83e1f9b2(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.7436960789269706, "def solve_5a3f2775(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [0.7436960789269706, "def solve_c31648c7(I):\n    O = dmirror(I)\n    return O"], [0.7436960789269706, "def solve_f66c9b52(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.7436960789269706, "def solve_0d6d5f46(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_7e0960ce(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = lbind(greater, THREE)\n    x4 = compose(x3, size)\n    x5 = sfilter(x2, x4)\n    x6 = mapply(toindices, x5)\n    x7 = fill(I, x1, x6)\n    x8 = objects(x7, T, F, T)\n    x9 = fork(recolor, color, backdrop)\n    x10 = mapply(x9, x8)\n    O = paint(x7, x10)\n    return O"], [0.7436960789269706, "def solve_57386026(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_0f33f28f(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_c3094d4a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.7436960789269706, "def solve_1a66c75a(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = fill(I, x8, x32)\n    return O"], [0.7436960789269706, "def solve_ae79e827(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, TWO, x6)\n    return O"], [0.7436960789269706, "def solve_11c7f307(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.7436960789269706, "def solve_3c888f24(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.7436960789269706, "def solve_7eb304f9(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = height(x2)\n    x4 = height(I)\n    x5 = interval(ZERO, x4, x3)\n    x6 = lbind(shift, x2)\n    x7 = compose(x6, toivec)\n    x8 = compose(x7, invert)\n    x9 = fork(combine, x7, x8)\n    x10 = mapply(x9, x5)\n    O = paint(I, x10)\n    return O"], [0.7436960789269706, "def solve_ee2265d2(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_a4ad214b(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.7436960789269706, "def solve_ba1de0a8(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7436960789269706, "def solve_b4252d0c(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7436960789269706, "def solve_e586a6ca(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_14ef9b6a(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_25b71daa(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.7436960789269706, "def solve_2ee9819a(I):\n    x1 = objects(I, T, F, T)\n    x2 = mapply(delta, x1)\n    O = fill(I, SEVEN, x2)\n    return O"], [0.7436960789269706, "def solve_21c5f80a(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.7436960789269706, "def solve_6f136dd4(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [0.7436960789269706, "def solve_118e7952(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_288cfff0(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = sfilter(x2, square)\n    x4 = difference(x2, x3)\n    x5 = merge(x3)\n    x6 = recolor(THREE, x5)\n    x7 = merge(x4)\n    x8 = recolor(FOUR, x7)\n    x9 = paint(I, x6)\n    O = paint(x9, x8)\n    return O"], [0.7436960789269706, "def solve_bdbc6c83(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = lbind(recolor, EIGHT)\n    x4 = rbind(ofcolor, x1)\n    x5 = chain(x3, backdrop, x4)\n    x6 = fork(paint, identity, x5)\n    x7 = height(I)\n    x8 = vsplit(I, x7)\n    x9 = mapply(x6, x8)\n    x10 = ofcolor(x9, EIGHT)\n    x11 = dmirror(I)\n    x12 = width(I)\n    x13 = vsplit(x11, x12)\n    x14 = mapply(x6, x13)\n    x15 = dmirror(x14)\n    x16 = ofcolor(x15, EIGHT)\n    x17 = combine(x10, x16)\n    x18 = difference(x17, x2)\n    O = fill(I, EIGHT, x18)\n    return O"], [0.7436960789269706, "def solve_52bcda1e(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = prapply(connect, x2, x2)\n    x4 = rbind(greater, ONE)\n    x5 = compose(x4, size)\n    x6 = sfilter(x3, x5)\n    x7 = fork(either, vline, hline)\n    x8 = mfilter(x6, x7)\n    x9 = fill(I, THREE, x8)\n    x10 = leastcolor(I)\n    O = fill(x9, x10, x2)\n    return O"], [0.7436960789269706, "def solve_92d74748(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(shoot, RIGHT)\n    x4 = compose(x3, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(x1, DOWN_LEFT)\n    x9 = initset(x8)\n    x10 = mostcolor(I)\n    x11 = recolor(x10, x9)\n    x12 = objects(x7, T, F, T)\n    x13 = insert(x11, x12)\n    x14 = order(x13, uppermost)\n    x15 = first(x14)\n    x16 = remove(x11, x14)\n    x17 = remove(x15, x14)\n    x18 = compose(lrcorner, first)\n    x19 = compose(lrcorner, last)\n    x20 = fork(connect, x18, x19)\n    x21 = compose(color, first)\n    x22 = fork(recolor, x21, x20)\n    x23 = pair(x16, x17)\n    x24 = mapply(x22, x23)\n    O = underpaint(x7, x24)\n    return O"], [0.7436960789269706, "def solve_ec5d73c7(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_14ef5834(I):\n    x1 = shape(I)\n    x2 = canvas(ZERO, x1)\n    x3 = hconcat(I, x2)\n    x4 = objects(x3, F, F, T)\n    x5 = matcher(color, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = sizefilter(x7, ONE)\n    x9 = merge(x8)\n    O = fill(I, ONE, x9)\n    return O"], [0.7436960789269706, "def solve_d40b95f9(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = lbind(shift, x11)\n    x14 = occurrences(I, x12)\n    x15 = mapply(x13, x14)\n    x16 = shift(x15, x12)\n    x17 = ofcolor(I, x9)\n    x18 = prapply(connect, x17, x16)\n    x19 = mapply(x18, x16)\n    x20 = intersection(x15, x19)\n    O = fill(I, x9, x20)\n    return O"], [0.7436960789269706, "def solve_49bd86c3(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_60b18f38(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.7436960789269706, "def solve_a8d2bd7c(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, TWO, x6)\n    return O"], [0.7436960789269706, "def solve_118cfe50(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.7436960789269706, "def solve_113147be(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_d69de930(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [0.7436960789269706, "def solve_0289ef55(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.7436960789269706, "def solve_49183c77(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(shoot, RIGHT)\n    x4 = compose(x3, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(x1, DOWN_LEFT)\n    x9 = initset(x8)\n    x10 = mostcolor(I)\n    x11 = recolor(x10, x9)\n    x12 = objects(x7, T, F, T)\n    x13 = insert(x11, x12)\n    x14 = order(x13, uppermost)\n    x15 = first(x14)\n    x16 = remove(x11, x14)\n    x17 = remove(x15, x14)\n    x18 = compose(lrcorner, first)\n    x19 = compose(lrcorner, last)\n    x20 = fork(connect, x18, x19)\n    x21 = compose(color, first)\n    x22 = fork(recolor, x21, x20)\n    x23 = pair(x16, x17)\n    x24 = mapply(x22, x23)\n    O = underpaint(x7, x24)\n    return O"], [0.7436960789269706, "def solve_0bea6a70(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.7436960789269706, "def solve_c178e374(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.7440145502645503, "def solve_a1a15b27(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = lbind(power, outbox)\n    x8 = chain(x7, halve, width)\n    x9 = initset(x8)\n    x10 = lbind(rapply, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = compose(backdrop, x12)\n    x14 = fork(difference, x13, toindices)\n    x15 = mapply(x14, x1)\n    x16 = mostcolor(I)\n    x17 = ofcolor(I, x16)\n    x18 = intersection(x15, x17)\n    O = fill(x6, THREE, x18)\n    return O"], [0.7440145502645503, "def solve_b29df95f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.7440145502645503, "def solve_c5df6a75(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.7459101546601546, "def solve_f348a2d6(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.7472675074983992, "def solve_dcaf4aa6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7472675074983992, "def solve_e37c947e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7472675074983992, "def solve_4084e9cd(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7472675074983992, "def solve_5dfb35cb(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = rbind(multiply, THREE)\n    x6 = rbind(divide, THREE)\n    x7 = compose(x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = toindices(x4)\n    x10 = compose(x8, last)\n    x11 = sfilter(x9, x10)\n    O = fill(I, SIX, x11)\n    return O"], [0.7472675074983992, "def solve_6972c097(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.7480334878120887, "def solve_f68f5a98(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.7480334878120887, "def solve_d0ed3e3d(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [0.7480334878120887, "def solve_cc69fd20(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.7480334878120887, "def solve_dd8c3732(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.7480334878120887, "def solve_e3319c05(I):\n    x1 = replace(I, ZERO, THREE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [0.7480334878120887, "def solve_ea0c1245(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.7511574074074074, "def solve_f5a04b82(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, NEG_ONE, x4)\n    return O"], [0.7532198884507801, "def solve_76dbc30e(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.7532198884507801, "def solve_1337d54c(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.7532198884507801, "def solve_e4415c36(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.7532198884507801, "def solve_e59a7693(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.7532198884507801, "def solve_e61f52eb(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.7583002645502646, "def solve_a2ad9994(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.7597675074983992, "def solve_c83601ce(I):\n    O = replace(I, FOUR, NEG_ONE)\n    return O"], [0.7597675074983992, "def solve_e5b651d8(I):\n    x1 = switch(I, ORIGIN, THREE)\n    x2 = switch(x1, EIGHT, TWO)\n    x3 = switch(x2, TWO, ONE)\n    O = switch(x3, ONE, FOUR)\n    return O"], [0.7615532217841134, "def solve_c118dc2c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7615532217841134, "def solve_c52c0925(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.7615532217841134, "def solve_c74814de(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.767824074074074, "def solve_e8f97d58(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.7725859788359788, "def solve_2f7672a5(I):\n    x1 = objects(I, T, F, F)\n    x2 = asindices(I)\n    x3 = box(x2)\n    x4 = toobject(x3, I)\n    x5 = mostcolor(x4)\n    x6 = colorfilter(x1, x5)\n    x7 = rbind(bordering, I)\n    x8 = compose(flip, x7)\n    x9 = mfilter(x6, x8)\n    x10 = fill(I, TWO, x9)\n    O = replace(x10, x5, THREE)\n    return O"], [0.7758389360698277, "def solve_97c80cb9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7758389360698277, "def solve_f9c173a1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7758389360698277, "def solve_a74b3ab2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7758389360698277, "def solve_cb12132f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7758389360698277, "def solve_cd1f9d36(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7758389360698277, "def solve_c73575b4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6,88, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.7819990673127664, "def solve_5451e371(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7819990673127664, "def solve_0520f955(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7819990673127664, "def solve_591788a2(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7819990673127664, "def solve_a264b1ea(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7819990673127664, "def solve_72472149(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7819990673127664, "def solve_87a29689(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.7819990673127664, "def solve_195d5ca0(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.8011574074074075, "def solve_ff7854b1(I):\n    x1 = shape(I)\n    x2 = remove(x1, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = canvas(x4, x1)\n    x6 = colorcount(I, x4)\n    x7 = decrement(x6)\n    x8 = tojvec(x7)\n    x9 = connect(ORIGIN, x8)\n    x10 = fill(x5, TWO, x9)\n    x11 = initset(UNITY)\n    x12 = equality(x6, FOUR)\n    x13 = branch(x12, x11, x9)\n    O = fill(x10, TWO, x13)\n    return O"], [1.0, "def solve_d9a5e169(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_1ef9b4e0(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_289be062(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_9e09be27(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_68de77ff(I):\n    x1 = remove(I, x1)\n    x2 = merge(x1)\n    x3 = cover(I, x2)\n    x4 = mapply(daeighbors, x1)\n    x5 = mapply(neighbors, x1)\n    x6 = fill(x3, ONE, x4)\n    O = fill(x6, TWO, x5)\n    return O"], [1.0, "def solve_18fe9976(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_34234cf4(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = rbind(toobject, I)\n    x5 = chain(leastcolor, x4, delta)\n    x6 = rbind(shift, UP)\n    x7 = fork(connect, ulcorner, urcorner)\n    x8 = compose(x6, x7)\n    x9 = rbind(shift, DOWN)\n    x10 = fork(connect, llcorner, lrcorner)\n    x11 = compose(x9, x10)\n    x12 = fork(astuple, x8, x11)\n    x13 = lbind(rbind, manhattan)\n    x14 = compose(x13, delta)\n    x15 = fork(argmin, x12, x14)\n    x16 = fork(combine, delta, x15)\n    x17 = fork(recolor, x5, x16)\n    x18 = mapply(x17, x3)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_86b137f8(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_f3fe2460(I):\n    x1 = asindices(I)\n    x2 = shape(I)\n    x3 = halve(x2)\n    x4 = rbind(greater, x3)\n    x5 = compose(x4, size)\n    x6 = sfilter(x1, x5)\n    x7 = compose(last, last)\n    x8 = order(x6, x7)\n    x9 = argmax(x8, size)\n    x10 = mostcolor(x9)\n    x11 = palette(I)\n    x12 = remove(x10, x11)\n    x13 = lbind(colorcount, I)\n    x14 = argmin(x12, x13)\n    x15 = mostcolor(I)\n    x16 = ofcolor(I, x14)\n    x17 = ofcolor(I, x18)\n    x18 = combine(x16, x17)\n    x19 = mapply(neighbors, x18)\n    x20 = difference(x19, x18)\n    x21 = toobject(x20, I)\n    x22 = leastcolor(x21)\n    x23 = toindices(x21)\n    x24 = ofcolor(I, x22)\n    x25 = ofcolor(I, x23)\n    x26 = neighbors(ORIGIN)\n    x27 = mapply(neighbors, x26)\n    x28 = sfilter(x24, x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x22)\n    O = fill(I, x11, x30)\n    return O"], [1.0, "def solve_648b0ca4(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_40d7f8da(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = Feca(x2)\n    x4 = shape(I)\n    x5 = canvas(ZERO, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [1.0, "def solve_529cc78d(I):\n    x1 = lbind(rbind, sfilter)\n    x2 = lbind(compose, flip)\n    x3 = lbind(matcher, first)\n    x4 = chain(x3, x1, x2)\n    x5 = lbind(paint, I)\n    x6 = compose(last, last)\n    x7 = chain(decrement, x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = toindices(xEG029493)\n    x10 = compose(x8, last)\n    x11 = sfilter(x9, x10)\n    O = fill(I, ZERO, x11)\n    return O"], [1.0, "def solve_3a99a165(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = rot68b190(x2)\n    return O"], [1.0, "def solve_087b3361(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = first(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(x1, THREE, x3)\n    x6 = paint(x5, x4)\n    x7 = uppermost(x4)\n    x8 = leftmost(x4)\n    x9 = subtract(x8, TEN)\n    x10 = add(x8, TEN)\n    x11 = interval(x9, x10, TWO)\n    x12 = lbind(greater, x7)\n    x13 = compose(x12, first)\n    x14 = rbind(contained, x11)\n    x15 = compose(x14, last)\n    x16 = sfilter(x1, x13)\n    x17 = sfilter(x16, x15)\n    O = fill(x6, FOUR, x17)\n    return O"], [1.0, "def solve_1ef1a851(I):\n    x1 = ofcolor(I, ONE)\n    x2 =neighbors(UNITY)\n    x3 = initset(UNITY)\n    x4 = recolor(ONE, x3)\n    x5 = upscale(x4, THREE)\n    x6 = toindices(x5)\n    x7 = lrcorner(x5)\n    x8 = ulcorner(x5)\n    x9 = rbind(contained, x8)\n    x10 = compose(x9, portrait)\n    x11 = sfilter(x6, x10)\n    x12 = merge(x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, ONE)\n    x18 = ulcorner(x5)\n    x19 = subgrid(x18, x16)\n    x20 = branch(x19, identity, height)\n    x21 = x20(x16)\n    x22 = subtract(x21, TWO)\n    x23 = multiply(x22, x13)\n    x24 = add(x23, x8)\n    x25 = repeat(x24, ONE)\n    x26 = x15(x25)\n    x27 = ofcolor(x26, ONE)\n    x28 = subgrid(x27, x26)\n    x29 = interval(ZERO, x28, ONE)\n    x30 = apply(x15, x29)\n    x31 = initset(x30)\n    x32 = insert(x77, x31)\n    x33 = backdrop(x32)\n    x34 = cover(x16, x33)\n    x35 = dmirror(x34)\n    x36 = x15(x35)\n    x37 = shift(x34, x36)\n    x38 = lbind(shift, x37)\n    x39 = mapply(x38, x30)\n    O = paint(x34, x39)\n    return O"], [1.0, "def solve_751d4a10(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = equality(x2, FOUR)\n    x4 = branch(x3, leftmost, RIGHT)\n    x5 = x4(x1)\n    x6 = interval(ONE, FIVE, ONE)\n    x7 = lbind(multiply, x5)\n    x8 = apply(x7, x6)\n    x9 = repeat(x8, ONE)\n    x10 = combine(x7, x9)\n    x11 = apply(x7, x10)\n    x12 = extract(x11, last)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = subgrid(x13, I)\n    x16 = rot90(x15)\n    x17 = rot180(x15)\n    x18 = rot270(x17)\n    x19 = hconcat(x16, x14)\n    x20 = hconcat(x18, x16)\n    x21 = vconcat(x19, x20)\n    x22 = vconcat(x21, x21)\n    x23 = asobject(x22)\n    x24 = rot270(x23)\n    x25 = vconcat(x24, x23)\n    x26 = vconcat(x25, x24)\n    O = downscale(x26, THREE)\n    return O"], [1.0, "def solve_9d5fddf4(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_f3892808(I):\n    x1 = asindices(I)\n    x2 = toobject(x1, I)\n    x3 = mostcolor(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(chain, size)\n    x7 = rbind(x6, toindices)\n    x8 = lbind(lbind, contained)\n    x9 = lbind(ofcolor, I)\n    x10 = chain(x9, x7, x7)\n    x11 = lbind(matcher, x10)\n    x12 = compose(x11, ZERO)\n    x13 = chain(flip, x12, x10)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(x15, x10)\n    x17 = palette(I)\n    x18 = remove(x3, x17)\n    x19 = lbind(colorcount, I)\n    x20 = argmin(x18, x19)\n    x21 = x20(x64)\n    x22 = x20(x6)\n    x23 = x20(x4)\n    x24 = x20(x16)\n    x25 = compose(last, first)\n    x26 = compose(last, last)\n    x27 = fork(either, x25, x26)\n    x28 = compose(initset, x12)\n    x29 = compose(colorcount, x28)\n    x30 = fork(equality, x29, x27)\n    x31 = sfilter(x28, x30)\n    x32 = ofcolor(I, x21)\n    x33 = difference(x32, x31)\n    x34 = mapply(neighbors, x33)\n    x35 = mapply(neighbors, x34)\n    x36 = colorfilter(x31, x21)\n    x37 = fill(I, x20, x36)\n    O = fill(x37, x20, x25)\n    return O"], [1.0, "def solve_369647e5(I):\n    x1 = lbind(contained, THREE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, THREE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(invert, size)\n    x9 = order(x3, x8)\n    x10 = apply(normalize, x9)\n    x11 = size(x10)\n    x12 = interval(ZERO, x11, ONE)\n    x13 = apply(toivec, x12)\n    x14 = mpapply(shift, x10, x13)\n    x15 = merge(x14)\n    x16 = rot90(x15)\n    x17 = shape(x15)\n    x18 = canvas(ZERO, x17)\n    x19 = paint(x18, x16)\n    O = rot270(x19)\n    return O"], [1.0, "def solve_7a641a60(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_8b56ddca(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_1e027ee9(I):\n    x1 = frontiers(I)\n    x2 = matcher(identity, ZERO)\n    x3 = rbind(sfilter, x2)\n    x4 = compose(size, x3)\n    x5 = matcher(x4, ONE)\n    x6 = asindices(I)\n    x7 = lrcorner(x6)\n    x8 = add(UNITY, x7)\n    x9 = initset(x8)\n    x10 = fill(I, ZERO, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = apply(x11, x10)\n    x14 = apply(x12, x10)\n    x15 = contained(x13, x14)\n    x16 = width(I)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = compose(tojvec,00000)\n    x19 = height(I)\n    x20 = decrement(x19)\n    x21 = lbind(astuple, x20)\n    x22 = apply(x21, x17)\n    x23 = astuple(x6, x5)\n    x24 = canvas(ZERO, x23)\n    x25 = asindices(x24)\n    x26 = box(x25)\n    x27 = fill(x24, EIGHT, x26)\n    x28 = lbind(shift, x25)\n    x29 = mapply(x28, x26)\n    O = paint(x27, x29)\n    return O"], [1.0, "def solve_ad9dbd38(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = compose(x2, x1)\n    x4 = fork(intersection, x1, x3)\n    x5 = compose(size, x4)\n    x6 = palette(I)\n    x7 = matcher(x5, ZERO)\n    x8 = sfilter(x6, x7)\n    x9 = totuple(x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = mapply(neighbors, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = ofcolor(I, x11)\n    x17 = mapply(neighbors, x16)\n    x18 = toobject(x17, I)\n    x19 = mostcolor(x18)\n    x20 = rbind(shoot, UNITY)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = fork(combine, x20, x21)\n    x23 = rbind(shoot, UP_RIGHT)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = fork(combine, x23, x24)\n    x26 = fork(combine, x22, x25)\n    x27 = ofcolor(I, x11)\n    x28 = ofcolor(I, x10)\n    x29 = combine(x27, x28)\n    x30 = mapply(x26, x29)\n    x31 = ofcolor(I, x15)\n    x32 = intersection(x31, x30)\n    x33 = ofcolor(I, x19)\n    x34 = intersection(x33, x30)\n    x35 = fill(I, x10, x32)\n    O = fill(x35, x11, x34)\n    return O"], [1.0, "def solve_2ffdd91a(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = toobject(x1, I)\n    x3 = mostcolor(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = order(x5, identity)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = ofcolor(I, x7)\n    x10 = ofcolor(I, x8)\n    x11 = switch(I, x9, x10)\n    x12 = objects(x11, T, T, T)\n    x13 = colorfilter(x12, x7)\n    x14 = rbind(adjacent, x13)\n    x15 = mfilter(x14, vline)\n    x16 = mfilter(x14, hline)\n    x17 = size(x15)\n    x18 = size(x16)\n    x19 = greater(x17, x18)\n    x20 = branch(x19, x18, x15)\n    O = canvas(x20, UNITY)\n    return O"], [1.0, "def solve_1b0b411a(I):\n    x1 = rbind(toobject, I)\n    x2 = rbind(colorcount, ZERO)\n    x3 = chain(x2, x1, dneighbors)\n    x4 = matcher(x3, ONE)\n    x5 = astuple(extract, x4)\n    x6 = astuple(insert, x5)\n    x7 = astuple(ONE, x6)\n    x8 = canvas(ZERO, x7)\n    x9 = asindices(x8)\n    x10 = shift(x9, UNITY)\n    x11 = paint(x8, x10)\n    x12 = ofcolor(x11, ZERO)\n    x13 = ulcorner(x12)\n    x14 = shoot(x13, NEG_UNITY)\n    x15 = shoot(x13, UNITY)\n    x16 = shoot(x13, DOWN_LEFT)\n    x17 = shoot(x13, UP_RIGHT)\n    x18 = combine(x14, x16)\n    x19 = combine(x18, x17)\n    x20 = combine(x18, x18)\n    x21 = combine(x19, x20)\n    O = fill(x11, THREE, x21)\n    return O"], [1.0, "def solve_61a74e3b(I):\n    x1 = shape(I)\n    x2 = subgrid(x1, I)\n    x3 = index(I, ORIGIN)\n    x4 = decrerecolor(x2, x3)\n    x5 = hmirror(x4)\n    x6 = vmirror(x4)\n    x7 = objects(x6, T, F, F)\n    x8 = astuple(x5, x6)\n    x9 = canvas(x3, x8)\n    x10 = hmirror(x9)\n    x11 = vmirror(x9)\n    x12 = objects(x10, T, F, T)\n    x13 = merge(x12)\n    x14 = paint(x9, x13)\n    x15 = astuple(x11, x10)\n    x16 = astuple(x13, x15)\n    x17 = replace(x14, x9, x3)\n    x18 = fill(x17, FOUR, x16)\n    x19 = merge(x12)\n    x20 = cover(x18, x19)\n    x21 = downscale(x20, THREE)\n    x22 = crop(x21, ORIGIN, x7)\n    O = downscale(x21, TWO)\n    return O"], [1.0, "def solve_6f307036(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_05c40ee6(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_19a67544(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, size)\n    x3 = astuple(x2, x2)\n    x4 = vmirror(x2)\n    x5 = hmirror(x2)\n    x6 = combine(x4, x5)\n    x7 = merge(x6)\n    x8 = toindices(x7)\n    x9 = rbind(contained, x8)\n    x10 = compose(x9, first)\n    x11 = sfilter(x6, x10)\n    x12 = upscale(x11, TWO)\n    x13 = ofcolor(I, FOUR)\n    x14 = extract(x13, x12)\n    x15 = ulcorner(x14)\n    x16 = subgrid(x14, I)\n    x17 = trim(x16)\n    x18 = asobject(x17)\n    x19 = shift(x18, UNITY)\n    x20 = paint(I, x19)\n    x21 = subgrid(x1, x20)\n    x22 = vmirror(x21)\n    x23 = hmirror(x21)\n    x24 = connect(x13, x23)\n    x25 = apply(dmirror, x24)\n    x26 = mapply(cdece, x25)\n    O = paint(x21, x26)\n    return O"], [1.0, "def solve_92cf5840(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, ZERO)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_e892207c(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = rbind(toobject, I)\n    x5 = chain(leastcolor, x4, delta)\n    x6 = rbind(shift, UP)\n    x7 = fork(connect, ulcorner, urcorner)\n    x8 = compose(x6, x7)\n    x9 = rbind(shift, DOWN)\n    x10 = fork(connect, llcorner, lrcorner)\n    x11 = compose(x9, x10)\n    x12 = fork(astuple, x8, x11)\n    x13 = lbind(rbind, manhattan)\n    x14 = compose(x13, delta)\n    x15 = fork(argmin, x12, x14)\n    x16 = fork(combine, delta, x15)\n    x17 = fork(recolor, x5, x16)\n    x18 = mapply(x17, x3)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_5cd2b1de(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_ea333ae4(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    x14 = apply(x4, x13)\n    x15 = ofcolor(I, FOUR)\n    x16 = subgrid(x15, x14)\n    x17 = apply(x4, x15)\n    x18 = lbind(shift, x16)\n    x19 = mapply(x18, x17)\n    O = fill(x16, ZERO, x19)\n    return O"], [1.0, "def solve_a6e03b10(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = rot90(x1)\n    x3 = rot180(x1)\n    x4 = rot270(x1)\n    x5 = hconcat(x2, x1)\n    x6 = hconcat(x3, x1)\n    x7 = vconcat(x5, x6)\n    x8 = vconcat(x7, x6)\n    O = x9(x8)\n    return O"], [1.0, "def solve_5f4ac0bc(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    O = upscale(I, x2)\n    return O"], [1.0, "def solve_4839ff05(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_f1860e60(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_60455e17(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = matcher(first, x4)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x1, x6)\n    x8 = difference(x1, x7)\n    x9 = toobject(x8, I)\n    x10 = apply(initset, x9)\n    x11 = rbind(shoot, UNITY)\n    x12 = compose(x11, ulcorner)\n    x13 = fork(combine, vfrontier, hfrontier)\n    x14 = compose(x13, x12)\n    x15 = fork(shift, identity, x14)\n    x16 = mapply(x15, x5)\n    O = paint(I, x16)\n    return O"], [1.0, "def solve_468204d3(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [1.0, "def solve_67a86756(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_a7bf3ff1(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x15)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [1.0, "def solve_33fbf2ee(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_7139a5a0(I):\n    x1 = lbind(I, THREE)\n    x2 = compose(positive, size)\n    x3 = rbind(s000, ZERO)\n    x4 = compose(x2, x3)\n    x5 = fork(add, first, x4)\n    x6 = compose(invert, x5)\n    x7 = fork(shoot, identity, x6)\n    x8 = fork(difference, toindices, x7)\n    x9 = chain(decrement, size, x8)\n    x10 = fork(equality, toindices, x9)\n    x11 = fork(shoot, ZERO, DOWN_LEFT)\n    x12 = chain(flip, x10, x11)\n    x13 = sfilter(x1, x12)\n    x14 = argmax(x13, x9)\n    x15 = center(x14)\n    x16 = outbox(x14)\n    x17 = ulcorner(x16)\n    x18 = subgrid(x14, I)\n    x19 = hmirror(x18)\n    x20 = lbind(shift, x19)\n    x21 = fgpartition(x19)\n    x22 = merge(x21)\n    x23 = cover(x19, x22)\n    x24 = shift(x23, x5)\n    x25 = paint(x23, x24)\n    O = vmirror(x25)\n    return O"], [1.0, "def solve_18fefce7(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_674593bf(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_e21fe008(I):\n    x1 = fgpartition(I)\n    x2 = compose(dneighbors, center)\n    x3 = fork(difference, backdrop, x2)\n    x4 = fork(equality, toindices, x3)\n    x5 = matcher(size, FIVE)\n    x6 = fork(both, x4, x5)\n    x7 = extract(x1, x6)\n    x8 = color(x7)\n    x9 = merge(x1)\n    x10 = compose(hmirror, vmirror)\n    x11 = initset(x10)\n    x12 = insert(vmirror, x11)\n    x13 = insert(hmirror, x12)\n    x14 = rapply(x13, x9)\n    x15 = ulcorner(x7)\n    x16 = lbind(subtract, x15)\n    x17 = matcher(first, x8)\n    x18 = rbind(sfilter, x17)\n    x19 = chain(x16, ulcorner, x18)\n    x20 = fork(shift, identity, x19)\n    x21 = mapply(x20, x14)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_8e0e70b0(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_40abf5b3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_e9ea88c1(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = fork(multiply, height, width)\n    x4 = argmax(x2, x3)\n    x5 = mostcolor(x4)\n    x6 = canvas(x5, x1)\n    x7 = palette(x6)\n    x8 = remove(x5, x7)\n    x9 = other(x8, x8)\n    x10 = ofcolor(I, x4)\n    x11 = ofcolor(I, x9)\n    x12 = apply(first, x10)\n    x13 = compose(first, last)\n    x14 = totuple(x12)\n    x15 = apply(x13, x14)\n    x16 = asobject(x15)\n    x17 = x13(x16)\n    x18 = x13(x11)\n    x19 = ulcorner(x16)\n    x20 = increment(x19)\n    x21 = rbind(subtract, x20)\n    x22 = toindices(x16)\n    x23 = apply(x21, x22)\n    x24 = lbind(shift, x17)\n    x25 = mapply(x24, x23)\n    O = fill(I, x9, x25)\n    return O"], [1.0, "def solve_a424d533(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x9 = mostcolor(x8)\n    x10 = palette(x8)\n    x11 = remove(x9, x10)\n    x12 = other(x11, x12)\n    x13 = ofcolor(x8, x12)\n    x14 = vmirror(x13)\n    x15 = hmirror(x13)\n    x16 = width(x8)\n    x17 = ulcorner(x8)\n    x18 = lbind(subtract, x17)\n    x19 = chain(positive, x18, last)\n    x20 = lbind(shift, x8)\n    x21 = rbind(multiply, x16)\n    x22 = chain(x19, x20, x21)\n    x23 =sfilter(x13, x22)\n    x24 = maximum(x23)\n    x25 = dmirror(x24)\n    x26 = objects(x25, T, F, T)\n    x27 = mapply(x26, x26)\n    x28 = astuple(x24, x27)\n    x29 = astuple(x24, x27)\n    x30 = canvas(x9, x29)\n    x31 = vmirror(x30)\n    x32 = ofcolor(x31, x12)\n    x33 = initset(x40)\n    x34 = rbind(manhattan, x33)\n    x35 = compose(x34, initset)\n    x36 = argmin(x32, x35)\n    x37 = x30(x36)\n    O = paint(x31, x37)\n    return O"], [1.0, "def solve_ef7ec8c6(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = recolor(ZERO, x1)\n    x3 = lbind(shift, x2)\n    x4 = height(I)\n    x5 = rbind(multiply, x4)\n    x6 = apply(x5, x3)\n    x7 = mapply(x6, x2)\n    O = fill(I, EIGHT, x7)\n    return O"], [1.0, "def solve_44dab636(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_bd33b779(I):\n    x1 = compose(positive, size)\n    x2 = rbind(sfilter, hline)\n    x3 = chain(x1, x2, frontiers)\n    x4 = chain(size, dedupe, first)\n    x5 = chain(size, dedupe, last)\n    x6 = fork(greater, x4, x5)\n    x7 = fork(both, x3, x6)\n    x8 = astuple(identity, rot90)\n    x9 = astuple(rot180, rot270)\n    x10 = combine(x8, x9)\n    x11 = astuple(identity, rot270)\n    x12 = astuple(rot180, rot90)\n    x13 = combine(x11, x12)\n    x14 = pair(x10, x13)\n    x15 = rbind(rapply, I)\n    x16(compose, initset, first)\n    x17 = compose(first, x16)\n    x18 = chain(size, x15, x17)\n    x19 = mostcolor(I)\n    x20 =fixmax(x14, x18)\n    x21 = matcher(x18, x20)\n    x22 = compose(flip, x21)\n    x23 = fork(both, x21, x22)\n    x24 = extract(x19, x23)\n    x25 = itastuple(x24, x22)\n    x26 = delta(x25)\n    x27 = fill(I, x19, x26)\n    x28 = compose(size, x22)\n    x29 = apply(x28, x25)\n    x30 = asindices(x27)\n    x31 = ofcolor(x27, x19)\n    x32 = difference(x30, x31)\n    x33 = fill(x27,valmax, x32)\n    x34 = lbind(shift, x28)\n    x35 = mapply(x34, x33)\n    O = paint(x33, x35)\n    return O"], [1.0, "def solve_3c58e97f(I):\n    x1 =8888104991\n    x2 = astuple(ONE, THREE)\n    x3 = size(x1)\n    x4 = decrement(x3)\n    x5 = astuple(TWO, x4)\n    x6 = canvas(ZERO, x5)\n    x7 = tojvec(x4)\n    x8 = crop(x6, x7, x4)\n    x9 = hmirror(x8)\n    x10 = objects(x9, T, F, T)\n    x11 = colorfilter(x10, TWO)\n    x12 = size(x11)\n    x13 = interval(ZERO, x5, ONE)\n    x14 = pair(x13, x11)\n    x15 = compose(invert, first)\n    x16 = power(outbox, x15)\n    x17 = fork(equality, identity, x16)\n    x18 = compose(x17, last)\n    x19 = sfilter(x14, x18)\n    x20 = totuple(x19)\n    x21 = apply(color, x20)\n    x22 = dedupe(x21)\n    x23 = size(x22)\n    x24 = equality(x23, ONE)\n    x25 = decrement(x24)\n    x26 = apply(decrement, x25)\n    x27 = height(x22)\n    x28 = maximum(x22)\n    x29 = equality(x27, ZERO)\n    x30 = branch(x28, x26, x29)\n    x31 = apply(x30, x22)\n    x32 = lbind(repeat, x306)\n    x33 = apply(x32, x31)\n    O = xconcat(x22, x33)\n    return O"], [1.0, "def solve_628fd0c9(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(multiply, THREE)\n    x19 = rbind(divide, THREE)\n    x20 = chain(x18, x19, last)\n    x21 = initset(x15)\n    x22 = insert(x65, x21)\n    x23 = backdrop(x22)\n    x24 = lbind(shift, x23)\n    x25 = mapply(x24, x4)\n    O = paint(x16, x25)\n    return O"], [1.0, "def solve_1b9d5a7e(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = x2(I, TWO)\n    x4 = first(x3)\n    x5 = last(x3)\n    x6 = fgpartition(x4)\n    x7 = merge(x6)\n    x8 = difference(x7, x5)\n    x9 = merge(x8)\n    x10 = color(x4)\n    x11 = fill(x4, x10, x9)\n    x12 = fill(x11, TWO, x5)\n    x13 = replace(x12, ZERO, EIGHT)\n    x14 = dmirror(x13)\n    x15 = papply(pair, x13, x14)\n    x16 = lbind(apply, maximum)\n    x17 = apply(x16, x15)\n    x18 = cmirror(x17)\n    x19 = papply(pair, x17, x18)\n    x20 = apply(x16, x19)\n    x21 = papply(pair, x16, x20)\n    x22 = apply(x16, x21)\n    x23 = papply(pair, x22, x17)\n    x24 = papply(pair, x23, x23)\n    x25 = compose(increment, x24)\n    x26 = lbind(apply, x25)\n    x27 = lbind(colorfilter, x17)\n    x28 = chain(x26, x27, last)\n    x29 = fork(recolor, first, x28)\n    x30 = mapply(x29, x15)\n    O = paint(x3, x30)\n    return O"], [1.0, "def solve_e3275e45(I):\n    x1 = llcorner(I)\n    x2 = shoot(x1,ORIGIN)\n    x3 = equality(x2, ZERO)\n    x4 = branch(x3, x2, x2)\n    x5 = shoot(x4, DOWN)\n    x6 = combine(x2, x5)\n    O = fill(I, ONE, x6)\n    return O"], [1.0, "def solve_0b4e4cce(I):\n    x1 = switch(I, EIGHT, TWO)\n    x2 = switch(x1, TWO, ZERO)\n    x3 = switch(x2, EIGHT, ONE)\n    x4 = switch(x3, EIGHT, FOUR)\n    x5 = switch(x4, EIGHT, FIVE)\n    x6 = switch(x5, TWO, FOUR)\n    x7 = switch(x6, EIGHT, ONE)\n    x8 = switch(x7, x2, FOUR)\n    x9 = fork(connect, ulcorner, urcorner)\n    x10 = fork(connect, ulcorner, llcorner)\n    x11 = fork(combine, x9, x10)\n    x12 = x11(x1)\n    x13 = x11(x2)\n    x14 = fork(recolor, color, x12)\n    x15 = fork(recolor, color, x13)\n    x16 = fork(combine, x14, x15)\n    x17 = x16(x2)\n    x18 = paint(x3, x17)\n    O = paint(x18, x2)\n    return O"], [1.0, "def solve_7abf562f(I):\n    x1 = lbind(fork, connect)\n    x2 = lbind(matcher, first)\n    x3 = compose(x2, leastcolor)\n    x4 = lbind(matcher, first)\n    x5 = compose(x4, mostcolor)\n    x6 = fork(extract, identity, x3)\n    x7 = compose(last, x6)\n    x8 = compose(dneighbors, x7)\n    x9 = lbind(apply, last)\n    x10 = fork(sfilter, identity, x5)\n    x11 = compose(x9, x10)\n    x12 = fork(difference, x8, x11)\n    x13 = compose(first, x12)\n    x14 = fork(subtract, x7, x13)\n    x15 = fork(shoot, x7, x14)\n    x16 = fork(recolor, leastcolor, x15)\n    x17 = mapply(x16, x1)\n    O = underpaint(I, x17)\n    return O"], [1.0, "def solve_cec3b342(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_e20e0b07(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = partition(I)\n    x7 = fork(multiply, height, width)\n    x8 = fork(equality, size, x7)\n    x9 = sfilter(x6, x8)\n    x10 = argmax(x9, size)\n    x11 = difference(x5, x10)\n    x12 = apply(initset, x11)\n    x13 = rbind(hmatching, x10)\n    x14 = rbind(vmatching, x10)\n    x15 = fork(either, x13, x14)\n    x16 = sfilter(x12, x15)\n    x17 = rbind(gravitate, x10)\n    x18 = fork(add, center, x17)\n    x19 = fork(connect, center, x18)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x16)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_b56e63bb(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_e08ff4eb(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_1a5ecc43(I):\n    x1 = rot270(I)\n    x2 = argmax(x1, numcolors)\n    x3 = portrait(x2)\n    x4 = branch(x3, mostcolor, x1)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = interval(ONE, FIVE, ONE)\n    x8 = lbind(multiply, x5)\n    x9 = apply(x8, x7)\n    x10 = lbind(shift, x2)\n    x11 = mapply(x10, x9)\n    O = paint(x6, x11)\n    return O"], [1.0, "def solve_ecd1ca27(I):\n    x1 = objects(I, T, F, T)\n    x2 = size(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = apply(double, x3)\n    x5 = apply(double, x4)\n    x6 = astuple(ONE, NINE)\n    x7 = canvas(ZERO, x6)\n    x8 = fill(x7, ONE, x5)\n    x9 = fill(x8, TWO, x4)\n    O = fill(x9, THREE, x5)\n    return O"], [1.0, "def solve_5447fdea(I):\n    x1 = asindices(I)\n    x2 = shape(I)\n    x3 = halve(x2)\n    x4 = connect(ORIGIN, x3)\n    x5 = height(x4)\n    x6 = halve(x5)\n    x7 = width(x4)\n    x8 = halve(x7)\n    x9 = tojvec(x8)\n    x10 = height(x4)\n    x11 = decrement(x10)\n    x12 = lbind(astuple, x11)\n    x13 = rbind(shoot, x9)\n    x14 = compose(x12, x13)\n    x15 = fork(combine, x14, last)\n    x16 = apply(x15, x4)\n    O = fill(I, ZERO, x16)\n    return O"], [1.0, "def solve_69984d3f(I):\n    x1 = leastcolor(I)\n    x2 = height(I)\n    x3 = vsplit(I, x2)\n    x4 = rbind(ofcolor, x1)\n    x5 = compose(leftmost, x4)\n    x6 = width(I)\n    x7 = divide(x6, THREE)\n    x8 = multiply(x7, TWO)\n    x9 = lbind(greater, x7)\n    x10 = compose(x9, x5)\n    x11 = lbind(greater, x8)\n    x12 = compose(x11, x5)\n    x13 = compose(flip, x10)\n    x14 = fork(both, x12, x13)\n    x15 = fork(either, x10, x14)\n    x16 = compose(flip, x15)\n    x17 = rbind(multiply, TWO)\n    x18 = compose(x17, x10)\n    x19 = rbind(multiply, FOUR)\n    x20 = compose(x19, x14)\n    x21 = rbind(multiply, THREE)\n    x22 = compose(x21, x16)\n    x23 = fork(add, x18, x20)\n    x24 = fork(add, x23, x22)\n    x25 = width(I)\n    x26 = rbind(repeat, x25)\n    x27 = compose(x26, x24)\n    O = apply(x27, x3)\n    return O"], [1.0, "def solve_50d5eeed(I):\n    x1 = Fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_70bf081b(I):\n    x1 = objects(I, T, F, T)\n    x2 = ofcolor(I, TWO)\n    x3 = mapply(vfrontier, x2)\n    x4 = underfill(I, ONE, x3)\n    x5 = hconcat(x4, x4)\n    O = vconcat(x5, x5)\n    return O"], [1.0, "def solve_80c1d51e(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_6b126768(I):\n    x1 = mostcolor(I)\n    x2 = replace(I, x1, ZERO)\n    x3 = leastcolor(x2)\n    O = ofcolor(I, x3)\n    return O"], [1.0, "def solve_d90b349a(I):\n    x1 = rot270(I)\n    x2 = rot180(I)\n    x3 = rot270(x2)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_771ee578(I):\n    x1 = lbind(contained, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = chain(merge, vmirror, hmirror)\n    x5 = x4(x3)\n    x6 = fork(recolor, color, x5)\n    x7 = mapply(x6, x4)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_0b8b8ce0(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_447fd2c6(I):\n    x1 = asobject(I)\n    x2 = shape(I)\n    x3 = decrement(x2)\n    x4 = index(I, x3)\n    x5 = double(x2)\n    x6 = canvas(x4, x5)\n    x7 = paint(x6, x1)\n    x8 = objects(x7, F, F, T)\n    x9 = first(x8)\n    x10 = shift(x9, LEFT)\n    x11 = vperiod(x10)\n    x12 = hperiod(x10)\n    x13 = neighbors(ORIGIN)\n    x14 = lbind(mapply, neighbors)\n    x15 = power(x14, TWO)\n    x16 = x15(x13)\n    x17 = astuple(x11, x12)\n    x18 = lbind(multiply, x17)\n    x19 = astuple(x18, x16)\n    x20 = lbind(shift, x10)\n    x21 = occurrences(x12, x13)\n    x22 = mapply(x20, x21)\n    O = paint(x7, x22)\n    return O"], [1.0, "def solve_a59f77f9(I):\n    x1 = argmin(I, bounds)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = compose(flip, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    O = canvas(x5, UNITY)\n    return O"], [1.0, "def solve_64fc3813(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = hfrontier(x1)\n    x4 = vfrontier(x2)\n    x5 = intersection(x3, x4)\n    x6 = astuple(x2, x5)\n    x7 = canvas(ZERO, x6)\n    O = fill(x7, TWO, x3)\n    return O"], [1.0, "def solve_6aee7734(I):\n    x1 = fgpartition(I)\n    x2 = valmax(x1, numcolors)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, mostcolor, I)\n    x5 = branch(x3, backdrop, x4)\n    x6 = urcorner(x5)\n    x7 = index(I, x6)\n    x8 = equality(x7, ONE)\n    x9 = add(x6, x8)\n    x10 = shift(x9, UNITY)\n    x11 = paint(I, x10)\n    x12 = objects(x11, T, F, T)\n    x13 = colorfilter(x12, TWO)\n    x14 = rbind(bordering, I)\n    x15 = compose(flip, x14)\n    x16 = mfilter(x13, x15)\n    O = paint(x11, x16)\n    return O"], [1.0, "def solve_0bb08e31(I):\n    x1 = shape(I)\n    x2 = subgrid(x1, I)\n    x3 = ofcolor(I, ZERO)\n    x4 = mapply(vfrontier, x3)\n    x5 = mapply(hfrontier, x3)\n    x6 = size(x4)\n    x7 = size(x5)\n    x8 = greater(x6, x7)\n    x9 = fill(I, ZERO, x4)\n    x10 = fill(x9, ZERO, x5)\n    O = fill(x10, TWO, x6)\n    return O"], [1.0, "def solve_4ed20adc(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_fc0a3cb2(I):\n    x1 = rot45(I)\n    x2 = fgpartition(x1)\n    x3 = compose(flip, even)\n    x4 = extract(x2, x3)\n    x5 = other(x2, x4)\n    x6 = rbind(colorcount, x5)\n    x7 = apply(x6, x4)\n    x8 = normalize(x5)\n    x9 = lbind(shift, x8)\n    x10 = apply(x9, x7)\n    x11 = rbind(intersection, x5)\n    x12 = compose(size, x11)\n    x13 = argmax(x10, x12)\n    O = underfill(x1, x5, x13)\n    return O"], [1.0, "def solve_94f7618a(I):\n    x1 = astuple(vsplit, hsplit)\n    x2 = rbind(rbind, TWO)\n    x3 = rbind(rapply, I)\n    x4 = initset(x2)\n    x5 = lbind(rapply, x4)\n    x6 = chain(first, x3, x5)\n    x7 = lbind(apply, numcolors)\n    x8 = compose(x7, x6)\n    x9 = matcher(x8, TWO_BY_TWO)\n    x10 = extract(x1, x9)\n    x11 = x10(I, TWO)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = palette(x12)\n    x15 = palette(x13)\n    x16 = intersection(x14, x15)\n    x17 = first(x16)\n    x18 = shape(x12)\n    x19 = canvas(x17, x18)\n    x20 = ofcolor(x12, x17)\n    x21 = ofcolor(x13, x17)\n    x22 = intersection(x20, x21)\n    O = fill(x19, TWO, x22)\n    return O"], [1.0, "def solve_e273c8d5(I):\n    x1 = ONE(I)\n    x2 = branch(x1, ZERO, ORIGIN)\n    x3 = shape(x2)\n    x4 = maximum(x3)\n    x5 = halve(x4)\n    x6 = interval(ONE, x5, ONE)\n    x7 = lbind(power, inbox)\n    x8 = rbind(rapply, x2)\n    x9 = compose(initset, x7)\n    x10 = chain(first, x8, x9)\n    x11 = apply(x10, x6)\n    x12 = repeat(x2, ONE)\n    x13 = combine(x12, x11)\n    x14 = rbind(toobject, I)\n    x15 = compose(color, x14)\n    x16 = apply(x15, x13)\n    x17 = interval(ZERO, x5, ONE)\n    x18 = pair(x17, x16)\n    x19 = compose(invert, first)\n    x20 = order(x18, x19)\n    x21 = apply(last, x20)\n    x22 = mpapply(recolor, x21, x13)\n    O = paint(I, x22)\n    return O"], [1.0, "def solve_fdea3b9d(I):\n    x1 = rot270(I)\n    x2 = leastcolor(x1)\n    x3 = shape(I)\n    x4 = add(TWO, x3)\n    x5 = canvas(x2, x4)\n    x6 = asobject(I)\n    x7 = shift(x6, UNITY)\n    x8 = paint(x5, x7)\n    x9 = rot90(x8)\n    x10 = astuple(x4, x9)\n    x11 = leastcolor(x10)\n    x12 = rot180(x8)\n    x13 = astuple(x4, x12)\n    x14 = leastcolor(x13)\n    x15 = ofcolor(x11, x14)\n    x16 = shift(x15, UP)\n    x17 = ofcolor(x11, x16)\n    x18 = rapply(x17, x15)\n    x19 = ulcorner(x15)\n    x20 = lbind(subtract, x19)\n    x21 = matcher(first, x11)\n    x22 = rbind(sfilter, x21)\n    x23 = lbind(upscale, x10)\n    x24 = chain(x20, x22, x23)\n    x25 = fork(concat, identity, x24)\n    x26 = chain(asobject, x23, x25)\n    x27 = mapply(x26, x18)\n    O = paint(x8, x27)\n    return O"], [1.0, "def solve_6aa6ba82(I):\n    x1 = objects(I, F, T, T)\n    x2 = mapply(d2, x1)\n    O = underfill(I, EIGHT, x2)\n    return O"], [1.0, "def solve_dc356b1a(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_4bf0e74b(I):\n    x1 = ofcolor(I, TWO)\n    x2 = vline(x1)\n    x3 = branch(x2, dmirror, identity)\n    x4 = x3(I)\n    x5 = ofcolor(x4, THREE)\n    x6 = ofcolor(x4, TWO)\n    x7 = center(x5)\n    x8 = hfrontier(x7)\n    x9 = center(x6)\n    x10 = hfrontier(x9)\n    x11 = mostcolor(I)\n    x12 = palette(I)\n    x13 = remove( THREE, x12)\n    x14 = remove( TWO, x13)\n    x15 = other(x14, x11)\n    x16 = replace(x4, THREE, x11)\n    x17 = difference(x8, x15)\n    x18 = underfill(x16, THREE, x17)\n    x19 = replace(x4, TWO, x11)\n    x20 = difference(x10, x19)\n    O = fill(x18, THREE, x20)\n    return O"], [1.0, "def solve_77930746(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = normalize(x2)\n    x4 = lbind(matcher, first)\n    x5 = compose(x4, mostcolor)\n    x6 = fork(sfilter, identity, x5)\n    x7 = fork(difference, identity, x6)\n    x8 = lbind(rbind, upscale)\n    x9 = interval(ONE, FOUR, ONE)\n    x10 = apply(x8, x9)\n    x11 = lbind(recolor, ZERO)\n    x12 = compose(x11, outbox)\n    x13 = fork(combine, identity, x12)\n    x14 = lbind(occurrences, I)\n    x15 = lbind(rbind, subtract)\n    x16 = lbind(apply, increment)\n    x17 = lbind(lbind, shift)\n    x18 = chain(x15, ulcorner, x7)\n    x19 = chain(x14, x13, x7)\n    x20 = fork(apply, x18, x19)\n    x21 = compose(x16, x20)\n    x22 = fork(mapply, x17, x21)\n    x23 = rapply(x10, x3)\n    x24 = mapply(x22, x23)\n    O = paint(I, x24)\n    return O"], [1.0, "def solve_1fbeb872(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_2dca882d(I):\n    x1 = hconcat(I, I)\n    x2 = vconcat(x1, x1)\n    x3 = asindices(x2)\n    x4 = mostcolor(I)\n    x5 = ofcolor(x2, x4)\n    x6 = difference(x3, x5)\n    x7 = mapply(ineighbors, x6)\n    O = underfill(x2, EIGHT, x7)\n    return O"], [1.0, "def solve_18ca7167(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = partition(I)\n    x6 = fork(multiply, height, width)\n    x7 = fork(equality, size, x6)\n    x8 = extract(x5, x7)\n    x9 = color(x8)\n    x10 = palette(I)\n    x11 = remove(x4, x10)\n    x12 = other(x11, x9)\n    x13 = ofcolor(I, x12)\n    x14 = vmirror(x13)\n    x15 = hmirror(x13)\n    x16 = astuple(x14, x15)\n    x17 = subgrid(x9, I)\n    x18 = closet(x16, x4)\n    x19 = extract(x18, x7)\n    x20 = last(x19)\n    x21 = replace(I, x4, x20)\n    x22 = vmirror(x21)\n    x23 = hmirror(x21)\n    x24 = astuple(x22, x23)\n    x25 = combine(x21, x24)\n    x26 = vmirror(x25)\n    x27 = ulcorner(x8)\n    x28 = lrcorner(x8)\n    x29 = shape(x28)\n    x30 = add(x27, x29)\n    x31 =pletion(x26, x30)\n    x32 = ofcolor(x25, x4)\n    x33 = vmirror(x32)\n    x34 = hmirror(x32)\n    x35 = astuple(x33, x34)\n    x36 = combine(x31, x35)\n    x37 = rbind(adjacent, x8)\n    x38 = sfilter(x36, x37)\n    O = extract(x38, x29)\n    return O"], [1.0, "def solve_d749fff7(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [1.0, "def solve_9a0e197c(I):\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = normalize(x2)\n    x4 = ulcorner(x3)\n    x5 = shoot(x4, NEG_UNITY)\n    x6 = shape(x3)\n    x7 = rbind(multiply, x6)\n    x8 = rbind(shoot, UP_RIGHT)\n    x9 = mapply(x7, x5)\n    x10 = mapply(x8, x5)\n    x11 = fill(I, x1, x9)\n    O = fill(x11, x1, x10)\n    return O"], [1.0, "def solve_6b324514(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_440021f1(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_8de40c65(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_36257036(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_21c826a0(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = matcher(size, ZERO)\n    x4 = rbind(sfilter, x3)\n    x5 = lbind( compose, DOWN)\n    x6 = lbind(rbind, sfilter)\n    x7 = chain(x5, x4, x6)\n    x8 = compose(color, merge)\n    x9 = fork(recolor, x8, identity)\n    x10 = compose(x9, x7)\n    x11 = fork(combine, x7, x10)\n    x12 = compose(x11, x11)\n    x13 = fork(lrcorner, x12, toindices)\n    x14 = rbind(contained, x12)\n    x15 = compose(x14, last)\n    x16 = sfilter(x1, x15)\n    x17 = vsplit(I, TWO)\n    x18 = hsplit(I, TWO)\n    x19 = merge(x18)\n    x20 = width(x19)\n    x21 = increment(x20)\n    x22 = interval(ZERO, x21, TWO)\n    x23 = height(x19)\n    x24 = rbind(multiply, x23)\n    x25 = chain(x24, ZERO, last)\n    x26 = fork(recolor, mostcolor, x25)\n    x27 = mapply(x26, x22)\n    x28 = paint(x17, x27)\n    x29 = replace(x28, EIGHT, ONE)\n    x30 = compose(x29, last)\n    x31 = fork(combine, x30, first)\n    x32 = sfilter(x1, x31)\n    x33 = paint(x29, x32)\n    O = fork(connect, first, last)\n    return O"], [1.0, "def solve_8ddfde31(I):\n    x1 = box(I)\n    x2 = shape(I)\n    x3 = halve(x2)\n    x4 = vmirror(I)\n    x5 = lbind(shift, x4)\n    x6 = compose(x5, x3)\n    x7 = interval(THREE, x3, ONE)\n    x8 = apply(x6, x7)\n    x9 = mapply(x5, x8)\n    O = paint(I, x9)\n    return O"], [1.0, "def solve_3069e105(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = fill(x8, ONE, x11)\n    return O"], [1.0, "def solve_07468077(I):\n    x1 = matcher(first, TWO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_22ac083e(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_65375ace(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 =remove(x9, x10)\n    x12 = NEindices(x11)\n    x13 = normalize(x12)\n    x14 = shift(x13, NEG_UNITY)\n    x15 = ulcorner(x9)\n    x16 = lbind(shift, x14)\n    x17 = rbind(multiply, x11)\n    x18 = chain(x17, x16, last)\n    x19 = mapply(x18, x14)\n    x20 = paint(x9, x19)\n    O = rot270(x20)\n    return O"], [1.0, "def solve_541281f2(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(recolor, x13, x14)\n    x16 = compose(size, x15)\n    x17 = matcher(x16, ZERO)\n    x18 = astuple(x5, x17)\n    x19 = canvas(ZERO, x18)\n    x20 = sfilter(x19, x17)\n    x21 = difference(x19, x20)\n    O = paint(x19, x21)\n    return O"], [1.0, "def solve_5c3cdd18(I):\n    x1 = box(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [1.0, "def solve_f7793207(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_1576f1f7(I):\n    x1 = rbind(shoot, UNITY)\n    x2 = rbind(add, UNITY)\n    x3 = chain(x2, x1, lrcorner)\n    x4 = fork(recolor, color, x3)\n    x5 = compose(x4, toindices)\n    x6 = mapply(x5, x1)\n    O = paint(I, x6)\n    return O"], [1.0, "def solve_6f480d87(I):\n    x1 = asindices(I)\n    x2 = toobject(x1, I)\n    x3 = mostcolor(x2)\n    x4 = objects(I, T, F, F)\n    x5 = colorfilter(x4, x3)\n    x6 = fork(bordering, toindices, outbox)\n    x7 = compose(flip, x6)\n    x8 = mfilter(x5, x7)\n    O = fill(I, x3, x8)\n    return O"], [1.0, "def solve_98342054(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fork(subtract, x10, x11)\n    return O"], [1.0, "def solve_2c080de7(I):\n    x1 = frontiers(I)\n    x2 = matcher(color, ZERO)\n    x3 = extract(x1, x2)\n    x4 = shape(x3)\n    x5 = canvas(ZERO, x4)\n    x6 = hconcat(x5, x3)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [1.0, "def solve_8ce4be3a(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_5d59c959(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_d821e963(I):\n    x1 = crop(I, ORIGIN, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = hperiod(x2)\n    x4 = height(I)\n    x5 = astuple(x4, x3)\n    x6 = ulcorner(x2)\n    x7 = crop(I, x6, x5)\n    x8 = rot90(x7)\n    x9 = double(x4)\n    x10 = divide(x9, x3)\n    x11 = increment(x10)\n    x12 = repeat(x8, x11)\n    x13 = merge(x12)\n    x14 = rot270(x13)\n    x15 = astuple(x4, x9)\n    O = crop(x14, ORIGIN, x15)\n    return O"], [1.0, "def solve_af38330d(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_a538eeab(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_035fd738(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_cd4ca982(I):\n    x1 =alf(I)\n    x2 = vmirror(x1)\n    x3 = equality(x2, I)\n    x4 = branch(x3, ONE, SEVEN)\n    O = canvas(x4, UNITY)\n    return O"], [1.0, "def solve_ac533e15(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [1.0, "def solve_9be4a4ec(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_c0f08e67(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [1.0, "def solve_9c167625(I):\n    O = subgrid(x1, I)\n    return O"], [1.0, "def solve_17fd7da2(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP9RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [1.0, "def solve_7407f0f1(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_9e0a5f2b(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_87472d3a(I):\n    x1 = shape(I)\n    x2 = add(x1, TWO)\n    x3 = canvas(ZERO, x2)\n    x4 = asobject(I)\n    x5 = shift(x4, UNITY)\n    x6 = paint(x3, x5)\n    x7 = asindices(x3)\n    x8 = fork(505, identity, vmirror)\n    x9 = x8(x7)\n    x10 = lbind(shift, x9)\n    x11 = objects(x6, T, T, T)\n    x12 = mapply(x10, x11)\n    x13 = paint(x6, x12)\n    O = paint(x13, x4)\n    return O"], [1.0, "def solve_d03d1ab4(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_1fbdd497(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_a26bfb0c(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_704dbe4e(I):\n    x1 = matcher(first, TWO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_d0a17cae(I):\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    O =paint(x3, x3)\n    return O"], [1.0, "def solve_8b80a64e(I):\n    x1 = subgrid(ONE, I)\n    x2 = partition(x1)\n    x3 = halve(x2)\n    x4 = height(x1)\n    x5 = matcher(last, x4)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x3, x6)\n    x8 = fork(combine, vfrontier, hfrontier)\n    x9 = compose(x8, center)\n    x10 = fork(recolor, color, x9)\n    x11 = mapply(x10, x7)\n    x12 = merge(x3)\n    x13 = paint(x1, x12)\n    O = paint(x13, x11)\n    return O"], [1.0, "def solve_6157c561(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_b4fce146(I):\n    x1 = rot270(I)\n    x2 = decrement(x1)\n    O = upscale(x3, x2)\n    return O"], [1.0, "def solve_736132e2(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [1.0, "def solve_c4741741(I):\n    O = solve5099\n    return O"], [1.0, "def solve_37b22850(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x888, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_3ad40553(I):\n    x1 = vmirror(I)\n    x2 =hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_87fe7286(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_90522f30(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = rbind(toobject, I)\n    x5 = chain(leastcolor, x4, delta)\n    x6 = rbind(shift, UP)\n    x7 = fork(connect, ulcorner, urcorner)\n    x8 = compose(x6, x7)\n    x9 = rbind(shift, DOWN)\n    x10 = fork(connect, llcorner, lrcorner)\n    x11 = compose(x9, x10)\n    x12 = fork(astuple, x8, x11)\n    x13 = lbind(rbind, manhattan)\n    x14 = compose(x13, delta)\n    x15 = fork(argmin, x12, x14)\n    x16 = fork(combine, delta, x15)\n    x17 = fork(recolor, x5, x16)\n    x18 = mapply(x17, x3)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_af3af83d(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_8c953107(I):\n    x1 = objects(I, T, F, F)\n    x2 = compose(normal, shape)\n    x3 = chain(x2, totuple, palette)\n    x4 = chain(normal, canvas, x3)\n    x5 = matcher(x4, ONE)\n    x6 =sfilter(x1, x5)\n    x7 = fork(equality, toindices, box)\n    x8 = sfilter(x6, x7)\n    x9 = matcher(x7, x8)\n    x10 = sfilter(x1, x9)\n    x11 = fork(multiply, height, width)\n    x12 = subtract(NINE, x11)\n    x13 = multiply(x12, TWO)\n    x14 = power(outbox, x13)\n    x15 = center(x6)\n    x16 = outbox(x6)\n    x17 = objects(I, T, F, F)\n    x18 = colorfilter(x17, ZERO)\n    x19 = lbind(bordering, x16)\n    x20 = compose(normalize, x19)\n    x21 = mfilter(x18, x20)\n    x22 = outbox(x6)\n    x23 = difference(x21, x22)\n    x24 = fill(I, ONE, x32)\n    O = fill(x24, THREE, x23)\n    return O"], [1.0, "def solve_c059cb99(I):\n    O = upscale(I, TWO)\n    return O"], [1.0, "def solve_6bc7072c(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [1.1, "def solve_a6f2ffd1(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = apply(x15, x13)\n    x17 = mapply(x13, x16)\n    x18 = height(x3)\n    x19 = divide(x18, x14)\n    x20 = increment(x19)\n    x21 = width(x3)\n    x22 = divide(x21, x14)\n    x23 = increment(x22)\n    x24 = interval(ZERO, x23, ONE)\n    x25 = product(x24, x24)\n    x26 = rbind(multiply, x19)\n    x27 = apply(x26, x25)\n    x28 = toindices(x3)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x27)\n    x31 =palette(x30)\n    x32 = other(x31, x22)\n    x33 = partition(x3)\n    x34 = ofcolor(x33, x32)\n    x35 = mapply(toindices, x34)\n    x36 = toindices(x3)\n    x37 = apply(x36, x32)\n    x38 = mapply(x27, x37)\n    x39 = papply(shift, x35, x38)\n    x40 = mapply(toobject, x33)\n    x"], [1.1, "def solve_51d21435(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = power(x37, TWO)\n    x39 = lbind(shift, x31)\n    x40 = fork(recolor"], [1.1, "def solve_9366b8e9(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = rot3599 flip(I)\n    x2 = rbind(ofcolor, ZERO)\n    x3 = compose(lowermost, x2)\n    x4 = matcher(x3, ZERO)\n    x5 = extract(x1, x4)\n    x6 = apply(uppermost, x5)\n    x7 = lbind(subtract, x6)\n    x8 = chain(increment, x7, initset)\n    x9 = lbind(fork, add)\n    x10 = lbind(x9, identity)\n    x11 = lbind(lbind, astuple)\n    x12 = lbind(rbind, astuple)\n    x13 = compose(x11, x12)\n    x14 = lbind(compose, x8)\n    x15 = dmirror(x14)\n    x16 = lbind(compose, x10)\n    x17 = x16(x15)\n    x18 = compose(x14, x17)\n    x19 = lbind(rapply, x13)\n    x20 = compose(initset, x18)\n    x21 = chain(first, x19, x20)\n    x22 = compose(x11, x21)\n    x23 = fork(remove, x22, x15)\n    x24 = compose(x23, x258)\n    x25 = size(x1)\n    x26 = height(x25)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = lbind(apply, maximum)\n    x29 = apply(x28, x27)\n    x30 = lbind(sfilter, x21)\n    x31 = lbind(mapply, subtract)\n    x32 = rbind(sfilter, x26)\n    x33 = chain(x30, x31, x32)\n    x34 = compose(x33, x24)\n    x35 = chain(positive, last, x34)\n    x36 = lbind(s84, x43)\n    x37 = chain(x35, x36, xa)\n    x38 = lbind(compose, x10)"], [1.1, "def solve_ffb70173(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = palette(I)\n    x3 = lbind(sfilter, x1)\n    x4 = lbind(compose, flip)\n    x5 = lbind(matcher, first)\n    x6 = chain(x3, x4, x5)\n    x7 = rbind(compose, asobject)\n    x8 = lbind(mirror, x1)\n    x9 = chain(x7, x8, x6)\n    x10 = fork(combine, x7, x9)\n    x11 = fork(equality, identity, x10)\n    x12 =222(x2, I)\n    x13 = rbind(multiply, TWO)\n    x14 = chain(x13, x11, x12)\n    x15 = fork(4444, x14, xExample output:\n    854978\n    2215\n    \"\"\"\n    x1 = fork(multiply, height, width)\n    x2 = chain(palette, partition, x1)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = lbind(colorcount, I)\n    x6 = argmin(x4, x5)\n    x7 = repeat(x6, ONE)\n    x8 = merge(x7)\n    x9 = color(x8)\n    x10 = astuple(x6, x13)\n    x11 = astuple(x9, x10)\n    x12 = combine(x10, x11)\n    x13 = mapply(x8, x12)\n    x14 = astuple(x6, x13)\n    x15 = canvas(x9, x14)\n    x16 = astuple(x15, x13)\n    x17 = combine(x16, x13)\n    x18 = sizefilter(x17, ONE)\n    x19 = merge(x18)\n    x20 = palette(x19)\n    x21 = double(EIGHT)\n    x22 = astuple(x21, x20)\n    x23"], [1.1, "def solve_3357d1a1(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_e5af63a6(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, vsplit)\n    x3 = x2(I)\n    x4 = asobject(x3)\n    x5 = shift(x4, DOWN)\n    x6 = apply(initset, x5)\n    x7 = remove(x5, x6)\n    x8 = input:\n    7777786651\n    7770886856\n    \"\"\"\n    x1 =446(argmin, identity)\n    x2 =44fgpartition(x3)\n    x3 = merge(x2)\n    x4 = cover(x3, x4)\n    x5 =805(contained, DOWN)\n    x6 = portrait(x5)\n    x7 = branch(x6, identity, hmirror)\n    x8 = x7(x4)\n    x9 = x7(x8)\n    x10 = branch(x6, identity, vmirror)\n    x11 = x10(x8)\n    x12 = x10(x9)\n    x13 = hmirror( x11)\n    x14 = hmirror(x12)\n    x15 = shift(x1, x14)\n    x16 = paint(x5, x15)\n    x17 =8(argmax)\n    x18 = color(x17)\n    x19 =883afar(x17, x13)\n    x20 = paint(x16, x19)\n    x21 = objects(x20, T, F, T)\n    x22 = compose(flip, x1)\n    x23 = sfilter(x21, x22)\n    x24 = order(x23, uppermost)\n    x25 = astuple(x24, x24)\n    x26 = remove(x25, x24)\n    x27 = compose(last, last)\n    x28 = rbind(argmin, x27)\n    x29 = compose(first, last)\n    x30 = lbind(9, x25)\n    x31 = compose(x29, x30)\n    x32 = fork(astuple, x31, x21)"], [1.1, "def solve_b9911307(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(normalize, x3)\n    x5 = merge(x3)\n    x6 = cover(I, x5)\n    x7 = lbind(compose, flip)\n    x8 = lbind(matcher, first)\n    x9 = chain(x7, x8, mostcolor)\n    x10 = fork(sfilter, identity, x9)\n    x11 = chain(identity, x10, first)\n    x12 = lbind(lbind, shift)\n    x13 = rbind(x12, RIGHT)\n    x14 = chain(x13, x12, x11)\n    x15 = lbind(lbind, shift)\n    x16 = rbind(x15, RIGHT)\n    x17 = chain(x16, x12, x11)\n    x18 = fork(sfilter, identity, x14)\n    x19 = fork(matcher, first, x17)\n    x20 = compose(flip, x18)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, x19)\n    x23 = fork(compose, x17, x22)\n    x24 = lbind(rapply, x83)\n    x25 = chain(ineighbors, x24, x11)\n    x26 = fork(rapply, x23, x25)\n    x27 = compose(cmirror, x26)\n    x28 = compose(hmirror, x27)\n    x29 = fork(compose, x28, x11)\n    x30 = compose(vmirror, x29)\n    x31 = fork(rapply, x30, x11)\n    x32 = compose(box, x31)\n    x33 = fork(difference, x32, x26)\n    x34 = compose(x33, x28)\n    x35 = fork(pair, x24, x35)\n    x36 = x35(x6)\n    x37 = x35(x"], [1.1, "def solve_322fe984(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = compose(x12, x6)\n    x14 = apply(x13, x1)\n    x15 = fork(intersection, x12, size)\n    x16 = compose(size, x15)\n    x17 = matcher(x16, ZERO)\n    x18 = fork(both, x15, x17)\n    x19 = extract(x14, x18)\n    x20 = first(x19)\n    x21 = last(x19)\n    x22 = x20(I)\n    x23 =:\n    x22 = fgpartition(x22)\n    x24 = merge(x23)\n    x25 =    x24(x22)\n    x26 = ulcorner(x25)\n    x27 = subgrid(x25, x22)\n    x28 = replace(x27, ZERO, THREE)\n    x29 = asindices(x28)\n    x30 = shift(x29, x26)\n    x31 = ulcorner(x15)\n    x32 =84corner(x15)\n    x33 = initset(x32)\n    x34 = Fgpartition(x33)\n    x35 = merge(x34)\n    x36 = cover(x22, x35)\n    x37 = insert(x26, x36)\n    x38 = width(x37)\n    x39 = tojvec(x38)\n    x40 = shift(x31, x39)\n    x41 = ulcorner(x"], [1.1, "def solve_a4f6f0d6(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_ad07e1d8(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = order(x1, x2)\n    x4 = lbind(apply, last)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(x3)\n    x9 = x7(x4)\n    x10 = x7(x9)\n    x11 = fork(equality, toindices, box)\n    x12 = fork(equality, toindices, x8)\n    x13 = fork(equality, toindices, x10)\n    x14 = lbind(index, I)\n    x15 = compose(x14, uppermost)\n    x16 = matcher(x15, x11)\n    x17 = fork(either, x13, x16)\n    x18 = compose(x17, vline)\n    x19 = lbind(add, x8)\n    x20 = x19(x16)\n    x21 = matcher(x19, x20)\n    x22 = compose(flip, x21)\n    x23 = fork(both, x18, x22)\n    x24 = extract(x3, x23)\n    x25 = subgrid(x24, I)\n    x26 = width(x25)\n    x27 = subtract(x26, TWO)\n    x28 = tojvec(x27)\n    x29 = shift(x25, x28)\n    x30 = paint(x25, x29)\n    x31 = double(x30)\n    x32 = interval(ZERO, x31, ONE)\n    x33 = rbind(contained, x32)\n    x34 = compose(x33, last)\n    x35 = rbind(sfilter, x34)\n    x36 = lbind(rbind, shift)\n    x37 = chain(x15, x35, x36)\n    x38 = fork(combine, x35, x37)\n    x39 = fork(apply, x38, x34)\n"], [1.1, "def solve_17bd76f7(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = fork(multiply, height, width)\n    x2 = decrement(x1)\n    x3 = astuple(x2, THREE)\n    x4 = crop(I, ORIGIN, x3)\n    x5 =477(x4)\n    x6 = vmirror(x5)\n    x7 = hconcat(x5, x6)\n    x8 = astuple(x2, ONE)\n    x9 = crop(x7, DOWN, x8)\n    x10 = vmirror(x9)\n    x11 = papply(pair, x7, x10)\n    x12 = apply(x11, x11)\n    x13 = papply(pair, x7, x12)\n    x14 = apply(x13, x11)\n    x15 = papply(pair, x7, x14)\n    x16 = apply(x15, x11)\n    x17 = papply(pair, x7, x16)\n    x18 = apply(x17, x11)\n    x19 = palette(x18)\n    x20 = lbind(colorcount, x18)\n    x21 = compose(x20, ofcolor)\n    x22 = argmin(x19, x21)\n    x23 = rbind(colorcount, x22)\n    x24 =contained(x23, x18)\n    x25 = ofcolor(x18, x22)\n    x26 = difference(x25, x26)\n    x27 = x21(x26)\n    x28 = asindices(x27)\n    x29 = outbox(x28)\n    x30 = subgrid(x29, x7)\n    x31 = asindices(x30)\n    x32 = box(x31)\n    x33 = hmirror(x32)\n    x34 = vmirror(x32)\n    x35 = dmirror(x33)\n    x36 =b548(x34, x1)\n    x37 = ofcolor(x35, x22)\n    x38 = mapply(x36, x37)\n    x39 = fill(x30, x22, x"], [1.1, "def solve_a109ebf3(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = x18(x21)\n    x23 = argmax(x22, numcolors)\n    x24 = argmin(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape, x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind(multiply"], [1.1, "def solve_d07410d2(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = matcher(x22, x21)\n    x24 = rbind(sfilter, x23)\n    x25 = chain(merge, x24, x22)\n    x26 = lbind(recolor, x18)\n    x27 = lbind(mapply, vfrontier)\n    x28 = rbind(ofcolor, x18)\n    x29 = chain(x26, x27, x28)\n    x30 = fork(paint, x25, x29)\n    x31 = fork(paint, x30, x29)\n    x32 =79mirror(x7)\n    x33 = rbind(\"\"\"\n    x34 = rbind(contained, x33)\n    x35 = compose(x34, last)\n    x36 = sfilter(x32, x35)\n    x37 = sfilter(x32, x36)\n    x38 = fork(either, x32, x37)\n"], [1.1, "def solve_c4d08cfa(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = shape(I)\n    x2 = multiply(THREE, x1)\n    x3 = mostcolor(I)\n    x4 = canvas(x3, x2)\n    x5 = objects(I, F, F, T)\n    x6 = merge(x5)\n    x7 = mostcolor(x6)\n    x8 = first(x5)\n    x9 = matcher(first, x7)\n    x10 = sfilter(x8, x9)\n    x11 = normalize(x10)\n    x12 = delta(x11)\n    x13 = first(x12)\n    x14 = subtract(ONE, x13)\n    x15 = asobject(I)\n    x16 = shape(I)\n    x17 = double(x16)\n    x18 = multiply(x14, x17)\n    x19 = shift(x15, x18)\n    x20 = paint(x4, x19)\n    x21 = objects(x20, F, F, T)\n    x22 = lbind(mapply, dneighbors)\n    x23 = matcher(first, x11)\n    x24 = rbind(sfilter, x23)\n    x25 = chain(x22, delta, x24)\n    x26 = ineighbors(ORIGIN)\n    x27 = apply(double, x26)\n    x28 = rbind(apply, x27)\n    x29 = lbind(lbind, shift)\n    x30 = compose(x28, x29)\n    x31 = lbind(rbind, adjacent)\n    x32 = compose(x31, x25)\n    x33 = fork(extract, x30, x32)\n    x34 = fork(combine, identity, x33)\n    x35 = compose(backdrop, x34)\n    x36 = double(x13)\n    x37 = decrement(x36)\n    x38 = multiply(x37, FOUR)\n    x39 = rbind(shift, x38)\n    x40 = compose(x39, x35)\n    x41 = fork(combine, x35, x40)"], [1.1, "def solve_a98f4174(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = replace(I, ZERO, TWO)\n    x2 = lbind(apply, maximum)\n    x3 = lbind(colorfilter, x1)\n    x4 = chain(x2, x3, color)\n    x5 = fork(paint, identity, x4)\n    x6 = chain(x5, size, x4)\n    x7 = matcher(x6, ONE)\n    x8 = extract(x1, x7)\n    x9 = x6(x8)\n    x10 = objects(I, T, T, T)\n    x11 = rbind(objects, F)\n    x12 = rbind(x11, F)\n    x13 = rbind(x12, T)\n    x14 = chain(x13, x11, x6)\n    x15 = rbind(toobject, x5)\n    x16 = chain(palette, x15, x14)\n    x17 = fork(x16, x16, color)\n    x18 = extract(x10, x17)\n    x19 = lbind(colorcount, I)\n    x20 = argmin(x18, x19)\n    x21 = rbind(colorcount, x20)\n    x22 = chain(x1, x21, palette)\n    x23 = argmin(x10, x22)\n    x24 = rbind(contained, x23)\n    x25 = rbind(rapply, x24)\n    x26 = chain(first, x25, initset)\n    x27 = fork(rapply, x26, identity)\n    x28 = fork(first, x27, last)\n    x29 = matcher(x28, x11)\n    x30 = extract(x10, x29)\n    x31 = x30(I)\n    x32 = first(x31)\n    x33 = last(x31)\n    x34 = ofcolor(x33, x20)\n    x35 = difference(x34, x32)\n    x36 = cover(x31, x35)\n    x37 = apply(initset, x339)\n    x38 = insert(x32,"], [1.1, "def solve_ae5ab87f(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, F, T, T)\n    x6 = rbind(509999\n    5509948495\n    55978959944\n    5899294555\n    5558555554\n    5869995449\n    4854445555\n    5555554999\n    6856555584\n    8585522254\n    5528525884\n    \"\"\"\n    x1 = matcher(identity, x1)\n    x2 = rbind(sfilter, x7)\n    x3 = compose(size, x2)\n    x4 = argmax(x5, x3)\n    x5 = palette(x4)\n    x6 = remove(ZERO, x5)\n    x7 = lbind(colorcount, x4)\n    x8 = argmax(x6, x7)\n    x9 = ulcorner(x4)\n    x10 = contained(x9, x4)\n    x11 = contained(x7, x4)\n    x12 = branch(x10, UNITY, ONE)\n    x13 = branch(x11, NEG_UNITY, ONE)\n    x14 =312(x12, x13)\n    x15 = subgrid(x14, I)\n    x16 = width(x15)\n    x17 = subtract(x16, TWO)\n    x18 = upscale(x15, x17)\n    x19 = height(x15)\n    x20 = divide(x19, x17)\n    x21 = x18(x20)\n    x22 = subtract(x21, TWO)\n    x23 = divide(x22, x17)\n    x24 = repeat(x23, x8)\n    x25 = merge(x24)\n    x26 = cover(x15, x25)\n    x27 = lbind(repeat, x26)\n    x28 = compose(x27, tojvec)\n    x29 = matcher(x28, x211)\n    x30"], [1.1, "def solve_ab6a33f7(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_56f6fe7f(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = trim(I)\n    x2 = tophalf(x1)\n    x3 = lefthalf(x2)\n    x4 = tophalf(x3)\n    x5 = dmirror(x4)\n    x6 = bottomhalf(x1)\n    x7 = lefthalf(x6)\n    x8 = bottomhalf(x7)\n    x9 = height(x9)\n    x10 = width(x9)\n    x11 = hfrontier(ORIGIN)\n    x12 = fill(x3, ZERO, x11)\n    x13 = hfrontier(x10)\n    x14 = fill(x12, ZERO, x13)\n    x15 = compress(x14)\n    x16 = width(x9)\n    x17 = height(x9)\n    x18 = decrement(x17)\n    x19 = tojvec(x18)\n    x20 = connect(ORIGIN, x19)\n    x21 = fill(x10, ZERO, x20)\n    x22 = vconcat(x23, x21)\n    x23 = width(x9)\n    x24 = subtract(x18, x23)\n    x25 = tojvec(x24)\n    x26 = vitate(x25, x24)\n    x27 = height(x9)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = connect(x25, x29)\n    x31 = fill(x10, ZERO, x30)\n    x32 = lbind(16, x26)\n    x33 = tojvec(x32)\n    x34 = v reflectors(x33)\n    x35 = cover(x31, x34)\n    x36 = astuple(x29, x306)\n    x37 = crop(x35, x36, x34)\n    x38 = fork(combine, vfrontier, hfrontier)\n    x39 = compose(x38, tojvec)\n    x40 = lbind(extract, x35)\n    x41 = chain(first,"], [1.1, "def solve_d76107ea(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(both, x29, x30)\n    x34 = fork(both, x31, x32)\n    x35 = fork(both, x33, x34)\n    x36 = compose(x"], [1.1, "def solve_a260c865(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = sizefilter(x1, FOUR)\n    x3 = fork(equality, height, width)\n    x4 = extract(x2, x3)\n    x5 = other(x1, x4)\n    x6 = color(x5)\n    x7 = astuple(ONE, THREE)\n    x8 = canvas(x6, x7)\n    x9 = sizefilter(x1, ONE)\n    x10 = initset(x4)\n    x11 = insert(x6, x9)\n    x12 = insert(x8, x11)\n    x13 = hmirror(x12)\n    x14 = toindices(x13)\n    x15 = lbind(rbind, contained)\n    x16 = lbind(compose, flip)\n    x17 = lbind(matcher, first)\n    x18 = chain(x15, x16, x17)\n    x19 = lbind(contained, TWO)\n    x20 = compose(x19, first)\n    x21 = lbind(sfilter, x17)\n    x22 = compose(x21, x18)\n    x23 = fork(contained, identity, x22)\n    x24 = compose(x17, toindices)\n    x25 = fork(compose, x24, x23)\n    x26 = lbind(sfilter, x12)\n    x27 = compose(x26, x25)\n    x28 = fork( inconsistenciesensor vsplit, identity, x27)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, hmirror)\n    x31 = fork(equality, identity, vmirror)\n    x32 = lbind(index, I)\n    x33 = compose(x32, palette)\n    x34 = remove(x33, x5)\n    x35 =Resourceindex(I, x10)\n    x36 = other(x34, x35)\n    x37 = apply(x36, x32)\n    x38 = astuple(dmirror, cmirror)\n    x"], [1.1, "def solve_0027cdb2(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_904af7cc(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = compose(first, last)\n    x41 = chain(corners, subgrid, x40)\n    x42 = compose(x37"], [1.1, "def solve_def361e3(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, ONE)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)"], [1.1, "def solve_ba6cbe34(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x50 = lbind(ofcolor, I)\n    x51 = chain(x8, x9, x50)\n    x52 = rbind(matcher, vline)\n    x53 = compose(x52, x41)\n    x54 = chain(flip, x53, x41)\n    x55 = sfilter(x6, x49)\n    x56 = sfilter(x6, x540)\n    x57 = height(x556)\n    x58 =6129801(x57)\n    x59 = chain(lowermost, x50, x58)\n    x60 = matcher(x59, ZERO)\n    x61 = objects(I, T, F, F)\n    x62 = sfilter(x61, x60)\n    x63 = argmax(x62, x25)\n    x64 = subgrid(x63, I)\n    x65 = chain( decreased width, decrement,\n    x66 = matcher(x65, x34)\n    x67 = fork(greater, x66, identity)\n    x68 = sfilter(x67, x60)\n    x69 = argmax(x68, x67)\n    x70 = matcher(first, x04)\n    x71 = compose(flip, x70)\n    x72 = sfilter(x41, x70)\n    x73 = argmax(x72, x27)\n    x74 = leastcolor(x73)\n    x75 =,(x74, x110)\n    x76 = ofcolor(x76, x4)\n    x77 = mapply(vfrontier, x76)\n    x78 = mapply(hfrontier, x76)\n    x79 = size"], [1.1, "def solve_72bbec99(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, size)\n    x3 = lowermost(x2)\n    x4 = height(x2)\n    x5 = equality(x4, x3)\n    x6 = branch(x5, lefthalf, tophalf)\n    x7 = branch(x5, righthalf, bottomhalf)\n    x8 = branch(x5, hconcat, vconcat)\n    x9 = x6(I)\n    x10 = x7(I)\n    x11 = index(x9, ORIGIN)\n    x12 = shape(x10)\n    x13 = decrement(x12)\n    x14 = index(x10, x13)\n    x15 = mostcolor(I)\n    x16 = mostcolor(I)\n    x17 = palette(I)\n    x18 = remove(x11, x17)\n    x19 = remove(x14, x18)\n    x20 = remove(x16, x19)\n    x21 = first(x20)\n    x22 = replace(x9, x21, x11)\n    x23 = branch(x5, width, height)\n    x24 = astuple(x23, x22)\n    x25 = crop(x9, ORIGIN, x24)\n    x26 = hmirror(x25)\n    x27 = vconcat(x25, x26)\n    x28 = upscale(x27, TWO)\n    x29 = merge(x28)\n    x30 = palette(x29)\n    x31 = double(x30)\n    x32 = interval(ZERO, x31, ONE)\n    x33 = upscale(x27, x32)\n    x34 =60c8cdece60(x28)\n    x35 = lbind(multiply, x34)\n    x36 = apply(x35, x30)\n    x37 = lbind(shift, x29)\n    x38 = mapply(x37, x36)\n    x39 = fill(x22, x21, x38)\n    x40 = replace(x39"], [1.1, "def solve_ebe908fa(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_0112343a(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = lbind(matcher, first)\n    x2 = compose(x1, mostcolor)\n    x3 = fork(sfilter, identity, x2)\n    x4 = fork(difference, identity, x3)\n    x5 = lbind(rbind, upscale)\n    x6 = rbind(x5, toindices)\n    x7 = compose(x6, x4)\n    x8 = fork(intersection, identity, x7)\n    x9 = compose(size, x8)\n    x10 = valmax(x1, x9)\n    x11 = matcher(x9, x10)\n    x12 =flip(x11, ONE)\n    x13 = sfilter(x1, x12)\n    x14 = order(x13, identity)\n    x15 = apply(x5, x14)\n    x16 = ofcolor(x15, ONE)\n    x17 = ofcolor(x15, TWO)\n    x18 = apply(x11, x17)\n    x19 = apply(x15, x18)\n    x20 = ofcolor(x19, ONE)\n    x21 = rbind(manhattan, DOWN)\n    x22 = chain(x19, x21, initset)\n    x23 = fork(add, identity, x22)\n    x24 = chain(initset, x18, x23)\n    x25 = fork(insert, identity, x24)\n    x26 = lbind(rbind, manhattan)\n    x27 = compose(x26, initset)\n    x28 = fork(argmin, x25, x27)\n    x29 = fork(gravitate, initset, x28)\n    x30 = compose(crement, x29)\n    x31 = fork(add, identity, x30)\n    x32 = fork(gravitate, initset, x33)\n    x33 = compose(crement, x32)\n    x34 = fork(add, identity, x33)\n    x35 = fork(gravitate, toindices, x34)\n    x36 = fork(add, identity, x35)\n    x37"], [1.1, "def solve_9eb377d3(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_e1604aef(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = matcher(first, ZERO)\n    x2 =044(I, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = compose(normalize, x3)\n    x5 = apply(x4, x2)\n    x6 = astuple(NEG_TWO, NEG_TWO)\n    x7 = shift(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = rbind(toobject, I)\n    x11 = rbind(shoot,ORIGIN)\n    x12 = compose(x10, x11)\n    x13 = rbind(colorcount, SIX)\n    x14 = chain(x13, double, x12)\n    x15 = fork(equality, x14, identity)\n    x16 = chain(numcolors, x15, fgpartition)\n    x17 = matcher(x16, FIVE)\n    x18 = extract(x9, x17)\n    x19 = neighbors(ORIGIN)\n    x20 = insert(ORIGIN, x19)\n    x21 = rbind(shoot, ZERO_BY_TWO)\n    x22 = rbind(shift, x21)\n    x23 = pair(x20, x22)\n    x24 = chain(x entire, x23, last)\n    x25 = rbind(colorcount, SEVEN)\n    x26 = matcher(x25, EIGHT)\n    x27 = fork(668, x26, identity)\n    x28 = chain(x22, x27, first)\n    x29 = lbind(fork, outbox)\n    x30 = rbind(x29, x28)\n    x31 = lbind(fork, recolor)\n    x32 = lbind(x31, x30)\n    x33 = rbind(shift, x29)\n    x34 = lbind(chain, x33)\n    x35 = lbind(x34, x28)\n    x36 = lbind(rbind, mapply)\n    x37 = compose(x35, x36)"], [1.1, "def solve_994c0c1a(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(re"], [1.1, "def solve_c4ce205e(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shape(I)\n    x5 = maximum(x4)\n    x6 = canvas(ZERO, x5)\n    x7 = asindices(x6)\n    x8 = normalize(x7)\n    x9 = to\n    74dd113061\n    x10 = paint(x6, x9)\n    x11 = height(x10)\n    x12 = width(x10)\n    x13 = fgpartition(x10)\n    x14 = merge(x13)\n    x15 = width(x10)\n    x16 = height(x14)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = lbind(multiply, x5)\n    x19 = apply(x18, x17)\n    x20 = lbind(multiply, x4)\n    x21 = apply(x20, x17)\n    x22 = lbind(interval, ZERO)\n    x23 = rbind(x22, ONE)\n    x24 = lbind(interra, x2)\n    x25 = rbind(x24, ONE)\n    x26 = lbind(colorfilter, x36)\n    x27 = chain(x23, x25, x26)\n    x28 = lbind(78, x multiply)\n    x29 = chain(x28, x27, last)\n    x30 = fork(recolor, first, x29)\n    x31 = astuple(SIX, THREE)\n    x32 = astuple(FOUR, EIGHT)\n    x33 = astuple(ONE, DOWN)\n    x34 = initset(x33)\n    x35 = insert(x34, x32)\n    x36 = insert(x30, x35)\n    x37 = apply(x32, x36)\n    x38 = papply(recolor, x37)\n    x39 = lbind(shift, x8)\n    x40 = mapply(x39, x38)\n    O = paint(x10,"], [1.1, "def solve_caa8cb0f(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = asobject(I)\n    x6 = matcher(first, x4)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x5, x7)\n    x9 = hperiod(x8)\n    x10 = vperiod(x8)\n    x11 = width(I)\n    x12 = width(x8)\n    x13 = subtract(x11, x12)\n    x14 = add(x13, TWO)\n    x15 = height(I)\n    x16 = height(x8)\n    x17 = subtract(x15, x16)\n    x18 = add(x17, TWO)\n    x19 = rbind(multiply, x9)\n    x20 = invert(x14)\n    x21 = interval(x20, x14, ONE)\n    x22 = apply(x19, x21)\n    x23 = rbind(multiply, x10)\n    x24 = invert(x18)\n    x25 = interval(x24, x18, ONE)\n    x26 = apply(x23, x25)\n    x27 = product(x26, x22)\n    x28 = lbind(shift, x8)\n    x29 = mapply(x28, x27)\n    x30 = index(I, ORIGIN)\n    x31 = equality(x30, x4)\n    x32 = flip(x31)\n    x33 = asindices(I)\n    x34 = urcorner(x33)\n    x35 = index(I, x34)\n    x36 = equality(x35, x4)\n    x37 = flip(x36)\n    x38 = asindices(I)\n    x39 = lrcorner(x38)\n    x40 = index(I, x39)\n    x41 = equality(x40, x4)\n    x42 = flip(x41)\n    x43 = asindices("], [1.1, "def solve_4a9e9729(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = astuple(SIX, TWO)\n    x2 = size(x1)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, hmirror, vmirror)\n    x5 = x4(I)\n    x6 = canvas(ZERO, x1)\n    x7 = partition(x6)\n    x8 = sizefilter(x7, ONE)\n    x9 = merge(x8)\n    x10 = palette(x9)\n    x11 = totuple(x10)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = switch(x6, x12, x13)\n    x15 = ofcolor(x14, x12)\n    x16 = inbox(x15)\n    x17 = recolor(ZERO, x16)\n    x18 = double(x2)\n    x19 = add(x18, THREE)\n    x20 = initset(x19)\n    x21 = recolor(x12, x20)\n    x22 =434(x21, x15)\n    x23 = product(x17, x22)\n    x24 = mapply(toindices, x17)\n    x25 = mapply(x24, x23)\n    x26 = flip(x25)\n    x27 = dmirror(x26)\n    x28 = toobject(x27, x14)\n    x29 = hperiod(x28)\n    x30 = shift(x25, x29)\n    x31 = toobject(x27, x14)\n    x32 = vperiod(x31)\n    x33 = hperiod(x32)\n    x34 = neighbors(ORIGIN)\n    x35 = mapply(neighbors, x34)\n    x36 = astuple(x32, x33)\n    x37 = rbind(shift, x36)\n    x38 = combine(x30, x37)\n    x39 = fill(x6, x12, x38)\n    x40 = shift(x31, x39)\n    x41 = paint(x39, x40)"], [1.1, "def solve_35afca6b(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = objects(I, T, T, T)\n    x2 =389ca(I)\n    x3 = subgrid(x2, I)\n    x4 = height(x3)\n    x5 = width(x3)\n    x6 = vsplit(x3, x4)\n    x7 = neighbors(ORIGIN)\n    x8 = toindices(x7)\n    x9 = compose(hupscale, x8)\n    x10 = power(x9, TWO)\n    x11 = shape(x3)\n    x12 = maximum(x11)\n    x13 = lbind(replace, x12)\n    x14 =0000000000000000(x\n    x15 = lbind(downscale, x10)\n    x16 = compose(x14, x15)\n    x17 = lbind(power, equality)\n    x18 = chain(x17, x13, x16)\n    x19 = lbind(rapply, x8)\n    x20 = compose(initset, x18)\n    x21 = chain(first, x19, x20)\n    x22 = compose(flip, x21)\n    x23 = fork(22, x18, x22)\n    x24 = fork(combine, x21, x23)\n    x25 = compose(x4, x24)\n    x26 = palette(x2)\n    x27 = palette(x10)\n    x28 = intersection(x26, x27)\n    x29 = argmax(x28, x25)\n    x30 = urcorner(x29)\n    x31 = invert(x30)\n    x32 = shift(x29, x31)\n    x33 = apply(x25, x32)\n    x34 = shift(x32, x33)\n    x35 = ofcolor(x30, xpal)\n    x36 = ofcolor(x30, x66666666\n    x37 = lbind(index, x30)\n    x38 = compose(x37, urcorner)\n    x39 = cover(x30, x33)\n    x40 = x38(x39)\n    x41 = ofcolor("], [1.1, "def solve_06304daa(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 =173(I)\n    x2 = tophalf(x1)\n    x3 = lefthalf(x2)\n    x4 = tophalf(x3)\n    x5 = righthalf(x4)\n    x6 = bottomhalf(x4)\n    x7 = lefthalf(x6)\n    x8 = bottomhalf(x6)\n    x9 = righthalf(x8)\n    x10 = index(I, ORIGIN)\n    x11 = width(I)\n    x12 = decrement(x11)\n    x13 = tojvec(x12)\n    x14 = index(I, x13)\n    x15 = height(I)\n    x16 = decrement(x15)\n    x17 = toivec(x16)\n    x18 = index(I, x17)\n    x19 = shape(I)\n    x20 = decrement(x19)\n    x21 = tojvec(x20)\n    x22 = index(I, x21)\n    x23 = compress(I)\n    x24 = asindices(x23)\n    x25 = box(x24)\n    x26 = corners(x24)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, x23)\n    x29 = color(x28)\n    x30 = palette(x2)\n    x31 = other(x30, x29)\n    x32 = replace(x3, x31, x\n    x33 = x31(x2)\n    x34 = tojvec(x33)\n    x35 = shift(x34, x36)\n    x36 = combine(x28, x35)\n    x37 = rbind(contained, x36)\n    x38 = compose(x37, first)\n    x39 = sfilter(x19, x38)\n    x40 = difference(x19, x39)\n    x41 = fill(I, x31, x40)\n    x42 = compose(size, first)\n    x43 = objects(x41, T, F, F)\n    x44 = rbind"], [1.1, "def solve_98b670ae(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = lefthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = righthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(I)\n    x18 = halve(x17)\n    x19 = canvas(x16, x18)\n    x20 = matcher(first, x16)\n    x21 = compose(flip, x20)\n    x22 = rbind(sfilter, x21)\n    x23 = compose(x22, asobject)\n    x24 = x24(x2)\n    x25 = x24(x6)\n    x26 = x23(x24)\n    x27 = x25(x6)\n    x28 = shape(x27)\n    x29 = canvas(x24, x28)\n    x30 = paint(x29, x27)\n    x31 = rbind(shift, x38)\n    x32 = compose(x31, dneighbors)\n    x33 = initset(x32)\n    x34 = recolor(x16, x33)\n    x35 = dmirror(x30)\n    x36 = paint(x35, x34)\n    x37 = combine(x32, x36)\n    x38 = fork(combine, vfrontier, hfrontier)\n    x39 = compose(x38, x37)\n    x40 = fork(combine, x43, x39)\n    x41 = apply(x40, x33)\n    x42 = mapply(x37, x41)\n"], [1.1, "def solve_47bcfd76(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_717d29a0(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_016bda61(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, ulcorner)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, dmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, ulcorner)\n    x13 = rbind(shift, NEG_UNITY)\n    x14 = compose(x13, vmirror)\n    x15 = rbind(shift, NEG_UNITY)\n    x16 = compose(x15, hmirror)\n    x17 = rbind(shift, DOWN_LEFT)\n    x18 = compose(x17, hmirror)\n    x19 = rbind(shift, UP_RIGHT)\n    x20 = compose(x19, vmirror)\n    x21 = rbind(shift, RIGHT)\n    x22 = compose(x21, hmirror)\n    x23 = rbind(shift, DOWN)\n    x24 =compose(x23, x8)\n    x25 = fork(compose, x14, x20)\n    x26 = fork(compose, x24, x12)\n    x27 = compose(x26, x5)\n    x28 = rbind(shift, LEFT)\n    x29 = rbind(shift, RIGHT)\n    x30 = compose(x28, x9)\n    x31 = compose(x29, x7)\n    x32 = fork(compose, x30, x31)\n    x33 = fork(compose, x32, x5)\n    x34 = compose(x33, x5)\n    x35 = fork(contained, RIGHT, last)\n    x36 = fork(contained, contained, x35)\n    x"], [1.1, "def solve_236abd13(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = chain(positive, size, dedupe)\n    x2 = x1(I)\n    x3 = x1(x2)\n    x4 = height(x3)\n    x5 = width(x3)\n    x6 = partition(x3)\n    x7 = ofcolor(x3, ONE)\n    x8 = ofcolor(x3, FOUR)\n    x9 = center(x7)\n    x10 = delta(x7)\n    x11 = center(x8)\n    x12 = subtract(x10, x11)\n    x13 = multiply(x12, x4)\n    x14 = power(x13, TWO)\n    x15 = toindices(x4)\n    x16 = lbind(toindices, x15)\n    x17 = chain(x16, x15, outbox)\n    x18 = lbind(power, outbox)\n    x19 = compose(x18, x17)\n    x20 = initset(x19)\n    x21 = cover(x3, x20)\n    x22 = chain(size, x18, outbox)\n    x23 = argmax(x6, x22)\n    x24 = objects(x14, T, F, F)\n    x25 = color(x23)\n    x26 = center(x23)\n    x27 = invert(x25)\n    x28 = shift(x26, x27)\n    x29 = fork(combine, vfrontier, hfrontier)\n    x30 = mapply(x29, x28)\n    x31 = fill(x21, x25, x30)\n    x32 = ofcolor(x31, x1)\n    x33 = lbind(contained, x16)\n    x34 = rbind(contained, x33)\n    x35 = compose(x34, last)\n    x36 = sfilter(x32, x35)\n    x37 = sizefilter(x36, ONE)\n    x38 = fork(equality, identity, last)\n    x39 = fork(multiply, height, width)\n    x40 = chain(x38, x39,"], [1.1, "def solve_09dafe25(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x1, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x"], [1.1, "def solve_35c650fe(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = GMTcolors(I)\n    x3 = compose(flip, x2)\n    x4 = extract(x1, x3)\n    x5 =1989(x4)\n    x6 =1755499991\n    7857767553\n    634 neighbors\n    5548957955\n    5579755589\n    4729655744\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = chain(flip, x1, dmirror)\n    x3 = fork(both, x2, x3)\n    x4 = extract(x1, x3)\n    x5 = compose(flip, x4)\n    x6 = sfilter(x5, x3)\n    x7 = compose(hmirror, merge)\n    x8 = fork(equality, identity, x7)\n    x9 = sfilter(x6, x8)\n    x10 = compose(vmirror, dmirror)\n    x11 = fork(equality, identity, x10)\n    x12 = sfilter(x9, x11)\n    x13 = compose(leftmost, merge)\n    x14 = compose(rightmost, merge)\n    x15 = fork(equality, identity, x14)\n    x16 = compose(leftmost, invert)\n    x17 = compose(rightmost, invert)\n    x18 = fork(equality, identity, x17)\n    x19 = fork(both, x13, x18)\n    x20 = sfilter(x6, x19)\n    x21 = compose(last,283)\n    x22 = sfilter(x6, x21)\n    x23 = RIGHT(x20, x22)\n    x24 = mapply(dneighbors, x23)\n    x25 = mapply(ineighbors, x24)\n    x26 = shape(x25)\n    x27 = canvas(ZERO, x26)\n    x28 = ofcolor(x25, ONE)\n    x29 = ofcolor(x25, TWO)\n    x30 = rbind(multiply, x27)\n"], [1.1, "def solve_d06297a7(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = double(TEN)\n    x2 = interval(ZERO, x1, ONE)\n    x3 = connect(ORIGIN, DOWN)\n    x4 = connect(ORIGIN, ZERO_BY_TWO)\n    x5 = combine(x3, x4)\n    x6 = astuple(NEG_TWO, TWO)\n    x7 = lbind(multiply, x6)\n    x8 = toivec(NEG_TWO)\n    x9 = apply(x7, x2)\n    x10 = rbind(subtract, TWO_BY_ZERO)\n    x11 = fork(ofcolor, identity, leastcolor)\n    x12 = chain(x10, center, x11)\n    x13 = rbind(mapply, x9)\n    x14 = lbind(lbind, shift)\n    x15 = lbind(shift, x5)\n    x16 = compose(x15, x12)\n    x17 = chain(x13, x14, x16)\n    x18 = lbind(recolor, FIVE)\n    x19 = compose(x18, x17)\n    x20 = fork(paint, identity, x19)\n    x21 = compose(rot180, x20)\n    x22 = fork(ofcolor, x21, leastcolor)\n    x23 = compose(center, x22)\n    x24 = fork(subtract, x23, x12)\n    x25 = fork(shift, x17, x24)\n    x26 = lbind(recolor, FIVE)\n    x27 = rbind(shift, x8)\n    x28 = chain(x26, x27, x25)\n    x29 = fork(paint, x21, x28)\n    x30 = compose(rot180, x29)\n    x31 = rbind(ofcolor, FIVE)\n    x32 = compose(x31, x30)\n    x33 = leastcolor(I)\n    x34 = ofcolor(I, x33)\n    x35 = mostcolor(I)\n    x36 = shape(I)\n    x37 = canvas(x35, x"], [1.1, "def solve_f03a7f2e(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = fill(x6, TWO, x3)\n    x8 =757(999, UNITY)\n    x9 = ofcolor(x8, ONE)\n    x10 = lowermost(x9)\n    x11 = width(x9)\n    x12 = rbind(greater, x10)\n    x13 = compose(x12, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = lbind(recolor, ZERO)\n    x16 = lbind(ofcolor, x8)\n    x17 = chain(x15, x14, x16)\n    x18 = fork(paint, identity, x17)\n    x19 = chain(x9, first, x18)\n    x20 = difference(x1, x19)\n    x21 = rbind(greater, x10)\n    x22 = compose(x21, first)\n    x23 = rbind(sfilter, x22)\n    x24 = chain(x20, x23, x18)\n    x25 = rbind(greater, x10)\n    x26 = compose(x25, first)\n    x27 = rbind(sfilter, x26)\n    x28 = chain(x20, x27, x18)\n    x29 = rbind(gravitate, x2)\n    x30 = compose(x29, invert)\n    x31 = fork(add, identity, x30)\n    x32 = fork(insert, identity, x31)\n    x33 = fork(insert, identity, x32)\n    x34 = size(x1)\n    x35 = decrement(x34)\n    x36 = power(x33, x35)\n    x37 = compose(x33, x28)\n    x38 = power(x37, x36)\n    x39 = astuple("], [1.1, "def solve_363f59d0(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = index(I, ORIGIN)\n    x2 = objects(I, T, F, F)\n    x3 = fork(multiply, height, width)\n    x4 = fork(equality, size, x3)\n    x5 = chain(positive, decrement, size)\n    x6 = rbind(greater, ONE)\n    x7 = chain(x6, x5, shape)\n    x8 = sfilter(x2, x7)\n    x9 = fork(both, x4, x8)\n    x10 = sfilter(x2, x4)\n    x11 = fork(multiply, first, last)\n    x12 = chain(decrement, decrement, x11)\n    x13 = fork(greater, x12, x9)\n    x14 = sfilter(x2, x13)\n    x15 = palette(I)\n    x16 = remove(ZERO, x15)\n    x17 = lbind(colorcount, I)\n    x18 = argmin(x16, x17)\n    x19 = other(x16, x18)\n    x20 = color(I)\n    x21 = colorfilter(x2, x20)\n    x22 = outbox(x21)\n    x23 = difference(x22, x21)\n    x24 = fill(I, x19, x23)\n    x25 = argmin(x2, width)\n    x26 = other(x211, x25)\n    x27 =787(x26)\n    x28 = mostcolor(x27)\n    x29 = fill(x24, x28, x27)\n    x30 = normalize(x27)\n    x31 = ulcorner(x30)\n    x32 = width(x10)\n    x33 = x30(x12)\n    x34 = invert(x33)\n    x35 = tojvec(x34)\n    x36 = height(x10)\n    x37 = shift(x32, x36)\n    x38 = combine(x31, x37)\n    x39 = paint(x29, x38)\n    O = x20(x"], [1.1, "def solve_0a5f7455(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = shape(x12)\n    x15 = canvas(ZERO, x14)\n    x16 = lbind(multiply, x13)\n    x17 = apply(x16, x15)\n    x18 = rbind(contained, x17)\n    x19 = sfilter(x1, x18)\n    x20 = lbind(mapply, x12)\n    x21 = rbind(occurrences, x3)\n    x22 = chain(x20, x21, asindices)\n    x23 = lbind(mapply, x22)\n    x24 = chain(invert, x23, x26)\n    x25 = fork(shift, x22, x24)\n    x26 = compose(x5, x25)\n    x27 = palette(I)\n    x28 = mapply(x26, x27)\n    x29 = palette(I)\n    x30 = remove(x28, x29)\n    x31 = lbind(colorcount, x18)\n    x32 = argmax(x30, x31)\n    x33 = rbind(contained, x37)\n    x34 = compose(x33, first)\n    x35 = sfilter(x12, x34)\n    x36 = output(x35, x32)\n    x37 =021(x36)\n    x38 = argmin(x35, x27)\n    x39 = cover(x38, x39)\n    O ="], [1.1, "def solve_771b4948(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = palette(I)\n    x3 = compose(maximum, shape)\n    x4 = lbind(apply, x3)\n    x5 = lbind(colorfilter, x1)\n    x6 = chain(maximum, x4, x5)\n    x7 = matcher(x6, ONE)\n    x8 = extract(x2, x7)\n    x9 = lbind(ofcolor, I)\n    x10 = compose(backdrop, x9)\n    x11 = fork(equality, x9, x10)\n    x12 = extract(x2, x11)\n    x13 = ofcolor(I, x12)\n    x14 = ofcolor(I, x8)\n    x15 = rbind(manhattan, x13)\n    x16 = compose(x15, initset)\n    x17 = argmin(x14, x16)\n    x18 = ulcorner(x14)\n    x19 = contained(x18, x14)\n    x20 = shoot(x17, UNITY)\n    x21 = shoot(x17, NEG_UNITY)\n    x22 = combine(x20, x21)\n    x23 = shoot(x17, UP_RIGHT)\n    x24 = shoot(x17, DOWN_LEFT)\n    x25 = combine(x23, x24)\n    x26 = branch(x19, x22, x25)\n    x27 = asindices(I)\n    x28 = outbox(x13)\n    x29 = intersection(x27, x28)\n    x30 = intersection(x29, x26)\n    x31 = initset(x17)\n    x32 = rbind(manhattan, x31)\n    x33 = compose(x32, initset)\n    x34 = argmin(x30, x33)\n    x35 = height(x13)\n    x36 = height(I)\n    x37 = equality(x35, x36)\n    x38 = leftmost(x14)\n    x39 = leftmost(x13)\n    x40 = greater("], [1.1, "def solve_6a2ff814(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, T)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = rbind(colorcount, x9)\n    x11 = argmax(x5, x10)\n    x12 = other(x5, x11)\n    x13 = color(x12)\n    x14 = subgrid(x11, I)\n    x15 = lbind(insert, DOWN)\n    x16 = compose(lrcorner, asindices)\n    x17 = chain(x15, initset, x16)\n    x18 = fork(add, identity, x17)\n    x19 = compose(x14, x18)\n    x20 = fork(insert, x19, x6)\n    x21 = compose(x15, x20)\n    x22 = fork(subtract, x21, x18)\n    x23 = compose(x17, x22)\n    x24 = fork(subtract, x23, x16)\n    x25 = fork(insert, x24, x6)\n    x26 = compose(x21, x25)\n    x27 = fork(subtract, x26, x25)\n    x28 = rapply(x27, x7)\n    x29 = merge(x28)\n    x30 = cover(x14, x29)\n    x31 = argmax(x30, x29)\n    x32 = paint(x31, x3)\n    x33 = replace(x32, x9, replace(x30, x10)\n    x34 =2c2cce22(x31)\n    x35 = recolor(x34, x32)\n    x36 = lbind(shift, x31)\n    x37 = mapply(x36, x"], [1.1, "def solve_74a1ece0(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_34c13905(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_e30a35ae(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = d23(I)\n    x6 = add(TWO, x5)\n    x7 = tojvec(x6)\n    x8 = increment(x14)\n    x9 = canvas(x4, x8)\n    x10 = asobject(I)\n    x11 = shift(x10, x7)\n    x12 = palette(x11)\n    x13 = lbind(chain, size)\n    x14 = rbind(x13, toindices)\n    x15 = lbind(lbind, contained)\n    x16 = lbind(sfilter, x11)\n    x17 = compose(x15, x16)\n    x18 = chain(x17, x9, normalize)\n    x19 = lbind(colorcount, I)\n    x20 = compose(x19, palette)\n    x21 = matcher(x20, TWO)\n    x22 = extract(x12, x21)\n    x23 = colorcount(I, x22)\n    x24 =count(x10, ZERO)\n    x25 = positive(x24)\n    x26 = branch(x25, x22, x25)\n    x27 = ofcolor(I, x22)\n    x28 =314187(x27)\n    x29 = ofcolor(I, TWO)\n    x30 = recolor(x22, x29)\n    x31 = leftmost(x30)\n    x32 = lowermost(x30)\n    x33 = matcher(first, ZERO)\n    x34 = rightmost(x30)\n    x35 = matcher(first, TWO)\n    x36 = leftmost(x30)\n    x37 = rightmost(x30)\n    x38 = paint(x32, x31)\n    x39 = paint(x38, x34)\n    x40 = greater(x39, x26)\n    x41 = branch(x40, x33, x35)\n    x42 = leftmost"], [1.1, "def solve_42df03fe(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x24 = astuple(x10, cmirror)\n    x25 = astuple(x25, x24)\n    x26 = compose(x50, merge)\n    x27 = compose(x50, even)\n    x28 = fork(subtract, x26, x27)\n    x29 = fork(multiply, first, x28)\n    x30 = output(I, x11)\n    x31 = lbind(ofcolor, x30)\n    x32 = compose(x11, x30)\n    x33 = fork( difference, x29, x32)\n    x34 = rbind(toobject, I)\n    x35 = compose(x34, x30)\n    x36 = apply(x35, x3)\n    x37 = astuple(x31, x presents)\n    x38 = astuple(x37, x disagree)\n    x39 = initset(x38)\n    x40 = insert(x39, x"], [1.1, "def solve_35823430(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =548colors(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = toindices(x3)\n    x5 = asindices(I)\n    x6 = corners(x5)\n    x7 = lbind(rbind, manhattan)\n    x8 = toindices(x3)\n    x9 = combine(x6, x8)\n    x10 = fill(I, TEN, x9)\n    x11 = fork(manhattan, identity, initset)\n    x12 = fork(add, identity, x11)\n    x13 = height(x10)\n    x14 = width(x10)\n    x15 =multiply(x14, x13)\n    x16 = increment(x15)\n    x17 = width(x5)\n    x18 = divide(x17, x12)\n    x19 = increment(x18)\n    x20 = height(x3)\n    x21 = subtract(x20, x16)\n    x22 = divide(x21, x12)\n    x23 = increment(x22)\n    x24 = repeat(x10, x21)\n    x25 = subtract(x23, x24)\n    x26 =split(x25, x8)\n    x27 = lbind(intersection, x19)\n    x28 = chain(positive, size, x27)\n    x29 = matcher(x28, ZERO)\n    x30 = partition(x26)\n    x31 = sfilter(x30, x29)\n    x32 =68b19color(I)\n    x33 = compose(flip, x31)\n    x34 = sfilter(x31, x33)\n    x35 = dmirror(x14)\n    x36 = mpapply(recolor, x35, x34)\n    x37 = paint(x10, x36)\n    x38 = toindices(x3)\n    x39 = apply(x37, x38)\n    x40 = fork(add, last, first)\n    x41 =1995(x83)"], [1.1, "def solve_3cac6b51(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_8a10fdcc(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, size)\n    x3 = subgrid(x2, I)\n    x4 = normalize(x3)\n    x5 = replace(x3, ZERO, x4)\n    x6 = toindices(x4)\n    x7 = lbind(toindices, x6)\n    x8 = x7(x1)\n    x9 =3322696666602986756666\n    x10 = rbind(greater, ONE)\n    x11 = chain(x10, size, dedupe)\n    x12 = sfilter(x6, x11)\n    x13 = center(x12)\n    x14 = color(x12)\n    x15 = fill(x5, x14, x13)\n    x16 = objects(x15, T, F, T)\n    x17 = colorfilter(x16, x12)\n    x18 = rbind(toobject, x17)\n    x19 = chain(x18, color, x17)\n    x20 = rbind(colorcount, x14)\n    x21 = chain(x20, usgrid, x19)\n    x22 = fork(equality, x21, x19)\n    x23 = sfilter(x17, x22)\n    x24 = floindices(x23)\n    x25 = rbind(contained, x24)\n    x26 = lbind(index, x24)\n    x27 = compose(x25, x26)\n    x28 = fork(3355, x27, x26)\n    x29 = chain(x24, x27, x28)\n    x30 = fork(recolor, x29, x23)\n    x31 = mapply(x30, x23)\n    x32 = paint(x15, x31)\n    x33 = objects(x32, T, F, T)\n    x34 = rbind(adjacent, x2)\n    x35 = rbind(adjacent, x2)\n    x36 = fork(both, x34, x35)\n    x37 = sfilter(x33, x36"], [1.1, "def solve_13c9cced(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = compose(x5, color)\n    x7 = compose(double, x4)\n    x8 = lbind(prapply, manhattan)\n    x9 = fork(x8, identity, identity)\n    x10 = lbind(remove, ZERO)\n    x11 = compose(x10, x9)\n    x12 = rbind(branch, NEG_TWO)\n    x13 = fork(x12, positive, decrement)\n    x14 = chain(x13, minimum, x11)\n    x15 = fork(add, x14, x7)\n    x16 = compose(x15, x6)\n    x17 = compose(invert, x16)\n    x18 = order(x2, x17)\n    x19 = rbind(argmin, centerofmass)\n    x20 = compose(initset, vmirror)\n    x21 = fork(insert, dmirror, x20)\n    x22 = fork(insert, cmirror, x21)\n    x23 = fork(insert, hmirror, x22)\n    x24 = compose(x19, x23)\n    x25 = apply(x24, x18)\n    x26 = size(x2)\n    x27 = apply(size, x2)\n    x28 = contained(ONE, x27)\n    x29 = increment(x26)\n    x30 = branch(x28, x26, x29)\n    x31 = double(x30)\n    x32 = decrement(x31)\n    x33 = apply(normalize, x25)\n    x34 = interval(ZERO, x30, ONE)\n    x35 = pair(x34, x34)\n    x36 = mpapply(shift, x33, x35)\n    x37 = astuple(x32, x32)\n    x38 = canvas(x1, x37)"], [1.1, "def solve_4a897ca3(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = height(I)\n    x9 = astuple(x8, ONE)\n    x10 = canvas(THREE, x9)\n    x11 = hconcat(x10, I)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = identity(DOWN)\n    x17 = connect(ORIGIN, x15)\n    x18 = fill(x11, THREE, x17)\n    x19 = identity(x13)\n    x20 = identity(x12)\n    x21 = identity(x12)\n    x22 = identity(F)\n    x23 = identity(I)\n    x24 = compose(first, first)\n    x25 = chain(first, last, x24)\n    x26 = compose(first, first)\n    x27 = chain(last, last, x26)\n    x28 = chain(first, first, first)\n    x29 = chain(first, last, last)\n    x30 = chain(first, first, last)\n    x31 = chain(last, first, last)\n    x32 = compose(decrement, x25)\n    x33 = compose(decrement, x27)\n    x34 = fork(astuple, x32, x33)\n    x35 = compose(decrement, x27)\n    x36 = fork(multiply, x30, x35)\n    x37 = fork(add, x29, x36)\n    x38 = compose(decrement, x28)\n    x39 = fork(multiply, x30, x38)\n    x40 = fork(add, x29, x39)\n    x41 = fork"], [1.1, "def solve_2ad55902(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = argmin(I, ORIGIN)\n    x2 =56528x1, ZERO)\n    x3 = flip(x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    x5 = lbind(righthalf, I)\n    x6 = palette(I)\n    x7 = other(x6, ZERO)\n    x8 = rbind(colorcount, x7)\n    x9 = argmin(x2, x8)\n    x10 = rbind(colorcount, x7)\n    x11 = width(I)\n    x12 = decrement(x11)\n    x13 = tojvec(x12)\n    x14 = add(x13, UNITY)\n    x15 = multiply(x14, x12)\n    x16 = canvas(x7, x15)\n    x17 = ofcolor(I, x9)\n    x18 =(x17, x16)\n    x19 = rbind(contained, x18)\n    x20 = compose(x19, last)\n    x21 = sfilter(x17, x20)\n    x22 = compose(first, last)\n    x23 = fork( constructorform, first, last)\n    x24 = fork(equality, x22, x23)\n    x25 = sfilter(x21, x24)\n    x26 = undeman(x25)\n    O = replace(x16, x9, x26)\n    return O"], [1.1, "def solve_8a2862c0(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = partition(I)\n    x2 = product(x1, x1)\n    x3 = fork(equality, corners, toindices)\n    x4 = extract(x2, x3)\n    x5 = subgrid(x4, I)\n    x6 = objects(x5, T, F, F)\n    x7 =66916\n    \"\"\"\n    x8 = hsplit(x5, THREE)\n    x9 = merge(x8)\n    x10 = extract(x1, x9)\n    x11 = paint(x5, x10)\n    x12 = ofcolor(x11, ZERO)\n    x13 = first(x12)\n    x14 = ulcorner(x xx13)\n    x15 =68b1906(x14)\n    x16 = shift(x13, x15)\n    O = replace(x11, ZERO, FIVE)\n    return O"], [1.1, "def solve_698782f1(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = matcher(height, ONE)\n    x5 = fork(equality, toindices, x4)\n    x6 = sfilter(x3, x5)\n    x7 = sizefilter(x6, x2)\n    x8 = fork(adjacent, first, last)\n    x9 = compose(flip, x8)\n    x10 = extract(x7, x9)\n    x11 = remove(x10, x7)\n    x12 = merge(x11)\n    x13 = width(x12)\n    x14 = totuple(x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 =2266(x15, x16)\n    x18 =88(x17, x12)\n    x19 = shape(x10)\n    x20 = canvas(ZERO, x19)\n    x21 =_hconcat(x18, x20)\n    x22 = objects(x21, color, recovered)\n    x23 = first(x22)\n    x24 = apply(ulcorner, x23)\n    x25 = normalize(x23)\n    x26 = matcher(first, ZERO)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x24, x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    O = paint(I, x30)\n    return O"], [1.1, "def solve_633b7a08(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = rot180(I)\n    x2 = rbind(sfilter, hline)\n    x3 = compose(size, dedupe)\n    x4 = matcher(x3, ONE)\n    x5 = rbind(sfilter, x4)\n    x6 = chain( size, x5, dmirror)\n    x7 =\n    x8 = x6(I)\n    x9 = objects(x7, T, F, F)\n    x10 = argmax(x9, size)\n    x11 = color(x10)\n    x12 = x2(x10)\n    x13 = objects(x7, T, F, F)\n    x14 = extensions(x13, x12)\n    x15 = rbind(shoot, DOWN)\n    x16 = leftmost(x15)\n    x17 = rbind(mapply, x16)\n    x18 = lbind(rbind, manhattan)\n    x19 = chain(x18, initset, x17)\n    x20 = fork(combine, x17, x19)\n    x21 = compose(x12, x20)\n    x22 = fork(shift, x21, ulcorner)\n    x23 = compose(x3, x22)\n    x24 = fork(intersection, x23, size)\n    x25 = fork(recolor, x23, x24)\n    x26 = compose(x3, x22)\n    x27 = fork(mapply, x26, x25)\n    x28 = interval(SIX, FOUR, ONE)\n    x29 = mapply(x27, x28)\n    x30 = mapply(x22, x29)\n    x31 = paint(x1, x30)\n    O = paint(x31, x304)\n    return O"], [1.1, "def solve_9730b7f2(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =233c669\n    2667526606\n    6362062184\n    3609967069\n    8680902806\n    6860166707\n    2116086365\n    7766369577\n    0769843602\n    \"\"\"\n    x2 = frontiers(I)\n    x3 = merge(x2)\n    x4 = difference(x5, x3)\n    x5 = mapply(toindices, x4)\n    x6 = objects(I, T, F, F)\n    x7 =x6(x5)\n    x8 = shift(x7, ulcorner)\n    x9 = mapply(toindices, x6)\n    x10 = mapply(toindices, x9)\n    x11 = fill(I, FOUR, x5)\n    x12 = fill(x11, TWO, x10)\n    x13 = rbind(a61f2674\n    x14 = rbind(toobject, I)\n    x15 = chain(x13, x14, delta)\n    x16 = x15(x6)\n    x17 = fill(x12, TWO, x16)\n    x18 = color(x2)\n    x19 = fill(x17, x18, x20)\n    x20 = objects(x19, T, F, F)\n    x21 = apply(toindices, x20)\n    x22 = apply(x21, x12)\n    x23 = normalize(x22)\n    x24 = lbind(shift, x23)\n    x25 = mapply(x24, x2)\n    O = paint(x19, x25)\n    return O"], [1.1, "def solve_3fbdd3ab(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    O = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.1, "def solve_a5295d96(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 =80(I)\n    x2 = objects(I, T, F, T)\n    x3 = sizefilter(x2, ONE)\n    x4 = difference(x2, x3)\n    x5 = apply(color, x4)\n    x6 = rbind(contained, x5)\n    x7 = compose(x6, color)\n    x8 = sfilter(x3, x7)\n    x9 = lbind(colorfilter, x4)\n    x10 = chain(first, x9, color)\n    x11 = fork(gravitate, identity, x10)\n    x12 = fork(shift, identity, x11)\n    x13 = mapply(x12, x8)\n    O = paint(I, x13)\n    return O"], [1.1, "def solve_1a82dcaa(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = lbind(sfilter, x12)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = chain(size, x3, little)\n    x5 = fork(repeat, x3, x4)\n    x6 = compose(dmirror, x5)\n    x7 = fork(equality, identity, x6)\n    x8 =istine(I)\n    x9 = sfilter(x8, x7)\n    x10 = argmax(x9, x5)\n    x11 =002(x10, identity)\n    x12 = objects(x11, T, F, F)\n    x13 = merge(x12)\n    x14 = color(x13)\n    x15 = leftmost(x10)\n    x16 = interval(ONE, x15, ONE)\n    x17 = rbind(contained, x16)\n    x18 = compose(x17, last)\n    x19 = sfilter(x15, x18)\n    x20 = increment(x15)\n    x21 = rbind(contained, x20)\n    x22 = compose(x21, last)\n    x23 = fork(subtract, first, x22)\n    x24 = chain(increment, x23, last)\n    x25 = fork(greater, x24, identity)\n    x26 = compose(x25, last)\n    x27 = rbind(sfilter, x26)\n    x28 = chain(merge, x27, x24)\n    x29 = apply(x28, x19)\n    x30 = sfilter(x29, x5)\n    x31 = compose(vfrontier, x24)\n    x32 = x31(x30)\n    x33 = lbind(mapply, x36)\n    x34 = rbind(sfilter, x33)\n    x35 = compose(x34, x24)\n    x36 = pair(x32, x35)\n    x37 = mapply(x36, x22)\n    O = underfill(x11, x paint, x37)\n    return O"], [1.1, "def solve_56b32cb2(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = compose(first, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = compose(last, last)\n    x8 = totuple(x2)\n    x9 = apply(x7, x8)\n    x10 = mostcommon(x9)\n    x11 = compose(first, last)\n    x12 = matcher(x11, x6)\n    x13 = sfilter(x2, x12)\n    x14 = compose(last, last)\n    x15 = matcher(x14, x10)\n    x16 = sfilter(x2, x15)\n    x17 =88bind(astuple, x13)\n    x18 = initset(x17)\n    x19 = matcher(first, x6)\n    x20 = compose(flip, x19)\n    x21 = mfilter(x18, x20)\n    O = fill(I, TWO, x21)\n    return O"], [1.1, "def solve_8a32ee85(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 =2217a3322\n    x2 =711213578\n    x3 =4421417dc433765\n    5224774785    7995ad74\n    1863443112\n    3207563528\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =22ofcolor(I, x1)\n    x3 =444(TWO, x2)\n    x4 = neighbors(UNITY)\n    x5 = recolor(x1, x4)\n    x6 = asindices(I)\n    x7 = outbox(x6)\n    x8 = lbind(shift, x7)\n    x9 = mapply(x8, x5)\n    x10 = combine(x4, x9)\n    O = paint(I, x10)\n    return O"], [1.1, "def solve_2263002b(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, T, F, T)\n    x13 = colorfilter(x12, x11)\n    x14 = rbind(manhattan, x8)\n    x15 = argmin(x13, x14)\n    x16 = ofcolor(x15, x10)\n    x17 = hmirror(x16)\n    x18 = invert(x17)\n    x19 =18(TWO)\n    x20 = shift(x18, x19)\n    x21 = lbind(shift, x20)\n    x22 = rbind( toobject, x25)\n    x23 = mostcolor(x22)\n    x24 = lbind(shift, x25)\n    x25 = rbind(toobject, x6)\n    x26 = mapply(x24, x21)\n    x27 = combine(x23, x26)\n    x28 = rbind(contained, x27)\n    x29 = apply(x28, x27)\n    x30 =gravitate(x29, x28)\n    x31 = rbind(add, x29)\n    x32 = initset(x15)\n    x33 = rbind(add, x32)\n    x34 = fork(subtract, x33, x31)\n    x35 = fork(shift, identity, x34)\n    x36 = mapply(x35, x30)\n    O = paint(x15, x36)\n    return O"], [1.1, "def solve_4245c791(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =225(I)\n    x2 = objects(x1, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = apply(ulcorner, x2)\n    x5 = normalize(x3)\n    x6 = lbind(shift, x5)\n    x7 = mapply(x6, x4)\n    O = paint(x1, x7)\n    return O"], [1.1, "def solve_2e959a4a(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 =91 thing(I, T, F, T)\n    x2 = matcher(size, TWO)\n    x3 = mfilter(x1, x2)\n    x4 = matcher(size, ONE)\n    x5 = mfilter(x1, x4)\n    x6 = matcher(size, FOUR)\n    x7 = mfilter(x1, x6)\n    x8 = fill(I, THREE, x3)\n    x9 = fill(x8, TWO, x5)\n    O = fill(x9, ONE, x7)\n    return O"], [1.1, "def solve_8115fd37(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = totuple(x3)\n    x5 = apply(color, x4)\n    x6 = mostcommon(x5)\n    x7 =422(x4, identity)\n    x8 = lbind(matcher, x7)\n    x9 = compose(x8, color)\n    x10 = fork(sfilter, identity, x9)\n    x11 = size(x1)\n    x12 =objects(I)\n    x13 = rbind(colorcount, x6)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x6)\n    x16 = matcher(x15, x14)\n    x17 = mfilter(x12, x16)\n    x18 =82(I, x17)\n    x19 = replace(x18, x6, x1)\n    O = fill(x19, ZERO, x17)\n    return O"], [1.1, "def solve_20395068(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = combine(x13, x15)\n    x17 = shape(I)\n    x18 = maximum(x17)\n    x19 = lbind(shift, x17)\n    x20 = mapply(x19, x16)\n    x21 = paint(I, x20)\n    x22 = toindices(x5)\n    x23 = center(x22)\n    x24 = initset(x23)\n    x25 = insert(x24, x1)\n    x26 = insert(x35, x25)\n    x27 = dmirror(x26)\n    x28 = lbind(shift, x27)\n    x29 = apply(x28, x24)\n    x30 =393(x21)\n    x31 = rbind(rapply, x30)\n    x32 = apply(x31, x22)\n    x33 = mapply(x32, x29)\n    O = fill(x21, x9, x33)\n    return O"], [1.1, "def solve_f60ebd4b(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    O =19985 to86(I):\n    return O"], [1.1, "def solve_eed37371(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(normalize, x3)\n    x5 = mapply(toindices, x4)\n    x6 = difference(x5, x4)\n    x7 = fill(I, EIGHT, x6)\n    x8 = index(x7, ORIGIN)\n    x9 = colorcount(x7, ZERO)\n    x10 = positive(x9)\n    x11 = branch(x10, dmirror, identity)\n    x12 = x11(x7)\n    x13 = objects(x12, T, F, T)\n    x14 =454(x13)\n    x15 =111(x14)\n    x16 = replace(x15, FIVE, ZERO)\n    O = x11(x16)\n    return O"], [1.1, "def solve_9c95dec5(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = ofcolor(I, TWO)\n    x3 = argmax(x1, size)\n    x4 = subgrid(x2, I)\n    x5 = normalize(x3)\n    x6 = replace(x4, TWO, ZERO)\n    x7 = lbind(insert, x6)\n    x8 = chain(x7, ulcorner, last)\n    x9 = x8(x5)\n    x10 = lbind(recolor11\n    \n    x11 = rbind(ofcolor, TWO)\n    x12 = compose(x10, x11)\n    x13 = fork(paint, identity, x12)\n    x14 = height(x5)\n    x15 = vsplit(x5, x14)\n    x16 = mapply(x6, x15)\n    x17 = ofcolor(x16, TWO)\n    x18 = compose(x3, x17)\n    x19 = x18(x5)\n    x20 = gravitate(x19, x17)\n    O = fill(x9, ZERO, x20)\n    return O"], [1.1, "def solve_ce11ddca(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =445(I)\n    x2 =1168838699464(x1, ONE)\n    x3 = leastcolor(x2)\n    x4 = ofcolor(I, x3)\n    x5 = fill(I, ZERO, x4)\n    x6 = ofcolor(I, x4)\n    x7 = box(x6)\n    x8 = fill(x5, x3, x7)\n    x9 = mapply(delta, x8)\n    O = fill(x9, x4, xExample output:\n    8888888044\n    8649488800\n    1248042948\n    80146180036\n    8848856486\n    36683484853\n    1326880488\n    8684486648\n    8883248536\n    4874225538\n    \"\"\"\n    x1 = fill(x8, x3, x2)\n    O = fill(x1, x4, x3)\n    return O"], [1.1, "def solve_531d3962(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 =9999(I, T31)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(x3, ONE)\n    x5 = branch(x4, dmirror, identity)\n    x6 = branch(x4, height, width)\n    x7 = x6(I)\n    x8 = astuple(ONE, x7)\n    x9 = x5(I)\n    x10 = crop(x9, ORIGIN, x8)\n    x11 = apply(dedupe, x10)\n    O = x5(x11)\n    return O"], [1.1, "def solve_a23eff2b(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =03733(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = partition(I)\n    x7 = fork(multiply, height, width)\n    x8 = fork(equality, size, x7)\n    x9 = sfilter(x6, x8)\n    x10 = argmax(x9, size)\n    x11 = difference(x5, x10)\n    x12 = apply(initset, x11)\n    x13 = rbind(hmatching, x10)\n    x14 = rbind(vmatching, x10)\n    x15 = fork(either, x13, x14)\n    x16 = sfilter(x12, x15)\n    x17 = rbind(gravitate, x10)\n    x18 = fork(add, center, x17)\n    x19 = fork(connect, center, x18)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x16)\n    O = paint(I, x21)\n    return O"], [1.1, "def solve_a10739a5(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = lbind(canvas, ZERO)\n    x2 = lbind(occurrences, I)\n    x3 = compose(x1, x2)\n    x4 = fork(apply, x3, leastcolor)\n    x5 = compose(maximum, x4)\n    x6 = compose(subtract, x5)\n    x7 = fork(astuple, x6, identity)\n    x8 = apply(x7, I)\n    x9 = maximum(x8)\n    x10 = dmirror(I)\n    x11 = x9(x10)\n    x12 = dmirror(x11)\n    x13 = x7(x12)\n    x14 = width(x11)\n    x15 = astuple(x14, x13)\n    x16 = repeat(x15, ONE)\n    x17 = output:\n    171\n    516\n    \"\"\"\n    x1 = x9(I)\n    x2 = fork(subtract, last, last)\n    x3 = compose(first, x2)\n    x4 = extract(x1, x3)\n    x5 = x4(x1)\n    x6 = last(x5)\n    x7 = compose(first, last)\n    x8 = difference(x5, x6)\n    x9 = file(x8, x7)\n    x10 = matcher(first, x6)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x9, x11)\n    O = fill(x6, TWO, x12)\n    return O"], [1.1, "def solve_0e025c9a(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 =33177(I,33177)\n    x2 = equality(x1, ZERO)\n    x3 = branch(x2, UP, RIGHT)\n    x4 = branch(x3, DOWN, RIGHT)\n    x5 = multiply(x4, x4)\n    x6 = add(x5, TWO)\n    O = canvas(ZERO, x5)\n    return O"], [1.1, "def solve_859b4d13(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = leftmost(x2)\n    x5 = width(I)\n    x6 = interval(x4, x5, TWO)\n    x7 = apply(tojvec, x6)\n    x8 = astuple(x interval, x4)\n    x9 = lbind(canvas, ZERO)\n    x10 = lbind(occurrences, I)\n    x11 = lbind(lbind, shift)\n    x12 = compose(x11, last)\n    x13 = lbind(recolor, x3)\n    x14 =decrement(x5)\n    x15 =853000(x14, x12)\n    x16 = paint(I, x15)\n    x17 = interval(x5, x16, ONE)\n    x18 = ofcolor(x16, x3)\n    x19 = rbind(ofcolor, x3)\n    x20 = compose(x19, center)\n    x21 = fork(recolor, x20, last)\n    x22 = mapply(x21, x17)\n    O = paint(x16, x22)\n    return O"], [1.1, "def solve_8611488f(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =4468117(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [1.1, "def solve_887ebcd9(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = height(I)\n    x5 = width(I)\n    x6 = matcher(925, x4)\n    x7 =16(I)\n    x8 = extract(x3, x6)\n    x9 = partition(x8)\n    x10 = sizefilter(x9, ONE)\n    x11 = lbind(greater, ONE)\n    x12 = compose(x11, size)\n    x13 = argmin(x10, x12)\n    x14 = palette(x13)\n    x15 = remove(x8, x14)\n    x16 = other(x15, x13)\n    x17 = palette(x13)\n    x18 = vmirror(x17)\n    x19 = lbind(shift, x18)\n    x20 = mapply(x19, x17)\n    x21 = ofcolor(x13, x16)\n    x22 = ofcolor(x18, x16)\n    x23 = combine(x21, x22)\n    x24 = fill(x13, ZERO, x23)\n    x25 = difference(x19, x23)\n    x26 = objects(x24, F, T, T)\n    x27 = rbind(adjacent, x26)\n    x28 = rbind(adjacent, x25)\n    x29 = extract(x27, x28)\n    x30 = initset(x29)\n    x31 = recolor(x16, x30)\n    x32 = combine(x27, x31)\n    x33 = fork(combine, vfrontier, hfrontier)\n    x34 = mapply(x33, x32)\n    O = fill(x24, x20, x34)\n    return O"], [1.1, "def solve_0a37c001(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = sizefilter(x1, ONE)\n    x3 = compose(neighbors, center)\n    x4 = fork(recolor, color, x3)\n    x5 = compose(decrement,472)\n    x6 = apply(x4, x2)\n    x7 = order(x6, identity)\n    x8 = compose(last, last)\n    x9 = compose(8042, x8)\n    x10 = apply(x9, x7)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = sfilter(x10, x11)\n    x14 = sfilter(x12, x7)\n    x15 = merge(x13)\n    x16 =9999512(x15)\n    x17 = mapply(x4, x13)\n    x18 = mapply(x4, x14)\n    x19 = paint(I, x13)\n    x20 = paint(x19, x18)\n    O = paint(x20, x17)\n    return O"], [1.1, "def solve_a854a2b4(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 =94a9b722(x2)\n    x4 = toindices(x3)\n    x5 = compose(double, halve)\n    x6 = fork(equality, identity, x5)\n    x7 = compose(x6, last)\n    x8 = sfilter(x4, x7)\n    x9 = fill(I, x1, x8)\n    O = replace(x9, FIVE, ZERO)\n    return O"], [1.1, "def solve_65464a30(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 =184(I)\n    x2 =754(I)\n    x3 = urcorner(x2)\n    x4 = shoot(x3, UP_RIGHT)\n    x5 =87(x4)\n    x6 = branch(x1, x5, x4)\n    O = crop(I, x3, x6)\n    return O"], [1.1, "def solve_cc1490c8(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 =0000000(I)\n    x2 =0000000(I)\n    x3 =0000000(I)\n    x4 = neighbors(ORIGIN)\n    x5 = mapply(neighbors, x4)\n    x6 = lbind(shift, x1)\n    x7 = apply(x6, x5)\n    x8 = lbind(recolor, TWO)\n    x9 = mapply(x8, x7)\n    O = paint(I, x9)\n    return O"], [1.1, "def solve_b0e08ea9(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 =279(I)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = asindices(x4)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = intersection(x5, x6)\n    x8 = lrcorner(x7)\n    x9 = shoot(x8, DOWN_LEFT)\n    x10 = intersection(x7, x9)\n    x11 = combine(x7, x10)\n    x12 = llcorner(x11)\n    x13 = remove(x12, x11)\n    x14 = lbind(shift, x13)\n    x15 = height(x12)\n    x16 = lbind(multiply, x15)\n    x17 = chain(x14, width, x16)\n    x18 = fgpartition(x4)\n    x19 = sizefilter(x18, FOUR)\n    x20 = fork(equality, toindices, x19)\n    x21 = sfilter(x19, x20)\n    x22 = mapply(x17, x21)\n    x23 = paint(x4, x22)\n    x24 = quotecdecrement(x5)\n    x25 =O = crop(x23, x24, x20)\n    O = x3(x25)\n    return O"], [1.1, "def solve_29fdfe4d(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = trim(I)\n    x2 = tophalf(x1)\n    x3 = lefthalf(x2)\n    x4 = tophalf(x3)\n    x5 = righthalf(x3)\n    x6 = bottomhalf(x3)\n    x7 = lefthalf(x5)\n    x8 = bottomhalf(x5)\n    x9 = righthalf(x6)\n    x10 = index(I, ORIGIN)\n    x11 = width(I)\n    x12 = decrement(x11)\n    x13 = tojvec(x12)\n    x14 = index(I, x13)\n    x15 = height(I)\n    x16 = decrement(x15)\n    x17 = toivec(x16)\n    x18 = index(I, x17)\n    x19 = shape(I)\n    x20 = decrement(x19)\n    x21 = index(I, x20)\n    x22 = compress(I)\n    x23 = asindices(x22)\n    x24 = box(x23)\n    x25 = fill(x22, x24, x23)\n    x26 =000000(x25)\n    O = replace(x26, x18, x20)\n    return O"], [1.1, "def solve_c5ddb86f(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = SEVEN(I)\n    x2 =matcher(first, ZERO)\n    x3 = rbind(s16, THREE)\n    x4 = compose(x2, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = lbind(toobject, x5)\n    x7 = chain(x1, x5, x6)\n    x8 = astuple(numcolors, ONE)\n    x9 = x7(x8)\n    x10 = decrement(x9)\n    x11 =1(x10)\n    x12 = subtract(x11, x10)\n    x13 = recolor(ZERO, x112)\n    x14 = paint(I, x13)\n    x15 = hsplit(x14, THREE)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = vmirror(x17)\n    x19 = hconcat(x16, x18)\n    x20 = hmirror(x19)\n    x21 = vconcat(x19, x20)\n    x22 = vconcat(x21, x22)\n    O = hmirror(x22)\n    return O"], [1.1, "def solve_cd005206(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =445(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = fork(multiply, height, width)\n    x7 = halve(x5)\n    x8 = lefthalf(I)\n    x9 = righthalf(I)\n    x10 = connect(x8, x9)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x10, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, vsplit, hsplit)\n    x16 = x15(I, TWO)\n    x17 = first(x16)\n    x18 = last(x16)\n    x19 = palette(x17)\n    x20 = palette(x18)\n    x21 = intersection(x19, x20)\n    x22 = first(x21)\n    x23 = shape(x17)\n    x24 = canvas(x22, x23)\n    x25 = ofcolor(x17, x22)\n    x26 = ofcolor(x18, x22)\n    x27 = intersection(x25, x26)\n    O = fill(x24, TWO, x27)\n    return O"], [1.1, "def solve_7fc9d2a4(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = color(x6)\n    x8 = lbind(recolor, NEG_ONE)\n    x9 = rbind(ofcolor, x7)\n    x10 = chain(x8, x9, backdrop)\n    x11 = fork(paint, identity, x10)\n    x12 =1111(x11, x5)\n    x13 = dmirror(x12)\n    x14 = ulcorner(x2)\n    x15 = lrcorner(x2)\n    x16 = shape(x12)\n    x17 = add(x16, UP_RIGHT)\n    x18 = add(x14, DOWN_LEFT)\n    x19 = shift(x13, x17)\n    x20 = x15(x19)\n    x21 = paint(x12, x20)\n    O = paint(x21, x3)\n    return O"], [1.1, "def solve_0ae8b0f1(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = ONE)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(x3, ONE)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = objects(x6, T, F, F)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x5(x10)\n    return O"], [1.1, "def solve_484b562b(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 =173(I)\n    x2 = frontiers(I)\n    x3 = merge(x2)\n    x4 = difference(x1, x3)\n    x5 = mostcolor(x4)\n    x6 = objects(I, T, F, F)\n    x7 = color(x3)\n    x8 = matcher(color, x7)\n    x9 = matcher(color, x5)\n    x10 = fork(either, x8, x9)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x6, x11)\n    x13 = merge(x12)\n    x14 = palette(x13)\n    x15 = lbind(mfilter, x12)\n    x16 = lbind(matcher,color)\n    x17 = compose(x15, x16)\n    x18 = apply(x17, x14)\n    x19 = fork(either, vline, hline)\n    x20 = lbind(prapply, connect)\n    x21 = fork(x20, identity, identity)\n    x22 = compose(x21, toindices)\n    x23 = rbind(sfilter, x19)\n    x24 = chain(merge, x23, x22)\n    x25 = fork(recolor, color, x24)\n    x26 = mapply(x25, x18)\n    x27 = paint(I, x26)\n    O = paint(x27, x3)\n    return O"], [1.1, "def solve_0a2d7acf(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = Turtle\n    5555558555\n    5558558555\n    5015585569\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, dmirror, identity)\n    x3 = x2(I)\n    x4 = objects(x3, T, F, T)\n    x5 = argmin(x4, leftmost)\n    x6 = argmax(x4, leftmost)\n    x7 = color(x5)\n    x8 = color(x6)\n    x9 = leftmost(x5)\n    x10 = leftmost(x6)\n    x11 = subtract(x10, x9)\n    x12 = double(x11)\n    x13 = multiply(THREE, TEN)\n    x14 = interval(x9, x13, x12)\n    x15 = interval(x10, x13, x12)\n    x16 = compose(vfrontier, tojvec)\n    x17 = mapply(x16, x14)\n    x18 = mapply(x16, x15)\n    x19 = recolor(x7, x17)\n    x20 = recolor(x8, x18)\n    x21 = combine(x19, x20)\n    x22 = paint(x3, x21)\n    O = x2(x22)\n    return O"], [1.1, "def solve_58fe9c06(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = matcher(ineighbors, UNITY)\n    x3 = extract(x1, x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(x3, x6)\n    x8 = objects(x7, F, T, T)\n    x9 = argmin(x8, size)\n    x10 = normalize(x9)\n    x11 = toindices(x10)\n    x12 = increment(x5)\n    x13 = increment(x12)\n    x14 = shift(x11, x13)\n    x15 = shift(x11, x14)\n    x16 =100(x15)\n    x17 = ulcorner(x10)\n    x18 = urcorner(x15)\n    x19 = shoot(x17, NEG_UNITY)\n    x20 = shoot(x18, DOWN_LEFT)\n    x21 = combine(x19, x20)\n    x22 = combine(x18, x21)\n    x23 = x5(x22)\n    O = fill(x6, x4, x23)\n    return O"], [1.1, "def solve_670c1eae(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = width(I)\n    x5 = astuple(x4, x4)\n    x6 = canvas(x3, x5)\n    x7 = interval(ONE,SIX, ONE)\n    x8 = invert(TEN)\n    x9 = interval(x8, TEN, ONE)\n    x10 = product(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = apply(x11, x10)\n    x14 = apply(x12, x10)\n    x15 = divide(x4, x4)\n    x16 = width(I)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = height(I)\n    x19 = interval(ZERO, x18, ONE)\n    x20 = pair(x19, x14)\n    x21 = apply(x11, x20)\n    x22 = apply(box, x21)\n    x23 = pair(x21, x22)\n    x24 = mapply(to fill, x23, THREE)\n    O = fill(x24, FOUR, x2)\n    return O"], [1.1, "def solve_20156c2f(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = rot270(I)\n    x2 = hconcat(I, x1)\n    x3 = mapply(d4469remove, x2)\n    x4 =O = rot90(x2)\n    x5 =180(x4)\n    x6 = astuple(x5, x4)\n    x7 = x8(I)\n    x8 = x9(x7)\n    x9 = rot270(x8)\n    x10 = hconcat(x9, x1)\n    x11 = hconcat(x10, x8)\n    O = vconcat(x9, x11)\n    return O"], [1.1, "def solve_16f7ed9d(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = rbind(Sfilter, ORIG2)\n    x2 = compose(dmirror, x1)\n    x3 = chain(size, dedupe, x2)\n    x4 = matcher(x3, ONE)\n    x5 = compose(71,042)\n    x6 = difference(x1, x5)\n    x7 = astuple(ONE, THREE)\n    x8 = astuple(TWO, FOUR)\n    x9 = initset(x7)\n    x10 = insert(x8, x9)\n    x11 = insert(x4, x10)\n    x12 = insert(x501, x11)\n    x13 = lbind(ofcolor, I)\n    x14 = lbind(mapply, neighbors)\n    x15 = chain(x14, x13, x141)\n    x16 = fork(difference, x15, identity)\n    x17 = chain(size, x13, x16)\n    x18 = matcher(x17, ZERO)\n    x19 = lbind(extract, x5)\n    x20 = chain(x19, x13, x141)\n    x21 = compose(last, x20)\n    x22 = fork(subtract, x21, x15)\n    x23 = chain(initset, x500, x22)\n    x24 = fork(rapply, x23, identity)\n    x25 = compose(first, x24)\n    x26 = compose(x5, x22)\n    x27 = fork(intersection, x26, x25)\n    x28 = chain(x19, x24, x27)\n    x29 = compose(x5, x27)\n    x30 = fork(intersection, x29, x28)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(I, x32)\n    O = trim(x33)\n    return O"], [1.1, "def solve_8b3368f7(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(673ef23, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"]], "2037f2c7": [[0.39403220349444606, "def solve_ffe25cd0(I):\n    x1 = palette(I)\n    x2 = remove(ONE, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = canvas(x4, THREE_BY_THREE)\n    x6 = colorcount(I, ONE)\n    x7 = decrement(x6)\n    x8 = tojvec(x7)\n    x9 = connect(ORIGIN, x8)\n    x10 = fill(x5, TWO, x9)\n    x11 = initset(UNITY)\n    x12 = equality(x6, FOUR)\n    x13 = branch(x12, x11, x9)\n    O = fill(x10, TWO, x13)\n    return O"], [0.4452312480232344, "def solve_4858c5b1(I):\n    x1 = astuple(ONE, THREE)\n    x2 = size(x1)\n    x3 = decrement(x2)\n    x4 = canvas(ZERO, x1)\n    x5 = tojvec(x3)\n    x6 = connect(ORIGIN, x5)\n    x7 = equality(x2, FOUR)\n    x8 = insert(UNITY, x6)\n    x9 = branch(x7, x8, x6)\n    O = fill(x4, TWO, x9)\n    return O"], [0.47026220156654935, "def solve_d66db884(I):\n    x1 = palette(I)\n    x2 = contained(ONE, x1)\n    x3 = contained(TWO, x1)\n    x4 = branch(x2, UNITY, TWO_BY_TWO)\n    x5 = branch(x3, RIGHT, x4)\n    x6 = fork(combine, vfrontier, hfrontier)\n    x7 = x6(x5)\n    x8 = canvas(ZERO, THREE_BY_THREE)\n    O = fill(x8, FIVE, x7)\n    return O"], [0.49821676673048865, "def solve_5020f3c5(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = astuple(FOUR, FOUR)\n    x4 = ofcolor(x1, ZERO)\n    x5 = ofcolor(x2, ZERO)\n    x6 = intersection(x4, x5)\n    x7 = canvas(ZERO, x3)\n    O = fill(x7, THREE, x6)\n    return O"], [0.5124660219282645, "def solve_3936d83c(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_6ce7e217(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_27616eb4(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_1f621c95(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_2bd5d1be(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_56bd2134(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_ed6b6093(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_de236228(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_693c28fe(I):\n    x1 = rot180(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot180(x2)\n    return O"], [0.5124660219282645, "def solve_2a16f093(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5124660219282645, "def solve_01bdc5be(I):\n    x1 = rot270(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [0.5295133851655591, "def solve_c63a7545(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = subgrid(x2, I)\n    x4 = lefthalf(x3)\n    O = tophalf(x4)\n    return O"], [0.5320871794603679, "def solve_099cd861(I):\n    x1 = objects(I, T, F, F)\n    x2 = sizefilter(x1, ONE)\n    x3 = apply(color, x2)\n    x4 = difference(x1, x2)\n    x5 = rbind(subgrid, I)\n    x6 = apply(x5, x4)\n    x7 = rbind(colorcount, SIX)\n    x8 = argmax(x6, x7)\n    x9 = mostcolor(x8)\n    O = canvas(x9, UNITY)\n    return O"], [0.5341705127937012, "def solve_c25334c6(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.5341705127937012, "def solve_f6eab80c(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.5341705127937012, "def solve_ffda0447(I):\n    x1 = palette(I)\n    x2 = objects(I, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = color(x3)\n    x5 = remove(ZERO, x1)\n    x6 = other(x5, x4)\n    O = canvas(x6, UNITY)\n    return O"], [0.5341705127937012, "def solve_46a4c9f5(I):\n    x1 = vmirror(I)\n    x2 = equality(x1, I)\n    x3 = hmirror(I)\n    x4 = equality(x3, I)\n    x5 = either(x2, x4)\n    x6 = branch(x5, ONE, SEVEN)\n    O = canvas(x6, UNITY)\n    return O"], [0.5389342090692021, "def solve_a0f968c0(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.5389342090692021, "def solve_b546c6bd(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.5389342090692021, "def solve_71221886(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = remove(x2, x1)\n    x5 = argmax(x4, size)\n    x6 = shape(x5)\n    x7 = canvas(x3, x6)\n    x8 = normalize(x5)\n    O = paint(x7, x8)\n    return O"], [0.5437278100321579, "def solve_d37efd93(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = apply(initset, x5)\n    x7 = astuple(ONE, THREE)\n    x8 = size(x6)\n    x9 = order(x6, leftmost)\n    x10 = apply(color, x9)\n    x11 = rbind(canvas, UNITY)\n    x12 = apply(x11, x10)\n    x13 = merge(x12)\n    x14 = dmirror(x13)\n    x15 = subtract(NINE, x8)\n    x16 = astuple(ONE, x15)\n    x17 = mostcolor(I)\n    x18 = canvas(x17, x16)\n    x19 = hconcat(x14, x18)\n    x20 = hsplit(x19, THREE)\n    x21 = merge(x20)\n    x22 = crop(x21, ORIGIN, x7)\n    x23 = crop(x21, DOWN, x7)\n    x24 = crop(x21, TWO_BY_ZERO, x7)\n    x25 = vmirror(x23)\n    x26 = vconcat(x22, x25)\n    O = vconcat(x26, x24)\n    return O"], [0.5468574286690229, "def solve_f38fc494(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = ofcolor(x1, ZERO)\n    x4 = ofcolor(x2, ZERO)\n    x5 = intersection(x3, x4)\n    x6 = size(x5)\n    x7 = astuple(FOUR, FOUR)\n    x8 = canvas(THREE, x7)\n    x9 = fill(x8, ZERO, x3)\n    O = fill(x9, TWO, x4)\n    return O"], [0.5614714401904005, "def solve_468204d3(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.5614714401904005, "def solve_c0f08e67(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = shape(I)\n    x4 = divide(x3, THREE)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = interval(ZERO, x5, ONE)\n    x8 = interval(ZERO, x6, ONE)\n    x9 = product(x7, x8)\n    x10 = rbind(multiply, THREE)\n    x11 = apply(x10, x9)\n    x12 = matcher(first, FIVE)\n    x13 = compose(flip, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = rbind(toobject, I)\n    x16 = lbind(shift, x2)\n    x17 = chain(x14, x15, x16)\n    x18 = compose(color, x17)\n    x19 = lbind(shift, x2)\n    x20 = fork(recolor, x18, x19)\n    x21 = mapply(x20, x11)\n    x22 = paint(I, x21)\n    O = downscale(x22, THREE)\n    return O"], [0.5730284728096737, "def solve_2da17ccf(I):\n    x1 = replace(I, FIVE, ZERO)\n    O = downscale(x1, THREE)\n    return O"], [0.5863202149434034, "def solve_d9c70a34(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = other(x4, x3)\n    x6 = objects(I, T, F, F)\n    x7 = matcher(color, x5)\n    x8 = extract(x6, x7)\n    O = subgrid(x8, I)\n    return O"], [0.5863747631863573, "def solve_f3fd0914(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, T, T)\n    x3 = first(x2)\n    x4 = vline(x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(x1)\n    x7 = objects(x6, T, T, T)\n    x8 = order(x7, uppermost)\n    x9 = apply(color, x8)\n    x10 = dedupe(x9)\n    x11 = size(x10)\n    x12 = rbind(repeat, x11)\n    O = apply(x12, x10)\n    return O"], [0.5963048638279206, "def solve_02612f31(I):\n    x1 = lbind(apply, last)\n    x2 = compose(positive, first)\n    x3 = lbind(interval, ZERO)\n    x4 = rbind(x3, ONE)\n    x5 = rbind(sfilter, x2)\n    x6 = compose(x4, size)\n    x7 = fork(pair, x6, identity)\n    x8 = chain(x1, x5, x7)\n    x9 = rbind(branch, identity)\n    x10 = rbind(x9, x8)\n    x11 = chain(size, dedupe, first)\n    x12 = lbind(equality, ONE)\n    x13 = chain(x10, x12, x11)\n    x14 = compose(initset, x13)\n    x15 = fork(rapply, x14, identity)\n    x16 = compose(first, x15)\n    x17 = rbind(branch, identity)\n    x18 = rbind(x17, x16)\n    x19 = chain(x18, positive, size)\n    x20 = compose(initset, x19)\n    x21 = fork(rapply, x20, identity)\n    x22 = compose(first, x21)\n    x23 = multiply(TEN, THREE)\n    x24 = power(x22, x23)\n    x25 = compose(rot90, x24)\n    x26 = power(x25, FOUR)\n    x27 = x26(I)\n    x28 = lefthalf(x27)\n    O = tophalf(x28)\n    return O"], [0.5980018302732818, "def solve_8abdcc84(I):\n    x1 = objects(I, T, F, F)\n    x2 = fork(multiply, height, width)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = lbind(chain, positive)\n    x6 = lbind(x5, size)\n    x7 = rbind(compose, backdrop)\n    x8 = lbind(lbind, intersection)\n    x9 = chain(x6, x7, x8)\n    x10 = chain(x9, backdrop, outbox)\n    x11 = lbind(sfilter, x4)\n    x12 = compose(x11, x10)\n    x13 = chain(positive, size, x12)\n    x14 = sfilter(x4, x13)\n    x15 = compose(merge, x12)\n    x16 = apply(x15, x14)\n    x17 = rbind(subgrid, I)\n    x18 = apply(x17, x16)\n    x19 = merge(x16)\n    x20 = palette(x19)\n    x21 = lbind(colorcount, x19)\n    x22 = argmin(x20, x21)\n    x23 = rbind(colorcount, x22)\n    O = argmax(x18, x23)\n    return O"], [0.6076921592043171, "def solve_9418cabd(I):\n    x1 = initset(ORIGIN)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.6076921592043171, "def solve_ea44bb60(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.6076921592043171, "def solve_4add9518(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [0.6076921592043171, "def solve_4b8b40a0(I):\n    x1 = width(I)\n    x2 = astuple(NINE, x1)\n    x3 = canvas(ZERO, x2)\n    x4 = vconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = rbind(colorcount, TWO)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.6194886937848373, "def solve_bc2b4fb8(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.6194886937848373, "def solve_bc691e20(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = width(I)\n    x5 = halve(x4)\n    x6 = frontiers(I)\n    x7 = merge(x6)\n    x8 = mostcolor(x7)\n    x9 = astuple(x3, x5)\n    x10 = canvas(x8, x9)\n    x11 = asindices(x10)\n    x12 = toobject(x11, I)\n    x13 = increment(x5)\n    x14 = tojvec(x13)\n    x15 = shift(x11, x14)\n    x16 = toobject(x15, I)\n    x17 = decrement(x3)\n    x18 = toivec(x17)\n    x19 = shift(x11, x18)\n    x20 = toobject(x19, I)\n    x21 = decrement(x3)\n    x22 = increment(x5)\n    x23 = astuple(x21, x22)\n    x24 = shift(x11, x23)\n    x25 = toobject(x24, I)\n    x26 = palette(I)\n    x27 = other(x26, x8)\n    x28 = matcher(first, x27)\n    x29 = rbind(sfilter, x28)\n    x30 = chain(toindices, x29, normalize)\n    x31 = x30(x12)\n    x32 = x30(x16)\n    x33 = x30(x20)\n    x34 = x30(x25)\n    x35 = combine(x31, x32)\n    x36 = combine(x33, x34)\n    x37 = combine(x35, x36)\n    O = fill(x10, x27, x37)\n    return O"], [0.6237212411850093, "def solve_6c8d2a06(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, T, F, F)\n    x6 = rbind(colorcount, ONE)\n    x7 = argmax(x5, x6)\n    O = subgrid(x7, I)\n    return O"], [0.6309126220053929, "def solve_9a5cba85(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_47143755(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_f806b6fc(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_de2b6808(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_77026548(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_dec8195a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_82db253a(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_e861c1ef(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_868dbe6e(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_f5bbc6f8(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_3bbd14bd(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_52dd0580(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_716a7ac9(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_5b4c7e19(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.6309126220053929, "def solve_7048e271(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [0.631933306897075, "def solve_690030d6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, F, T, T)\n    x13 = rbind(colorcount, x10)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x10)\n    x16 = matcher(x15, x14)\n    x17 = sfilter(x12, x16)\n    x18 = apply(ulcorner, x17)\n    x19 = first(x12)\n    x20 = shape(x19)\n    x21 = increment(x20)\n    x22 = rbind(divide, x21)\n    x23 = apply(x22, x18)\n    x24 = sfilter(x1, hline)\n    x25 = size(x24)\n    x26 = sfilter(x1, vline)\n    x27 = size(x26)\n    x28 = astuple(x25, x27)\n    x29 = increment(x28)\n    x30 = canvas(x11, x29)\n    O = fill(x30, ONE, x23)\n    return O"], [0.6400120813164292, "def solve_be5cb8b0(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(equality, toindices, box)\n    x3 = sfilter(x1, x2)\n    x4 = fork(multiply, height, width)\n    x5 = argmax(x3, x4)\n    x6 = fgpartition(I)\n    x7 = merge(x6)\n    x8 = difference(x7, x5)\n    x9 = subgrid(x5, I)\n    x10 = subgrid(x8, I)\n    x11 = height(x9)\n    x12 = subtract(x11, TWO)\n    x13 = height(x10)\n    x14 = divide(x12, x13)\n    x15 = width(x9)\n    x16 = subtract(x15, TWO)\n    x17 = width(x10)\n    x18 = divide(x16, x17)\n    x19 = hupscale(x10, x18)\n    x20 = vupscale(x19, x14)\n    x21 = asobject(x20)\n    x22 = shift(x21, UNITY)\n    O = paint(x9, x22)\n    return O"], [0.6405932929121335, "def solve_7988cc7f(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, size)\n    x3 = subgrid(x2, I)\n    O = trim(x3)\n    return O"], [0.652277101112151, "def solve_6762fa62(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.652277101112151, "def solve_f8b63e1f(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = tophalf(x2)\n    x5 = bottomhalf(x1)\n    x6 = bottomhalf(x2)\n    x7 = astuple(x3, x4)\n    x8 = astuple(x5, x6)\n    x9 = combine(x7, x8)\n    O = leastcommon(x9)\n    return O"], [0.6557151442133381, "def solve_db8b69d5(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.6557151442133381, "def solve_7b321275(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = tophalf(x1)\n    x4 = bottomhalf(x1)\n    x5 = tophalf(x2)\n    x6 = bottomhalf(x2)\n    x7 = rbind(ofcolor, ZERO)\n    x8 = fork(difference, asindices, x7)\n    x9 = fork(toobject, x8, identity)\n    x10 = x9(x5)\n    x11 = x9(x4)\n    x12 = x9(x6)\n    x13 = paint(x3, x12)\n    x14 = paint(x13, x11)\n    O = paint(x14, x10)\n    return O"], [0.6557151442133381, "def solve_74f998dd(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.6557151442133381, "def solve_f400889a(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.6557151442133381, "def solve_d558cb8a(I):\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = righthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = lefthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(x2)\n    x18 = canvas(x16, x17)\n    x19 = matcher(first, x16)\n    x20 = compose(flip, x19)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, asobject)\n    x23 = x22(x2)\n    x24 = x22(x6)\n    x25 = x22(x8)\n    x26 = x22(x4)\n    x27 = paint(x18, x23)\n    x28 = paint(x27, x24)\n    x29 = paint(x28, x25)\n    O = paint(x29, x26)\n    return O"], [0.6608087402055141, "def solve_cfb55a72(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    O = rot180(x2)\n    return O"], [0.6748161707949084, "def solve_eb9f3875(I):\n    x1 = width(I)\n    x2 = increment(x1)\n    x3 = divide(x2, THREE)\n    x4 = decrement(x3)\n    x5 = height(I)\n    x6 = astuple(x5, x4)\n    x7 = crop(I, ORIGIN, x6)\n    x8 = add(x4, ONE)\n    x9 = tojvec(x8)\n    x10 = crop(I, x9, x6)\n    x11 = double(x4)\n    x12 = add(x11, TWO)\n    x13 = tojvec(x12)\n    x14 = crop(I, x13, x6)\n    x15 = palette(x7)\n    x16 = palette(x10)\n    x17 = palette(x14)\n    x18 = intersection(x15, x16)\n    x19 = intersection(x18, x17)\n    x20 = first(x19)\n    x21 = other(x15, x20)\n    x22 = other(x16, x20)\n    x23 = other(x17, x20)\n    x24 = canvas(x20, x6)\n    x25 = ofcolor(x7, x21)\n    x26 = ofcolor(x10, x22)\n    x27 = ofcolor(x14, x23)\n    x28 = fill(x24, x23, x27)\n    x29 = fill(x28, x22, x26)\n    O = fill(x29, x21, x25)\n    return O"], [0.6938245927181472, "def solve_cd8377b8(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x10 = lbind(ofcolor, I)\n    x11 = chain(x8, x9, x10)\n    x12 = rbind(matcher, ZERO)\n    x13 = compose(x12, x11)\n    x14 = chain(flip, positive, size)\n    x15 = lbind(ofcolor, I)\n    x16 = fork(sfilter, x15, x13)\n    x17 = compose(x14, x16)\n    x18 = argmax(x6, x17)\n    x19 = other(x6, x18)\n    x20 = ofcolor(I, x18)\n    x21 = subgrid(x20, I)\n    x22 = switch(x21, x18, x19)\n    x23 = replace(x22, x18, x4)\n    x24 = lbind(downscale, x23)\n    x25 = fork(upscale, x24, identity)\n    x26 = matcher(x25, x23)\n    x27 = shape(x23)\n    x28 = maximum(x27)\n    x29 = interval(ONE, x28, ONE)\n    x30 = sfilter(x29, x26)\n    x31 = maximum(x30)\n    O = downscale(x23, x31)\n    return O"], [0.7011976947751416, "def solve_3de58a17(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = mapply(dneighbors, x2)\n    x4 = toobject(x3, I)\n    x5 = mostcolor(x4)\n    x6 = palette(I)\n    x7 = remove(x5, x6)\n    x8 = order(x7, identity)\n    x9 = first(x8)\n    x10 = last(x8)\n    x11 = ofcolor(I, x9)\n    x12 = ofcolor(I, x10)\n    x13 = switch(I, x10, x9)\n    x14 = combine(x11, x12)\n    x15 = subgrid(x14, x13)\n    O = trim(x15)\n    return O"], [0.716029377533375, "def solve_e41b3a1d(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = ofcolor(x1, ZERO)\n    x4 = ofcolor(x2, ZERO)\n    x5 = intersection(x3, x4)\n    x6 = replace(x1, NINE, ZERO)\n    O = fill(x6, EIGHT, x5)\n    return O"], [0.7164645384977338, "def solve_1e6984ea(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, vline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, hsplit, vsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = combine(x15, x16)\n    x18 = intersection(x15, x16)\n    x19 = difference(x17, x18)\n    O = fill(x14, THREE, x19)\n    return O"], [0.7313689109828214, "def solve_ce729be0(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.7313689109828214, "def solve_81bc7ebf(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.7313689109828214, "def solve_2967c114(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = shape(x7)\n    x10 = palette(x7)\n    x11 = palette(x8)\n    x12 = intersection(x10, x11)\n    x13 = first(x12)\n    x14 = ofcolor(x7, x13)\n    x15 = ofcolor(x8, x13)\n    x16 = intersection(x14, x15)\n    x17 = canvas(x13, x9)\n    O = fill(x17, THREE, x16)\n    return O"], [0.7313689109828214, "def solve_1d95db98(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = ofcolor(x7, x12)\n    x16 = ofcolor(x8, x12)\n    x17 = intersection(x15, x16)\n    O = fill(x14, THREE, x17)\n    return O"], [0.7356195315428602, "def solve_fa599f79(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, tophalf, lefthalf)\n    x6 = branch(x4, bottomhalf, righthalf)\n    x7 = x5(I)\n    x8 = x6(I)\n    x9 = palette(x7)\n    x10 = palette(x8)\n    x11 = intersection(x9, x10)\n    x12 = first(x11)\n    x13 = shape(x7)\n    x14 = canvas(x12, x13)\n    x15 = palette(x7)\n    x16 = other(x15, x12)\n    x17 = palette(x8)\n    x18 = other(x17, x12)\n    x19 = ofcolor(x7, x16)\n    x20 = ofcolor(x8, x18)\n    x21 = combine(x19, x20)\n    O = fill(x14, THREE, x21)\n    return O"], [0.7407050283391268, "def solve_cff8ce5e(I):\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = valmax(x2, shape)\n    x4 = canvas(x1, x3)\n    x5 = apply(normalize, x2)\n    x6 = lbind(subtract, x3)\n    x7 = chain(halve, x6, shape)\n    x8 = fork(shift, identity, x7)\n    x9 = mapply(x8, x5)\n    O = paint(x4, x9)\n    return O"], [0.7513894621344644, "def solve_349a7715(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.7513894621344644, "def solve_e482eab4(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = width(I)\n    x5 = hsplit(I, x4)\n    x6 = first(x5)\n    x7 = mostcolor(x6)\n    x8 = objects(x3, T, F, F)\n    x9 = matcher(color, x7)\n    x10 = compose(flip, x9)\n    x11 = sfilter(x8, x10)\n    x12 = merge(x11)\n    O = paint(x1, x12)\n    return O"], [0.7513894621344644, "def solve_e75095ef(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = vmirror(x2)\n    x4 = objects(x3, T, F, T)\n    x5 = merge(x4)\n    O = paint(x1, x5)\n    return O"], [0.7514237970163009, "def solve_4b9b7594(I):\n    x1 = portrait(I)\n    x2 = branch(x1, tophalf, lefthalf)\n    O = x2(I)\n    return O"], [0.7702738530895862, "def solve_712908b7(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 =equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7702738530895862, "def solve_4b1f1373(I):\n    x1 = lefthalf(I)\n    x2 = righthalf(I)\n    x3 = equality(x1, x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    O = x4(I)\n    return O"], [0.7707492564922985, "def solve_a1e670d5(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.7707492564922985, "def solve_10e9514d(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.7707492564922985, "def solve_e2f23174(I):\n    x1 = frontiers(I)\n    x2 = sfilter(x1, hline)\n    x3 = size(x2)\n    x4 = positive(x3)\n    x5 = branch(x4, vsplit, hsplit)\n    x6 = x5(I, TWO)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = fgpartition(x8)\n    x10 = merge(x9)\n    O = paint(x7, x10)\n    return O"], [0.7946931652854432, "def solve_15147233(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.7946931652854432, "def solve_d8988e44(I):\n    x1 = mostcolor(I)\n    x2 = shape(I)\n    O = canvas(x1, x2)\n    return O"], [0.8058042763965544, "def solve_ad274ceb(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.8058042763965544, "def solve_77678f50(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.8058042763965544, "def solve_d3a21eb2(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.8058042763965544, "def solve_cd5e5ac1(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(contained, x17)\n    x19 = compose(x18, color)\n    x20 = sfilter(x4, x19)\n    x21 = lbind(colorfilter, x10)\n    x22 = chain(first, x21, color)\n    x23 = fork(gravitate, identity, x22)\n    x24 = fork(shift, identity, x23)\n    x25 = mapply(x24, x20)\n    O = paint(x16, x25)\n    return O"], [0.8113598319521098, "def solve_d0d9d11c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = sfilter(x1, hline)\n    x5 = size(x4)\n    x6 = positive(x5)\n    x7 = branch(x6, identity, dmirror)\n    x8 = x7(I)\n    x9 = rbind(subgrid, x8)\n    x10 = matcher(color, x3)\n    x11 = compose(flip, x10)\n    x12 = partition(x8)\n    x13 = sfilter(x12, x11)\n    x14 = rbind(ofcolor, x3)\n    x15 = lbind(mapply, vfrontier)\n    x16 = chain(x15, x14, x9)\n    x17 = fork(shift, x16, ulcorner)\n    x18 = fork(intersection, toindices, x17)\n    x19 = mapply(x18, x13)\n    x20 = fill(x8, ZERO, x19)\n    O = x7(x20)\n    return O"], [0.8141732132799135, "def solve_e8f97d58(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(I, EIGHT, x4)\n    x6 = shift(x3, UP)\n    x7 = fill(x5, TWO, x6)\n    x8 = shift(x3, RIGHT)\n    x9 = fill(x7, SIX, x8)\n    x10 = shift(x3, LEFT)\n    O = fill(x9, SEVEN, x10)\n    return O"], [0.8219390250871336, "def solve_fd479b93(I):\n    x1 = switch(I, FOUR, EIGHT)\n    O = switch(x1, ONE, TWO)\n    return O"], [0.8220447986833391, "def solve_f83f9a53(I):\n    x1 = switch(I, FIVE, EIGHT)\n    O = switch(x1, EIGHT, TWO)\n    return O"], [0.8220447986833391, "def solve_c73575b4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6,88, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.8220447986833391, "def solve_0f1b5b9b(I):\n    x1 = switch(I, EIGHT, TWO)\n    x2 = switch(x1, THREE, FOUR)\n    x3 = switch(x2,9, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.8220447986833391, "def solve_e5b651d8(I):\n    x1 = switch(I, ORIGIN, THREE)\n    x2 = switch(x1, EIGHT, TWO)\n    x3 = switch(x2, TWO, ONE)\n    O = switch(x3, ONE, FOUR)\n    return O"], [0.8277590843976249, "def solve_9b77a7d2(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_44df1595(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_97c80cb9(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.8277590843976249, "def solve_f9c173a1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.8277590843976249, "def solve_a74b3ab2(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.8277590843976249, "def solve_9915a86c(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_c95ea8ea(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_71487622(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_38586d59(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_86516d9c(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_cb12132f(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.8277590843976249, "def solve_353966b3(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_85aa7f23(I):\n    x1 = shape(I)\n    x2 = partition(I)\n    x3 = argmax(x2, size)\n    x4 = canvas(FIVE, x1)\n    O = paint(x4, x3)\n    return O"], [0.8277590843976249, "def solve_cd1f9d36(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [0.8277875214971026, "def solve_a413f355(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.8277875214971026, "def solve_7a79cd2a(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.8277875214971026, "def solve_7392c7e5(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = shift(x2, DOWN)\n    O = fill(x4, TWO, x5)\n    return O"], [0.8280264986187765, "def solve_52d4dd56(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = prapply(connect, x2, x2)\n    x4 = fgpartition(I)\n    x5 = merge(x4)\n    x6 = cover(I, x5)\n    x7 = fork(either, hline, vline)\n    x8 = box(x5)\n    x9 = rbind(difference, x8)\n    x10 = chain(positive, size, x9)\n    x11 = fork(both, x7, x10)\n    x12 = mfilter(x3, x11)\n    O = fill(x6, x1, x12)\n    return O"], [0.829564622162508, "def solve_97b4f6cf(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.829564622162508, "def solve_83e1f9b2(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    O = fill(I, EIGHT, x2)\n    return O"], [0.8309805019969229, "def solve_bdbc6c83(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = lbind(recolor, EIGHT)\n    x4 = rbind(ofcolor, x1)\n    x5 = chain(x3, backdrop, x4)\n    x6 = fork(paint, identity, x5)\n    x7 = height(I)\n    x8 = vsplit(I, x7)\n    x9 = mapply(x6, x8)\n    x10 = ofcolor(x9, EIGHT)\n    x11 = dmirror(I)\n    x12 = width(I)\n    x13 = vsplit(x11, x12)\n    x14 = mapply(x6, x13)\n    x15 = dmirror(x14)\n    x16 = ofcolor(x15, EIGHT)\n    x17 = combine(x10, x16)\n    x18 = difference(x17, x2)\n    O = fill(I, EIGHT, x18)\n    return O"], [0.8341973243152688, "def solve_a2ad9994(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = shift(x2, NEG_UNITY)\n    x4 = recolor(THREE, x3)\n    x5 = shift(x2, UNITY)\n    x6 = recolor(SEVEN, x5)\n    x7 = shift(x2, DOWN_LEFT)\n    x8 = recolor(EIGHT, x7)\n    x9 = shift(x2, UP_RIGHT)\n    x10 = recolor(SIX, x9)\n    x11 = mostcolor(I)\n    x12 = fill(I, x11, x2)\n    x13 = combine(x4, x6)\n    x14 = combine(x8, x10)\n    x15 = combine(x13, x14)\n    O = paint(x12, x15)\n    return O"], [0.8376932799217021, "def solve_532cc8a8(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.8376932799217021, "def solve_72273abc(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = subgrid(x2, I)\n    x5 = lbind(insert, DOWN)\n    x6 = compose(lrcorner, asindices)\n    x7 = chain(x5, initset, x6)\n    x8 = fork(subgrid, x7, identity)\n    x9 = matcher(identity, x3)\n    x10 = rbind(subtract, TWO)\n    x11 = rbind(sfilter, x9)\n    x12 = compose(x10, width)\n    x13 = chain(size, x11, first)\n    x14 = fork(greater, x12, x13)\n    x15 = rbind(branch, identity)\n    x16 = rbind(x15, x8)\n    x17 = chain(initset, x16, x14)\n    x18 = fork(rapply, x17, identity)\n    x19 = compose(first, x18)\n    x20 = compose(x19, rot90)\n    x21 = double(EIGHT)\n    x22 = double(x21)\n    x23 = power(x20, x22)\n    x24 = x23(x4)\n    x25 = leastcolor(x24)\n    x26 = ofcolor(x24, x25)\n    x27 = fork(combine, vfrontier, hfrontier)\n    x28 = mapply(x27, x26)\n    O = fill(x24, x25, x28)\n    return O"], [0.838870195508736, "def solve_2a19a59b(I):\n    x1 = objects(I, T, F, T)\n    x2 = matcher(size, SIX)\n    x3 = compose(flip, x2)\n    x4 = mfilter(x1, x2)\n    x5 = mfilter(x1, x3)\n    x6 = fill(I, TWO, x4)\n    O = fill(x6, ONE, x5)\n    return O"], [0.8477590843976248, "def solve_0a738006(I):\n    x1 = objects(I, T, F, T)\n    x2 = fork(add, height, width)\n    x3 = compose(decrement, x2)\n    x4 = fork(equality, size, x3)\n    x5 = fork(difference, toindices, box)\n    x6 = compose(size, x5)\n    x7 = matcher(x6, ZERO)\n    x8 = sfilter(x1, x4)\n    x9 = difference(x1, x8)\n    x10 = sfilter(x9, x7)\n    x11 = merge(x1)\n    x12 = fill(I, TWO, x11)\n    x13 = merge(x8)\n    x14 = fill(x12, ONE, x13)\n    x15 = merge(x10)\n    O = fill(x14, SIX, x15)\n    return O"], [0.8519775951141462, "def solve_4266a79b(I):\n    x1 = rot270(I)\n    x2 = fork(equality, toindices, rot90)\n    x3 = rot180(x1)\n    x4 = rot270(x1)\n    x5 = either(x2, x3)\n    x6 = branch(x5, rbind, ONE)\n    x7 = branch(x5, lefthalf, tophalf)\n    x8 = branch(x5, righthalf, bottomhalf)\n    x9 = branch(x5, hconcat, vconcat)\n    x10 = x7(I)\n    x11 = x8(I)\n    x12 = index(x10, ORIGIN)\n    x13 = shape(x11)\n    x14 = decrement(x13)\n    x15 = index(x11, x14)\n    x16 = replace(x10, THREE, x12)\n    x17 = replace(x11, THREE, x15)\n    O = x9(x16, x17)\n    return O"], [0.8519775951141462, "def solve_830db236(I):\n    x1 = objects(I, T, F, T)\n    x2 = lbind(sfilter, x1)\n    x3 = compose(size, x2)\n    x4 = x3(vline)\n    x5 = x3(hline)\n    x6 = greater(x4, x5)\n    x7 = branch(x6, lefthalf, tophalf)\n    x8 = branch(x6, righthalf, bottomhalf)\n    x9 = branch(x6, hconcat, vconcat)\n    x10 = x7(I)\n    x11 = x8(I)\n    x12 = index(x10, ORIGIN)\n    x13 = shape(x11)\n    x14 = decrement(x13)\n    x15 = index(x11, x14)\n    x16 = replace(x10, THREE, x12)\n    x17 = replace(x11, THREE, x15)\n    O = x9(x16, x17)\n    return O"], [0.8530872511837071, "def solve_f68f5a98(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.8530872511837071, "def solve_cc69fd20(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.8530872511837071, "def solve_dd8c3732(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.8530872511837071, "def solve_ea0c1245(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    O = apply(x4, x13)\n    return O"], [0.8552576021850845, "def solve_a1393f8c(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = chain(x2, x1, last)\n    x4 = fork(recolor, first, x3)\n    x5 = astuple(SIX, THREE)\n    x6 = astuple(FOUR, EIGHT)\n    x7 = astuple(ONE, TWO)\n    x8 = initset(x5)\n    x9 = insert(x6, x8)\n    x10 = insert(x7, x9)\n    x11 = mapply(x4, x10)\n    O = paint(I, x11)\n    return O"], [0.8559241864624044, "def solve_0c976d01(I):\n    x1 = dmirror(I)\n    x2 = papply(pair, I, x1)\n    x3 = lbind(apply, maximum)\n    x4 = apply(x3, x2)\n    x5 = mostcolor(x4)\n    x6 = replace(x4, ZERO, x5)\n    x7 = index(x6, ORIGIN)\n    x8 = shoot(ORIGIN, UNITY)\n    O = fill(x6, x7, x8)\n    return O"], [0.8581546500312859, "def solve_e4415c36(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.8581546500312859, "def solve_e59a7693(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.8581546500312859, "def solve_e61f52eb(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = asobject(I)\n    x5 = difference(x4, x2)\n    x6 = leastcolor(x5)\n    x7 = colorcount(I, x6)\n    x8 = mostcolor(x5)\n    x9 = ofcolor(I, x6)\n    x10 = toindices(x2)\n    x11 = combine(x10, x9)\n    x12 = fill(I, x8, x11)\n    x13 = argmax(x1, width)\n    x14 = uppermost(x13)\n    x15 = argmax(x1, height)\n    x16 = leftmost(x15)\n    x17 = astuple(x14, x16)\n    x18 = initset(x17)\n    x19 = position(x9, x18)\n    x20 = multiply(x19, x7)\n    x21 = add(x17, x20)\n    x22 = hfrontier(x21)\n    x23 = vfrontier(x21)\n    x24 = combine(x22, x23)\n    O = fill(x12, x3, x24)\n    return O"], [0.8582352748738153, "def solve_4ad0f610(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = chain(palette, trim, x2)\n    x4 = lbind(contained, THREE)\n    x5 = compose(x4, x3)\n    x6 = fork(add, height, width)\n    x7 = compose(decrement, x6)\n    x8 = fork(equality, size, x7)\n    x9 = mfilter(x1, x5)\n    x10 = mfilter(x1, x8)\n    x11 = replace(I, THREE, SIX)\n    x12 = fill(x11, TWO, x9)\n    O = fill(x12, ONE, x10)\n    return O"], [0.8582352748738153, "def solve_676acfd6(I):\n    x1 = objects(I, T, F, T)\n    x2 = rbind(subgrid, I)\n    x3 = chain(palette, trim, x2)\n    x4 = lbind(contained, THREE)\n    x5 = compose(x4, x3)\n    x6 = fork(add, height, width)\n    x7 = compose(decrement, x6)\n    x8 = fork(equality, size, x7)\n    x9 = mfilter(x1, x5)\n    x10 = mfilter(x1, x8)\n    x11 = replace(I, THREE, SIX)\n    x12 = fill(x11, TWO, x9)\n    O = fill(x12, ONE, x10)\n    return O"], [0.858414186390205, "def solve_d0ed3e3d(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [0.8613598319521097, "def solve_be7cab67(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = remove(x2, x1)\n    x4 = normalize(x2)\n    x5 = shape(x2)\n    x6 = halve(x5)\n    x7 = invert(x6)\n    x8 = shift(x4, x7)\n    x9 = sizefilter(x3, ONE)\n    x10 = apply(center, x9)\n    x11 = lbind(shift, x8)\n    x12 = mapply(x11, x10)\n    x13 = paint(I, x12)\n    O = rot180(x13)\n    return O"], [0.8625466344449646, "def solve_0d7588db(I):\n    x1 = partition(I)\n    x2 = argmin(x1, size)\n    x3 = delta(x2)\n    O = fill(I, TWO, x3)\n    return O"], [0.8627265337429545, "def solve_52bcda1e(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = prapply(connect, x2, x2)\n    x4 = rbind(greater, ONE)\n    x5 = compose(x4, size)\n    x6 = sfilter(x3, x5)\n    x7 = fork(either, vline, hline)\n    x8 = mfilter(x6, x7)\n    x9 = fill(I, THREE, x8)\n    x10 = leastcolor(I)\n    O = fill(x9, x10, x2)\n    return O"], [0.8630966423697286, "def solve_ecf3f142(I):\n    x1 = fork(multiply, height, width)\n    x2 = partition(I)\n    x3 = argmax(x2, x1)\n    x4 = remove(x3, x2)\n    x5 = argmax(x4, x1)\n    x6 = other(x4, x5)\n    x7 = palette(I)\n    x8 = lrcorner(x5)\n    x9 = add(x8, UNITY)\n    x10 = llcorner(x5)\n    x11 = add(x10, DOWN_LEFT)\n    x12 = urcorner(x5)\n    x13 = add(x12, UP_RIGHT)\n    x14 = ulcorner(x5)\n    x15 = add(x14, NEG_UNITY)\n    x16 = shoot(x9, UNITY)\n    x17 = shoot(x11, DOWN_LEFT)\n    x18 = shoot(x13, UP_RIGHT)\n    x19 = shoot(x15, NEG_UNITY)\n    x20 = combine(x16, x17)\n    x21 = combine(x18, x19)\n    x22 = combine(x20, x21)\n    x23 = color(x6)\n    O = fill(I, x23, x22)\n    return O"], [0.8631356100874941, "def solve_a03c489d(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = recolor(ZERO, x2)\n    x4 = normalize(x3)\n    x5 = occurrences(I, x4)\n    x6 = toindices(x4)\n    x7 = lbind(shift, x6)\n    x8 = mapply(x7, x5)\n    O = fill(I, x1, x8)\n    return O"], [0.8632787798855505, "def solve_edc28001(I):\n    O = rot270(I)\n    return O"], [0.8632787798855505, "def solve_46b8caba(I):\n    x1 = rot180(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.8634577218981633, "def solve_d749fff7(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [0.8634577218981633, "def solve_ac533e15(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [0.8634577218981633, "def solve_736132e2(I):\n    x1 = mostcolor(I)\n    x2 = palette(I)\n    x3 = remove(x1, x2)\n    x4 = totuple(x3)\n    x5 = first(x4)\n    x6 = last(x4)\n    x7 = ofcolor(I, x5)\n    x8 = backdrop(x7)\n    x9 = ofcolor(I, x6)\n    x10 = backdrop(x9)\n    x11 = intersection(x8, x10)\n    x12 = outbox(x11)\n    O = fill(I, FOUR, x12)\n    return O"], [0.8635921122722895, "def solve_7e0960ce(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, F, T)\n    x3 = lbind(greater, THREE)\n    x4 = compose(x3, size)\n    x5 = sfilter(x2, x4)\n    x6 = mapply(toindices, x5)\n    x7 = fill(I, x1, x6)\n    x8 = objects(x7, T, F, T)\n    x9 = fork(recolor, color, backdrop)\n    x10 = mapply(x9, x8)\n    O = paint(x7, x10)\n    return O"], [0.863678348633302, "def solve_30668c56(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.863678348633302, "def solve_16daba00(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.863678348633302, "def solve_3c888f24(I):\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = delta(x3)\n    O = fill(I, THREE, x4)\n    return O"], [0.863706518437685, "def solve_c31648c7(I):\n    O = dmirror(I)\n    return O"], [0.8637867634430995, "def solve_f6aff4de(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.8637867634430995, "def solve_25b71daa(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.8637867634430995, "def solve_60b18f38(I):\n    x1 = tophalf(I)\n    x2 = numcolors(x1)\n    x3 = equality(x2, ONE)\n    x4 = bottomhalf(I)\n    x5 = numcolors(x4)\n    x6 = equality(x5, ONE)\n    x7 = either(x3, x6)\n    x8 = branch(x7, identity, dmirror)\n    x9 = x8(I)\n    x10 = asobject(x9)\n    x11 = hmirror(x10)\n    x12 = mostcolor(I)\n    x13 = matcher(first, x12)\n    x14 = compose(flip, x13)\n    x15 = sfilter(x11, x14)\n    x16 = paint(x9, x15)\n    O = x8(x16)\n    return O"], [0.8638701955087361, "def solve_ca6a9b87(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.8638701955087361, "def solve_f1c7bbbd(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.8638701955087361, "def solve_0cd3d63d(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.8638701955087361, "def solve_f348a2d6(I):\n    x1 = index(I, ORIGIN)\n    x2 = shape(I)\n    x3 = canvas(x1, x2)\n    x4 = hconcat(I, x3)\n    x5 = objects(x4, F, F, T)\n    x6 = compose(last, centerofmass)\n    x7 = order(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = pair(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = chain(x11, x12, last)\n    x14 = fork(equality, last, x13)\n    x15 = sfilter(x10, x14)\n    x16 = mapply(first, x15)\n    O = fill(I, FOUR, x16)\n    return O"], [0.8638701955087361, "def solve_54436cb3(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_e71f7902(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_b54d0461(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.8638701955087361, "def solve_02888a76(I):\n    x1 = mostcolor(I)\n    x2 = objects(I, T, T, T)\n    x3 = rbind(objects, F)\n    x4 = rbind(x3, F)\n    x5 = rbind(x4, T)\n    x6 = lbind(canvas, x1)\n    x7 = compose(x6, shape)\n    x8 = fork(paint, x7, normalize)\n    x9 = compose(x5, x8)\n    x10 = fork(colorfilter, x9, color)\n    x11 = rbind(shift, RIGHT)\n    x12 = rbind(argmax, rightmost)\n    x13 = compose(x12, x10)\n    x14 = fork(remove, x13, x10)\n    x15 = chain(x11, merge, x14)\n    x16 = rbind(argmax, rightmost)\n    x17 = compose(x16, x10)\n    x18 = fork(combine, x17, x15)\n    x19 = fork(shift, x18, ulcorner)\n    x20 = merge(x2)\n    x21 = fill(I, x1, x20)\n    x22 = mapply(x19, x2)\n    O = paint(x21, x22)\n    return O"], [0.8638701955087361, "def solve_e3d3f20f(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.8638701955087361, "def solve_c83601ce(I):\n    O = replace(I, FOUR, NEG_ONE)\n    return O"], [0.8638701955087361, "def solve_ecdc6445(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.8638701955087361, "def solve_a7d718a6(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.8638701955087361, "def solve_e12b3625(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_cf5f3182(I):\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = astuple(x1, ONE)\n    x8 = astuple(ONE, x2)\n    x9 = decrement(x1)\n    x10 = decrement(x2)\n    x11 = toivec(x10)\n    x12 = tojvec(x9)\n    x13 = crop(I, x11, x8)\n    x14 = crop(I, x12, x7)\n    x15 = asobject(x14)\n    x16 = asobject(x13)\n    x17 = vperiod(x15)\n    x98 = hperiod(x16)\n    x99 = astuple(x17, x98)\n    x10 = lbind(multiply, x10)\n    x11 = neighbors(ORIGIN)\n    x12 = mapply(neighbors, x11)\n    x13 = apply(x10, x12)\n    x14 = lbind(shift, x6)\n    x15 = mapply(x14, x13)\n    O = paint(I, x15)\n    return O"], [0.8638701955087361, "def solve_f492f9a6(I):\n    x1 = switch(I, FIVE, EIGHT)\n    x2 = switch(x1, THREE, FOUR)\n    x3 = switch(x2, EIGHT, NINE)\n    x4 = switch(x3, ONE, FOUR)\n    O = switch(x4, TWO, NINE)\n    return O"], [0.8638701955087361, "def solve_2ef6a3a9(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.8638701955087361, "def solve_26e31701(I):\n    x1 = switch(I, THREE, FOUR)\n    x2 = switch(x1, EIGHT, NINE)\n    x3 = switch(x2, TWO, SIX)\n    O = switch(x3, ONE, FIVE)\n    return O"], [0.8638701955087361, "def solve_f878706b(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638701955087361, "def solve_1a66c75a(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = matcher(color, x4)\n    x6 = sfilter(x1, x5)\n    x7 = merge(x6)\n    x8 = color(x7)\n    x9 = shape(I)\n    x10 = canvas(x8, x9)\n    x11 = hconcat(I, x10)\n    x12 = objects(x11, F, T, T)\n    x13 = first(x12)\n    x14 = box(x13)\n    x15 = rbind(contained, x14)\n    x16 = compose(x15, last)\n    x17 = sfilter(x13, x16)\n    x18 = color(x17)\n    x19 = palette(I)\n    x20 = remove(x8, x19)\n    x21 = other(x20, x18)\n    x22 = rbind(colorcount, x18)\n    x23 = argmin(x12, x22)\n    x24 = apply(ulcorner, x12)\n    x25 = normalize(x23)\n    x26 = matcher(first, x21)\n    x27 = sfilter(x25, x26)\n    x28 = toindices(x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    x31 = ofcolor(I, x21)\n    x32 = difference(x30, x31)\n    O = fill(I, x8, x32)\n    return O"], [0.8638701955087361, "def solve_77930746(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, numcolors)\n    x3 = normalize(x2)\n    x4 = lbind(matcher, first)\n    x5 = compose(x4, mostcolor)\n    x6 = fork(sfilter, identity, x5)\n    x7 = fork(difference, identity, x6)\n    x8 = lbind(rbind, upscale)\n    x9 = interval(ONE, FOUR, ONE)\n    x10 = apply(x8, x9)\n    x11 = lbind(recolor, ZERO)\n    x12 = compose(x11, outbox)\n    x13 = fork(combine, identity, x12)\n    x14 = lbind(occurrences, I)\n    x15 = lbind(rbind, subtract)\n    x16 = lbind(apply, increment)\n    x17 = lbind(lbind, shift)\n    x18 = chain(x15, ulcorner, x7)\n    x19 = chain(x14, x13, x7)\n    x20 = fork(apply, x18, x19)\n    x21 = compose(x16, x20)\n    x22 = fork(mapply, x17, x21)\n    x23 = rapply(x10, x3)\n    x24 = mapply(x22, x23)\n    O = paint(I, x24)\n    return O"], [0.8638701955087361, "def solve_11c7f307(I):\n    x1 = lbind(equality, NINE)\n    x2 = compose(x1, size)\n    x3 = fork(equality, height, width)\n    x4 = fork(both, x2, x3)\n    x5 = objects(I, T, F, F)\n    x6 = sfilter(x5, x4)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = compose(x7, center)\n    x9 = mapply(x8, x6)\n    O = underfill(I, SIX, x9)\n    return O"], [0.8638701955087361, "def solve_ba1de0a8(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.8638701955087361, "def solve_b4252d0c(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.8638701955087361, "def solve_6f480d87(I):\n    x1 = asindices(I)\n    x2 = toobject(x1, I)\n    x3 = mostcolor(x2)\n    x4 = objects(I, T, F, F)\n    x5 = colorfilter(x4, x3)\n    x6 = fork(bordering, toindices, outbox)\n    x7 = compose(flip, x6)\n    x8 = mfilter(x5, x7)\n    O = fill(I, x3, x8)\n    return O"], [0.8638701955087361, "def solve_21c5f80a(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = compose(increment, double)\n    x4 = shoot(ORIGIN, UNITY)\n    x5 = apply(x3, x4)\n    x6 = order(x5, identity)\n    x7 = lbind(contained, ZERO)\n    x8 = sfilter(x2, x7)\n    x9 = lbind(shift, x6)\n    x10 = mapply(x9, x8)\n    O = fill(I, FOUR, x10)\n    return O"], [0.8638701955087361, "def solve_14ef5834(I):\n    x1 = shape(I)\n    x2 = canvas(ZERO, x1)\n    x3 = hconcat(I, x2)\n    x4 = objects(x3, F, F, T)\n    x5 = matcher(color, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = sizefilter(x7, ONE)\n    x9 = merge(x8)\n    O = fill(I, ONE, x9)\n    return O"], [0.8638701955087361, "def solve_0bea6a70(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = shape(I)\n    x4 = maximum(x3)\n    x5 = minimum(x3)\n    x6 = divide(x4, x5)\n    x7 = x2(I, x6)\n    x8 = fork(equality, identity, dmirror)\n    x9 = compose(flip, x8)\n    O = extract(x7, x9)\n    return O"], [0.8638763240862932, "def solve_2ee9819a(I):\n    x1 = objects(I, T, F, T)\n    x2 = mapply(delta, x1)\n    O = fill(I, SEVEN, x2)\n    return O"], [0.8638891638983809, "def solve_c3094d4a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.8638891638983809, "def solve_c178e374(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = fill(I, TWO, x2)\n    return O"], [0.8639438916538609, "def solve_dcaf4aa6(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8639438916538609, "def solve_c118dc2c(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_e37c947e(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8639438916538609, "def solve_4084e9cd(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8639438916538609, "def solve_c52c0925(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_c74814de(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = leastcolor(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmax(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8639438916538609, "def solve_6972c097(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = fill(I, x3, x2)\n    x5 = objects(x4, F, F, T)\n    x6 = argmax(x5, size)\n    x7 = remove(x6, x5)\n    x8 = apply(center, x7)\n    x9 = normalize(x6)\n    x10 = shape(x6)\n    x11 = halve(x10)\n    x12 = invert(x11)\n    x13 = shift(x9, x12)\n    x14 = lbind(shift, x13)\n    x15 = mapply(x14, x8)\n    O = paint(I, x15)\n    return O"], [0.8640253338383225, "def solve_f2764e95(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_0287bf80(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_d786afa4(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_0ddb2b7b(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_4ea083dd(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_57386026(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_ee2265d2(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_14ef9b6a(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_118e7952(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_49bd86c3(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_113147be(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640253338383225, "def solve_0289ef55(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [0.8640827805427497, "def solve_7eb304f9(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = height(x2)\n    x4 = height(I)\n    x5 = interval(ZERO, x4, x3)\n    x6 = lbind(shift, x2)\n    x7 = compose(x6, toivec)\n    x8 = compose(x7, invert)\n    x9 = fork(combine, x7, x8)\n    x10 = mapply(x9, x5)\n    O = paint(I, x10)\n    return O"], [0.8641376097298877, "def solve_18b2110e(I):\n    O = rot180(I)\n    return O"], [0.8641376097298877, "def solve_760714e6(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.8641376097298877, "def solve_d6948f4e(I):\n    O = rot180(I)\n    return O"], [0.8641376097298877, "def solve_8150f32c(I):\n    O = rot180(I)\n    return O"], [0.8641376097298877, "def solve_9241658c(I):\n    O = hmirror(I)\n    return O"], [0.8641376097298877, "def solve_d9c50c15(I):\n    O = rot180(I)\n    return O"], [0.8641376097298877, "def solve_5cc03688(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.8641376097298877, "def solve_f5150224(I):\n    O = rot180(I)\n    return O"], [0.8641376097298877, "def solve_e0c5e458(I):\n    x1 = rot270(I)\n    x2 = rbind(order, identity)\n    x3 = apply(x2, x1)\n    O = rot90(x3)\n    return O"], [0.8641453134548085, "def solve_014bb1fa(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.8641453134548085, "def solve_f66c9b52(I):\n    x1 = palette(I)\n    x2 = remove(ZERO, x1)\n    x3 = lbind(ofcolor, I)\n    x4 = lbind(prapply, connect)\n    x5 = fork(x4, x3, x3)\n    x6 = compose(merge, x5)\n    x7 = fork(recolor, identity, x6)\n    x8 = mapply(x7, x2)\n    O = paint(I, x8)\n    return O"], [0.8641474651177995, "def solve_a4ad214b(I):\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = apply(x12, x1)\n    x14 = dmirror(x1)\n    x15 = apply(x12, x14)\n    x16 = dmirror(x15)\n    x17 = ofcolor(x13, THREE)\n    x18 = ofcolor(x16, THREE)\n    x19 = combine(x17, x18)\n    x20 = shift(x19, UNITY)\n    O = fill(I, THREE, x20)\n    return O"], [0.8642721744821437, "def solve_92d74748(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(shoot, RIGHT)\n    x4 = compose(x3, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(x1, DOWN_LEFT)\n    x9 = initset(x8)\n    x10 = mostcolor(I)\n    x11 = recolor(x10, x9)\n    x12 = objects(x7, T, F, T)\n    x13 = insert(x11, x12)\n    x14 = order(x13, uppermost)\n    x15 = first(x14)\n    x16 = remove(x11, x14)\n    x17 = remove(x15, x14)\n    x18 = compose(lrcorner, first)\n    x19 = compose(lrcorner, last)\n    x20 = fork(connect, x18, x19)\n    x21 = compose(color, first)\n    x22 = fork(recolor, x21, x20)\n    x23 = pair(x16, x17)\n    x24 = mapply(x22, x23)\n    O = underpaint(x7, x24)\n    return O"], [0.8642721744821437, "def solve_49183c77(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = rbind(shoot, RIGHT)\n    x4 = compose(x3, center)\n    x5 = fork(recolor, color, x4)\n    x6 = mapply(x5, x2)\n    x7 = paint(I, x6)\n    x8 = add(x1, DOWN_LEFT)\n    x9 = initset(x8)\n    x10 = mostcolor(I)\n    x11 = recolor(x10, x9)\n    x12 = objects(x7, T, F, T)\n    x13 = insert(x11, x12)\n    x14 = order(x13, uppermost)\n    x15 = first(x14)\n    x16 = remove(x11, x14)\n    x17 = remove(x15, x14)\n    x18 = compose(lrcorner, first)\n    x19 = compose(lrcorner, last)\n    x20 = fork(connect, x18, x19)\n    x21 = compose(color, first)\n    x22 = fork(recolor, x21, x20)\n    x23 = pair(x16, x17)\n    x24 = mapply(x22, x23)\n    O = underpaint(x7, x24)\n    return O"], [0.8642795758479641, "def solve_7fa510ce(I):\n    x1 = frontiers(I)\n    x2 = totuple(x1)\n    x3 = apply(color, x2)\n    x4 = leastcommon(x3)\n    x5 = frontiers(I)\n    x6 = colorfilter(x5, x4)\n    x7 = size(x6)\n    x8 = positive(x7)\n    x9 = branch(x8, dmirror, identity)\n    x10 = ofcolor(I, x4)\n    x11 = ofcolor(I, TWO)\n    x12 = ofcolor(I, ONE)\n    x13 = rbind(gravitate, x10)\n    x14 = compose(x13, initset)\n    x15 = fork(add, identity, x14)\n    x16 = fork(connect, identity, x15)\n    x17 = shape(I)\n    x18 = maximum(x17)\n    x19 = lbind(multiply, x18)\n    x20 = lbind(gravitate, x10)\n    x21 = chain(x19, sign, x20)\n    x22 = compose(x21, initset)\n    x23 = fork(add, identity, x22)\n    x24 = fork(connect, identity, x23)\n    x25 = mapply(x16, x11)\n    x26 = mapply(x24, x12)\n    x27 = fill(I, TWO, x25)\n    O = fill(x27, ONE, x26)\n    return O"], [0.8643386284959661, "def solve_f0160443(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = rbind(shoot, DOWN)\n    x4 = compose(x3, last)\n    x5 = fork(recolor, first, x4)\n    x6 = mapply(x5, x2)\n    O = paint(I, x6)\n    return O"], [0.8644669437834643, "def solve_76dbc30e(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.8644669437834643, "def solve_1337d54c(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x18)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [0.8647049870788205, "def solve_8bda1693(I):\n    x1 = objects(I, T, F, F)\n    x2 = compose(maximum, shape)\n    x3 = order(x1, x2)\n    x4 = first(x3)\n    x5 = last(x3)\n    x6 = color(x4)\n    x7 = color(x5)\n    x8 = equality(x6, x7)\n    x9 = combine(x4, x5)\n    x10 = repeat(x9, ONE)\n    x11 = remove(x4, x3)\n    x12 = remove(x5, x11)\n    x13 = compose(hfrontier, center)\n    x14 = fork(recolor, color, x13)\n    x15 = mapply(x14, x12)\n    O = paint(I, x15)\n    return O"], [0.8652458446503286, "def solve_098a307f(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, FOUR, x6)\n    return O"], [0.8652458446503286, "def solve_ae79e827(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, TWO, x6)\n    return O"], [0.8652458446503286, "def solve_a8d2bd7c(I):\n    x1 = initset(ORIGIN)\n    x2 = recolor(ZERO, x1)\n    x3 = upscale(x2, TWO)\n    x4 = occurrences(I, x3)\n    x5 = lbind(shift, x3)\n    x6 = mapply(x5, x4)\n    O = fill(I, TWO, x6)\n    return O"], [0.8654574970960377, "def solve_5dfb35cb(I):\n    x1 = asobject(I)\n    x2 = matcher(first, ZERO)\n    x3 = compose(flip, x2)\n    x4 = sfilter(x1, x3)\n    x5 = rbind(multiply, THREE)\n    x6 = rbind(divide, THREE)\n    x7 = compose(x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = toindices(x4)\n    x10 = compose(x8, last)\n    x11 = sfilter(x9, x10)\n    O = fill(I, SIX, x11)\n    return O"], [0.8656237858337551, "def solve_b29df95f(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.8656237858337551, "def solve_c5df6a75(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, ONE, x4)\n    return O"], [0.8665497117596809, "def solve_f5a04b82(I):\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = mapply(neighbors, x2)\n    x4 = difference(x3, x2)\n    O = fill(I, NEG_ONE, x4)\n    return O"], [0.8670447986833393, "def solve_618efc47(I):\n    x1 = objects(I, T, F, T)\n    x2 = ofcolor(I, TWO)\n    x3 = argmin(x1, numcolors)\n    x4 = normalize(x3)\n    x5 = occurrences(I, x4)\n    x6 = toindices(x4)\n    x7 = lbind(shift, x6)\n    x8 = mapply(x7, x5)\n    O = fill(I, ONE, x8)\n    return O"], [0.8672110874210567, "def solve_f20dc35f(I):\n    x1 = ofcolor(I, TWO)\n    x2 = mapply(neighbors, x1)\n    O = underfill(I, ONE, x2)\n    return O"], [0.8687415090376716, "def solve_6ce84a7d(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_5b6a6a11(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_06858a4e(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_6cef9a04(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_0d6d5f46(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_0f33f28f(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_e586a6ca(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_ec5d73c7(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8687415090376716, "def solve_118cfe50(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [0.8730313633680904, "def solve_2c080de7(I):\n    x1 = frontiers(I)\n    x2 = matcher(color, ZERO)\n    x3 = extract(x1, x2)\n    x4 = shape(x3)\n    x5 = canvas(ZERO, x4)\n    x6 = hconcat(x5, x3)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, numcolors)\n    x9 = apply(ulcorner, x7)\n    x10 = normalize(x8)\n    x11 = lbind(shift, x10)\n    x12 = mapply(x11, x9)\n    O = paint(I, x12)\n    return O"], [0.8899630205643289, "def solve_e3319c05(I):\n    x1 = replace(I, ZERO, THREE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    O = cmirror(x8)\n    return O"], [0.895840777338116, "def solve_2f7672a5(I):\n    x1 = objects(I, T, F, F)\n    x2 = asindices(I)\n    x3 = box(x2)\n    x4 = toobject(x3, I)\n    x5 = mostcolor(x4)\n    x6 = colorfilter(x1, x5)\n    x7 = rbind(bordering, I)\n    x8 = compose(flip, x7)\n    x9 = mfilter(x6, x8)\n    x10 = fill(I, TWO, x9)\n    O = replace(x10, x5, THREE)\n    return O"], [0.895840777338116, "def solve_a1a15b27(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = lbind(power, outbox)\n    x8 = chain(x7, halve, width)\n    x9 = initset(x8)\n    x10 = lbind(rapply, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = compose(backdrop, x12)\n    x14 = fork(difference, x13, toindices)\n    x15 = mapply(x14, x1)\n    x16 = mostcolor(I)\n    x17 = ofcolor(I, x16)\n    x18 = intersection(x15, x17)\n    O = fill(x6, THREE, x18)\n    return O"], [0.895840777338116, "def solve_ff7854b1(I):\n    x1 = shape(I)\n    x2 = remove(x1, x1)\n    x3 = lbind(colorcount, I)\n    x4 = argmax(x2, x3)\n    x5 = canvas(x4, x1)\n    x6 = colorcount(I, x4)\n    x7 = decrement(x6)\n    x8 = tojvec(x7)\n    x9 = connect(ORIGIN, x8)\n    x10 = fill(x5, TWO, x9)\n    x11 = initset(UNITY)\n    x12 = equality(x6, FOUR)\n    x13 = branch(x12, x11, x9)\n    O = fill(x10, TWO, x13)\n    return O"], [0.895840777338116, "def solve_288cfff0(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = sfilter(x2, square)\n    x4 = difference(x2, x3)\n    x5 = merge(x3)\n    x6 = recolor(THREE, x5)\n    x7 = merge(x4)\n    x8 = recolor(FOUR, x7)\n    x9 = paint(I, x6)\n    O = paint(x9, x8)\n    return O"], [0.8966427298715387, "def solve_5451e371(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.8966427298715387, "def solve_0520f955(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.8966427298715387, "def solve_591788a2(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.8966427298715387, "def solve_a264b1ea(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.8966427298715387, "def solve_72472149(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.8966427298715387, "def solve_87a29689(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [0.8966427298715387, "def solve_195d5ca0(I):\n    x1 = shape(I)\n    x2 = increment(x1)\n    x3 = increment(x2)\n    x4 = canvas(ZERO, x3)\n    x5 = asobject(I)\n    x6 = shift(x5, UNITY)\n    x7 = shift(x6, LEFT)\n    x8 = paint(x4, x7)\n    x9 = shift(x6, RIGHT)\n    x10 = paint(x8, x9)\n    x11 = shift(x6, UP)\n    x12 = paint(x10, x11)\n    x13 = shift(x6, DOWN)\n    x14 = paint(x12, x13)\n    O = paint(x14, x6)\n    return O"], [1.0, "def solve_d9a5e169(I):\n    x1 = astuple(identity, dmirror)\n    x2 = astuple(cmirror, hmirror)\n    x3 = combine(x1, x2)\n    x4 = chain(lowermost, merge, fgpartition)\n    x5 = rbind(rapply, I)\n    x6 = lbind(compose, x4)\n    x7 = compose(initset, x6)\n    x8 = chain(first, x5, x7)\n    x9 = matcher(x8, ZERO)\n    x10 = extract(x3, x9)\n    x11 = x10(I)\n    x12 = objects(x11, T, F, T)\n    x13 = height(x11)\n    x14 = interval(ZERO, x13, TWO)\n    x15 = height(x11)\n    x16 = interval(ONE, x15, TWO)\n    x17 = rbind(apply, x14)\n    x18 = lbind(rbind, astuple)\n    x19 = chain(x17, x18, last)\n    x20 = rbind(apply, x16)\n    x21 = lbind(rbind, astuple)\n    x22 = compose(increment, last)\n    x23 = chain(x20, x21, x22)\n    x24 = rbind(apply, x16)\n    x25 = lbind(rbind, astuple)\n    x26 = compose(decrement, last)\n    x27 = chain(x24, x25, x26)\n    x28 = fork(combine, x19, x23)\n    x29 = fork(combine, x28, x27)\n    x30 = compose(x29, center)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(x11, x32)\n    O = x10(x33)\n    return O"], [1.0, "def solve_1ef9b4e0(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_289be062(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_9e09be27(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_68de77ff(I):\n    x1 = remove(I, x1)\n    x2 = merge(x1)\n    x3 = cover(I, x2)\n    x4 = mapply(daeighbors, x1)\n    x5 = mapply(neighbors, x1)\n    x6 = fill(x3, ONE, x4)\n    O = fill(x6, TWO, x5)\n    return O"], [1.0, "def solve_18fe9976(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_34234cf4(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = rbind(toobject, I)\n    x5 = chain(leastcolor, x4, delta)\n    x6 = rbind(shift, UP)\n    x7 = fork(connect, ulcorner, urcorner)\n    x8 = compose(x6, x7)\n    x9 = rbind(shift, DOWN)\n    x10 = fork(connect, llcorner, lrcorner)\n    x11 = compose(x9, x10)\n    x12 = fork(astuple, x8, x11)\n    x13 = lbind(rbind, manhattan)\n    x14 = compose(x13, delta)\n    x15 = fork(argmin, x12, x14)\n    x16 = fork(combine, delta, x15)\n    x17 = fork(recolor, x5, x16)\n    x18 = mapply(x17, x3)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_2110d98f(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_86b137f8(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_f3fe2460(I):\n    x1 = asindices(I)\n    x2 = shape(I)\n    x3 = halve(x2)\n    x4 = rbind(greater, x3)\n    x5 = compose(x4, size)\n    x6 = sfilter(x1, x5)\n    x7 = compose(last, last)\n    x8 = order(x6, x7)\n    x9 = argmax(x8, size)\n    x10 = mostcolor(x9)\n    x11 = palette(I)\n    x12 = remove(x10, x11)\n    x13 = lbind(colorcount, I)\n    x14 = argmin(x12, x13)\n    x15 = mostcolor(I)\n    x16 = ofcolor(I, x14)\n    x17 = ofcolor(I, x18)\n    x18 = combine(x16, x17)\n    x19 = mapply(neighbors, x18)\n    x20 = difference(x19, x18)\n    x21 = toobject(x20, I)\n    x22 = leastcolor(x21)\n    x23 = toindices(x21)\n    x24 = ofcolor(I, x22)\n    x25 = ofcolor(I, x23)\n    x26 = neighbors(ORIGIN)\n    x27 = mapply(neighbors, x26)\n    x28 = sfilter(x24, x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x22)\n    O = fill(I, x11, x30)\n    return O"], [1.0, "def solve_648b0ca4(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_40d7f8da(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = Feca(x2)\n    x4 = shape(I)\n    x5 = canvas(ZERO, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = power(increment, FIVE)\n    x9 = lbind(remove, FIVE)\n    x10 = lbind(remove, ZERO)\n    x11 = chain(x9, x10, palette)\n    x12 = chain(x8, first, x11)\n    x13 = fork(recolor, x12, toindices)\n    x14 = mapply(x13, x7)\n    O = paint(I, x14)\n    return O"], [1.0, "def solve_529cc78d(I):\n    x1 = lbind(rbind, sfilter)\n    x2 = lbind(compose, flip)\n    x3 = lbind(matcher, first)\n    x4 = chain(x3, x1, x2)\n    x5 = lbind(paint, I)\n    x6 = compose(last, last)\n    x7 = chain(decrement, x5, x6)\n    x8 = fork(equality, identity, x7)\n    x9 = toindices(xEG029493)\n    x10 = compose(x8, last)\n    x11 = sfilter(x9, x10)\n    O = fill(I, ZERO, x11)\n    return O"], [1.0, "def solve_3a99a165(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    O = rot68b190(x2)\n    return O"], [1.0, "def solve_087b3361(I):\n    x1 = replace(I, FIVE, ZERO)\n    x2 = objects(x1, T, F, T)\n    x3 = first(x2)\n    x4 = shift(x3, DOWN)\n    x5 = fill(x1, THREE, x3)\n    x6 = paint(x5, x4)\n    x7 = uppermost(x4)\n    x8 = leftmost(x4)\n    x9 = subtract(x8, TEN)\n    x10 = add(x8, TEN)\n    x11 = interval(x9, x10, TWO)\n    x12 = lbind(greater, x7)\n    x13 = compose(x12, first)\n    x14 = rbind(contained, x11)\n    x15 = compose(x14, last)\n    x16 = sfilter(x1, x13)\n    x17 = sfilter(x16, x15)\n    O = fill(x6, FOUR, x17)\n    return O"], [1.0, "def solve_1ef1a851(I):\n    x1 = ofcolor(I, ONE)\n    x2 =neighbors(UNITY)\n    x3 = initset(UNITY)\n    x4 = recolor(ONE, x3)\n    x5 = upscale(x4, THREE)\n    x6 = toindices(x5)\n    x7 = lrcorner(x5)\n    x8 = ulcorner(x5)\n    x9 = rbind(contained, x8)\n    x10 = compose(x9, portrait)\n    x11 = sfilter(x6, x10)\n    x12 = merge(x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, ONE)\n    x18 = ulcorner(x5)\n    x19 = subgrid(x18, x16)\n    x20 = branch(x19, identity, height)\n    x21 = x20(x16)\n    x22 = subtract(x21, TWO)\n    x23 = multiply(x22, x13)\n    x24 = add(x23, x8)\n    x25 = repeat(x24, ONE)\n    x26 = x15(x25)\n    x27 = ofcolor(x26, ONE)\n    x28 = subgrid(x27, x26)\n    x29 = interval(ZERO, x28, ONE)\n    x30 = apply(x15, x29)\n    x31 = initset(x30)\n    x32 = insert(x77, x31)\n    x33 = backdrop(x32)\n    x34 = cover(x16, x33)\n    x35 = dmirror(x34)\n    x36 = x15(x35)\n    x37 = shift(x34, x36)\n    x38 = lbind(shift, x37)\n    x39 = mapply(x38, x30)\n    O = paint(x34, x39)\n    return O"], [1.0, "def solve_751d4a10(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = equality(x2, FOUR)\n    x4 = branch(x3, leftmost, RIGHT)\n    x5 = x4(x1)\n    x6 = interval(ONE, FIVE, ONE)\n    x7 = lbind(multiply, x5)\n    x8 = apply(x7, x6)\n    x9 = repeat(x8, ONE)\n    x10 = combine(x7, x9)\n    x11 = apply(x7, x10)\n    x12 = extract(x11, last)\n    x13 = first(x12)\n    x14 = last(x12)\n    x15 = subgrid(x13, I)\n    x16 = rot90(x15)\n    x17 = rot180(x15)\n    x18 = rot270(x17)\n    x19 = hconcat(x16, x14)\n    x20 = hconcat(x18, x16)\n    x21 = vconcat(x19, x20)\n    x22 = vconcat(x21, x21)\n    x23 = asobject(x22)\n    x24 = rot270(x23)\n    x25 = vconcat(x24, x23)\n    x26 = vconcat(x25, x24)\n    O = downscale(x26, THREE)\n    return O"], [1.0, "def solve_9d5fddf4(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_f3892808(I):\n    x1 = asindices(I)\n    x2 = toobject(x1, I)\n    x3 = mostcolor(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(chain, size)\n    x7 = rbind(x6, toindices)\n    x8 = lbind(lbind, contained)\n    x9 = lbind(ofcolor, I)\n    x10 = chain(x9, x7, x7)\n    x11 = lbind(matcher, x10)\n    x12 = compose(x11, ZERO)\n    x13 = chain(flip, x12, x10)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(x15, x10)\n    x17 = palette(I)\n    x18 = remove(x3, x17)\n    x19 = lbind(colorcount, I)\n    x20 = argmin(x18, x19)\n    x21 = x20(x64)\n    x22 = x20(x6)\n    x23 = x20(x4)\n    x24 = x20(x16)\n    x25 = compose(last, first)\n    x26 = compose(last, last)\n    x27 = fork(either, x25, x26)\n    x28 = compose(initset, x12)\n    x29 = compose(colorcount, x28)\n    x30 = fork(equality, x29, x27)\n    x31 = sfilter(x28, x30)\n    x32 = ofcolor(I, x21)\n    x33 = difference(x32, x31)\n    x34 = mapply(neighbors, x33)\n    x35 = mapply(neighbors, x34)\n    x36 = colorfilter(x31, x21)\n    x37 = fill(I, x20, x36)\n    O = fill(x37, x20, x25)\n    return O"], [1.0, "def solve_369647e5(I):\n    x1 = lbind(contained, THREE)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, THREE)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(invert, size)\n    x9 = order(x3, x8)\n    x10 = apply(normalize, x9)\n    x11 = size(x10)\n    x12 = interval(ZERO, x11, ONE)\n    x13 = apply(toivec, x12)\n    x14 = mpapply(shift, x10, x13)\n    x15 = merge(x14)\n    x16 = rot90(x15)\n    x17 = shape(x15)\n    x18 = canvas(ZERO, x17)\n    x19 = paint(x18, x16)\n    O = rot270(x19)\n    return O"], [1.0, "def solve_7a641a60(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_8b56ddca(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_1e027ee9(I):\n    x1 = frontiers(I)\n    x2 = matcher(identity, ZERO)\n    x3 = rbind(sfilter, x2)\n    x4 = compose(size, x3)\n    x5 = matcher(x4, ONE)\n    x6 = asindices(I)\n    x7 = lrcorner(x6)\n    x8 = add(UNITY, x7)\n    x9 = initset(x8)\n    x10 = fill(I, ZERO, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = apply(x11, x10)\n    x14 = apply(x12, x10)\n    x15 = contained(x13, x14)\n    x16 = width(I)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = compose(tojvec,00000)\n    x19 = height(I)\n    x20 = decrement(x19)\n    x21 = lbind(astuple, x20)\n    x22 = apply(x21, x17)\n    x23 = astuple(x6, x5)\n    x24 = canvas(ZERO, x23)\n    x25 = asindices(x24)\n    x26 = box(x25)\n    x27 = fill(x24, EIGHT, x26)\n    x28 = lbind(shift, x25)\n    x29 = mapply(x28, x26)\n    O = paint(x27, x29)\n    return O"], [1.0, "def solve_ad9dbd38(I):\n    x1 = lbind(ofcolor, I)\n    x2 = lbind(mapply, neighbors)\n    x3 = compose(x2, x1)\n    x4 = fork(intersection, x1, x3)\n    x5 = compose(size, x4)\n    x6 = palette(I)\n    x7 = matcher(x5, ZERO)\n    x8 = sfilter(x6, x7)\n    x9 = totuple(x8)\n    x10 = first(x9)\n    x11 = last(x9)\n    x12 = ofcolor(I, x10)\n    x13 = mapply(neighbors, x12)\n    x14 = toobject(x13, I)\n    x15 = mostcolor(x14)\n    x16 = ofcolor(I, x11)\n    x17 = mapply(neighbors, x16)\n    x18 = toobject(x17, I)\n    x19 = mostcolor(x18)\n    x20 = rbind(shoot, UNITY)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = fork(combine, x20, x21)\n    x23 = rbind(shoot, UP_RIGHT)\n    x24 = rbind(shoot, DOWN_LEFT)\n    x25 = fork(combine, x23, x24)\n    x26 = fork(combine, x22, x25)\n    x27 = ofcolor(I, x11)\n    x28 = ofcolor(I, x10)\n    x29 = combine(x27, x28)\n    x30 = mapply(x26, x29)\n    x31 = ofcolor(I, x15)\n    x32 = intersection(x31, x30)\n    x33 = ofcolor(I, x19)\n    x34 = intersection(x33, x30)\n    x35 = fill(I, x10, x32)\n    O = fill(x35, x11, x34)\n    return O"], [1.0, "def solve_2ffdd91a(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = toobject(x1, I)\n    x3 = mostcolor(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = order(x5, identity)\n    x7 = first(x6)\n    x8 = last(x6)\n    x9 = ofcolor(I, x7)\n    x10 = ofcolor(I, x8)\n    x11 = switch(I, x9, x10)\n    x12 = objects(x11, T, T, T)\n    x13 = colorfilter(x12, x7)\n    x14 = rbind(adjacent, x13)\n    x15 = mfilter(x14, vline)\n    x16 = mfilter(x14, hline)\n    x17 = size(x15)\n    x18 = size(x16)\n    x19 = greater(x17, x18)\n    x20 = branch(x19, x18, x15)\n    O = canvas(x20, UNITY)\n    return O"], [1.0, "def solve_1b0b411a(I):\n    x1 = rbind(toobject, I)\n    x2 = rbind(colorcount, ZERO)\n    x3 = chain(x2, x1, dneighbors)\n    x4 = matcher(x3, ONE)\n    x5 = astuple(extract, x4)\n    x6 = astuple(insert, x5)\n    x7 = astuple(ONE, x6)\n    x8 = canvas(ZERO, x7)\n    x9 = asindices(x8)\n    x10 = shift(x9, UNITY)\n    x11 = paint(x8, x10)\n    x12 = ofcolor(x11, ZERO)\n    x13 = ulcorner(x12)\n    x14 = shoot(x13, NEG_UNITY)\n    x15 = shoot(x13, UNITY)\n    x16 = shoot(x13, DOWN_LEFT)\n    x17 = shoot(x13, UP_RIGHT)\n    x18 = combine(x14, x16)\n    x19 = combine(x18, x17)\n    x20 = combine(x18, x18)\n    x21 = combine(x19, x20)\n    O = fill(x11, THREE, x21)\n    return O"], [1.0, "def solve_61a74e3b(I):\n    x1 = shape(I)\n    x2 = subgrid(x1, I)\n    x3 = index(I, ORIGIN)\n    x4 = decrerecolor(x2, x3)\n    x5 = hmirror(x4)\n    x6 = vmirror(x4)\n    x7 = objects(x6, T, F, F)\n    x8 = astuple(x5, x6)\n    x9 = canvas(x3, x8)\n    x10 = hmirror(x9)\n    x11 = vmirror(x9)\n    x12 = objects(x10, T, F, T)\n    x13 = merge(x12)\n    x14 = paint(x9, x13)\n    x15 = astuple(x11, x10)\n    x16 = astuple(x13, x15)\n    x17 = replace(x14, x9, x3)\n    x18 = fill(x17, FOUR, x16)\n    x19 = merge(x12)\n    x20 = cover(x18, x19)\n    x21 = downscale(x20, THREE)\n    x22 = crop(x21, ORIGIN, x7)\n    O = downscale(x21, TWO)\n    return O"], [1.0, "def solve_6f307036(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_05c40ee6(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_19a67544(I):\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, size)\n    x3 = astuple(x2, x2)\n    x4 = vmirror(x2)\n    x5 = hmirror(x2)\n    x6 = combine(x4, x5)\n    x7 = merge(x6)\n    x8 = toindices(x7)\n    x9 = rbind(contained, x8)\n    x10 = compose(x9, first)\n    x11 = sfilter(x6, x10)\n    x12 = upscale(x11, TWO)\n    x13 = ofcolor(I, FOUR)\n    x14 = extract(x13, x12)\n    x15 = ulcorner(x14)\n    x16 = subgrid(x14, I)\n    x17 = trim(x16)\n    x18 = asobject(x17)\n    x19 = shift(x18, UNITY)\n    x20 = paint(I, x19)\n    x21 = subgrid(x1, x20)\n    x22 = vmirror(x21)\n    x23 = hmirror(x21)\n    x24 = connect(x13, x23)\n    x25 = apply(dmirror, x24)\n    x26 = mapply(cdece, x25)\n    O = paint(x21, x26)\n    return O"], [1.0, "def solve_5c588e1a(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_92cf5840(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, ZERO)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_e892207c(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = rbind(toobject, I)\n    x5 = chain(leastcolor, x4, delta)\n    x6 = rbind(shift, UP)\n    x7 = fork(connect, ulcorner, urcorner)\n    x8 = compose(x6, x7)\n    x9 = rbind(shift, DOWN)\n    x10 = fork(connect, llcorner, lrcorner)\n    x11 = compose(x9, x10)\n    x12 = fork(astuple, x8, x11)\n    x13 = lbind(rbind, manhattan)\n    x14 = compose(x13, delta)\n    x15 = fork(argmin, x12, x14)\n    x16 = fork(combine, delta, x15)\n    x17 = fork(recolor, x5, x16)\n    x18 = mapply(x17, x3)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_7d1e61c4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_5cd2b1de(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_ea333ae4(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = dmirror(x1)\n    x3 = papply(pair, x1, x2)\n    x4 = lbind(apply, maximum)\n    x5 = apply(x4, x3)\n    x6 = cmirror(x5)\n    x7 = papply(pair, x5, x6)\n    x8 = apply(x4, x7)\n    x9 = hmirror(x8)\n    x10 = papply(pair, x8, x9)\n    x11 = apply(x4, x10)\n    x12 = vmirror(x11)\n    x13 = papply(pair, x12, x11)\n    x14 = apply(x4, x13)\n    x15 = ofcolor(I, FOUR)\n    x16 = subgrid(x15, x14)\n    x17 = apply(x4, x15)\n    x18 = lbind(shift, x16)\n    x19 = mapply(x18, x17)\n    O = fill(x16, ZERO, x19)\n    return O"], [1.0, "def solve_a6e03b10(I):\n    x1 = replace(I, FOUR, NEG_ONE)\n    x2 = rot90(x1)\n    x3 = rot180(x1)\n    x4 = rot270(x1)\n    x5 = hconcat(x2, x1)\n    x6 = hconcat(x3, x1)\n    x7 = vconcat(x5, x6)\n    x8 = vconcat(x7, x6)\n    O = x9(x8)\n    return O"], [1.0, "def solve_5f4ac0bc(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    O = upscale(I, x2)\n    return O"], [1.0, "def solve_4839ff05(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_f1860e60(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_60455e17(I):\n    x1 = asindices(I)\n    x2 = corners(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = matcher(first, x4)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x1, x6)\n    x8 = difference(x1, x7)\n    x9 = toobject(x8, I)\n    x10 = apply(initset, x9)\n    x11 = rbind(shoot, UNITY)\n    x12 = compose(x11, ulcorner)\n    x13 = fork(combine, vfrontier, hfrontier)\n    x14 = compose(x13, x12)\n    x15 = fork(shift, identity, x14)\n    x16 = mapply(x15, x5)\n    O = paint(I, x16)\n    return O"], [1.0, "def solve_67a86756(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_a7bf3ff1(I):\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, dmirror)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, cmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, hmirror)\n    x13 = rbind(shift, ZERO_BY_TWO)\n    x14 = compose(x13, vmirror)\n    x15 = lbind(fork, paint)\n    x16 = lbind(x15, identity)\n    x17 = lbind(compose, x8)\n    x18 = chain(x16, x17, x6)\n    x19 = lbind(compose, x10)\n    x20 = chain(x16, x19, x6)\n    x21 = lbind(compose, x12)\n    x22 = chain(x16, x21, x6)\n    x23 = lbind(compose, x14)\n    x24 = chain(x16, x23, x6)\n    x25 = rbind(rapply, I)\n    x26 = chain(first, x25, initset)\n    x27 = fork(compose, x24, x22)\n    x28 = fork(compose, x20, x15)\n    x29 = fork(compose, x27, x28)\n    x30 = compose(x26, x29)\n    x31 = palette(I)\n    x32 = fork(equality, identity, dmirror)\n    x33 = compose(x32, x30)\n    x34 = argmax(x31, x33)\n    O = x30(x34)\n    return O"], [1.0, "def solve_33fbf2ee(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_7139a5a0(I):\n    x1 = lbind(I, THREE)\n    x2 = compose(positive, size)\n    x3 = rbind(s000, ZERO)\n    x4 = compose(x2, x3)\n    x5 = fork(add, first, x4)\n    x6 = compose(invert, x5)\n    x7 = fork(shoot, identity, x6)\n    x8 = fork(difference, toindices, x7)\n    x9 = chain(decrement, size, x8)\n    x10 = fork(equality, toindices, x9)\n    x11 = fork(shoot, ZERO, DOWN_LEFT)\n    x12 = chain(flip, x10, x11)\n    x13 = sfilter(x1, x12)\n    x14 = argmax(x13, x9)\n    x15 = center(x14)\n    x16 = outbox(x14)\n    x17 = ulcorner(x16)\n    x18 = subgrid(x14, I)\n    x19 = hmirror(x18)\n    x20 = lbind(shift, x19)\n    x21 = fgpartition(x19)\n    x22 = merge(x21)\n    x23 = cover(x19, x22)\n    x24 = shift(x23, x5)\n    x25 = paint(x23, x24)\n    O = vmirror(x25)\n    return O"], [1.0, "def solve_18fefce7(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_674593bf(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_f9a49cf6(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_e21fe008(I):\n    x1 = fgpartition(I)\n    x2 = compose(dneighbors, center)\n    x3 = fork(difference, backdrop, x2)\n    x4 = fork(equality, toindices, x3)\n    x5 = matcher(size, FIVE)\n    x6 = fork(both, x4, x5)\n    x7 = extract(x1, x6)\n    x8 = color(x7)\n    x9 = merge(x1)\n    x10 = compose(hmirror, vmirror)\n    x11 = initset(x10)\n    x12 = insert(vmirror, x11)\n    x13 = insert(hmirror, x12)\n    x14 = rapply(x13, x9)\n    x15 = ulcorner(x7)\n    x16 = lbind(subtract, x15)\n    x17 = matcher(first, x8)\n    x18 = rbind(sfilter, x17)\n    x19 = chain(x16, ulcorner, x18)\n    x20 = fork(shift, identity, x19)\n    x21 = mapply(x20, x14)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_8e0e70b0(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_40abf5b3(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_e9ea88c1(I):\n    x1 = shape(I)\n    x2 = objects(I, T, F, T)\n    x3 = fork(multiply, height, width)\n    x4 = argmax(x2, x3)\n    x5 = mostcolor(x4)\n    x6 = canvas(x5, x1)\n    x7 = palette(x6)\n    x8 = remove(x5, x7)\n    x9 = other(x8, x8)\n    x10 = ofcolor(I, x4)\n    x11 = ofcolor(I, x9)\n    x12 = apply(first, x10)\n    x13 = compose(first, last)\n    x14 = totuple(x12)\n    x15 = apply(x13, x14)\n    x16 = asobject(x15)\n    x17 = x13(x16)\n    x18 = x13(x11)\n    x19 = ulcorner(x16)\n    x20 = increment(x19)\n    x21 = rbind(subtract, x20)\n    x22 = toindices(x16)\n    x23 = apply(x21, x22)\n    x24 = lbind(shift, x17)\n    x25 = mapply(x24, x23)\n    O = fill(I, x9, x25)\n    return O"], [1.0, "def solve_a424d533(I):\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = mostcolor(I)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, T, T)\n    x8 = argmin(x7, numcolors)\n    x9 = mostcolor(x8)\n    x10 = palette(x8)\n    x11 = remove(x9, x10)\n    x12 = other(x11, x12)\n    x13 = ofcolor(x8, x12)\n    x14 = vmirror(x13)\n    x15 = hmirror(x13)\n    x16 = width(x8)\n    x17 = ulcorner(x8)\n    x18 = lbind(subtract, x17)\n    x19 = chain(positive, x18, last)\n    x20 = lbind(shift, x8)\n    x21 = rbind(multiply, x16)\n    x22 = chain(x19, x20, x21)\n    x23 =sfilter(x13, x22)\n    x24 = maximum(x23)\n    x25 = dmirror(x24)\n    x26 = objects(x25, T, F, T)\n    x27 = mapply(x26, x26)\n    x28 = astuple(x24, x27)\n    x29 = astuple(x24, x27)\n    x30 = canvas(x9, x29)\n    x31 = vmirror(x30)\n    x32 = ofcolor(x31, x12)\n    x33 = initset(x40)\n    x34 = rbind(manhattan, x33)\n    x35 = compose(x34, initset)\n    x36 = argmin(x32, x35)\n    x37 = x30(x36)\n    O = paint(x31, x37)\n    return O"], [1.0, "def solve_ef7ec8c6(I):\n    x1 = ofcolor(I, ZERO)\n    x2 = recolor(ZERO, x1)\n    x3 = lbind(shift, x2)\n    x4 = height(I)\n    x5 = rbind(multiply, x4)\n    x6 = apply(x5, x3)\n    x7 = mapply(x6, x2)\n    O = fill(I, EIGHT, x7)\n    return O"], [1.0, "def solve_44dab636(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_bd33b779(I):\n    x1 = compose(positive, size)\n    x2 = rbind(sfilter, hline)\n    x3 = chain(x1, x2, frontiers)\n    x4 = chain(size, dedupe, first)\n    x5 = chain(size, dedupe, last)\n    x6 = fork(greater, x4, x5)\n    x7 = fork(both, x3, x6)\n    x8 = astuple(identity, rot90)\n    x9 = astuple(rot180, rot270)\n    x10 = combine(x8, x9)\n    x11 = astuple(identity, rot270)\n    x12 = astuple(rot180, rot90)\n    x13 = combine(x11, x12)\n    x14 = pair(x10, x13)\n    x15 = rbind(rapply, I)\n    x16(compose, initset, first)\n    x17 = compose(first, x16)\n    x18 = chain(size, x15, x17)\n    x19 = mostcolor(I)\n    x20 =fixmax(x14, x18)\n    x21 = matcher(x18, x20)\n    x22 = compose(flip, x21)\n    x23 = fork(both, x21, x22)\n    x24 = extract(x19, x23)\n    x25 = itastuple(x24, x22)\n    x26 = delta(x25)\n    x27 = fill(I, x19, x26)\n    x28 = compose(size, x22)\n    x29 = apply(x28, x25)\n    x30 = asindices(x27)\n    x31 = ofcolor(x27, x19)\n    x32 = difference(x30, x31)\n    x33 = fill(x27,valmax, x32)\n    x34 = lbind(shift, x28)\n    x35 = mapply(x34, x33)\n    O = paint(x33, x35)\n    return O"], [1.0, "def solve_3c58e97f(I):\n    x1 =8888104991\n    x2 = astuple(ONE, THREE)\n    x3 = size(x1)\n    x4 = decrement(x3)\n    x5 = astuple(TWO, x4)\n    x6 = canvas(ZERO, x5)\n    x7 = tojvec(x4)\n    x8 = crop(x6, x7, x4)\n    x9 = hmirror(x8)\n    x10 = objects(x9, T, F, T)\n    x11 = colorfilter(x10, TWO)\n    x12 = size(x11)\n    x13 = interval(ZERO, x5, ONE)\n    x14 = pair(x13, x11)\n    x15 = compose(invert, first)\n    x16 = power(outbox, x15)\n    x17 = fork(equality, identity, x16)\n    x18 = compose(x17, last)\n    x19 = sfilter(x14, x18)\n    x20 = totuple(x19)\n    x21 = apply(color, x20)\n    x22 = dedupe(x21)\n    x23 = size(x22)\n    x24 = equality(x23, ONE)\n    x25 = decrement(x24)\n    x26 = apply(decrement, x25)\n    x27 = height(x22)\n    x28 = maximum(x22)\n    x29 = equality(x27, ZERO)\n    x30 = branch(x28, x26, x29)\n    x31 = apply(x30, x22)\n    x32 = lbind(repeat, x306)\n    x33 = apply(x32, x31)\n    O = xconcat(x22, x33)\n    return O"], [1.0, "def solve_60ad08a0(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = merge(x1)\n    x5 = fill(I, NEG_ONE, x4)\n    x6 = shape(I)\n    x7 = canvas(NEG_ONE, x6)\n    x8 = hconcat(x5, x7)\n    x9 = objects(x8, F, F, T)\n    x10 = rbind(other, x3)\n    x11 = compose(x10, palette)\n    x12 = fork(astuple, x11, ulcorner)\n    x13 = apply(x12, x9)\n    x14 = merge(x9)\n    x15 = fill(I, x3, x14)\n    x16 = paint(x15, x13)\n    O = compress(x16)\n    return O"], [1.0, "def solve_628fd0c9(I):\n    x1 = trim(I)\n    x2 = asobject(x1)\n    x3 = shift(x2, UNITY)\n    x4 = apply(initset, x3)\n    x5 = toindices(x3)\n    x6 = asindices(I)\n    x7 = corners(x6)\n    x8 = combine(x5, x7)\n    x9 = fill(I, NEG_ONE, x8)\n    x10 = fgpartition(x9)\n    x11 = asindices(I)\n    x12 = corners(x11)\n    x13 = toobject(x12, I)\n    x14 = combine(x3, x13)\n    x15 = mostcolor(x14)\n    x16 = fill(x9, x15, x8)\n    x17 = apply(color, x10)\n    x18 = rbind(multiply, THREE)\n    x19 = rbind(divide, THREE)\n    x20 = chain(x18, x19, last)\n    x21 = initset(x15)\n    x22 = insert(x65, x21)\n    x23 = backdrop(x22)\n    x24 = lbind(shift, x23)\n    x25 = mapply(x24, x4)\n    O = paint(x16, x25)\n    return O"], [1.0, "def solve_1b9d5a7e(I):\n    x1 = portrait(I)\n    x2 = branch(x1, vsplit, hsplit)\n    x3 = x2(I, TWO)\n    x4 = first(x3)\n    x5 = last(x3)\n    x6 = fgpartition(x4)\n    x7 = merge(x6)\n    x8 = difference(x7, x5)\n    x9 = merge(x8)\n    x10 = color(x4)\n    x11 = fill(x4, x10, x9)\n    x12 = fill(x11, TWO, x5)\n    x13 = replace(x12, ZERO, EIGHT)\n    x14 = dmirror(x13)\n    x15 = papply(pair, x13, x14)\n    x16 = lbind(apply, maximum)\n    x17 = apply(x16, x15)\n    x18 = cmirror(x17)\n    x19 = papply(pair, x17, x18)\n    x20 = apply(x16, x19)\n    x21 = papply(pair, x16, x20)\n    x22 = apply(x16, x21)\n    x23 = papply(pair, x22, x17)\n    x24 = papply(pair, x23, x23)\n    x25 = compose(increment, x24)\n    x26 = lbind(apply, x25)\n    x27 = lbind(colorfilter, x17)\n    x28 = chain(x26, x27, last)\n    x29 = fork(recolor, first, x28)\n    x30 = mapply(x29, x15)\n    O = paint(x3, x30)\n    return O"], [1.0, "def solve_e3275e45(I):\n    x1 = llcorner(I)\n    x2 = shoot(x1,ORIGIN)\n    x3 = equality(x2, ZERO)\n    x4 = branch(x3, x2, x2)\n    x5 = shoot(x4, DOWN)\n    x6 = combine(x2, x5)\n    O = fill(I, ONE, x6)\n    return O"], [1.0, "def solve_0b4e4cce(I):\n    x1 = switch(I, EIGHT, TWO)\n    x2 = switch(x1, TWO, ZERO)\n    x3 = switch(x2, EIGHT, ONE)\n    x4 = switch(x3, EIGHT, FOUR)\n    x5 = switch(x4, EIGHT, FIVE)\n    x6 = switch(x5, TWO, FOUR)\n    x7 = switch(x6, EIGHT, ONE)\n    x8 = switch(x7, x2, FOUR)\n    x9 = fork(connect, ulcorner, urcorner)\n    x10 = fork(connect, ulcorner, llcorner)\n    x11 = fork(combine, x9, x10)\n    x12 = x11(x1)\n    x13 = x11(x2)\n    x14 = fork(recolor, color, x12)\n    x15 = fork(recolor, color, x13)\n    x16 = fork(combine, x14, x15)\n    x17 = x16(x2)\n    x18 = paint(x3, x17)\n    O = paint(x18, x2)\n    return O"], [1.0, "def solve_7abf562f(I):\n    x1 = lbind(fork, connect)\n    x2 = lbind(matcher, first)\n    x3 = compose(x2, leastcolor)\n    x4 = lbind(matcher, first)\n    x5 = compose(x4, mostcolor)\n    x6 = fork(extract, identity, x3)\n    x7 = compose(last, x6)\n    x8 = compose(dneighbors, x7)\n    x9 = lbind(apply, last)\n    x10 = fork(sfilter, identity, x5)\n    x11 = compose(x9, x10)\n    x12 = fork(difference, x8, x11)\n    x13 = compose(first, x12)\n    x14 = fork(subtract, x7, x13)\n    x15 = fork(shoot, x7, x14)\n    x16 = fork(recolor, leastcolor, x15)\n    x17 = mapply(x16, x1)\n    O = underpaint(I, x17)\n    return O"], [1.0, "def solve_fd571042(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_9f10e83b(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_cec3b342(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_e20e0b07(I):\n    x1 = mostcolor(I)\n    x2 = asobject(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = partition(I)\n    x7 = fork(multiply, height, width)\n    x8 = fork(equality, size, x7)\n    x9 = sfilter(x6, x8)\n    x10 = argmax(x9, size)\n    x11 = difference(x5, x10)\n    x12 = apply(initset, x11)\n    x13 = rbind(hmatching, x10)\n    x14 = rbind(vmatching, x10)\n    x15 = fork(either, x13, x14)\n    x16 = sfilter(x12, x15)\n    x17 = rbind(gravitate, x10)\n    x18 = fork(add, center, x17)\n    x19 = fork(connect, center, x18)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x16)\n    O = paint(I, x21)\n    return O"], [1.0, "def solve_b56e63bb(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_e08ff4eb(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_1a5ecc43(I):\n    x1 = rot270(I)\n    x2 = argmax(x1, numcolors)\n    x3 = portrait(x2)\n    x4 = branch(x3, mostcolor, x1)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = interval(ONE, FIVE, ONE)\n    x8 = lbind(multiply, x5)\n    x9 = apply(x8, x7)\n    x10 = lbind(shift, x2)\n    x11 = mapply(x10, x9)\n    O = paint(x6, x11)\n    return O"], [1.0, "def solve_ecd1ca27(I):\n    x1 = objects(I, T, F, T)\n    x2 = size(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = apply(double, x3)\n    x5 = apply(double, x4)\n    x6 = astuple(ONE, NINE)\n    x7 = canvas(ZERO, x6)\n    x8 = fill(x7, ONE, x5)\n    x9 = fill(x8, TWO, x4)\n    O = fill(x9, THREE, x5)\n    return O"], [1.0, "def solve_5a3f2775(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_5447fdea(I):\n    x1 = asindices(I)\n    x2 = shape(I)\n    x3 = halve(x2)\n    x4 = connect(ORIGIN, x3)\n    x5 = height(x4)\n    x6 = halve(x5)\n    x7 = width(x4)\n    x8 = halve(x7)\n    x9 = tojvec(x8)\n    x10 = height(x4)\n    x11 = decrement(x10)\n    x12 = lbind(astuple, x11)\n    x13 = rbind(shoot, x9)\n    x14 = compose(x12, x13)\n    x15 = fork(combine, x14, last)\n    x16 = apply(x15, x4)\n    O = fill(I, ZERO, x16)\n    return O"], [1.0, "def solve_69984d3f(I):\n    x1 = leastcolor(I)\n    x2 = height(I)\n    x3 = vsplit(I, x2)\n    x4 = rbind(ofcolor, x1)\n    x5 = compose(leftmost, x4)\n    x6 = width(I)\n    x7 = divide(x6, THREE)\n    x8 = multiply(x7, TWO)\n    x9 = lbind(greater, x7)\n    x10 = compose(x9, x5)\n    x11 = lbind(greater, x8)\n    x12 = compose(x11, x5)\n    x13 = compose(flip, x10)\n    x14 = fork(both, x12, x13)\n    x15 = fork(either, x10, x14)\n    x16 = compose(flip, x15)\n    x17 = rbind(multiply, TWO)\n    x18 = compose(x17, x10)\n    x19 = rbind(multiply, FOUR)\n    x20 = compose(x19, x14)\n    x21 = rbind(multiply, THREE)\n    x22 = compose(x21, x16)\n    x23 = fork(add, x18, x20)\n    x24 = fork(add, x23, x22)\n    x25 = width(I)\n    x26 = rbind(repeat, x25)\n    x27 = compose(x26, x24)\n    O = apply(x27, x3)\n    return O"], [1.0, "def solve_50d5eeed(I):\n    x1 = Fgpartition(I)\n    x2 = merge(x1)\n    x3 = normalize(x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = multiply(x5, x5)\n    x7 = canvas(x4, x6)\n    x8 = shape(x3)\n    x9 = rbind(multiply, x8)\n    x10 = toindices(x3)\n    x11 = apply(x9, x10)\n    x12 = lbind(shift, x3)\n    x13 = mapply(x12, x11)\n    O = paint(x7, x13)\n    return O"], [1.0, "def solve_70bf081b(I):\n    x1 = objects(I, T, F, T)\n    x2 = ofcolor(I, TWO)\n    x3 = mapply(vfrontier, x2)\n    x4 = underfill(I, ONE, x3)\n    x5 = hconcat(x4, x4)\n    O = vconcat(x5, x5)\n    return O"], [1.0, "def solve_80c1d51e(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_6b126768(I):\n    x1 = mostcolor(I)\n    x2 = replace(I, x1, ZERO)\n    x3 = leastcolor(x2)\n    O = ofcolor(I, x3)\n    return O"], [1.0, "def solve_d90b349a(I):\n    x1 = rot270(I)\n    x2 = rot180(I)\n    x3 = rot270(x2)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_771ee578(I):\n    x1 = lbind(contained, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = chain(merge, vmirror, hmirror)\n    x5 = x4(x3)\n    x6 = fork(recolor, color, x5)\n    x7 = mapply(x6, x4)\n    O = paint(I, x7)\n    return O"], [1.0, "def solve_0b8b8ce0(I):\n    x1 = astuple(identity, rot90)\n    x2 = astuple(rot180, rot270)\n    x3 = combine(x1, x2)\n    x4 = astuple(identity, rot270)\n    x5 = astuple(rot180, rot90)\n    x6 = combine(x4, x5)\n    x7 = pair(x3, x6)\n    x8 = rbind(rapply, I)\n    x9 = compose(initset, first)\n    x10 = chain(first, x8, x9)\n    x11 = rbind(ofcolor, EIGHT)\n    x12 = chain(lowermost, x11, x10)\n    x13 = matcher(x12, ZERO)\n    x14 = extract(x7, x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 = x15(I)\n    x18 = rot180(x17)\n    x19 = shape(x18)\n    x20 = lbind(apply, first)\n    x21 = lbind(ofcolor, x18)\n    x22 = chain(size, x20, x21)\n    x23 = palette(I)\n    x24 = argmax(x23, x22)\n    x25 = partition(x18)\n    x26 = matcher(color, x24)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x25, x27)\n    x29 = compose(invert, size)\n    x30 = order(x28, x29)\n    x31 = apply(normalize, x30)\n    x32 = size(x31)\n    x33 = interval(ZERO, x32, ONE)\n    x34 = apply(toivec, x33)\n    x35 = mpapply(shift, x31, x34)\n    x36 = canvas(x24, x19)\n    x37 = paint(x36, x35)\n    O = x16(x37)\n    return O"], [1.0, "def solve_447fd2c6(I):\n    x1 = asobject(I)\n    x2 = shape(I)\n    x3 = decrement(x2)\n    x4 = index(I, x3)\n    x5 = double(x2)\n    x6 = canvas(x4, x5)\n    x7 = paint(x6, x1)\n    x8 = objects(x7, F, F, T)\n    x9 = first(x8)\n    x10 = shift(x9, LEFT)\n    x11 = vperiod(x10)\n    x12 = hperiod(x10)\n    x13 = neighbors(ORIGIN)\n    x14 = lbind(mapply, neighbors)\n    x15 = power(x14, TWO)\n    x16 = x15(x13)\n    x17 = astuple(x11, x12)\n    x18 = lbind(multiply, x17)\n    x19 = astuple(x18, x16)\n    x20 = lbind(shift, x10)\n    x21 = occurrences(x12, x13)\n    x22 = mapply(x20, x21)\n    O = paint(x7, x22)\n    return O"], [1.0, "def solve_c98899f1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_a59f77f9(I):\n    x1 = argmin(I, bounds)\n    x2 = fork(equality, toindices, backdrop)\n    x3 = compose(flip, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    O = canvas(x5, UNITY)\n    return O"], [1.0, "def solve_64fc3813(I):\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = hfrontier(x1)\n    x4 = vfrontier(x2)\n    x5 = intersection(x3, x4)\n    x6 = astuple(x2, x5)\n    x7 = canvas(ZERO, x6)\n    O = fill(x7, TWO, x3)\n    return O"], [1.0, "def solve_6aee7734(I):\n    x1 = fgpartition(I)\n    x2 = valmax(x1, numcolors)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, mostcolor, I)\n    x5 = branch(x3, backdrop, x4)\n    x6 = urcorner(x5)\n    x7 = index(I, x6)\n    x8 = equality(x7, ONE)\n    x9 = add(x6, x8)\n    x10 = shift(x9, UNITY)\n    x11 = paint(I, x10)\n    x12 = objects(x11, T, F, T)\n    x13 = colorfilter(x12, TWO)\n    x14 = rbind(bordering, I)\n    x15 = compose(flip, x14)\n    x16 = mfilter(x13, x15)\n    O = paint(x11, x16)\n    return O"], [1.0, "def solve_0bb08e31(I):\n    x1 = shape(I)\n    x2 = subgrid(x1, I)\n    x3 = ofcolor(I, ZERO)\n    x4 = mapply(vfrontier, x3)\n    x5 = mapply(hfrontier, x3)\n    x6 = size(x4)\n    x7 = size(x5)\n    x8 = greater(x6, x7)\n    x9 = fill(I, ZERO, x4)\n    x10 = fill(x9, ZERO, x5)\n    O = fill(x10, TWO, x6)\n    return O"], [1.0, "def solve_4ed20adc(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_fc0a3cb2(I):\n    x1 = rot45(I)\n    x2 = fgpartition(x1)\n    x3 = compose(flip, even)\n    x4 = extract(x2, x3)\n    x5 = other(x2, x4)\n    x6 = rbind(colorcount, x5)\n    x7 = apply(x6, x4)\n    x8 = normalize(x5)\n    x9 = lbind(shift, x8)\n    x10 = apply(x9, x7)\n    x11 = rbind(intersection, x5)\n    x12 = compose(size, x11)\n    x13 = argmax(x10, x12)\n    O = underfill(x1, x5, x13)\n    return O"], [1.0, "def solve_94f7618a(I):\n    x1 = astuple(vsplit, hsplit)\n    x2 = rbind(rbind, TWO)\n    x3 = rbind(rapply, I)\n    x4 = initset(x2)\n    x5 = lbind(rapply, x4)\n    x6 = chain(first, x3, x5)\n    x7 = lbind(apply, numcolors)\n    x8 = compose(x7, x6)\n    x9 = matcher(x8, TWO_BY_TWO)\n    x10 = extract(x1, x9)\n    x11 = x10(I, TWO)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = palette(x12)\n    x15 = palette(x13)\n    x16 = intersection(x14, x15)\n    x17 = first(x16)\n    x18 = shape(x12)\n    x19 = canvas(x17, x18)\n    x20 = ofcolor(x12, x17)\n    x21 = ofcolor(x13, x17)\n    x22 = intersection(x20, x21)\n    O = fill(x19, TWO, x22)\n    return O"], [1.0, "def solve_e273c8d5(I):\n    x1 = ONE(I)\n    x2 = branch(x1, ZERO, ORIGIN)\n    x3 = shape(x2)\n    x4 = maximum(x3)\n    x5 = halve(x4)\n    x6 = interval(ONE, x5, ONE)\n    x7 = lbind(power, inbox)\n    x8 = rbind(rapply, x2)\n    x9 = compose(initset, x7)\n    x10 = chain(first, x8, x9)\n    x11 = apply(x10, x6)\n    x12 = repeat(x2, ONE)\n    x13 = combine(x12, x11)\n    x14 = rbind(toobject, I)\n    x15 = compose(color, x14)\n    x16 = apply(x15, x13)\n    x17 = interval(ZERO, x5, ONE)\n    x18 = pair(x17, x16)\n    x19 = compose(invert, first)\n    x20 = order(x18, x19)\n    x21 = apply(last, x20)\n    x22 = mpapply(recolor, x21, x13)\n    O = paint(I, x22)\n    return O"], [1.0, "def solve_fdea3b9d(I):\n    x1 = rot270(I)\n    x2 = leastcolor(x1)\n    x3 = shape(I)\n    x4 = add(TWO, x3)\n    x5 = canvas(x2, x4)\n    x6 = asobject(I)\n    x7 = shift(x6, UNITY)\n    x8 = paint(x5, x7)\n    x9 = rot90(x8)\n    x10 = astuple(x4, x9)\n    x11 = leastcolor(x10)\n    x12 = rot180(x8)\n    x13 = astuple(x4, x12)\n    x14 = leastcolor(x13)\n    x15 = ofcolor(x11, x14)\n    x16 = shift(x15, UP)\n    x17 = ofcolor(x11, x16)\n    x18 = rapply(x17, x15)\n    x19 = ulcorner(x15)\n    x20 = lbind(subtract, x19)\n    x21 = matcher(first, x11)\n    x22 = rbind(sfilter, x21)\n    x23 = lbind(upscale, x10)\n    x24 = chain(x20, x22, x23)\n    x25 = fork(concat, identity, x24)\n    x26 = chain(asobject, x23, x25)\n    x27 = mapply(x26, x18)\n    O = paint(x8, x27)\n    return O"], [1.0, "def solve_6aa6ba82(I):\n    x1 = objects(I, F, T, T)\n    x2 = mapply(d2, x1)\n    O = underfill(I, EIGHT, x2)\n    return O"], [1.0, "def solve_75cfeb54(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_dc356b1a(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_4bf0e74b(I):\n    x1 = ofcolor(I, TWO)\n    x2 = vline(x1)\n    x3 = branch(x2, dmirror, identity)\n    x4 = x3(I)\n    x5 = ofcolor(x4, THREE)\n    x6 = ofcolor(x4, TWO)\n    x7 = center(x5)\n    x8 = hfrontier(x7)\n    x9 = center(x6)\n    x10 = hfrontier(x9)\n    x11 = mostcolor(I)\n    x12 = palette(I)\n    x13 = remove( THREE, x12)\n    x14 = remove( TWO, x13)\n    x15 = other(x14, x11)\n    x16 = replace(x4, THREE, x11)\n    x17 = difference(x8, x15)\n    x18 = underfill(x16, THREE, x17)\n    x19 = replace(x4, TWO, x11)\n    x20 = difference(x10, x19)\n    O = fill(x18, THREE, x20)\n    return O"], [1.0, "def solve_1fbeb872(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_2dca882d(I):\n    x1 = hconcat(I, I)\n    x2 = vconcat(x1, x1)\n    x3 = asindices(x2)\n    x4 = mostcolor(I)\n    x5 = ofcolor(x2, x4)\n    x6 = difference(x3, x5)\n    x7 = mapply(ineighbors, x6)\n    O = underfill(x2, EIGHT, x7)\n    return O"], [1.0, "def solve_18ca7167(I):\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = partition(I)\n    x6 = fork(multiply, height, width)\n    x7 = fork(equality, size, x6)\n    x8 = extract(x5, x7)\n    x9 = color(x8)\n    x10 = palette(I)\n    x11 = remove(x4, x10)\n    x12 = other(x11, x9)\n    x13 = ofcolor(I, x12)\n    x14 = vmirror(x13)\n    x15 = hmirror(x13)\n    x16 = astuple(x14, x15)\n    x17 = subgrid(x9, I)\n    x18 = closet(x16, x4)\n    x19 = extract(x18, x7)\n    x20 = last(x19)\n    x21 = replace(I, x4, x20)\n    x22 = vmirror(x21)\n    x23 = hmirror(x21)\n    x24 = astuple(x22, x23)\n    x25 = combine(x21, x24)\n    x26 = vmirror(x25)\n    x27 = ulcorner(x8)\n    x28 = lrcorner(x8)\n    x29 = shape(x28)\n    x30 = add(x27, x29)\n    x31 =pletion(x26, x30)\n    x32 = ofcolor(x25, x4)\n    x33 = vmirror(x32)\n    x34 = hmirror(x32)\n    x35 = astuple(x33, x34)\n    x36 = combine(x31, x35)\n    x37 = rbind(adjacent, x8)\n    x38 = sfilter(x36, x37)\n    O = extract(x38, x29)\n    return O"], [1.0, "def solve_9a0e197c(I):\n    x1 = mostcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 = normalize(x2)\n    x4 = ulcorner(x3)\n    x5 = shoot(x4, NEG_UNITY)\n    x6 = shape(x3)\n    x7 = rbind(multiply, x6)\n    x8 = rbind(shoot, UP_RIGHT)\n    x9 = mapply(x7, x5)\n    x10 = mapply(x8, x5)\n    x11 = fill(I, x1, x9)\n    O = fill(x11, x1, x10)\n    return O"], [1.0, "def solve_6b324514(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_440021f1(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_8de40c65(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_36257036(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_21c826a0(I):\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = matcher(size, ZERO)\n    x4 = rbind(sfilter, x3)\n    x5 = lbind( compose, DOWN)\n    x6 = lbind(rbind, sfilter)\n    x7 = chain(x5, x4, x6)\n    x8 = compose(color, merge)\n    x9 = fork(recolor, x8, identity)\n    x10 = compose(x9, x7)\n    x11 = fork(combine, x7, x10)\n    x12 = compose(x11, x11)\n    x13 = fork(lrcorner, x12, toindices)\n    x14 = rbind(contained, x12)\n    x15 = compose(x14, last)\n    x16 = sfilter(x1, x15)\n    x17 = vsplit(I, TWO)\n    x18 = hsplit(I, TWO)\n    x19 = merge(x18)\n    x20 = width(x19)\n    x21 = increment(x20)\n    x22 = interval(ZERO, x21, TWO)\n    x23 = height(x19)\n    x24 = rbind(multiply, x23)\n    x25 = chain(x24, ZERO, last)\n    x26 = fork(recolor, mostcolor, x25)\n    x27 = mapply(x26, x22)\n    x28 = paint(x17, x27)\n    x29 = replace(x28, EIGHT, ONE)\n    x30 = compose(x29, last)\n    x31 = fork(combine, x30, first)\n    x32 = sfilter(x1, x31)\n    x33 = paint(x29, x32)\n    O = fork(connect, first, last)\n    return O"], [1.0, "def solve_0f688366(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_8ddfde31(I):\n    x1 = box(I)\n    x2 = shape(I)\n    x3 = halve(x2)\n    x4 = vmirror(I)\n    x5 = lbind(shift, x4)\n    x6 = compose(x5, x3)\n    x7 = interval(THREE, x3, ONE)\n    x8 = apply(x6, x7)\n    x9 = mapply(x5, x8)\n    O = paint(I, x9)\n    return O"], [1.0, "def solve_3069e105(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = fill(x8, ONE, x11)\n    return O"], [1.0, "def solve_07468077(I):\n    x1 = matcher(first, TWO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_22ac083e(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_65375ace(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 =remove(x9, x10)\n    x12 = NEindices(x11)\n    x13 = normalize(x12)\n    x14 = shift(x13, NEG_UNITY)\n    x15 = ulcorner(x9)\n    x16 = lbind(shift, x14)\n    x17 = rbind(multiply, x11)\n    x18 = chain(x17, x16, last)\n    x19 = mapply(x18, x14)\n    x20 = paint(x9, x19)\n    O = rot270(x20)\n    return O"], [1.0, "def solve_541281f2(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(recolor, x13, x14)\n    x16 = compose(size, x15)\n    x17 = matcher(x16, ZERO)\n    x18 = astuple(x5, x17)\n    x19 = canvas(ZERO, x18)\n    x20 = sfilter(x19, x17)\n    x21 = difference(x19, x20)\n    O = paint(x19, x21)\n    return O"], [1.0, "def solve_5c3cdd18(I):\n    x1 = box(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = shape(I)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(I, x6)\n    x8 = objects(x7, F, F, T)\n    x9 = rbind(colorcount, TWO)\n    x10 = argmax(x8, x9)\n    O = subgrid(x10, I)\n    return O"], [1.0, "def solve_f7793207(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = fork(multiply, height, width)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = argmin(x3, x6)\n    x8 = palette(I)\n    x9 = remove(x7, x8)\n    x10 = lbind(colorcount, I)\n    x11 = argmin(x9, x10)\n    x12 = ofcolor(I, x7)\n    x13 = leftmost(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, identity, dmirror)\n    x16 = x15(I)\n    x17 = ofcolor(x16, x7)\n    x18 = subgrid(x17, x16)\n    x19 = leftmost(x17)\n    x20 = rightmost(x17)\n    x21 = lbind(greater, x19)\n    x22 = compose(x21, last)\n    x23 = rbind(greater, x20)\n    x24 = compose(x23, last)\n    x25 = asindices(x16)\n    x26 = sfilter(x25, x22)\n    x27 = subgrid(x26, x16)\n    x28 = asindices(x16)\n    x29 = sfilter(x28, x24)\n    x30 = subgrid(x29, x16)\n    x31 = rbind(equality, x11)\n    x32 = rbind(order, x31)\n    x33 = apply(x32, x27)\n    x34 = vmirror(x30)\n    x35 = apply(x32, x34)\n    x36 = vmirror(x35)\n    x37 = hconcat(x33, x18)\n    x38 = hconcat(x37, x36)\n    x39 = x15(x38)\n    O = replace(x39, x11, x7)\n    return O"], [1.0, "def solve_1576f1f7(I):\n    x1 = rbind(shoot, UNITY)\n    x2 = rbind(add, UNITY)\n    x3 = chain(x2, x1, lrcorner)\n    x4 = fork(recolor, color, x3)\n    x5 = compose(x4, toindices)\n    x6 = mapply(x5, x1)\n    O = paint(I, x6)\n    return O"], [1.0, "def solve_c04a553f(I):\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = order(x21, uppermost)\n    x24 = apply(x22, x23)\n    x25 = lbind(recolor, x18)\n    x26 = lbind(mapply, vfrontier)\n    x27 = rbind(ofcolor, x18)\n    x28 = chain(x25, x26, x27)\n    x29 = fork(paint, identity, x28)\n    x30 = mapply(x29, x24)\n    O = x6(x30)\n    return O"], [1.0, "def solve_98342054(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP_RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fork(subtract, x10, x11)\n    return O"], [1.0, "def solve_8ce4be3a(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_5d59c959(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_d821e963(I):\n    x1 = crop(I, ORIGIN, THREE_BY_THREE)\n    x2 = asobject(x1)\n    x3 = hperiod(x2)\n    x4 = height(I)\n    x5 = astuple(x4, x3)\n    x6 = ulcorner(x2)\n    x7 = crop(I, x6, x5)\n    x8 = rot90(x7)\n    x9 = double(x4)\n    x10 = divide(x9, x3)\n    x11 = increment(x10)\n    x12 = repeat(x8, x11)\n    x13 = merge(x12)\n    x14 = rot270(x13)\n    x15 = astuple(x4, x9)\n    O = crop(x14, ORIGIN, x15)\n    return O"], [1.0, "def solve_af38330d(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_cb1026e1(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_a538eeab(I):\n    x1 = fgpartition(I)\n    x2 = matcher(size, FOUR)\n    x3 = fork(both, square, x2)\n    x4 = extract(x1, x3)\n    x5 = color(x4)\n    x6 = merge(x1)\n    x7 = compose(hmirror, vmirror)\n    x8 = initset(x7)\n    x9 = insert(vmirror, x8)\n    x10 = insert(hmirror, x9)\n    x11 = rapply(x10, x6)\n    x12 = ulcorner(x4)\n    x13 = lbind(subtract, x12)\n    x14 = matcher(first, x5)\n    x15 = rbind(sfilter, x14)\n    x16 = chain(x13, ulcorner, x15)\n    x17 = fork(shift, identity, x16)\n    x18 = mapply(x17, x11)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_6f136dd4(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_035fd738(I):\n    x1 = asobject(I)\n    x2 = mostcolor(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = apply(initset, x5)\n    x7 = rbind(shoot, UNITY)\n    x8 = compose(x7, center)\n    x9 = fork(recolor, color, x8)\n    x10 = mapply(x9, x6)\n    x11 = shape(I)\n    x12 = double(x11)\n    x13 = mostcolor(I)\n    x14 = canvas(x13, x12)\n    O = paint(x14, x10)\n    return O"], [1.0, "def solve_cd4ca982(I):\n    x1 =alf(I)\n    x2 = vmirror(x1)\n    x3 = equality(x2, I)\n    x4 = branch(x3, ONE, SEVEN)\n    O = canvas(x4, UNITY)\n    return O"], [1.0, "def solve_9be4a4ec(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_9c167625(I):\n    O = subgrid(x1, I)\n    return O"], [1.0, "def solve_17fd7da2(I):\n    x1 = shape(I)\n    x2 = halve(x1)\n    x3 = rbind(shoot, UP9RIGHT)\n    x4 = rbind(shoot, DOWN_LEFT)\n    x5 = fork(combine, x3, x4)\n    x6 = rbind(shoot, UNITY)\n    x7 = rbind(shoot, NEG_UNITY)\n    x8 = fork(combine, x6, x7)\n    x9 = fork(combine, x5, x8)\n    x10 = index(I, x2)\n    x11 = x9(x2)\n    O = fill(I, x10, x11)\n    return O"], [1.0, "def solve_7407f0f1(I):\n    x1 = vmirror(I)\n    O = hconcat(I, x1)\n    return O"], [1.0, "def solve_9e0a5f2b(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_4bde5106(I):\n    x1 = trim(I)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(ONE, x3)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = objects(x6, T, F, F)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x5(x10)\n    return O"], [1.0, "def solve_87472d3a(I):\n    x1 = shape(I)\n    x2 = add(x1, TWO)\n    x3 = canvas(ZERO, x2)\n    x4 = asobject(I)\n    x5 = shift(x4, UNITY)\n    x6 = paint(x3, x5)\n    x7 = asindices(x3)\n    x8 = fork(505, identity, vmirror)\n    x9 = x8(x7)\n    x10 = lbind(shift, x9)\n    x11 = objects(x6, T, T, T)\n    x12 = mapply(x10, x11)\n    x13 = paint(x6, x12)\n    O = paint(x13, x4)\n    return O"], [1.0, "def solve_d40b95f9(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = lbind(shift, x11)\n    x14 = occurrences(I, x12)\n    x15 = mapply(x13, x14)\n    x16 = shift(x15, x12)\n    x17 = ofcolor(I, x9)\n    x18 = prapply(connect, x17, x16)\n    x19 = mapply(x18, x16)\n    x20 = intersection(x15, x19)\n    O = fill(I, x9, x20)\n    return O"], [1.0, "def solve_d03d1ab4(I):\n    x1 = matcher(first, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_1fbdd497(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, T, F, T)\n    x8 = apply(uppermost, x7)\n    x9 = order(x8, identity)\n    x10 = lbind(sfilter, x7)\n    x11 = lbind(matcher, uppermost)\n    x12 = compose(x10, x11)\n    x13 = lbind(apply, color)\n    x14 = rbind(order, leftmost)\n    x15 = chain(x13, x14, x12)\n    x16 = apply(x15, x9)\n    O = vmirror(x16)\n    return O"], [1.0, "def solve_a26bfb0c(I):\n    x1 = rot180(I)\n    x2 = downscale(x1, TWO)\n    x3 = rot180(x2)\n    O = upscale(x3, FOUR)\n    return O"], [1.0, "def solve_9e2c34c7(I):\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = flip(x9)\n    x11 = branch(x10, dmirror, identity)\n    x12 = x11(x8)\n    x13 = objects(x12, T, F, F)\n    x14 = order(x13, leftmost)\n    x15 = apply(color, x14)\n    x16 = repeat(x15, ONE)\n    O = x11(x16)\n    return O"], [1.0, "def solve_704dbe4e(I):\n    x1 = matcher(first, TWO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.0, "def solve_d0a17cae(I):\n    x1 = objects(I, T, F, T)\n    x2 = merge(x1)\n    x3 = subgrid(x2, I)\n    O =paint(x3, x3)\n    return O"], [1.0, "def solve_8b80a64e(I):\n    x1 = subgrid(ONE, I)\n    x2 = partition(x1)\n    x3 = halve(x2)\n    x4 = height(x1)\n    x5 = matcher(last, x4)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x3, x6)\n    x8 = fork(combine, vfrontier, hfrontier)\n    x9 = compose(x8, center)\n    x10 = fork(recolor, color, x9)\n    x11 = mapply(x10, x7)\n    x12 = merge(x3)\n    x13 = paint(x1, x12)\n    O = paint(x13, x11)\n    return O"], [1.0, "def solve_d69de930(I):\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = lbind(shift, x15)\n    x17 = mapply(x16, x13)\n    O = fill(I, x9, x17)\n    return O"], [1.0, "def solve_6157c561(I):\n    x1 = hmirror(I)\n    O = vconcat(I, x1)\n    return O"], [1.0, "def solve_b4fce146(I):\n    x1 = rot270(I)\n    x2 = decrement(x1)\n    O = upscale(x3, x2)\n    return O"], [1.0, "def solve_c4741741(I):\n    O = solve5099\n    return O"], [1.0, "def solve_37b22850(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x888, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_3ad40553(I):\n    x1 = vmirror(I)\n    x2 =hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_87fe7286(I):\n    x1 = rot90(I)\n    x2 = rot180(I)\n    x3 = rot270(I)\n    x4 = hconcat(I, x1)\n    x5 = hconcat(x3, x2)\n    O = vconcat(x4, x5)\n    return O"], [1.0, "def solve_90522f30(I):\n    x1 = objects(I, T, F, T)\n    x2 = sizefilter(x1, ONE)\n    x3 = difference(x1, x2)\n    x4 = rbind(toobject, I)\n    x5 = chain(leastcolor, x4, delta)\n    x6 = rbind(shift, UP)\n    x7 = fork(connect, ulcorner, urcorner)\n    x8 = compose(x6, x7)\n    x9 = rbind(shift, DOWN)\n    x10 = fork(connect, llcorner, lrcorner)\n    x11 = compose(x9, x10)\n    x12 = fork(astuple, x8, x11)\n    x13 = lbind(rbind, manhattan)\n    x14 = compose(x13, delta)\n    x15 = fork(argmin, x12, x14)\n    x16 = fork(combine, delta, x15)\n    x17 = fork(recolor, x5, x16)\n    x18 = mapply(x17, x3)\n    O = paint(I, x18)\n    return O"], [1.0, "def solve_7a1dddd4(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_af3af83d(I):\n    x1 = vmirror(I)\n    x2 = hconcat(I, x1)\n    x3 = hmirror(x2)\n    O = vconcat(x2, x3)\n    return O"], [1.0, "def solve_8c953107(I):\n    x1 = objects(I, T, F, F)\n    x2 = compose(normal, shape)\n    x3 = chain(x2, totuple, palette)\n    x4 = chain(normal, canvas, x3)\n    x5 = matcher(x4, ONE)\n    x6 =sfilter(x1, x5)\n    x7 = fork(equality, toindices, box)\n    x8 = sfilter(x6, x7)\n    x9 = matcher(x7, x8)\n    x10 = sfilter(x1, x9)\n    x11 = fork(multiply, height, width)\n    x12 = subtract(NINE, x11)\n    x13 = multiply(x12, TWO)\n    x14 = power(outbox, x13)\n    x15 = center(x6)\n    x16 = outbox(x6)\n    x17 = objects(I, T, F, F)\n    x18 = colorfilter(x17, ZERO)\n    x19 = lbind(bordering, x16)\n    x20 = compose(normalize, x19)\n    x21 = mfilter(x18, x20)\n    x22 = outbox(x6)\n    x23 = difference(x21, x22)\n    x24 = fill(I, ONE, x32)\n    O = fill(x24, THREE, x23)\n    return O"], [1.0, "def solve_3dd0e274(I):\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = objects(x6, F, F, T)\n    x8 = argmin(x7, size)\n    x9 = argmax(x7, size)\n    x10 = remove(x9, x7)\n    x11 = remove(x8, x10)\n    x12 = merge(x11)\n    x13 = color(x12)\n    x14 = subgrid(x9, I)\n    x15 = subgrid(x8, I)\n    x16 = width(x9)\n    x17 = halve(x16)\n    x18 = hupscale(x15, x17)\n    x19 = height(x9)\n    x20 = halve(x19)\n    x21 = vupscale(x18, x20)\n    x22 = asobject(x21)\n    x23 = asindices(x14)\n    x24 = ofcolor(x14, x13)\n    x25 = difference(x23, x24)\n    x26 = rbind(contained, x25)\n    x27 = compose(x26, last)\n    x28 = sfilter(x22, x27)\n    O = paint(x14, x28)\n    return O"], [1.0, "def solve_c059cb99(I):\n    O = upscale(I, TWO)\n    return O"], [1.0, "def solve_6bc7072c(I):\n    x1 = canvas(ZERO, THREE_BY_THREE)\n    x2 = asindices(x1)\n    x3 = occurrences(I, x2)\n    x4 = lbind(shift, x2)\n    x5 = mapply(x4, x3)\n    O = fill(I, ONE, x5)\n    return O"], [1.1, "def solve_a6f2ffd1(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = apply(x15, x13)\n    x17 = mapply(x13, x16)\n    x18 = height(x3)\n    x19 = divide(x18, x14)\n    x20 = increment(x19)\n    x21 = width(x3)\n    x22 = divide(x21, x14)\n    x23 = increment(x22)\n    x24 = interval(ZERO, x23, ONE)\n    x25 = product(x24, x24)\n    x26 = rbind(multiply, x19)\n    x27 = apply(x26, x25)\n    x28 = toindices(x3)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x27)\n    x31 =palette(x30)\n    x32 = other(x31, x22)\n    x33 = partition(x3)\n    x34 = ofcolor(x33, x32)\n    x35 = mapply(toindices, x34)\n    x36 = toindices(x3)\n    x37 = apply(x36, x32)\n    x38 = mapply(x27, x37)\n    x39 = papply(shift, x35, x38)\n    x40 = mapply(toobject, x33)\n    x"], [1.1, "def solve_51d21435(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = argmax(x21, x18)\n    x23 = argmin(x22, numcolors)\n    x24 = argmax(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape(x23)\n    x37 = multiply(x36, x36)\n    x38 = power(x37, TWO)\n    x39 = lbind(shift, x31)\n    x40 = fork(recolor"], [1.1, "def solve_9366b8e9(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = rot3599 flip(I)\n    x2 = rbind(ofcolor, ZERO)\n    x3 = compose(lowermost, x2)\n    x4 = matcher(x3, ZERO)\n    x5 = extract(x1, x4)\n    x6 = apply(uppermost, x5)\n    x7 = lbind(subtract, x6)\n    x8 = chain(increment, x7, initset)\n    x9 = lbind(fork, add)\n    x10 = lbind(x9, identity)\n    x11 = lbind(lbind, astuple)\n    x12 = lbind(rbind, astuple)\n    x13 = compose(x11, x12)\n    x14 = lbind(compose, x8)\n    x15 = dmirror(x14)\n    x16 = lbind(compose, x10)\n    x17 = x16(x15)\n    x18 = compose(x14, x17)\n    x19 = lbind(rapply, x13)\n    x20 = compose(initset, x18)\n    x21 = chain(first, x19, x20)\n    x22 = compose(x11, x21)\n    x23 = fork(remove, x22, x15)\n    x24 = compose(x23, x258)\n    x25 = size(x1)\n    x26 = height(x25)\n    x27 = interval(ZERO, x26, ONE)\n    x28 = lbind(apply, maximum)\n    x29 = apply(x28, x27)\n    x30 = lbind(sfilter, x21)\n    x31 = lbind(mapply, subtract)\n    x32 = rbind(sfilter, x26)\n    x33 = chain(x30, x31, x32)\n    x34 = compose(x33, x24)\n    x35 = chain(positive, last, x34)\n    x36 = lbind(s84, x43)\n    x37 = chain(x35, x36, xa)\n    x38 = lbind(compose, x10)"], [1.1, "def solve_ffb70173(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = palette(I)\n    x3 = lbind(sfilter, x1)\n    x4 = lbind(compose, flip)\n    x5 = lbind(matcher, first)\n    x6 = chain(x3, x4, x5)\n    x7 = rbind(compose, asobject)\n    x8 = lbind(mirror, x1)\n    x9 = chain(x7, x8, x6)\n    x10 = fork(combine, x7, x9)\n    x11 = fork(equality, identity, x10)\n    x12 =222(x2, I)\n    x13 = rbind(multiply, TWO)\n    x14 = chain(x13, x11, x12)\n    x15 = fork(4444, x14, xExample output:\n    854978\n    2215\n    \"\"\"\n    x1 = fork(multiply, height, width)\n    x2 = chain(palette, partition, x1)\n    x3 = argmax(x1, x2)\n    x4 = remove(x3, x1)\n    x5 = lbind(colorcount, I)\n    x6 = argmin(x4, x5)\n    x7 = repeat(x6, ONE)\n    x8 = merge(x7)\n    x9 = color(x8)\n    x10 = astuple(x6, x13)\n    x11 = astuple(x9, x10)\n    x12 = combine(x10, x11)\n    x13 = mapply(x8, x12)\n    x14 = astuple(x6, x13)\n    x15 = canvas(x9, x14)\n    x16 = astuple(x15, x13)\n    x17 = combine(x16, x13)\n    x18 = sizefilter(x17, ONE)\n    x19 = merge(x18)\n    x20 = palette(x19)\n    x21 = double(EIGHT)\n    x22 = astuple(x21, x20)\n    x23"], [1.1, "def solve_3357d1a1(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_e5af63a6(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, vsplit)\n    x3 = x2(I)\n    x4 = asobject(x3)\n    x5 = shift(x4, DOWN)\n    x6 = apply(initset, x5)\n    x7 = remove(x5, x6)\n    x8 = input:\n    7777786651\n    7770886856\n    \"\"\"\n    x1 =446(argmin, identity)\n    x2 =44fgpartition(x3)\n    x3 = merge(x2)\n    x4 = cover(x3, x4)\n    x5 =805(contained, DOWN)\n    x6 = portrait(x5)\n    x7 = branch(x6, identity, hmirror)\n    x8 = x7(x4)\n    x9 = x7(x8)\n    x10 = branch(x6, identity, vmirror)\n    x11 = x10(x8)\n    x12 = x10(x9)\n    x13 = hmirror( x11)\n    x14 = hmirror(x12)\n    x15 = shift(x1, x14)\n    x16 = paint(x5, x15)\n    x17 =8(argmax)\n    x18 = color(x17)\n    x19 =883afar(x17, x13)\n    x20 = paint(x16, x19)\n    x21 = objects(x20, T, F, T)\n    x22 = compose(flip, x1)\n    x23 = sfilter(x21, x22)\n    x24 = order(x23, uppermost)\n    x25 = astuple(x24, x24)\n    x26 = remove(x25, x24)\n    x27 = compose(last, last)\n    x28 = rbind(argmin, x27)\n    x29 = compose(first, last)\n    x30 = lbind(9, x25)\n    x31 = compose(x29, x30)\n    x32 = fork(astuple, x31, x21)"], [1.1, "def solve_b9911307(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(normalize, x3)\n    x5 = merge(x3)\n    x6 = cover(I, x5)\n    x7 = lbind(compose, flip)\n    x8 = lbind(matcher, first)\n    x9 = chain(x7, x8, mostcolor)\n    x10 = fork(sfilter, identity, x9)\n    x11 = chain(identity, x10, first)\n    x12 = lbind(lbind, shift)\n    x13 = rbind(x12, RIGHT)\n    x14 = chain(x13, x12, x11)\n    x15 = lbind(lbind, shift)\n    x16 = rbind(x15, RIGHT)\n    x17 = chain(x16, x12, x11)\n    x18 = fork(sfilter, identity, x14)\n    x19 = fork(matcher, first, x17)\n    x20 = compose(flip, x18)\n    x21 = rbind(sfilter, x20)\n    x22 = compose(x21, x19)\n    x23 = fork(compose, x17, x22)\n    x24 = lbind(rapply, x83)\n    x25 = chain(ineighbors, x24, x11)\n    x26 = fork(rapply, x23, x25)\n    x27 = compose(cmirror, x26)\n    x28 = compose(hmirror, x27)\n    x29 = fork(compose, x28, x11)\n    x30 = compose(vmirror, x29)\n    x31 = fork(rapply, x30, x11)\n    x32 = compose(box, x31)\n    x33 = fork(difference, x32, x26)\n    x34 = compose(x33, x28)\n    x35 = fork(pair, x24, x35)\n    x36 = x35(x6)\n    x37 = x35(x"], [1.1, "def solve_322fe984(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = trim(I)\n    x2 = mostcolor(x1)\n    x3 = repeat(x2, ONE)\n    x4 = lbind(repeat, THREE)\n    x5 = compose(x4, size)\n    x6 = matcher(dedupe, x3)\n    x7 = rbind(branch, identity)\n    x8 = rbind(x7, x5)\n    x9 = compose(x8, x6)\n    x10 = compose(initset, x9)\n    x11 = fork(rapply, x10, identity)\n    x12 = compose(first, x11)\n    x13 = compose(x12, x6)\n    x14 = apply(x13, x1)\n    x15 = fork(intersection, x12, size)\n    x16 = compose(size, x15)\n    x17 = matcher(x16, ZERO)\n    x18 = fork(both, x15, x17)\n    x19 = extract(x14, x18)\n    x20 = first(x19)\n    x21 = last(x19)\n    x22 = x20(I)\n    x23 =:\n    x22 = fgpartition(x22)\n    x24 = merge(x23)\n    x25 =    x24(x22)\n    x26 = ulcorner(x25)\n    x27 = subgrid(x25, x22)\n    x28 = replace(x27, ZERO, THREE)\n    x29 = asindices(x28)\n    x30 = shift(x29, x26)\n    x31 = ulcorner(x15)\n    x32 =84corner(x15)\n    x33 = initset(x32)\n    x34 = Fgpartition(x33)\n    x35 = merge(x34)\n    x36 = cover(x22, x35)\n    x37 = insert(x26, x36)\n    x38 = width(x37)\n    x39 = tojvec(x38)\n    x40 = shift(x31, x39)\n    x41 = ulcorner(x"], [1.1, "def solve_a4f6f0d6(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_ad07e1d8(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = lbind(ofcolor, I)\n    x2 = compose(lowermost, x1)\n    x3 = order(x1, x2)\n    x4 = lbind(apply, last)\n    x5 = lbind(ofcolor, I)\n    x6 = compose(x4, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(x3)\n    x9 = x7(x4)\n    x10 = x7(x9)\n    x11 = fork(equality, toindices, box)\n    x12 = fork(equality, toindices, x8)\n    x13 = fork(equality, toindices, x10)\n    x14 = lbind(index, I)\n    x15 = compose(x14, uppermost)\n    x16 = matcher(x15, x11)\n    x17 = fork(either, x13, x16)\n    x18 = compose(x17, vline)\n    x19 = lbind(add, x8)\n    x20 = x19(x16)\n    x21 = matcher(x19, x20)\n    x22 = compose(flip, x21)\n    x23 = fork(both, x18, x22)\n    x24 = extract(x3, x23)\n    x25 = subgrid(x24, I)\n    x26 = width(x25)\n    x27 = subtract(x26, TWO)\n    x28 = tojvec(x27)\n    x29 = shift(x25, x28)\n    x30 = paint(x25, x29)\n    x31 = double(x30)\n    x32 = interval(ZERO, x31, ONE)\n    x33 = rbind(contained, x32)\n    x34 = compose(x33, last)\n    x35 = rbind(sfilter, x34)\n    x36 = lbind(rbind, shift)\n    x37 = chain(x15, x35, x36)\n    x38 = fork(combine, x35, x37)\n    x39 = fork(apply, x38, x34)\n"], [1.1, "def solve_17bd76f7(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = fork(multiply, height, width)\n    x2 = decrement(x1)\n    x3 = astuple(x2, THREE)\n    x4 = crop(I, ORIGIN, x3)\n    x5 =477(x4)\n    x6 = vmirror(x5)\n    x7 = hconcat(x5, x6)\n    x8 = astuple(x2, ONE)\n    x9 = crop(x7, DOWN, x8)\n    x10 = vmirror(x9)\n    x11 = papply(pair, x7, x10)\n    x12 = apply(x11, x11)\n    x13 = papply(pair, x7, x12)\n    x14 = apply(x13, x11)\n    x15 = papply(pair, x7, x14)\n    x16 = apply(x15, x11)\n    x17 = papply(pair, x7, x16)\n    x18 = apply(x17, x11)\n    x19 = palette(x18)\n    x20 = lbind(colorcount, x18)\n    x21 = compose(x20, ofcolor)\n    x22 = argmin(x19, x21)\n    x23 = rbind(colorcount, x22)\n    x24 =contained(x23, x18)\n    x25 = ofcolor(x18, x22)\n    x26 = difference(x25, x26)\n    x27 = x21(x26)\n    x28 = asindices(x27)\n    x29 = outbox(x28)\n    x30 = subgrid(x29, x7)\n    x31 = asindices(x30)\n    x32 = box(x31)\n    x33 = hmirror(x32)\n    x34 = vmirror(x32)\n    x35 = dmirror(x33)\n    x36 =b548(x34, x1)\n    x37 = ofcolor(x35, x22)\n    x38 = mapply(x36, x37)\n    x39 = fill(x30, x22, x"], [1.1, "def solve_a109ebf3(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = lbind(contained, TWO)\n    x2 = lbind(apply, numcolors)\n    x3 = compose(x1, x2)\n    x4 = lbind(apply, shape)\n    x5 = chain(size, dedupe, x4)\n    x6 = matcher(x5, ONE)\n    x7 = compose(palette, first)\n    x8 = compose(palette, last)\n    x9 = fork(intersection, x7, x8)\n    x10 = compose(size, x9)\n    x11 = matcher(x10, ONE)\n    x12 = lbind(contained, ONE)\n    x13 = compose(minimum, shape)\n    x14 = lbind(apply, x13)\n    x15 = chain(flip, x12, x14)\n    x16 = fork(add, x3, x6)\n    x17 = fork(add, x11, x15)\n    x18 = fork(add, x16, x17)\n    x19 = vsplit(I, TWO)\n    x20 = hsplit(I, TWO)\n    x21 = astuple(x19, x20)\n    x22 = x18(x21)\n    x23 = argmax(x22, numcolors)\n    x24 = argmin(x22, numcolors)\n    x25 = palette(x23)\n    x26 = palette(x24)\n    x27 = intersection(x25, x26)\n    x28 = first(x27)\n    x29 = asindices(x23)\n    x30 = ofcolor(x23, x28)\n    x31 = difference(x29, x30)\n    x32 = asobject(x24)\n    x33 = matcher(first, x28)\n    x34 = sfilter(x32, x33)\n    x35 = difference(x32, x34)\n    x36 = shape, x23)\n    x37 = multiply(x36, x36)\n    x38 = canvas(x28, x37)\n    x39 = lbind(shift, x31)\n    x40 = lbind(multiply"], [1.1, "def solve_d07410d2(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = chain(x1, size, dedupe)\n    x3 = apply(x2, I)\n    x4 = contained(F, x3)\n    x5 = flip(x4)\n    x6 = branch(x5, identity, dmirror)\n    x7 = x6(I)\n    x8 = rbind(toobject, I)\n    x9 = chain(palette, x8, neighbors)\n    x10 = lbind(chain, flip)\n    x11 = rbind(x10, x9)\n    x12 = lbind(lbind, contained)\n    x13 = compose(x11, x12)\n    x14 = lbind(ofcolor, I)\n    x15 = fork(sfilter, x14, x13)\n    x16 = compose(size, x15)\n    x17 = palette(I)\n    x18 = argmax(x17, x16)\n    x19 = objects(x7, T, T, F)\n    x20 = colorfilter(x19, x18)\n    x21 = difference(x19, x20)\n    x22 = rbind(subgrid, x7)\n    x23 = matcher(x22, x21)\n    x24 = rbind(sfilter, x23)\n    x25 = chain(merge, x24, x22)\n    x26 = lbind(recolor, x18)\n    x27 = lbind(mapply, vfrontier)\n    x28 = rbind(ofcolor, x18)\n    x29 = chain(x26, x27, x28)\n    x30 = fork(paint, x25, x29)\n    x31 = fork(paint, x30, x29)\n    x32 =79mirror(x7)\n    x33 = rbind(\"\"\"\n    x34 = rbind(contained, x33)\n    x35 = compose(x34, last)\n    x36 = sfilter(x32, x35)\n    x37 = sfilter(x32, x36)\n    x38 = fork(either, x32, x37)\n"], [1.1, "def solve_c4d08cfa(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = shape(I)\n    x2 = multiply(THREE, x1)\n    x3 = mostcolor(I)\n    x4 = canvas(x3, x2)\n    x5 = objects(I, F, F, T)\n    x6 = merge(x5)\n    x7 = mostcolor(x6)\n    x8 = first(x5)\n    x9 = matcher(first, x7)\n    x10 = sfilter(x8, x9)\n    x11 = normalize(x10)\n    x12 = delta(x11)\n    x13 = first(x12)\n    x14 = subtract(ONE, x13)\n    x15 = asobject(I)\n    x16 = shape(I)\n    x17 = double(x16)\n    x18 = multiply(x14, x17)\n    x19 = shift(x15, x18)\n    x20 = paint(x4, x19)\n    x21 = objects(x20, F, F, T)\n    x22 = lbind(mapply, dneighbors)\n    x23 = matcher(first, x11)\n    x24 = rbind(sfilter, x23)\n    x25 = chain(x22, delta, x24)\n    x26 = ineighbors(ORIGIN)\n    x27 = apply(double, x26)\n    x28 = rbind(apply, x27)\n    x29 = lbind(lbind, shift)\n    x30 = compose(x28, x29)\n    x31 = lbind(rbind, adjacent)\n    x32 = compose(x31, x25)\n    x33 = fork(extract, x30, x32)\n    x34 = fork(combine, identity, x33)\n    x35 = compose(backdrop, x34)\n    x36 = double(x13)\n    x37 = decrement(x36)\n    x38 = multiply(x37, FOUR)\n    x39 = rbind(shift, x38)\n    x40 = compose(x39, x35)\n    x41 = fork(combine, x35, x40)"], [1.1, "def solve_a98f4174(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = replace(I, ZERO, TWO)\n    x2 = lbind(apply, maximum)\n    x3 = lbind(colorfilter, x1)\n    x4 = chain(x2, x3, color)\n    x5 = fork(paint, identity, x4)\n    x6 = chain(x5, size, x4)\n    x7 = matcher(x6, ONE)\n    x8 = extract(x1, x7)\n    x9 = x6(x8)\n    x10 = objects(I, T, T, T)\n    x11 = rbind(objects, F)\n    x12 = rbind(x11, F)\n    x13 = rbind(x12, T)\n    x14 = chain(x13, x11, x6)\n    x15 = rbind(toobject, x5)\n    x16 = chain(palette, x15, x14)\n    x17 = fork(x16, x16, color)\n    x18 = extract(x10, x17)\n    x19 = lbind(colorcount, I)\n    x20 = argmin(x18, x19)\n    x21 = rbind(colorcount, x20)\n    x22 = chain(x1, x21, palette)\n    x23 = argmin(x10, x22)\n    x24 = rbind(contained, x23)\n    x25 = rbind(rapply, x24)\n    x26 = chain(first, x25, initset)\n    x27 = fork(rapply, x26, identity)\n    x28 = fork(first, x27, last)\n    x29 = matcher(x28, x11)\n    x30 = extract(x10, x29)\n    x31 = x30(I)\n    x32 = first(x31)\n    x33 = last(x31)\n    x34 = ofcolor(x33, x20)\n    x35 = difference(x34, x32)\n    x36 = cover(x31, x35)\n    x37 = apply(initset, x339)\n    x38 = insert(x32,"], [1.1, "def solve_ae5ab87f(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = objects(I, F, T, T)\n    x6 = rbind(509999\n    5509948495\n    55978959944\n    5899294555\n    5558555554\n    5869995449\n    4854445555\n    5555554999\n    6856555584\n    8585522254\n    5528525884\n    \"\"\"\n    x1 = matcher(identity, x1)\n    x2 = rbind(sfilter, x7)\n    x3 = compose(size, x2)\n    x4 = argmax(x5, x3)\n    x5 = palette(x4)\n    x6 = remove(ZERO, x5)\n    x7 = lbind(colorcount, x4)\n    x8 = argmax(x6, x7)\n    x9 = ulcorner(x4)\n    x10 = contained(x9, x4)\n    x11 = contained(x7, x4)\n    x12 = branch(x10, UNITY, ONE)\n    x13 = branch(x11, NEG_UNITY, ONE)\n    x14 =312(x12, x13)\n    x15 = subgrid(x14, I)\n    x16 = width(x15)\n    x17 = subtract(x16, TWO)\n    x18 = upscale(x15, x17)\n    x19 = height(x15)\n    x20 = divide(x19, x17)\n    x21 = x18(x20)\n    x22 = subtract(x21, TWO)\n    x23 = divide(x22, x17)\n    x24 = repeat(x23, x8)\n    x25 = merge(x24)\n    x26 = cover(x15, x25)\n    x27 = lbind(repeat, x26)\n    x28 = compose(x27, tojvec)\n    x29 = matcher(x28, x211)\n    x30"], [1.1, "def solve_ab6a33f7(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = partition(I)\n    x2 = fork(multiply, height, width)\n    x3 = argmin(x1, x2)\n    x4 = color(x3)\n    x5 = palette(I)\n    x6 = other(x5, x4)\n    x7 = subgrid(x3, I)\n    x8 = fork(multiply, identity, identity)\n    x9 = width(x7)\n    x10 = matcher(x8, x9)\n    x11 = fork(multiply, identity, identity)\n    x12 = height(x7)\n    x13 = matcher(x11, x12)\n    x14 = width(x7)\n    x15 = interval(ONE, x14, ONE)\n    x16 = extract(x15, x10)\n    x17 = height(x7)\n    x18 = interval(ONE, x17, ONE)\n    x19 = extract(x18, x13)\n    x20 = width(x7)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = height(x7)\n    x23 = interval(ZERO, x22, ONE)\n    x24 = rbind(multiply, x16)\n    x25 = rbind(divide, x16)\n    x26 = compose(x24, x25)\n    x27 = fork(equality, identity, x26)\n    x28 = compose(x27, last)\n    x29 = rbind(multiply, x19)\n    x30 = rbind(divide, x19)\n    x31 = compose(x29, x30)\n    x32 = fork(equality, identity, x31)\n    x33 = compose(x32, last)\n    x34 = lbind(apply, first)\n    x35 = rbind(sfilter, x28)\n    x36 = rbind(pair, x21)\n    x37 = chain(x34, x35, x36)\n    x38 = pair(x7, x23)\n    x39 = sfilter(x38, x33)\n    x40 = apply(first, x39"], [1.1, "def solve_56f6fe7f(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = trim(I)\n    x2 = tophalf(x1)\n    x3 = lefthalf(x2)\n    x4 = tophalf(x3)\n    x5 = dmirror(x4)\n    x6 = bottomhalf(x1)\n    x7 = lefthalf(x6)\n    x8 = bottomhalf(x7)\n    x9 = height(x9)\n    x10 = width(x9)\n    x11 = hfrontier(ORIGIN)\n    x12 = fill(x3, ZERO, x11)\n    x13 = hfrontier(x10)\n    x14 = fill(x12, ZERO, x13)\n    x15 = compress(x14)\n    x16 = width(x9)\n    x17 = height(x9)\n    x18 = decrement(x17)\n    x19 = tojvec(x18)\n    x20 = connect(ORIGIN, x19)\n    x21 = fill(x10, ZERO, x20)\n    x22 = vconcat(x23, x21)\n    x23 = width(x9)\n    x24 = subtract(x18, x23)\n    x25 = tojvec(x24)\n    x26 = vitate(x25, x24)\n    x27 = height(x9)\n    x28 = decrement(x27)\n    x29 = toivec(x28)\n    x30 = connect(x25, x29)\n    x31 = fill(x10, ZERO, x30)\n    x32 = lbind(16, x26)\n    x33 = tojvec(x32)\n    x34 = v reflectors(x33)\n    x35 = cover(x31, x34)\n    x36 = astuple(x29, x306)\n    x37 = crop(x35, x36, x34)\n    x38 = fork(combine, vfrontier, hfrontier)\n    x39 = compose(x38, tojvec)\n    x40 = lbind(extract, x35)\n    x41 = chain(first,"], [1.1, "def solve_d76107ea(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = palette(I)\n    x2 = lbind(rbind, sfilter)\n    x3 = lbind(compose, flip)\n    x4 = lbind(matcher, first)\n    x5 = chain(x2, x3, x4)\n    x6 = lbind(paint, I)\n    x7 = rbind(compose, asobject)\n    x8 = dmirror(I)\n    x9 = rbind(rapply, x8)\n    x10 = chain(first, x9, initset)\n    x11 = chain(x10, x7, x5)\n    x12 = compose(x6, x11)\n    x13 = compose(x7, x5)\n    x14 = compose(cmirror, x12)\n    x15 = compose(initset, x13)\n    x16 = fork(rapply, x15, x14)\n    x17 = compose(first, x16)\n    x18 = fork(paint, x12, x17)\n    x19 = chain(initset, x7, x5)\n    x20 = compose(hmirror, x18)\n    x21 = fork(rapply, x19, x20)\n    x22 = compose(first, x21)\n    x23 = fork(paint, x18, x22)\n    x24 = chain(initset, x7, x5)\n    x25 = compose(vmirror, x23)\n    x26 = fork(rapply, x24, x25)\n    x27 = compose(first, x26)\n    x28 = fork(paint, x23, x27)\n    x29 = fork(equality, identity, hmirror)\n    x30 = fork(equality, identity, vmirror)\n    x31 = fork(equality, identity, cmirror)\n    x32 = fork(equality, identity, dmirror)\n    x33 = fork(both, x29, x30)\n    x34 = fork(both, x31, x32)\n    x35 = fork(both, x33, x34)\n    x36 = compose(x"], [1.1, "def solve_a260c865(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = sizefilter(x1, FOUR)\n    x3 = fork(equality, height, width)\n    x4 = extract(x2, x3)\n    x5 = other(x1, x4)\n    x6 = color(x5)\n    x7 = astuple(ONE, THREE)\n    x8 = canvas(x6, x7)\n    x9 = sizefilter(x1, ONE)\n    x10 = initset(x4)\n    x11 = insert(x6, x9)\n    x12 = insert(x8, x11)\n    x13 = hmirror(x12)\n    x14 = toindices(x13)\n    x15 = lbind(rbind, contained)\n    x16 = lbind(compose, flip)\n    x17 = lbind(matcher, first)\n    x18 = chain(x15, x16, x17)\n    x19 = lbind(contained, TWO)\n    x20 = compose(x19, first)\n    x21 = lbind(sfilter, x17)\n    x22 = compose(x21, x18)\n    x23 = fork(contained, identity, x22)\n    x24 = compose(x17, toindices)\n    x25 = fork(compose, x24, x23)\n    x26 = lbind(sfilter, x12)\n    x27 = compose(x26, x25)\n    x28 = fork( inconsistenciesensor vsplit, identity, x27)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, hmirror)\n    x31 = fork(equality, identity, vmirror)\n    x32 = lbind(index, I)\n    x33 = compose(x32, palette)\n    x34 = remove(x33, x5)\n    x35 =Resourceindex(I, x10)\n    x36 = other(x34, x35)\n    x37 = apply(x36, x32)\n    x38 = astuple(dmirror, cmirror)\n    x"], [1.1, "def solve_0027cdb2(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_904af7cc(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = compose(first, last)\n    x41 = chain(corners, subgrid, x40)\n    x42 = compose(x37"], [1.1, "def solve_def361e3(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = shape(I)\n    x2 = maximum(x1)\n    x3 = interval(ZERO, x2, ONE)\n    x4 = interval(ONE, x2, ONE)\n    x5 = rbind(toobject, I)\n    x6 = rbind(shoot, RIGHT)\n    x7 = chain(x5, x6, toivec)\n    x8 = rbind(shoot, DOWN)\n    x9 = chain(x5, x8, tojvec)\n    x10 = apply(x7, x3)\n    x11 = apply(x9, x3)\n    x12 = rbind(shoot, UP_RIGHT)\n    x13 = chain(x5, x12, toivec)\n    x14 = rbind(shoot, UP_RIGHT)\n    x15 = decrement(x2)\n    x16 = lbind(astuple, x15)\n    x17 = chain(x5, x14, x16)\n    x18 = apply(x13, x3)\n    x19 = apply(x17, x4)\n    x20 = combine(x18, x19)\n    x21 = rbind(shoot, NEG_UNITY)\n    x22 = decrement(x2)\n    x23 = lbind(astuple, x22)\n    x24 = chain(x5, x21, x23)\n    x25 = rbind(shoot, NEG_UNITY)\n    x26 = decrement(x2)\n    x27 = rbind(astuple, x26)\n    x28 = lbind(subtract, x26)\n    x29 = compose(x27, x28)\n    x30 = chain(x5, x25, x29)\n    x31 = apply(x24, x3)\n    x32 = apply(x30, x4)\n    x33 = combine(x31, x32)\n    x34 = rbind(valmax, numcolors)\n    x35 = matcher(x34, ONE)\n    x36 = x35(x10)\n    x37 = x35(x11)\n    x38 = x35(x20)"], [1.1, "def solve_ba6cbe34(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = palette(I)\n    x6 = remove(x4, x5)\n    x7 = lbind(chain, size)\n    x8 = rbind(x7, dneighbors)\n    x9 = lbind(lbind, intersection)\n    x50 = lbind(ofcolor, I)\n    x51 = chain(x8, x9, x50)\n    x52 = rbind(matcher, vline)\n    x53 = compose(x52, x41)\n    x54 = chain(flip, x53, x41)\n    x55 = sfilter(x6, x49)\n    x56 = sfilter(x6, x540)\n    x57 = height(x556)\n    x58 =6129801(x57)\n    x59 = chain(lowermost, x50, x58)\n    x60 = matcher(x59, ZERO)\n    x61 = objects(I, T, F, F)\n    x62 = sfilter(x61, x60)\n    x63 = argmax(x62, x25)\n    x64 = subgrid(x63, I)\n    x65 = chain( decreased width, decrement,\n    x66 = matcher(x65, x34)\n    x67 = fork(greater, x66, identity)\n    x68 = sfilter(x67, x60)\n    x69 = argmax(x68, x67)\n    x70 = matcher(first, x04)\n    x71 = compose(flip, x70)\n    x72 = sfilter(x41, x70)\n    x73 = argmax(x72, x27)\n    x74 = leastcolor(x73)\n    x75 =,(x74, x110)\n    x76 = ofcolor(x76, x4)\n    x77 = mapply(vfrontier, x76)\n    x78 = mapply(hfrontier, x76)\n    x79 = size"], [1.1, "def solve_72bbec99(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, size)\n    x3 = lowermost(x2)\n    x4 = height(x2)\n    x5 = equality(x4, x3)\n    x6 = branch(x5, lefthalf, tophalf)\n    x7 = branch(x5, righthalf, bottomhalf)\n    x8 = branch(x5, hconcat, vconcat)\n    x9 = x6(I)\n    x10 = x7(I)\n    x11 = index(x9, ORIGIN)\n    x12 = shape(x10)\n    x13 = decrement(x12)\n    x14 = index(x10, x13)\n    x15 = mostcolor(I)\n    x16 = mostcolor(I)\n    x17 = palette(I)\n    x18 = remove(x11, x17)\n    x19 = remove(x14, x18)\n    x20 = remove(x16, x19)\n    x21 = first(x20)\n    x22 = replace(x9, x21, x11)\n    x23 = branch(x5, width, height)\n    x24 = astuple(x23, x22)\n    x25 = crop(x9, ORIGIN, x24)\n    x26 = hmirror(x25)\n    x27 = vconcat(x25, x26)\n    x28 = upscale(x27, TWO)\n    x29 = merge(x28)\n    x30 = palette(x29)\n    x31 = double(x30)\n    x32 = interval(ZERO, x31, ONE)\n    x33 = upscale(x27, x32)\n    x34 =60c8cdece60(x28)\n    x35 = lbind(multiply, x34)\n    x36 = apply(x35, x30)\n    x37 = lbind(shift, x29)\n    x38 = mapply(x37, x36)\n    x39 = fill(x22, x21, x38)\n    x40 = replace(x39"], [1.1, "def solve_ebe908fa(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = height(x12)\n    x15 = lbind(multiply, x14)\n    x16 = chain(x13, toivec, x15)\n    x17 = height(x3)\n    x18 = height(x12)\n    x19 = divide(x17, x18)\n    x20 = increment(x19)\n    x21 = interval(ZERO, x20, ONE)\n    x22 = mapply(x16, x21)\n    x23 = rbind(contained, x22)\n    x24 = sfilter(x4, x23)\n    x25 = asindices(I)\n    x26 = corners(x25)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, I)\n    x29 = mostcolor(x28)\n    x30 = palette(I)\n    x31 = other(x30, x29)\n    x32 = ulcorner(x4)\n    x33 = index(x3, x32)\n    x34 = equality(x33, x31)\n    x35 = urcorner(x4)\n    x36 = index(x3, x35)\n    x37 = equality(x36, x31)\n    x38 = llcorner(x4)\n    x39 = index(x3, x38)\n    x40 = equality(x39, x31)\n    x41 = lrcorner(x4)"], [1.1, "def solve_0112343a(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = lbind(matcher, first)\n    x2 = compose(x1, mostcolor)\n    x3 = fork(sfilter, identity, x2)\n    x4 = fork(difference, identity, x3)\n    x5 = lbind(rbind, upscale)\n    x6 = rbind(x5, toindices)\n    x7 = compose(x6, x4)\n    x8 = fork(intersection, identity, x7)\n    x9 = compose(size, x8)\n    x10 = valmax(x1, x9)\n    x11 = matcher(x9, x10)\n    x12 =flip(x11, ONE)\n    x13 = sfilter(x1, x12)\n    x14 = order(x13, identity)\n    x15 = apply(x5, x14)\n    x16 = ofcolor(x15, ONE)\n    x17 = ofcolor(x15, TWO)\n    x18 = apply(x11, x17)\n    x19 = apply(x15, x18)\n    x20 = ofcolor(x19, ONE)\n    x21 = rbind(manhattan, DOWN)\n    x22 = chain(x19, x21, initset)\n    x23 = fork(add, identity, x22)\n    x24 = chain(initset, x18, x23)\n    x25 = fork(insert, identity, x24)\n    x26 = lbind(rbind, manhattan)\n    x27 = compose(x26, initset)\n    x28 = fork(argmin, x25, x27)\n    x29 = fork(gravitate, initset, x28)\n    x30 = compose(crement, x29)\n    x31 = fork(add, identity, x30)\n    x32 = fork(gravitate, initset, x33)\n    x33 = compose(crement, x32)\n    x34 = fork(add, identity, x33)\n    x35 = fork(gravitate, toindices, x34)\n    x36 = fork(add, identity, x35)\n    x37"], [1.1, "def solve_9eb377d3(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_e1604aef(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = matcher(first, ZERO)\n    x2 =044(I, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = compose(normalize, x3)\n    x5 = apply(x4, x2)\n    x6 = astuple(NEG_TWO, NEG_TWO)\n    x7 = shift(x5, x6)\n    x8 = size(x7)\n    x9 = interval(ZERO, x8, ONE)\n    x10 = rbind(toobject, I)\n    x11 = rbind(shoot,ORIGIN)\n    x12 = compose(x10, x11)\n    x13 = rbind(colorcount, SIX)\n    x14 = chain(x13, double, x12)\n    x15 = fork(equality, x14, identity)\n    x16 = chain(numcolors, x15, fgpartition)\n    x17 = matcher(x16, FIVE)\n    x18 = extract(x9, x17)\n    x19 = neighbors(ORIGIN)\n    x20 = insert(ORIGIN, x19)\n    x21 = rbind(shoot, ZERO_BY_TWO)\n    x22 = rbind(shift, x21)\n    x23 = pair(x20, x22)\n    x24 = chain(x entire, x23, last)\n    x25 = rbind(colorcount, SEVEN)\n    x26 = matcher(x25, EIGHT)\n    x27 = fork(668, x26, identity)\n    x28 = chain(x22, x27, first)\n    x29 = lbind(fork, outbox)\n    x30 = rbind(x29, x28)\n    x31 = lbind(fork, recolor)\n    x32 = lbind(x31, x30)\n    x33 = rbind(shift, x29)\n    x34 = lbind(chain, x33)\n    x35 = lbind(x34, x28)\n    x36 = lbind(rbind, mapply)\n    x37 = compose(x35, x36)"], [1.1, "def solve_994c0c1a(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(re"], [1.1, "def solve_c4ce205e(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = shape(I)\n    x5 = maximum(x4)\n    x6 = canvas(ZERO, x5)\n    x7 = asindices(x6)\n    x8 = normalize(x7)\n    x9 = to\n    74dd113061\n    x10 = paint(x6, x9)\n    x11 = height(x10)\n    x12 = width(x10)\n    x13 = fgpartition(x10)\n    x14 = merge(x13)\n    x15 = width(x10)\n    x16 = height(x14)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = lbind(multiply, x5)\n    x19 = apply(x18, x17)\n    x20 = lbind(multiply, x4)\n    x21 = apply(x20, x17)\n    x22 = lbind(interval, ZERO)\n    x23 = rbind(x22, ONE)\n    x24 = lbind(interra, x2)\n    x25 = rbind(x24, ONE)\n    x26 = lbind(colorfilter, x36)\n    x27 = chain(x23, x25, x26)\n    x28 = lbind(78, x multiply)\n    x29 = chain(x28, x27, last)\n    x30 = fork(recolor, first, x29)\n    x31 = astuple(SIX, THREE)\n    x32 = astuple(FOUR, EIGHT)\n    x33 = astuple(ONE, DOWN)\n    x34 = initset(x33)\n    x35 = insert(x34, x32)\n    x36 = insert(x30, x35)\n    x37 = apply(x32, x36)\n    x38 = papply(recolor, x37)\n    x39 = lbind(shift, x8)\n    x40 = mapply(x39, x38)\n    O = paint(x10,"], [1.1, "def solve_caa8cb0f(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = asobject(I)\n    x6 = matcher(first, x4)\n    x7 = compose(flip, x6)\n    x8 = sfilter(x5, x7)\n    x9 = hperiod(x8)\n    x10 = vperiod(x8)\n    x11 = width(I)\n    x12 = width(x8)\n    x13 = subtract(x11, x12)\n    x14 = add(x13, TWO)\n    x15 = height(I)\n    x16 = height(x8)\n    x17 = subtract(x15, x16)\n    x18 = add(x17, TWO)\n    x19 = rbind(multiply, x9)\n    x20 = invert(x14)\n    x21 = interval(x20, x14, ONE)\n    x22 = apply(x19, x21)\n    x23 = rbind(multiply, x10)\n    x24 = invert(x18)\n    x25 = interval(x24, x18, ONE)\n    x26 = apply(x23, x25)\n    x27 = product(x26, x22)\n    x28 = lbind(shift, x8)\n    x29 = mapply(x28, x27)\n    x30 = index(I, ORIGIN)\n    x31 = equality(x30, x4)\n    x32 = flip(x31)\n    x33 = asindices(I)\n    x34 = urcorner(x33)\n    x35 = index(I, x34)\n    x36 = equality(x35, x4)\n    x37 = flip(x36)\n    x38 = asindices(I)\n    x39 = lrcorner(x38)\n    x40 = index(I, x39)\n    x41 = equality(x40, x4)\n    x42 = flip(x41)\n    x43 = asindices("], [1.1, "def solve_4a9e9729(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = astuple(SIX, TWO)\n    x2 = size(x1)\n    x3 = equality(x2, ONE)\n    x4 = branch(x3, hmirror, vmirror)\n    x5 = x4(I)\n    x6 = canvas(ZERO, x1)\n    x7 = partition(x6)\n    x8 = sizefilter(x7, ONE)\n    x9 = merge(x8)\n    x10 = palette(x9)\n    x11 = totuple(x10)\n    x12 = first(x11)\n    x13 = last(x11)\n    x14 = switch(x6, x12, x13)\n    x15 = ofcolor(x14, x12)\n    x16 = inbox(x15)\n    x17 = recolor(ZERO, x16)\n    x18 = double(x2)\n    x19 = add(x18, THREE)\n    x20 = initset(x19)\n    x21 = recolor(x12, x20)\n    x22 =434(x21, x15)\n    x23 = product(x17, x22)\n    x24 = mapply(toindices, x17)\n    x25 = mapply(x24, x23)\n    x26 = flip(x25)\n    x27 = dmirror(x26)\n    x28 = toobject(x27, x14)\n    x29 = hperiod(x28)\n    x30 = shift(x25, x29)\n    x31 = toobject(x27, x14)\n    x32 = vperiod(x31)\n    x33 = hperiod(x32)\n    x34 = neighbors(ORIGIN)\n    x35 = mapply(neighbors, x34)\n    x36 = astuple(x32, x33)\n    x37 = rbind(shift, x36)\n    x38 = combine(x30, x37)\n    x39 = fill(x6, x12, x38)\n    x40 = shift(x31, x39)\n    x41 = paint(x39, x40)"], [1.1, "def solve_35afca6b(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = objects(I, T, T, T)\n    x2 =389ca(I)\n    x3 = subgrid(x2, I)\n    x4 = height(x3)\n    x5 = width(x3)\n    x6 = vsplit(x3, x4)\n    x7 = neighbors(ORIGIN)\n    x8 = toindices(x7)\n    x9 = compose(hupscale, x8)\n    x10 = power(x9, TWO)\n    x11 = shape(x3)\n    x12 = maximum(x11)\n    x13 = lbind(replace, x12)\n    x14 =0000000000000000(x\n    x15 = lbind(downscale, x10)\n    x16 = compose(x14, x15)\n    x17 = lbind(power, equality)\n    x18 = chain(x17, x13, x16)\n    x19 = lbind(rapply, x8)\n    x20 = compose(initset, x18)\n    x21 = chain(first, x19, x20)\n    x22 = compose(flip, x21)\n    x23 = fork(22, x18, x22)\n    x24 = fork(combine, x21, x23)\n    x25 = compose(x4, x24)\n    x26 = palette(x2)\n    x27 = palette(x10)\n    x28 = intersection(x26, x27)\n    x29 = argmax(x28, x25)\n    x30 = urcorner(x29)\n    x31 = invert(x30)\n    x32 = shift(x29, x31)\n    x33 = apply(x25, x32)\n    x34 = shift(x32, x33)\n    x35 = ofcolor(x30, xpal)\n    x36 = ofcolor(x30, x66666666\n    x37 = lbind(index, x30)\n    x38 = compose(x37, urcorner)\n    x39 = cover(x30, x33)\n    x40 = x38(x39)\n    x41 = ofcolor("], [1.1, "def solve_06304daa(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 =173(I)\n    x2 = tophalf(x1)\n    x3 = lefthalf(x2)\n    x4 = tophalf(x3)\n    x5 = righthalf(x4)\n    x6 = bottomhalf(x4)\n    x7 = lefthalf(x6)\n    x8 = bottomhalf(x6)\n    x9 = righthalf(x8)\n    x10 = index(I, ORIGIN)\n    x11 = width(I)\n    x12 = decrement(x11)\n    x13 = tojvec(x12)\n    x14 = index(I, x13)\n    x15 = height(I)\n    x16 = decrement(x15)\n    x17 = toivec(x16)\n    x18 = index(I, x17)\n    x19 = shape(I)\n    x20 = decrement(x19)\n    x21 = tojvec(x20)\n    x22 = index(I, x21)\n    x23 = compress(I)\n    x24 = asindices(x23)\n    x25 = box(x24)\n    x26 = corners(x24)\n    x27 = difference(x25, x26)\n    x28 = toobject(x27, x23)\n    x29 = color(x28)\n    x30 = palette(x2)\n    x31 = other(x30, x29)\n    x32 = replace(x3, x31, x\n    x33 = x31(x2)\n    x34 = tojvec(x33)\n    x35 = shift(x34, x36)\n    x36 = combine(x28, x35)\n    x37 = rbind(contained, x36)\n    x38 = compose(x37, first)\n    x39 = sfilter(x19, x38)\n    x40 = difference(x19, x39)\n    x41 = fill(I, x31, x40)\n    x42 = compose(size, first)\n    x43 = objects(x41, T, F, F)\n    x44 = rbind"], [1.1, "def solve_98b670ae(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = lefthalf(x1)\n    x3 = tophalf(I)\n    x4 = righthalf(x3)\n    x5 = bottomhalf(I)\n    x6 = lefthalf(x5)\n    x7 = bottomhalf(I)\n    x8 = righthalf(x7)\n    x9 = palette(x2)\n    x10 = palette(x4)\n    x11 = intersection(x9, x10)\n    x12 = palette(x6)\n    x13 = palette(x8)\n    x14 = intersection(x12, x13)\n    x15 = intersection(x11, x14)\n    x16 = first(x15)\n    x17 = shape(I)\n    x18 = halve(x17)\n    x19 = canvas(x16, x18)\n    x20 = matcher(first, x16)\n    x21 = compose(flip, x20)\n    x22 = rbind(sfilter, x21)\n    x23 = compose(x22, asobject)\n    x24 = x24(x2)\n    x25 = x24(x6)\n    x26 = x23(x24)\n    x27 = x25(x6)\n    x28 = shape(x27)\n    x29 = canvas(x24, x28)\n    x30 = paint(x29, x27)\n    x31 = rbind(shift, x38)\n    x32 = compose(x31, dneighbors)\n    x33 = initset(x32)\n    x34 = recolor(x16, x33)\n    x35 = dmirror(x30)\n    x36 = paint(x35, x34)\n    x37 = combine(x32, x36)\n    x38 = fork(combine, vfrontier, hfrontier)\n    x39 = compose(x38, x37)\n    x40 = fork(combine, x43, x39)\n    x41 = apply(x40, x33)\n    x42 = mapply(x37, x41)\n"], [1.1, "def solve_47bcfd76(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_717d29a0(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x26 = astuple(x10, cmirror)\n    x27 = astuple(x25, x26)\n    x28 = astuple(x24, vmirror)\n    x29 = astuple(x17, hmirror)\n    x30 = astuple(x28, x29)\n    x31 = combine(x27, x30)\n    x32 = lbind(colorcount, I)\n    x33 = rbind(toobject, I)\n    x34 = compose(x33, first)\n    x35 = chain(x32, color, x34)\n    x36 = compose(size, first)\n    x37 = fork(equality, x35, x36)\n    x38 = rbind(toobject, I)\n    x39 = chain(numcolors, x38, first)\n    x40 = matcher(x39, ONE)\n    x41 = fork(both, x40, x37)\n    x42 = extract(x"], [1.1, "def solve_016bda61(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = lbind(compose, flip)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = rbind(compose, asobject)\n    x5 = lbind(rbind, sfilter)\n    x6 = chain(x4, x5, x3)\n    x7 = rbind(shift, ORIGIN)\n    x8 = compose(x7, ulcorner)\n    x9 = rbind(shift, TWO_BY_TWO)\n    x10 = compose(x9, dmirror)\n    x11 = rbind(shift, TWO_BY_ZERO)\n    x12 = compose(x11, ulcorner)\n    x13 = rbind(shift, NEG_UNITY)\n    x14 = compose(x13, vmirror)\n    x15 = rbind(shift, NEG_UNITY)\n    x16 = compose(x15, hmirror)\n    x17 = rbind(shift, DOWN_LEFT)\n    x18 = compose(x17, hmirror)\n    x19 = rbind(shift, UP_RIGHT)\n    x20 = compose(x19, vmirror)\n    x21 = rbind(shift, RIGHT)\n    x22 = compose(x21, hmirror)\n    x23 = rbind(shift, DOWN)\n    x24 =compose(x23, x8)\n    x25 = fork(compose, x14, x20)\n    x26 = fork(compose, x24, x12)\n    x27 = compose(x26, x5)\n    x28 = rbind(shift, LEFT)\n    x29 = rbind(shift, RIGHT)\n    x30 = compose(x28, x9)\n    x31 = compose(x29, x7)\n    x32 = fork(compose, x30, x31)\n    x33 = fork(compose, x32, x5)\n    x34 = compose(x33, x5)\n    x35 = fork(contained, RIGHT, last)\n    x36 = fork(contained, contained, x35)\n    x"], [1.1, "def solve_236abd13(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = chain(positive, size, dedupe)\n    x2 = x1(I)\n    x3 = x1(x2)\n    x4 = height(x3)\n    x5 = width(x3)\n    x6 = partition(x3)\n    x7 = ofcolor(x3, ONE)\n    x8 = ofcolor(x3, FOUR)\n    x9 = center(x7)\n    x10 = delta(x7)\n    x11 = center(x8)\n    x12 = subtract(x10, x11)\n    x13 = multiply(x12, x4)\n    x14 = power(x13, TWO)\n    x15 = toindices(x4)\n    x16 = lbind(toindices, x15)\n    x17 = chain(x16, x15, outbox)\n    x18 = lbind(power, outbox)\n    x19 = compose(x18, x17)\n    x20 = initset(x19)\n    x21 = cover(x3, x20)\n    x22 = chain(size, x18, outbox)\n    x23 = argmax(x6, x22)\n    x24 = objects(x14, T, F, F)\n    x25 = color(x23)\n    x26 = center(x23)\n    x27 = invert(x25)\n    x28 = shift(x26, x27)\n    x29 = fork(combine, vfrontier, hfrontier)\n    x30 = mapply(x29, x28)\n    x31 = fill(x21, x25, x30)\n    x32 = ofcolor(x31, x1)\n    x33 = lbind(contained, x16)\n    x34 = rbind(contained, x33)\n    x35 = compose(x34, last)\n    x36 = sfilter(x32, x35)\n    x37 = sizefilter(x36, ONE)\n    x38 = fork(equality, identity, last)\n    x39 = fork(multiply, height, width)\n    x40 = chain(x38, x39,"], [1.1, "def solve_09dafe25(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(x1, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x"], [1.1, "def solve_35c650fe(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = objects(I, T, F, T)\n    x2 = GMTcolors(I)\n    x3 = compose(flip, x2)\n    x4 = extract(x1, x3)\n    x5 =1989(x4)\n    x6 =1755499991\n    7857767553\n    634 neighbors\n    5548957955\n    5579755589\n    4729655744\n    \"\"\"\n    x1 = lbind(contained, ONE)\n    x2 = chain(flip, x1, dmirror)\n    x3 = fork(both, x2, x3)\n    x4 = extract(x1, x3)\n    x5 = compose(flip, x4)\n    x6 = sfilter(x5, x3)\n    x7 = compose(hmirror, merge)\n    x8 = fork(equality, identity, x7)\n    x9 = sfilter(x6, x8)\n    x10 = compose(vmirror, dmirror)\n    x11 = fork(equality, identity, x10)\n    x12 = sfilter(x9, x11)\n    x13 = compose(leftmost, merge)\n    x14 = compose(rightmost, merge)\n    x15 = fork(equality, identity, x14)\n    x16 = compose(leftmost, invert)\n    x17 = compose(rightmost, invert)\n    x18 = fork(equality, identity, x17)\n    x19 = fork(both, x13, x18)\n    x20 = sfilter(x6, x19)\n    x21 = compose(last,283)\n    x22 = sfilter(x6, x21)\n    x23 = RIGHT(x20, x22)\n    x24 = mapply(dneighbors, x23)\n    x25 = mapply(ineighbors, x24)\n    x26 = shape(x25)\n    x27 = canvas(ZERO, x26)\n    x28 = ofcolor(x25, ONE)\n    x29 = ofcolor(x25, TWO)\n    x30 = rbind(multiply, x27)\n"], [1.1, "def solve_d06297a7(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = double(TEN)\n    x2 = interval(ZERO, x1, ONE)\n    x3 = connect(ORIGIN, DOWN)\n    x4 = connect(ORIGIN, ZERO_BY_TWO)\n    x5 = combine(x3, x4)\n    x6 = astuple(NEG_TWO, TWO)\n    x7 = lbind(multiply, x6)\n    x8 = toivec(NEG_TWO)\n    x9 = apply(x7, x2)\n    x10 = rbind(subtract, TWO_BY_ZERO)\n    x11 = fork(ofcolor, identity, leastcolor)\n    x12 = chain(x10, center, x11)\n    x13 = rbind(mapply, x9)\n    x14 = lbind(lbind, shift)\n    x15 = lbind(shift, x5)\n    x16 = compose(x15, x12)\n    x17 = chain(x13, x14, x16)\n    x18 = lbind(recolor, FIVE)\n    x19 = compose(x18, x17)\n    x20 = fork(paint, identity, x19)\n    x21 = compose(rot180, x20)\n    x22 = fork(ofcolor, x21, leastcolor)\n    x23 = compose(center, x22)\n    x24 = fork(subtract, x23, x12)\n    x25 = fork(shift, x17, x24)\n    x26 = lbind(recolor, FIVE)\n    x27 = rbind(shift, x8)\n    x28 = chain(x26, x27, x25)\n    x29 = fork(paint, x21, x28)\n    x30 = compose(rot180, x29)\n    x31 = rbind(ofcolor, FIVE)\n    x32 = compose(x31, x30)\n    x33 = leastcolor(I)\n    x34 = ofcolor(I, x33)\n    x35 = mostcolor(I)\n    x36 = shape(I)\n    x37 = canvas(x35, x"], [1.1, "def solve_f03a7f2e(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = toindices(x2)\n    x4 = rbind(shoot, DOWN)\n    x5 = mapply(x4, x3)\n    x6 = underfill(I, ONE, x5)\n    x7 = fill(x6, TWO, x3)\n    x8 =757(999, UNITY)\n    x9 = ofcolor(x8, ONE)\n    x10 = lowermost(x9)\n    x11 = width(x9)\n    x12 = rbind(greater, x10)\n    x13 = compose(x12, x12)\n    x14 = rbind(sfilter, x13)\n    x15 = lbind(recolor, ZERO)\n    x16 = lbind(ofcolor, x8)\n    x17 = chain(x15, x14, x16)\n    x18 = fork(paint, identity, x17)\n    x19 = chain(x9, first, x18)\n    x20 = difference(x1, x19)\n    x21 = rbind(greater, x10)\n    x22 = compose(x21, first)\n    x23 = rbind(sfilter, x22)\n    x24 = chain(x20, x23, x18)\n    x25 = rbind(greater, x10)\n    x26 = compose(x25, first)\n    x27 = rbind(sfilter, x26)\n    x28 = chain(x20, x27, x18)\n    x29 = rbind(gravitate, x2)\n    x30 = compose(x29, invert)\n    x31 = fork(add, identity, x30)\n    x32 = fork(insert, identity, x31)\n    x33 = fork(insert, identity, x32)\n    x34 = size(x1)\n    x35 = decrement(x34)\n    x36 = power(x33, x35)\n    x37 = compose(x33, x28)\n    x38 = power(x37, x36)\n    x39 = astuple("], [1.1, "def solve_363f59d0(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = index(I, ORIGIN)\n    x2 = objects(I, T, F, F)\n    x3 = fork(multiply, height, width)\n    x4 = fork(equality, size, x3)\n    x5 = chain(positive, decrement, size)\n    x6 = rbind(greater, ONE)\n    x7 = chain(x6, x5, shape)\n    x8 = sfilter(x2, x7)\n    x9 = fork(both, x4, x8)\n    x10 = sfilter(x2, x4)\n    x11 = fork(multiply, first, last)\n    x12 = chain(decrement, decrement, x11)\n    x13 = fork(greater, x12, x9)\n    x14 = sfilter(x2, x13)\n    x15 = palette(I)\n    x16 = remove(ZERO, x15)\n    x17 = lbind(colorcount, I)\n    x18 = argmin(x16, x17)\n    x19 = other(x16, x18)\n    x20 = color(I)\n    x21 = colorfilter(x2, x20)\n    x22 = outbox(x21)\n    x23 = difference(x22, x21)\n    x24 = fill(I, x19, x23)\n    x25 = argmin(x2, width)\n    x26 = other(x211, x25)\n    x27 =787(x26)\n    x28 = mostcolor(x27)\n    x29 = fill(x24, x28, x27)\n    x30 = normalize(x27)\n    x31 = ulcorner(x30)\n    x32 = width(x10)\n    x33 = x30(x12)\n    x34 = invert(x33)\n    x35 = tojvec(x34)\n    x36 = height(x10)\n    x37 = shift(x32, x36)\n    x38 = combine(x31, x37)\n    x39 = paint(x29, x38)\n    O = x20(x"], [1.1, "def solve_0a5f7455(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, identity, dmirror)\n    x3 = x2(I)\n    x4 = asindices(x3)\n    x5 = shoot(ORIGIN, UNITY)\n    x6 = intersection(x5, x4)\n    x7 = lrcorner(x6)\n    x8 = shoot(x7, DOWN_LEFT)\n    x9 = intersection(x8, x4)\n    x10 = combine(x6, x9)\n    x11 = llcorner(x10)\n    x12 = remove(x11, x10)\n    x13 = lbind(shift, x12)\n    x14 = shape(x12)\n    x15 = canvas(ZERO, x14)\n    x16 = lbind(multiply, x13)\n    x17 = apply(x16, x15)\n    x18 = rbind(contained, x17)\n    x19 = sfilter(x1, x18)\n    x20 = lbind(mapply, x12)\n    x21 = rbind(occurrences, x3)\n    x22 = chain(x20, x21, asindices)\n    x23 = lbind(mapply, x22)\n    x24 = chain(invert, x23, x26)\n    x25 = fork(shift, x22, x24)\n    x26 = compose(x5, x25)\n    x27 = palette(I)\n    x28 = mapply(x26, x27)\n    x29 = palette(I)\n    x30 = remove(x28, x29)\n    x31 = lbind(colorcount, x18)\n    x32 = argmax(x30, x31)\n    x33 = rbind(contained, x37)\n    x34 = compose(x33, first)\n    x35 = sfilter(x12, x34)\n    x36 = output(x35, x32)\n    x37 =021(x36)\n    x38 = argmin(x35, x27)\n    x39 = cover(x38, x39)\n    O ="], [1.1, "def solve_771b4948(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = palette(I)\n    x3 = compose(maximum, shape)\n    x4 = lbind(apply, x3)\n    x5 = lbind(colorfilter, x1)\n    x6 = chain(maximum, x4, x5)\n    x7 = matcher(x6, ONE)\n    x8 = extract(x2, x7)\n    x9 = lbind(ofcolor, I)\n    x10 = compose(backdrop, x9)\n    x11 = fork(equality, x9, x10)\n    x12 = extract(x2, x11)\n    x13 = ofcolor(I, x12)\n    x14 = ofcolor(I, x8)\n    x15 = rbind(manhattan, x13)\n    x16 = compose(x15, initset)\n    x17 = argmin(x14, x16)\n    x18 = ulcorner(x14)\n    x19 = contained(x18, x14)\n    x20 = shoot(x17, UNITY)\n    x21 = shoot(x17, NEG_UNITY)\n    x22 = combine(x20, x21)\n    x23 = shoot(x17, UP_RIGHT)\n    x24 = shoot(x17, DOWN_LEFT)\n    x25 = combine(x23, x24)\n    x26 = branch(x19, x22, x25)\n    x27 = asindices(I)\n    x28 = outbox(x13)\n    x29 = intersection(x27, x28)\n    x30 = intersection(x29, x26)\n    x31 = initset(x17)\n    x32 = rbind(manhattan, x31)\n    x33 = compose(x32, initset)\n    x34 = argmin(x30, x33)\n    x35 = height(x13)\n    x36 = height(I)\n    x37 = equality(x35, x36)\n    x38 = leftmost(x14)\n    x39 = leftmost(x13)\n    x40 = greater("], [1.1, "def solve_6a2ff814(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, T)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = rbind(colorcount, x9)\n    x11 = argmax(x5, x10)\n    x12 = other(x5, x11)\n    x13 = color(x12)\n    x14 = subgrid(x11, I)\n    x15 = lbind(insert, DOWN)\n    x16 = compose(lrcorner, asindices)\n    x17 = chain(x15, initset, x16)\n    x18 = fork(add, identity, x17)\n    x19 = compose(x14, x18)\n    x20 = fork(insert, x19, x6)\n    x21 = compose(x15, x20)\n    x22 = fork(subtract, x21, x18)\n    x23 = compose(x17, x22)\n    x24 = fork(subtract, x23, x16)\n    x25 = fork(insert, x24, x6)\n    x26 = compose(x21, x25)\n    x27 = fork(subtract, x26, x25)\n    x28 = rapply(x27, x7)\n    x29 = merge(x28)\n    x30 = cover(x14, x29)\n    x31 = argmax(x30, x29)\n    x32 = paint(x31, x3)\n    x33 = replace(x32, x9, replace(x30, x10)\n    x34 =2c2cce22(x31)\n    x35 = recolor(x34, x32)\n    x36 = lbind(shift, x31)\n    x37 = mapply(x36, x"], [1.1, "def solve_74a1ece0(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = palette(I)\n    x5 = remove(x3, x4)\n    x6 = lbind(colorcount, I)\n    x7 = argmax(x5, x6)\n    x8 = remove(x7, x5)\n    x9 = height(I)\n    x10 = increment(x9)\n    x11 = frontiers(I)\n    x12 = sfilter(x11, hline)\n    x13 = size(x12)\n    x14 = increment(x13)\n    x15 = divide(x10, x14)\n    x16 = width(I)\n    x17 = increment(x16)\n    x18 = frontiers(I)\n    x19 = sfilter(x18, vline)\n    x20 = size(x19)\n    x21 = increment(x20)\n    x22 = divide(x17, x21)\n    x23 = rbind(multiply, x15)\n    x24 = rbind(divide, x15)\n    x25 = compose(x23, x24)\n    x26 = fork(equality, identity, x25)\n    x27 = rbind(multiply, x22)\n    x28 = rbind(divide, x22)\n    x29 = compose(x27, x28)\n    x30 = fork(equality, identity, x29)\n    x31 = lbind(fork, both)\n    x32 = rbind(compose, first)\n    x33 = lbind(compose, x26)\n    x34 = lbind(rbind, subtract)\n    x35 = compose(x34, uppermost)\n    x36 = chain(x32, x33, x35)\n    x37 = rbind(compose, last)\n    x38 = lbind(compose, x30)\n    x39 = lbind(rbind, subtract)\n    x40 = compose(x39, leftmost)\n    x41 = chain(x37, x38, x40)\n    x42 = fork(x"], [1.1, "def solve_34c13905(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = lbind(contained, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = dmirror(I)\n    x5 = lbind(contained, ZERO)\n    x6 = compose(flip, x5)\n    x7 = sfilter(x4, x6)\n    x8 = compose(hperiod, asobject)\n    x9 = height(x3)\n    x10 = vsplit(x3, x9)\n    x11 = apply(x8, x10)\n    x12 = maximum(x11)\n    x13 = compose(hperiod, asobject)\n    x14 = height(x7)\n    x15 = vsplit(x7, x14)\n    x16 = apply(x13, x15)\n    x17 = maximum(x16)\n    x18 = ofcolor(I, ZERO)\n    x19 = asobject(I)\n    x20 = matcher(first, ZERO)\n    x21 = compose(flip, x20)\n    x22 = sfilter(x19, x21)\n    x23 = lbind(shift, x22)\n    x24 = height(I)\n    x25 = divide(x24, x17)\n    x26 = increment(x25)\n    x27 = width(I)\n    x28 = divide(x27, x12)\n    x29 = increment(x28)\n    x30 = invert(x26)\n    x31 = increment(x26)\n    x32 = interval(x30, x31, ONE)\n    x33 = invert(x29)\n    x34 = increment(x29)\n    x35 = interval(x33, x34, ONE)\n    x36 = product(x32, x35)\n    x37 = astuple(x17, x12)\n    x38 = lbind(multiply, x37)\n    x39 = apply(x38, x36)\n    x40 = mapply(x23, x39)\n    x41 = paint(I, x40)\n    O = subgrid(x18"], [1.1, "def solve_e30a35ae(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = asindices(I)\n    x2 = box(x1)\n    x3 = toobject(x2, I)\n    x4 = mostcolor(x3)\n    x5 = d23(I)\n    x6 = add(TWO, x5)\n    x7 = tojvec(x6)\n    x8 = increment(x14)\n    x9 = canvas(x4, x8)\n    x10 = asobject(I)\n    x11 = shift(x10, x7)\n    x12 = palette(x11)\n    x13 = lbind(chain, size)\n    x14 = rbind(x13, toindices)\n    x15 = lbind(lbind, contained)\n    x16 = lbind(sfilter, x11)\n    x17 = compose(x15, x16)\n    x18 = chain(x17, x9, normalize)\n    x19 = lbind(colorcount, I)\n    x20 = compose(x19, palette)\n    x21 = matcher(x20, TWO)\n    x22 = extract(x12, x21)\n    x23 = colorcount(I, x22)\n    x24 =count(x10, ZERO)\n    x25 = positive(x24)\n    x26 = branch(x25, x22, x25)\n    x27 = ofcolor(I, x22)\n    x28 =314187(x27)\n    x29 = ofcolor(I, TWO)\n    x30 = recolor(x22, x29)\n    x31 = leftmost(x30)\n    x32 = lowermost(x30)\n    x33 = matcher(first, ZERO)\n    x34 = rightmost(x30)\n    x35 = matcher(first, TWO)\n    x36 = leftmost(x30)\n    x37 = rightmost(x30)\n    x38 = paint(x32, x31)\n    x39 = paint(x38, x34)\n    x40 = greater(x39, x26)\n    x41 = branch(x40, x33, x35)\n    x42 = leftmost"], [1.1, "def solve_42df03fe(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = shape(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = height(I)\n    x5 = decrement(x4)\n    x6 = toivec(x5)\n    x7 = width(I)\n    x8 = decrement(x7)\n    x9 = tojvec(x8)\n    x10 = connect(x6, x9)\n    x11 = height(I)\n    x12 = halve(x11)\n    x13 = toivec(x12)\n    x14 = width(I)\n    x15 = decrement(x14)\n    x16 = astuple(x12, x15)\n    x17 = connect(x13, x16)\n    x18 = width(I)\n    x19 = halve(x18)\n    x20 = tojvec(x19)\n    x21 = height(I)\n    x22 = decrement(x21)\n    x23 = astuple(x22, x19)\n    x24 = connect(x20, x23)\n    x25 = astuple(x3, dmirror)\n    x24 = astuple(x10, cmirror)\n    x25 = astuple(x25, x24)\n    x26 = compose(x50, merge)\n    x27 = compose(x50, even)\n    x28 = fork(subtract, x26, x27)\n    x29 = fork(multiply, first, x28)\n    x30 = output(I, x11)\n    x31 = lbind(ofcolor, x30)\n    x32 = compose(x11, x30)\n    x33 = fork( difference, x29, x32)\n    x34 = rbind(toobject, I)\n    x35 = compose(x34, x30)\n    x36 = apply(x35, x3)\n    x37 = astuple(x31, x presents)\n    x38 = astuple(x37, x disagree)\n    x39 = initset(x38)\n    x40 = insert(x39, x"], [1.1, "def solve_35823430(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =548colors(I)\n    x2 = objects(I, T, F, F)\n    x3 = argmax(x2, size)\n    x4 = toindices(x3)\n    x5 = asindices(I)\n    x6 = corners(x5)\n    x7 = lbind(rbind, manhattan)\n    x8 = toindices(x3)\n    x9 = combine(x6, x8)\n    x10 = fill(I, TEN, x9)\n    x11 = fork(manhattan, identity, initset)\n    x12 = fork(add, identity, x11)\n    x13 = height(x10)\n    x14 = width(x10)\n    x15 =multiply(x14, x13)\n    x16 = increment(x15)\n    x17 = width(x5)\n    x18 = divide(x17, x12)\n    x19 = increment(x18)\n    x20 = height(x3)\n    x21 = subtract(x20, x16)\n    x22 = divide(x21, x12)\n    x23 = increment(x22)\n    x24 = repeat(x10, x21)\n    x25 = subtract(x23, x24)\n    x26 =split(x25, x8)\n    x27 = lbind(intersection, x19)\n    x28 = chain(positive, size, x27)\n    x29 = matcher(x28, ZERO)\n    x30 = partition(x26)\n    x31 = sfilter(x30, x29)\n    x32 =68b19color(I)\n    x33 = compose(flip, x31)\n    x34 = sfilter(x31, x33)\n    x35 = dmirror(x14)\n    x36 = mpapply(recolor, x35, x34)\n    x37 = paint(x10, x36)\n    x38 = toindices(x3)\n    x39 = apply(x37, x38)\n    x40 = fork(add, last, first)\n    x41 =1995(x83)"], [1.1, "def solve_3cac6b51(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = increment(x2)\n    x4 = interval(THREE, x3, ONE)\n    x5 = width(I)\n    x6 = halve(x5)\n    x7 = increment(x6)\n    x8 = interval(THREE, x7, ONE)\n    x9 = palette(I)\n    x10 = lbind(apply, toindices)\n    x11 = compose(x10, partition)\n    x12 = rbind(compose, palette)\n    x13 = lbind(lbind, contained)\n    x14 = compose(x12, x13)\n    x15 = lbind(chain, size)\n    x16 = rbind(x15, x14)\n    x17 = lbind(lbind, sfilter)\n    x18 = compose(x16, x17)\n    x19 = compose(positive, size)\n    x20 = lbind(sfilter, x9)\n    x21 = fork(matcher, x18, size)\n    x22 = chain(x19, x20, x21)\n    x23 = lbind(apply, shape)\n    x24 = chain(size, dedupe, x23)\n    x25 = matcher(x24, ONE)\n    x26 = lbind(apply, x11)\n    x27 = chain(size, dedupe, x26)\n    x28 = matcher(x27, TWO)\n    x29 = compose(size, dedupe)\n    x30 = fork(equality, size, x29)\n    x31 = fork(add, x22, x25)\n    x32 = fork(add, x28, x30)\n    x33 = fork(add, x31, x32)\n    x34 = multiply(TEN, TEN)\n    x35 = lbind(multiply, x34)\n    x36 = compose(x35, x33)\n    x37 = fork(add, x36, size)\n    x38 = lbind(vsplit, I)\n    x39 = apply(x38, x4)\n    x40 = lbind"], [1.1, "def solve_8a10fdcc(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = objects(I, F, T, T)\n    x2 = argmax(x1, size)\n    x3 = subgrid(x2, I)\n    x4 = normalize(x3)\n    x5 = replace(x3, ZERO, x4)\n    x6 = toindices(x4)\n    x7 = lbind(toindices, x6)\n    x8 = x7(x1)\n    x9 =3322696666602986756666\n    x10 = rbind(greater, ONE)\n    x11 = chain(x10, size, dedupe)\n    x12 = sfilter(x6, x11)\n    x13 = center(x12)\n    x14 = color(x12)\n    x15 = fill(x5, x14, x13)\n    x16 = objects(x15, T, F, T)\n    x17 = colorfilter(x16, x12)\n    x18 = rbind(toobject, x17)\n    x19 = chain(x18, color, x17)\n    x20 = rbind(colorcount, x14)\n    x21 = chain(x20, usgrid, x19)\n    x22 = fork(equality, x21, x19)\n    x23 = sfilter(x17, x22)\n    x24 = floindices(x23)\n    x25 = rbind(contained, x24)\n    x26 = lbind(index, x24)\n    x27 = compose(x25, x26)\n    x28 = fork(3355, x27, x26)\n    x29 = chain(x24, x27, x28)\n    x30 = fork(recolor, x29, x23)\n    x31 = mapply(x30, x23)\n    x32 = paint(x15, x31)\n    x33 = objects(x32, T, F, T)\n    x34 = rbind(adjacent, x2)\n    x35 = rbind(adjacent, x2)\n    x36 = fork(both, x34, x35)\n    x37 = sfilter(x33, x36"], [1.1, "def solve_13c9cced(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 = fgpartition(I)\n    x3 = objects(I, T, F, T)\n    x4 = rbind(valmax, width)\n    x5 = lbind(colorfilter, x3)\n    x6 = compose(x5, color)\n    x7 = compose(double, x4)\n    x8 = lbind(prapply, manhattan)\n    x9 = fork(x8, identity, identity)\n    x10 = lbind(remove, ZERO)\n    x11 = compose(x10, x9)\n    x12 = rbind(branch, NEG_TWO)\n    x13 = fork(x12, positive, decrement)\n    x14 = chain(x13, minimum, x11)\n    x15 = fork(add, x14, x7)\n    x16 = compose(x15, x6)\n    x17 = compose(invert, x16)\n    x18 = order(x2, x17)\n    x19 = rbind(argmin, centerofmass)\n    x20 = compose(initset, vmirror)\n    x21 = fork(insert, dmirror, x20)\n    x22 = fork(insert, cmirror, x21)\n    x23 = fork(insert, hmirror, x22)\n    x24 = compose(x19, x23)\n    x25 = apply(x24, x18)\n    x26 = size(x2)\n    x27 = apply(size, x2)\n    x28 = contained(ONE, x27)\n    x29 = increment(x26)\n    x30 = branch(x28, x26, x29)\n    x31 = double(x30)\n    x32 = decrement(x31)\n    x33 = apply(normalize, x25)\n    x34 = interval(ZERO, x30, ONE)\n    x35 = pair(x34, x34)\n    x36 = mpapply(shift, x33, x35)\n    x37 = astuple(x32, x32)\n    x38 = canvas(x1, x37)"], [1.1, "def solve_4a897ca3(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = astuple(RIGHT, DOWN)\n    x2 = astuple(DOWN, LEFT)\n    x3 = astuple(x1, x2)\n    x4 = astuple(LEFT, UP)\n    x5 = astuple(UP, RIGHT)\n    x6 = astuple(x4, x5)\n    x7 = combine(x3, x6)\n    x8 = height(I)\n    x9 = astuple(x8, ONE)\n    x10 = canvas(THREE, x9)\n    x11 = hconcat(x10, I)\n    x12 = height(x11)\n    x13 = width(x11)\n    x14 = decrement(x13)\n    x15 = tojvec(x14)\n    x16 = identity(DOWN)\n    x17 = connect(ORIGIN, x15)\n    x18 = fill(x11, THREE, x17)\n    x19 = identity(x13)\n    x20 = identity(x12)\n    x21 = identity(x12)\n    x22 = identity(F)\n    x23 = identity(I)\n    x24 = compose(first, first)\n    x25 = chain(first, last, x24)\n    x26 = compose(first, first)\n    x27 = chain(last, last, x26)\n    x28 = chain(first, first, first)\n    x29 = chain(first, last, last)\n    x30 = chain(first, first, last)\n    x31 = chain(last, first, last)\n    x32 = compose(decrement, x25)\n    x33 = compose(decrement, x27)\n    x34 = fork(astuple, x32, x33)\n    x35 = compose(decrement, x27)\n    x36 = fork(multiply, x30, x35)\n    x37 = fork(add, x29, x36)\n    x38 = compose(decrement, x28)\n    x39 = fork(multiply, x30, x38)\n    x40 = fork(add, x29, x39)\n    x41 = fork"], [1.1, "def solve_2ad55902(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = argmin(I, ORIGIN)\n    x2 =56528x1, ZERO)\n    x3 = flip(x2)\n    x4 = branch(x3, lefthalf, tophalf)\n    x5 = lbind(righthalf, I)\n    x6 = palette(I)\n    x7 = other(x6, ZERO)\n    x8 = rbind(colorcount, x7)\n    x9 = argmin(x2, x8)\n    x10 = rbind(colorcount, x7)\n    x11 = width(I)\n    x12 = decrement(x11)\n    x13 = tojvec(x12)\n    x14 = add(x13, UNITY)\n    x15 = multiply(x14, x12)\n    x16 = canvas(x7, x15)\n    x17 = ofcolor(I, x9)\n    x18 =(x17, x16)\n    x19 = rbind(contained, x18)\n    x20 = compose(x19, last)\n    x21 = sfilter(x17, x20)\n    x22 = compose(first, last)\n    x23 = fork( constructorform, first, last)\n    x24 = fork(equality, x22, x23)\n    x25 = sfilter(x21, x24)\n    x26 = undeman(x25)\n    O = replace(x16, x9, x26)\n    return O"], [1.1, "def solve_8a2862c0(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = partition(I)\n    x2 = product(x1, x1)\n    x3 = fork(equality, corners, toindices)\n    x4 = extract(x2, x3)\n    x5 = subgrid(x4, I)\n    x6 = objects(x5, T, F, F)\n    x7 =66916\n    \"\"\"\n    x8 = hsplit(x5, THREE)\n    x9 = merge(x8)\n    x10 = extract(x1, x9)\n    x11 = paint(x5, x10)\n    x12 = ofcolor(x11, ZERO)\n    x13 = first(x12)\n    x14 = ulcorner(x xx13)\n    x15 =68b1906(x14)\n    x16 = shift(x13, x15)\n    O = replace(x11, ZERO, FIVE)\n    return O"], [1.1, "def solve_698782f1(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = height(I)\n    x2 = width(I)\n    x3 = partition(I)\n    x4 = matcher(height, ONE)\n    x5 = fork(equality, toindices, x4)\n    x6 = sfilter(x3, x5)\n    x7 = sizefilter(x6, x2)\n    x8 = fork(adjacent, first, last)\n    x9 = compose(flip, x8)\n    x10 = extract(x7, x9)\n    x11 = remove(x10, x7)\n    x12 = merge(x11)\n    x13 = width(x12)\n    x14 = totuple(x13)\n    x15 = first(x14)\n    x16 = last(x14)\n    x17 =2266(x15, x16)\n    x18 =88(x17, x12)\n    x19 = shape(x10)\n    x20 = canvas(ZERO, x19)\n    x21 =_hconcat(x18, x20)\n    x22 = objects(x21, color, recovered)\n    x23 = first(x22)\n    x24 = apply(ulcorner, x23)\n    x25 = normalize(x23)\n    x26 = matcher(first, ZERO)\n    x27 = compose(flip, x26)\n    x28 = sfilter(x24, x27)\n    x29 = lbind(shift, x28)\n    x30 = mapply(x29, x24)\n    O = paint(I, x30)\n    return O"], [1.1, "def solve_633b7a08(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = rot180(I)\n    x2 = rbind(sfilter, hline)\n    x3 = compose(size, dedupe)\n    x4 = matcher(x3, ONE)\n    x5 = rbind(sfilter, x4)\n    x6 = chain( size, x5, dmirror)\n    x7 =\n    x8 = x6(I)\n    x9 = objects(x7, T, F, F)\n    x10 = argmax(x9, size)\n    x11 = color(x10)\n    x12 = x2(x10)\n    x13 = objects(x7, T, F, F)\n    x14 = extensions(x13, x12)\n    x15 = rbind(shoot, DOWN)\n    x16 = leftmost(x15)\n    x17 = rbind(mapply, x16)\n    x18 = lbind(rbind, manhattan)\n    x19 = chain(x18, initset, x17)\n    x20 = fork(combine, x17, x19)\n    x21 = compose(x12, x20)\n    x22 = fork(shift, x21, ulcorner)\n    x23 = compose(x3, x22)\n    x24 = fork(intersection, x23, size)\n    x25 = fork(recolor, x23, x24)\n    x26 = compose(x3, x22)\n    x27 = fork(mapply, x26, x25)\n    x28 = interval(SIX, FOUR, ONE)\n    x29 = mapply(x27, x28)\n    x30 = mapply(x22, x29)\n    x31 = paint(x1, x30)\n    O = paint(x31, x304)\n    return O"], [1.1, "def solve_9730b7f2(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =233c669\n    2667526606\n    6362062184\n    3609967069\n    8680902806\n    6860166707\n    2116086365\n    7766369577\n    0769843602\n    \"\"\"\n    x2 = frontiers(I)\n    x3 = merge(x2)\n    x4 = difference(x5, x3)\n    x5 = mapply(toindices, x4)\n    x6 = objects(I, T, F, F)\n    x7 =x6(x5)\n    x8 = shift(x7, ulcorner)\n    x9 = mapply(toindices, x6)\n    x10 = mapply(toindices, x9)\n    x11 = fill(I, FOUR, x5)\n    x12 = fill(x11, TWO, x10)\n    x13 = rbind(a61f2674\n    x14 = rbind(toobject, I)\n    x15 = chain(x13, x14, delta)\n    x16 = x15(x6)\n    x17 = fill(x12, TWO, x16)\n    x18 = color(x2)\n    x19 = fill(x17, x18, x20)\n    x20 = objects(x19, T, F, F)\n    x21 = apply(toindices, x20)\n    x22 = apply(x21, x12)\n    x23 = normalize(x22)\n    x24 = lbind(shift, x23)\n    x25 = mapply(x24, x2)\n    O = paint(x19, x25)\n    return O"], [1.1, "def solve_3fbdd3ab(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    O = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(dmirror, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"], [1.1, "def solve_a5295d96(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 =80(I)\n    x2 = objects(I, T, F, T)\n    x3 = sizefilter(x2, ONE)\n    x4 = difference(x2, x3)\n    x5 = apply(color, x4)\n    x6 = rbind(contained, x5)\n    x7 = compose(x6, color)\n    x8 = sfilter(x3, x7)\n    x9 = lbind(colorfilter, x4)\n    x10 = chain(first, x9, color)\n    x11 = fork(gravitate, identity, x10)\n    x12 = fork(shift, identity, x11)\n    x13 = mapply(x12, x8)\n    O = paint(I, x13)\n    return O"], [1.1, "def solve_1a82dcaa(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = lbind(sfilter, x12)\n    x2 = lbind(matcher, first)\n    x3 = compose(x1, x2)\n    x4 = chain(size, x3, little)\n    x5 = fork(repeat, x3, x4)\n    x6 = compose(dmirror, x5)\n    x7 = fork(equality, identity, x6)\n    x8 =istine(I)\n    x9 = sfilter(x8, x7)\n    x10 = argmax(x9, x5)\n    x11 =002(x10, identity)\n    x12 = objects(x11, T, F, F)\n    x13 = merge(x12)\n    x14 = color(x13)\n    x15 = leftmost(x10)\n    x16 = interval(ONE, x15, ONE)\n    x17 = rbind(contained, x16)\n    x18 = compose(x17, last)\n    x19 = sfilter(x15, x18)\n    x20 = increment(x15)\n    x21 = rbind(contained, x20)\n    x22 = compose(x21, last)\n    x23 = fork(subtract, first, x22)\n    x24 = chain(increment, x23, last)\n    x25 = fork(greater, x24, identity)\n    x26 = compose(x25, last)\n    x27 = rbind(sfilter, x26)\n    x28 = chain(merge, x27, x24)\n    x29 = apply(x28, x19)\n    x30 = sfilter(x29, x5)\n    x31 = compose(vfrontier, x24)\n    x32 = x31(x30)\n    x33 = lbind(mapply, x36)\n    x34 = rbind(sfilter, x33)\n    x35 = compose(x34, x24)\n    x36 = pair(x32, x35)\n    x37 = mapply(x36, x22)\n    O = underfill(x11, x paint, x37)\n    return O"], [1.1, "def solve_56b32cb2(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = compose(first, last)\n    x4 = totuple(x2)\n    x5 = apply(x3, x4)\n    x6 = mostcommon(x5)\n    x7 = compose(last, last)\n    x8 = totuple(x2)\n    x9 = apply(x7, x8)\n    x10 = mostcommon(x9)\n    x11 = compose(first, last)\n    x12 = matcher(x11, x6)\n    x13 = sfilter(x2, x12)\n    x14 = compose(last, last)\n    x15 = matcher(x14, x10)\n    x16 = sfilter(x2, x15)\n    x17 =88bind(astuple, x13)\n    x18 = initset(x17)\n    x19 = matcher(first, x6)\n    x20 = compose(flip, x19)\n    x21 = mfilter(x18, x20)\n    O = fill(I, TWO, x21)\n    return O"], [1.1, "def solve_8a32ee85(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 =2217a3322\n    x2 =711213578\n    x3 =4421417dc433765\n    5224774785    7995ad74\n    1863443112\n    3207563528\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =22ofcolor(I, x1)\n    x3 =444(TWO, x2)\n    x4 = neighbors(UNITY)\n    x5 = recolor(x1, x4)\n    x6 = asindices(I)\n    x7 = outbox(x6)\n    x8 = lbind(shift, x7)\n    x9 = mapply(x8, x5)\n    x10 = combine(x4, x9)\n    O = paint(I, x10)\n    return O"], [1.1, "def solve_2263002b(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = shape(I)\n    x5 = canvas(x3, x4)\n    x6 = hconcat(I, x5)\n    x7 = palette(I)\n    x8 = remove(x3, x7)\n    x9 = lbind(colorcount, I)\n    x10 = argmin(x8, x9)\n    x11 = other(x8, x10)\n    x12 = objects(x6, T, F, T)\n    x13 = colorfilter(x12, x11)\n    x14 = rbind(manhattan, x8)\n    x15 = argmin(x13, x14)\n    x16 = ofcolor(x15, x10)\n    x17 = hmirror(x16)\n    x18 = invert(x17)\n    x19 =18(TWO)\n    x20 = shift(x18, x19)\n    x21 = lbind(shift, x20)\n    x22 = rbind( toobject, x25)\n    x23 = mostcolor(x22)\n    x24 = lbind(shift, x25)\n    x25 = rbind(toobject, x6)\n    x26 = mapply(x24, x21)\n    x27 = combine(x23, x26)\n    x28 = rbind(contained, x27)\n    x29 = apply(x28, x27)\n    x30 =gravitate(x29, x28)\n    x31 = rbind(add, x29)\n    x32 = initset(x15)\n    x33 = rbind(add, x32)\n    x34 = fork(subtract, x33, x31)\n    x35 = fork(shift, identity, x34)\n    x36 = mapply(x35, x30)\n    O = paint(x15, x36)\n    return O"], [1.1, "def solve_4245c791(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =225(I)\n    x2 = objects(x1, T, F, T)\n    x3 = argmax(x2, size)\n    x4 = apply(ulcorner, x2)\n    x5 = normalize(x3)\n    x6 = lbind(shift, x5)\n    x7 = mapply(x6, x4)\n    O = paint(x1, x7)\n    return O"], [1.1, "def solve_2e959a4a(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 =91 thing(I, T, F, T)\n    x2 = matcher(size, TWO)\n    x3 = mfilter(x1, x2)\n    x4 = matcher(size, ONE)\n    x5 = mfilter(x1, x4)\n    x6 = matcher(size, FOUR)\n    x7 = mfilter(x1, x6)\n    x8 = fill(I, THREE, x3)\n    x9 = fill(x8, TWO, x5)\n    O = fill(x9, ONE, x7)\n    return O"], [1.1, "def solve_8115fd37(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = sfilter(I, x2)\n    x4 = totuple(x3)\n    x5 = apply(color, x4)\n    x6 = mostcommon(x5)\n    x7 =422(x4, identity)\n    x8 = lbind(matcher, x7)\n    x9 = compose(x8, color)\n    x10 = fork(sfilter, identity, x9)\n    x11 = size(x1)\n    x12 =objects(I)\n    x13 = rbind(colorcount, x6)\n    x14 = valmax(x12, x13)\n    x15 = rbind(colorcount, x6)\n    x16 = matcher(x15, x14)\n    x17 = mfilter(x12, x16)\n    x18 =82(I, x17)\n    x19 = replace(x18, x6, x1)\n    O = fill(x19, ZERO, x17)\n    return O"], [1.1, "def solve_20395068(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = rbind(greater, TWO)\n    x2 = chain(x1, minimum, shape)\n    x3 = objects(I, T, F, F)\n    x4 = sfilter(x3, x2)\n    x5 = fork(equality, toindices, box)\n    x6 = sfilter(x4, x5)\n    x7 = totuple(x6)\n    x8 = apply(color, x7)\n    x9 = leastcommon(x8)\n    x10 = ofcolor(I, x9)\n    x11 = inbox(x10)\n    x12 = recolor(ZERO, x11)\n    x13 = occurrences(I, x12)\n    x14 = normalize(x10)\n    x15 = shift(x14, NEG_UNITY)\n    x16 = combine(x13, x15)\n    x17 = shape(I)\n    x18 = maximum(x17)\n    x19 = lbind(shift, x17)\n    x20 = mapply(x19, x16)\n    x21 = paint(I, x20)\n    x22 = toindices(x5)\n    x23 = center(x22)\n    x24 = initset(x23)\n    x25 = insert(x24, x1)\n    x26 = insert(x35, x25)\n    x27 = dmirror(x26)\n    x28 = lbind(shift, x27)\n    x29 = apply(x28, x24)\n    x30 =393(x21)\n    x31 = rbind(rapply, x30)\n    x32 = apply(x31, x22)\n    x33 = mapply(x32, x29)\n    O = fill(x21, x9, x33)\n    return O"], [1.1, "def solve_f60ebd4b(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    O =19985 to86(I):\n    return O"], [1.1, "def solve_eed37371(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = lbind(greater, THREE)\n    x2 = compose(x1, size)\n    x3 = sfilter(I, x2)\n    x4 = apply(normalize, x3)\n    x5 = mapply(toindices, x4)\n    x6 = difference(x5, x4)\n    x7 = fill(I, EIGHT, x6)\n    x8 = index(x7, ORIGIN)\n    x9 = colorcount(x7, ZERO)\n    x10 = positive(x9)\n    x11 = branch(x10, dmirror, identity)\n    x12 = x11(x7)\n    x13 = objects(x12, T, F, T)\n    x14 =454(x13)\n    x15 =111(x14)\n    x16 = replace(x15, FIVE, ZERO)\n    O = x11(x16)\n    return O"], [1.1, "def solve_9c95dec5(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = ofcolor(I, TWO)\n    x3 = argmax(x1, size)\n    x4 = subgrid(x2, I)\n    x5 = normalize(x3)\n    x6 = replace(x4, TWO, ZERO)\n    x7 = lbind(insert, x6)\n    x8 = chain(x7, ulcorner, last)\n    x9 = x8(x5)\n    x10 = lbind(recolor11\n    \n    x11 = rbind(ofcolor, TWO)\n    x12 = compose(x10, x11)\n    x13 = fork(paint, identity, x12)\n    x14 = height(x5)\n    x15 = vsplit(x5, x14)\n    x16 = mapply(x6, x15)\n    x17 = ofcolor(x16, TWO)\n    x18 = compose(x3, x17)\n    x19 = x18(x5)\n    x20 = gravitate(x19, x17)\n    O = fill(x9, ZERO, x20)\n    return O"], [1.1, "def solve_ce11ddca(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =445(I)\n    x2 =1168838699464(x1, ONE)\n    x3 = leastcolor(x2)\n    x4 = ofcolor(I, x3)\n    x5 = fill(I, ZERO, x4)\n    x6 = ofcolor(I, x4)\n    x7 = box(x6)\n    x8 = fill(x5, x3, x7)\n    x9 = mapply(delta, x8)\n    O = fill(x9, x4, xExample output:\n    8888888044\n    8649488800\n    1248042948\n    80146180036\n    8848856486\n    36683484853\n    1326880488\n    8684486648\n    8883248536\n    4874225538\n    \"\"\"\n    x1 = fill(x8, x3, x2)\n    O = fill(x1, x4, x3)\n    return O"], [1.1, "def solve_531d3962(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 =9999(I, T31)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(x3, ONE)\n    x5 = branch(x4, dmirror, identity)\n    x6 = branch(x4, height, width)\n    x7 = x6(I)\n    x8 = astuple(ONE, x7)\n    x9 = x5(I)\n    x10 = crop(x9, ORIGIN, x8)\n    x11 = apply(dedupe, x10)\n    O = x5(x11)\n    return O"], [1.1, "def solve_a23eff2b(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = mostcolor(I)\n    x2 =03733(I)\n    x3 = matcher(first, x1)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x2, x4)\n    x6 = partition(I)\n    x7 = fork(multiply, height, width)\n    x8 = fork(equality, size, x7)\n    x9 = sfilter(x6, x8)\n    x10 = argmax(x9, size)\n    x11 = difference(x5, x10)\n    x12 = apply(initset, x11)\n    x13 = rbind(hmatching, x10)\n    x14 = rbind(vmatching, x10)\n    x15 = fork(either, x13, x14)\n    x16 = sfilter(x12, x15)\n    x17 = rbind(gravitate, x10)\n    x18 = fork(add, center, x17)\n    x19 = fork(connect, center, x18)\n    x20 = fork(recolor, color, x19)\n    x21 = mapply(x20, x16)\n    O = paint(I, x21)\n    return O"], [1.1, "def solve_a10739a5(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = lbind(canvas, ZERO)\n    x2 = lbind(occurrences, I)\n    x3 = compose(x1, x2)\n    x4 = fork(apply, x3, leastcolor)\n    x5 = compose(maximum, x4)\n    x6 = compose(subtract, x5)\n    x7 = fork(astuple, x6, identity)\n    x8 = apply(x7, I)\n    x9 = maximum(x8)\n    x10 = dmirror(I)\n    x11 = x9(x10)\n    x12 = dmirror(x11)\n    x13 = x7(x12)\n    x14 = width(x11)\n    x15 = astuple(x14, x13)\n    x16 = repeat(x15, ONE)\n    x17 = output:\n    171\n    516\n    \"\"\"\n    x1 = x9(I)\n    x2 = fork(subtract, last, last)\n    x3 = compose(first, x2)\n    x4 = extract(x1, x3)\n    x5 = x4(x1)\n    x6 = last(x5)\n    x7 = compose(first, last)\n    x8 = difference(x5, x6)\n    x9 = file(x8, x7)\n    x10 = matcher(first, x6)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x9, x11)\n    O = fill(x6, TWO, x12)\n    return O"], [1.1, "def solve_0e025c9a(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 =33177(I,33177)\n    x2 = equality(x1, ZERO)\n    x3 = branch(x2, UP, RIGHT)\n    x4 = branch(x3, DOWN, RIGHT)\n    x5 = multiply(x4, x4)\n    x6 = add(x5, TWO)\n    O = canvas(ZERO, x5)\n    return O"], [1.1, "def solve_859b4d13(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = argmax(x1, size)\n    x3 = color(x2)\n    x4 = leftmost(x2)\n    x5 = width(I)\n    x6 = interval(x4, x5, TWO)\n    x7 = apply(tojvec, x6)\n    x8 = astuple(x interval, x4)\n    x9 = lbind(canvas, ZERO)\n    x10 = lbind(occurrences, I)\n    x11 = lbind(lbind, shift)\n    x12 = compose(x11, last)\n    x13 = lbind(recolor, x3)\n    x14 =decrement(x5)\n    x15 =853000(x14, x12)\n    x16 = paint(I, x15)\n    x17 = interval(x5, x16, ONE)\n    x18 = ofcolor(x16, x3)\n    x19 = rbind(ofcolor, x3)\n    x20 = compose(x19, center)\n    x21 = fork(recolor, x20, last)\n    x22 = mapply(x21, x17)\n    O = paint(x16, x22)\n    return O"], [1.1, "def solve_8611488f(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =4468117(I)\n    x2 = crop(x1, ORIGIN, THREE_BY_THREE)\n    O = rot90(x2)\n    return O"], [1.1, "def solve_887ebcd9(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = merge(x1)\n    x3 = palette(x2)\n    x4 = height(I)\n    x5 = width(I)\n    x6 = matcher(925, x4)\n    x7 =16(I)\n    x8 = extract(x3, x6)\n    x9 = partition(x8)\n    x10 = sizefilter(x9, ONE)\n    x11 = lbind(greater, ONE)\n    x12 = compose(x11, size)\n    x13 = argmin(x10, x12)\n    x14 = palette(x13)\n    x15 = remove(x8, x14)\n    x16 = other(x15, x13)\n    x17 = palette(x13)\n    x18 = vmirror(x17)\n    x19 = lbind(shift, x18)\n    x20 = mapply(x19, x17)\n    x21 = ofcolor(x13, x16)\n    x22 = ofcolor(x18, x16)\n    x23 = combine(x21, x22)\n    x24 = fill(x13, ZERO, x23)\n    x25 = difference(x19, x23)\n    x26 = objects(x24, F, T, T)\n    x27 = rbind(adjacent, x26)\n    x28 = rbind(adjacent, x25)\n    x29 = extract(x27, x28)\n    x30 = initset(x29)\n    x31 = recolor(x16, x30)\n    x32 = combine(x27, x31)\n    x33 = fork(combine, vfrontier, hfrontier)\n    x34 = mapply(x33, x32)\n    O = fill(x24, x20, x34)\n    return O"], [1.1, "def solve_0a37c001(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = objects(I, T, F, F)\n    x2 = sizefilter(x1, ONE)\n    x3 = compose(neighbors, center)\n    x4 = fork(recolor, color, x3)\n    x5 = compose(decrement,472)\n    x6 = apply(x4, x2)\n    x7 = order(x6, identity)\n    x8 = compose(last, last)\n    x9 = compose(8042, x8)\n    x10 = apply(x9, x7)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = sfilter(x10, x11)\n    x14 = sfilter(x12, x7)\n    x15 = merge(x13)\n    x16 =9999512(x15)\n    x17 = mapply(x4, x13)\n    x18 = mapply(x4, x14)\n    x19 = paint(I, x13)\n    x20 = paint(x19, x18)\n    O = paint(x20, x17)\n    return O"], [1.1, "def solve_a854a2b4(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = leastcolor(I)\n    x2 = ofcolor(I, x1)\n    x3 =94a9b722(x2)\n    x4 = toindices(x3)\n    x5 = compose(double, halve)\n    x6 = fork(equality, identity, x5)\n    x7 = compose(x6, last)\n    x8 = sfilter(x4, x7)\n    x9 = fill(I, x1, x8)\n    O = replace(x9, FIVE, ZERO)\n    return O"], [1.1, "def solve_65464a30(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 =184(I)\n    x2 =754(I)\n    x3 = urcorner(x2)\n    x4 = shoot(x3, UP_RIGHT)\n    x5 =87(x4)\n    x6 = branch(x1, x5, x4)\n    O = crop(I, x3, x6)\n    return O"], [1.1, "def solve_cc1490c8(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 =0000000(I)\n    x2 =0000000(I)\n    x3 =0000000(I)\n    x4 = neighbors(ORIGIN)\n    x5 = mapply(neighbors, x4)\n    x6 = lbind(shift, x1)\n    x7 = apply(x6, x5)\n    x8 = lbind(recolor, TWO)\n    x9 = mapply(x8, x7)\n    O = paint(I, x9)\n    return O"], [1.1, "def solve_b0e08ea9(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 =279(I)\n    x2 = portrait(x1)\n    x3 = branch(x2, identity, dmirror)\n    x4 = x3(I)\n    x5 = asindices(x4)\n    x6 = shoot(ORIGIN, UNITY)\n    x7 = intersection(x5, x6)\n    x8 = lrcorner(x7)\n    x9 = shoot(x8, DOWN_LEFT)\n    x10 = intersection(x7, x9)\n    x11 = combine(x7, x10)\n    x12 = llcorner(x11)\n    x13 = remove(x12, x11)\n    x14 = lbind(shift, x13)\n    x15 = height(x12)\n    x16 = lbind(multiply, x15)\n    x17 = chain(x14, width, x16)\n    x18 = fgpartition(x4)\n    x19 = sizefilter(x18, FOUR)\n    x20 = fork(equality, toindices, x19)\n    x21 = sfilter(x19, x20)\n    x22 = mapply(x17, x21)\n    x23 = paint(x4, x22)\n    x24 = quotecdecrement(x5)\n    x25 =O = crop(x23, x24, x20)\n    O = x3(x25)\n    return O"], [1.1, "def solve_29fdfe4d(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = trim(I)\n    x2 = tophalf(x1)\n    x3 = lefthalf(x2)\n    x4 = tophalf(x3)\n    x5 = righthalf(x3)\n    x6 = bottomhalf(x3)\n    x7 = lefthalf(x5)\n    x8 = bottomhalf(x5)\n    x9 = righthalf(x6)\n    x10 = index(I, ORIGIN)\n    x11 = width(I)\n    x12 = decrement(x11)\n    x13 = tojvec(x12)\n    x14 = index(I, x13)\n    x15 = height(I)\n    x16 = decrement(x15)\n    x17 = toivec(x16)\n    x18 = index(I, x17)\n    x19 = shape(I)\n    x20 = decrement(x19)\n    x21 = index(I, x20)\n    x22 = compress(I)\n    x23 = asindices(x22)\n    x24 = box(x23)\n    x25 = fill(x22, x24, x23)\n    x26 =000000(x25)\n    O = replace(x26, x18, x20)\n    return O"], [1.1, "def solve_c5ddb86f(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = SEVEN(I)\n    x2 =matcher(first, ZERO)\n    x3 = rbind(s16, THREE)\n    x4 = compose(x2, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = lbind(toobject, x5)\n    x7 = chain(x1, x5, x6)\n    x8 = astuple(numcolors, ONE)\n    x9 = x7(x8)\n    x10 = decrement(x9)\n    x11 =1(x10)\n    x12 = subtract(x11, x10)\n    x13 = recolor(ZERO, x112)\n    x14 = paint(I, x13)\n    x15 = hsplit(x14, THREE)\n    x16 = first(x15)\n    x17 = last(x15)\n    x18 = vmirror(x17)\n    x19 = hconcat(x16, x18)\n    x20 = hmirror(x19)\n    x21 = vconcat(x19, x20)\n    x22 = vconcat(x21, x22)\n    O = hmirror(x22)\n    return O"], [1.1, "def solve_cd005206(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 =445(I)\n    x2 = decrement(x1)\n    x3 = connect(ORIGIN, x2)\n    x4 = compose(flip, x3)\n    x5 = sfilter(x1, x4)\n    x6 = fork(multiply, height, width)\n    x7 = halve(x5)\n    x8 = lefthalf(I)\n    x9 = righthalf(I)\n    x10 = connect(x8, x9)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x10, x11)\n    x13 = size(x12)\n    x14 = positive(x13)\n    x15 = branch(x14, vsplit, hsplit)\n    x16 = x15(I, TWO)\n    x17 = first(x16)\n    x18 = last(x16)\n    x19 = palette(x17)\n    x20 = palette(x18)\n    x21 = intersection(x19, x20)\n    x22 = first(x21)\n    x23 = shape(x17)\n    x24 = canvas(x22, x23)\n    x25 = ofcolor(x17, x22)\n    x26 = ofcolor(x18, x22)\n    x27 = intersection(x25, x26)\n    O = fill(x24, TWO, x27)\n    return O"], [1.1, "def solve_7fc9d2a4(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = tophalf(I)\n    x2 = bottomhalf(I)\n    x3 = objects(x1, T, F, F)\n    x4 = colorfilter(x3, ZERO)\n    x5 = difference(x3, x4)\n    x6 = merge(x5)\n    x7 = color(x6)\n    x8 = lbind(recolor, NEG_ONE)\n    x9 = rbind(ofcolor, x7)\n    x10 = chain(x8, x9, backdrop)\n    x11 = fork(paint, identity, x10)\n    x12 =1111(x11, x5)\n    x13 = dmirror(x12)\n    x14 = ulcorner(x2)\n    x15 = lrcorner(x2)\n    x16 = shape(x12)\n    x17 = add(x16, UP_RIGHT)\n    x18 = add(x14, DOWN_LEFT)\n    x19 = shift(x13, x17)\n    x20 = x15(x19)\n    x21 = paint(x12, x20)\n    O = paint(x21, x3)\n    return O"], [1.1, "def solve_0ae8b0f1(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = ONE)\n    x2 = dedupe(x1)\n    x3 = size(x2)\n    x4 = equality(x3, ONE)\n    x5 = branch(x4, dmirror, identity)\n    x6 = x5(I)\n    x7 = objects(x6, T, F, F)\n    x8 = order(x7, leftmost)\n    x9 = apply(color, x8)\n    x10 = repeat(x9, ONE)\n    O = x5(x10)\n    return O"], [1.1, "def solve_484b562b(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 =173(I)\n    x2 = frontiers(I)\n    x3 = merge(x2)\n    x4 = difference(x1, x3)\n    x5 = mostcolor(x4)\n    x6 = objects(I, T, F, F)\n    x7 = color(x3)\n    x8 = matcher(color, x7)\n    x9 = matcher(color, x5)\n    x10 = fork(either, x8, x9)\n    x11 = compose(flip, x10)\n    x12 = sfilter(x6, x11)\n    x13 = merge(x12)\n    x14 = palette(x13)\n    x15 = lbind(mfilter, x12)\n    x16 = lbind(matcher,color)\n    x17 = compose(x15, x16)\n    x18 = apply(x17, x14)\n    x19 = fork(either, vline, hline)\n    x20 = lbind(prapply, connect)\n    x21 = fork(x20, identity, identity)\n    x22 = compose(x21, toindices)\n    x23 = rbind(sfilter, x19)\n    x24 = chain(merge, x23, x22)\n    x25 = fork(recolor, color, x24)\n    x26 = mapply(x25, x18)\n    x27 = paint(I, x26)\n    O = paint(x27, x3)\n    return O"], [1.1, "def solve_0a2d7acf(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = Turtle\n    5555558555\n    5558558555\n    5015585569\n    \"\"\"\n    x1 = portrait(I)\n    x2 = branch(x1, dmirror, identity)\n    x3 = x2(I)\n    x4 = objects(x3, T, F, T)\n    x5 = argmin(x4, leftmost)\n    x6 = argmax(x4, leftmost)\n    x7 = color(x5)\n    x8 = color(x6)\n    x9 = leftmost(x5)\n    x10 = leftmost(x6)\n    x11 = subtract(x10, x9)\n    x12 = double(x11)\n    x13 = multiply(THREE, TEN)\n    x14 = interval(x9, x13, x12)\n    x15 = interval(x10, x13, x12)\n    x16 = compose(vfrontier, tojvec)\n    x17 = mapply(x16, x14)\n    x18 = mapply(x16, x15)\n    x19 = recolor(x7, x17)\n    x20 = recolor(x8, x18)\n    x21 = combine(x19, x20)\n    x22 = paint(x3, x21)\n    O = x2(x22)\n    return O"], [1.1, "def solve_58fe9c06(I):\n    \"\"\"\n    Example input:\n    3227064140\n    0465796134\n    5580295972\n    8601789067\n    3868348378\n    2934465169\n    7184036429\n    8551844953\n    3954019249\n    4770472566\n    Example output:\n    4888180284\n    8962958204\n    1284367524\n    7010461866\n    1656522552\n    8637305305\n    1326804857\n    6600283566\n    8239985706\n    8638755532\n    \"\"\"\n    x1 = fgpartition(I)\n    x2 = matcher(ineighbors, UNITY)\n    x3 = extract(x1, x2)\n    x4 = mostcolor(I)\n    x5 = shape(x3)\n    x6 = canvas(x4, x5)\n    x7 = hconcat(x3, x6)\n    x8 = objects(x7, F, T, T)\n    x9 = argmin(x8, size)\n    x10 = normalize(x9)\n    x11 = toindices(x10)\n    x12 = increment(x5)\n    x13 = increment(x12)\n    x14 = shift(x11, x13)\n    x15 = shift(x11, x14)\n    x16 =100(x15)\n    x17 = ulcorner(x10)\n    x18 = urcorner(x15)\n    x19 = shoot(x17, NEG_UNITY)\n    x20 = shoot(x18, DOWN_LEFT)\n    x21 = combine(x19, x20)\n    x22 = combine(x18, x21)\n    x23 = x5(x22)\n    O = fill(x6, x4, x23)\n    return O"], [1.1, "def solve_670c1eae(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = frontiers(I)\n    x2 = merge(x1)\n    x3 = color(x2)\n    x4 = width(I)\n    x5 = astuple(x4, x4)\n    x6 = canvas(x3, x5)\n    x7 = interval(ONE,SIX, ONE)\n    x8 = invert(TEN)\n    x9 = interval(x8, TEN, ONE)\n    x10 = product(x7, x9)\n    x11 = rbind(multiply, THREE)\n    x12 = rbind(divide, THREE)\n    x13 = apply(x11, x10)\n    x14 = apply(x12, x10)\n    x15 = divide(x4, x4)\n    x16 = width(I)\n    x17 = interval(ZERO, x16, ONE)\n    x18 = height(I)\n    x19 = interval(ZERO, x18, ONE)\n    x20 = pair(x19, x14)\n    x21 = apply(x11, x20)\n    x22 = apply(box, x21)\n    x23 = pair(x21, x22)\n    x24 = mapply(to fill, x23, THREE)\n    O = fill(x24, FOUR, x2)\n    return O"], [1.1, "def solve_20156c2f(I):\n    \"\"\"\n    Example input:\n    9562029386\n    7354915509\n    1222981558\n    5504713515\n    8471779002\n    5441922220\n    2111882151\n    4901711479\n    6419065604\n    0575802872\n    Example output:\n    4372481113\n    8133863772\n    8682738919\n    3016494305\n    6539237861\n    8077182461\n    9282557082\n    6928128803\n    8363116386\n    2058836187\n    \"\"\"\n    x1 = rot270(I)\n    x2 = hconcat(I, x1)\n    x3 = mapply(d4469remove, x2)\n    x4 =O = rot90(x2)\n    x5 =180(x4)\n    x6 = astuple(x5, x4)\n    x7 = x8(I)\n    x8 = x9(x7)\n    x9 = rot270(x8)\n    x10 = hconcat(x9, x1)\n    x11 = hconcat(x10, x8)\n    O = vconcat(x9, x11)\n    return O"], [1.1, "def solve_16f7ed9d(I):\n    \"\"\"\n    Example input:\n    2133886275\n    6717466135\n    6690813759\n    4160260415\n    8141126782\n    8682432468\n    7229931107\n    0261428894\n    2172507592\n    0746306905\n    Example output:\n    8256921443\n    2215118288\n    0294547419\n    5003713038\n    5602857554\n    4243843054\n    5079616852\n    8263415798\n    1431700641\n    9879433299\n    \"\"\"\n    x1 = rbind(Sfilter, ORIG2)\n    x2 = compose(dmirror, x1)\n    x3 = chain(size, dedupe, x2)\n    x4 = matcher(x3, ONE)\n    x5 = compose(71,042)\n    x6 = difference(x1, x5)\n    x7 = astuple(ONE, THREE)\n    x8 = astuple(TWO, FOUR)\n    x9 = initset(x7)\n    x10 = insert(x8, x9)\n    x11 = insert(x4, x10)\n    x12 = insert(x501, x11)\n    x13 = lbind(ofcolor, I)\n    x14 = lbind(mapply, neighbors)\n    x15 = chain(x14, x13, x141)\n    x16 = fork(difference, x15, identity)\n    x17 = chain(size, x13, x16)\n    x18 = matcher(x17, ZERO)\n    x19 = lbind(extract, x5)\n    x20 = chain(x19, x13, x141)\n    x21 = compose(last, x20)\n    x22 = fork(subtract, x21, x15)\n    x23 = chain(initset, x500, x22)\n    x24 = fork(rapply, x23, identity)\n    x25 = compose(first, x24)\n    x26 = compose(x5, x22)\n    x27 = fork(intersection, x26, x25)\n    x28 = chain(x19, x24, x27)\n    x29 = compose(x5, x27)\n    x30 = fork(intersection, x29, x28)\n    x31 = fork(recolor, color, x30)\n    x32 = mapply(x31, x12)\n    x33 = paint(I, x32)\n    O = trim(x33)\n    return O"], [1.1, "def solve_8b3368f7(I):\n    \"\"\"\n    Example input:\n    7686159768\n    6038864492\n    4637590694\n    2574092078\n    4597600047\n    3533698661\n    5630228103\n    2783604198\n    7114698629\n    5138320397\n    Example output:\n    2957021302\n    9005869138\n    3760766323\n    5408018827\n    5241346288\n    2796954902\n    7923425925\n    9048317871\n    5367697197\n    8195272481\n    \"\"\"\n    x1 = matcher(identity, ZERO)\n    x2 = compose(flip, x1)\n    x3 = rbind(sfilter, x2)\n    x4 = chain(positive, size, x3)\n    x5 = rbind(sfilter, x4)\n    x6 = compose(673ef23, x5)\n    x7 = power(x6, FOUR)\n    x8 = x7(I)\n    x9 = dedupe(x8)\n    x10 = dmirror(x9)\n    x11 = dedupe(x10)\n    O = dmirror(x11)\n    return O"]]}