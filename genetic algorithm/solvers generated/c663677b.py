def solve(I):
    x1 = palette(I)
    x2 = objects(I, T, F, F)
    x3 = lbind(colorfilter, x2)
    x4 = compose(size, x3)
    x5 = valmin(x1, x4)
    x6 = matcher(x4, x5)
    x7 = sfilter(x1, x6)
    x8 = lbind(colorcount, I)
    x9 = argmin(x7, x8)
    x10 = asobject(I)
    x11 = matcher(first, x9)
    x12 = compose(flip, x11)
    x13 = sfilter(x10, x12)
    x14 = lbind(contained, x9)
    x15 = compose(flip, x14)
    x16 = sfilter(I, x15)
    x17 = asobject(x16)
    x18 = hperiod(x17)
    x19 = dmirror(I)
    x20 = sfilter(x19, x15)
    x21 = asobject(x20)
    x22 = hperiod(x21)
    x23 = astuple(x22, x18)
    x24 = lbind(multiply, x23)
    x25 = neighbors(ORIGIN)
    x26 = mapply(neighbors, x25)
    x27 = apply(x24, x26)
    x28 = lbind(shift, x13)
    x29 = mapply(x28, x27)
    O = paint(I, x29)
    return O


def solve(I):
    x1 = height(I)
    x2 = width(I)
    x3 = partition(I)
    x4 = colorfilter(x3, ZERO)
    x5 = difference(x3, x4)
    x6 = merge(x5)
    x7 = astuple(x1, ONE)
    x8 = astuple(ONE, x2)
    x9 = decrement(x1)
    x10 = decrement(x2)
    x11 = toivec(x10)
    x12 = tojvec(x9)
    x13 = crop(I, x11, x8)
    x14 = crop(I, x12, x7)
    x15 = asobject(x14)
    x16 = asobject(x13)
    x17 = vperiod(x15)
    x18 = hperiod(x16)
    x19 = astuple(x17, x18)
    x20 = lbind(multiply, x19)
    x21 = neighbors(ORIGIN)
    x22 = mapply(neighbors, x21)
    x23 = apply(x20, x22)
    x24 = lbind(shift, x6)
    x25 = mapply(x24, x23)
    O = paint(I, x25)
    return O


def solve(I):
    x1 = height(I)
    x2 = width(I)
    x3 = partition(I)
    x4 = colorfilter(x3, ZERO)
    x5 = difference(x3, x4)
    x6 = merge(x5)
    x7 = astuple(x1, TWO)
    x8 = astuple(TWO, x2)
    x9 = power(decrement, TWO)
    x10 = x9(x1)
    x11 = x9(x2)
    x12 = toivec(x11)
    x13 = tojvec(x10)
    x14 = crop(I, x12, x8)
    x15 = crop(I, x13, x7)
    x16 = asobject(x15)
    x17 = asobject(x14)
    x18 = vperiod(x16)
    x19 = hperiod(x17)
    x20 = astuple(x18, x19)
    x21 = lbind(multiply, x20)
    x22 = neighbors(ORIGIN)
    x23 = mapply(neighbors, x22)
    x24 = apply(x21, x23)
    x25 = lbind(shift, x6)
    x26 = mapply(x25, x24)
    O = paint(I, x26)
    return O


def solve(I):
    x1 = palette(I)
    x2 = objects(I, T, F, F)
    x3 = lbind(colorfilter, x2)
    x4 = compose(size, x3)
    x5 = valmin(x1, x4)
    x6 = matcher(x4, x5)
    x7 = sfilter(x1, x6)
    x8 = lbind(colorcount, I)
    x9 = argmin(x7, x8)
    x10 = asobject(I)
    x11 = matcher(first, x9)
    x12 = compose(flip, x11)
    x12 = sfilter(x10, x12)
    x13 = lbind(contained, x9)
    x14 = compose(flip, x13)
    x15 = sfilter(I, x14)
    x16 = asobject(x15)
    x17 = hperiod(x16)
    x18 = dmirror(I)
    x19 = sfilter(x18, x14)
    x20 = asobject(x19)
    x21 = hperiod(x20)
    x22 = astuple(x21, x17)
    x23 = lbind(multiply, x22)
    x24 = neighbors(ORIGIN)
    x25 = mapply(neighbors, x24)
    x26 = apply(x23, x25)
    x27 = lbind(shift, x12)
    x28 = mapply(x27, x26)
    O = paint(I, x28)
    return O


def solve(I):
    x1 = palette(I)
    x2 = objects(I, T, F, F)
    x3 = lbind(colorfilter, x2)
    x4 = compose(size, x3)
    x5 = valmin(x1, x4)
    x6 = matcher(x4, x5)
    x7 = sfilter(x1, x6)
    x8 = lbind(colorcount, I)
    x9 = argmin(x7, x8)
    x10 = asobject(I)
    x11 = matcher(first, x9)
    x12 = compose(flip, x11)
    x13 = sfilter(x10, x12)
    x144 = lbind(contained, x9)
    x15 = compose(flip, x144)
    x16 = sfilter(I, x15)
    x17 = asobject(x16)
    x18 = hperiod(x17)
    x19 = dmirror(I)
    x20 = sfilter(x19, x15)
    x21 = asobject(x20)
    x22 = hperiod(x21)
    x23 = astuple(x22, x18)
    x24 = lbind(multiply, x23)
    x25 = neighbors(ORIGIN)
    x26 = mapply(neighbors, x25)
    x27 = apply(x24, x26)
    x28 = lbind(shift, x13)
    x29 = mapply(x28, x27)
    O = paint(I, x29)
    return O


def solve(I):
    x1 = palette(I)
    x2 = objects(I, T, F, F)
    x3 = lbind(colorfilter, x2)
    x4 = compose(size, x3)
    x5 = valmin(x1, x4)
    x6 = matcher(x4, x5)
    x7 = sfilter(x1, x6)
    x8 = lbind(colorcount, I)
    x9 = argmax(x7, x8)
    x10 = asobject(I)
    x11 = matcher(first, x9)
    x12 = compose(flip, x11)
    x13 = sfilter(x10, x12)
    x14 = lbind(contained, x9)
    x15 = compose(flip, x14)
    x16 = sfilter(I, x15)
    x17 = asobject(x16)
    x18 = hperiod(x17)
    x19 = dmirror(I)
    x20 = sfilter(x19, x15)
    x21 = asobject(x20)
    x22 = hperiod(x21)
    x23 = astuple(x22, x18)
    x24 = lbind(multiply, x23)
    x25 = neighbors(ORIGIN)
    x26 = mapply(neighbors, x25)
    x27 = apply(x24, x26)
    x28 = lbind(shift, x13)
    x2 = mapply(x28, x27)
    O = paint(I, x2)
    return O


def solve(I):
    x1 = palette(I)
    x2 = objects(I, T, F, F)
    x3 = lbind(colorfilter, x2)
    x4 = compose(size, x3)
    x5 = valmin(x1, x4)
    x6 = matcher(x4, x5)
    x7 = sfilter(x1, x6)
    x8 = lbind(colorcount, I)
    x9 = argmin(x7, x8)
    x10 = asobject(I)
    x11 = matcher(first, x9)
    x12 = compose(flip, x11)
    x13 = sfilter(x10, x12)
    x14 = lbind(contained, x9)
    x15 = compose(flip, x14)
    x16 = sfilter(I, x15)
    x17 = asobject(x16)
    x18 = hperiod(x17)
    x19 = dmirror(I)
    x20 = sfilter(x19, x15)
    x22 = asobject(x20)
    x23 = hperiod(x22)
    x24 = astuple(x23, x18)
    x25 = lbind(multiply, x24)
    x26 = neighbors(ORIGIN)
    x27 = mapply(neighbors, x26)
    x28 = apply(x25, x27)
    x29 = lbind(shift, x13)
    x30 = mapply(x29, x28)
    O = paint(I, x30)
    return O


def solve(I):
    x1 = palette(I)
    x2 = objects(I, T, F, F)
    x3 = lbind( colorfilter, x2)
    x4 = compose(size, x3)
    x5 = valmin(x1, x4)
    x6 = matcher(x4, x5)
    x7 = sfilter(x1, x6)
    x8 = lbind(colorcount, I)
    x9 = argmin(x7, x8)
    x10 = asobject(I)
    x11 = matcher(first, x9)
    x12 = compose(flip, x11)
    x13 = sfilter(x10, x12)
    x14 = lbind(contained, x9)
    x15 = compose(flip, x14)
    x16 = sfilter(I, x15)
    x17 = asobject(x16)
    x18 = hperiod(x17)
    x19 = dmirror(I)
    x20 = sfilter(x19, x15)
    x21 = asobject(x20)
    x22 = hperiod(x21)
    x23 = astuple(x22, x18)
    x24 = lbind(multiply, x23)
    x25 = neighbors(ORIGIN)
    x26 = mapply(neighbors, x25)
    x27 = apply(x24, x26)
    x28 = lbind(shift, x13)
    x29 = mapply(x28, x27)
    O = paint(I, x29)
    return O


def solve(I):
    x1 = palette(I)
    x2 = objects(I, T, F, F)
    x3 = lbind(colorfilter, x2)
    x4 = compose(size, x3)
    x5 = valmin(x1, x4)
    x6 = matcher(x4, x5)
    x7 = sfilter(x1, x6)
    x8 = lbind(colorcount, I)
    x9 = argmin(x7, x8)
    x10 = asobject(I)
    x11 = matcher(first, x9)
    x12 = compose(flip, x11)
    x13 = sfilter(x10, x12)
    x14 =  lbind(contained, x9)
    x15 = compose(flip, x14)
    x16 = sfilter(I, x15)
    x17 = asobject(x16)
    x18 = hperiod(x17)
    x19 = dmirror(I)
    x20 = sfilter(x19, x15)
    x21 = asobject(x20)
    x22 = hperiod(x21)
    x23 = astuple(x22, x18)
    x24 = lbind(multiply, x23)
    x25 = neighbors(ORIGIN)
    x26 = mapply(neighbors, x25)
    x27 = apply(x24, x26)
    x28 = lbind(shift, x13)
    x29 = mapply(x28, x27)
    O = paint(I, x29)
    return O


def solve(I):
    x1 = palette(I)
    x2 = objects(I, T, F, F)
    x3 = lbind(colorfilter, x2)
    x4 = compose(size, x3)
    x5 = valmin(x1, x4)
    x6 = matcher(x4, x5)
    x7 = sfilter(x1, x6)
    x8 = lbind(colorcount, I)
    x9 = argmin(x7, x8)
    x10 = asobject(I)
    x11 = matcher(first, x9)
    x12 = compose(flip, x11)
    x13 = sfilter(x10, x12)
    x54 = lbind(contained, x9)
    x55 = compose(flip, x54)
    x56 = sfilter(I, x55)
    x57 = asobject(x56)
    x58 = hperiod(x57)
    x59 = dmirror(I)
    x60 = sfilter(x59, x55)
    x61 = asobject(x60)
    x62 = hperiod(x61)
    x63 = astuple(x62, x58)
    x64 = lbind(multiply, x63)
    x65 = neighbors(ORIGIN)
    x66 = mapply(neighbors, x65)
    x67 = apply(x64, x66)
    x68 = lbind(shift, x13)
    x69 = mapply(x68, x67)
    O = paint(I, x69)
    return O


def solve(I):
    x1 = palette(I)
    x2 = objects(I, T, F, F)
    x3 = lbind(colorfilter, x2)
    x4 = compose(size, x3)
    x5 = valmin(x1, x4)
    x6 = matcher(x4, x5)
    x7 = sfilter(x1, x6)
    x8 = lbind(colorcount, I)
    x9 = argmin(x7, x8)
    x10 = asobject(I)
    x11 = matcher(first, x9)
    x12 = compose(flip, x11)
    x13 = sfilter(x10, x12)
    x14 = lbind(contained, x9)
    x15 = compose(flip, x14)
    x16 = sfilter(I, x15)
    x17 = asobject(x16)
    x18 = hperiod(x17)
    x19 = dmirror(I)
    x20 = sfilter(x19, x15)
    x21 = asobject(x20)
    x22 = hperiod(x21)
    x23 = ofcolor(I, x9)
    x24 = lbind(multiply, x22)
    x25 = neighbors(ORIGIN)
    x26 = mapply(neighbors, x25)
    x27 = apply(x24, x26)
    x28 = lbind(shift, x13)
    x29 = mapply(x28, x27)
    O = paint(I, x29)
    return O


def solve(I):
    x1 = palette(I)
    x2 = objects(I, T, F, F)
    x3 = lbind(colorfilter,x2)
    x4 = compose(size, x3)
    x5 = valmin(x1, x4)
    x6 = matcher(x4, x5)
    x7 = sfilter(x1, x6)
    x8 = lbind(colorcount, I)
    x9 = argmin(x7, x8)
    x10 = asobject(I)
    x11 = matcher(first, x9)
    x12 = compose(flip, x11)
    x13 = sfilter(x10, x12)
    x14 = lbind(contained, x9)
    x15 = compose(flip, x14)
    x16 = sfilter(I, x15)
    x17 = asobject(x16)
    x18 = hperiod(x17)
    x19 = dmirror(I)
    x20 = sfilter(x19, x15)
    x21 = asobject(x20)
    x22 = hperiod(x21)
    x23 = astuple(x22, x18)
    x24 = lbind(multiply, x23)
    x25 = neighbors(ORIGIN)
    x26 = mapply(neighbors, x25)
    x27 = apply(x24, x26)
    x28 = lbind(shift, x13)
    x29 = mapply(x28, x27)
    O = paint(I, x29)
    return O


